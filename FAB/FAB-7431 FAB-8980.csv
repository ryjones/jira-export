Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Issue split),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Why not use -o argument setting for ordererAddresses when 'peer node start' and 'peer channel join',FAB-7431,25406,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,meinvzou,meinvzou,12/Dec/17 4:05 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,29/Dec/17 7:36 PM,,,,Not a Bug,WON'T FIX,,,,,,0,,,,,,"Following the fabric-samples/basic-network demo, I'm now using command line to debug the source code.

1) $./orderer

2)$./peer node start

3)$./peer channel create -o 127.0.0.1:7050 -c mychannel -f /etc/hyperledger/configtx/channel.tx [connet with orderer 127.0.0.1:7050 successfully, create channel successfully]

{color:#ff0000}4)$./peer channel join -o 127.0.0.1:7050 -b mychannel.block [ problem occurs: failed to connect to orderer with addresses in mychannel.block as orderer.example.com:7050, not use the -o argument as 127.0.0.1:7050]{color}

{color:#ff0000}5)The same problem occurs as 4) while rerun the command as $./peer node start.{color}

 

As concerned, it would be better to use an orderer address specified in a command line before use the address hard coded in a config block, while considering orderer server's IP network changes in production environment. ",,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqqf:",,,,,,,,,,,,,,,,,,,,,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/17 10:19 PM;mastersingh24;This is intentional.  The only reason *peer channel create* takes the *-o* is because it actually directly communicates with the orderer to create the channel.  Other than that the peer will use the channel config info from the latest config block for the channel.  It is also a best practice not to use IP addresses but to use FQDN's instead for production environments;;;",,,,,,,,,,,,,,,,,,,,,,
chaincodespec type hard coded to 1 in createCIS() fabric/core/chaincode/chaincodeexec.go,FAB-7432,25407,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,tatsu-sato,meinvzou,meinvzou,12/Dec/17 4:28 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,01/Feb/18 5:52 AM,,,,,,,fabric-peer,,,,0,,,,,,"in fabric/core/chaincode/chaincodeexec.go 
 func createCIS()
 the code below:

spec := &pb.ChaincodeInvocationSpec\{ChaincodeSpec: &pb.ChaincodeSpec\{Type: 1, ChaincodeId: &pb.ChaincodeID\{Name: ccname}, Input: &pb.ChaincodeInput\{Args: args}}}
 would be better for reading to change to :
 spec := &pb.ChaincodeInvocationSpec\{ChaincodeSpec: &pb.ChaincodeSpec\{Type: pb.ChaincodeSpec_Type(pb.ChaincodeSpec_Type_value[""GOLANG""]), ChaincodeId: &pb.ChaincodeID\{Name: ccname}, Input: &pb.ChaincodeInput\{Args: args}}}",,denyeart,meinvzou,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqqn:",,,,,,,,,,,,,,,,,,,,,denyeart,meinvzou,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/18 12:18 PM;denyeart;[~tatsu-sato] Are you going to push a fix to Gerrit?;;;","31/Jan/18 2:47 PM;tatsu-sato;[~denyeart] I will push soon, so could you give me a moment, please ?;;;","01/Feb/18 4:29 AM;denyeart;Thanks [~tatsu-sato]

https://gerrit.hyperledger.org/r/#/c/17381/;;;",,,,,,,,,,,,,,,,,,,,
Define endorsement policies for read-only chaincode invocations,FAB-7433,25408,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,12/Dec/17 5:19 PM,23/Jan/20 7:21 AM,28/Oct/23 3:01 AM,23/Jan/20 7:21 AM,,,,,,,,,,,0,stale-item,,,,,"Currently, fabric will check the endorsement policy for every namespace that is being written to by a transaction. This means that if a transaction only reads from a namespace (i.e. the rwset is present for the namespace but no writes are there), the peer will skip the validation of the endorsement policy. The rationale is to permit a group of peers to perform read-only cc2cc invocations for a chaincode for which they couldn't generate a valid endorsement set.

However this might not be desirable, and we might want to
 * either change this behaviour (i.e. force endorsement policy checks for read-only invocations too)
 * or introduce a new notion of read-only endorsement policy

This FAB should be used to form consensus around either of these options (or new ones);",,ales,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqqv:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 5:19 PM;ales;[~jyellick], [~elli-androulaki], [~angelo.decaro], [~yacovm] pls weigh in. Thx!;;;","12/Dec/17 7:53 PM;yacovm;{quote}However this might not be desirable,
{quote}
Why? I think that since we discuss an action item we would want to elaborate on the reasoning.

 

The way I see it, having a read set in the transaction has 2 uses:
 * It has the versions, and MVCC uses this to enforce writes based on old reads
 * You may want to record a read into the ledger, without it impacting the state.

Now, recall that the goal of the endorsement policy is to enforce that the simulation of a transaction has enough attestations from principals that the channel trusts. 
 After verifying that, and assuming the MVCC versions are correct - the channel now can trust that a chaincode has been executed correctly on up-to-date data.

Now:
 * You don't use the endorsement policy for MVCC checks of reads, since there is no write set.
 * Having a read recorded into the ledger doesn't change the state

 

So, as I see it - the only use of having a read set pass an endorsement policy check, is for:
 * Clients receiving the transaction as events and seeing the transaction is invalid (i.e it would not only catch endorsement thresholds, but also incorrect signatures)
 * Auditors that audit the validated ledger seeing that a read-only transaction is invalid.

I don't think the 2 use cases above are enough to justify this:
 * I don't think the client should care about read-only transactions sent via the events
 * I think that an auditor can just verify the signatures himself/herself, and just deduce from the last endorsement policy if the read was simulated on enough peers if he/she needs to do so.

 

Now, transaction that is a read-only is marked valid via VSCC even though it hasn't passed the endorsement policy. Right?
 So I think for this, is it possible that we'd want to add a new flag that says - ""it's a read only, we don't know"" since the policy isn't actually evaluated?;;;","23/Jan/20 7:21 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Different chaincode package produced if files are owned by different users,FAB-7434,25409,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,12/Dec/17 6:21 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Dec/17 10:26 PM,v1.0.5,v1.1.0,,v1.0.6,v1.1.0,,fabric-peer,,,,0,,,,,,"If you run 

{code:java}
peer chaincode package
{code}

to package the same code but the user/group who owns the files is different, you end up with two different code packages.  And if the two packages are installed on different peers, once the chaincode is instantiated it will result in 

{code:java}
chaincode fingerprint mismatch data mismatch
{code}",,bitdream,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqr3:",,,,,,,,,,,,,,,,,,,,,bitdream,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/17 6:23 PM;mastersingh24;Packaging chaincode should support ""repeatable"" builds so I think we should fix this one;;;","12/Dec/17 6:34 PM;mastersingh24;https://gerrit.hyperledger.org/r/16143  (master)
https://gerrit.hyperledger.org/r/16145 (release);;;",,,,,,,,,,,,,,,,,,,,,
Add generic graphs to the graphs package,FAB-7435,25410,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,12/Dec/17 8:15 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,,,,,,,,,,,0,,,,,,"The current graph package only has Vertices that are used for trees.

We should create a new vertex type that can be used for general graphs, in order to connect principals with peers that satisfy the principals.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqrb:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Log err during retry process,FAB-7436,25411,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,guoger,sanchezl,sanchezl,12/Dec/17 10:24 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,14/Dec/17 11:05 PM,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,The retryProcess (fabric/orderer/kafka/retry.go) does not log the actual error that causes a retry. Adding a trace statement can help when diagnosing why a process is continuously being retried.,,guoger,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqrj:",,,,,,,,,,,,,,,,,,,,,guoger,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/17 10:36 AM;guoger;https://gerrit.hyperledger.org/r/#/c/16173/;;;",,,,,,,,,,,,,,,,,,,,,,
improve CONTRIBUTING so that it provides step-by-step for first CR,FAB-7438,25413,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,12/Dec/17 11:37 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,14/Dec/17 7:18 AM,v1.1.0-preview,,,v1.1.0,,,fabric-docs,,,,0,,,,,,improve CONTRIBUTING so that it provides step-by-step for first CR,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqrz:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Dec/17 10:34 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/16163/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix spurious line ending issue,FAB-7441,25701,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,ryjones,ryjones,13/Dec/17 5:43 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,14/Dec/17 12:53 AM,,,,,,,,,,,0,,,,,,Line ending in vendored license is causing merge conflicts for in-flight changes,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqs7:",,,,Unset,,,,,,Unset,,,,,,,,,,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
prune unused portions of fabric-test/feature-upgrade,FAB-7442,25705,25400,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,scottz,scottz,13/Dec/17 7:49 AM,23/Jan/20 7:21 AM,28/Oct/23 3:01 AM,23/Jan/20 7:21 AM,,,,Future,,,fabric-quality,,,,0,stale-item,,,,,FAB-7430 copied all the files from jeff garratt's github fabric-prototype into fabric-test/feature-upgrade. This task is to clean it up and remove unused portions of it that we do not need and do not wish to maintain.,,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqt3:",,,,,,,,,,,,,,,,,,,,,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:21 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Use t.Name() to get test name when we start requiring golang1.8 and above,FAB-7443,25707,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,chilipepper,guoger,guoger,13/Dec/17 3:02 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Jun/18 7:58 PM,v1.1.0,,,v1.2.0,,,fabric-orderer,,,,0,,,,,,"In consenter_test.go, we have a helper function {{channelNameForTest}} to assemble channel name from test name. It doesn't use {{testing.Name()}} because it only exists since golang1.8

However our current approach (manipulating raw output string of testing object) is not forward compatible, e.g. it doesn't print correct test name if compiled with golang1.9

This is a placeholder to remind us to use {{t.Name()}} once we start requiring golang1.8 and above.",,chilipepper,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqtj:",,,,,,,,,,,,,,,,,,,,,chilipepper,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jun/18 3:38 AM;chilipepper;https://gerrit.hyperledger.org/r/#/c/22911/;;;",,,,,,,,,,,,,,,,,,,,,,
Proposal for new-lifecycle with Init preserving mechanics and no data duplication,FAB-7444,25710,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,angelo.decaro,angelo.decaro,13/Dec/17 5:54 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,14/Mar/18 8:39 PM,v1.1.0-preview,,,v1.1.1,,,fabric-peer,,,,0,review-needed,,,,,"FAB-7114 outlines a proposal to have the resource tree and LSCC, as per v1, to coexist.

Moved by the following motivation:

_Duplicating the same information in the resource tree and LSCC adds complexity that may lead to security bugs if the synchronization is not done properly or does not happen in an atomic fashion,_

we propose to modify FAB-7114 in the following way:

* To use the resource tree to store under /resources/chaincodes an entry for chaincode deployment policy in the channel, defaults for ESCC, VSCC, and VSCC arguments, and
to store the rest of the information in LSCC like it happens already  (V1.0).
This channel wide chaincode deployment policy will be used by LSCC at validation of LSCC deploy transactions. 

*  To support multi-signer chaincode deployment policies, we also propose to introduce the multi-sig process à la Ethereum.
Namely, LSCC can be modified to collect signatures on a given instantiation proposal/transaction. The instantiation is marked as 'pending' as long as the channel's deployment policy and chaincode's instantiation policy are not satisfied.
As soon as the instantiation policy (bound to the relative chaincode) and the channel’s deployment policy
(bound to the relative channel) is satisfied (meaning that enough signatures have been collected on the same instantiation), LSCC validation considers the chaincode as 'instantiated' (No post-execution is required). 
Even if unlikely in the case of a permissioned network, it might happen that different subsets of the administrators (able to instantiate the chaincode) try to instantiate the same chaincode with different inputs. Then, one strategy to deal with this is to say that the first group that satisfies the instantiation policy will automatically invalidate all the other pending (and possibly conflicting) proposals.

Please, find [here |https://docs.google.com/document/d/18xH9b0Ze8-b_OeLb40lnd-9QrqIAPDzpBneB3QInPLw/edit?usp=sharing] the design document with more details.

Please, [~mastersingh24] [~jyellick] [~yacovm] [~ChristopherFerris] [~denyeart] [~manish-sethi] [~muralisr] [~binhn][~C0rWin] [~elli-androulaki] [~ales] [~mne], have your say :)",,ales,angelo.decaro,denyeart,jyellick,manish-sethi,mastersingh24,Ratnakar,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqtr:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,angelo.decaro,denyeart,jyellick,manish-sethi,mastersingh24,Ratnakar,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 7:22 PM;ales;+1;;;","13/Dec/17 11:35 PM;jyellick;{quote}_Duplicating the same information in the resource tree and LSCC adds complexity that may lead to security bugs if the synchronization is not done properly or does not happen in an atomic fashion,_
{quote}
Although I initially accepted the amendment at the tail of FAB-7114, I have to agree with the above, the duplication is ugly and seem like a problem. If we were to remove the 'defaults' requirement from FAB-7114, I believe this problem would be solved. So, I see the following as the two competing proposals.
----
Possibility 1: Implement FAB-7114 without the 'defaults', where chaincodes are always defined in the resource tree, where the source of truth for the chaincodes in a channel is always the resource tree, and any information left in the LSCC table is an implementation detail.

Pros:
 * The peer code is already 90% present and largely merged.
 * There is a consistent workflow for multi-signature between channel config and resources (chaincode) config.
 * More flexibility exists for more novel permissions schemes.
 * The split between 'definition' and initial invocation is actually nice for building things like DB indices, containers, or other resources which must exist before invocation.
 * For applications which already handle the multi-sig workflows, there is little work to be done.

Cons:
 * The API change is more radical – SDKs have more work to do, users which do not understand channel config have more to learn.
 * Out of band signature collection can be perceived as problematic.
 * It's possible for a chaincode to be 'defined' but {{Init}} has not yet been called.

----
Possibility 2: Implement the proposal described in this issue's description:

Pros:
 * The API stays largely similar for existing SDKs and applications.
 * The interface does not require out of band signature collection.
 * Possible that multi-tx commit is a pattern we want elsewhere.
 * For applications which do not handle multi-sig workflows, there is little work to be done.

Cons:
 * Complicates the already hacky lifecycle endorser code flow.
 * The code is not complete, and it's possible the implementation will be more challenging than expected.
 * Aggregation of signatures can either be done in the endorsement phase, which makes validation extremely difficult (as endorsements over LSCC are meaningless and must be validated via psuedo-simulation); or aggregation of signatures is done at commit time which requires treating instantiation transactions specially with custom commit logic which violates the standard endorser tx tenants.

----
I write the above trying to be as impartial as possible in the hope that we can come to some sort of consensus quickly.;;;","14/Dec/17 12:30 AM;yacovm;[~jyellick]

{quote} * Possible that multi-tx commit is a pattern we want elsewhere.{quote}
I don't see how we can generalize this. Can you explain?

{quote} * Complicates the already hacky lifecycle endorser code flow. In particular, it requires commit logic which does not simply apply the RW set, but mutates it.{quote}
Changing write sets in validation seems to me like a hacky and bug-prone idea, and also it breaks the idea that the ledger can be used for auditing and the stateDB contains only RWSets computed from the public ledger (unless if it's private data)
 Can't the peer calculate the needed data structure induced by the RWSets without having to apply it?

What if the LSCC RWSet would contain (for all deploy transactions *but the last one*):
 * *Key*: ""client identity"",  *Value*: signature of the client who's identity is the key, on the endorsement policy value

 And for the last deploy transaction:
 * *Key*: ""endorsementPolicy"", *Value*: the endorsement policy
 * *Key*: ""client identity"",  *Value*: signature of the client who's identity is the key, on the endorsement policy value

 

Now, LSCC would have a validation rule that you can write to the key ""endorsementPolicy"" only if there are enough ""supporting"" signatures from clients that the combined set satisfies the deployment policy.

And, a rule that says that you can't write to a key ""client identity"" without a signature from yourself (and the replay should be taken care via MVCC)

 

Now, if we have 2 concurrent *sets of transactions* of administrators, assuming both sets contain enough and valid signatures for the deploy policy to be fulfilled, then only 1 would win in the end because of MVCC conflicts on the ""*endorsementPolicy*"" key.

 
 * The out-of-band process would be that 1 administrator initiates the deploy (last) and the other also do the deploy, but they use a flag that doesn't write to the *endorsementPolicy* key.
 * At peer startup, it would look at LSCC and use the ""endorsementPolicy"" given enough signatures are found.

 

This way we don't need the validation code to mutate the RWSet.

[~angelo.decaro] - this isn't clear to me from the google doc or from the JIRA so I'll ask here for clarification: In the validation of the LSCC transaction - the identity/signature that is validated is that of the client(s), right? ;;;","14/Dec/17 1:03 AM;angelo.decaro;[~yacovm], I also agree that we should not mutate the RWSet. Sorry if the text mislead you.;;;","14/Dec/17 1:06 AM;yacovm;{quote}Yacov Manevich, I also agree that we should not mutate the RWSet. Sorry if the text mislead you.{quote}

Then can you please elaborate how precisely this is going to be done, and also update the JIRA with this? because this is a very important detail.. ;;;","14/Dec/17 1:14 AM;jyellick;[~yacovm]
{quote}> * Possible that multi-tx commit is a pattern we want elsewhere.
 I don't see how we can generalize this. Can you explain?
{quote}
The idea that different parties could each submit their own version of a transaction, and once sufficiently many commit, the transaction actually commits has some potential other applications. Say, a joint asset which has two owners, and each owner must submit a proposal to transfer it before it is transferred. This is a common concept in other systems like Ethereum.  The exact details of how this would be generalized, I'm not sure.  I just mean that as a concept, this has other applications, so we might not be introducing a new lifecycle specific but otherwise useless concept.
{quote}Changing write sets in validation seems to me like a hacky and bug-prone idea, and also it breaks the idea that the ledger can be used for auditing and the stateDB contains only RWSets computed from the public ledger (unless if it's private data)
 Can't the peer calculate the needed data structure induced by the RWSets without having to apply it?
{quote}
{quote}This way we don't need the validation code to mutate the RWSet.
{quote}
There are two different possibilities I see.
 # The peer does custom mutation of the RW sets during the commit (not validation, as this is parallel) phase. This has the disadvantage of making the LSCC endorser transaction not commit as a standard endorser transaction, but it has the advantage of being fairly straightforward to implement in an obviously correct way.
 # The peer does sophisticated LSCC mutations during the endorsement phase. This has the advantage of committing in a standard way, but then the validation becomes extremely complex and difficult to implement, maintain, and audit for security.

For v1.0, we went with the second option, but the validation logic was (relatively) simple (checking that only the chaincode in question was the thing modified in the LSCC space). If there is aggregation of different competing instantiation proposals, this logic would be much more complex. In the proposal above for instance, there is no cleanup of pending proposals which did not successfully commit, nor of the ones which are successfully committing.

I'm not suggesting that it is impossible, but, one of the core problems with doing LSCC as an endorser transaction, is that endorser transactions are validated based on endorsement policy. Because the LSCC itself does not have an endorsement policy (and in fact, it cannot, if we wish to allow arbitrary endorsement policies for chaincodes) the endorsements over the LSCC data mean nothing. This means any mutations to the LSCC state space must be verified manually in the VSCC code. If we were starting from scratch, I would say this is a deal breaker, but as this is the existing approach, I understand the appeal in extending it.;;;","14/Dec/17 7:09 AM;jyellick;The more I scrutinize this proposal in FAB-7444, the more I believe that LSCC should not have been implemented as an endorser transaction, and further, that it is a mistake to attempt to extend this mechanism.

Endorser transactions have an intent (proposal), a result of that proposal (RW set), and proof that the result is correct for the intent (endorsements). The peer validates that the result (RW set) of the intent (proposal) is accurate by evaluating the proof (endorsements) against the endorsement policy. LSCC does not and cannot have an endorsement policy, so it does not validate as an endorser transaction. Instead, there is a custom validation path, not shared by any other chaincodes, which attempts to in effect, re-execute a portion of the LSCC invocation and confirm that the result of the simulation is the same as the result in the transaction. The endorsements have no value. Treating LSCC transactions as endorser transactions is inconsistent, error prone, and I do not believe it would pass scrutiny if it were a new concept in the system.

At the very least, LSCC validation should have been performed by a different VSCC. And, if the validation mechanism is to re-execute the proposal, then there is zero value in including the output in the tx; the committing peer should simply execute it at commit time. Once these are taken into account, we are left back with something very much like the original resources based proposal, and I would ask why we are re-inventing the wheel? If we want to provide a non-out-of-band signature collection mechanism, this is something that could be trivially implemented in a user-space chaincode.;;;","14/Dec/17 7:51 AM;yacovm;[~jyellick] I 100% agree with you on:

{quote}Endorser transactions have an intent (proposal), a result of that proposal (RW set), and proof that the result is correct for the intent (endorsements). The peer validates that the result (RW set) of the intent (proposal) is accurate by evaluating the proof (endorsements) against the endorsement policy. LSCC does not and cannot have an endorsement policy, so it does not validate as an endorser transaction. Instead, there is a custom validation path, not shared by any other chaincodes, which attempts to in effect, re-execute a portion of the LSCC invocation and confirm that the result of the simulation is the same as the result in the transaction. The endorsements have no value. Treating LSCC transactions as endorser transactions is inconsistent, error prone, and I do not believe it would pass scrutiny if it were a new concept in the system.

And, if the validation mechanism is to re-execute the proposal, then there is zero value in including the output in the tx; the committing peer should simply execute it at commit time.
{quote}

However - I believe this proposal is trying to re-invent the wheel because the current config-based lifecycle approach lacks a signature collection mechanism and therefore has (in my opinion) a severe deficiency. 

So - given that the config based approach is already more or less finished and implemented, I suggest we go the extra mile and include in the v1.1 release:
* A chaincode that collects signatures for the resource config updates, and channel config updates
* Integrate the peer CLI and SDKs to work with that natively, to reduce as much as possible the learning curve of moving from v1.0 to v1.1

Now, [~jyellick] - I think that signature collection chaincode should be included in fabric and will not be a deployed user-level chaincode but be a system chaincode.
In fact - I think that it can even be LSCC itself. 
The resource config could come with it being defined at channel creation, and users would be able to invoke LSCC to manage signature collection and then the resource config update would be composed from signatures taken from the LSCC via querying. 

What do you (and others) think?;;;","14/Dec/17 11:06 PM;denyeart;I completely agree with the core motivation of this proposal:

_Duplicating the same information in the resource tree and LSCC adds complexity that may lead to security bugs if the synchronization is not done properly or does not happen in an atomic fashion,_

I also completely agree with the Pros of this proposal that [~jyellick] called out in the first comments:

    •    The API stays largely similar for existing SDKs and applications.
    •    The interface does not require out of band signature collection.
    •    Possible that multi-tx commit is a pattern we want elsewhere.
    •    For applications which do not handle multi-sig workflows, there is little work to be done.

And I’ll especially highlight the 3rd bullet in that going forward I think it will be important to support multi-sig workflows consistently across chaincode deployment and chaincode execution, and I prefer the 'internal' tally collection approach here over 'external' signature collection approaches (whether out-of-band as Jason suggests or via additional chaincodes as Yacov suggests).


On to the cons… I appreciate the concerns that Jason calls out in his latest comments, but in my opinion those are internal details that we could live with, rather than critical aspects for external consumers.  I would have to give priority to the external consumer aspects.  And like Jason said, a separate VSCC could be used for LSCC to make the internals more tolerable.  Additionally, there are some good things about the endorser flow, for example it does make sense for clients to specify an intent (to deploy chaincode), rather than having to know the internals of chaincode definition.

Finally, I would prefer a way to split definition and initial invocation as listed in the resource tree approach Pros:

    •    The split between 'definition' and initial invocation is actually nice for building things like DB indices, containers, or other resources which must exist before invocation.

Potentially we could achieve this via LSCC, by having both a ‘Define’ step and an ‘Instantiate’ step in LSCC.  For scenarios where it makes sense to combine them, ‘Define and Instantiate’ could be called in a single transaction, and for scenarios where it makes sense to split them, ‘Define’ could be called before ‘Instantiate’, with each step needing to meet the signature requirements for deployment on the channel.

In sum, I generally am in favor of this proposal, but would like to hear feedback on the ideas here.;;;","15/Dec/17 1:00 AM;manish-sethi;First, apologize for a lengthy note :-)
[~jyellick] - Though I agree with your definitions and hence difference between intent and endorsement but I have to disagree that this difference is limited to system transactions (e.g., chaincode lifecycle related transactions) 
I am sure that you agree that this difference (and hence similar threats) would be present for the user chaincodes as well. 

The larger issue that I feel here is that with the resource tree way of doing things, we are trying to treat the system transactions differently from user transactions in an attempt to make the system transactions 'more secure' than the data transactions of the user chaincode. However, even if someone is able to deploy a chaincode in a more secure manner, the data managed by a chaincode is still as trusted (or susceptible to maliciously mutate-able) as the richness of endorsement policies we allow for the user chaincodes.

As a business participant of a channel, my primary concern will ultimately be my business data. In other words, if we feel that endorsement policy mechanism is not enriched enough, making lifecycle step stronger does not make a convincing deal because, the business data is still managed by the endorsement policies.

The way I look at the resource tree transactions - it is equivalent to say that one executes transactions outside the Fabric and sign the final mutations and Fabric acts only as an information store for persisting the signed data and in addition, hosts a layer on top that evaluates data item level mutation policies.(which, in philosophy matches with a key value store that provides data modification policies at each cell level - e.g. a primitive example would be https://accumulo.apache.org/). However, this does not treat Fabric as a system to host the 'smart contract' logic that mutates the data.


Setting the context above, I would be inclined to actually treating the lifecycle transactions in a same way as if I would have written a business chaincode (and move away from the resource tree way of data manipulation) and try to workaround the shortcoming for the time being. This approach gives me more comfort mainly from the fact that this brings out the difference between intent and endorsement, the platform limitations and gaps around these and workarounds upfront that serves an example for user chaincodes. 
Resource tree way of data manipulation is definitely not what any of us would want to serve as a reference for user chaincodes.

In fact, given a choice, I would like to get rid of entire resource tree stuff and manage the resource configuration by hosting the data manipulation logic on the peer (say a system chaincode) which exposes only high level admin functions such as define chaincode and does not offer the direct data manipulation.Philosophically, this is similar to way an rdbms would use the same data storage and transaction processing engine for the system data in the form of system tables.

On the specifics:

Multi-sigs
-----------
I like enabling the multi-sig collection way described in the original proposal. At the implementation level, may be we can declare a first class transaction type [ENDORSER_MULTI_SIG] and treat it differently at the commit processing - such that instead of evaluating the read-set and applying it's write-set immediately, keep storing them in a channel scoped system chaincode (say multi-sig namespace). 
We store the transaction envelope as the value and txid_\{creator} as it's key (txid to be computed based on chaincode name and arguments). Each time we process such transaction, we pull out previously stored transactions by performing a range query on txid and pass on the array to chaincode specific VSCC which either approves or response with insufficiency code - if Approved, we process the normal read-write set logic and delete the txid_\{creator} entries. This way, it could be used by a user chaincode also with the custom VSCC (by declaring the type ENDORSER_MULTI_SIG).

If we want to collect multi-sigs out of the band we can adopt one of the below listed approaches.
(1) Signed intent + Generic endorsement (3 out of 5 etc.)
LSCC takes an additional argument 'signatures' (which are collected out of band on the 'intent' - i.e. the function name + arguments) 
and we have a channel scope LSCC endorsement policy at the time of channel creation. LSCC can always be treated a separate object on each channel.

(2) Signed intent + Specific endorsement 
Same as the above, but endorsement is restricted to specific peer certificate - where at least one endorsing peer is present for each of the signatures in the intent
In this case, we can allow content based enriched endorsement policies going forward, they can be applied out of the box.

(3) Signed RWSet
Every one who should sign the intent, independently simulate the deploy transaction on LSCC on a peer they trust and signs the resulting rw-set 
and pass around this for collecting the out of the band signatures. This requires a different transaction type though - (say MULTI_SIG - where 
the tran envelop contains signatures and actual envelop)

(4) Signed intent and execute transaction at commit time
Just submit the signed intent and transaction gets executed at commit time. Like (3), this also requires a different transaction type (say EXECUTE).

4th option is possible for system transactions because system chaincode is nothing but a the peer code and hence present on all the peers. 
However, it goes fundamentally against the endorsement model if we advocate this for user chaincodes and indirectly goes back to 0.6 model of transaction execution (minus the final consensus on resulting changes)

Define step:
-------------------
I prefer to have different steps 'Define' and 'Instantiate' as it gives system a chance to prepare chaincode related resources. But as Dave pointed out, both the steps can be well accommodated in the LSCC space.;;;","15/Dec/17 8:31 PM;mastersingh24;{quote}In other words, if we feel that endorsement policy mechanism is not enriched enough, making lifecycle step stronger does not make a convincing deal because, the business data is still managed by the endorsement policies.{quote}

[~manish-sethi] - This is NOT what [~jyellick] or I have been trying to say.  The problem is that endorsement policies do not satisfy the requirement that parties actually agreed to the contents of a transaction.  Put another way, endorsement policies are not signature-based agreement policies.  When a peer endorses a transaction, all it is saying is that for a set of given inputs, here are the outputs based on executing a piece of logic.  It's hard to word this all properly, so maybe an example will help.

Let's say that we have a simple chaincode which manages assets of type FOO.  Each asset of type FOO has a name and an owner where owner is represented by the bytes of the owner's public key:
{code:java}
type Foo {
  name string
  owner []byte
}
{code}

Let's say our chaincode has a function called transfer with the following pseudo-logic:


{code:java}
func transfer(asset_name string, new_owner []bytes){
    current_owner = getOwner(asset_name)

    if TX_SIGNER = current_owner {
        setOwner(asset_name, new_owner)
    } else {
        return error(""only the current owner can transfer an asset"")
    }
}
{code}

The agreement to transfer the asset is represented by the fact the current_owner signed and submitted the transaction.  The chaincode is used to enforce this agreement.

Let's say there are 2 peers in the channel.
So each peer executes this chaincode and then endorses the chaincode.  Each peer's signature only indicates the peer accepted the inputs, executed the logic and generated a set of outputs.  But, to restate, the agreement to transfer was indicated by the signature on the actual transaction itself.

I believe that we continue to conflate endorsement with actual signature-based agreements and that is always at the root of these discussions.  [~manish-sethi] - this is where the multi-sig stuff comes in.




;;;","15/Dec/17 10:25 PM;mastersingh24;{quote}*we are trying to treat the system transactions differently from user transactions in an attempt to make the system transactions 'more secure' than the data transactions of the user chaincode*
{quote}

Again - NO.  This is not what we are trying to do.  What we are trying to do is figure out a way to ensure that actual HUMANS agree on the contents of very important policies and changes to those policies.  And as I attempted to outline in my comment above, endorsement does provide this.;;;","15/Dec/17 11:03 PM;yacovm;[~manish-sethi] I'm not sure why we need a multi-signature transaction to be a fabric first-class citizen.

All you want to do is transactions that have multiple users agreeing to the transactions but make them happen atomically, no?
Can we not built this with standard chaincode without multi-signatures?

 

Here is an example that I believe works:

Lets say we have orgs A and B and Alice is from org A and Bob is from org B.
Alice wants to give Bob her Apple in exchange for Bob's Banana.

Both peers in org A and org B have a chaincode that is written for these kinds of trades. 
The chaincode's data model has a table for asset transfer in which each row has 4 columns:
 * Source Owner
 * Asset put for transfer
 * Target Owner
 * Commitment

 

Also, the chaincode logic dictates that every user in the channel can create a transaction that wipes out this asset transfer table, in case he/she feels she wants to abort the transaction. (for simplicity, there is only 1 such table, but of course we can have a table for each pair of users).

Now, Alice makes the first transaction, and generates a random string *x* and puts:
 * Alice
 * Apple
 * Bob
 * Hash( x )

Now Bob makes its own transaction, and puts:
 * Bob
 * Banana
 * Alice
 * Hash( x )

Now, Alice invokes a function in the chaincode that the function gets as input a string *x* and simply iterates over all rows of the asset transfer table, and for each row, checks if:
Hash( x ) == Commitment

If so, then the asset is moved from the Source owner to the target owner. 
 * Alice, has no incentive to tell Bob the preimage of Hash( x ) until Bob puts its own commitment into the asset transfer table, so she waits until he puts it and only afterwards she reveals the pre-image to the chaincode.
 * If Alice is malicious and decides to remove her asset transfer and leave only Bob's - she can't because we said earlier that the chaincode logic dictates that you can only append new entries to the asset table, or delete everything, so Alice can't run away with Bob's Banana without giving him her Apple.
 * If we agree that we can enforce certain RWsets to be written into the blockchain via chaincode, then surely we agree this idea works, no?;;;","16/Dec/17 12:24 AM;manish-sethi;[~mastersingh24] - Yes, I understood the difference between parties agreement and endorsement and understand the need of multi-sig and signing by actual humans. The only argument I am making is that both the things are possible (and should be, if not) via endorser transaction way of accomplishing the things. For instance, taking human signature on chaincode parameters is one of the ways to get human signature on the content.

As you said, these things are not easy to write clearly and I am sure some of these things could not have been conveyed clearly in my post.;;;","16/Dec/17 5:07 AM;mastersingh24;I agree that submitting a signatures as part of the payload is a valid mechanism.  We had actually discussed this a while back as well.  But no matter what, some type of information must be passed around out of band (unless you misuse blockchain as a database for passing messages around).

In the end, we seem to want to be very religious about using chaincode for everything.  I don't agree that this is the precedent that we want to set.  That being said, I think we can make things work and appease all concerns (whether practical or religious);;;",,,,,,,,
Fix Comment Error,FAB-7445,25713,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Jing.Cao,Jing.Cao,Jing.Cao,13/Dec/17 8:41 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,16/Dec/17 8:53 PM,,,,v1.1.1,,,,,,,0,,,,,,"In file fabric/common/channelconfig/applicationorg.go  Line 66, there is a comment describe the function of method 
{code:java}
func (aog *ApplicationOrgConfig) AnchorPeers() []*pb.AnchorPeer
{code}
the comment says
{code:java}
// AnchorPeers returns the list of valid orderer addresses to connect to to invoke Broadcast/Deliver{code}
But the real function of this method is to return the list of Anchor peers of this Organization, so the comment is WRONG.

I modify the comment as below
{code:java}
// AnchorPeers returns the list of anchor peers of this Organization
{code}
 ",,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqu7:",,,,Unset,,,,,,Unset,,,,,,,,,,,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabic-test-daily-x86_64 fails due to LTE error in couchdb test,FAB-7446,25717,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,sambhavdutt,sambhavdutt,14/Dec/17 12:50 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,29/Mar/18 1:38 AM,,,,v1.2.0,,,fabric-quality,,,,0,ci-failure,,,,,"fabic-test-daily-x86_64 is failing as the following errors occur in test_FAB_3876_VaryNumKeysInEachTX

ledger_lte.perf_couchdb.test_FAB_3876_VaryNumKeysInEachTX (from pytest) 
Error Message
AssertionError: varyNumKeysInEachTx for CouchDB performance test failed.

logfile = open(""output_VaryNumKeysInEachTx_couchdb.log"", ""w"")
        returncode = subprocess.call(
                ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
                ""varyNumKeysInEachTx"", shell=True, stderr=subprocess.STDOUT,
                stdout=logfile, cwd=tool_directory)
        logfile.close()
        self.assertEqual(returncode, 0, msg=""varyNumKeysInEachTx for CouchDB ""
                ""performance test failed. \nPlease check the logfile ""
>               +logfile.name +"" for more details."")
E       AssertionError: varyNumKeysInEachTx for CouchDB performance test failed. 
E       Please check the logfile output_VaryNumKeysInEachTx_couchdb.log for more details.

ledger_lte.py:322: AssertionError

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/192/testReport/ledger_lte/perf_couchdb/test_FAB_3876_VaryNumKeysInEachTX/
",,AdnanChoudhury,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyquv:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 2:14 AM;AdnanChoudhury;Observed from the last week, The LTE test fails due to one of several reasons, and has no specific sub-test that consistently produces the error.
 In [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/251/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumChains_couchdb.log]
{code:java}
[31m2018-02-09 12:29:32.625 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 375 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc421425ac0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc4212eaff0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: ee773f2f92ad)...{code}
From [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/251/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumParallelTxPerChain_couchdb.log]


{code:java}
[31m2018-02-09 12:20:32.639 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error during commit to txmgr:invalid byte in chunk length goroutine 373 [running]: github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc42224e600, 0xc422126720, 0x0, 0x0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421dfc380, 0xc422126720, 0x0, 0x0) <autogenerated>:1 +0x47 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc4217ced20) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x68 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: c61571f971be)...{code}
in [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/254/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumKeysInEachTx_couchdb.log]
{code:java}
panic: Error:net/http: request canceled (Client.Timeout exceeded while reading body) goroutine 452 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x1547680, 0xc422e16d00) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/experiments.runReadWriteClient(0xc421cdb500, 0xc421e72d80, 0x64, 0xc421cf1900) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/experiments/readwrite_txs_test.go:79 +0x1f8 created by github.com/hyperledger/fabric/test/tools/LTE/experiments.runReadWriteClientsForChain /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/experiments/readwrite_txs_test.go:62 +0x103 Stopping couchdb container (id: b71eba24c09e)...{code}
From [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/254/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumTxs_couchdb.log]
{code:java}
018-02-12 12:05:23.012 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 371 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc423441cd0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc420287a40) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 7a466cdc6eaf)...{code}
[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/256/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumChains_couchdb.log]

[
{code:java}
[31m2018-02-14 12:13:28.335 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 1680 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc4252a3010) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc4211747e0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 4fa75e9d43df)...{code}
 

[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/255/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryBatchSize_couchdb.log]
{code:java}
m2018-02-13 15:23:55.766 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed http: read on closed response body panic: Error during commit to txmgr:http: read on closed response body goroutine 399 [running]: github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc421a5c080, 0xc4216031a0, 0x0, 0x0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc42136d780, 0xc4216031a0, 0x0, 0x0) <autogenerated>:1 +0x47 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc42160e270) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x68 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: a566af81c71d)...{code}
[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/255/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryKVSize_couchdb.log]

[
{code:java}
31m2018-02-13 15:22:02.860 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 366 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc4201cc8e0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc421163200) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 041825f38e02)...{code}
From [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/255/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumChainsWithNoParallelism_couchdb.log]
{code:java}
[31m2018-02-13 15:15:52.731 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed net/http: request canceled (Client.Timeout exceeded while reading body) panic: Error during commit to txmgr:net/http: request canceled (Client.Timeout exceeded while reading body) goroutine 386 [running]: github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc42013d4c0, 0xc422153bc0, 0x0, 0x0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421d6d760, 0xc422153bc0, 0x0, 0x0) <autogenerated>:1 +0x47 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc42203b770) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x68 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 5530632694ea)...{code};;;","21/Feb/18 12:28 AM;sambhavdutt;The ledger_lte failed in the last build for couchdb test in the *fabric-test-daily-x86_64* , 


{code:java}
             Passing criteria: Underlying LTE test completed successfully with
             exit code 0
            '''
        logfile = open(""output_VaryNumTxs_couchdb.log"", ""w"")
        returncode = subprocess.call(
                ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh varyNumTxs"",
                shell=True, stderr=subprocess.STDOUT, stdout=logfile,
                cwd=tool_directory)
        logfile.close()
        self.assertEqual(returncode, 0, msg=""varyNumTxs for CouchDB ""
                ""performance test failed. \nPlease check the logfile ""
>               +logfile.name+"" for more "" ""details."")
E       AssertionError: varyNumTxs for CouchDB performance test failed. 
E       Please check the logfile output_VaryNumTxs_couchdb.log for more details.

ledger_lte.py:344: AssertionError
{code}


*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/262/testReport/ledger_lte/perf_couchdb/test_FAB_3877_VaryNumTxs/;;;","27/Feb/18 11:39 PM;sambhavdutt;The ledger_lte tests have passed in the last 4 builds for fabric-test-daily-x86_64

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/test_results_analyzer/;;;","29/Mar/18 1:38 AM;rameshthoomu;Not-reproduced in the recent builds. Marking this as done..;;;",,,,,,,,,,,,,,,,,,,
[CI] - update CI scripts to pull third party docker images,FAB-7449,25722,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Dec/17 5:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,14/Dec/17 11:29 PM,,,,,,,fabric-ci,,,,0,,,,,,"update CI scripts to pull thirdparty docker images (couchdb, kafka and zookeeper) from hyperledger docker hub account. this pulls 1.1.0-preview docker images.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqvj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 11:29 PM;rameshthoomu;patch has been submitted and merged. All the fabric-sdk-node verify and merge jobs now pull thridparty docker images and tag it as latest.;;;",,,,,,,,,,,,,,,,,,,,,,
Generalize TLS cert extraction from request protobufs,FAB-7450,25723,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,14/Dec/17 5:53 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,24/Dec/17 11:01 PM,,,,v1.1.1,,,,,,,0,,,,,,"FAB-6868 adds a utility method that extracts the TLS cert hash from the channel header of an envelope, and then compares it to the TLS cert hash of a gRPC context.

Since we need to do that for the events (which don't use the same envelopes),
it makes no sense to implement this again for a new protobuf message type.

What we should ideally have is that utility to accept a function that extracts the TLS cert hash from the protobuf message, and then it can be reused for all our protocol messages.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqvr:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/17 6:03 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16191/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix spell error in comment,FAB-7453,25734,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Jing.Cao,Jing.Cao,Jing.Cao,14/Dec/17 4:40 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,17/Dec/17 12:59 AM,,,,,,,,,,,0,,,,,,"In file fabric/gossip/service/eventer.go Line 59,

the ""intialized"" should be ""initialized"".",,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqwf:",,,,Unset,,,,,,Unset,,,,,,,,,,,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"[CI] - Merge jobs should always checkout latest commit not the ""gerrit_refspec""",FAB-7454,25739,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Dec/17 11:45 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Mar/18 12:19 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"fabric merge jobs should always checkout latest commit from gerrit not the ""gerrit_refspec"". existing merge job configuration always checkout the gerrit_refspec on the parent commit from the patch set but this is same as verify job.

The proposed solution always checkout the latest commit from the fabric repository after the code is merged.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqx3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 10:42 AM;rameshthoomu;Inputs/approval required.. Looking for inputs in FAB-8317;;;","17/Mar/18 12:21 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18757/;;;",,,,,,,,,,,,,,,,,,,,,
[CI] - Update the downstream build results on gerrit patch set,FAB-7455,25740,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Dec/17 11:50 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Apr/18 12:42 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"update the gerrit patch set with all the downstream job results. This improves user experience while checking the result of the patch. In the existing approach, we show only aggregated build result with +1 or -1 and in the history we display all the triggered job results with Success or failure. But this is confusing user to see which job is failed for the specific patchset.

Proposed approach: After trigger all the build jobs, the job result should display on gerrit patch set with

fabric-verify-x86_64 SUCCESS

fabric-behave-x86_64 SUCCESS

fabric-verify-s390x SUCCESS

fabric-e2e-tests-x86_64 FAILURE",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqxb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 4:01 AM;rameshthoomu;I think this is possible with this [https://docs.openstack.org/infra/jenkins-job-builder/triggers.html?highlight=trigger#triggers.gerrit.|https://docs.openstack.org/infra/jenkins-job-builder/triggers.html?highlight=trigger#triggers.gerrit]

working on implementing this on fabric upstream and downstream jobs

 ;;;","16/Apr/18 12:42 AM;rameshthoomu;This has been implemented in production.
|Code-Review|+2 Jason Yellick
+1 Baohua Yang Matthew Sykes|
|F1-VerifyBuild|+1 Hyperledger Jobbuilder|
|F2-DocBuild|+1 Hyperledger Jobbuilder|
|F2-SmokeTest|+1 Hyperledger Jobbuilder|
|F3-UnitTest|+1 Hyperledger Jobbuilder|
|Verified|;;;",,,,,,,,,,,,,,,,,,,,,
Typo when checking for valid couchdb params for $exists,FAB-7456,25741,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,tatsu-sato,Superjo149,Superjo149,14/Dec/17 11:53 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 12:29 AM,,,,,,,fabric-ledger,,,,0,couchdb,Ledger,,,,"When checking valid parameters, there is a type in $exists. It says $exits. I have not experienced any regarding this tho.

 

[https://github.com/hyperledger/fabric/blob/release/core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go]

 ",,denyeart,Superjo149,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 11:51 PM;Superjo149;image-2017-12-14-15-51-52-088.png;https://jira.hyperledger.org/secure/attachment/13713/image-2017-12-14-15-51-52-088.png",,,,,,,,,,,,,,,,,,,,,,,,,FAB-1969,,,,,,,,,"1|hzx0dr:",,,,,,,,,,,,,,,,,,,,,denyeart,Superjo149,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jan/18 6:20 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16793/;;;",,,,,,,,,,,,,,,,,,,,,,
"[CI] - Add ""make linter"" to the fabric-build-check CI job",FAB-7457,25742,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Dec/17 11:59 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Dec/17 4:42 AM,,,,,,,fabric-ci,,,,0,,,,,,"Add ""make linter"" to the fabric-build-check CI job so that when a patch set is created the very first job (build-check) performs linter and other basic checks. if these checks works as expected, trigger downstream jobs as mentioned in the FAB-7169 comments.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqxj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 3:30 AM;rameshthoomu;Patch set has been created and updated to gerrit..;;;","15/Dec/17 4:43 AM;rameshthoomu;It's merged now. Now the build check verifies `make linter`. will disable the same from fabric-unit-tests-verify CI job;;;",,,,,,,,,,,,,,,,,,,,,
[CI] - Create svt and integration test jobs to perform daily tests,FAB-7460,25752,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,15/Dec/17 3:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Jul/18 7:16 AM,,,,,,,fabric-ci,,,,0,CI_Release,,,,,Create SVT and Integration test CI jobs to perform daily tests by pulling *stable* images and binaries published by fabric-merge-end-2-end-x86_64 CI job every day after it executes successfully,,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqy7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/18 8:27 AM;rameshthoomu;SVT job has been configured as a cron job in CI. [https://jenkins.hyperledger.org/me/my-views/view/All/job/fabric-test-svt-x86_64/] There are couple of issues addressed in patchset.;;;","09/May/18 3:11 AM;rameshthoomu;OTE Tests may not work without cloning fabric reposiotry under hyperledger. Please see the below log from SVT test job
{code:java}
05:42:02.372 ote.go:59:9: cannot find package ""github.com/hyperledger/fabric/common/crypto"" in any of:
05:42:02.372     /opt/go/src/github.com/hyperledger/fabric/common/crypto (from $GOROOT)
05:{code}
[~scottz] [~rameshthoomu] Could you please let me know how to fix this.;;;","09/May/18 10:16 PM;scottz;You are correct. To run the OTE tests in the fabric-test repo, the fabric repo needs to be cloned too, in order to build the OTE tool and run the tests. What is your question?;;;","15/May/18 1:08 AM;rameshthoomu;You answered my question.. When we don't build images, we don't clone fabric repo.. That's the reason the OTE tests are failing. [~sambhavdutt] will work on this change to update CI config.;;;",,,,,,,,,,,,,,,,,,,
Document peer commands,FAB-7461,25753,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,15/Dec/17 3:58 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,20/Jan/18 7:19 PM,,,,v1.1.0-alpha,v1.1.1,,fabric-docs,,,,0,Documentation,,,,,"Need to document peer commands, including usages and flag details.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqyf:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Dec/17 4:03 AM;joe-alewine;CR here: https://gerrit.hyperledger.org/r/c/16217/;;;",,,,,,,,,,,,,,,,,,,,,,
enable bccsp/sw for unit test parallelization,FAB-7462,25755,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,15/Dec/17 5:36 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,06/Jan/18 10:40 AM,,,,v1.1.1,,,fabric-crypto,,,,0,,,,,,"Running `go test ./bccsp/sw` from current master takes around 35s. By enabling test parallelization in this package, the execution time is reduced to around 9s.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqyv:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"[CI] - add ""basic-checks"" & ""build-checks"" make targets to verify the tests in CI downstream jobs",FAB-7463,25756,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,15/Dec/17 5:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,08/Jan/18 11:39 PM,,,,,,,fabric-build,,,,0,,,,,,"add ""make build-checks"" target in Makfile to verify the unit-tests in downstream jobs after pull the images, binaries from nexus repository. Existing target ""unit-tests"" is not working when pull images and binaries from nexus.

Also add ""basic-checks"" make target to perform basic checks like license, spelling and linter in CI build job before trigger unit-tests job. This change detects issues in the early stage of the build process.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqz3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jan/18 12:20 AM;rameshthoomu;Patch has been submitted [https://gerrit.hyperledger.org/r/#/c/16221/|https://gerrit.hyperledger.org/r/#/c/16221/.]

 ;;;","08/Jan/18 11:38 PM;rameshthoomu;configuration has been updated in fabric-verify-build-checks job.;;;",,,,,,,,,,,,,,,,,,,,,
Proposal to make chaincode endorsement policies references instead of literals,FAB-7468,25900,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,jyellick,jyellick,15/Dec/17 1:07 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,20/Jul/18 11:05 PM,,,,,,,fabric-peer,,,,0,A&D,ARCH,review-needed,sdk,,"Today, endorsement policy is specified as bytes encoding a literal {{common.SignaturePolicyEnvelope}} message.

This approach has two primary drawbacks.
 # It is not possible to share an endorsement policy between chaincodes.
 # It is not possible to express a policy like ""a majority of orgs"" (if for instance, the network grows or shrinks, the policy will no longer reflect the intent).

If endorsement policies are stored as references rather than literals, then both drawbacks are eliminated.
----
*Example*

Consider a channel with three organizations and many chaincodes. In the v1.0 endorsement policy model, if the network wishes to express the concept of ""all orgs"" for each of these chaincodes, then it must encode the signature policy {{Org1 AND Org2 AND Org3}} for each chaincode. If {{Org4}} is added to the network, then to preserve the intent of the policy, the endorsement policy must be redefined for each and every chaincode.

Instead, with the proposed model, consider a single implicit policy defined in the channel config which requires {{ALL application orgs}}. Then, when {{Org4}} is added to the channel, no update is required to the endorsement policy.

Of course, if the channel would rather manually add {{Org4}} to the policy, then the original {{Org1 AND Org2 AND Org3}} policy may be encoded in the config tree. However, to update all chaincodes with this policy would require only one change, rather than a change to each and every chaincode.
----
*Implementation*

Today, the LSCC table has a byte field representing the endorsement policy (as a marshaled {{common.SignaturePolicyEnvelope}}). For v1.1, this same field can be used but instead will hold a marshaled {{peer.StaticEndorsementPolicyArg}} message defined as follows:
{code:java}
message StaticEndorsementPolicyArg {
    string PolicyRef = 1;
}
{code}
Because the encoding for this field would change from v1.0 to v1.1, a peer with the v1.1 capability enabled would not be able to support chaincode deploy/instantiation requests from a v1.0 client – details of which will be expressed in a sub-task.

Aside from changing the encoding of this field in the LSCC table and the corresponding encoding supplied by clients in the argument, there should be no external impact.
----
*New Default Policies*

Although this can be written up into a different issue, in order to make fabric easier for clients to use, it makes sense to pre-populate the channel config with new default policies. In particular, the policies {{AnyOrgPeer}}, {{MajorityOrgsPeers}}, and {{AllOrgsPeers}}, should be added.

For a client defining a new chaincode, they may pick one of these default policies as their endorsement policy, rather than defining their own in the channel config. Although feedback is welcome, these three policies seem to cover the vast majority of use cases. (And of course, the client may always define additional arbitrary policies at channel creation or reconfiguration time).
----
*Upgrade*

For existing channels with already deployed chaincodes, the endorsement policies for these chaincodes would need to be migrated to the resources config, and replaced with a reference to the policy.

This migration could occur as a one-time step when the v1.1 application capability is enabled for a channel. Because a v1.0 channel cannot have a resources tree defined, new policies at {{/Resources/Policies/<cc_name>Endorsement}} can be created without risk of collision. The new reference would point to this resources path.
----
*Caveats/Downsides*

One of the additional advantages to using policies defined by reference, rather than policy literals, is a stronger control over the mutation of the policy. In order to preserve this benefit, the reference itself must be immutable in the LSCC table, though of course, the target policy of the reference may be mutated.

As pointed out above, v1.0 clients will not be forwards compatible. However, clients which do not manually construct an endorsement policy will be unaffected. Additionally, with the new policy defaults, it's hoped that the for the vast majority of clients, the constructed endorsement policies will be equivalent to one of these defaults.
----
*Additional thoughts*

There has been considerable discussion around the future of chaincode lifecycle for fabric. See discussions on FAB-6042, FAB-7114, FAB-7444 (and a new one to be opened soon). Although there has been considerable debate on how lifecycle will proceed, moving endorsement away from policy literals and towards policy references is a useful feature which does not conflict with any of the proposals. Although this modification will produce some immediate pain for a subset of users, hopefully the pain will be minimal, and ultimately the complexity of specifying an endorsement policy will decrease for most users, without removing any power from the system.",,davidkhala,denyeart,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqzz:",,,,Unset,,,,,,Unset,,,,,,,,,,,davidkhala,denyeart,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 5:18 PM;yacovm;The biggest problem I see with this proposal, is that with careless use it might lead to big problems:
 Consider a channel with 3 organizations- A,B,C and that B and C have a chaincode (*CC1*), and A agrees that the transaction will be valid if it is endorsed by both B and C because it doesn't have the chaincode (org A is a user organization, it doesn't have any peers).

Now, B and C don't trust each other fully, so they don't use the majority policy - because if they had, A could collude with either B or C and endorse a transaction artificially. 
 So, they create a new policy type in the resource config and call it ""B_and_C"" and instantiate the chaincode to reference it.

After a few weeks they (B and C) decide to deploy a new chaincode (*CC2*) to be used only by them, and this chaincode is ""secret"" and they will refuse to share it with anyone else.
Since they have the already defined policy: B_and_C, they use it when the chaincode is deployed.

Afterwards, new organizations joins the channel, org D and org E. Org D and org E are 2 organizations that trust each other and are much similar to org B and org C , and naturally they don't trust org B and org C so they ask that 1 of them would be needed to endorse a transaction from *CC1*.


Now, we can't change the policy B_and_C because then it would break *CC2*, but if we don't change the policy, orgs D and E would refuse to participate in the channel.

This leads me to think, that the most safe thing that a chaincode instantiator should *always* do is just define a policy per chaincode, because you never know what the future holds.
And if we defined a policy per chaincode, that's basically mimicking the original resource config based approach.

 

I think that though the stop-gap solution is ""good enough until v1.2"" we should also consider the impact on users of having the chaincode lifecycle changed *every version*, and if we could just do this change *once and for all* it is much better than having a stop-gap solution for v1.1 and then at v1.2 have yet another change that would impact users again.

Another argument against this solution is that it has additional development overhead than the full-fledged lifecycle approach has (since its development has been completed).
For the stop-gap solution to be effective, we need to develop additional tooling and it comes with its own cost.

 

So to summarize, I think that we should go for the fully fledged resource config approach, and for the plurality concern raised in FAB-7444:
{quote}_Duplicating the same information in the resource tree and LSCC adds complexity that may lead to security bugs if the synchronization is not done properly or does not happen in an atomic fashion,_
{quote}
We can then just not duplicate the information, and only use LSCC as an enabler for the init() but have it read the information from the resource config sub-tree.

And for the signature collection being out-of-band concern, we can adopt the solution proposed in FAB-7114 (use LSCC or some other chaincode as a registry for signature collection).

1 more thing - I think that the main problem with FAB-7444 is that the peer constructs the write-set for the client, and ideally - the client is the one that should do that since the client needs to give the consent on what to put in LSCC and not the peer. 
This is exactly what the resource config does.
So, I think that FAB-7444 with a variation where the client first queries LSCC to obtain the channel information it lacks, and then constructs the transaction himself (of course, using the SDK code), and endorses it himself with his own certificate is also a valid solution in my opinion. 
[~mastersingh24] , [~elli-androulaki] , [~jyellick] wdyt?;;;","15/May/18 6:34 AM;denyeart;Superseded by FAB-8724;;;",,,,,,,,,,,,,,,,,,,,,
As a fabric administrator I want to be able to specify administrators by OU,FAB-7469,26100,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,angelo.decaro,angelo.decaro,15/Dec/17 9:20 PM,12/Jun/20 12:30 AM,28/Oct/23 3:01 AM,17/Jul/19 1:44 AM,,,,Future,,,fabric-crypto,,,,0,MembershipServices,review-needed,Security,,,"Currently, MSP administrators are named one by one at configuration time. It might be convenient, in certain cases, to able to identifies MSP administrators by using the Organisational Units they belong to without have to name them explicitly. Therefore, we propose to enhance the MSP configuration to allow to specify an OU that identity the administrators of that MSP. Namely, we propose to add the following new protobuf message:

{code:java}
message FabricAdminOUs {
    // If true then an administrators are identities by their OUs, otherwise they need
    // to be named one by one.
    bool   Enable = 1;

    // OU Identifier of the clients
    FabricOUIdentifier adminOUIdentifier = 2;
{code}

to FabricMSPConfig. At setup time, if FabricAdminOUs.Enable is equal True then the MSP will enforce only identities carries the specified OU will be considered administrators of that MSP, otherwise, the previous behaviour is enforced.

[~mastersingh24], [~smithbk], [~elli-androulaki], [~ales], please, have you say :)
",,angelo.decaro,elli-androulaki,qsmen,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8792,,,,,,,,,"1|hzwqfj:3",,,,Unset,,To Do,,,,Unset,,,,,,,,,,,angelo.decaro,elli-androulaki,qsmen,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 4:27 AM;elli-androulaki;Adding also [~jyellick],  [~yacovm], [~C0rWin], [~denyeart]. ;;;","04/Jan/18 8:03 AM;yacovm;The high level idea makes sense for the channel MSPs, though I'm not sure about the implementation. 
Do we want to have both admin certs and this message in the long run? I'm not sure...  My guess would be that it would make sense to consolidate the admin property into 1 proto message, and have that message reflect all possible enumerations of admins, be it one-by-one identities, OUs or fair coin tossing.
Therefore, I'd suggest we also copy the [repeated bytes admins|https://github.com/hyperledger/fabric/blob/release/protos/msp/msp_config.proto#L69] field to that message while we're at it, and then since we have versioned MSPs, we could deprecate the old admin field at some point, no?

Another thing - I think this approach can also be used for the local MSP.
Why not extend the node's [local MSP config|https://github.com/hyperledger/fabric/blob/master/sampleconfig/msp/config.yaml] with an OU that is the administrator OU?;;;",,,,,,,,,,,,,,,,,,,,,
peer chaincode upgrade panics with SIGSEGV,FAB-7470,26101,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,lehors,lehors,lehors,15/Dec/17 10:15 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Dec/17 8:51 PM,v1.1.0-preview,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Following the new channel_update tutorial the command to upgrade the chaincode failed as follows:
{code:java}
# peer chaincode upgrade -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n mycc -v 2.0 -c '{""Args"":[""init"",""a"",""90"",""b"",""210""]}' -P ""OR ('Org1MSP.member','Org2MSP.member','Org3MSP.member')""
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0xbb36bb]

goroutine 1 [running]:
github.com/hyperledger/fabric/peer/chaincode.chaincodeUpgrade(0x0, 0xc4203c4720, 0x0, 0x0)
    /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/upgrade.go:141 +0x4b
github.com/hyperledger/fabric/peer/chaincode.upgradeCmd.func1(0xc4202b3200, 0xc420133700, 0x1, 0x10, 0x0, 0x0)
    /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/upgrade.go:43 +0xb0
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202b3200, 0xc420132a00, 0x10, 0x10, 0xc4202b3200, 0xc420132a00)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x16275c0, 0xf, 0xc420014055, 0x7)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x16275c0, 0x7d, 0xc420014055)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
    /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x493{code}
Code inspection reveals that the ChaincodeCmdFactory is not initialized properly when calling chaincodeUpgrade.

 ","Ubuntu 16.04.1

go version go1.9.2 linux/amd64

 ",lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr0n:",,,,,,,,,,,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/17 1:55 AM;lehors;This bug was actually introduced recently as part of the changes made to support the cfg lifecycle:

https://gerrit.hyperledger.org/r/#/c/15461/51/peer/chaincode/upgrade.go;;;",,,,,,,,,,,,,,,,,,,,,,
Analyze the fabric-test-daily job. Check each of the tests within.,FAB-7472,26104,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,sambhavdutt,sambhavdutt,sambhavdutt,16/Dec/17 1:53 AM,20/Jul/18 11:17 PM,28/Oct/23 3:01 AM,20/Jul/18 11:05 PM,,,,,,,fabric-ci,,,,0,,,,,,"Analyze the fabric-test-daily job, and check for effectiveness
Understand each test case and its parameters , starting with ledger_lte. If the parameters cause delays or lag, find a suitable fix.

Update the test cases with the analyzed parameters for effectiveness, compare. ",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr13:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validate incoming Eventhub registration messages,FAB-7473,26105,24640,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,16/Dec/17 2:02 AM,02/Jan/19 4:30 PM,28/Oct/23 3:01 AM,05/Jan/18 9:22 AM,,,,v1.1.0-alpha,,,fabric-peer,,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr1b:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Dec/17 4:58 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16507/;;;",,,,,,,,,,,,,,,,,,,,,,
Add cryptogen info for additional organization,FAB-7475,26107,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,16/Dec/17 2:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/Apr/18 2:45 AM,,,,,,,fabric-quality,,,,0,,,,,,"When adding a new organization for behave, we must generate new crypto information for the org. ",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr1r:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Apr/18 11:12 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/19787/;;;",,,,,,,,,,,,,,,,,,,,,,
 Bootstrap error in fabric-test-daily-x86_64 as failed to fetch channel block Genesis.,FAB-7476,26108,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,latitiah,sambhavdutt,sambhavdutt,16/Dec/17 3:24 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,20/Jan/18 5:54 PM,,,,v1.1.0,,,fabric-quality,,,,0,ci-failure,,,,," Bootstrapping Hyperledger Fabric fails for two builds due to the following error,

*FAB-4773: Fetching of a channel genesis block*
bootstrap.Bootstrapping Hyperledger Fabric.FAB-4773: Fetching of a channel genesis block

Error Message

The channel block file has not been fetched,
 And a user fetches genesis information for a channel ""mychannel"" from peer ""peer1.org1.example.com"" ... passed in 1.244s
    Then the file ""mychannel.block"" file is fetched from peer ""peer1.org1.example.com"" ... failed in 1.621s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
testConfigs: configs/9f175814e14e11e79aaafa163e11e43c
Unable to generate channel config data: Command '['configtxgen', '-profile', 'SysTestChannel', '-outputCreateChannelTx', u'mychannel.tx', '-channelID', u'mychannel']' returned non-zero exit status 1
Unable to generate channel config data: Command '['configtxgen', '-profile', 'SysTestChannel', '-outputCreateChannelTx', u'mychannel.tx', '-channelID', u'mychannel']' returned non-zero exit status 1
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/mychannel.tx --channelID mychannel --timeout 300 --orderer orderer0.example.com:7050 ""]: {'cli': 'Error occurred [u'docker exec cli /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/mychannel.tx --channelID mychannel --timeout 300 --orderer orderer0.example.com:7050 ""']: 2017-12-15 04:15:52.705 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-12-15 04:15:52.705 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-12-15 04:15:52.870 UTC [grpc] Printf -> DEBU 003 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup orderer0.example.com on 127.0.0.11:53: no such host""; Reconnecting to {orderer0.example.com:7050 <nil>}
Error: Error connecting due to  rpc error: code = Unavailable desc = grpc: the connection is unavailable

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/195/testReport/bootstrap/Bootstrapping%20Hyperledger%20Fabric/FAB_4773__Fetching_of_a_channel_genesis_block/",,denyeart,latitiah,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr1z:",,,,,,,,,,,,,,,,,,,,,denyeart,latitiah,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"20/Dec/17 4:03 AM;scottz;Prior to the Dec 14 daily test run, something changed in fabric (maybe Yacov's update [https://gerrit.hyperledger.org/r/#/c/16191)]. Looks like might be related to our tests steps.

Fails:
 ```
 Scenario: FAB-4773: Fetching of a channel genesis block
 Given I have a crypto config file with 2 orgs, 2 peers, 3 orderers, and 2 users
 And I have a fabric config file
 When the crypto material is generated for TLS network
 And the network is bootstrapped for an orderer
 And the network is bootstrapped for a channel named ""mychannel""
 And I start a fabric network

 * * *

```
 and same test passes if I change the above lines to : `Given I have a bootstrapped fabric network` (which I think does not use TLS)

AND the same test passes if I use this line instead: ` Given I have a bootstrapped fabric network of type solo with tls`

 

The orderer panics right away when starting the network. Here are the logs:

```2017-12-19 17:02:31.858 UTC [orderer/commmon/multichannel] newLedgerResources -> CRIT 02c Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com"")

panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com"")

goroutine 1 [running]:
 * {{github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4202102d0, 0xd09355, 0x27, 0xc4203af090, 0x1, 0x1)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x134}}
 {{github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newLedgerResources(0xc42033e3f0, 0xc420296e70, 0xc420296e70)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:253 +0x391}}
 {{github.com/hyperledger/fabric/orderer/common/multichannel.NewRegistrar(0x137f300, 0xc420510420, 0xc420296d20, 0x137bb40, 0x13dfa60, 0xc420114958, 0x1, 0x1, 0x0)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:144 +0x352}}
 {{github.com/hyperledger/fabric/orderer/common/server.initializeMultichannelRegistrar(0xc42021e780, 0x137bb40, 0x13dfa60, 0xc420114958, 0x1, 0x1, 0xc420541e78)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:253 +0x277}}
 {{github.com/hyperledger/fabric/orderer/common/server.Start(0xcedc1b, 0x5, 0xc42021e780)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:95 +0x24c}}
 {{github.com/hyperledger/fabric/orderer/common/server.Main()}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:75 +0x120}}
 {{main.main()}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20}}```;;;","08/Jan/18 12:09 PM;denyeart;[~latitiah] What's your opinion? Is there a plan for this one? If it is not High priority in the short term could you change to Medium?;;;","17/Jan/18 1:12 AM;latitiah;I'm pretty sure I know where this problem is occurring. I'll fix it.;;;","20/Jan/18 4:50 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/16965/;;;",,,,,,,,,,,,,,,,,,,
TransferMarble failure in fabric-test-merge-x86_64,FAB-7477,26109,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,sambhavdutt,sambhavdutt,16/Dec/17 3:52 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,26/Dec/17 4:30 AM,,,,,,,fabric-quality,,,,0,ci-failure,,,,,"fabric-test-merge-x86_64 failed as the following errors were observed,

*FAB-5791: Test API in SHIM interface using marbles02 and shimApiDriver chaincodes for kafka orderer couchdb db GOLANG lang -- @1.2*

Error Message

Expected response was ""owner"":""jerry""; received Query Result: 
Failing step: And a user receives a response containing ""owner"":""jerry"" ... failed in 0.000s
Location: chaincodes.feature:424
Assertion Failed: Expected response was ""owner"":""jerry""; received Query Result: 
    And a user receives a response containing ""size"":35 ... passed in 0.000s
    And a user receives a response containing ""owner"":""jerry"" ... failed in 0.000s

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/128/testReport/chaincodes/Chaincodes%20Testing/FAB_5791__Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_kafka_orderer_couchdb_db_GOLANG_lang_____1_2_/

",,Nishi,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr27:",,,,,,,,,,,,,,,,,,,,,Nishi,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Dec/17 4:31 AM;scottz;transferMarble() is used in other tests in the same file chaincodes.feature. Check if it worked for them, or if fails for all uses of transferMarble.

Consider raising timeout from 3 to 5 secs in line 418, if intermittent failure.;;;","20/Dec/17 5:15 AM;Nishi;Ran three behave tests:

5791,3888 & 6576 from chaincodes.feature that use transferMarble

All three tests passed successfully locally.

Fabric-test commit level *a2381aa7a01ba210652e4faaa162554989a0ce62*

 ;;;","23/Dec/17 4:56 AM;sambhavdutt;This chaincode test didn't fail in the two builds, #134 and #135. Build #134 and #135 passed successfully.;;;",,,,,,,,,,,,,,,,,,,,
Update configtx.yaml with updates and generate new orderer block,FAB-7479,26112,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,16/Dec/17 5:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,10/Mar/18 5:30 AM,,,,,,,,,,,0,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr2n:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE should accept absolute paths in config files,FAB-7480,26113,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,16/Dec/17 9:48 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,22/Dec/17 3:46 AM,v1.0.5,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"PTE currently does not accept absolute paths in the user input files or service credential files.
 Since some files (crypto-related files, service credentials) can be located outside GOPATH,
 PTE should run correctly when absolute paths are specified.

Failed example for SC file path:
{noformat}
$ cat /tmp/benchmark.json
{
    ""SCFile"": [
        {
            ""ServiceCredentials"": ""/tmp/sc_testorgschannel1.json""
        }
    ],
(snip)
$ node pte-main.js 0 /tmp/benchmark.json 0 0
info: [PTE 0 main]: input parameters: Nid=0, uiFile=/tmp/benchmark.json, tStart=0 PTEid=0
info: [PTE 0 main]: Nid: 0, chaincode_id: sample_cc_testorgschannel1, chaincode_ver: v0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: testorgschannel1
info: [PTE 0 main]: channelOrgName.length: 3, channelOrgName: Org2,Org3,Org1
info: [PTE 0 main]: svcFile;  /tmp/sc_testorgschannel1.json
/opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/pte-main.js:89
if ( typeof(ORGS.gopath) === 'undefined' ) {
                ^

TypeError: Cannot read property 'gopath' of undefined
    at Object.<anonymous> (/opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/pte-main.js:89:17)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:383:7)
    at startup (bootstrap_node.js:149:9)
    at bootstrap_node.js:496:3
{noformat}",,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzyr2v:",,,,Unset,,,,,,Unset,,,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"16/Dec/17 10:32 AM;shimos;CR: https://gerrit.hyperledger.org/r/c/16243/;;;",,,,,,,,,,,,,,,,,,,,,,
'No identity type provided' Error In fabcar Node Sample,FAB-7481,26114,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,edwardsun9,edwardsun9,16/Dec/17 12:57 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Feb/18 3:54 AM,,,,Not a Bug,,,fabric-samples,,,,0,,,,,,"When run the latest fabcar sample registerUser.js in [fabric-samples|https://github.com/hyperledger/fabric-samples] I got the following error:
{quote}Failed to register: Error: fabric-ca request register failed with errors [[{""code"":0,""message"":""No identity type provided. Please provide identity type""}]]{quote}

It can be fix by add 'role' field parameter.

If 'role' is mandatory field, it should provide a default value in sample for less confusing or mentioned in the [document|https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html] at least.


 ",,aambati,blw,denyeart,edwardsun9,n-horiguchi,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr33:",,,,,,,,,,,,,,,,,,,,,aambati,blw,denyeart,edwardsun9,n-horiguchi,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Dec/17 6:12 AM;blw;A workaround for this is to provide a non-null value for the role. [https://stackoverflow.com/questions/47175691/unable-to-registeruser-for-hyperledger-fabric-fabcar-sample-project]

 

However, it states in the node API docs ([https://fabric-sdk-node.github.io/FabricCAClient.html#register__anchor)] that in fabric-ca-client.register(...) the role is optional. I would suggest that the fix for this go into the fabric-sdk-node to make the functionality match the documentation.;;;","10/Jan/18 6:07 PM;zhaochy;[~edwardsun9] could you please provides more details, this sample works good for me;;;","11/Jan/18 4:47 PM;n-horiguchi;I looked into this problem, and found that this problem reproduced fabric-ca v1.0.5 with latest fabric-samples. If you use master branch of fabric-ca, registerUser.js passes as Zhao Chaoyi says. The related fix is from FAB-5697 which is in v1.1.0-preview, but not in v1.0.5.

I'm not sure that fixing sample code to avoid this problem is a good idea, because fabric-sample seems to be targetted for master at the time. We need some extra effort to keep the samples runnable both for master and stable, but is it worth doing?;;;","15/Feb/18 1:59 AM;denyeart;[~aambati] Can you take a look and provide your opinion?

Are we good on master fabric-samples against master fabric (1.1)?

Is a fix needed against samples release branch (1.0) to work with Fabric release branch (1.0)?;;;","16/Feb/18 3:53 AM;aambati;I have verified that 1.0.x fabcar works fine with 1.0.x fabric images and 1.1 fabcar works fine with 1.1 fabric images. I don't think we need to make any changes. Marking this as done.;;;",,,,,,,,,,,,,,,,,,
TLS should support certificate revocation lists,FAB-7482,26115,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,mastersingh24,mastersingh24,16/Dec/17 9:24 PM,17/Nov/20 12:58 AM,28/Oct/23 3:01 AM,,,,,,,,fabric-orderer,fabric-peer,,,1,operator,,,,,"By default, Go does not provide support for checking CRLs, but the Go TLS stack has plug points that can be used to implement CRL support.

As Fabric supports mutual TLS, we should optionally add support for checking client certificates against CRLs.",,ashutosh_kumar,bestbeforetoday,mastersingh24,oborovyk,rhegde,robmurgai,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyr3b:",,,,Unset,,,,,,Unset,,,,,,,,,,,ashutosh_kumar,bestbeforetoday,mastersingh24,oborovyk,rhegde,robmurgai,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/18 1:36 AM;ashutosh_kumar;This implementation has performance implication. May be this can be implemented in fabric peer Client cert validation logic where the CRL check result can be cached for certain period of time.;;;","29/Aug/20 6:00 AM;yacovm;I [implemented|https://github.com/hyperledger/fabric/pull/1824 ] CRL support in Fabric communication package. We can eliminate all performance penalties by moving [ComparisonMemoizer|https://github.com/hyperledger/fabric/blob/f54d3cda30c731b55981d7029b819e22fce4bf06/orderer/common/cluster/util.go#L739] from *orderer/common/cluster* to *common/* and then using it to cache lookups.

;;;",,,,,,,,,,,,,,,,,,,,,
Make InitTLSForPeer fail if CA cert loading fails,FAB-7484,26117,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,17/Dec/17 3:59 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,17/Dec/17 9:44 PM,v1.0.0,v1.1.0,,v1.1.0,,,fabric-peer,,,,0,,,,,,"The method InitTLSForPeer falls back on an empty root CA cert pool if the config option isn't specified.

{code}
	if config.GetPath(""peer.tls.rootcert.file"") != """" {
		var err error
		creds, err = credentials.NewClientTLSFromFile(config.GetPath(""peer.tls.rootcert.file""), sn)
		if err != nil {
			grpclog.Fatalf(""Failed to create TLS credentials %v"", err)
		}
	} else {
		creds = credentials.NewClientTLSFromCert(nil, sn)
}
{code}

It doesn't make sense to do that, since we don't have any way of trusting a remote node in such a case. 

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyr3j:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Dec/17 4:14 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16253/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix typo in node/fabcar.js,FAB-7487,26120,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nikklein,nikklein,nikklein,17/Dec/17 5:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Dec/17 6:46 AM,,,,,,,fabric-samples,,,,0,,,,,,"The function name changeCarowner spelled incorrectly in fabric-samples/chaincode/fabcar/node/fabcar.js. According to this [tutorial|http://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html] it should be spelled changeCarOwner. ",,nikklein,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0bb:",,,,,,Sprint 16 - SDK node,,,,,,,,,,,,,,,nikklein,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Add mutual TLS support for peer binary when used as client CLI,FAB-7490,26125,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,gbolo,gbolo,18/Dec/17 1:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/Jan/18 6:55 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Mutual TLS support hasn't yet been added when using the peer binary as a cli client. I have tested the following patch which works: [https://gerrit.hyperledger.org/r/c/16263/]

Without this patch, the peer binary does NOT present a client cert, despite being configured to do so:

 

{{*client config:*}}
 {{CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem}}
 {{CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem}}
 {{CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem}}
 {{CORE_PEER_TLS_CLIENTAUTHREQUIRED=true}}

{{*remote peer logs:*}}

{{2017-12-16 16:47:08.900 UTC [grpc] Printf -> DEBU 04d grpc: Server.Serve failed to complete security handshake from ""10.177.177.14:41336"": tls: client didn't provide a certificate}}",,gbolo,JonathanLevi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7561,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr4f:",,,,,,,,,,,,,,,,,,,,,gbolo,JonathanLevi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Dec/17 5:15 AM;mastersingh24;The 
{code:java}
peer channel ...
peer chaincode instantiate ...
{code}
commands fail as well;;;","04/Jan/18 5:12 AM;mastersingh24;https://gerrit.hyperledger.org/r/16555;;;",,,,,,,,,,,,,,,,,,,,,
client TLS cert support for gossip,FAB-7491,26127,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,gbolo,gbolo,18/Dec/17 7:23 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Dec/17 2:18 PM,,,,,,,fabric-peer,,,,0,,,,,,"When setting the following options on the peer:
{quote}CLIENT TLS OPTIONS FOR PEER
 CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
 CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem
 CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem
 CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem
{quote}
Peer gossip seems to break:
{quote}2017-12-17 18:21:46.965 UTC [gossip/comm] GossipStream -> ERRO 2ef Authentication failed: Expected [67 232 132 7 246 23 86 113 92 109 252 25 76 80 22 116 173 247 79 106 80 232 108 84 39 197 150 112 7 145 55 118] in remote hash of TLS cert, but got [132 27 132 114 21 44 231 194 132 181 199 159 196 218 104 76 83 58 38 69 244 237 58 49 33 56 82 187 180 177 110 100]
{quote}
Jugding by my cert hashes, the message is translated to:
 ""expected *[hash_of_client_cert]* but got *[hash_of_server_cert]*""

These messages don't appear if you use the default server certs as client certs (which is not ideal - it would defy X509v3 Extended Key Usage) by commenting out:
{quote} - CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem

 - CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem{quote}",,gbolo,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr4n:",,,,,,,,,,,,,,,,,,,,,gbolo,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Dec/17 5:29 AM;gbolo;Note that gossip will ONLY work when using the same server cert as client and when that cert has both usages:
{quote}X509v3 Extended Key Usage: 
 TLS Web Server Authentication, TLS Web Client Authentication
{quote};;;","20/Dec/17 12:32 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16319/ ;;;","20/Dec/17 2:17 PM;gbolo;Hi [~yacovm]

Thank you for the fix, I was able to confirm that the peers can now gossip using proper TLS certs with specific key usages for each type (server and client)

 
{code:java}
# SERVER TLS OPTIONS FOR PEER
- CORE_PEER_TLS_ENABLED=true
- CORE_PEER_TLS_CERT_FILE=/data/tls/server_wild_vme_sk_dev.pem
- CORE_PEER_TLS_KEY_FILE=/data/tls/server_wild_vme_sk_dev-key.pem
- CORE_PEER_TLS_ROOTCERT_FILE=/data/tls/ca_root.pem
# CLIENT TLS OPTIONS FOR PEER
- CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
- CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem
- CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem
- CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem

# Key Usage
/data/tls/server_wild_vme_sk_dev.pem - TLS Web Server Authentication
/data/tls/client_fabric-dev.pem - TLS Web Client Authentication{code}
 

 

 ;;;",,,,,,,,,,,,,,,,,,,,
Fix bootstrap config error in fabric-samples,FAB-7492,26128,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Jing.Cao,Jing.Cao,Jing.Cao,18/Dec/17 2:02 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/Dec/17 2:20 PM,,,,,,,fabric-samples,,,,0,,,,,,"In project fabric-samples, in the file fabric-samples/first-network/base/docker-compose-base.yaml Line 100,

the bootstrap config of peer1.org2 should be ""peer0.org2.example.com:7051"", rather than ""peer1.org2.example.com:7051"", otherwise the peer0.org2 cannot know the existence of peer1.org2.",,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr4v:",,,,,,,,,,,,,,,,,,,,,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix config error in fabric-samples,FAB-7493,26129,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Jing.Cao,Jing.Cao,Jing.Cao,18/Dec/17 2:23 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Dec/17 3:58 PM,,,,,,,fabric-samples,,,,0,,,,,,"In project fabric-samples,

in the file fabric-samples/first-network/base/docker-compose-base.yaml Line 100,

the bootstrap config of peer1.org2 should be ""peer0.org2.example.com:7051"",

rather than ""peer1.org2.example.com:7051"",

otherwise the peer0.org2 cannot know the existence of peer1.org2.",,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr53:",,,,,,,,,,,,,,,,,,,,,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix config error in fabric-samples,FAB-7494,26131,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,Jing.Cao,Jing.Cao,18/Dec/17 3:58 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 12:48 PM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"In project fabric-samples,

in the file fabric-samples/first-network/base/docker-compose-base.yaml Line 100,

the bootstrap config of peer1.org2 should be ""peer0.org2.example.com:7051"",

rather than ""peer1.org2.example.com:7051"",

otherwise the peer0.org2 cannot know the existence of peer1.org2.",,denyeart,Jing.Cao,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr5j:",,,,,,,,,,,,,,,,,,,,,denyeart,Jing.Cao,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Feb/18 12:56 AM;Clayton Sims;What is the eta for the fix?;;;","21/Feb/18 5:53 AM;denyeart;[~yacovm] Could you review the byfn gossip settings and making any adjustments if needed?;;;","21/Feb/18 6:10 AM;yacovm;here you go https://gerrit.hyperledger.org/r/#/c/18107/;;;",,,,,,,,,,,,,,,,,,,,
Implement chaincode instantiate and upgrade,FAB-7495,26135,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MichaelWang,MichaelWang,MichaelWang,18/Dec/17 9:54 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,07/Feb/18 3:29 PM,,,,,,,,,,,0,,,,,,implement chain code deploy and upgrade,,baohua,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyr5r:",,,,Unset,,,,,20.0,Unset,,,,,,,,,,,baohua,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/18 3:29 PM;baohua;https://gerrit.hyperledger.org/r/#/c/17565/;;;",,,,,,,,,,,,,,,,,,,,,,
Revert chaincode lifecycle changes that were made in FAB-6042 (resource config tree approach),FAB-7497,26142,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,denyeart,denyeart,19/Dec/17 3:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Jan/18 5:12 AM,,,,v1.1.0,v1.1.0-alpha,,fabric-orderer,,,,0,release-planning-1.1,,,,,"Revert chaincode lifecycle changes that were made in FAB-6042 (resource config tree approach).

Details to be filled in via subtasks.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6042,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr67:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Remove depricated API from committer,FAB-7500,26146,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,19/Dec/17 6:57 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,28/Dec/17 12:37 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Since new API ledger API was introduced in order to support FAB-1151, e.g. 

{code}
	// CommitWithPvtData commits the block and the corresponding pvt data in an atomic operation
	CommitWithPvtData(blockAndPvtdata *BlockAndPvtData) error
{code}

and production code path stopped to use previous {{Commit}} API, following code of the committer is no longer needed and could be removed:

{code}
// Commit commits blcock to into the ledger
// Note, it is important that this always be called serially
func (lc *LedgerCommitter) Commit(block *common.Block) error {
	// Do validation and whatever needed before
	// committing new block
	if err := lc.preCommit(block); err != nil {
		return err
	}

	// Committing new block
	if err := lc.PeerLedger.CommitWithPvtData(&ledger.BlockAndPvtData{Block: block}); err != nil {
		return err
	}

	// post commit actions, such as event publishing
	lc.postCommit(block)

	return nil
}
{code}

As well as following {{TODO}} labels in the committed code no more relevant, since resolved:

{code}
	// TODO: Need to validate the hashes of private data with those in the block
{code}

and 

{code}
        // TODO: Need to create filter based on chaincode collections policies
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyr6v:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-node8-merge-x86_64 test failed due to 'premature execution' of chaincode.,FAB-7501,26147,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,sambhavdutt,sambhavdutt,19/Dec/17 7:25 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,14/Jan/18 2:40 AM,,,,,,,fabric-quality,,,,0,ci-failure,,,,,"fabric-sdk-node8-merge-x86_64 failed as the following chaincode error was observed in the build #84,

22:11:56 not ok 1258 Error: error executing chaincode: premature execution - chaincode (end2endnodesdk:v3) is being launched
22:11:56   ---
22:11:56     operator: error
22:11:56     expected: |-
22:11:56       undefined
22:11:56     actual: |-
22:11:56       { [Error: error executing chaincode: premature execution - chaincode (end2endnodesdk:v3) is being launched] code: 2, metadata: { _internal_repr: {} } }
22:11:56     at: process.onetime (/w/workspace/fabric-sdk-node8-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
22:11:56     stack: |-
22:11:56       Error: error executing chaincode: premature execution - chaincode (end2endnodesdk:v3) is being launched

*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node8-merge-x86_64/84/consoleFull",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr73:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/18 2:40 AM;sambhavdutt;The end2endnodesdk test that failed in build #84, has been passed the last 3 builds. The end2endnodesdk tests are working successfully without any errors.;;;",,,,,,,,,,,,,,,,,,,,,,
Remove un-used code from msp,FAB-7502,26148,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,19/Dec/17 8:13 AM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,24/Dec/17 11:01 PM,v1.1.0,,,,,,fabric-crypto,,,,0,,,,,,"Some code is the msp package is un-used.
",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyr7b:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"PTE fails to join channels, and install/instantiate chaincodes when multiple organizations are specified",FAB-7503,26149,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,19/Dec/17 10:38 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Jan/18 12:32 AM,v1.0.5,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"When multiple organizations are specified in user inputs, PTE fails to join a channel, to install a chaincode, or to instantiate a chaincode, and results in some error or an infinite loop.

The example below works successfully when only single organization is specified in user inputs.

*To join a channel:*

{noformat}
$ cat /tmp/input_testorgschannel1_join_channel.json
{
    ""SCFile"": [
        {
            ""ServiceCredentials"": ""/tmp/sc_testorgschannel1.json""
        }
    ],
    ""TLS"": ""enabled"",
    ""chaincodeID"": ""sample_cc"",
    ""chaincodeVer"": ""v0"",
    ""channelID"": ""_testorgschannel1"",
    ""channelOpt"": {
        ""action"": ""join"",
        ""name"": ""testorgschannel1"",
        ""orgName"": [
            ""Org1"",
            ""Org2"",
            ""Org3""
        ]
    },
    ""logLevel"": ""ERROR"",
    ""nProcPerOrg"": 1,
    ""targetPeers"": ""OrgAnchor"",
    ""transType"": ""Channel""
}

$ node pte-main.js 0 /tmp/input_testorgschannel1_join_channel.json 0 0
info: [PTE 0 main]: input parameters: Nid=0, uiFile=/tmp/input_testorgschannel1_join_channel.json, tStart=0 PTEid=0
info: [PTE 0 main]: Nid: 0, chaincode_id: sample_cc_testorgschannel1, chaincode_ver: v0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: testorgschannel1
info: [PTE 0 main]: channelOrgName.length: 3, channelOrgName: Org1,Org2,Org3
info: [PTE 0 main]: svcFile;  /tmp/sc_testorgschannel1.json
info: [PTE 0 main]: GOPATH:  /opt/gopath
info: [PTE 0 main]: nProcPerOrg  1
info: [PTE 0 main]: [performance_main] org= Org1, org Name= PeerOrg1
info: [PTE 0 main]: [performance_main] channel name:  testorgschannel1
info: [PTE 0 main]: [joinChannel] Calling peers in organization (PeerOrg1) to join the channel (testorgschannel1)
info: [PTE 0 main]: [joinChannel] user=admin, secret=adminpw
info: [PTE 0 main]: [chainAddOrderer] channel name:  testorgschannel1
info: [PTE 0 main]: [chainAddOrderer] channel orderers:  grpc.ssl_target_name_override=orderer0.example.com, grpc.default_authority=orderer0.example.com, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.7.3, _url=gr pcs://localhost:5005, , addr=localhost:5005, _request_timeout=45000,
info: [PTE 0 main]: [performance_main] org= Org2, org Name= PeerOrg2
info: [PTE 0 main]: [performance_main] channel name:  testorgschannel1
info: [PTE 0 main]: [joinChannel] Calling peers in organization (PeerOrg2) to join the channel (testorgschannel1)
info: [PTE 0 main]: [joinChannel] user=admin, secret=adminpw
info: [PTE 0 main]: [chainAddOrderer] channel name:  testorgschannel1
info: [PTE 0 main]: [chainAddOrderer] channel orderers:  grpc.ssl_target_name_override=orderer0.example.com, grpc.default_authority=orderer0.example.com, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.7.3, _url=gr pcs://localhost:5005, , addr=localhost:5005, _request_timeout=45000,
info: [PTE 0 main]: [performance_main] org= Org3, org Name= PeerOrg3
info: [PTE 0 main]: [performance_main] channel name:  testorgschannel1                                                                                                                                                                                                         info: [PTE 0 main]: [joinChannel] Calling peers in organization (PeerOrg3) to join the channel (testorgschannel1)
info: [PTE 0 main]: [joinChannel] user=admin, secret=adminpw
info: [PTE 0 main]: [chainAddOrderer] channel name:  testorgschannel1
info: [PTE 0 main]: [chainAddOrderer] channel orderers:  grpc.ssl_target_name_override=orderer0.example.com, grpc.default_authority=orderer0.example.com, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.primary_user_agent=grpc-node/1.7.3, _url=grpcs://localhost:5005, , addr=localhost:5005, _request_timeout=45000,
info: [PTE util]:  Org1 admin_cert undefined
info: [PTE util]:  Org2 admin_cert undefined
info: [PTE util]:  Org3 admin_cert undefined
info: [PTE 0 main]: [joinChannel:Org2] Successfully enrolled orderer 'admin'
info: [PTE 0 main]: [joinChannel:Org1] Successfully enrolled orderer 'admin'
info: [PTE 0 main]: [joinChannel:Org3] Successfully enrolled orderer 'admin'
info: [PTE 0 main]: [joinChannel:org=testorgschannel1:Org2] Successfully got the genesis block
info: [PTE util]:  >>>> getting the org admin
info: [PTE util]:  Org2 admin_cert undefined
info: [PTE 0 main]: [joinChannel:org=testorgschannel1:Org1] Successfully got the genesis block
info: [PTE util]:  >>>> getting the org admin
info: [PTE util]:  Org1 admin_cert undefined
info: [PTE 0 main]: [joinChannel:org=testorgschannel1:Org3] Successfully got the genesis block
info: [PTE util]:  >>>> getting the org admin
info: [PTE util]:  Org3 admin_cert undefined
info: [PTE 0 main]: [joinChannel] Successfully enrolled org:Org2 'admin'
info: [PTE 0 main]: [channelAddPeerEvent] channel name:  testorgschannel1
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer0.org2.example.com"",""grpc.default_authority"":""peer0.org2.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1}
info: [PTE 0 main]: [channelAddPeerEvent] requests: grpcs://localhost:7063, events: grpcs://localhost:6053
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer1.org2.example.com"",""grpc.default_authority"":""peer1.org2.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1}
info: [PTE 0 main]: [channelAddPeerEvent] requests: grpcs://localhost:7064, events: grpcs://localhost:6054
info: [PTE 0 main]: [joinChannel] Successfully enrolled org:Org1 'admin'
info: [PTE 0 main]: [channelAddPeerEvent] channel name:  testorgschannel1
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer0.org1.example.com"",""grpc.default_authority"":""peer0.org1.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1}
info: [PTE 0 main]: [channelAddPeerEvent] requests: grpcs://localhost:7061, events: grpcs://localhost:6051
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer1.org1.example.com"",""grpc.default_authority"":""peer1.org1.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1}
info: [PTE 0 main]: [channelAddPeerEvent] requests: grpcs://localhost:7062, events: grpcs://localhost:6052
info: [PTE 0 main]: [joinChannel] Successfully enrolled org:Org3 'admin'
info: [PTE 0 main]: [channelAddPeerEvent] channel name:  testorgschannel1
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer0.org3.example.com"",""grpc.default_authority"":""peer0.org3.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1}
info: [PTE 0 main]: [channelAddPeerEvent] requests: grpcs://localhost:7065, events: grpcs://localhost:6055
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer1.org3.example.com"",""grpc.default_authority"":""peer1.org3.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1}
info: [PTE 0 main]: [channelAddPeerEvent] requests: grpcs://localhost:7066, events: grpcs://localhost:6056
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err expected MSP ID PeerOrg2, received PeerOrg3
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:554:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err expected MSP ID PeerOrg2, received PeerOrg1
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:554:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err expected MSP ID PeerOrg2, received PeerOrg3
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:554:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err expected MSP ID PeerOrg2, received PeerOrg1
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:554:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err expected MSP ID PeerOrg1, received PeerOrg3
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:554:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err expected MSP ID PeerOrg1, received PeerOrg3
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:554:15
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6052
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6052
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6054
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6054
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6054
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6053
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6053
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6053
info: [PTE 0 main]: [joinChannel] The new channel has been successfully joined on peer localhost:6056
info: [PTE 0 main]: [joinChannel] join Channel R E S P O N S E : [[{""version"":0,""timestamp"":null,""response"":{""status"":200,""message"":"""",""payload"":{""type"":""Buffer"",""data"":[]}},""payload"":{""type"":""Buffer"",""data"":[]},""endorsement"":null},{""version"":0,""timestamp"":null,""response"":{""status"":200,""message"":"""",""payload"":{""type"":""Buffer"",""data"":[]}},""payload"":{""type"":""Buffer"",""data"":[]},""endorsement"":null}],null,null]
info: [PTE 0 main]: [joinChannel] Successfully joined peers in (testorgschannel1:PeerOrg3) {noformat}

*To install a chaincode: (results in infinite loop)*

{noformat}
$ cat /tmp/input_testorgschannel1_install_chaincode.json
{
    ""SCFile"": [
        {
            ""ServiceCredentials"": ""/tmp/sc_testorgschannel1.json""
        }
    ],
    ""TLS"": ""enabled"",
    ""chaincodeID"": ""sample_cc"",
    ""chaincodeVer"": ""v0"",
    ""channelID"": ""_testorgschannel1"",
    ""channelOpt"": {
        ""name"": ""testorgschannel1"",
        ""orgName"": [
            ""Org1"",
            ""Org2"",
            ""Org3""
        ]
    },
    ""deploy"": {
        ""args"": [],
        ""chaincodePath"": ""github.com/hyperledger/fabric-test/chaincodes/samplecc/go"",
        ""fcn"": ""init""
    },
    ""logLevel"": ""ERROR"",
    ""nProcPerOrg"": 1,
    ""transType"": ""Install""
}
$ node pte-main.js 0 /tmp/input_testorgschannel1_install_chaincode.json 0 0
info: [PTE 0 main]: input parameters: Nid=0, uiFile=/tmp/input_testorgschannel1_install_chaincode.json, tStart=0 PTEid=0
info: [PTE 0 main]: Nid: 0, chaincode_id: sample_cc_testorgschannel1, chaincode_ver: v0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: testorgschannel1
info: [PTE 0 main]: channelOrgName.length: 3, channelOrgName: Org1,Org2,Org3
info: [PTE 0 main]: svcFile;  /tmp/sc_testorgschannel1.json
info: [PTE 0 main]: GOPATH:  /opt/gopath
info: [PTE 0 main]: nProcPerOrg  1
info: [PTE 0 main]: [performance_main] org= Org1, org Name= PeerOrg1
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= adminpw
info: [PTE 0 main]: [performance_main] org= Org2, org Name= PeerOrg2
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= adminpw
info: [PTE 0 main]: [performance_main] org= Org2, org Name= PeerOrg2
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] Deploy: user= admin, secret= adminpw {noformat}

*To instantiate a chaincode: (also results in infinite loop)*

{noformat}
$ cat /tmp/input_testorgschannel1_instantiate_chaincode.json
{
    ""SCFile"": [
        {
            ""ServiceCredentials"": ""/tmp/sc_testorgschannel1.json""
        }
    ],
    ""TLS"": ""enabled"",
    ""chaincodeID"": ""sample_cc"",
    ""chaincodeVer"": ""v0"",
    ""channelID"": ""_testorgschannel1"",
    ""channelOpt"": {
        ""name"": ""testorgschannel1"",
        ""orgName"": [
            ""Org1"",
            ""Org2"",
            ""Org3""
        ]
    },
    ""deploy"": {
        ""args"": [],
        ""chaincodePath"": ""github.com/hyperledger/fabric-test/chaincodes/samplecc/go"",
        ""fcn"": ""init""
    },
    ""logLevel"": ""ERROR"",
    ""nProcPerOrg"": 1,
    ""transType"": ""Instantiate""
}

$ node pte-main.js 0 /tmp/input_testorgschannel1_instantiate_chaincode.json 0 0
info: [PTE 0 main]: input parameters: Nid=0, uiFile=/tmp/input_testorgschannel1_instantiate_chaincode.json, tStart=0 PTEid=0
info: [PTE 0 main]: Nid: 0, chaincode_id: sample_cc_testorgschannel1, chaincode_ver: v0
info: [PTE 0 main]: TLS: ENABLED
info: [PTE 0 main]: channelName: testorgschannel1
info: [PTE 0 main]: channelOrgName.length: 3, channelOrgName: Org1,Org2,Org3
info: [PTE 0 main]: svcFile;  /tmp/sc_testorgschannel1.json
info: [PTE 0 main]: GOPATH:  /opt/gopath
info: [PTE 0 main]: nProcPerOrg  1
info: [PTE 0 main]: [performance_main] org= Org1, org Name= PeerOrg1
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] instantiate: user= admin, secret= adminpw
info: [PTE 0 main]: [performance_main] org= Org2, org Name= PeerOrg2
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] instantiate: user= admin, secret= adminpw
info: [PTE 0 main]: [performance_main] org= Org2, org Name= PeerOrg2
info: [PTE 0 main]: chaincode language: golang, path: github.com/hyperledger/fabric-test/chaincodes/samplecc/go
info: [PTE 0 main]: [performance_main] instantiate: user= admin, secret= adminpw
info: [PTE 0 main]: [performance_main] org= Org2, org Name= PeerOrg2 ....
{noformat}

",fabric-test commit 133e7946c442a67a8f9ecdeea10b01686e207577,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyr7j:",,,,,,,,,,,,,,,,,,,,,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"10/Jan/18 6:35 AM;shimos;CR: https://gerrit.hyperledger.org/r/c/16685/;;;",,,,,,,,,,,,,,,,,,,,,,
Documentation: multiple chaincode,FAB-7505,26152,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,nasht00,nasht00,19/Dec/17 9:33 PM,23/Jan/20 7:21 AM,28/Oct/23 3:02 AM,23/Jan/20 7:21 AM,,,,,,,fabric-docs,,,,1,stale-item,,,,,"The documentation surrounding multiple chaincode scenarios is non-existent.

I will first cite several quotes from the existing documentation:
{quote} Ledger state created by a chaincode is scoped exclusively to that chaincode and can’t be accessed directly by another chaincode.
(https://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/chaincode4ade.html)
{quote}
Can someone clarify what that means?
If my network deals with various types of assets, connected to each other through transactions, then ALL of the logic needs to be in a single chaincode? Other chaincodes on the same channel don't share the world state?
I can't have a chaincode to manage Widgets lifecycle, and another to manage Gagdets lifecycle?

I'm asking both technically, and best practice.
{quote}Given the appropriate permission, a chaincode may invoke another chaincode to access its state within the same network.
(https://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/chaincode4ade.html)
{quote}
What appropriate permission? How?
{quote}*State partitioning.* Keys in the KVS can be recognized from their name to belong to a particular chaincode, in the sense that only transaction of a certain chaincode may modify the keys belonging to this chaincode. In principle, any chaincode can read the keys belonging to other chaincodes. 
[https://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/arch-deep-dive.html#state]
{quote}
So when I call PutState/GetState, the key I pass is already appended with the current chaincode name? Or not?

How can I read keys belonging to other chaincodes?

What about across channels? I see some examples of this in the source code ([https://github.com/hyperledger/fabric/blob/master/examples/chaincode/go/chaincode_example05/chaincode_example05.go),] but no mentioning anywhere in the docs.

 

To sum up, I think an ""Advanced Chaincode"" tutorial is needed here to cover all those things. Or at the very least clarify what is supported and what is not.",,nasht00,sykesm,WillHu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu0f:",,,,,,,,,,,,,,,,,,,,,nasht00,sykesm,WillHu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/18 10:29 AM;WillHu;Hey [~nasht00], happened to see your suggestoin around ""chaincode calls another chaincode""...

I did some test on my local, deploying and instantiating the chaincodes with different chaincode NAME on the peer. So on peerA, we have mycc1 and mycc2.

mycc1 & mycc2 cannot share the value for the same key, they are totally seperate.

However, by using InvokeChaincode in mycc2, mycc2 can successfully query the value from mycc1, can invoke the same key as well..;;;","23/Jan/20 7:21 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to allow chaincodes to evaluate application policies using channel's MSPs,FAB-7506,26154,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mathiasb303,elli-androulaki,elli-androulaki,19/Dec/17 10:46 PM,23/Jan/20 7:21 AM,28/Oct/23 3:02 AM,23/Jan/20 7:21 AM,,,,,,,fabric-crypto,,,19/Jan/18 12:00 AM,0,stale-item,,,,,"This was discussed with many people including [~elli-androulaki], [~mathiasb303], [~angelo.decaro].

h1. 1. Motivation

Application chaincodes are required to authenticate the means by which the chaincode has been invoked, as authorised or not, to access (read/write) parts of its state or its services (e.g., connect to some third party to retrieve confidential info). An application chaincode invocation may be triggered either directly by a proposal referring to that chaincode, or by another chaincode’s invocation. One could thus, identify two paths a chaincode may decide to move to “authorise” the invocation:
 # By directly assessing the rights of the invoker. An application chaincode’s invocation (even if the invocation is called by another chaincode) is ultimately triggered by a user’s proposal; given this, a chaincode may want to choose to directly evaluate the access rights of the creator of the proposal who led to this chaincode’s execution.
 # By assessing the rights of the chaincode that invoked it. Two or more chaincodes may belong to the same application, and therefore may trust each other. That is, a chaincode may trust the access control checks performed inside the logic of another chaincode and therefore it is fine to be invokable by the latter. This, in some cases could optimise performance as access authorisation can be deduplicated. Recall that checks on the invoking chaincode are usually faster than evaluation of signature-based policies.

A couple of options to pursue for either of the above mechanisms. This draft will elaborate on how RAPI could be leveraged to do this.

*Background on RAPI.* Resources peer API (formerly called Resource system chaincode) is initialised with a set of policies at the time when a peer is requested to join a channel. These policies govern access control of system APIs (or system chaincodes).

As discussed in FAB-6042, each channel maintains a resources tree, which among other things, contains information on each chaincode. In particular, at chaincode deploy time, a subtree is created in the resources tree under /Resources/Chaincodes to include information on the freshly created chaincode:
{code:java}
 <Resources>
    <Chaincodes>
        <Chaincode1>
            (ID) : {
                CodeHash
                InstalledVersion
            }
            (EndorsementPolicy) : {
                PolicyReference
            }
        ...
        <ChaincodeN>
    <GlobalPolicies>
        |Policy1|
        ...
        |PolicyN| 
{code}
Where {{<xxx>}} indicates a group of name {{xxx}}, {{|xxx|}} indicates a policy of name {{xxx}}, and {{(xxx)}} indicates a value of name {{xxx}}.

More specifically, each chaincode is configured at deployment time with information to compose its identifier, i.e., hash of the code to be executed in it, and its running version, as well as its endorsement policy. Implicitly an admin policy for that chaincode is also defined. This is because when defining the chaincode sub-tree itself, a mod-policy for each item in the tree needs to be specified.

Ultimately as specified here, the per-chaincode information specified at chaincode deployment time aims to be include more components, e.g.,  a list of policies that chaincode function could identify, and/or list of collections and their interfaces.

{code:java}
            <Functions>
                (Function1) : {
                    InvocationPolicyReference
                    EndorsementPolicyReference
                }
                ...
                (FunctionN) : {
                    InvocationPolicyReference
                    EndorsementPolicyReference
                }
            <Collections>
                (Collection1) : {
                    ReadPolicyReference
                    EndorsementPolicyReference
                }
                ...
                (CollectionN) : {
                    ReadPolicyReference
                    EndorsementPolicyReference
                }
{code}

The functions subtree aims to represent access policies of each chaincode function.

h1. 2. Invoker-based access control enforcement

The resources tree can be extended to maintain access policies associated to a given application chaincode and its functions and/or help that these policies are evaluated. This implies two capabilities specified in a “Resources API” (RAPI or RSCC) that can work in a complementary fashion.

h2. 2.1 Bind Application Chaincode (functions) to specific policies

At instantiation time, chaincode instantiator can provide a set of policies that could be used for that chaincode’s purposes. That is, these policies can be namespaced with this chaincode’s identifier, and the chaincode can call RAPI to evaluate one of these policies on the chaincode’s behalf via chaincode to system chaincode query. 

h3. 2.1.1 Policy specification

Specification of these policies can take place during chaincode instantiation, where the configuration transaction that signifies the instantiation of a chaincode (config_update for a chaincode deploy) is enhanced with a list of chaincode policies, e.g., 


{code:java}
            <CCPolicies>
                (Policy1) : {
                    Policy1Reference
                }
                (Policy2) : {
                    Policy2Reference
                }
{code}

More specifically, at chaincode deploy time the chaincode’s configuration tree would include a list of policy references, and their modification policies. Modification policies would essentially define authorisation to modify chaincode policies. 

At validation of chaincode deployment, committing peers, in addition to the other checks they do, would need to check that policy references match an existing policy.

Note: For chaincode upgrade similar remarks would apply. 

h3. 2.1.2 Evaluation of an application chaincode policy 

After being instantiated, and during its execution, the chaincode may wish to evaluate one or more of the policies it specified in its instantiation. For this the chaincode could invoke the following function available to the peer in the form of RAPI. 


{code:java}
        Func evaluatePolicy(policyRef string, idinfo interface{}) error
{code}


Where, PolicyRef would represent the path of the policy to be evaluated in the resources tree, e.g., /ChannelID/Application/Readers, or /ChannelID/Chaincodes/ChaincodeA/mypolicy.

Peer would leverage for RAPI calls the the respective channel resource tree and MSP capabilities. The RAPI will be exposed to the peer in the form of a system chaincode, e.g., RSCC.

h3. 2.1.3 Update of a policy of an application chaincode

Let now an application chaincode instantiated on a channel, and a few RSCC policies. Each policy, as described above would be namespaced under the channel identifier, and an identifier for the chaincode that owns it (identifier or name).  Now assume that a change in these policies is required. A change could include:
* Addition of a new policy under the same namespace
* Change of an existing policy under the chaincode’s namespace
* Removal of an existing policy under the chaincode’s namespace - can be accompanied by chaincode upgrade

Recall that updates to the chaincode subtree of Resources would be triggered via transactions that have the form of config_updates. That is, a (properly authorised) client or set of clients would need to submit a config_update to the channel referencing the item to be upgraded, and content of the  new version of its. 

Validation of modification of CCPolicies content, i.e., of the list of policies residing under a chaincode in resources tree, will quest for signatures/approvals from a list of entities that satisfy the CCPolicies modification policy. Similarly modification of the content of an existing policy under CCPolicies, would require approvals from the list of entities that would satisfy that policy’s modification policy in the Resources tree.

h2. 2.2 Arbitrary policy evaluation for a chaincode via RSCC

In 2.1 policy specification, it is required that all the policies a specific chaincode is to leverage are created up front. It is also required that policies are publicly visible, since they constitute part of the Resources channel-specific state. However, there may be cases of chaincodes who wish to keep confidential policies that they may apply (notice that installation is a process that takes place locally on the peer side), and that may nevertheless wish to leverage channel MSPs (and respective MSP management mechanisms) to evaluate such policies. 

Such requirements can be dealt with in the following ways:
# By extending RAPI or introducing a new chaincode that would perform policy evaluation using the channel’s msp manager
# By introducing RSCC/p whose operation is similar to the RSCC/c but only private

In case (1), required extensions would include the following functions
* {noformat}func (rscc *Rscc) EvaluatePolicy( policy []byte, signedData SignedData ) error{noformat}
* 
{noformat}
func (rscc *Rscc) ValidateIdentity( serIdentity []byte ) error 
{noformat}

* 
{noformat}
func (rscc *Rscc) Verify( serIdentity []byte, signature []byte, message[]byte, opts SigOpts) error
{noformat}

* 
{noformat}
func (rscc *Rscc) Sign( serIdentity []byte, secret[]byte, signature []byte, message[]byte, opts SigOpts ) signature []byte 
{noformat}

* 
{noformat}
func (rscc *Rscc) SatisfiesPrincipal( serIdentity []byte, principal MSPPrincipal ) error []byte 
{noformat}

h3. 2.2.1 Invocation by client, RAPI as a system chaincode

This function is called when RSCC is invoked by something other than another chaincode.
In practice, this would be a client that sends a proposal that has been signed by one or more members of the channel.


{code:java}
  core/scc/rscc/rscc.go:
    //Invoke - update policies
    func (rscc *Rscc) Invoke(stub shim.ChaincodeStubInterface) pb.Response {
        return shim.Error(""--TBD---"")
    }
{code}


The above Rscc Invoke() function would be similar to the Invoke function in CSCC:


{code:java}
  core/scc/cscc/configure.go:
    func (e *PeerConfiger) Invoke(stub shim.ChaincodeStubInterface)
        pb.Response {
      ...
    }
{code}


The PeerConfiger.Invoke() function contains a large switch statement that decides the function to execute based on the arguments in the ChaincodeStubInterface that is passed to the Invoke() function.


{code:java}
  core/chaincode/shim/interfaces_stable.go:
    type ChaincodeStubInterface interface {
      ...
    }
{code}


In the above PeerConfiger.Invoke() function, we call a policy checker to see if the policy has been fulfilled:

{code:java}
  core/policy/policy.go:
    type PolicyChecker interface {
      CheckPolicy(channelID, policyName string, signedProp *pb.SignedProposal)
        error
      CheckPolicyBySignedData(channelID, policyName string,
        sd []*common.SignedData) error
      CheckPolicyNoChannel(policyName string, signedProp *pb.SignedProposal)
        error
    }
{code}


For the to-be-implemented Rscc Invoke() function, we need something similar to check the MSP memberships.
Using information obtained from the shim.ChaincodeStubInterface argument, as well as the policy/policies we can do the following in Rscc.Invoke():

* Get the channel ID (stub.GetChannelID())
* Get the MSP ID
  ** The MSP ID is stored in the SerializedIdentity
  ** Call stub.GetSignedProposal() to get the signed proposal bytes
  ** Get the actual proposal utils.GetProposal(signedProp.ProposalBytes)
  ** Get the header from the actual proposal utils.GetHeader(proposal.Header)
  ** Get the signature header utils.GetSignatureHeader(header.SignatureHeader)
  ** Deserialize the proposal's creator with the local MSP p.localMSP.DeserializeIdentity(shdr.Creator)
  ** Or maybe we can call the MSPManager instead of the local MSP (do we know which MSP to ask?)
    *** MSPManager.DeserializeIdentity(serializedID []byte) and get an Identity, which will have the MSP ID
* Get the MSP (MSPManager.GetMSPs()[mspID])
* Call msp.Validate() to validate the identity from the proposal
  ** Or other MSP functions?
* Once the identity has been validated, we can check the ACL of the function: Rscc.CheckACL()

The above would be used together with one or more other arguments (at least the function name) from the request that is being Invoke():d to determine whether or not Rscc will actually invoke the function or not.

After retrieving the corresponding MSP, we can also implement the functions defined in Section 2.2 (EvaluatePolicy(), ValidateIdentity(), etc.).

We would need to provide the MSP as a parameter to the function.

h3. 2.2.2 Invocation by client, introduction of RSCC/p

Same as in 2.2.1, but the peer would, in addition to public (per channel) policies, use some locally configured (private) policies (e.g., per organization policies) for ACL. The private policies would be applied within the chaincode, and their use would not impact the general interface.

h1. 3. Chaincode-based access policies

Chaincodes may trust other chaincodes to invoke them. For this reason, we can allow that at instantiation time chaincodes define the list of other chaincodes that are allowed to invoke them via a CC2CC invocation.

To do this chaincode instantiation can be extended to include a list of chaincode identifiers. 

When the Rscc chaincode is invoked by another chaincode, it is called through the following function:


{code:java}
  core/chaincode/shim/interfaces_stable.go:
    func (stub *ChaincodeStub) InvokeChaincode(chaincodeName string,
        args [][]byte, channel string) pb.Response {
      ...
    }
{code}


The function is defined in interfaces_stable.go, and implemented in core/chaincode/shim/chaincode.go.

Here, we assume that the calling chaincode performs the ACL and policy checks before calling InvokeChaincode. For the calling chaincode, the following function is executed to send the invocation:


{code:java}
  core/chaincode/shim/handler.go:
    func (handler *Handler) handleInvokeChaincode(chaincodeName string,
        args [][]byte, channelId string, txid string) pb.Response {
      ...
    }
{code}


The receiving chaincode gets the message in this function:


{code:java}
  core/chaincode/shim/chaincode.go:
    func chatWithPeer(chaincodename string, stream PeerChaincodeStream,
        cc Chaincode) error {
      ...
    }
{code}


The message is then processed here:


{code:java}
  core/chaincode/shim/handler.go:
    func (handler *Handler) handleMessage(msg *pb.ChaincodeMessage) error {
      ...
      err := handler.FSM.Event(msg.Type.String(), msg)
      ...
    }
{code}


While handling the event, the following function will be called (for valid transactions):


{code:java}
  core/chaincode/shim/handler.go:
    func (handler *Handler) beforeTransaction(e *fsm.Event) {
      ...
      handler.handleTransaction(msg)
      ...
    }
{code}


The handling will eventually be done in a function that implements the following interface call:


{code:java}
  core/chaincode/shim/interfaces_stable.go:
    Chaincode.Invoke(stub ChaincodeStubInterface) pb.Response
{code}

",,ales,davidkhala,denyeart,elli-androulaki,qsmen,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11602,,,,,,,,,"1|hzwrwf:",,,,No,,,,,,Unset,,,,,,,,,,,ales,davidkhala,denyeart,elli-androulaki,qsmen,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:21 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Go SDK - support filtered block events from deliver service,FAB-7510,26168,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,troyronda,troyronda,20/Dec/17 4:08 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,11/Mar/18 7:08 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzlz:",,,,Unset,,,,,,Unset,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
balance-transfer app fails to execute e2e due to jwt malformed error,FAB-7511,26169,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,20/Dec/17 4:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Jan/18 9:18 PM,v1.1.0-preview,,,v1.1.0,,,fabric-quality,,,,0,,,,,," balance-transfer app fails with the following error

{code}
error: [Client.js]: Failed to load user ""Barry"" from local key value store. Error: Error: Private key missing from key store. Can not establish the signing identity for user Barry
 at _cryptoSuite.importKey.then.then (/Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric-samples/balance-transfer/node_modules/fabric-client/lib/User.js:255:11)
 at <anonymous>
error: [Client.js]: Failed to load an instance of requested user ""Barry"" from the state store on this Client instance. Error: Error: Private key missing from key store. Can not establish the signing identity for user Barry
 at _cryptoSuite.importKey.then.then (/Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric-samples/balance-transfer/node_modules/fabric-client/lib/User.js:255:11)
 at <anonymous>
[2017-12-19 13:21:49.456] [ERROR] Helper - Failed to get registered user: Barry with error: Error: Private key missing from key store. Can not establish the signing identity for user Barry
[2017-12-19 13:21:49.456] [DEBUG] SampleWebApp - Successfully returned from registering the username Barry for organization Org2
UnauthorizedError: jwt malformed
 at /Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric-samples/balance-transfer/node_modules/express-jwt/lib/index.js:102:22
 at /Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric-samples/balance-transfer/node_modules/jsonwebtoken/verify.js:27:18
 at _combinedTickCallback (internal/process/next_tick.js:131:7)
 at process._tickCallback (internal/process/next_tick.js:180:9)
{code}

*Root Cause*: 
* The user crypto is not deleted properly and hence register/enroll fails on new network.
 which inturn throws jwt malformed",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrdj:",,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Dec/17 4:20 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/16323/;;;",,,,,,,,,,,,,,,,,,,,,,
Adjust SDK test to match the update API return value,FAB-7515,26175,24623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,20/Dec/17 5:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Dec/17 6:31 AM,,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,"Prior to this, fabric-ca returned a Base64-encoded DER-encoded CRL.  fabric-ca now returns a Base64-encoded PEM so need to adjust the SDK IT test to match",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyre7:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Dec/17 5:55 AM;mastersingh24;https://gerrit.hyperledger.org/r/16327;;;",,,,,,,,,,,,,,,,,,,,,,
Check consistency of chaincode installation data,FAB-7518,26195,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,ales,elli-androulaki,elli-androulaki,20/Dec/17 5:26 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,14/Jan/19 10:54 PM,v1.0.5,,,,,,fabric-crypto,,,,0,,,,,,"Values corresponding to hashed chaincode code and metadata are provided during chaincode installation. Peer needs to perform sanity check on these values prior to accepting to install the chaincode. 

 

Essentially, one needs to check that hashed data provided at installation time inside the installation package, match their pre-images, and that installed chaincode's name does not match the name of an SCC.

 ",,ales,angelo.decaro,denyeart,elli-androulaki,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,FAB-11237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfj:4",,,,,,To Do,,,,,,,,,,,,,,,ales,angelo.decaro,denyeart,elli-androulaki,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/18 11:07 PM;ales;I analysed the issue and here are the results:

+CC install+
 * input from user is either a ChaincodeDeploymentSpec or a SignedChaincodeDeploymentSpec (which is basically a ChaincodeDeploymentSpec + instantiation policy and endorsers)
 * neither struct contains a hash
 * it is my conclusion that the install path does not introduce any inconsistencies wrt. hashing and preimages

+CC instantiation/upgrade+
 * upon instantiate/upgrade, we write in the ledger a ChaincodeData struct
 * ChaincodeData contains an identifier (Id) which is computed as follows:
 * in case the chaincode was installed using a ChaincodeDeploymentSpec: 

{{h1 = H(cds.CodePackage)}}

{{h2 = H(ccname || ccversion)}}

{{Id = H(h1 || h2)}}
 * in case the chaincode was installed using a SignedChaincodeDeploymentSpec

{{h1 = H(cds.CodePackage)}}

{{h2 = H(ccname || ccversion)}}

{{h3 = H(InstantiationPolicy || endorser_1 || ... || endorser_n)}}

{{Id = H(h1 || h2 || h3)}}
 *  unfortunately the preimages are not all there. In particular, the preimage of h1 is never there (given that the CodePackage is not a field of the ChaincodeData struct), nor is the preimage of h3 (given that the endorser are not a field of the ChaincodeData struct)
 * as a consequence, there's only a limited amount of validation that can be performed on the VSCC side when validating a CC instantiation/upgrade tx

 +Possible action items+
 # do not perform any additional checks
 # only check the proper computation of Id (check that either `Id = H(h1 || h2)` or `Id = H(h1 || h2 || h3)`), without being able to validate the correctness of h1 and h3 (since preimages are missing)

I'm currently leaning towards option 1, but I'd like to hear other opinions. [~elli-androulaki], [~angelo.decaro], wdyt?;;;","19/Feb/18 11:54 AM;scottz;What is our exposure? What is a use-case that could cause problems, and what kind of problems?;;;","19/Feb/18 11:52 PM;elli-androulaki;So, based on [~ales] assessment currently there is no exposure. That is,  since the hashes provided & computed during instantiation / upgrade phase are not used anywhere.

Ideally, we would like the chaincode identifier to be computed during instantiation time (using h1, h2, and instantiation policy) / verified during validation of lscc deploy and that hash to be used as means of looking for the chaincode in subsequent chaincode invocations. 

But since chaincode lifecycle is to change soon, and we have currently no breach, it may make sense to merge this work with the new cc lifecycle work for 1.2.;;;","14/Mar/18 8:26 PM;elli-androulaki;So this one is a code (small) improvement that could be done only after the new lifecycle is in place. It may be that the check is no longer relevant so i keep the 1.2 flag to remind ourselves to check. ;;;","22/May/18 3:25 AM;kchristidis;[~elli-androulaki]: Are you referring to the lifecycle changes that Jason is working on and won't be merged till 1.3? If so, this needs to be set to Backlog. At any rate, let's update the target version for this JIRA accordingly.;;;","22/May/18 4:25 PM;elli-androulaki;[~kchristidis], you are right; updated the fix version to 1.3. It may be that we dont need to worry about this at all given the lifecycle changes, but it is good to track it to make sure that (if applicable) it is addressed.;;;","11/Sep/18 1:19 PM;denyeart;[~jyellick] Let's revisit with new lifecycle in v2.0 timeframe. Thoughts?;;;","14/Jan/19 10:54 PM;angelo.decaro;Will be addressed by FAB-11237;;;",,,,,,,,,,,,,,,
Remove initialization of broadcast handler from peer atomicbroadcast implementation,FAB-7519,26197,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,20/Dec/17 6:43 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,28/Dec/17 12:38 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Since FAB-6911 exposed the {{ab.AtomicBroadacast}} service on peer in order to leverage it as a replacement for events service, namely to reuse {{Deliver}} API as source hub for block events. New implementation of {{AtomicBroadcast}} service has been added while the {{Broadcast}} API remained not implemented since this is not required for peer.

{code}
// Broadcast is not implemented/supported on a peer
func (s *server) Broadcast(srv ab.AtomicBroadcast_BroadcastServer) error {
	return srv.Send(&ab.BroadcastResponse{
		Status: common.Status_NOT_IMPLEMENTED,
	})
}
{code}

while during the initialization broadcast handle still initialized and not used anywhere:

{code}
// NewAtomicBroadcastServer creates an ab.AtomicBroadcastServer based on the
// ledger Reader. Broadcast is not implemented/supported on the peer.
func NewAtomicBroadcastServer(timeWindow time.Duration, mutualTLS bool) ab.AtomicBroadcastServer {
	s := &server{
		dh: deliver.NewHandlerImpl(DeliverSupportManager{}, policies.ChannelReaders, timeWindow, mutualTLS),
		bh: broadcast.NewHandlerImpl(nil),
	}
	return s
}
{code}

Therefore redundant initialization of {{bh: broadcast.NewHandlerImpl(nil),}} could be omitted.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrhj:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Dec/17 6:46 PM;C0rWin;https://gerrit.hyperledger.org/r/16335;;;",,,,,,,,,,,,,,,,,,,,,,
Move rscc resource constants declarations from aclmgmt,FAB-7520,26210,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,20/Dec/17 9:54 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,28/Dec/17 12:38 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"RSCC constants API constants names are declared within {{aclmgmt}} package, which might potential bring the dependency cycle if anyone would try to refer those constant from other packages which for example depends on {{peer}} package. I'd suggest to refactor and extract those constant into separate package to mitigate the risk on dependency cycle creation.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrin:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Dec/17 9:59 PM;C0rWin;https://gerrit.hyperledger.org/r/16339;;;",,,,,,,,,,,,,,,,,,,,,,
Lookup correct policyName while using Deliver API for blocks and events,FAB-7521,26211,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,20/Dec/17 10:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,04/Jan/18 9:24 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Since {{ab.AtomicBroadcast}} service was abstracted out to be reused at peer for blocks event service the definition of policy name was introduced as a parameter for deliverer handler, e.g.:

{code}
	s := &server{
		dh: deliver.NewHandlerImpl(DeliverSupportManager{}, policies.ChannelReaders, timeWindow, mutualTLS),
		bh: broadcast.NewHandlerImpl(nil),
	}
{code}

while this introduce a potential problem in light of the RSCC work, since correct policy lookup at peer based on resource name, namely based on the resource there is a lookup for policy name underlined for that resource and later it could be used to lookup the policy itself. While for ordering service this is not the case, since policy derived directly from policy name. Therefore we need to distinguish between these two cases.",,C0rWin,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyriv:",,,,,,,,,,,,,,,,,,,,,C0rWin,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Dec/17 10:12 PM;C0rWin;https://gerrit.hyperledger.org/r/16341;;;","04/Jan/18 8:46 PM;ChristopherFerris;[~C0rWin] Is this a bugfix or a story? The patch looks fine.;;;","04/Jan/18 8:54 PM;C0rWin;[~ChristopherFerris] this is a bug.;;;",,,,,,,,,,,,,,,,,,,,
Private Data Dissemination Timeout should be configurable,FAB-7522,26214,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,bstasyszyn,bstasyszyn,20/Dec/17 11:42 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Dec/17 6:38 AM,,,,,,,fabric-gossip,,,,0,gossip,,,,,"I'm testing in a configuration composed of 4 MSPs, 2 peers per MSP for a total of 8 peers, and 2 (Kafka) orderers. One CC contains 2 private data collections, each with the following config:

- RequiredPeerCount=1
- MaximumPeerCount=3
- policy includes all 4 MSPs

I'm sending 20 concurrent requests which write/read private data. Once in a while I see timeout errors while private data is being disseminated, causing the transaction to fail with the reason, ENDORSEMENT_POLICY_FAILURE. Looking at the code, the dissemination timeout is hard-coded to 1 second. This should be configurable since, in a very busy system, it may take longer to send the private data.
 
Below are the logs:

peer0.example.com     | 2017-12-20 14:11:13.094 UTC [gossip/privdata] func1 -> ERRO 1ff Failed disseminating private RWSet for TxID ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd , namespace fmpcc collection fmpstatus : {""failures"":{""timed out"":3}}
peer0.example.com     | 2017-12-20 14:11:13.094 UTC [gossip/service] DistributePrivateData -> ERRO 200 Failed to distributed private collection, txID ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd channel consortium due to Failed disseminating 1 out of 1 private RWSets
peer1.example.com    | 2017-12-20 14:11:15.443 UTC [valimpl] preprocessProtoBlock -> WARN 231 Channel [consortium]: Block [21] Transaction index [0] TxId [ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd] marked as invalid by committer. Reason code [ENDORSEMENT_POLICY_FAILURE]
",,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,"1|hzyrsf:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/17 12:14 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16343/;;;","21/Dec/17 12:39 AM;yacovm;Also, from your log:

{quote} 
[ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd] marked as invalid by committer. Reason code [ENDORSEMENT_POLICY_FAILURE]
{quote}

Seems you sent the transaction anyway even though the endorsement failed... ;;;","21/Dec/17 12:46 AM;bstasyszyn;Yes, the client should be checking for endorsement failures and not sending. This is just a sample app. Thx for fixing this so quickly!;;;",,,,,,,,,,,,,,,,,,,,
Improve bccsp unsupported signer type error message,FAB-7523,26216,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,smithbk,smithbk,21/Dec/17 12:30 AM,23/Jan/20 7:21 AM,28/Oct/23 3:02 AM,23/Jan/20 7:21 AM,,,,,,,fabric-crypto,,,,0,stale-item,,,,,"The current error message prints as

Unsupported 'SignKey' provided [&{[237 8 193 7 146 17 154 244 196 115 53 125 171 228 43 181 103 186 160 174 24 107 63 97 39 6 161 237 249 128 193 94] 0xc42035ad60}]

Change it to display similar to:

Unsupported 'SignKey' provided [*ecdsaPublicKey]",,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrsn:",,,,Unset,,,,,,Unset,,,,,,,,,,,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/17 12:33 AM;smithbk;https://gerrit.hyperledger.org/r/16345;;;",,,,,,,,,,,,,,,,,,,,,,
Use strong encryption cipher suites for TLS,FAB-7525,26221,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,21/Dec/17 2:47 AM,29/Aug/18 4:19 PM,28/Oct/23 3:02 AM,24/Dec/17 7:46 PM,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,,,,,,"Nodes currently restrict to TLS to version 1.2 but we can also improve security a but by using HIGH encryption cipher suites by default.  My suggestion is:

{quote}
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,
TLS_RSA_WITH_AES_256_GCM_SHA256,
TLS_RSA_WITH_AES_128_GCM_SHA384
{quote}
",,ales,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-489,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrtr:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/17 3:37 AM;ales;If we followed NIST guidelines ([https://csrc.nist.gov/publications/detail/sp/800-131a/rev-1/final)|https://csrc.nist.gov/publications/detail/sp/800-131a/rev-1/final),] we would only support AESGCM based ones (and so we should drop chacha20/salsa). Wdyt?;;;","21/Dec/17 4:38 AM;mastersingh24;[~ales] - I think it's two less ciphers for me to copy  ;)
Edited the list above;;;","21/Dec/17 9:14 PM;mastersingh24;https://gerrit.hyperledger.org/r/16387;;;",,,,,,,,,,,,,,,,,,,,
BYFN timeout management is messed up and BYFN could be simpler,FAB-7526,26222,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,21/Dec/17 5:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 11:56 PM,v1.0.5,v1.1.0-preview,,v1.1.0,,,fabric-docs,fabric-samples,,,0,,,,,,"The current BYFN documentation talks about the default CLI timeout being 10000 seconds but it is currently is set to 10. Furthermore the timeout setting is actually used for two different purposes:
 # to define the time for which the cli will hang around until it exits
 # to define the time for which the e2e script will keep trying to get an answer to its chaincode queries before giving up

With the current setting of 10 seconds the cli container exists before anyone can do anything else with it, making the timeout useless from that point of view.

With a setting of 10000 seconds, the cli container hangs on ""for ever"" locking the console when not run in detach mode.

The e2e script is also currently executed as a docker-composer command which forces users who only want to setup the network without the e2e script being executed automatically to edit the docker-compose configuration file.In addition, because the command is executed through docker-compose which is detached output is captured through a call to docker logs -f cli which leaves the use hanging once the e2e script has completed.All of these problems can be addressed by changing the docker-compose file to start the cli without running anything (and instead just wait/sleep) and then executing the e2e script by issuing a docker exec cli command.

The time the cli container waits for before exiting can be long, say 10000 seconds, without any negative impact. When the container has exited it can be restarted with a simple docker start cli command.

And the BYFN timeout setting can be limited to defining the time during which a response to a query is being waited for, which can be set to 10 by default.

As an aside, the byfn.sh usage should be simplified to not require users to type a -m parameter on every command and offer a default response to the confirmation prompt for continuation.",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7527,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrtz:",,,,,,,,,,,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 11:56 PM;lehors;Not sure exactly how this happened but I somehow created this one twice.;;;",,,,,,,,,,,,,,,,,,,,,,
BYFN timeout management is messed up and BYFN could be simpler,FAB-7527,26223,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,21/Dec/17 5:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 6:33 PM,v1.0.5,v1.1.0-preview,,v1.1.0,,,fabric-docs,fabric-samples,,,0,,,,,,"The current BYFN documentation talks about the default CLI timeout being 10000 seconds but it is currently is set to 10. Furthermore the timeout setting is actually used for two different purposes:
 # to define the time for which the cli will hang around until it exits
 # to define the time for which the e2e script will keep trying to get an answer to its chaincode queries before giving up

With the current setting of 10 seconds the cli container exists before anyone can do anything else with it, making the timeout useless from that point of view.

With a setting of 10000 seconds, the cli container hangs on ""for ever"" locking the console when not run in detach mode.

The e2e script is also currently executed as a docker-composer command which forces users who only want to setup the network without the e2e script being executed automatically to edit the docker-compose configuration file.In addition, because the command is executed through docker-compose which is detached output is captured through a call to docker logs -f cli which leaves the user hanging once the e2e script has completed.All of these problems can be addressed by changing the docker-compose file to start the cli without running anything (and instead just wait/sleep) and then executing the e2e script by issuing a docker exec cli command.

The time the cli container waits for before exiting can be long, say 10000 seconds, without any negative impact. When the container has exited it can be restarted with a simple docker start cli command.

And the BYFN timeout setting can be limited to defining the time during which a response to a query is being waited for, which can be set to 10 by default.

As an aside, the byfn.sh usage should be simplified to not require users to type a -m parameter on every command and offer a default response to the confirmation prompt for continuation.",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7526,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyru7:",,,,,,,,,,,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/17 5:40 AM;lehors;One more thing: the output log is quite confusing because it refers to peer0.org1 as PEER0, peer1.org1 as PEER2, peer0.org2 as PEER3 as well as org2/peer3, and peer1.org2 as PEER4 as well as org2/peer4. At the least the numbers should be consistently used.;;;",,,,,,,,,,,,,,,,,,,,,,
streamline CI test suites in fabric-test,FAB-7529,26225,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,21/Dec/17 7:31 AM,01/Aug/19 11:39 AM,28/Oct/23 3:02 AM,01/Aug/19 11:39 AM,v1.1.0,,,Future,,,fabric-quality,,,,0,,,,,,"# Reduce duplication and number of tests in the fabric-test smoke-test-suite used for verify jobs in the fabric-test repository. These should include a test with each tool in the repo. (More functional test coverage should be put into the fabric-test daily test suite.)
 # Ditto for the daily test suite. This should provide functional coverage and integration tests leveraging all the fabric family repositories.
 # Move the other tests, such as long runs and performance tests, to an independent test suite (to be run 'weekly' or 'per release'

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrun:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
typo in balance-transfer/app/invoke-transaction.js ,FAB-7533,26234,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,nharshita,nharshita,21/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Jan/18 11:14 PM,v1.1.0-preview,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"There exists a typo at line 102 in balance-transfer/app/invoke-transaction.js. Due to which web app gets killed and we get error log as below.

*Relevant web app log*:
[INFO] invoke-chaincode - The chaincode invoke chaincode transaction has been committed on peer localhost:7053
debug: [EventHub.js]: unregisterTxEvent txid aac74f0e4fadcd6977fe470011a771ea4662deeed789b27cde9d6b5c2917f84d
/opt/gopath/src/github.com/hyperledger/fabric-samples/balance-transfer/app/invoke-transaction.js:108
                            let message = until.format('The invoke chaincode transaction was invalid, code:%s',code);

ReferenceError: until is not defined

 

*Simulation*: Error can be reproduced by simulating invalid transaction.

**

*Fix*: replace 'u*n*til' with 'util'

 ",,mastersingh24,nharshita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrvj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,nharshita,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jan/18 9:16 PM;mastersingh24;https://gerrit.hyperledger.org/r/16615;;;",,,,,,,,,,,,,,,,,,,,,,
Extend signature policy to compute satisfiedBy principal set,FAB-7535,26237,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,21/Dec/17 9:27 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Mar/18 12:07 AM,,,,v1.2.0,,,,,,,0,,,,,,"In order for the discovery service to tell which peers are needed to endorse a certain chaincode, it needs to query the policy to obtain all combinations of principals, such that each combination can satisfy the policy given enough peer signatures have been collected.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrvr:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Fix typos in handler.go and in endorser.go,FAB-7537,26245,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,21/Dec/17 10:32 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,22/Dec/17 6:04 AM,,,,,,,,,,,0,,,,,,"Per comments in https://gerrit.hyperledger.org/r/#/c/16109/ we have some typos, but no reason to block progress.

This JIRA issue is opened as a reminder to fix the typos. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrwn:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/17 10:38 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/16393/;;;",,,,,,,,,,,,,,,,,,,,,,
CI Management documentation needs a refresh,FAB-7538,26246,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,21/Dec/17 11:40 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Dec/17 2:36 AM,,,,,,,fabric-ci,,,,0,,,,,,"The current documentation is out of date and has several formatting errors.

[https://github.com/hyperledger/ci-management/blob/master/docs/fabric_ci_process.md]

 

 ",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrwv:",,,,,,,,,,,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doc review needed on fabric-sdk-node/docs/tutorials/channel-events.md,FAB-7539,26247,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,smithbk,smithbk,22/Dec/17 12:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Mar/18 9:52 PM,,,,,,,fabric-docs,,,,0,,,,,,"This doc needs review by a doc person for style and grammar.
One comment is that it appears to have been written as a ""What's New"" guide as several of the headings are titled ""New API"" etc.  What is new for v1.1 will no longer be new in v1.2, so it seems better to not write in this way.",,harrisob@us.ibm.com,joe-alewine,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrx3:",,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,joe-alewine,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/18 7:03 AM;joe-alewine;[~harrisob@us.ibm.com];;;","27/Mar/18 5:00 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/19777/;;;",,,,,,,,,,,,,,,,,,,,,
Following the new Reconfigure Your First Network tutorial should be made simpler,FAB-7540,26248,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,22/Dec/17 12:23 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,13/Feb/18 1:49 AM,v1.1.0-preview,,,v1.1.0,,,fabric-docs,fabric-samples,,,0,,,,,,"The new tutorial on how to reconfigure your first network is a great addition because it fills in an important gap by answering the typical question people ask once they are done with the BYFN tutorial. However, following the new tutorial is strikingly more complex than following the BYFN tutorial. While this can be explained by the fact the process involved is indeed more complex it is also because very little help beside the documentation is provided.

We can make following the tutorial much easier by providing a script or set of scripts similar to the byfn.sh that people can use while following the tutorial and as a starting point for addressing their own specific use case.",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrxb:",,,,Unset,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
PTE checks existence of keyIdx,FAB-7541,26249,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,22/Dec/17 12:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Dec/17 7:13 AM,,,,,,,fabric-quality,,,,0,,,,,,"PTE checks the existence of keyIdx in the user input json.

https://gerrit.hyperledger.org/r/#/c/16397/",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyrxj:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
TlsCertHash needs to be included when peer is acting as a client,FAB-7542,26250,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,troyronda,troyronda,22/Dec/17 1:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Dec/17 12:58 AM,,,,v1.1.0,,,,,,,0,,,,,,"Currently have the following errors with mutual TLS enabled:

orderer.example.com | 2017-12-21 15:14:54.861 UTC [common/deliver] deliverBlocks -> WARN 5cd Rejecting deliver for 172.18.0.2:35616 due to envelope validation error: client didn't include its TLS cert hash
 orderer.example.com | 2017-12-21 15:14:54.861 UTC [common/deliver] Handle -> DEBU 5ce Waiting for new SeekInfo from 172.18.0.2:35616
 orderer.example.com | 2017-12-21 15:14:54.862 UTC [common/deliver] Handle -> DEBU 5cf Attempting to read seek info message from 172.18.0.2:35616
 peer0.org1.example.com | 2017-12-21 15:14:54.863 UTC [blocksProvider] DeliverBlocks -> ERRO 72c [mychannel] Got error &\{BAD_REQUEST}

 See workaround fix at: [https://gerrit.hyperledger.org/r/c/16399/]

 ",,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrxr:",,,,,,,,,,,,,,,,,,,,,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/17 9:11 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16405/
Enjoy;;;",,,,,,,,,,,,,,,,,,,,,,
The documentation should include some information about the CI,FAB-7543,26252,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,22/Dec/17 3:22 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,22/Jan/18 8:32 PM,v1.0.5,v1.1.0-preview,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Surprisingly enough the current documentation for contributors doesn't appear to contain any information about or even a single mention of our CI process. It merely includes a link to the main entry point at the top of the TOC.

 ",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrxz:",,,,Unset,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Sample profile should not be loaded,FAB-7544,26256,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,blw,troyronda,troyronda,22/Dec/17 8:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Jan/18 7:37 PM,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,"A default sample profile is attempted to be loaded in the init method of the performance package (orderer/common/performance). In particular SampleSingleMSPChannelV11Profile is being loaded in:

[https://github.com/hyperledger/fabric/blob/master/orderer/common/performance/utils.go#L47] introduced by [https://gerrit.hyperledger.org/r/c/15799/6/orderer/common/performance/utils.go]

This line of code means we need to add a dummy profile to our configtx.yaml (SampleSingleMSPChannelV11Profile), when using a customized channel configuration (non-sample) – particularly in provisional mode on the orderer. Without the dummy profile, the orderer does not run.

Workaround that fixes the above issue: [https://gerrit.hyperledger.org/r/#/c/16409/]

 

Addendum:

I would suggest reviewing the the rest of the init method and consider moving all init code out of the non-test/benchmark code path.

 ",,blw,firas.qutishat,gbolo,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyry7:",,,,,,,,,,,,,,,,,,,,,blw,firas.qutishat,gbolo,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/17 8:51 AM;firas.qutishat;[~jyellick] FYI;;;","22/Dec/17 12:50 PM;gbolo;Please merge this. I don't like having dummy definitions in my configtx.yaml when using provisional mode on my orderer;;;","25/Dec/17 3:32 AM;blw;https://gerrit.hyperledger.org/r/c/16461/;;;",,,,,,,,,,,,,,,,,,,,
Alternative computation of txid,FAB-7547,26260,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,22/Dec/17 5:43 PM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,,,,Future,,,fabric-peer,,,,0,stale-item,,,,,"The txid is currently computed as H(nonce || creator). This approach was chosen (among other reasons) to ensure that no two transactions could have the same txid. In particular, if H is a cryptographic hash function, two different creators cannot create two transactions with the same txid.

Theoretically however, Bob may force a txid collision on a txid from Alice (who uses cert_A as her creator certificate) as follows: Bob contacts its CA and attempts to generate a certificate cert_B that has as a suffix the bytes of cert_A (e.g. cert_B := prefix || cert_A) which is valid under its MSP. Then assume that Alice chooses a nonce N_A and creates

txid_A = H(N_A || cert_A)

Also assume that N_A := N_A' || prefix

Then Bob can pick as its nonce N_A' and force a collision on the txid since

H(N_A || cert_A) = H(N_A' || prefix || cert_A) = H(N_A' || cert_B)

This scenario is possible because we don't enforce any length checks on either field (nonce and creator). Note that Bob (who can naturally collude with its CA), may generate multiple certificates to increase his chances of success.

It is unclear whether it is actually possible to create this scenario in practice.

We propose to compute txid as H(H(nonce) || H(creator)). This approach follows security best-practices and would ensure that this theoretical scenario cannot occur.",,ales,blw,denyeart,haibbo,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyryn:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,blw,denyeart,haibbo,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Dec/17 5:45 PM;ales;[~elli-androulaki], [~angelo.decaro], [~mastersingh24], [~jyellick], [~yacovm], [~C0rWin] pls weigh in;;;","22/Dec/17 6:56 PM;yacovm;I have a couple of questions before I can weigh in, since I don't understand the all the details:
{quote}Also assume that N_A := N_A' || prefix
{quote}
That means that both N_A' and prefix are less (or equal) than 24 bytes, since (from what I know) the length of the nonce is 24 bytes.
 It doesn't matter whether we enforce length checks on the nonce in this case, since if we assume that Alice runs correct software - then she generates a 24 byte sized nonce.
{quote}Bob contacts its CA and attempts to generate a certificate cert_B that has as a suffix the bytes of cert_A (e.g. cert_B := prefix || cert_A) which is valid under its MSP.
{quote}

 That's not entirely accurate since cert_A is not a certificate but a SerializedIdentity, right? It contains the MSP_ID and the certificate in PEM encoding.
 So, it's more like *creator_B := prefix || ""mspA"" || cert_A*
 Since the orderer checks Bob's signature and evaluates the identity in order to do that, Bob needs creator_B to be a valid identity. 
 Now, we already know, that in protobuf - if I encode a message in schema S that has fields:

 
{code:java}
message SerializedIdentity {
	// The identifier of the associated membership service provider
    string mspid = 1;

    // the Identity, serialized according to the rules of its MPS
    bytes id_bytes = 2;

     leftover bytes = 3;
}{code}
Then a protobuf ""reader"" that has schema S' that matches the real fabric schema:
{code:java}
message SerializedIdentity {
	// The identifier of the associated membership service provider
    string mspid = 1;

    // the Identity, serialized according to the rules of its MPS
    bytes id_bytes = 2;
}
{code}
Would ignore the leftover bytes, however the hashes are taken over all the serialized bytes. 
 That means that you can actually append any bytes you want to the creator and protobuf would happily consume it.

So, I think Bob acts under the following 4 constraints:
 # *creator_B := prefix || ""mspA"" || cert_A*
 # \|prefix\|< 24 bytes|
 # substring(creator_B, i) is a valid identity under MSP B for some i between 0 and |creator_B|
 # substring(creator_B, i) unmarshals to: ""B"" and cert_B such that cert_B is a valid x509 certificate (or, idemix identity ?) for some i between 0 and |creator_B|

The real question is whether (3) and (4) can be satisfied...?

We know that PEM parsers expect ""\-\-\-\-\-BEGIN "" which is 11 bytes, to be the prefix of a PEM block. 
 From the structure of creator_B, we know that  ""\-\-\-\-\-BEGIN "" must appear inside prefix, and also for the PEM parser to know where to end, it needs ""\n\-\-\-\-\-END"" which is 10 bytes. 
 so that leaves 3 bytes of something else to be in prefix... no?

 

Now, you didn't describe the impact of the attack here.
 To my understanding - all Bob wants to do is to prevent Alice's transaction to be validated, right?
 To do this - Bob needs to know Alice's nonce before it gets into the block.
 That implies one of the 2:
 * Bob has a conspiring orderer, but then this is an overkill and the orderer can just drop the transaction, no?
 * Bob has a conspiring peer that received the endorsement, but then - the peer can just produce a signature over a wrong simulation, and the endorsements would not be identical at the client side and the client would not know who's fault it is in case of (i.e) a 2-organization endorsement policy.

 

I personally don't think that it's cost-effective to introduce a capability only for a denial of service attack that is essentially a front-running attack, and one that requires peers or orderers as collaborators.

 ;;;","24/Dec/17 3:35 AM;blw;I see an additional constraint as well.
{quote}Also assume that N_A := N_A' || prefix
{quote}
By the time that Bob has access to N_A, its contents and length are frozen. That means that the only flexibility that Bob has for N_A' || prefix is where to demarcate the string. For example, if N_A := ""123456789"", then the possible values for N_A' || prefix are: ""12345678||9"", ""1234567||89"", ""123456||789"", etc. So, for a given N_A of length n, there are n+1 possible ways to demarcate N_A, and therefore there are only n+1 possible values for the prefix and N_A'.
{quote}Bob contacts its CA and attempts to generate a certificate cert_B that has as a suffix the bytes of cert_A (e.g. cert_B := prefix || cert_A) which is valid under its MSP.
{quote}
Given, from above, that there are only n+1 possible values for the prefix, and n is a relatively small number (since N_A is probably just a few bytes), it follows that Bob's CA would be forced to find a valid cert in a very small solution space. Continuing the example above, cert_B's possible values would have to be one of: ""9||cert_A"", ""89||cert_A"", ""789||cert_A"", etc. It would be quite difficult for Bob's CA to be able to find a cert that is valid under Bob's MSP in a space of only n+1 possibilities.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","24/Mar/18 6:11 PM;ales;Reasons to fix in 1.2:
 * it's very little code
 * it would follow a security best-practice
 * there's talk of re-engineering txids anyway;;;","23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,
Improve debug logging for private data - part2,FAB-7548,26261,13484,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,22/Dec/17 6:33 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Dec/17 12:26 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,Improve debug logging for private data.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyryv:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
The peer command shouldn't display the help message when an error occurs beyond the parsing of arguments,FAB-7549,26265,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,22/Dec/17 10:47 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Apr/18 10:20 PM,v1.0.5,v1.1.0-preview,,v1.2.0,,,fabric-peer,,,,0,,,,,,"I find it confusing that any time an error occurs the usage/help message gets displayed, even when the error has nothing to do with how the peer command is being called.

Help messages are useful to communicate to the user the correct usage of a command when their input isn't conform to what is supported and cannot be interpreted. Displayed for any other error they simply mislead the user into believing they made a mistake in how they called the command when that's not the case.

 ",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyrz3:",,,,Unset,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Mar/18 4:22 AM;lehors;An example of this is shown below where the name is wrong:

{{peer chaincode query -C mychannel -n mywrongcc -c '\{""Args"":[""query"",""a""]}'}}
 {{2018-03-08 14:36:39.292 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc}}
 {{2018-03-08 14:36:39.292 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc}}
 {{Error: Error endorsing query: rpc error: code = Unknown desc = make sure the chaincode mywrongcc has been successfully instantiated and try again: could not find chaincode with name 'mywrongcc' - <nil>}}
 {{Usage:}}
 {{  peer chaincode query [flags]}}

{{Flags:}}
 {{  -C, --channelID string   The channel on which this command should be executed}}
 {{  -c, --ctor string        Constructor message for the chaincode in JSON format (default ""\{}"")}}
 {{  -x, --hex                If true, output the query value byte array in hexadecimal. Incompatible with --raw}}
 {{  -n, --name string        Name of the chaincode}}
 {{  -r, --raw                If true, output the query value as raw bytes, otherwise format as a printable string}}
 {{  -t, --tid string         Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64}}

{{Global Flags:}}
 {{      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint}}
 {{      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint}}
 {{      --clientauth                          Use mutual TLS when communicating with the orderer endpoint}}
 {{      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint}}
 {{      --logging-level string                Default logging level and overrides, see core.yaml for full syntax}}
 {{  -o, --orderer string                      Ordering service endpoint}}
 {{      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.}}
 {{      --tls                                 Use TLS when communicating with the orderer endpoint}}
 {{      --transient string                    Transient map of arguments in JSON encoding}}
 {{  -v, --version                             Display current version of fabric peer server}}

There is no reason to display the usage message in this case. It is actually a distraction that is more confusing than helpful.;;;",,,,,,,,,,,,,,,,,,,,,,
Implement support interface,FAB-7551,26271,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Dec/17 11:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,29/Mar/18 7:47 AM,v1.2.0,,,,,,,,,,0,,,,,,The support interface needed for the gRPC service and the endorsement analyzer needs to be implemented.,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrzr:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Implement IdentityInfo() in gossip identity mapper,FAB-7552,26272,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Dec/17 11:23 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Apr/18 5:21 PM,v1.2.0,,,,,,fabric-gossip,,,,0,,,,,,"The discovery service needs to output identities of known peers.

Gossip stores the identities in an identity mapper, which could be extended to return a snapshot of its identities.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyrzz:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Refactor comm.SecureConfig to work for clients and servers,FAB-7553,26273,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,24/Dec/17 11:57 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Dec/17 8:29 AM,v1.1.0,,,v1.1.0,,,,,,,0,,,,,,"When the SecureConfig struct was implemented, there was an assumption that it would only be used for configuring gRPC servers and fields were named as such.
It is now apparent that this struct can be reused to hold gRPC client information as well.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7561,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys07:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Dec/17 12:00 AM;mastersingh24;https://gerrit.hyperledger.org/r/16455;;;",,,,,,,,,,,,,,,,,,,,,,
Include Envelopes in gossip Peers and PeersOfChannel(),FAB-7554,26274,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,25/Dec/17 12:45 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Apr/18 5:21 PM,v1.2.0,,,,,,,,,,0,,,,,,"The discovery service needs to provide clients with envelopes of peers so that the clients could (optionally) verify the signatures themselves if they desire.

 

The discovery.NetworkMember already has an envelope from previous change sets, and we need to populate the field when we return the envelopes in the discovery and channel modules.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys0f:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Dec/17 7:13 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16459/;;;",,,,,,,,,,,,,,,,,,,,,,
improve gossip/common code coverage,FAB-7555,26275,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,25/Dec/17 6:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,29/Dec/17 1:58 AM,,,,,,,fabric-gossip,,,,0,,,,,,The package used to have high code coverage and after we introduced a simple function it dropped to 50% .,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys0n:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Dec/17 6:53 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16463/;;;",,,,,,,,,,,,,,,,,,,,,,
panic accessing config on bad config,FAB-7556,26277,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,26/Dec/17 12:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 7:46 AM,,,,,,,fabric-peer,,,,0,,,,,,"{code:java}
goroutine 1 [running]:
github.com/hyperledger/fabric/core/peer.createChain.func1(0x0)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/core/peer/peer.go:292 +0x38
github.com/hyperledger/fabric/common/resourcesconfig.(*BundleSource).Update(0xc421542c00, 0x0)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/common/resourcesconfig/bundlesource.go:43 +0x7e
github.com/hyperledger/fabric/common/resourcesconfig.NewBundleSource(0x0, 0xc421425a20, 0x4, 0x4, 0xc421421380)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/common/resourcesconfig/bundlesource.go:35 +0x77
github.com/hyperledger/fabric/core/peer.createChain(0xc4220b6940, 0x3, 0x4f15f40, 0xc4202e1ee0, 0xc4220c0300, 0x0, 0x0)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/core/peer/peer.go:353 +0x541
github.com/hyperledger/fabric/core/peer.Initialize(0x4a845f8)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/core/peer/peer.go:225 +0x786
github.com/hyperledger/fabric/peer/node.serve(0x4f6c528, 0x0, 0x0, 0x0, 0x0)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/peer/node/start.go:251 +0x1070
github.com/hyperledger/fabric/peer/node.glob..func1(0x4f46d00, 0x4f6c528, 0x0, 0x0, 0x0, 0x0)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/peer/node/start.go:83 +0x3f
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x4f46d00, 0x4f6c528, 0x0, 0x0, 0x4f46d00, 0x4f6c528)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e9
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x4f47360, 0xf, 0xc42000c055, 0x7)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x339
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x4f47360, 0x37, 0xc42000c055)
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
 /Users/muralisr/hyperledger/src/github.com/hyperledger/fabric/peer/main.go:112 +0x4a6{code}

This happens if config tx is invalid (typically with handcrafted configs using configtxlator). The above stack happened with an APIs element with ""_"" in its name.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys13:",,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Logging to File (peer and orderer),FAB-7557,26279,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,26/Dec/17 3:31 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,28/Dec/17 2:09 PM,v1.1.0,,,Abandoned,,,fabric-docs,fabric-orderer,fabric-peer,,0,,,,,,"In current implementation, `peer` and `orderer` processes write all logs to `stderr`.

Even a user can redirect it to a file, it is better to provide an configuration option for writing logs to a user-specified file.",,AshishkumarLakshmanan,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzys1j:",,,,Unset,,,,,,Unset,,,,,,,,,,,AshishkumarLakshmanan,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Dec/17 5:45 PM;ynamiki;https://gerrit.hyperledger.org/r/16225;;;",,,,,,,,,,,,,,,,,,,,,,
Fabric Makefile pulls docker-thirdparty with previous tag and not baseimage tag,FAB-7558,26281,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ChristopherFerris,mrshah-ibm,mrshah-ibm,27/Dec/17 12:23 AM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,v1.1.0,,,Future,,,fabric-build,,,,0,build-system,stale-item,,,,"The fabric baseimage tags the third party dependencies with base image tag at [https://github.com/hyperledger/fabric-baseimage/blob/master/Makefile#L128]

 

Whereas the fabric build pulls the third party images with PREV_TAG at [https://github.com/hyperledger/fabric/blob/master/Makefile#L118] which is built using PREV_RELEASE at [https://github.com/hyperledger/fabric/blob/master/docker-env.mk#L61]

 

Thus, the fabric-baseimage tags are not used in fabric build.

 

If we try to override the PREV_RELEASE in fabric build, the changelog will not be generated at [https://github.com/hyperledger/fabric/blob/master/Makefile#L225] because it uses PREV_VERSION variable.

 ",,mrshah-ibm,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzys1r:",,,,Unset,,,,,,Unset,,,,,,,,,,,mrshah-ibm,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Move ordering service endpoints into OrdererOrg groups,FAB-7559,26285,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,yacovm,yacovm,27/Dec/17 2:18 AM,07/Mar/22 2:35 PM,28/Oct/23 3:02 AM,20/Sep/19 4:38 AM,v1.1.0,,,v1.4.2,v2.0.0,,fabric-orderer,,,,1,bft,ipm,raft,,,"*Summary*

Move ordering service endpoints from channel global configuration into the organization specific OrdererOrg channel configuration, so that orderer organization(s) can manage their own endpoints, and so that clients know which organization's TLS certs to use per orderer node.

 

*Background*

Currently, the ordering service endpoints are encoded in:
 *channel_group.values.OrdererAddresses* with a modification policy of */Channel/Orderer/Admins* which by default (I think) is majority of admins.

In a production environment the peer uses TLS to connect to the orderers and always loads the TLS root CAs of all the orderer organizations (since they are not defined per organization but globally).

This has several issues:
 * If an organization wants to change its ordering service endpoint (due to, for instance - a firewall / NAT rule change) it needs to do out-of-band collaboration for signature collection and human authorization.
 While in contrast - to do an anchor peer config change you need only to collect signatures of your own organization ( [~jyellick] please correct me if I'm wrong).
 * In the current (v1.0, v1.1) adversary model, the ordering service organization isn't byzantine so this is not an existing security vulnerability but it could be a problem in later releases when the trust assumptions would change (i.e when BFT consensus will be introduced).
 If we would want to support use cases in which an ordering service node can be byzantine, it makes no sense (in my opinion) that the peer would just select a random ordering node to pull blocks from and persist the connection forever, because the ordering node may simply not send the peer blocks and thus starve it, so I think that peers should either:
 ** Connect for a limited duration to an ordering node, and after a time period expired - switch to a different ordering node, or:
 ** Just have each peer connect to ordering nodes of its organization.
 * However, I think that even if we do one of the above, the current channel config would then expose the peers to starvation attacks:
 ** Imagine 4 organizations- *AliceOrg*, *BobOrg*, *CynthiaOrg*, *DanaOrg* with corresponding 4 (*f=1, n=4*) ordering service nodes (*Alice*, *Bob*, *Cynthia*, *Dana*) that run BFT consensus and with corresponding CAs: (*AliceCA*, *BobCA*, ...)
 ** The channel config has 4 ordering service endpoints:
 *** *alice*.AliceOrg.com
 *** *bob*.BobOrg.com
 *** ...
 *** ...
 ** AliceOrg is an adversary of the rest of the organizations, and she wants to starve the channel from blocks without them being able to detect that something is amiss.
 *AliceOrg* makes AliceCA create TLS certificates with SANs that match not only *alice*.AliceOrg.com but also *bob*.BobOrg.com, *cynthia*.CynthiaOrg.com, *dana*.DanaOrg.com and updates the TLS server certificate of *alice* (the ordering node of *AliceOrg*).
 ** Next, Alice performs either a BGP hijack or a DNS poisoning or any other infrastucture-directed attack and makes the peers of all organizations to always connect to *alice*.AliceOrg.com.
 The TLS handshake the peers would perform would succeed, because they would trust the certificate presented by them by *alice*.AliceOrg.com orderer node because it would contain all SANs of all organizations of the channel, and would be signed by a CA (*AliceCA*) that is in the (per channel) root CA certificate pool of the peer.
 ** Had the ordering service endpoints been configured per organization, the peer could only load the TLS root CA certificate of the corresponding organization, and then in case Alice performed the network traffic hijack, the TLS handshake would have failed when connecting to *alice*.AliceOrg.com ordering node, and the peers would complain in the logs that ordering service nodes could not be contacted for a long time, and the infrastructure team could be alerted in such a case.

So, I suggest that for v1.2 we move the endpoints to be configured in a new place, under each organization, and in case they are not configured at that place we could perhaps fallback to the old location(?)

Opinions? [~jyellick] , [~kchristidis] , [~mastersingh24] [~C0rWin]
 [~ellaki] [~ales] [~adc] ,",,abel23,angelo.decaro,baohua,davidkhala,denyeart,grapebaba,jyellick,kchristidis,mastersingh24,mplisov,qiang0723,yacovm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15482,FAB-17504,,,,,,,,,,,,,,,,"16/Aug/19 3:04 PM;davidkhala;configtx.yaml;https://jira.hyperledger.org/secure/attachment/17685/configtx.yaml",,,,,,,,,,,,,,,,,,,,,,Yes,,,FAB-6135,,,,,,,,,"1|i00n2c:rui92","Starting from version v1.4.2, it is possible and highly recommended to define orderer endpoints at the organization level and not at the global channel level. If at least one organization has an ordering service endpoint defined at an organizational level - all orderers and peers will ignore the channel level endpoints when connecting to ordering nodes.",Yes,,No,,,,,,Yes,,,,,,,,,,,abel23,angelo.decaro,baohua,davidkhala,denyeart,grapebaba,jyellick,kchristidis,mastersingh24,mplisov,qiang0723,yacovm,ymlbright,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jan/18 2:26 AM;jyellick;> Currently, the ordering service endpoints are encoded in: channel_group.values.OrdererAddresses with a modification policy of /Channel/Orderer/Admins which by default (I think) is majority of admins.

Correct, just for clarity, it is the majority of *ordering org* admins.

> So, I suggest that for v1.2 we move the endpoints to be configured in a new place, under each organization, and in case they are not configured at that place we could perhaps fallback to the old location

I think I generally like this idea.

If we wished to address this TLS problem without modifying the config tree. One option would be to extend the orderer addresses proto to include the MSP ID of the owner along with the address. The nice benefit here, is that it causes no incompatibility with older binaries. But, there's more to go wrong (what if the MSP ID doesn't exist? Or the lengths of the addresses and the IDs are mismatched, etc.).

Personally, I lean towards [~yacovm]'s proposal, but thought I would at least enumerate the less disruptive option.;;;","04/Jan/18 3:07 AM;yacovm;The drawback of extending the proto is that you still require a majority of signatures just to update your own endpoints (as a specific org).;;;","05/Jan/18 12:24 AM;angelo.decaro;+1, I think it makes sense to isolate the TLS root certificates in order to avoid the attack highlighted. ;;;","23/Feb/18 5:11 AM;mastersingh24;My take is that we should only do this when we are ready to implementthe Raft and/or BFT orderer.
Given that neither of those is targetted for 1.2, I'd recommend we move this to Future;;;","07/Mar/18 11:59 PM;kchristidis;I'm in for this as well, good catch. As you and Gari noted, we can live it with the current trust assumptions for the ordering service, so let's defer now.;;;","12/Feb/19 6:21 AM;yacovm;{quote}
My take is that we should only do this when we are ready to implementthe Raft and/or BFT orderer.
Given that neither of those is targetted for 1.2, I'd recommend we move this to Future
{quote}

I think we 're ready to implement Raft. I guess we're deferring this even further?;;;","12/Feb/19 6:55 AM;jyellick;We're already making breaking configuration changes which will require a v2.0 channel level capability.  Now seems like as good a time as any to implement this to me.;;;","12/Feb/19 7:25 AM;yacovm;I agree Jason.

[~denyeart] [~kchristidis] let's do this now while we still can, and simply not backport it to 1.4.x
This is a potential security issue, as noted above.;;;","12/Feb/19 9:32 AM;kchristidis;+1 on tackling this now.;;;","21/May/19 6:34 PM;denyeart;I think we will want a v2 release note suggesting that users switch to the org specific ordering endpoints.
[~yacovm] can you add sample release note text to the Release Note field.;;;","21/May/19 7:40 PM;yacovm;Done. Please edit it as you wish.;;;","29/May/19 1:26 AM;denyeart;It is desirable to backport to v1.4.2 to fix FAB-15482 (v1.4.2 will have new capability that can be used regardless).;;;","13/Jun/19 7:48 AM;yacovm;backported to 1.4.2.

Let the testing commence.;;;","08/Aug/19 2:55 AM;yacovm;kind reminder for all watchers - this still needs to be done (by someone other than me) for 2.0 as this was never merged in master.;;;","08/Aug/19 2:59 AM;denyeart;[~yacovm] I've added label *ipm* so that it shows up in the backlog that [~sykesm] and [~jyellick] manage.;;;","13/Aug/19 6:05 PM;davidkhala;Hi all, I wonder that is OrdererEndpoints property required in peer Org section or orderer org section?

I guess it only take effect in orderer Org section, is it?  

But when I use the new design in genesis block to bootstrap the orderer, it says:

2019-08-16 05:30:34.582 UTC [orderer.common.server] Start -> PANI 003 Failed validating bootstrap block: initializing channelconfig failed: could not create channel Orderer sub-group config: Orderer Org delphi cannot contain endpoints value until V2_0+ capabilities have been enabled
panic: Failed validating bootstrap block: initializing channelconfig failed: could not create channel Orderer sub-group config: Orderer Org delphi cannot contain endpoints value until V2_0+ capabilities have been enabled

;;;","16/Aug/19 3:04 PM;davidkhala;my using configtx.yaml [^configtx.yaml] 
Updated: it is resolved by fixing ""v1_4_2“  to be ""V1_4_2"";;;",,,,,,
fabric-merge-end-2-end-x86_64 failed due to Timeout error during Channel creation.,FAB-7560,26286,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,27/Dec/17 3:58 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,03/Jan/18 5:20 AM,,,,,,,fabric-quality,,,,0,ci-failure,,,,,"The fabric-merge-end-2-end-x86_64 has failed in build #1684 as there is a Timeout error,

15:36:45 2017-12-26 15:36:30.530 UTC [channelCmd] InitCmdFactory -> INFO 109 Endorser and orderer connections initialized
15:36:45 Error: timeout waiting for channel creation,

15:36:45 !!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
15:36:45 ================== ERROR !!! FAILED to execute End-2-End Scenario ==================


*Build Log*

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/1684/consoleFull",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys27:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Dec/17 3:58 AM;sambhavdutt;This test has passed in the last build #1687;;;",,,,,,,,,,,,,,,,,,,,,,
Create common gRPC client,FAB-7561,26287,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,27/Dec/17 8:23 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,05/Jan/18 7:05 PM,,,,v1.1.0,,,,,,,0,,,,,,"The code for creating gRPC client connections is not consistent in the codebase.
There are utility functions across a few packages and some ugly ways of loading config via viper.

The goal for this task is to create a common gRPC client in the comm package which would be analogous to the existing comm.GRPCServer.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7553,,,FAB-7490,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzys2f:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Dec/17 8:35 AM;mastersingh24;https://gerrit.hyperledger.org/r/16477;;;",,,,,,,,,,,,,,,,,,,,,,
Enable peer chaincode command orderer TLS hostname overide,FAB-7562,26288,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,Hangyu_FJH,Hangyu_FJH,27/Dec/17 4:16 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,05/Jan/18 8:53 AM,v1.0.5,v1.1.0,,v1.1.0,,,fabric-tools,,,,0,,,,,,"This is a follow-up fix of -FAB-5319-

Right now the peer channel command has enabled the peer orderer TLS hostname override.

Similarly, the same thing should also be done with peer chaincode command",,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzys2n:",,,,Unset,,,,,,Unset,,,,,,,,,,,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add pvt data capability to sample configtx.yaml,FAB-7563,26290,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,28/Dec/17 1:25 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,30/Dec/17 11:39 PM,,,,,,,fabric-ledger,,,,0,,,,,,"-FAB-6859- introduced V1_1_PVTDATA_EXPERIMENTAL

capability.  This work item adds it to the sample configtx.yaml

so that users know how to configure it.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzys2v:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Dec/17 1:29 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16483/;;;",,,,,,,,,,,,,,,,,,,,,,
Some CLI commands ignore ordererTLSHostnameOverride,FAB-7565,26295,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,inatatsu,inatatsu,28/Dec/17 4:00 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,05/Jan/18 7:06 PM,,,,v1.1.0,,,fabric-peer,fabric-tools,,,0,,,,,,"The channel creation command and the chaincode commands of the CLI client does not respect ordererTLSHostnameOverride. The problems are:
* GetBroadcastClient() in peer/common/ordererclient.go ignores ordererTLSHostnameOverride.
* addFlags() in peer/chaincode/chaincode.go does not provide the corresponding command-line option.
* InitCmdFactory() in peer/chaincode/common.go should pass the option to GetBroadcastClient().

Attached below is a sample patch to v1.1.0-preview.",,inatatsu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/17 4:05 PM;inatatsu;fix-orderer-tls-hostname-override.patch;https://jira.hyperledger.org/secure/attachment/13951/fix-orderer-tls-hostname-override.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys3r:",,,,,,,,,,,,,,,,,,,,,inatatsu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Dec/17 7:28 PM;mastersingh24;I'll fix this as part of the CLI rework required in order for mutual TLS to work;;;","05/Jan/18 7:06 PM;mastersingh24;https://gerrit.hyperledger.org/r/16555  should have fixed this;;;",,,,,,,,,,,,,,,,,,,,,
configtx/test/helper.go encodes appOrgs into orderer organization,FAB-7566,26296,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Dec/17 11:01 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,29/Dec/17 7:37 PM,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,"The function MakeGenesisBlockFromMSPs skips appOrgID and instead encodes the applicationOrg object into the orderer organization.
{code:java}
    channelGroup.Groups[channelconfig.OrdererGroupKey].Groups[ordererOrgID] = ordererOrg
    channelGroup.Groups[channelconfig.ApplicationGroupKey].Groups[ordererOrgID] = applicationOrg{code}",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys3z:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Dec/17 11:08 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/16487/;;;",,,,,,,,,,,,,,,,,,,,,,
Implement service discovery client side (reference implementation),FAB-7567,26297,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Dec/17 11:12 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Mar/18 9:49 PM,v1.2.0,,,v1.2.0,,,,,,,0,,,,,,"The client side of service discovery needs to be implemented for each SDK.

There are basically 2 parts for each SDKs implementation:
* Implementation: Consuming the service discovery server side and presenting an API to the SDK
* Integration into the SDK using the API above to:
** Bootstrap the SDK
** Integrate into the SDK

",,n-horiguchi,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,,,,,,,"1|hzwsyn:",,,,,,Sprint 6 - NextGen Endorsement,,,,,,,,,,,,,,,n-horiguchi,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Remove duplicate code from certificate sanitization,FAB-7568,26298,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,29/Dec/17 1:02 AM,21/Jul/18 3:51 AM,28/Oct/23 3:02 AM,29/Dec/17 8:26 AM,,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,"There are code duplication at the certificates sanitization code, e.g.:

{code}
func (msp *bccspmsp) sanitizeCert(cert *x509.Certificate) (*x509.Certificate, error) {
	if isECDSASignedCert(cert) {
		// Lookup for a parent certificate to perform the sanitization
		var parentCert *x509.Certificate
		if cert.IsCA {
			// at this point, cert might be a root CA certificate
			// or an intermediate CA certificate
			chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert))
			if err != nil {
				return nil, err
			}
			if len(chain) == 1 {
				// cert is a root CA certificate
				parentCert = cert
			} else {
				// cert is an intermediate CA certificate
				parentCert = chain[1]
			}
		} else {
			chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert))
			if err != nil {
				return nil, err
			}
			parentCert = chain[1]
		}

		// Sanitize
		var err error
		cert, err = sanitizeECDSASignedCert(cert, parentCert)
		if err != nil {
			return nil, err
		}
	}
	return cert, nil
}
{code}

following peace 

{code}
			chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert))
			if err != nil {
				return nil, err
			}
{code}

is repeated regardless of the if state condition. The sanitation check could be improved by simple refactoring to the following code:

{code}
func (msp *bccspmsp) sanitizeCert(cert *x509.Certificate) (*x509.Certificate, error) {
	if isECDSASignedCert(cert) {
		// Lookup for a parent certificate to perform the sanitization
		var parentCert *x509.Certificate
		chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert))
		if err != nil {
			return nil, err
		}

		// at this point, cert might be a root CA certificate
		// or an intermediate CA certificate
		if cert.IsCA && len(chain) == 1 {
			// cert is a root CA certificate
			parentCert = cert
		} else {
			parentCert = chain[1]
		}

		// Sanitize
		cert, err = sanitizeECDSASignedCert(cert, parentCert)
		if err != nil {
			return nil, err
		}
	}
	return cert, nil
}
{code}

which preserves former logic, while avoids duplication.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzys47:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Dec/17 1:06 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/16491/1;;;",,,,,,,,,,,,,,,,,,,,,,
Fix intermittent failures in CouchDB unit tests - TestIndexOperations,FAB-7569,26306,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,29/Dec/17 5:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,30/Dec/17 12:06 PM,,,,,,,fabric-ledger,,,,0,,,,,,"TestIndexOperations creates and drops indexes

in CouchDB and then queries the list of indexes.

Since the index create/drop is async in CouchDB,

sometimes the list of indexes is not as expected,

causing TestIndexOperations to fail.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0dj:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Dec/17 1:18 AM;denyeart;I've opened a CouchDB issue to determine if the index create/drop behavior could become synchronous:

https://github.com/apache/couchdb/issues/1083;;;",,,,,,,,,,,,,,,,,,,,,,
Fetch metadata from LSCC ,FAB-7570,26307,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,29/Dec/17 7:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,04/Apr/18 5:48 PM,,,,,,,,,,,0,,,,,,It is needed to fetch metadata from LSCC in order to obtain the endorsement policy.,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys4f:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
SemVer-compliant versions not accepted as chaincode versions,FAB-7571,26309,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,vdods,vdods,29/Dec/17 12:57 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Jan/18 9:03 PM,v1.1.0,,,v1.1.0-alpha,,,fabric-peer,,,,0,,,,,,"The SemVer spec ( semver.org ) includes a particular use of the "" + "" char, but "" + "" is not allowed by 

    func (lscc *LifeCycleSysCC) isValidChaincodeVersion(chaincodeName string, version string) error

in file

    hyperledger/fabric/core/scc/lscc/lscc.go

This is a bummer if you're using SemVer.  This would be nearly trivial to fix by altering the regex defined by the const allowedCharsVersion to allow the ""+"" char.",,baohua,mastersingh24,muralisr,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys4n:",,,,,,,,,,,,,,,,,,,,,baohua,mastersingh24,muralisr,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Dec/17 7:25 PM;mastersingh24;I'm not opposed to this and seems like it should generally be ok.

[~muralisr] [~jyellick] what do you think?;;;","29/Dec/17 11:42 PM;muralisr;[~mastersingh24] works for me.;;;","03/Jan/18 9:50 AM;baohua;https://gerrit.hyperledger.org/r/#/c/16539/;;;","07/Jan/18 5:31 AM;vdods;Could this be merged into the v1.0.x branch as well?;;;",,,,,,,,,,,,,,,,,,,
Upgrade CouchDB image from 2.0.0 to 2.1.1,FAB-7572,26318,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,denyeart,denyeart,30/Dec/17 1:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 5:44 AM,,,,v1.1.0,,,fabric-ledger,,,,0,Release-planning-1.1-PostAlpha,,,,,"Multiple improvements and bug fixes have been made in CouchDB 2.1.1, including new support for partial indexes and support for paging via bookmarks in mango (_find) queries.",,chris.elder,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7757,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0db:",,,,,,,,,,,,,,,,,,,,,chris.elder,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/18 5:39 AM;chris.elder;FYI:

[~denyeart]

[~ChristopherFerris];;;","12/Jan/18 7:40 AM;ChristopherFerris;Interesting... [~mastersingh24] I think we have time to test this out, assuming it gets through CI and nightly builds, we can always revert. Thoughts?;;;","12/Jan/18 7:58 AM;chris.elder;I have installed CouchDB 2.1.1 manually inside the Vagrant dev environment and run the unit tests for CouchDB and state database. I did not see any issues.;;;","16/Jan/18 8:54 AM;rameshthoomu;[~chris.elder] I observed below error while building couchdb image with version 2.1.1 from fabric-baseimage repo in my local machine

`make dependent-images`
{code:java}
Step 10/16 : RUN chmod +x /docker-entrypoint.sh  && mkdir /opt/couchdb/data /opt/couchdb/etc/default.d  && chown -R couchdb:couchdb /opt/couchdb/
 ---> Running in 4eef896e6513
mkdir: cannot create directory '/opt/couchdb/etc/default.d': File exists
The command '/bin/sh -c chmod +x /docker-entrypoint.sh  && mkdir /opt/couchdb/data /opt/couchdb/etc/default.d  && chown -R couchdb:couchdb /opt/couchdb/' returned a non-zero code: 1
Makefile:125: recipe for target 'build/image/couchdb/.dummy' failed{code}
I don't see any issue while creating couchdb image with 2.0.0. Did you see the above error?;;;","17/Jan/18 12:46 AM;rameshthoomu;[~chris.elder] suggested change in dockerfile to fix the above error. Will push images to my personal dockerhub account and test dependent jobs in sandbox. Will update the status;;;","18/Jan/18 12:31 AM;rameshthoomu;Ok this has been fixed adding -p to the mkdir command in couchdb dockerfile. I have created a 2.1.1 couchdb docker image and tested this patch [https://gerrit.hyperledger.org/r/#/c/16869/] and it worked as expected.;;;","18/Jan/18 1:05 AM;rameshthoomu;patch has been submitted [https://gerrit.hyperledger.org/r/#/c/16905/] to update couddb version to 2.1.1. We have to create a release tag in fabric-baseimage to publish these images to dockerhub;;;","20/Jan/18 5:44 AM;rameshthoomu;thirdparty docker images (couchdb, kafka and zookeeper) have been pushed to hyperledger dockerhub account with tag 0.4.4.;;;",,,,,,,,,,,,,,,
cleanup chaincode support in fabric,FAB-7573,26319,19423,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,30/Dec/17 2:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Mar/18 5:57 PM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Allowing concurrent access to invokes and init in 1.0 allowed all the 0.6 separation of Query, Invoke and Init to be vastly simplified (in 0.6 Queries were allowed concurrent access but not others). 

This also implied that the FSM can be removed completely which was done in FAB-5424. This task completes the work with the following
* change names of functions to not have ""FSM"" flavor (they now have ""handler"" flavor) in core/chaincode/handler.go
* chaincode and peer calls driven by function handlers
* comment and sundry cleanup

This was tested as follows
* peer and shim chaincode UT
* destructive testing by killing peer and chaincode at different points of the lifecycle
* running against a java chaincode to prove the two sides are independent and shims can be worked upon independent of peer chaincode support side",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys5z:",,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Attach serviceDiscovery to the peer,FAB-7574,26321,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,31/Dec/17 5:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Apr/18 5:21 PM,,,,,,,,,,,0,,,,,,"The serviceDiscovery isn't yet bound to the gRPC service, and it should be also toggle-able.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys6f:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
[CI] - fabric-multihost CI job is not working,FAB-7575,26325,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jwagantall,rameshthoomu,rameshthoomu,03/Jan/18 12:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,04/Jan/18 11:16 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"[CI] - configuration files are not loaded properly in fabric-multihost CI job

https://jenkins.hyperledger.org/me/my-views/view/All/job/fabric-multihost-tests-x86_64/configure",Jenkins CI job,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys7b:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 11:16 AM;rameshthoomu;restarted Jenkins after update the configuration has been fixed this issue.;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - add comment based trigger in all the downstream jobs,FAB-7579,26330,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,03/Jan/18 4:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,04/Jan/18 11:09 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"add comment based trigger in all the downstream jobs (fabric-verify-behave-tests, fabric-verify-unit-tests and fabric-verify-byfn-tests). These jobs triggers based on the comment provided in the gerrit patch set.
 * rebuild-behave
 * rebuild-unit-tests
 * rebuild-byfn",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys87:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 11:09 AM;rameshthoomu;Patch has been submitted and merged. Developer can trigger downstream jobs based on the comments provided above.;;;",,,,,,,,,,,,,,,,,,,,,,
do READY notification as part of REGISTER,FAB-7580,26331,19423,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Jan/18 5:57 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 7:59 AM,,,,v1.2.0,,,fabric-peer,,,,1,,,,,,"The chaincode support code in the peer sends a READY message to the chaincode after receiving notification of registration. The code path can be shortened (basically avoid a channel notification followed by call to send READY) where the READY is sent immediately following receipt of register from chaincode. This code and codepath reduction further simplifies the chaincode cleanup.

Indeed, we can even collapse the READY with the REGISTER but that would require changes to all chaincode types which is better done later",,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys8f:",,,,,,,,,,,,,,,,,,,,,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Mar/18 7:59 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16533/;;;",,,,,,,,,,,,,,,,,,,,,,
Handle chaincode lifecycle events,FAB-7581,26332,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,03/Jan/18 6:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Jan/18 7:31 AM,,,,,,,fabric-ledger,,,,0,Release-planning-1.1,,,,,"Construct a mechanism for coordinating the db index creation tasks. This includes

- Introducing a mechanism for allowing statedb to receive notification from the different _code paths_ of peer that makes the a chaincode to become as both - '_installed' && 'instantiated_'. The _code path_ include the code that processes the chaincode instantiate transaction and the code that processes the chaincode install activity. This notification is intended to be used by statecouchdb implementation so that the indexes can be created on the couchdb on such a notification. This notification should be processed in the _code path_ so that any errors during index creation causes the failure of the higher level activity (block commit of instantiation transaction/ chaincode install)

- Introducing a mechanism for coordinating the synchronization between ledger creation/opening & chaincode install, and chaincode instantiation & chaincode install so that an event '_installed' && 'instantiated'_ is not missed for a combination of channel/chaincode during concurrent activities. To simplify this coordination for the other code path, this coordinator is expected to handle all the synchronization internally and expose three high level functions (A) _RegisterLedgerComponent_ - making couchdb able to receive notifications so that couch indexes can be created (B) _HandeChaincodeInstantiation_ and (C) _HandeChaincodeInstall._ (A) is intended to be invoked at the time of ledger opening, (B) is intended to be invoked at the time of processing a chaincode instantiation transaction, and (C) is intended to be invoked at the time of chaincode install

- Introducing a mechanism for identifying a chaincode instantiation transaction so that the function _HandeChaincodeInstantiation,_ (B) in the above description, can be invoked in path of  transaction processing

- General purpose functions for getting the current status of a chaincode - whether it is installed or instantiated so as to get to know when '_installed' && 'instantiated_' criteria is met during execution of functions  _HandeChaincodeInstantiation_ and _HandeChaincodeInstall_ in the coordinator.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11058,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys8n:",,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jan/18 6:29 AM;Clayton Sims;https://gerrit.hyperledger.org/r/#/c/16549/;;;",,,,,,,,,,,,,,,,,,,,,,
"[ci] - optimize ""trigger"" macro configuration",FAB-7582,26333,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,03/Jan/18 6:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Feb/18 6:46 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"Configuration of trigger is mentioned here [https://github.com/hyperledger/ci-management/blob/master/jjb/global-macros.yaml#L144]  If you observed there are many trigger macro names configured in global-macros file. Configure a global trigger macro for verify and merge and pass the comment values to the macros specified in global-macros.

 ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys8v:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/18 6:47 AM;rameshthoomu;patch has been submitted and merged. gerrit-triggers are now optimized in JJB's.;;;",,,,,,,,,,,,,,,,,,,,,,
basic-network sample uses creds/* which does not exist ,FAB-7584,26335,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sudheesh001,sudheesh001,sudheesh001,03/Jan/18 1:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Jan/18 2:19 PM,,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"The `init.sh` of the `basic-network` sample deletes the contents of the `.hfc-key-store` and copies peer admin credentials back to the keystore. However this directory called `creds/*` doesn't exist and isn't available at any point in the execution of the sample code in this directory.

 

This seems to be a bug and should be removed.",,sudheesh001,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys9b:",,,,,,,,,,,,,,,,,,,,,sudheesh001,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jan/18 2:20 PM;sudheesh001;Review link:  [https://gerrit.hyperledger.org/r/16541]

Commit cf79cd1dc1d34c83adb756c8be94b5a1902099db

Change-Id: Ia3d07ad78875328f6798290d3f0ab3098b9e85fc;;;",,,,,,,,,,,,,,,,,,,,,,
Proposal Promise gets rejected when using new generated certificates.,FAB-7585,26336,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,angelo.decaro,sudheesh001,sudheesh001,03/Jan/18 8:38 PM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,v1.1.0-preview,,,,,,fabric-samples,,,,0,stale-item,,,,,"From the code sample in [hyperledger/education|https://github.com/hyperledger/education/tree/master/LFS171x/fabric-material] fabric-material, the _tuna-app_ uses _basic-network_. The basic-network has a file `generate.sh` which uses the `.yaml` files to generate the content inside `_config/*_` and `_crypto-config/*_`. The git repository for education as well as [fabric-samples|https://github.com/hyperledger/fabric-samples/tree/release/basic-network/crypto-config] contains the certificates already.

Ideally these should be generated via the generate.sh process using the cryptogen, configtxgen and other tools. Clearing out the content from the two directories and recreating the certificates works perfectly.

After creating the network and registering the Admin user and a demo user, a query to the chaincode results in an error unable to verify as the certificate was signed by an unknown authority.
{code:java}
sendPeersProposal - Promise is rejected: Error: Failed to deserialize creator identity, err the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com""{code}
 

In general these certs and data shouldn't be committed, Is there a reason why this is being done? Am I doing something wrong here?

With the default certificates in the commit, the application works just fine.

 ",,angelo.decaro,denyeart,kchristidis,mastersingh24,sudheesh001,sykesm,zamrokk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzys9j:",,,,Unset,,,,,,Unset,,,,,,,,,,,angelo.decaro,denyeart,kchristidis,mastersingh24,sudheesh001,sykesm,zamrokk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 2:05 AM;denyeart;[~mastersingh24] Looks like you last touched the certs for basic-network. Is there a reason to include them rather than generating them?;;;","22/Feb/18 9:48 PM;mastersingh24;Not really .... I think the goal of basic network was to simply get an ""instant"" environment to show people how things worked and then they should move on to BYFN.

But no real reason we can't modify this to generate certs;;;","24/Feb/18 1:24 AM;zamrokk;I encountered also same issue, if I try to regenerate the certificates myself then I got this error :(

2018-02-23 16:08:46.676 UTC [common/tools/configtxgen] main -> CRIT 003 Error on outputChannelCreateTx: config update generation failure: could not parse application to application group: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com"")

 

It works fine only from the .tx binary committed on git

 

I use the V1.1.0-alpha;;;","25/Feb/18 2:47 AM;denyeart;[~ales] and [~adc] will discuss this and provide their thoughts, since generating certs has been a topic a recent discussion.;;;","25/Feb/18 2:55 AM;zamrokk;It could be related to this problem too : https://jira.hyperledger.org/browse/FAB-3285?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel&focusedCommentId=40650#comment-40650;;;","28/Feb/18 6:41 PM;zamrokk;For the .tx binary corrupted, I have to start a new yaml from scratch, no idea why it was buggy

 

For the error message, I could resolve the error using the 4th bullet of troubleshooting here : [https://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#troubleshooting]

The CA was no taking my cert files, so it was generating new ones at startup without I knew it;;;","22/May/18 3:28 AM;kchristidis;[~adc]: What seems to be the issue here?;;;","13/Jun/18 4:17 PM;angelo.decaro;I mean, I don't think there is a bug there. My educated guess is that Fabric is reacting in the proper way.

The issue here, as it has been said in the description, is more about configuration.;;;","23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,
Fabric fails to trigger FSM event REGISTER,FAB-7586,26337,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sudheesh001,sudheesh001,03/Jan/18 8:48 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Feb/18 9:04 PM,,,,,,,fabric-peer,,,,0,,,,,,"There are multiple peer nodes, a single orderer and a single CA authority for production and want to deploy the chaincode. I have the compiled chaincode and the {{go}} file in a directory called {{chaincode-app/}}

 

The peer node has a docker instance running with the name {{peer0-vm}}. I want to deploy my chaincode using this peer. When I run
{code:java}
docker exec peer0-vm peer chaincode install -n mycc -v 1.0 -p chaincode-app/{code}
{{I receive the following error:}}
{code:java}
2018-01-03 05:35:30.577 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc 2018-01-03 05:35:30.578 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc Error: Error getting chaincode code chaincode: <go, [env]>: failed with error: ""exec: not started""{code}
{{The peer logs are as follows:}}
{code:java}
2018-01-02 11:00:29.826 UTC [gossip/gossip] NewGossipService -> WARN 014 External endpoint is empty, peer will not be accessible outside of its organization 2018-01-02 11:00:29.829 UTC [gossip/gossip] start -> INFO 015 Gossip instance 0.0.0.0:7051 started 2018-01-02 11:00:29.830 UTC [cscc] Init -> INFO 016 Init CSCC 2018-01-02 11:00:29.830 UTC [sccapi] deploySysCC -> INFO 017 system chaincode cscc/(github.com/hyperledger/fabric/core/scc/cscc) deployed 2018-01-02 11:00:29.830 UTC [sccapi] deploySysCC -> INFO 018 system chaincode lscc/(github.com/hyperledger/fabric/core/scc/lscc) deployed 2018-01-02 11:00:29.831 UTC [escc] Init -> INFO 019 Successfully initialized ESCC 2018-01-02 11:00:29.831 UTC [sccapi] deploySysCC -> INFO 01a system chaincode escc/(github.com/hyperledger/fabric/core/scc/escc) deployed 2018-01-02 11:00:29.831 UTC [sccapi] deploySysCC -> INFO 01b system chaincode vscc/(github.com/hyperledger/fabric/core/scc/vscc) deployed 2018-01-02 11:00:29.831 UTC [qscc] Init -> INFO 01c Init QSCC 2018-01-02 11:00:29.831 UTC [sccapi] deploySysCC -> INFO 01d system chaincode qscc/(github.com/hyperledger/fabric/core/chaincode/qscc) deployed 2018-01-02 11:00:29.832 UTC [nodeCmd] initSysCCs -> INFO 01e Deployed system chaincodess 2018-01-02 11:00:29.832 UTC [nodeCmd] serve -> INFO 01f Starting peer with ID=[name:""fabsmbqxc-peer0.org1.example.com"" ], network ID=[dev], address=[0.0.0.0:7051] 2018-01-02 11:00:29.832 UTC [nodeCmd] serve -> INFO 020 Started peer with ID=[name:""fabsmbqxc-peer0.org1.example.com"" ], network ID=[dev], address=[0.0.0.0:7051] 2018-01-02 14:06:22.467 UTC [chaincode] notifyDuringStartup -> WARN 021 trying to manually run chaincode when not in devmode ? 2018-01-02 14:06:22.467 UTC [chaincode] HandleMessage -> ERRO 022 []Failed to trigger FSM event REGISTER: transition canceled with error: peer will not accepting external chaincode connection name:""chaincode-app:1.0"" (except in dev mode) 2018-01-02 14:06:22.467 UTC [chaincode] processStream -> ERRO 023 []Error handling message, ending stream: transition canceled with error: peer will not accepting external chaincode connection name:""chaincode-app:1.0"" (except in dev mode){code}
On a quick read, I understood that the [chaincode cannot be executed by the user|https://github.com/hyperledger/fabric/blob/2cab745abf031d8ff5d3e8f4fa7a5e5af8907fad/core/chaincode/chaincode_support.go#L277-L281] and should be instead done by the peer. Can someone point out how I could deploy this chaincode?

I've tried to follow the lifecycle of {{package -> install -> instantiate -> upgrade}} and tried to package the chaincode before signing and installing using the command but failed.
{code:java}
docker exec peer0-vm peer chaincode package -n mycc -v 1.0 -p chaincode-app -s -S ccpack.out{code}
{{Could someone point out where I am going wrong and a possible solution?}}",,muralisr,sudheesh001,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzys9r:",,,,,,,,,,,,,,,,,,,,,muralisr,sudheesh001,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/18 12:31 AM;muralisr;[~sudheesh001] We went over this on https://stackoverflow.com/questions/48071871/hyperledger-fabric-fails-to-trigger-fsm-event-register.  As stated there this is not a bug.

{code:java}
peer will not accepting external chaincode connection name:""chaincode-app:1.0"" (except in dev mode)
{code}

The above error is due to attempting to start the chaincode manually (ie, peer does not start it in a docker container).;;;","25/Jan/18 1:51 AM;sudheesh001;[~muralisr] While I agree that the error is because i am in `non-dev` mode, it however doesn't satisfy why the chaincode packaging before deployment fails.


{code:java}
docker exec peer0-vm peer chaincode package -n mycc -v 1.0 -p chaincode-app -s -S ccpack.out
{code}
;;;","25/Jan/18 1:59 AM;muralisr;[~sudheesh001] this is addressed in the stackoverflow too... you cannot do CLI packaging using the peer container.

From your response comment there:
{code:java}
You can obviously use the fabric-tools image or dev-chaincode-docker images to do the required chaincode installation. 
{code}

Samples such as e2e_cli contain CLI container definition that can be used as template for CLI commands.;;;","01/Feb/18 9:04 PM;yacovm;Closing, as it does not require a change;;;","01/Feb/18 9:58 PM;sudheesh001;I completely wouldn't agree with the resolution here.
 # Yes I understand we can use fabric-tools or dev-chaincode-dockers in dev mode to do chaincode installation, but my question was packaging them and signing them before putting them in production. I wouldn't want to use `fabric-tools` (cli) in production servers.
 # This NEEDS documentation and examples.
 ** Packaging and signing chaincode before installing them on a production cluster
 ** A sample for non-dev mode chaincode in fabric-samples which contains the packaging, signing and installing the chaincode.;;;","01/Feb/18 10:10 PM;yacovm;{quote}This NEEDS documentation and examples. {quote}
Well we have [this|http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4noah.html?highlight=packaging] that explains how to package and sign chaincode. 
Whether this needs to be implemented in samples or not, is a different story and not related to this JIRA and should be addressed in a separate JIRA item :) 

{quote} I wouldn't want to use `fabric-tools` (cli) in production servers.{quote}
You don't have to. You can always spin up your own container, or just not use any container and use the standard binaries. 
I think that the idea of the peer contains is that it will be minimal and won't include any functionality other than running the peer.;;;","01/Feb/18 10:37 PM;muralisr;[~sudheesh001]  Couple of things to clarify 
_Yes I understand we can use fabric-tools or dev-chaincode-dockers in dev mode to do chaincode installation_
Packaging and installing has nothing to do with devmode... indeed there are no two ways to package for dev mode or production mode. 

_I wouldn't want to use `fabric-tools` (cli) in production servers._ 
This is not ""part"" of the server. CLI is a client side program. You can just run it directly as `peer chaincode ..., peer channel ... , etc` commands from a fabric installation. `fabric-tools` is just a packaging to make it easy to run the CLI on the client side to talk to the server (basically saying the same thing [~yacovm] says above).;;;",,,,,,,,,,,,,,,,
MSP Child certificate filtering on Organization OR DistinguishedName,FAB-7587,26339,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,romain_griffiths,romain_griffiths,03/Jan/18 11:36 PM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,,,,,,,fabric-peer,,,,2,configuration,crypto,msp,review-needed,stale-item,"*Need*

Organizations CISO (Chief Information Security Officer) with strong PKI policies refuse to allow self-signed CA and derived certificates to sign transactions.

CISO would like to use their validated Certificate Authority Provider (CA Provider) and validated internal procedures and tools for management of Fabric Certificates.

 

*Problem*

Fabric MSP could trust CA Provider root certificate but it would end up trusting all certificates issued by the CA Provider.

Current Fabric version supports segregation of Clients, Peers and Orderer on the OU field and could be used for this purpose.

But the OU field cannot be validated by standard Certificate Issuance procedures. 

*Proposal 1*

 

The O (Organization) field can have  [ETSI|https://portal.etsi.org/TBSiteMap/ESI/TrustServiceProviders.aspx] validation procedure.

The MSP config.yaml file could have filtering configuration on the O (Organization field) to enable limited trust of child certificates.

Please see the detailed description:

[^FAB-OrganizationFilter-20180103-3.pdf]

 

*Proposal 2*

Various restrictions could be applied on fields other than the O (Organization) field. This would enable restrictions by Departments, or force specific naming pattern.

The MSP config.yaml file could have filtering pattern on any Distinguished Name component to enable limited trust of child certificates.

Please see the detailed description:

[^FAB-DNFilter-20180103-3.pdf]

 
h3. *^Proposition Comparison^*

^Proposal 1 is easy to do and to test but is not very configurable.^

^Proposal 2 is more configurable and future-proof but require more testing and might lead to security holes if the regex are not properly crafted.^

 

 ",,davidgsmits,mcudden,montycheese,romain_griffiths,sykesm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jan/18 11:36 PM;romain_griffiths;FAB-DNFilter-20180103-3.pdf;https://jira.hyperledger.org/secure/attachment/13961/FAB-DNFilter-20180103-3.pdf","03/Jan/18 11:36 PM;romain_griffiths;FAB-OrganizationFilter-20180103-3.pdf;https://jira.hyperledger.org/secure/attachment/13962/FAB-OrganizationFilter-20180103-3.pdf",,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysa7:",,,,Unset,,,,,,Unset,,,,,,,,,,,davidgsmits,mcudden,montycheese,romain_griffiths,sykesm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 6:19 AM;montycheese;MSPs can be configured to validate on root cert + OU. Is this enough to achieve your use case? Additionally OU validation can be done by a registration authority before certificate issuance.

 

see: [https://github.com/hyperledger/fabric/blob/release-1.1/sampleconfig/msp/config.yaml#L6];;;","14/Jul/18 5:17 PM;romain_griffiths;Yes I saw the OU validation. But registration authority only enforce O Fields with certain certificate.;;;","17/Jul/18 1:05 AM;montycheese;Which Registration Authority only enforces on the O field?;;;","23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,
Eventing services completes for transaction but query still shows old value.,FAB-7588,26340,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,wlahti,rickr,rickr,04/Jan/18 1:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Jan/18 4:35 AM,v1.1.0,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"I'm running the SDK a balance transfer example. This issue is not happening locally but when on the build machine it happens quite regularly. 

[https://gerrit.hyperledger.org/r/#/c/16117/]
[https://jenkins.hyperledger.org/job/fabric-sdk-java-verify-x86_64/1450/]

In this case the txid in question is cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19

We do a query for b value on two peers:
2018-01-03 15:59:33,725 pool-17-thread-1 TRACE CryptoPrimitives:301 - verify :  diagnostic_2018-01-03T15-59-33_724P8429_37_256.bin
Query payload of b from peer peer0.org1.example.com returned 325
Query payload of b from peer peer1.org1.example.com returned 325

we send a move of 50 (the CC in this case will double the move value) so we would expect b to have 425


2018-01-03 15:59:34,951 pool-17-thread-1 TRACE CryptoPrimitives:301 - verify :  diagnostic_2018-01-03T15-59-34_951P8429_37_264.bin
Successful transaction proposal response Txid: cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19 from peer peer0.org1.example.com
Successful transaction proposal response Txid: cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19 from peer peer1.org1.example.com
Received 2 transaction proposal responses. Successful+verified: 2 . Failed: 0
Successfully received transaction proposal responses.
Sending chaincode transaction(move a,b,50) to orderer.

2018-01-03 15:59:34,998 pool-17-thread-1 DEBUG Channel:2496 - Channel foo successful sent to Orderer transaction id: cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19

now we wait to see on both peers from the peer eventing service that the transaction is done and good.

2018-01-03 15:59:37,393 pool-14-thread-1 DEBUG Channel:3422 - Channel foo seen transaction event cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19 for peer peer1.org1.example.com

2018-01-03 15:59:37,395 pool-14-thread-1 DEBUG Channel:3422 - Channel foo seen transaction event cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19 for peer peer0.org1.example.com


clear the future the tx has been done ok.


2018-01-03 15:59:37,395 pool-14-thread-1 DEBUG Channel:3503 - Completing future for channel foo and transaction id: cf1812994e03d95c20425b882ae9848937a10c50b3f3b57a5afce23433973f19
Now query chaincode on channel foo for the value of b expecting to see: 425



Now query chaincode on channel foo for the value of b expecting to see: 425
2018-01-03 15:59:37,399 pool-17-thread-1 DEBUG ProtoUtils:80 - ChannelHeader: type: ENDORSER_TRANSACTION, version: 1, Txid: 9ca9668f54ee48f98fc64810e58c2ed17af76408971d708044cad93bddb94d76, channelId: foo, epoch 0
2018-01-03 15:59:37,399 pool-17-thread-1 DEBUG ProposalBuilder:196 - ChaincodeInvocationSpec type: GOLANG, chaincode name: example_cc_go, chaincode path: github.com/example_cc, chaincode version: 11 args(""invoke"", ""query"", ""b"")
2018-01-03 15:59:37,399 pool-17-thread-1 DEBUG ProtoUtils:201 - SignatureHeader: nonce: 15c3a589c8a6ebd486dceb8006d3554166d510b1ae997ca2, User:user1, MSPID: Org1MSP, idBytes: 050912538b9d067217eaa5abfbf7f6617d9a6e06e64d6fde57828ff99dc25fa9
2018-01-03 15:59:37,401 pool-17-thread-1 DEBUG Channel:2268 - Channel foo send proposal to peer peer0.org1.example.com at url grpcs://localhost:7051
2018-01-03 15:59:37,401 pool-17-thread-1 TRACE Channel:2272 - Sending to channel foo, peer: peer0.org1.example.com, proposal: protobuf_2018-01-03T15-59-37_401P8429_37_268.proto
2018-01-03 15:59:37,402 pool-17-thread-1 DEBUG Peer:190 - peer.sendProposalAsync name: peer0.org1.example.com, url: grpcs://localhost:7051
2018-01-03 15:59:37,407 pool-17-thread-1 DEBUG Channel:2268 - Channel foo send proposal to peer peer1.org1.example.com at url grpcs://localhost:7056
2018-01-03 15:59:37,408 pool-17-thread-1 TRACE Channel:2272 - Sending to channel foo, peer: peer1.org1.example.com, proposal: protobuf_2018-01-03T15-59-37_408P8429_37_269.proto
2018-01-03 15:59:37,408 pool-17-thread-1 DEBUG Peer:190 - peer.sendProposalAsync name: peer1.org1.example.com, url: grpcs://localhost:7056
2018-01-03 15:59:39,344 pool-17-thread-1 DEBUG Channel:2300 - Channel foo got back from peer peer0.org1.example.com status: 200, message: OK
2018-01-03 15:59:39,346 pool-17-thread-1 TRACE Channel:2303 - Got back from channel foo, peer: peer0.org1.example.com, proposal response: protobuf_2018-01-03T15-59-39_346P8429_37_270.proto
2018-01-03 15:59:39,347 pool-17-thread-1 TRACE ProposalResponse:122 - payload TransactionBuilderbytes:  diagnostic_2018-01-03T15-59-39_347P8429_37_271.bin
2018-01-03 15:59:39,347 pool-17-thread-1 TRACE CryptoPrimitives:301 - verify :  diagnostic_2018-01-03T15-59-39_347P8429_37_272.bin
2018-01-03 15:59:40,327 pool-17-thread-1 DEBUG Channel:2300 - Channel foo got back from peer peer1.org1.example.com status: 200, message: OK
2018-01-03 15:59:40,328 pool-17-thread-1 TRACE Channel:2303 - Got back from channel foo, peer: peer1.org1.example.com, proposal response: protobuf_2018-01-03T15-59-40_328P8429_37_273.proto
2018-01-03 15:59:40,328 pool-17-thread-1 TRACE ProposalResponse:122 - payload TransactionBuilderbytes:  diagnostic_2018-01-03T15-59-40_328P8429_37_274.bin
2018-01-03 15:59:40,328 pool-17-thread-1 TRACE CryptoPrimitives:301 - verify :  diagnostic_2018-01-03T15-59-40_328P8429_37_275.bin
Query payload of b from peer peer0.org1.example.com returned 325
org.junit.ComparisonFailure: Failed compare on channel foo chaincode id ChaincodeID(example_cc_go:github.com/example_cc:11) expected value:'425', but got:'325' expected:<[4]25> but was:<[3]25>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.hyperledger.fabric.sdkintegration.End2endAndBackAgainIT.queryChaincodeForExpectedValue(End2endAndBackAgainIT.java:801)
    at org.hyperledger.fabric.sdkintegration.End2endAndBackAgainIT.lambda$runChannel$2(End2endAndBackAgainIT.java:456)
    at java.util.concurrent.CompletableFuture.uniApply(CompletableFuture.java:602)","commit f6bb64bea60d6d3498e2be0f053e474ad9731df1
Author: David Enyeart <enyeart@us.ibm.com>
Date:   Wed Dec 27 11:27:13 2017 -0500

    [FAB-7563] Add pvt data capability to configtx.yaml
    
    FAB-6859 introduced V1_1_PVTDATA_EXPERIMENTAL
    capability.  This work item adds it to the sample configtx.yaml
    so that users know how to configure it.
    
    Change-Id: I14e1fc49caa9193543340cbd885c7988db260ac8
    Signed-off-by: David Enyeart <enyeart@us.ibm.com>",harrisob@us.ibm.com,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 1:43 AM;rickr;consoleText;https://jira.hyperledger.org/secure/attachment/13964/consoleText","04/Jan/18 1:43 AM;rickr;dockerlogfile.log;https://jira.hyperledger.org/secure/attachment/13963/dockerlogfile.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysaf:",,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 3:56 AM;harrisob@us.ibm.com;I am seeing this with NodeSDK also. I have put in 5 second sleeps into the test case to make it run between when an event is received and when a query is done to verify the results.;;;","04/Jan/18 4:06 AM;wlahti;I discussed this issue with [~manish-sethi], since the deliver service waits for a ledger iterator to return the next block before sending. This iterator currently returns on the peer when the block storage has the new block instead of when the state db has it, which is what the queries are performed against. Manish plans to handle the fix. ;;;","07/Jan/18 12:39 AM;wlahti;[~rickr] reached out to me with positive test results last night. I'll change this item to ""In Review"" until [~harrisob@us.ibm.com] has a chance to verify that his Node SDK test for the channel event service (deliver) runs successfully without the sleeps he added as a workaround. ;;;","10/Jan/18 4:35 AM;wlahti;Confirmed with Bret that the Node SDK tests now pass after the removal of his sleep workaround. ;;;",,,,,,,,,,,,,,,,,,,
Add an additional test,FAB-7589,26341,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,manish-sethi,manish-sethi,04/Jan/18 2:03 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,11/Mar/18 10:59 PM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Add an additional test that verifies that at the ledger level, it is allowed to use an iterator and issuing deletes while iterating.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysan:",,,,Unset,,,,,,Unset,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Remove LifecycleViaConfig capability, replace with experimental ResourcesTree capability",FAB-7591,26347,26142,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Jan/18 3:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Jan/18 12:18 AM,,,,,,,,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysbj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca sample fails with new fabric-ca code,FAB-7592,26349,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,aambati,aambati,aambati,04/Jan/18 4:20 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,05/Jan/18 11:57 AM,v1.1.0-alpha,,,v1.1.0-alpha,,,fabric-samples,,,,0,,,,,,"fabric-ca sample fails with new fabric-ca code:

 

Error: Response from server: Error Code: 45 - Failed to verify if user can act on type 'client': : scode: 401, local code: 42, local msg: 'admin-org1' is not a registrar, remote code: 20, remote msg: Authorization failure",,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysbr:",,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Jan/18 5:43 AM;aambati;https://gerrit.hyperledger.org/r/c/16557/;;;",,,,,,,,,,,,,,,,,,,,,,
Private data - Local collections,FAB-7593,26350,,Epic,To Do,FAB,Fabric,software,denyeart,,,High,,frog86,mne,mne,04/Jan/18 4:26 AM,08/Aug/20 8:07 PM,28/Oct/23 3:02 AM,,,,,Future,,,fabric-crypto,,,,15,,,,,,"The current approach to private data leaks information about who’s doing business with whom. Collection configuration (--FAB-6212--) is stored on the ledger (detailing which groups of entities are planning to conduct private business together). Furthermore, every private write reveals the collection name, and hence, the set of organizations that are party to that transaction.

This item supports stronger confidentiality properties by shifting the private data dissemination responsibility to the client. A client would choose which organization's peers should receive the private data, without having to leak the collection membership in the transaction's read/write set.",,angelo.decaro,baohua,BartVandenberghe,cagdast,elainejlai,elli-androulaki,frog86,geahaad,grapebaba,isaacwch,Jan_Rzepecki,jmason900,mbwhite,mffrench,mne,n-horiguchi,pdina,SjirNijssen,spipes,TommyStarK,troyronda,varuntejay,yacovm,ycarmel,zhaochy,,,,,,,,,,,,,,,,,,,FAB-10889,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"https://docs.google.com/document/d/1qOAnEudmvxJ3D6cbyKfd6KGuJtlv4w72LH-DqK6QIKc/edit

See charts attached to FAB-8812 for more information on collection types.",Unset,,Unset,,,Private data - Local collections,,,,Unset,,,,"1|hzwsz3:",,,,Unset,Unset,Sprint 6 - NextGen Endorsement,,,,,,,,,,,,,,,angelo.decaro,baohua,BartVandenberghe,cagdast,elainejlai,elli-androulaki,frog86,geahaad,grapebaba,isaacwch,Jan_Rzepecki,jmason900,mbwhite,mffrench,mne,n-horiguchi,pdina,SjirNijssen,spipes,TommyStarK,troyronda,varuntejay,yacovm,ycarmel,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 4:32 AM;elli-androulaki;+1.

Inviting [~mastersingh24], [~denyeart],[~yacovm], [~C0rWin], [~manish-sethi] to have your view.

Copying [~ales], [~angelo.decaro].;;;","04/Jan/18 6:28 AM;yacovm;I'm OK with this as long as the following 2 conditions hold:
* Validation of a transaction remains deterministic as it is now.
* After validation, when the gossip private data code decides whether it should pull a preimage of a hashed RWSet that is associated with a local collection, it has a way of knowing if there is no peer in its organization, that the transaction was simulated on. 

The 2nd condition is in order for peers that can't get the private data not to try to blindly pull from all peers of the organization. It can be easily implemented if we have a custom ESCC (and we have to have a custom ESCC anyway for idemix signatures) that has a secret long random key known only to the org, and the endorsement proto is extended to contain a hash of that key concatenated with the hash of the RWSet. Each peer can easily compute this value over all endorsements, and if there is 1 endorsement that matches - it knows its org was one of the endorsers. Else, its org was not one of the endorsers , and then it can't guess which orgs have endorsed it because it lacks the key(s).;;;","05/Jan/18 6:05 PM;angelo.decaro;Having this common secret is annoying because then we have to take care of it is entire lifecycles and all the implications related to its leakage. I would better prefer that a peer never pulls. Not sure though if this is inline with the requirements.;;;","05/Jan/18 6:30 PM;mne;I had a discussion with [~yacovm] on this yesterday - I'll summarize here:
There's two ways in which gossip (currently) determines which peers to pull preimages from: (1) peers that are endorsers of the transaction or (2) peers that match the collection access filter.
In case of a custom ESCC/VSCC using e.g. idemix, gossip will only use (2) as it does not know the endorsers of the transaction - everything is fine in this case.
For the ""regular"" case without a custom ESCC/VSCC gossip would need to be changed to honor local collections s.t. it does not pull preimages cross-org based on (1), but only from within the org.

Yacov, please comment/correct if I wrote something wrong.

 ;;;","05/Jan/18 7:06 PM;yacovm;You're correct. However - what is the point of having a local collection without the anonymity? 

[~adc] - Not pulling is a problem, of course.
If the peer was down at endorsement it will not get the data, and also if it was not the endorser of the transaction but is still in the collection, it might not get the data because we only select random K peers to send to, and K can be less than the total peers in the collection.;;;",,,,,,,,,,,,,,,,,,
[CI] - add destroy script to destroy the VM's after build,FAB-7594,26358,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,04/Jan/18 11:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Jan/18 11:33 PM,,,,,,,fabric-ci,,,,0,,,,,,Add destroy script to shutdown the VM's after complete the build process.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyscf:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 11:33 PM;rameshthoomu;patch has been updated and merged.;;;",,,,,,,,,,,,,,,,,,,,,,
Wait for statedb update before returning block,FAB-7595,26359,26340,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,04/Jan/18 2:24 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Jan/18 12:36 AM,,,,,,,fabric-ledger,,,,0,,,,,,"In absence of synchronization between block retrieval and state db updates, a client may get a block commit event but he may still get old state values when the client immediately accesses the state.",,manish-sethi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyscn:",,,,,,,,,,,,,,,,,,,,,manish-sethi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jan/18 12:36 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16563/;;;",,,,,,,,,,,,,,,,,,,,,,
Create fabsdk entry point,FAB-7598,26401,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,04/Jan/18 11:50 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,15/Feb/18 12:57 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"The def/fabapi package currently has two responsibilities instead of one.

1) Creates default factories
 2) Contains the SDK code that creates instances from the factories

The SDK code (2) should be a standalone package (like pkg/fabsdk); and def/fabapi simply injects its factories into that impl (1). This allows other curated package factories to exist under def (e.g., a default that uses a PKCS11 cryptosuite, for example) vs the current default that limits itself to sw.

Currently you couldn't do this properly since def/fabapi actually contain the SDK code... which ironically defeats the idea of a default directory.

The README should be updated to give SDK users guidance on what these two packages are for (and to start there). The GoDocs should also direct users to these packages and be fleshed out better for these two packages, in particular.

On a related (but separate) topic, individual clients should be created from their own packages with appropriate support from the SDK package (rather than the SDK containing constructors for each). 

 ",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzuf:",,,,Unset,,,,,,Unset,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean up CouchDB index review comments,FAB-7600,26403,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,05/Jan/18 12:26 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,10/May/18 11:23 PM,,,,,,,,,,,0,,,,,,Additional comments were made during review and need to be addressed.  See CR for details.,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysdb:",,,,Unset,,,,,,Unset,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/18 6:11 AM;denyeart;Not needed for 1.1 alpha release.;;;","15/Jan/18 6:12 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16581/;;;",,,,,,,,,,,,,,,,,,,,,
Idemix - Policy framework support for anonymous identities,FAB-7601,26404,,Epic,In Progress,FAB,Fabric,software,denyeart,,,Medium,,mathiasb303,elli-androulaki,elli-androulaki,05/Jan/18 2:20 AM,04/Dec/19 1:51 AM,28/Oct/23 3:02 AM,,,,,,,,fabric-crypto,,,,2,,,,,,"This was discussed with [~angelo.decaro], [~mathiasb303], [~dubovitskaya], [~mdr], [~jyellick], [~keithsmith].

 

*Motivation*

In Fabric v1.0 we only dealt with enrollment identities that include in the clear information about their owner. However in v1.1 we support Identity Mixer MSP, that offers anonymous identities.

Currently, anonymous and enrollment identities are treated in the same way during policy evaluation, that may be problematic for policies that require consensus from t distinct clients, where t>2.

More specifically, it can be possible for a malicious client to sign a given (reconfiguration) request with two or more anonymous identities of its, and manage in this way to have such a policy satisfied erroneously by himself.

 

Making clear that by the properties of anonymous identities, their owner is hidden among all the owners of identities in that MSP, we should be able to specify policies that exclude anonymous identities, or specifically require enrollment identities to be satisfied.

 

 

*Solution*

The proposed solution consists of four components (each is reflected to a different sub-task of this epic):
 * Extension of MSPPrincipal to indicate anonymous identities
 * Extension of MSPPrincipal to include the definition of a CombinedPrincipal, i.e., a list of MSPPrincipals
 * Update of the implementation of SatisfiesPrincipal for the X.509 based MSP to account for the extended version of MSPPrincipal
 * Update of the implementation of SatisfiesPrincipal for the IdeMix MSP to account for the extended version of the MSPPrincipal",,daijianw,denyeart,elli-androulaki,isaacwch,mastersingh24,SjirNijssen,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Required,,,Idemix - Policy framework support for anonymous identities,,,,Required,,,,"1|hzyctz:",,,,Unset,Unset,,,,,,,,,,,,,,,,daijianw,denyeart,elli-androulaki,isaacwch,mastersingh24,SjirNijssen,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 7:18 PM;mastersingh24;Marking as future / 1.2;;;","01/Aug/18 9:20 PM;denyeart;Per [~elli-androulaki], this should be deferred until dual x509/Idemix is supported, deferring to v1.4.0.;;;",,,,,,,,,,,,,,,,,,,,,
Peer deliver service is unusable when block event policy has not been defined,FAB-7604,26501,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,wlahti,wlahti,05/Jan/18 4:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Jan/18 12:34 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"After FAB-7521, the peer deliver service is unusable because the BLOCKEVENT policy is not set by default. 
{code:java}
peer0.org1.example.com | 2018-01-04 16:03:34.426 UTC [common/peer] Deliver -> DEBU d6a Starting new Deliver handler
peer0.org1.example.com | 2018-01-04 16:03:34.426 UTC [common/deliver] Handle -> DEBU d6b Starting new deliver loop for 172.18.0.1:51762
peer0.org1.example.com | 2018-01-04 16:03:34.426 UTC [common/deliver] Handle -> DEBU d6c Attempting to read seek info message from 172.18.0.1:51762
peer0.org1.example.com | 2018-01-04 16:03:34.427 UTC [policies] GetPolicy -> ERRO d6d Returning dummy reject all policy because no policy ID supplied
peer0.org1.example.com | 2018-01-04 16:03:34.427 UTC [common/deliver] deliverBlocks -> WARN d6e [channel: mychannel] Received unauthorized deliver request from 172.18.0.1:51762: could not find policy{code}
The peer should use the aclmgmt package, which will check for the policy and, if not set, use the default value (in this case, channel readers). 

FAB-7521 modified the BDD tests for peer deliver so that they would pass instead of addressing why they were failing in the first place. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysdz:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jan/18 9:35 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16587/;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-merge-behave-x86_64 failed due to 403 error in chaincode go,FAB-7605,26502,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,05/Jan/18 4:23 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,05/Jan/18 10:01 AM,,,,,,,fabric-ci,,,,0,ci-failure,,,,,"fabric-merge-behave-x86_64 failed as there might an access error(403) in env,
------------------------------------------------------------------------------------------
Got error: 403
12:35:25       Start and end = 0/0
12:35:25       
12:35:25       Got error: 403
12:35:25       ccSpec = type: GOLANG
12:35:25       chaincode_id {
12:35:25         path: ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02""
12:35:25         name: ""example02""
12:35:25         version: ""test""
----------------------------------------------------------------------------------------------
*Build Log*

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-behave-x86_64/2001/console


",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyse7:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Envelope based valid. to RSCC/defaultACL,FAB-7607,26603,26501,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,05/Jan/18 8:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Jan/18 12:34 AM,,,,,,,fabric-peer,,,,0,,,,,,Extend RSCC's policy support to extract identity information from SignedEvent for doing CheckACL on it.  Currently RSCC supports only SignedProposal.,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysfb:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jan/18 9:34 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/15183/;;;",,,,,,,,,,,,,,,,,,,,,,
Enhance the chaincode documentation with importing vendor pkg,FAB-7608,26604,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,05/Jan/18 11:32 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,17/Jan/18 9:46 AM,,,,,,,fabric-docs,,,,0,Documentation,,,,,"Fabric supports vendor pkg in chaincode now.

Suggested by [~denyeart]:

We will add some notes on vendoring steps in [https://hyperledger-fabric.readthedocs.io/en/release/chaincode4ade.html#housekeeping].",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5663,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysfj:",,,,Unset,,,,,,Unset,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jan/18 11:33 AM;baohua;Welcome everyone for suggestions.

[~denyeart], [~muralisr];;;","05/Jan/18 2:34 PM;baohua;https://gerrit.hyperledger.org/r/#/c/16591/;;;",,,,,,,,,,,,,,,,,,,,,
Print orderer parameters during boot time,FAB-7610,26606,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,guoger,guoger,guoger,05/Jan/18 5:02 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,11/Jan/18 1:57 AM,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,It makes life easier for Fabric operators if orderer parameters are printed at boot time,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysfz:",,,,Unset,,,,,,Unset,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jan/18 5:50 PM;guoger;https://gerrit.hyperledger.org/r/#/c/16653/;;;",,,,,,,,,,,,,,,,,,,,,,
Extension of MSPPrincipal proto to consider identity anonymity property,FAB-7612,26609,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,05/Jan/18 10:03 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,17/May/18 4:10 AM,,,,v1.2.0,,,fabric-crypto,,,,0,,,,,,"Identity Mixer supports anonymous identities. Therefore, a way to tell apart anonymous MSP identities from nominal needs to be introduced. 

In order to do so, the following method is introduced in the MSP Identity interface:

{code:java}
	// Anonymous returns true if this is an anonymous identity, false otherwise
	Anonymous() bool
{code}

The x509-based MSP Identities will always be nominal.

In order to allow the policy framework to reason about the anonymity of an identity, a new MSP Principal classification is introduced as follows:

{code:java}
    enum Classification {
        ROLE = 0;  // Represents the one of the dedicated MSP roles, the
        // one of a member of MSP network, and the one of an
        // administrator of an MSP network
        ORGANIZATION_UNIT = 1; // Denotes a finer grained (affiliation-based)
        // groupping of entities, per MSP affiliation
        // E.g., this can well be represented by an MSP's
        // Organization unit
        IDENTITY  = 2;    // Denotes a principal that consists of a single
        // identity       
        ANONYMITY = 3; // Denotes a principal that can be used to enforce an identity to be anonymous or nominal.
    }
{code}

When the ANONYMITY classification is used, the MSPPrincipal#Principal must be the serialisation of the following protobuf message:
{code:java}
// MSPIdentityAnonymity can be used to enforce an identity to be anonymous or nominal.
message MSPIdentityAnonymity {

    enum MSPIdentityAnonymityType {
        NOMINAL = 0; // Represents a nominal MSP Identity
        ANONYMOUS = 1; // Represents an anonymous MSP Identity
    }

    MSPIdentityAnonymityType anonymityType = 1;

}
{code}
",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-7601,,,,,,,,,"1|hzwqfj:5",,,,Unset,,May2018 - Security,To Do,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Apr/18 11:10 PM;elli-androulaki;Related CR: https://gerrit.hyperledger.org/r/#/c/16693/;;;",,,,,,,,,,,,,,,,,,,,,,
Extension of MSPPrincipal proto to consider a combination of principals,FAB-7613,26610,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,05/Jan/18 10:12 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,17/May/18 4:15 AM,,,,v1.2.0,,,fabric-crypto,,,,0,,,,,,"MSPPrincipal proto message as defined in the previous task is extended to include an additional classification type, e.g.,
{code:java}
// message MSPPrincipal {

 

  enum Classification {

      ROLE = 0;  // Represents the one of the dedicated MSP roles, the

      // one of a member of MSP network, and the one of an

      // administrator of an MSP network

      PROPERTY = 1; // Denotes a finer grained (property-based)

      // groupping of entities, per MSP affiliation

      // E.g., this can well be represented by an MSP's

      // Organization unit

      IDENTITY  = 2;    // Denotes a principal that consists of a single

      // identity

      COMBINED = 3; // Denotes a combined principal

  }

 

  // Classification describes the way that one should process

  // Principal. An Classification value of ""ByOrganizationUnit"" reflects

  // that ""Principal"" contains the name of an organization this MSP

  // handles. A Classification value ""ByIdentity"" means that

  // ""Principal"" contains a specific identity. Default value

  // denotes that Principal contains one of the groups by

  // default supported by all MSPs (""admin"" or ""member"").

  Classification principal_classification = 1;

 

  // Principal completes the policy principal definition. For the default

  // principal types, Principal can be either ""Admin"" or ""Member"".

  // For the ByOrganizationUnit/ByIdentity values of Classification,

  // PolicyPrincipal acquires its value from an organization unit or

  // identity, respectively.

  bytes principal = 2;

}
{code}
 

 

Where classification “COMBINED” would lead principal to be deserialised as an array of principals.
{code:java}
// CombinedPrincipal governs the organization of the Principal

// field of a policy principal when principal_classification has

// indicated that a combined form of principals is required

message CombinedPrincipal {

 

  // Principals refer to combined principals

  repeated MSPPrincipals principals = 1;

}
{code}
 ",,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-7601,,,,,,,,,"1|hzwqfj:6",,,,Unset,,May2018 - Security,To Do,,,Unset,,,,,,,,,,,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/18 6:29 AM;mathiasb303;CR: https://gerrit.hyperledger.org/r/16655;;;",,,,,,,,,,,,,,,,,,,,,,
"X.509 MSP is updated to handle anonymity-specific, and combined MSP Principal",FAB-7614,26611,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,05/Jan/18 10:13 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,31/May/18 3:15 AM,,,,v1.2.0,,,fabric-crypto,,,,0,,,,,,"For the X.509 MSP all identities are enrollment ones, therefore handling in SatisfiesPrincipal the anonymity principal is straight forward. The functionality for handling anonymity-specific and combined MSP principals is added to the X.509 MSP for v1.2, but the functionality is hidden behind a channel capability that will not be introduced until v1.3.",,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10383,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-7601,,,,,,,,,"1|hzwqfj:7",,,,Unset,,May2018 - Security,To Do,,,Unset,,,,,,,,,,,elli-androulaki,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/18 6:27 AM;mathiasb303;CR: https://gerrit.hyperledger.org/r/16675;;;",,,,,,,,,,,,,,,,,,,,,,
Idemix MSP is updated to handle anonymity and combined MSP Principal ,FAB-7615,26612,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,elli-androulaki,elli-androulaki,05/Jan/18 10:15 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,31/May/18 9:22 PM,,,,v1.2.0,,,fabric-crypto,,,,0,idemix,,,,,"SatisfiesPrincipal implementation of this MSP needs to handle the new types of MSP Principal, the one referring to the anonymous nature of the identity, and of combined principals.",,elli-androulaki,JonathanLevi,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-7601,,,,,,,,,"1|hzwqfj:8",,,,Unset,,May2018 - Security,To Do,,,Unset,,,,,,,,,,,elli-androulaki,JonathanLevi,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Mar/18 4:47 PM;mdr;CR: https://gerrit.hyperledger.org/r/#/c/16775/;;;","28/May/18 11:57 PM;mdr;Reopened because this functionality needs to be hidden in MSPv1_1.
https://gerrit.hyperledger.org/r/#/c/22433/;;;","31/May/18 1:11 AM;JonathanLevi;Fair enough [~mdr]. Merged. Close if you feel that this is done?;;;","31/May/18 9:23 PM;JonathanLevi;Thanks Elli;;;",,,,,,,,,,,,,,,,,,,
Extend the identity deduplication mechanism performed prior to policy evaluation to ownership deduplication,FAB-7616,26613,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,ales,elli-androulaki,elli-androulaki,05/Jan/18 10:19 PM,20/Aug/19 1:00 PM,28/Oct/23 3:02 AM,,,,,Future,,,fabric-crypto,,,,0,,,,,,"*Motiva**tion*

In Fabric v1.0 only one enrollment identity was allowed per user. However there are two legitimate reasons for which in V1.1 it is possible that a user has two valid enrolment identities.

In particular, Fabric CA currently allows that a user obtains more than one enrollment identities to serve two purposes:
 # Allow the user to renew its identity without compromising the availability of the service itself; especially for the latter purpose, there is a period of time during which both identities are valid
 # Allow the user to issue enrollment identities with different attributes in them; this means that a user would obtain one or more enrollment identities each time a proof of ownership of different sets of attributes is needed.

 

Policies often include requests for signatures of t or more parties that satisfy certain criteria, where t>1. Given currently deduplication takes place statically prior to policy evaluation and at the level of identity. This means that a user with two different enrollment identities could still vote twice towards a policy’s evaluation.

 

*Solution*

The proposed solutions consists of two parts:
 * Expose an identifier of an identity’s owner in the identity interface (FAB-7278); this identifier needs to have the following properties:
 ** all enrollment identities of the same user are required to return identical owner identifiers
 ** anonymous identities are only required to return as “owner identifier” a string that is deterministically generated by the identity itself; no other requirement exists for owner identifier of anonymous identities

 * Enhance the deduplication method mentioned above to maintain at most one valid identity of each user appearing in the owners of the identities passed as input at policy evaluation time.

 

 The latter part is the goal of this JIRA. Regarding this task, deduplication at the identity level (not of their owner) is already done statically, but around a signature set (which would change as policies are moved to evaluate over identities instead of signatures): https://github.com/hyperledger/fabric/blob/master/common/cauthdsl/cauthdsl.go#L23-L43

 

In this JIRA we extend this function to keep only one identity of each user met in the set of identity owners.

 ",,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysgf:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/18 4:54 AM;Clayton Sims;Dependent on 7278 which is now deferred.   Do deferring this one.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;",,,,,,,,,,,,,,,,,,,,,
Document security assumptions associated to the chaincode lifecycle,FAB-7617,26614,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,05/Jan/18 10:41 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,14/Mar/18 8:40 PM,,,,,,,fabric-crypto,fabric-docs,fabric-peer,,0,Documentation,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyr0f:",,,,Unset,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/18 6:06 PM;elli-androulaki;https://docs.google.com/document/d/1OHkWJySLlPf60x2QSKYQlbazTTItHO0Lr-yMx1DV4Zs/edit?usp=sharing;;;",,,,,,,,,,,,,,,,,,,,,,
Split fabsdk from fabapi into new pkg,FAB-7618,26623,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,06/Jan/18 1:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Jan/18 10:01 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,https://gerrit.hyperledger.org/r/c/16601/,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysi7:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Conditional based downstream jobs,FAB-7621,26627,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jan/18 4:16 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Jan/18 11:27 PM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"trigger downstream jobs based on the conditions specified in the upstream job. This approach should trigger downstream jobs based on the condition specified like below
If the change is WIP, then ignore the build else

change is doc change, trigger only documentation build job else

change is not related to the above changes, trigger fabric build smoke (byfn) job which triggers behave tests and unit-tests CI jobs.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysj3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 11:27 PM;rameshthoomu;Patch has been merged. now the upstream and downstream jobs works as expected with the conditional steps.;;;",,,,,,,,,,,,,,,,,,,,,,
Update tests to use fabsdk.New,FAB-7622,26628,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,06/Jan/18 4:17 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Jan/18 3:27 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysjb:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Make channel client options generic,FAB-7623,26629,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,06/Jan/18 4:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 6:13 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,Related functions need to be rehomed from https://gerrit.hyperledger.org/r/c/16601/3/pkg/fabsdk/fixme.go,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysjj:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
[ci] - update postbuild step in fabric-multihost CI job,FAB-7624,26630,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jan/18 4:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Jan/18 11:27 PM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,Existing multi-host CI job configuration is publishing xml results to jenkins. This configuration has been added my mistake in the multihost CI job. Submit a change to remove this publisher from the fabric-multihost-tests-x86_64 CI job.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysjr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 11:27 PM;rameshthoomu;this has been fixed and job configuration has been updated;;;",,,,,,,,,,,,,,,,,,,,,,
Make system objects generic,FAB-7625,26631,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,06/Jan/18 4:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Jan/18 9:06 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,Related functions need to be rehomed from https://gerrit.hyperledger.org/r/c/16601/3/pkg/fabsdk/fixme.go,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysjz:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"performance test: 16 threads, 8 ch",FAB-7627,26633,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,06/Jan/18 6:32 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,v1.1.0,,,,,,,0,SystemTestcase,,,,,"Test name: Performance test: transaction events, 8 channels
 Component: Performance test
 Description: performance events per channel with levelDB
     chaincode: each channel has one chancode, sample_cc, instantiated
     transactions: 16 threads, each thread sends 10000 invokes concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

         thread 5 sends to org1 peer1 on channel 3, registers events for channel3
          thread 6 sends to org2 peer1 on channel 3, registers events for channel3
          thread 7 sends to org1 peer1 on channel 4, registers events for channel4
          thread 8 sends to org2 peer1 on channel 4, registers events for channel4

         thread 9 sends to org1 peer1 on channel 5, registers events for channel5
          thread 10 sends to org2 peer1 on channel 5, registers events for channel5
          thread 11 sends to org1 peer1 on channel 6, registers events for channel6
          thread 12 sends to org2 peer1 on channel 6, registers events for channel6

         thread 13 sends to org1 peer1 on channel 7, registers events for channel7
          thread 14 sends to org2 peer1 on channel 7, registers events for channel7
          thread 15 sends to org1 peer1 on channel 8, registers events for channel8
          thread 16 sends to org2 peer1 on channel 8, registers events for channel8

Network Topology: docker containers; 8 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyskf:",,,,,,,,,,,,,,,,,,,,,dongming,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,,,,,,,true,"26/Jan/18 12:15 PM;scottz;https://gerrit.hyperledger.org/r/#/c/17061/;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,
Tests inadvertently (?) excluded from build,FAB-7629,26636,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,06/Jan/18 10:40 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Mar/18 3:27 AM,,,,,,,fabric-build,fabric-ci,,,0,chaincode,hygiene,,,,"unitest/run.sh excludes `/test` from the build packages. [1]

While the regex was probably intended to cover `github.com/hyperledger/fabric/test/...`, it also excluded `github.com/hyperledger/fabric/core/chaincode/platforms/car/test` and `github.com/hyperledger/fabric/core/chaincode/platforms/java/test`.

When the regex is fixed to only exclude `fabric/test/...`, the tests in `chaincode/platforms/car/test` fail.

{noformat}
 TEST_PKGS=github.com/hyperledger/fabric/core/chaincode/platforms/car/test make unit-test
cd unit-test && docker-compose down
The JOB_TYPE variable is not set. Defaulting to a blank string.
Removing unittest_unit-tests_1 ... 
Removing unittest_unit-tests_1 ... done
Removing unittest_vp_1         ... done
Removing couchdb               ... done
# github.com/hyperledger/fabric/peer
/tmp/go-link-025085691/000001.o: In function `pluginOpen':
/tmp/workdir/go/src/plugin/plugin_dlopen.go:19: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-025085691/000000.o: In function `_cgo_b0c710f30cfd_C2func_getaddrinfo':
/tmp/go-build/net/_obj/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
mkdir -p build/image/peer/payload
cp build/docker/bin/peer build/sampleconfig.tar.bz2 build/image/peer/payload
Creating build/goshim.tar.bz2
mkdir -p build/image/ccenv/payload
cp build/docker/gotools/bin/protoc-gen-go build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
Building build/docker/bin/orderer
# github.com/hyperledger/fabric/common/deliver
common/deliver/deliver.go:29:2: can't find import: ""github.com/hyperledger/fabric/protos/common""
make: *** [build/docker/bin/orderer] Error 2
{noformat}

In summary, the regex in `unit-test/run.sh` needs to be updated and the `chaincode/platforms/car` test needs to be fixed.

[1]: https://github.com/hyperledger/fabric/blob/90b92697e0698af0ba2ca6e7aadf0cdbb27623ad/unit-test/run.sh#L66",,greg.haskins,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwsrr:",,,,,,,,,,,,,,,,,,,,,greg.haskins,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Mar/18 9:02 PM;sykesm;This is one of the few remaining issues preventing {{go test ./...}} from running in the tree.;;;","21/Mar/18 10:15 PM;sykesm;Created a new chaincode archive fixture to make the test pass.;;;","21/Mar/18 11:14 PM;sykesm;https://gerrit.hyperledger.org/r/c/19527/;;;",,,,,,,,,,,,,,,,,,,,
`peer channel join` and `peer channel list` options regarding --tls and --cafile are misleading,FAB-7630,26637,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mastersingh24,vdods,vdods,06/Jan/18 3:46 PM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,,,,,,,fabric-peer,,,,0,stale-item,,,,,"The CLI command `peer channel create` honors the --tls and --cafile options as expected, and uses a TLS connection with the given CA file to the orderer for channel creation.  However, `peer channel join` and `peer channel list` do not honor the --tls and --cafile options, always attempting to make an insecure connection with the peer.

However, if one specifies the CORE_PEER_TLS_ENABLED=true and CORE_PEER_TLS_ROOTCERT_FILE=path/to/cert.pem environment variables, it does work.

Upon closer inspection, --tls and --cafile only specify the TLS settings for the orderer endpoint, not the peer endpoint.  This asymmetry (commandline options vs env vars) is confusing, probably stemming from the fact that the `peer channel join` and `peer channel list` don't even require an orderer endpoint, so the --tls and --cafile options are useless for those subcommands.

I'd suggest that at the very least, the --tls and --cafile options be moved to only the `peer channel create` and `peer channel update` commands.  Better yet, change --tls and --cafile to something that indicates they're for the orderer; --orderer-tls and --orderer-cafile.  Then also add commandline options for specifying the TLS settings for the peer connection; perhaps --peer-tls and --peer-cafile.

I think part of why this confusion occurred is because the line between the peer acting as a server (i.e. `peer node`) and the peer acting as a client (i.e. `peer channel`) is blurred and makes configuring and using the peer binary very confusing.  This is another argument for fully separating the peer binary into peer-client and peer-server, similar to the architecture of fabric-ca with its fabric-ca-client and fabric-ca-server.

I request that this fix, if made, be also added to the 1.0.x branch.

 ",,sykesm,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyskn:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Block expired x509 identities in deliver,FAB-7631,26638,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,06/Jan/18 9:07 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,08/Jan/18 7:32 AM,,,,v1.1.0,v1.1.0-alpha,,,,,,1,,,,,,,,JonathanLevi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyskv:",,,,Unset,,,,,,Unset,,,,,,,,,,,JonathanLevi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Block expired x509 identities in endorsement,FAB-7632,26639,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,06/Jan/18 10:37 PM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,08/Jan/18 7:32 AM,,,,v1.1.0,v1.1.0-alpha,,,,,,0,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysl3:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Cleanup dead comm code,FAB-7633,26640,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,06/Jan/18 11:25 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Jan/18 11:14 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"FAB-7490 refactored the peer CLI code to use the comm.GRPCClient.
We can now remove any gRPC connection functions as they are no longer used.
We can also remove the InitTLSPeer function and update a few tests which include the function but the code path is never executed.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyslb:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jan/18 11:58 PM;mastersingh24;https://gerrit.hyperledger.org/r/16621;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - fix configuration errors in fabric-build-checks CI job,FAB-7634,26641,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jan/18 11:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Jan/18 11:01 AM,,,,,,,fabric-ci,,,,0,,,,,,fix configuration errors in fabric-build-checks CI job. verify-commit-check shell script is not working as expected.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyslj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 11:39 PM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/16647/] patch has been updated and it's in review;;;",,,,,,,,,,,,,,,,,,,,,,
optimize the unit testing ,FAB-7635,26642,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,07/Jan/18 2:21 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,07/Jan/18 11:23 PM,v1.1.0-preview,,,v1.1.0,,,fabric-build,,,,0,,,,,,"the unit tests are run serially in an inefficient manner. coverprofile is rarely used, so until we get to go 1.10 remove the coverprofile report from the unit-test target and run all the packages in the same go test command execution.

Add a PROFILE value for JOB_TYPE env variable to enable coverprofile report to be generated.

Resulting improvements cut the unit-test time nearly in half.",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyslr:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
vp container and related configuration appear to be dead,FAB-7636,26643,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,rameshthoomu,sykesm,sykesm,07/Jan/18 2:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Jan/18 11:48 PM,,,,,,,fabric-build,fabric-ci,,,0,,,,,,"`UNIT_TEST_PEER_IP` is only referenced in `core/comm/connection.go#GetPeerTestingAddress`. That code does not appear to be referenced anywhere else in the code base.

Assuming that code is dead, we should remove it and clean up the related docker-compose artifacts used by the unit-test target.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyslz:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Block expired x509 identities in broadcast,FAB-7638,26645,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,07/Jan/18 7:34 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,09/Jan/18 6:49 AM,,,,,,,fabric-orderer,,,,0,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysmf:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Block expired x509 identities in legacy events,FAB-7639,26646,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,07/Jan/18 8:16 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,08/Jan/18 7:32 AM,,,,,,,fabric-peer,,,,0,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysmn:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Block expired x509 identities from entering gossip identity store,FAB-7640,26648,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Jan/18 2:08 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,08/Jan/18 7:32 AM,,,,,,,fabric-gossip,,,,0,,,,,,"Although gossip auto-purges identities from its identity store right after they expire, it makes more semantic sense for the identity store not to accept expired identities in the first place. 
",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysn3:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jan/18 2:19 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16641/;;;",,,,,,,,,,,,,,,,,,,,,,
Peer panics when pulling private data,FAB-7641,26649,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,bstasyszyn,bstasyszyn,08/Jan/18 2:54 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Jan/18 12:08 AM,,,,,,,fabric-gossip,,,,0,gossip,,,,,"I'm testing in a configuration composed of 4 MSPs, 1 peer per MSP for a total of 4 peers, and 2 (Kafka) orderers. Two chaincodes make use of private data:

CC#1 - contains 3 private data collections (fmpconfig,fmpstatus,fmpmsg), each with the following config:
- RequiredPeerCount=1
- MaximumPeerCount=2
- Policy includes all 4 MSPs


CC#2 - contains 1 private data collection (quotes), with the following config:
- RequiredPeerCount=3
- MaximumPeerCount=5
- Policy includes all 4 MSPs

I'm sending 20 concurrent requests which write/read private data. Every time I run my test I see at least one peer panic:

peer0.org2.com    | 2018-01-06 22:39:05.634 UTC [gossip/privdata] func1 -> DEBU 2e78 Returning 172.18.0.13:44692 0 elements
peer0.org2.com    | panic: runtime error: invalid memory address or nil pointer dereference
peer0.org2.com    | [signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x10cf332]
peer0.org2.com    | 
peer0.org2.com    | goroutine 352 [running]:
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*dataRetriever).CollectionRWSet(0xc4228dc1e0, 0xc422b0ab00, 0x0, 0x0, 0x0)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/dataretriever.go:93 +0xfa2
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*puller).createResponse(0xc4228ad620, 0x1afbd40, 0xc4227482d0, 0x0, 0x0, 0x0)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:162 +0x739
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*puller).handleRequest(0xc4228ad620, 0x1afbd40, 0xc4227482d0)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:122 +0x20b
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*puller).listen(0xc4228ad620)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:108 +0x1dc
peer0.org2.com    | created by github.com/hyperledger/fabric/gossip/privdata.NewPuller
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:89 +0x228
peer0.org2.com exited with code 2

Attached are the logs from two peers that panic'd during one of my test runs.
 ",,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 2:56 AM;bstasyszyn;peer0.org1.log;https://jira.hyperledger.org/secure/attachment/14110/peer0.org1.log","08/Jan/18 2:56 AM;bstasyszyn;peer0.org2.log;https://jira.hyperledger.org/secure/attachment/14111/peer0.org2.log",,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,"1|hzysnb:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jan/18 7:24 AM;yacovm;May you please check? https://gerrit.hyperledger.org/r/#/c/16643/;;;",,,,,,,,,,,,,,,,,,,,,,
Allow upgrade of collection policy,FAB-7643,26651,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,08/Jan/18 5:42 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,10/Jan/18 2:28 AM,,,,,,,fabric-peer,,,,0,,,,,,"LSCC should allow upgrade of collection policy.

Currently lscc.go has the following comment at ([https://github.com/hyperledger/fabric/blob/master/core/scc/lscc/lscc.go#L191):] currently, collections are immutable. Support for collection upgrade will be added later",,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5096,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzysnr:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 2:27 AM;denyeart;[~troyronda]

Lifecycle enhancements are being investigated for 1.2, and as part of that the intent is to be able to update collection configuration.  Support for updating collection configuration is being tracked in the Side DB future (post-1.1) work item epic, see FAB-5108 / FAB-5096. 

I will close this item as a Dup of FAB-5096.;;;",,,,,,,,,,,,,,,,,,,,,,
Generalize deliver API handler,FAB-7644,26652,25112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,08/Jan/18 9:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Jan/18 1:53 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Currently the implementation of {{Deliver}} API of {{AtomicBroadcast}} service implemented by means of 

{code}
// Handler defines an interface which handles Deliver requests
type Handler interface {
	Handle(srv ab.AtomicBroadcast_DeliverServer) error
}
{code}

defined in [`deliver.go`|https://github.com/hyperledger/fabric/blob/master/common/deliver/deliver.go#L48]

{code}
// Handler defines an interface which handles Deliver requests
type Handler interface {
	Handle(srv ab.AtomicBroadcast_DeliverServer) error
}
{code}

which is specific to {{ab.AtomicBroadcast_DeliverServer}}, while required functionality is:

{code}
	Send(*DeliverResponse) error
	Recv() (*common.Envelope, error)
{code}

where 

{code}
	Send(*DeliverResponse) error
{code}

specific to the definitions of `ab.proto`, e.g.:

{code}
message DeliverResponse {
    oneof Type {
        common.Status status = 1;
        common.Block block = 2;
    }
}
{code}

The above could be abstracted such that it won't be specific to the `ab.proto` definitions and as a consequence would be abstract enough and generalized in way that will enable reuse in peer code.  It's possible to define general interface that will encapsulate required functionality

{code}
type DeliverSupport interface {
	Recv() (*cb.Envelope, error)
	Context() context.Context
	CreateStatusReply(status cb.Status) proto.Message
	CreateBlockReply(block *cb.Block) proto.Message
}
{code}

proposed interface is general enough and would be possible to reuse for service interface defined for different package.",,C0rWin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysnz:",,,,,,,,,,,,,,,,,,,,,C0rWin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jan/18 9:06 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/16569/;;;",,,,,,,,,,,,,,,,,,,,,,
Unknown chaincodeType: NODE,FAB-7645,26654,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,lehors,finalight,finalight,08/Jan/18 6:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 11:58 PM,,,,Not a Bug,,,fabric-samples,,,,0,,,,,,"When i try to execute ```./startfabric.sh node```, the following error is produced

 

```

 

# don't rewrite paths for Windows Git Bash users

export MSYS_NO_PATHCONV=1

 

docker-compose -f docker-compose.yml down

Stopping cli                    ... done

Stopping peer0.org1.example.com ... done

Stopping couchdb                ... done

Stopping orderer.example.com    ... done

Stopping ca.example.com         ... done

Removing cli                    ... done

Removing peer0.org1.example.com ... done

Removing couchdb                ... done

Removing orderer.example.com    ... done

Removing ca.example.com         ... done

Removing network net_basic

 

docker-compose -f docker-compose.yml up -d ca.example.com orderer.example.com peer0.org1.example.com couchdb

Creating couchdb ... done

Creating peer0.org1.example.com ... done

Creating orderer.example.com ... 

Creating couchdb ... 

Creating peer0.org1.example.com ... 

 

# wait for Hyperledger Fabric to start

# incase of errors when running later commands, issue export FABRIC_START_TIMEOUT=<larger number>

export FABRIC_START_TIMEOUT=10

#echo $\{FABRIC_START_TIMEOUT}

sleep $\{FABRIC_START_TIMEOUT}

 

# Create the channel

docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp"" peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/channel.tx

2018-01-08 09:37:44.768 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-01-08 09:37:44.769 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-01-08 09:37:44.771 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2018-01-08 09:37:44.772 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2018-01-08 09:37:44.772 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2018-01-08 09:37:44.772 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2018-01-08 09:37:44.772 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2018-01-08 09:37:44.772 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A88060A074F7267314D535012FC052D...53616D706C65436F6E736F727469756D 

2018-01-08 09:37:44.773 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: DC274990B4322EF71F5B1871080B365CE138D3DA0DB3769935AB76CD75B65D48 

2018-01-08 09:37:44.773 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2018-01-08 09:37:44.773 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2018-01-08 09:37:44.773 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2018-01-08 09:37:44.773 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2018-01-08 09:37:44.774 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0ABF060A1508021A0608E8F7CCD20522...F83B2C983A5B1163346FE530781D2F01 

2018-01-08 09:37:44.774 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 10617339838E6F78FF5E5D759DC9241C1C853562F132854E32A53652E5AEB18F 

2018-01-08 09:37:44.870 UTC [msp] GetLocalMSP -> DEBU 010 Returning existing local MSP

2018-01-08 09:37:44.870 UTC [msp] GetDefaultSigningIdentity -> DEBU 011 Obtaining default signing identity

2018-01-08 09:37:44.870 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP

2018-01-08 09:37:44.871 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity

2018-01-08 09:37:44.871 UTC [msp/identity] Sign -> DEBU 014 Sign: plaintext: 0ABF060A1508021A0608E8F7CCD20522...8D8D9A62134412080A021A0012021A00 

2018-01-08 09:37:44.871 UTC [msp/identity] Sign -> DEBU 015 Sign: digest: DDCCD9703E429528AFABC2FA7D0F28DE36D87A05EC4D4E7A38A08F92451EC706 

2018-01-08 09:37:44.898 UTC [channelCmd] readBlock -> DEBU 016 Got status: &\{NOT_FOUND}

2018-01-08 09:37:44.898 UTC [msp] GetLocalMSP -> DEBU 017 Returning existing local MSP

2018-01-08 09:37:44.899 UTC [msp] GetDefaultSigningIdentity -> DEBU 018 Obtaining default signing identity

2018-01-08 09:37:44.900 UTC [channelCmd] InitCmdFactory -> INFO 019 Endorser and orderer connections initialized

2018-01-08 09:37:45.100 UTC [msp] GetLocalMSP -> DEBU 01a Returning existing local MSP

2018-01-08 09:37:45.100 UTC [msp] GetDefaultSigningIdentity -> DEBU 01b Obtaining default signing identity

2018-01-08 09:37:45.101 UTC [msp] GetLocalMSP -> DEBU 01c Returning existing local MSP

2018-01-08 09:37:45.101 UTC [msp] GetDefaultSigningIdentity -> DEBU 01d Obtaining default signing identity

2018-01-08 09:37:45.101 UTC [msp/identity] Sign -> DEBU 01e Sign: plaintext: 0ABF060A1508021A0608E9F7CCD20522...C97EFE0216C712080A021A0012021A00 

2018-01-08 09:37:45.101 UTC [msp/identity] Sign -> DEBU 01f Sign: digest: 1FD4BC9525045CC79A1D3B6A07CF4FB98C091B34C1035E593B52E168684AB2EB 

2018-01-08 09:37:45.105 UTC [channelCmd] readBlock -> DEBU 020 Received block: 0

2018-01-08 09:37:45.106 UTC [main] main -> INFO 021 Exiting.....

# Join peer0.org1.example.com to the channel.

docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp"" peer0.org1.example.com peer channel join -b mychannel.block

2018-01-08 09:37:45.212 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-01-08 09:37:45.213 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-01-08 09:37:45.214 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2018-01-08 09:37:45.214 UTC [msp/identity] Sign -> DEBU 004 Sign: plaintext: 0A85070A5B08011A0B08E9F7CCD20510...1387C77FF4421A080A000A000A000A00 

2018-01-08 09:37:45.215 UTC [msp/identity] Sign -> DEBU 005 Sign: digest: 026E4BFDAE085F815B0C0347C2EA0C1B94429C7F8AF9FF4C8CF317752F3C9EBC 

2018-01-08 09:37:45.297 UTC [channelCmd] executeJoin -> INFO 006 Peer joined the channel!

2018-01-08 09:37:45.297 UTC [main] main -> INFO 007 Exiting.....

echo 'haha'

haha

Creating cli ... done

2018-01-08 09:37:46.092 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-01-08 09:37:46.093 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-01-08 09:37:46.093 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc

2018-01-08 09:37:46.094 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc

Error: Error getting chaincode code chaincode: Failed to determine platform type: Unknown chaincodeType: NODE

```",,finalight,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysof:",,,,,,,,,,,,,,,,,,,,,finalight,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/18 11:49 PM;lehors;Hi,

Where does this startfabric.sh script come from?

Which platform are you on?

Thanks.

 ;;;","07/Feb/18 2:33 AM;lehors;Ok, I was able to reproduce this same error on Windows 7.

I will investigate further.;;;","07/Feb/18 8:19 AM;lehors;After further investigation I can say that there is at least a workaround: upgrade to fabric-1.1-alpha.

Indeed, while I could reproduce the problem in fabric-1.0.5 it has disappeared in fabric-1.1-alpha.

I'm not sure why but it might just be because of the upgrade from go1.7 to go1.9 because I don't quite understand the source of the problem.

The installation of the node chaincode fails with 1.0.5 because the type is not properly recognized. This can simply be tested by logging into the cli:
{code:java}
$ docker exec -it -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org
1.example.com/users/Admin@org1.example.com/msp"" cli /bin/bash{code}
Then executing:
{code:java}
root@4e258a910ef8:/opt/gopath/src/github.com/hyperledger/fabric# peer chaincode install -n fabcar -v 1.0 -p /opt/gopath/src/github.com/fabcar/node -l node
2018-02-06 22:13:49.476 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-06 22:13:49.476 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-06 22:13:49.477 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-02-06 22:13:49.477 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
Error: Error getting chaincode code chaincode: Failed to determine platform type: Unknown chaincodeType: NODE

root@5c51ab9f551e:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer version
peer:
 Version: 1.0.5
 Go version: go1.7.5
 OS/Arch: linux/amd64
 Chaincode:
  Base Image Version: 0.3.2
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger{code}
 The code that's not functioning is in fabric/core/chaincode/platforms/platforms.go:
{code:java}
// Find returns the platform interface for the given platform type
func Find(chaincodeType pb.ChaincodeSpec_Type) (Platform, error) {

    switch chaincodeType {
    case pb.ChaincodeSpec_GOLANG:
        return &golang.Platform{}, nil
    case pb.ChaincodeSpec_CAR:
        return &car.Platform{}, nil
    case pb.ChaincodeSpec_JAVA:
        return &java.Platform{}, nil
    case pb.ChaincodeSpec_NODE:
        return &node.Platform{}, nil
    default:
        return nil, fmt.Errorf(""Unknown chaincodeType: %s"", chaincodeType)
    }{code}
I don't quite see how this could fail but didn't investigate further because the problem no longer exists in 1.1 so I'm not sure it's worth spending more time on it.

Running the 1.1-alpha peer command in the same container, that command succeeds:
{code:java}
root@4e258a910ef8:/opt/gopath/src/github.com/hyperledger/fabric# build/bin/peer chaincode install -n fabcar -v 1.0 -p /opt/gopath/src/github.com/fabcar/node -l
node
2018-02-06 22:12:56.709 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-06 22:12:56.710 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-06 22:12:56.712 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-02-06 22:12:56.713 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-02-06 22:12:56.716 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-02-06 22:12:56.719 UTC [node-platform] GetDeploymentPayload -> DEBU 006 Packaging node.js project from path /opt/gopath/src/github.com/fabcar/node
2018-02-06 22:12:56.720 UTC [container] WriteFolderToTarPackage -> INFO 007 rootDirectory = /opt/gopath/src/github.com/fabcar/node
2018-02-06 22:12:56.723 UTC [container] WriteFileToPackage -> DEBU 008 Writing file to tarball: src/fabcar.js
2018-02-06 22:12:56.737 UTC [container] WriteFileToPackage -> DEBU 009 Writing file to tarball: src/package.json
2018-02-06 22:12:56.741 UTC [msp/identity] Sign -> DEBU 00a Sign: plaintext: 0A9C070A5C08031A0C08E8D0E8D30510...F3F1EF000000FFFF664C5065001E0000
2018-02-06 22:12:56.742 UTC [msp/identity] Sign -> DEBU 00b Sign: digest: 3D92CF41DFD4A6C8A3FD523EE0FEB8A4DC06CD0D1A328118719C8EA405CCD44A
2018-02-06 22:12:56.779 UTC [chaincodeCmd] install -> DEBU 00c Installed remotely response:<status:200 payload:""OK"" >
2018-02-06 22:12:56.780 UTC [main] main -> INFO 00d Exiting.....

root@4e258a910ef8:/opt/gopath/src/github.com/hyperledger/fabric# build/bin/peer version
peer:
 Version: 1.1.0-beta-snapshot-ec639a6
 Go version: go1.9
 OS/Arch: linux/amd64
 Experimental features: true
 Chaincode:
  Base Image Version: 0.4.5
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger{code}
 

 ;;;","09/Feb/18 11:58 PM;lehors;Support for Node chaincode was introduced in fabric-1.1. So, this problem actually occurs when trying to use a Node chaincode on a pre 1.1 network.

This is actually working as designed.

 ;;;",,,,,,,,,,,,,,,,,,,
Performance test: latency,FAB-7647,26656,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,09/Jan/18 1:42 AM,10/Jan/19 6:11 AM,28/Oct/23 3:02 AM,05/Oct/18 11:07 PM,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,"Test name: Performance test: latency
 Component: Performance test
 Description: performance events per channel with levelDB
     chaincode: chancode, sample_cc, instantiated
     transactions: 1 thread, each thread sends 10000 invokes concurrently
          thread 1 sends to org1 peer1

Network Topology: docker containers; 1 channel, 1 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 1 ca, TLS enabled, batch size = 1, event service: channel, listener: block
 Client Driver: PTE (latency mode)
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10772,,,,,,,,,,,,,,,,,,,,,,FAB-13601,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzysov:",,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"07/Feb/18 3:40 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17539/;;;","29/Aug/18 6:46 AM;scottz;Test is done. Just need to add this to the CI daily test suite: runPteDailyTestSuite.sh.;;;",,,,,,,,,,,,,,,,,,,,,
DRY up unit-test/run.sh,FAB-7649,26658,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,09/Jan/18 3:16 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,10/Jan/18 3:52 AM,,,,,,,fabric-build,,,,0,,,,,,Remove some of the repetition around filtering and expansion and try to rationalize some of the if/then flow around the job type.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyspb:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
JSDK filterblock enablement.,FAB-7650,26659,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rickr,rickr,09/Jan/18 3:23 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,,,,,0,,,,,,see parent.,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzystj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/18 9:31 AM;rickr;done;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,
JSDK filterblock enablement.,FAB-7651,26660,,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rickr,rickr,09/Jan/18 3:24 AM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,,,,DUPLICATE,,,,,,,0,stale-item,,,,,see parent.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzystr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/18 12:58 PM;rickr;can't mark it as done;;;","23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
JSDK filterblock enablement.,FAB-7652,26661,25112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,09/Jan/18 3:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Jan/18 12:12 PM,v1.1.0,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,"see parent.

 

https://gerrit.hyperledger.org/r/#/c/16741/",,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyspj:",,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Balance transfer in Typescript: incorrect chaincode location,FAB-7653,26662,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,AdnanChoudhury,AdnanChoudhury,09/Jan/18 4:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Feb/18 12:55 AM,,,,,,,fabric-samples,,,,0,,,,,,"In the provided testAPIs.sh file, the location of the chaincode should be 
""github.com/example_cc/go"" instead of ""github.com/example_cc"" to function properly.

The documentation also needs to be updated accordingly.",,AdnanChoudhury,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyspr:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/18 5:30 AM;smithbk;https://gerrit.hyperledger.org/r/16669 [FAB-7653] Fix incorrect chaincode location;;;",,,,,,,,,,,,,,,,,,,,,,
Rename def/fabapi,FAB-7657,26667,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,09/Jan/18 6:06 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jan/18 5:34 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysqn:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Functional parameters for NewSDK,FAB-7661,26671,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,09/Jan/18 6:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jan/18 4:57 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Usage of functional parameters can be easier for client facing code than an opt structure. See [https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis] and [https://commandcenter.blogspot.ca/2014/01/self-referential-functions-and-design.html] and [https://www.reddit.com/r/golang/comments/5ky6sf/the_functional_options_pattern/|https://www.reddit.com/r/golang/comments/5ky6sf/the_functional_options_pattern/?st=jc6plgug&sh=0d179699]

NewSDK should support a variable option list using functional parameter style. By doing so, we can allow default implementations to do work when they are being passed as a parameter to NewSDK. -We could also have a NewSDKWithOpt version that allow usage of an opt structure (debatable).- 

 ",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7663,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysrb:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Evaluate WithOpts alternatives,FAB-7663,26673,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,09/Jan/18 6:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Jan/18 5:10 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"A follow-on activity to FAB-7661 is to update methods that have a WithOpt to allow functional parameters in their basic func (i.e., the func not labelled WithOpt), where appropriate (particularly where non-primitives are being passed). In other cases, to investigate whether to use variadic options style ([https://dave.cheney.net/wp-content/uploads/2014/10/Screenshot-from-2014-10-15-033605.png]).",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7661,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysrr:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make channel clients generic (if possible)?,FAB-7664,26674,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,09/Jan/18 6:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 7:40 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysrz:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Multihost] - fabric multihost tests are failing in CI using LF machines,FAB-7665,26675,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,rameshthoomu,rameshthoomu,09/Jan/18 7:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/May/18 10:42 PM,,,,,,,fabric-quality,,,,0,,,,,,"Observed below error while executing fabric multihost tests
{code:java}
[32minfo[39m: [PTE 1 main]: stderr: [31merror[39m: [Channel.js]: getChannelConfig - Failed Proposal. Error: Error: Invalid results returned ::NOT_FOUND at ClientDuplexStream.<anonymous> (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/Orderer.js:234:22){code}
Build log: https://jenkins.hyperledger.org/view/multihost/job/fabric-multihost-tests-x86_64/29/artifact/Logs/FAB-3989-4i-TLS_0108223723.log",,denyeart,rameshthoomu,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyss7:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/18 7:12 AM;suryalnvs;Seeing the following errors in the peers logs while joining the peers to the channel. Commit level: 4b821a16c8d763410af6504d0e44e14bc7d0c229
{code:java}
2018-01-11 22:09:16.702 UTC [eventhub_producer] validateEventMessage -> WARN 828 Message timestamp 2018-01-11 22:09:16.674 +0000 UTC more than 0s apart from current server time 2018-01-11 22:09:16.70226641 +0000 UTC m=+624.175074028
2018-01-11 22:09:16.702 UTC [eventhub_producer] Chat -> ERRO 829 Error handling message: event message validation failed: [message timestamp out of acceptable range. must be within 0s of current server time]
2018-01-11 22:09:16.715 UTC [eventhub_producer] validateEventMessage -> DEBU 82a validating for signed event 0xc422f24f60
2018-01-11 22:09:16.715 UTC [eventhub_producer] validateEventMessage -> WARN 82b Message timestamp 2018-01-11 22:09:16.687 +0000 UTC more than 0s apart from current server time 2018-01-11 22:09:16.715657407 +0000 UTC m=+624.188465020
2018-01-11 22:09:16.715 UTC [eventhub_producer] Chat -> ERRO 82c Error handling message: event message validation failed: [message timestamp out of acceptable range. must be within 0s of current server time]
{code};;;","12/Jan/18 7:28 AM;denyeart;[~wlahti] Can you speculate what might cause the Warning message in the prior comment?;;;","12/Jan/18 11:35 PM;scottz;If I am not mistaken, the failing test is called a multihost test but this particular execution was trying to use a single host for now, to keep it simple.

In contrast, using our own vlaunch machines instead of the LF machine, Dongming ran a single-host test scenario +successfully+ this week using PTE, using latest fabric code on master branch.

[https://gerrit.hyperledger.org/r/c/16713/1/tools/PTE/CITest/scenarios/FAB-7246-4i.sh];;;","02/Feb/18 12:39 AM;suryalnvs;[https://gerrit.hyperledger.org/r/#/c/17299/] fixed the above commented issue. CE-248 and CE-251 fixed the newly added configuration parameters in fabric (core.yaml, configtx.yaml) in cello/ansible. Now working on adding newly added features from PTE to ATD templates.;;;",,,,,,,,,,,,,,,,,,,
Split defprovider into core,FAB-7667,26677,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,09/Jan/18 11:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 2:21 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyssf:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential non-deterministic transaction validation,FAB-7668,26679,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,divyank,divyank,09/Jan/18 12:22 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 9:38 PM,,,,DUPLICATE,Not a Bug,,fabric-peer,,,,0,,,,,,"The peer's transaction validation code in fabric/core/committer/txvalidator/validator.go contains five calls to sccprovider.IsSysCC(), branching into different validation flows based on the boolean evaluated.

If two peers are running a different set of system chaincodes, they could evaluate this boolean differently, leading to different determinations of a transaction's validity.",,divyank,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7673,,,FAB-7673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyssn:",,,,,,,,,,,,,,,,,,,,,divyank,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 12:47 PM;divyank;A possible solution to this would be to store some system chaincode metadata on the ledger (like we do for user chaincode). This would help all peers have a standard view of what system chaincodes are running. This could be part of the channel config or there could be an instantiate step for system chaincodes like we have for user chaincodes. In the latter case, we could also have a set of ""required"" system chaincodes (like LSCC) that don't need instantiation as we can assume presence on all peers.;;;","10/Jan/18 7:52 AM;yacovm;This is a duplicate of FAB-7673;;;","21/Jan/18 8:53 AM;mastersingh24;This is not a bug IMHO.  If people decide to use their own system chaincode, they must be responsible for distributing the proper peer binaries and/or plugins to all participants.;;;",,,,,,,,,,,,,,,,,,,,
split fabric-txn into fabric-session?,FAB-7669,26681,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,09/Jan/18 12:31 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 12:53 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,it may be more appropriate for the session clients to form their own package and keep fabric-txn purely about transaction processing.,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyst3:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refuse endorsements if peer identity expired,FAB-7671,26687,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,09/Jan/18 10:20 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Jan/18 6:07 PM,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,"Peers should refuse endorsements, if their identity has expired.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzystz:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Processing chaincode bulk commits in serial into couchdb causes performance regression,FAB-7672,26688,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,Senthil1,Senthil1,10/Jan/18 12:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Feb/18 5:48 AM,,,,v1.1.0,,,fabric-ledger,,,,0,Ledger,,,,,"Due to the change of having a couchdb per chaincode, bulk commits occur in serial now, regressing performance.

For loadCommittedVersions() and ApplyUpdates() in statecouchdb.go, goroutines needs be used to process each chaincode batches parallely.",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysu7:",,,,,,,,,,,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/18 1:23 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16695/;;;",,,,,,,,,,,,,,,,,,,,,,
Determine whether a cc name is equal to one of the system chaincodes shipped by default in fabric,FAB-7673,26689,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,ales,ales,10/Jan/18 12:22 AM,30/Jul/19 12:00 PM,28/Oct/23 3:02 AM,30/Jul/19 12:00 PM,,,,Future,,,fabric-peer,,,,0,,,,,,"Currently fabric offers this function

 

{{//IsSysCC returns true if the name matches a system chaincode's}}
 {{//system chaincode names are system, chain wide}}
 {{IsSysCC(name string) bool}}

 

to determine whether a chaincode name matches one of the system chaincodes. As [~yacovm] mentioned in [https://gerrit.hyperledger.org/r/#/c/16443/] however, this function shouldn't be used to make any tx validation decision. More specifically, when validating cc deploy/upgrade transactions, this function shouldn't be used to determine whether the deployer maliciously attempted to deploy a chaincode with one of the names reserved for default system chaincodes.

 

We recommend to create a new function (e.g. _IsDefaultSysCC_) that returns true if the supplied chaincode name matches one of the default system chaincodes shipped in fabric. Given that this might change across versions, the capability framework needs to be used to avoid introducing non-deterministic behaviour across upgrades.",,ales,baohua,divyank,elli-androulaki,jyellick,kchristidis,mastersingh24,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6651,,,FAB-7668,,,FAB-7668,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysuf:",,,,,,,,,,,,,,,,,,,,,ales,baohua,divyank,elli-androulaki,jyellick,kchristidis,mastersingh24,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 12:23 AM;ales;[~elli-androulaki], [~adc], [~yacovm], [~mastersingh24], [~jyellick] pls weigh in;;;","10/Jan/18 12:44 AM;yacovm;# This is a direct ramification of using system chaincodes for peer infrastructure, instead of only using them for running in-process smart contracts :)
 # I recommended to you another name which I think is more fit *IsInfrastructureCC* , I don't think ""default"" should be in the name at any case. This actually has nothing to do with default or not, and everything to do with whether the CC is used for infrastructure, or for user business logic.
 # Not taking any action, would probably lead some customers to a chain fork, which is pretty bad. I suggest we do this fast, since the time window before code freeze is almost due.
I suggest you raise the priority to highest.
 # If I can expand a bit on the problem - when a SCC (an in-process chaincode) is registered in the peer's memory - it is added to the *systemChaincodes* slice in *importsysccs.go* .
Some clients use in-process chaincodes that even can load as plugins (dynamically) without having to recompile the peer and they are also appended to that slice via *RegisterSysCCs* in the same file.
Now, this means that the validation logic, when it executes *IsSysCC* would take different decisions based on whether the SCC is installed in the peer, or not.;;;","10/Jan/18 5:31 AM;elli-androulaki; 

I agree with [~yacovm]; it can be that if scc-s are beyond the infrastructure ones, the isSysCC could cause forks... 

[~ales] already submitted the related CR: [https://gerrit.hyperledger.org/r/#/c/16705|https://gerrit.hyperledger.org/r/#/c/16705/].

 ;;;","10/Jan/18 7:35 AM;yacovm;should this be somehow backported to v1.0 ? ;;;","11/Jan/18 12:24 AM;divyank;This solution could break persistence for SCCs that are not on the Infrastructure SCCs list.

For example, if we replace [this|https://github.com/hyperledger/fabric/blob/1c3d63bc63baecce5470aa0e75e2442ca8ecd34a/core/committer/txvalidator/validator.go#L622] IsSysCC() call in the tx validation code with IsInfrastructureCC(), the peer will no longer be able to validate transactions involving SCCs that are not on this list.;;;","11/Jan/18 6:48 AM;baohua;Since the scc might be dynamic, and we may have more scc in future, a radical way might be keeping ""scc"" suffix as a remaining keyword, and can only be used in scc.
 
However, I'm not sure it's the good timing to do it now.;;;","11/Jan/18 6:46 PM;ales;Agreed, though we have to do something to avoid user chaincodes, infrastructure scc's and plugin scc's to be mixed up. ;;;","11/Jan/18 6:54 PM;yacovm;{quote}Agreed, though we have to do something to avoid user chaincodes, infrastructure scc's and plugin scc's to be mixed up. 
{quote}


There is something we can do. We can just have the peer not use chaincodes for infrastructure management. ;;;","11/Jan/18 7:34 PM;ales;There are 2 types of scc's:
 # real infrastructure management (cscc, qscc, lscc)
 # endorsement policy facilitators (escc, vscc)

There might be a third type of chaincode that a customer might want to be a ""system"" one because they need functionality that is not provided by the shim (not saying it's a good idea to do that, just stating the fact).

What would be a good/better abstraction for scc's of type 1 than the chaincode abstraction? One good thing of the chaincode abstraction is that the sdk does not need to implement another infrastructure management interface. However I'm not sure that's a strong-enough motivation, I'd like to hear what others think.

As to scc's of type 2, we might replace them by simply implementing an interface (and doing away with the chaincode abstraction altogether).

Thoughts? ([~jyellick] please weigh in as well, I know you were also thinking along those lines);;;","05/May/18 12:27 AM;jyellick;Looks like these CRs have been abandoned?

To my mind, there is no requirement to treat SCCs any differently from standard CCs.  I see no reason we need to have a reference to it in our validation path.  Once we have the new lifecycle implemented (which will have no custom validation) I think these calls all simply vanish from the validation.;;;","12/Jun/18 11:53 PM;kchristidis;With the new lifecycle work coming in for 1.3, I suggest that this remains in ""On Hold"" status, and has its ""Fix Version"" set to 1.3.

When the lifecycle work gets merged, we can hopefully set its status to ""Invalid"". Any disagreements?;;;","30/Jul/19 12:00 PM;mastersingh24;no longer valid with new lifecyle ... not going to invest in old lifecycle;;;",,,,,,,,,,,
Avoid temporary key/cert files in gossip tests,FAB-7674,26690,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,10/Jan/18 12:24 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,10/Jan/18 3:38 AM,,,,,,,fabric-gossip,,,,0,,,,,,"GenerateCertificatesOrPanic is using temporary files when a simple buffer is sufficient. This results in untracked files getting left behind when tests failed.

The code can be easily refactored to use use a buffer.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzysun:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
make verify broken by FAB-7649,FAB-7675,26691,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,sykesm,sykesm,10/Jan/18 1:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Jan/18 4:40 AM,,,,,,,fabric-build,,,,0,,,,,,packages_diff combined the positive and negative and ended up excluding all of the go files.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysuv:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Timeout pulling private data when no write-set,FAB-7676,26694,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,bstasyszyn,bstasyszyn,10/Jan/18 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jan/18 10:33 PM,v1.1.0,,,v1.1.0,,,fabric-gossip,,,,0,gossip,,,,,"When committing a transaction in which the private data has a private read-set but no private write-set, the following warning occurs (after about 60 seconds):

gossip/privdataÅ StoreBlock -> WARN 40b Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 4d3adc8ff4e4df0f09a526a7653de5b1a2adfd09b4d0488e2c18236420ffd18d, seq: 0, namespace: mapcc, collection: coll2, hash:

Steps to reproduce:

1) PutPrivateData(""coll1"",""key1"",value1); endorsement successful; commit successful
 2) GetPrivateData(""coll1"",""key1""); endorsement successful; commit receives the above warning after 60 seconds

I also tried the following and it had the same result:

3) PutState(""key2"",value2); GetPrivateData(""coll1"",""key1""); endorsement successful; commit receives the above warning after 60 seconds

I'm testing in a configuration composed of 4 MSPs, 1 peer per MSP for a total of 4 peers, and 2 (Kafka) orderers. One chaincode (mapcc) has the following collection config:

Collection Name: coll1
 RequiredPeerCount=1
 MaximumPeerCount=2
 Policy includes all 4 MSPs

Attached are the logs (look for the warnings at the end of the file).",,bstasyszyn,denyeart,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 3:44 AM;bstasyszyn;pvtdatatimeout.log;https://jira.hyperledger.org/secure/attachment/14123/pvtdatatimeout.log",,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,"1|hzysvb:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,denyeart,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Jan/18 6:13 AM;yacovm;So from the logs I see:

 
{quote}peer0.org1.com ø 2018-01-09 18:19:56.437 UTC Ægossip/commÅ Send -> DEBU 267b Entering, sending GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes to 1 peers

peer0.org1.com ø 2018-01-09 18:19:56.437 UTC Ægossip/commÅ sendToEndpoint -> DEBU 267c Entering, Sending to peer0.org2.com:7051 , msg: GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes
{quote}
Meaning, peer0.org1 asked from peer0.org2 for the data.

Now, peer0.org2:
{quote}peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/commÅ func1 -> DEBU 27c0 Got message: GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ handleRequest -> DEBU 27c1 Got GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes from 172.18.0.10:7051
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ CollectionRWSet -> DEBU 27c2 Current ledger height 7 is below requested block sequence number 7 retrieving private data from transient store, namespace mapcc collection name coll1 txID 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ createResponse -> DEBU 27c3 *Found 0 for TxID* 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f , collection coll1 for 172.18.0.10:7051
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ func1 -> DEBU 27c4 Returning 172.18.0.10:7051 0 elements
{quote}
 
 So the peer has decided it needs to return a response (the peer is eligible of receiving the data) but it didn't find any data when calling *CollectionRWSet() *
{code:java}
		rwSets := p.CollectionRWSet(dig)
		logger.Debug(""Found"", len(rwSets), ""for TxID"", dig.TxId, "", collection"", dig.Collection, ""for"", message.GetConnectionInfo().Endpoint)
		if len(rwSets) == 0 {
			continue
		}
{code}

In the end, the peer gives up:
{quote}
peer0.org1.com    ø 2018-01-09 18:20:02.438 UTC Ægossip/privdataÅ StoreBlock -> WARN 285e Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f, seq: 0, namespace: mapcc, collection: coll1, hash: 
{quote}

[~manish-sethi] , [~C0rWin]  any idea what could make the peer not return anything from the transient store? 

The method that does that didn't write into the logs above:
{code}
// GetTxPvtRWSetByTxid returns an iterator due to the fact that the txid may have multiple private
// write sets persisted from different endorsers.
func (s *store) GetTxPvtRWSetByTxid(txid string, filter ledger.PvtNsCollFilter) (RWSetScanner, error) {

	logger.Debugf(""Getting private data from transient store for transaction %s"", txid)

	// Construct startKey and endKey to do an range query
	startKey := createTxidRangeStartKey(txid)
	endKey := createTxidRangeEndKey(txid)

	iter := s.db.GetIterator(startKey, endKey)
	return &RwsetScanner{txid, iter, filter}, nil
}
{code};;;","18/Jan/18 9:28 AM;denyeart;[~yacovm] I've found the issue in coordinator.go inspectTransaction():

[https://github.com/hyperledger/fabric/blob/master/gossip/privdata/coordinator.go#L668-L692]

It looks for private collections included in the transaction's hashed rwset.  If a collection is found it will ask the transient store for the private data (first local, then remote).  However if the transaction only has a private readset and no private writeset, there will be nothing in transient store, the transient store is only for private write sets. Private readsets are used only for MVCC validation later in the processing - there is nothing that needs to be retrieved from transient store.  So, when inspectTransaction() is building out the missing keys map, it should look specifically for collections with private writesets in the transaction's hashed rwset.  That is, only include  CollHashedRwSet.HashedRwSet having HashedWrites > 0.;;;","18/Jan/18 6:39 PM;yacovm;Thanks [~denyeart] (Odd - I couldn't find you when I tried to tag you in my previous comment).
That is indeed the case :) 

I pushed https://gerrit.hyperledger.org/r/#/c/16941/ as a fix.

[~bstasyszyn] May you check please?;;;","18/Jan/18 10:20 PM;denyeart;I tested the patch e2e, looks good.;;;","18/Jan/18 11:54 PM;bstasyszyn;I tested the fix and it works fine now. Thanks!;;;",,,,,,,,,,,,,,,,,,
[ci] - cleanup behave script,FAB-7677,26695,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Jan/18 4:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Jan/18 1:11 PM,,,,,,,fabric-ci,,,,0,,,,,,removed unused script and modify fabric-smoke-test-daily-verify to fabric-smoke-test-daily CI job name.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysvj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/18 1:11 PM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,
performance degradation,FAB-7678,26698,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,10/Jan/18 6:13 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,30/Jan/18 12:23 PM,,,,,,,,,,,0,,,,,,"Measure TPS degradation with v1.0.4 with multi-channels using PTE ([https://github.com/hyperledger/fabric-test/tree/master/tools/PTE)] on a vLaunch Linux system.  The blockchain network is 2 org, 2 peer per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, levelDB, both org are associated with all channels. We measured invoke TPS for v1.0.3, v1.0.4, v1.0.5 with 1 channel, 2 channels, 8 channels.  The TPS results are as follow:

v1.0.3: 1 channel: 82.66, 2 channels: 90.18, 8 channels: 98.32

v1.0.4: 1 channel: 110.36, 2 channels: 88.68, 8 channels: 91.05

v1.0.5: 1 channel: 116.27, 2 channels: 107.53, 8 channels: 104.18

 ",,denyeart,dongming,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysvr:",,,,,,,,,,,,,,,,,,,,,denyeart,dongming,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 4:39 AM;dongming;Comment from Marko Vukolic on 1/10/2018:

Hi Barry,

what we observed was that the MVCC processing in validation got longer - but we do not have more detailed profiling. We know it is not ledger of VSCC part of the validation it is really inside MVCC check which is in between the two.

Hope this helps a bit
Marko;;;","18/Jan/18 6:51 AM;Clayton Sims;[~marko.vukolic]  is this something you can help the team with to further profile and narrow the root cause?

 ;;;","18/Jan/18 6:57 AM;denyeart;[~dongming] If I am reading the stats correctly in the description, it looks like TPS *improved* from 82.66 TPS to 116.27 TPS (single channel, 1.0.3 to 1.0.5). And from 98.32 to 104.18 TPS (8 channels, 1.0.3 to 1.0.5).

I'm not understanding what the regression is?   Yes it looks like 1.0.4 was a little slower, but 1.0.5 is a little faster.  Maybe that is just within the margin of error of the test?;;;","18/Jan/18 7:18 AM;dongming;[~denyeart]  Yes, v1.0.5 has  better TPS then v1.0.3.  I have done some test and observed that v1.0.4 is consistently slower than v1.0.3.  If we consider this is within the margin of error, then we can close this bug.;;;","18/Jan/18 11:10 PM;vukolic;We observed at some point a regression in MVCC latency but since we were evaluating on master it is difficult to pinpoint which release was affected. What we seem to be needing is a bit more profiling in those tps numbers quoted above. Even simple latency staging split in validation phases would help (we use VSCC/MVCC/ledger staging internally)

 

sorry this does not help more.;;;","18/Jan/18 11:38 PM;denyeart;[~dongming] [~vukolic] Has anybody looked into performance profiling utilities at the golang level?  Seems that would give us the most detailed answers.  Thoughts?

If we are evaluating performance on master (1.1), then a 1.0.x (release) vs 1.1 (master) analysis should be done.  Has anybody done that yet?;;;","19/Jan/18 11:54 PM;dongming;Another data point on v1.1.0-preview

1 channel: 138.39, 2 channels: 134.13, 8 channels: 129.43

overall, v1.1.0-preview has the best TPS.;;;","22/Jan/18 11:47 PM;dongming;The TPS for v1.1 commit a85b2fa are:

1 channel: 147.80, 2 channels: 140.01, 8 channels: 134.64;;;","30/Jan/18 12:23 PM;denyeart;Since the performance is generally improved on the latest 1.0.x and 1.1, I'm not seeing an perf bug here.  It seems the 1.0.4 perf numbers are within the margin of error.  I will close this item.;;;",,,,,,,,,,,,,,
Rename sdk.NewPreEnrolledUser to sdk.NewUser,FAB-7679,26699,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,10/Jan/18 6:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 12:53 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysvz:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
some repos are not updated in fabric-test/Makefile,FAB-7680,26700,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,scottz,scottz,10/Jan/18 8:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Jan/18 4:30 AM,v1.1.0,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"In fabric-test/Makefile, similar to fabric and ca, we should also (optionally) clone and git pull the latest code in the other repositories which are submodules (because they could be referenced in some of our tests: cello, fabric-samples, fabric-sdk-node.

We do not need to build any objects in those repositories. That is, there is no need to add anything to docker-images.

We need something like the following, but for each of the other listed missing repos:

.PHONY: ca
ca:
if [ ! -d ""$(CA_DIR)"" ]; then \
echo ""Clone CA REPO""; \
cd $(HYPERLEDGER_DIR); \
git clone $(FABRIC_CA) $(CA_DIR); \
fi
cd $(CA_DIR) && git pull $(FABRIC_CA)

 ",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysw7:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 4:29 AM;scottz;Those other repositories are not used, except within fabric-test/ submodules. We know hyperledger/fabric/ is used when building OTE and LTE, but of course our Makefile already clones and pulls the latest commits for that repo. It is not necessary to do the same for these other repositories, since we only use the submodules (which ARE updated). Therefore this bug is not a bug, and can be closed.

Summary of the tools and the repositories used:
 * PTE uses fabric-test/fabric-sdk-node/
 * ATD uses fabric-test/cello
 * OTE use fabric/ , for building the OTE go code which depends on other orderer code in the fabric repo, which requires same vendor path
 * LTE uses fabric/ , for building the LTE tool, which depends on other ledger code in the fabric repo which requires same vendor path
 * Behave feature tests use protos built in fabric repo and could reference scripts from fabric/e2e and from fabric-samples

 ;;;",,,,,,,,,,,,,,,,,,,,,,
[Behave] - incorrect test case result in behave tests,FAB-7683,26715,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,rameshthoomu,rameshthoomu,11/Jan/18 12:36 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Feb/18 12:31 AM,,,,,,,fabric-quality,,,,0,quality,,,,,"observed below log from one of the behave test CI job. I see the test case is failed but the summary is showing 0 failed.
{code:java}
00:15:14.687 Scenario Bootstrap a development network with 4 peers (2 orgs)  and 1 orderer (1 org), each having a single independent root of trust (No fabric-ca, just openssl) -- @1.4 Orderer Options failed. Getting container logs
00:15:14.687 
00:15:14.758 context.failed = False
00:15:14.758 1 feature passed, 0 failed, 2 skipped
00:15:14.758 4 scenarios passed, 0 failed, 24 skipped
00:15:14.758 404 steps passed, 0 failed, 211 skipped, 0 undefined
00:15:14.758 Took 8m56.890s
00:15:14.867 $ ssh-agent -k{code}
Jenkins build log: https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-behave-tests-x86_64/264/consoleFull",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysyv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Feb/18 12:31 AM;rameshthoomu;As per Jeff, no issue with the test case result here as we see all tests are executed successfully. Closing this issue as we disabled this job from fabric.;;;",,,,,,,,,,,,,,,,,,,,,,
Make gossip abort chain processing when validation fails,FAB-7684,26716,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,11/Jan/18 12:57 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Jan/18 11:51 PM,,,,,,,fabric-gossip,,,,0,,,,,,"In case validation fails, gossip should stop chain processing because there is no point in continuing on.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzysz3:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Mechanism warning when performing npm install,FAB-7685,26719,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,11/Jan/18 1:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,04/Jul/18 10:03 PM,,,,v1.2.0,,,,,,,0,,,,,,"*fabric-sdk-node commit:* ea8d0c3f6c8553fe92758c3107b46ad178e6d69d
*fabric commit:* ddc1307

When executing tests that use the Node SDK, there is a warning displayed when performing the 'npm install' portion of the test.

{code}
And I use the NodeJS SDK interface                                                                                   # steps/basic_impl.py:26
../src/pkcs11/mech.cpp: In member function ‘void Mechanism::Free()’:
../src/pkcs11/mech.cpp:121:15: warning: deleting ‘void*’ is undefined [-Wdelete-incomplete]
   delete(param);
{code}

To duplicate, from the fabric-test repo, go to the feature directory and run ""behave -n FAB-3852 -k"" (after performing prereqs in the README). This executes 4 test scenarios, 2 of which use the Node SDK.",,harrisob@us.ibm.com,jyellick,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/18 12:26 AM;latitiah;package.json;https://jira.hyperledger.org/secure/attachment/14631/package.json",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyszr:",,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,jyellick,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/18 5:48 AM;harrisob@us.ibm.com;Why is this a NodeSDK issue ? Looks like an issue with Python script ?;;;","08/Feb/18 6:27 AM;harrisob@us.ibm.com;I have done 'npm install' and do not see these messages. I do not see how this is a NodeSDK issue. I also have no idea what component should look at this.;;;","17/Feb/18 12:26 AM;latitiah;This problem is also happening in CI (see [https://jenkins.hyperledger.org/job/fabric-test-merge-x86_64/171|https://jenkins.hyperledger.org/job/fabric-test-merge-x86_64/171/] as an example). It happens when performing an 'npm install' The package.json file that is used has been added to the issue.;;;","05/May/18 2:35 AM;jyellick;Is this still an issue?;;;","04/Jul/18 10:03 PM;mastersingh24;The error was from the pkcs11js package which is used by fabric-client.  There were some warnings in the native code which is included with that package.  These issues have been fixed in the latest versions of pkcs11js.  

I was able to see the warnings during compilation by installing v1.0.12 of the package `npm install pkcs11js@1.0.12` on an Ubuntu 16.04 system.

With the latest, there is no error.  Closing this as the warning messages were benign in any case;;;",,,,,,,,,,,,,,,,,,
panic at endorsement if ESCC is empty,FAB-7686,26720,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,11/Jan/18 3:47 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,11/Jan/18 5:29 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"If the ESCC is empty, the peer panics.
Optimally, it should not panic and just fail the endorsement.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyszz:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
PTE stability test,FAB-7688,26723,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,11/Jan/18 4:37 AM,30/Jul/19 11:42 AM,28/Oct/23 3:02 AM,30/Jul/19 11:42 AM,,,,,,,fabric-quality,,,,0,,,,,,"network configuration: 3 orderers, 4 kafka, 3 zookeepers, 2 ca, levelDB, 8 channels, 2 org, 2 peers per org, both org are associated with the channel, TLS enabled, batchsize 500, batch timeout 2s, 1 golang chaincode, 1 NodeJS cahincode

6 processes X 10000 constant transaction mode

1 process: sample cc golang, various payload size (1k-2k), invoke, channel event service

1 process: sample cc golang, various payload size (1k-2k), invoke, filtered block event service

1 process: sample cc golang, query

1 process: sample cc NodeJS, various payload (1k-2k), invoke, channel event service

1 process: sample cc NodeJS, various payload (1k-2k), invoke, filtered block event service

1 process: sample cc NodeJS, query

 

I think we should probably define more channels (8 or 10), a minimum 2 chaincodes, use mutual TLS, use channel delivery service, and use filtered block events.

And later add the use of private channel data (by turning on the experimental feature side-db, and using an enhanced chaincode), couchdb indexing (by enhancing chaincode and using complex queries), ACL fine-grained permissions (per-user, instead of simply per-org, possibly after revoking one (unused) user so the CRL is non-empty), and encryption library (with enhanced chaincode), ",,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt0f:",,,,,,,,,,,,,,,,,,,,,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,
Expose resources config through sccprovider,FAB-7691,26728,26613,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Jan/18 7:15 AM,20/Aug/19 1:00 PM,28/Oct/23 3:02 AM,20/Aug/19 1:00 PM,,,,,,,fabric-peer,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt1b:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor and simplify code in state couch db implementation ,FAB-7692,26729,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,11/Jan/18 11:54 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,07/May/18 7:28 PM,,,,v1.2.0,,,fabric-ledger,,,,0,hygiene,,,,,"With the addition of caching of versions, batching, and concurrency across different dbs (one per namespace), the state db implementation for couchdb is becoming unreadable.

This requires a refactoring and simplification in order to keep it readable - specially the code that is processed in the commit path",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1bj:",,,,Unset,,,,,,Unset,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 11:30 PM;manish-sethi;CR - https://gerrit.hyperledger.org/r/#/c/19093/;;;",,,,,,,,,,,,,,,,,,,,,,
Disable SDK e2e test in CI,FAB-7694,26738,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,C0rWin,C0rWin,11/Jan/18 6:51 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jan/18 4:49 AM,,,,v1.1.0,,,fabric-ci,,,,0,,,,,,"Since FAB-7419 introduces changes in the way peer delivers block to the client, there are adjustments in SDK side which need to done in order to accommodate the change. Therefore before SDK will add support end-to-end tests related to the SDK will fail on CI. As a consequence there is a need to temporarily disable those test to allow the CR to get in and once SDK will bring required changes the end-to-end test could be re-enabled.

Here is the CR related to the FAB-7419 :https://gerrit.hyperledger.org/r/#/c/16645/

And here is the example of the tests in failure

{quote}
21:48:39 Results :
21:48:39 
21:48:39 Failed tests: 
21:48:39   End2endAndBackAgainIT.setup:257 Channel foo connect failed on orderer peer0.org1.example.com. Reason: UNIMPLEMENTED: unknown service orderer.AtomicBroadcast
21:48:39   End2endIT.setup:268 Channel bar connect failed on orderer peer0.org2.example.com. Reason: UNIMPLEMENTED: unknown service orderer.AtomicBroadcast
21:48:39 Tests in error: 
21:48:39   NetworkConfigIT.doMainSetup:114->deployChaincodeIfRequired:125->constructChannel:475 » Transaction
{quote}

[~rickr] ",,C0rWin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt3b:",,,,,,,,,,,,,,,,,,,,,C0rWin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 9:37 PM;rameshthoomu;patch has been submitted [https://gerrit.hyperledger.org/r/#/c/16765/]  . This disables Java SDK and Node SDK e2e tests in both verify and merge e2e jobs.;;;",,,,,,,,,,,,,,,,,,,,,,
Need to reflect the type of transaction inside the filtered blocks,FAB-7695,26739,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,11/Jan/18 7:57 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,13/Jan/18 8:33 PM,,,,,,,fabric-peer,,,,0,Release-planning-1.1,,,,,"We need to for filtered blocks the block type it is.  configBlock updateConfig block or endorser transaction.

The values should be the same as 
in common.proto
{code}
enum HeaderType {
    MESSAGE = 0; // Used for messages which are signed but opaque
    CONFIG = 1; // Used for messages which express the channel config
    CONFIG_UPDATE = 2; // Used for transactions which update the channel config
    ENDORSER_TRANSACTION = 3; // Used by the SDK to submit endorser based transactions
    ORDERER_TRANSACTION = 4; // Used internally by the orderer for management
    DELIVER_SEEK_INFO = 5; // Used as the type for Envelope messages submitted to instruct the Deliver API to seek
    CHAINCODE_PACKAGE = 6; // Used for packaging chaincode artifacts for install
    PEER_RESOURCE_UPDATE = 7; // Used for encoding updates to the peer resource configuration
    CHANNEL_SERVICE_REQUEST = 8; // Used for packaging registration/deregistration requests for the channel service
}
{code}

currently filtered block structure looks as following:

{code}
//FilteredBlock is sent by producers and contains minimal information
//about the block.
message FilteredBlock {
    string channel_id = 1;
    uint64 number = 2; // The position in the blockchain
    common.HeaderType type = 3;
    repeated FilteredTransaction filtered_tx = 4;
}

//FilteredTransaction is a minimal set of information about a transaction
//within a block.
message FilteredTransaction {
    string txid = 1;
    TxValidationCode tx_validation_code = 2;
    repeated FilteredAction filtered_action = 3;
}

//FilteredAction is a minimal set of information about an action within a
//transaction.
message FilteredAction {
    ChaincodeEvent ccEvent = 1;
}
{code}

the {{FilteredTransaction}} need to be extended to include transaction type information.

[~rickr]",,C0rWin,rickr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7698,,,,,,,,,,,,,FAB-7698,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyt3j:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,rickr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jan/18 9:20 PM;C0rWin;This item covers same concern as FAB-7698.;;;","13/Jan/18 1:01 AM;rickr;To actually mirror the former Block:  FilteredBlock needs to have FilteredEnvelope that has the common.HeaderType.

FilteredEnvelope can contain FilteredTransaction or other types like FilteredConfig, FilteredConfigUpdate .. etc.;;;","13/Jan/18 1:21 AM;C0rWin;{{FilteredBlock}} contains {{FilteredTransaction}} which now looks as following:

{code}
//FilteredTransaction is a minimal set of information about a transaction
//within a block.
message FilteredTransaction {
    string txid = 1;
    TxValidationCode tx_validation_code = 2;
    repeated FilteredAction filtered_action = 3;
}
{code}
 
my suggestion is to refactor it down to something like:

{code}
//FilteredTransaction is a minimal set of information about a transaction
//within a block.
message FilteredTransaction {
    string txid = 1;
    common.HeaderType type = 2;
    TxValidationCode tx_validation_code = 3;
    repeated bytes data = 4;
}
{code}

where data will be slice of bytes serialized based on the {{common.HeaderType type = 2}} value.;;;","13/Jan/18 3:04 AM;rickr;IMO 
 message FilteredEnvelope \{
 common.HeaderType type = 1;
 repeated bytes data = 2; // which are now just serialized FilteredTransaction 
 }

message FilteredTransaction \{
 string txid = 1;
 TxValidationCode tx_validation_code = 2;
 repeated FilteredAction filtered_action = 3;
 }

message FilteredBlock \{
     string channel_id = 1;
     uint64 number = 2; // The position in the blockchain
     repeated FilteredEnvelope filtered_envelope = 3;
 };;;",,,,,,,,,,,,,,,,,,,
Add couchdb index definition to chaincode installation package (node.js chaincode),FAB-7696,26747,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,11/Jan/18 11:08 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Jan/18 2:15 PM,,,,,,,fabric-ledger,,,,0,Release-planning-1.1,,,,,"Allow indexes that support chaincode queries to be defined

alongside chaincode.  Any index defined in chaincode directory

META-INF/statedb/couchdb/indexes will get added to the chaincode

deployment spec code package, so that when the chaincode

is both installed on a peer and instantiated on a channel,

the indexes can be automatically deployed to couchdb.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7132,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt3z:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jan/18 3:02 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16845/;;;",,,,,,,,,,,,,,,,,,,,,,
Peer eventing service needs added to filtered blocks the type of block.,FAB-7698,26751,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,C0rWin,rickr,rickr,12/Jan/18 12:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Jan/18 9:19 PM,v1.1.0,v1.1.0-preview,,v1.1.0,,,fabric-peer,,,,0,sdk,,,,,"The values should be the same for regular blocks

in common.proto

enum HeaderType \{
 MESSAGE = 0; // Used for messages which are signed but opaque
 CONFIG = 1; // Used for messages which express the channel config
 CONFIG_UPDATE = 2; // Used for transactions which update the channel config
 ENDORSER_TRANSACTION = 3; // Used by the SDK to submit endorser based transactions
 ORDERER_TRANSACTION = 4; // Used internally by the orderer for management
 DELIVER_SEEK_INFO = 5; // Used as the type for Envelope messages submitted to instruct the Deliver API to seek
 CHAINCODE_PACKAGE = 6; // Used for packaging chaincode artifacts for install
 PEER_RESOURCE_UPDATE = 7; // Used for encoding updates to the peer resource configuration
 CHANNEL_SERVICE_REQUEST = 8; // Used for packaging registration/deregistration requests for the channel service
 }",v1.1,C0rWin,rickr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7695,,,FAB-7419,FAB-7695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt4n:",,,,,,,,,,,,,,,,,,,,,C0rWin,rickr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/18 2:51 AM;rickr;message FilteredBlock \{
    string channel_id = 1;
    uint64 number = 2; // The position in the blockchain
    common.HeaderType type = 3;
    repeated FilteredTransaction filtered_tx = 4;
}

 

HeaderType  is already there !!!;;;","12/Jan/18 3:45 AM;C0rWin;Not sure this is on block basis rather per filtered action, this header value being taken from transaction. Block might have different transaction types.;;;","12/Jan/18 9:18 PM;C0rWin;This ticket covered with FAB-7695.;;;","12/Jan/18 9:18 PM;C0rWin;Closing this ticket, since duplicates FAB-7695.;;;",,,,,,,,,,,,,,,,,,,
Add event listener for invokes in system tests,FAB-7700,26753,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,latitiah,latitiah,latitiah,12/Jan/18 2:31 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,,,,fabric-quality,,,,0,,,,,,"By default, invokes should use the event listener in order to know when a transaction is written to the ledger. This will help to speed up the tests as well as ensure that transactions are written when expected. 

An additional step is needed to outline the test case when one does *not* want to wait for the transaction to be written to the ledger. For example, 
{code}
When a user, not waiting, invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]""
{code}

Use of a flag to state when one should wait when performing invokes is recommended.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyt4v:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/18 1:27 AM;latitiah;This isn't needed in the behave framework any longer.;;;",,,,,,,,,,,,,,,,,,,,,,
move /examples to fabric-samples,FAB-7701,26758,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,ChristopherFerris,ChristopherFerris,12/Jan/18 5:34 AM,19/Mar/19 10:00 PM,28/Oct/23 3:02 AM,19/Mar/19 9:58 PM,v1.1.0,,,Future,,,fabric-samples,,,,0,help-wanted,,,,,We should have one place to have our samples - fabric-samples,,ChristopherFerris,denyeart,haibbo,lehors,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyt5z:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,haibbo,lehors,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","11/Jan/19 11:09 PM;lehors;A couple of observations on this:
 # some of these examples are extensively used for testing, chaincode/go/example02 in particular
 # at least one of them is merely used for testing: chaincode/go/example03 actually reads:
 // This program is an erroneous chaincode program that attempts to put state in query context - query should return error

So, I'm not sure we really want to move all of what's under fabric/examples to fabric-samples. Instead, I think we should only move the actual examples (this is still the majority), and keep what's used for testing within fabric under a different directory name like ""test"" or maybe the existing unit-test directory?

Thoughts?;;;","11/Jan/19 11:12 PM;lehors;[~muralisr], interested in your view on this.;;;","14/Jan/19 3:39 AM;muralisr; [~lehors] Make sense not moving all examples to fabric-samples and renaming ""examples"" to ""test-artifacts"" or something.

This will also give us time to move true examples into samples (they'd need to be vetted and made complete with docs etc to be fit for fabric-samples).;;;","15/Jan/19 12:37 AM;lehors;Thanks for your input.

I wouldn't be quite that shy about it though. I think we should move every example that is not used for testing purposes within the fabric repo. I agree some examples would benefit from additional documentation but I don't see why that would be a prerequisite to the move. This can be done after the move just as well.

 ;;;","15/Jan/19 4:17 AM;muralisr;[~lehors] I had assumed some minimum requirements to checkin into fabric-samples would gate the work but if any cleanup can be done post move, sure.;;;","19/Mar/19 10:00 PM;lehors;Note that I've removed the samples from the fabric repo but they were NOT added to fabric-samples, per Gari's instructions, see: https://gerrit.hyperledger.org/r/#/c/28887/

 ;;;",,,,,,,,,,,,,,,,
use GetConfigBlock cscc service instead of orderer ,FAB-7702,26759,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,12/Jan/18 6:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Jan/18 11:06 PM,v1.1.0,,,v1.1.0,,,,,,,0,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt67:",,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
too many open files ca.crt,FAB-7703,26000,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,jeffgarratt,lishuo5263,lishuo5263,15/Dec/17 4:52 PM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,Not a Bug,,,fabric-samples,,,15/Dec/17 12:00 AM,0,openfiles,,,,,"* when I was run fabric-samples balance-transfer,and I use loadrunner to Pressure test ,then I find my nodejs log and that say too many open files ca.crt why ?? please help me ASAP tks!!","Ubuntu 16.04
 * root@iZuf68r73by2km15j2oh29Z:~/mry# node -v
v6.10.3
root@iZuf68r73by2km15j2oh29Z:~/mry# npm -v
5.5.1
root@iZuf68r73by2km15j2oh29Z:~/mry# docker -v
Docker version 1.13.1, build 092cba3
root@iZuf68r73by2km15j2oh29Z:~/mry# docker-compose -v
docker-compose version 1.14.0, build c7bdf9e

 ",ChristopherFerris,jeffgarratt,krw910,lishuo5263,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 4:52 PM;lishuo5263;5964e5a8fa6dc189cb916b9455dac33.png;https://jira.hyperledger.org/secure/attachment/13800/5964e5a8fa6dc189cb916b9455dac33.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyr07:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jeffgarratt,krw910,lishuo5263,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/18 6:56 AM;nage;This appears to have been incorrectly logged into INDY.;;;","17/Jan/18 2:07 AM;Clayton Sims;[~jeffgarratt]  not sure what component this goes to.   Could you kindly triage and let us know what component is best to assess this.  ;;;","18/Jan/18 5:53 AM;jeffgarratt;[~Clayton Sims] [~lishuo5263]  appears you are running out of file handles.  You can check your current limit with ""ulimit -a"" and search of the 'open files' entry.  You can try bumping this up.  If it is already large then perhaps there is an issue with respect to resources in the fabric-samples.;;;","27/Jan/18 8:55 PM;mastersingh24;This is not a bug.  It's a system configuration error.  [~jeffgarratt] is correct in his comment above.
Will leave this open but marking as medium;;;","06/Apr/18 2:36 AM;ChristopherFerris;Going to close this as it has been dormant for months now.;;;",,,,,,,,,,,,,,,,,,
Enable default factory consumption in FabSDK?,FAB-7704,26762,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,12/Jan/18 10:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 2:20 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt7b:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic shim layer using golang plugin,FAB-7705,26763,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,baohua,baohua,12/Jan/18 11:47 AM,23/Jan/20 7:22 AM,28/Oct/23 3:02 AM,23/Jan/20 7:22 AM,,,,,,,fabric-peer,,,,0,fabric-chaincode,stale-item,,,,"Golang plugin support dynamic loading lib in runtime, it would be useful to make the shim layer as plugin, then we can do shim upgrade without breaking the chaincode.

This will provide another potential option for FAB-5676.

Please help vote if think this feature is helpful.

Thanks!",,baohua,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5676,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyt7j:",,,,Unset,,,,,,Unset,,,,,,,,,,,baohua,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:22 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Orderer failed to reconnect to Kafka after reboot in an edge case,FAB-7707,26768,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,guoger,guoger,guoger,12/Jan/18 7:54 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 2:57 PM,v1.0.5,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,"If a channel has been idle (no tx) for a long time (> {{log.retention.(time)}} of kafka), and orderer has been rebooted during this period, another reboot of orderer would fail due to {{The requested offset is outside the range of offsets maintained by the server for the given topic/partition.}}

To reproduce:
1) start kafka-based OSN, submit some TXs
2) reboot orderer, so it would send a {{connect msg}} to kafka
3) wait for {{log.retention.(time)}} so all the data in Kafka are pruned
4) reboot orderer again and observe the failure

{{Connect msg}} advances Kafka offset, however lastOffsetPersisted is only advanced by TXs. In this case, when Kafka prunes data, it only records latest offset, which is a {{connect msg}} in this case. When orderer reboots again, it looks up {{lastOffsetPersisted}}, which is lost during pruning.

An interesting fact is that {{log.retention.(time)}} actually forces Kafka log roll-out, so a new segment file is created and old one can be deleted. Therefore, even if we set segment size and time to be sufficiently large, this problem still occurs.

By default, {{log.retention.(time}} is 168 hours (7 days). Sometimes users do have channels being idle for such long time, and orderer may reboot during that period.",,coosummer,guoger,jovijovi,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt7z:",,,,,,,,,,,,,,,,,,,,,coosummer,guoger,jovijovi,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jan/18 10:29 PM;kchristidis;Thanks for writing this up Jay.

I would note that:
{quote}By default, {{log.retention.(time}} is 168 hours (7 days). Sometimes users do have channels being idle for such long time, and orderer may reboot during that period.
{quote}
Until we roll out pruning, we need to correct this misconception. The only accepted {{log.retention.(time)}} value is {{-1}}, see: [https://github.com/hyperledger/fabric/blob/release/bddtests/dc-orderer-kafka-base.yml#L57]

However --

When we do enable pruning, this issue _will_ bite us for the reasons you explain. (So you're right.)

What is the fix that you have in mind? Is it [https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=7sxjDTDccd64ayL6p] or something else?;;;","16/Jan/18 10:31 AM;guoger;[~kchristidis] ah, I didn't realize this config value before. But shouldn't it be set by default in our Kafka image?

In terms of fix, the one you posted seems viable to me. But it may also depends on pruning design I guess.;;;","16/Jan/18 12:13 PM;guoger;With following kafka config:
{code}
log.retention.hours = -1
log.retention.bytes > segment.bytes = 1G (it takes ~30M connect msg to fill a segment)
{code}
I think this problem can be reasonably mitigated (not solved), as it would take ~60M orderer reboots without any TX for this problem to occur (connect msg fill up 2 log files). Am I missing anything?
cc [~kchristidis] [~sanchezl];;;","16/Jan/18 8:07 PM;kchristidis;{quote}But shouldn't it be set by default in our Kafka image?
{quote}
It should. I'm sure there was a reason for not setting it back then, but whatever it was, it is wrong now. If you submit a CR fixing this bug, we'll get it in.

{quote}With following kafka config:
{quote}
I believe so. I also want to hear Luis's take.;;;","18/Jan/18 8:23 AM;sanchezl;{quote}Until we roll out pruning, we need to correct this misconception. The only accepted {{log.retention.(time)}} value is {{-1}}, see: [https://github.com/hyperledger/fabric/blob/release/bddtests/dc-orderer-kafka-base.yml#L57]
{quote}
While this is what we officially [document|http://hyperledger-fabric.readthedocs.io/en/latest/kafka.html], we have users who insist on enabling pruning in Kafka. Maybe it's time to add the considerations for these customers to the documentation? or should we add it to the FAQ?;;;","18/Jan/18 11:02 PM;kchristidis;My take is that:
 # The hacky, pruning-enabled mode should be covered just in the FAQ, and
 # We fix {{log.retention.(time)}} to {{-1}}

Ultimately it's up to you guys though.;;;","25/Jan/18 1:03 AM;kchristidis;[~guoger], [~sanchezl] how do we proceed here and who wants to take this over?;;;","26/Jan/18 11:16 AM;guoger;https://gerrit.hyperledger.org/r/#/c/17233/;;;","02/Mar/18 8:07 PM;coosummer;how can i solve this problem.I have changed the log.retention.hours = -1,but the lastOffsetPersisted in orderer is still outside the range of offsets of the kafka .
but if i reinstall all the fabric system, the history data will be lost.
how can i do to solve the problem and retain the history data.
thanks very much!;;;","03/Mar/18 3:41 AM;kchristidis;[~coosummer]: This cannot be fixed retroactively. The original misconfiguration means that you'll have to find a way to migrate the data to a new ordering service that is correctly configured this time.;;;","07/Mar/18 4:11 PM;coosummer;@Kostas Christidis,Is there some advise or tool to migrate the data to a new orderering service,
The only way i can see is  to use a client to read the old data and write to the new service,
but the timestamp of tx is changed .
thanks very much!;;;","07/Mar/18 11:38 PM;kchristidis;Only way to migrate right now is with a client as you suggest.;;;",,,,,,,,,,,
Make plugin support a build time feature,FAB-7708,26769,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,12/Jan/18 9:00 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,15/Mar/18 6:25 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Fabric now supports adding capabilities via Go plugins in 3 areas:
- bccsp
- auth filters
- system chaincode

In order for all of this to work and for there to be no non-determinism, careful thought and planning needs to go into distributing peers with the plugins.  

Given that, the default build for a peer should not include the ability to deploy / use plugins.  

For that reason, we will add a build tag for plugin support and by default we will build the peer without the ability to load plugin.",,C0rWin,mastersingh24,smartheye,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyt87:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,mastersingh24,smartheye,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - disable behave test verify and merge CI jobs,FAB-7709,26770,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Jan/18 11:12 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jan/18 4:49 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,disable behave verify and merge CI jobs based on the discussion noted here [https://chat.hyperledger.org/channel/fabric-maintainers?msg=nAyb2cos8N82ZGwNC],,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt8f:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/18 4:49 AM;rameshthoomu;Disabled behave tests from both verify and merge jobs.;;;",,,,,,,,,,,,,,,,,,,,,,
Only allow SCC plugins with build flag,FAB-7710,26771,26769,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,12/Jan/18 11:22 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jan/18 2:30 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,ChanderGovindarajan,Huijian,mastersingh24,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt8n:",,,,,,,,,,,,,,,,,,,,,ChanderGovindarajan,Huijian,mastersingh24,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jan/18 1:37 AM;mastersingh24;https://gerrit.hyperledger.org/r/16803;;;","13/Jan/18 2:05 AM;troyronda;[~mastersingh24] [~yacovm] Shouldn't non-infrastructure SCCs be able to be supported without the determinism issues?

Should the approach end up being similar to UCC where there is ledger knowledge of the SCC (some mechanism like instantiate)?

(I'm asking as it would be good to not need go build tags to mitigate this issue and have the ability to include in ""normal"" builds).;;;","13/Jan/18 8:04 AM;yacovm;So, I agree that ideally one should not need to use a build tag in order to run a user chaincode inside the peer, AKA ""system"" chaincode.
The problem, is that we use system chaincodes for stuff that we should not use system chaincodes for, like validation of transactions.
In order for the masses not to shoot themselves in the foot by accident, we are lowering risk by simply disabling this option by default.
;;;","11/Jul/18 7:42 PM;Huijian;Anyone knows how to enable this feature? the following doesn't work.

*make peer-docker  GO_TAGS=""pluginsenabled""*;;;","13/Jul/18 3:50 PM;ChanderGovindarajan;[~Huijian], shouldn't the command be:

*GO_TAGS+="" pluginsenabled"" make peer-docker*;;;","13/Jul/18 4:15 PM;Huijian;[~ChanderGovindarajan], thanks for your attention, both commands work well, I realize that I've mis-spelled pluginsenabled to plug*g*insenabled after I check my commit history;;;",,,,,,,,,,,,,,,,,
Update documentation of orderer Kafka.Version property,FAB-7712,26774,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,13/Jan/18 1:34 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,13/Jan/18 5:32 AM,v1.0.5,,,v1.1.0,v1.1.0-alpha,,fabric-docs,,,,0,kafka,,,,,"The Fabric ordering service node configuration file contains a *Kafka.Version* configuration property which the Fabric documentation currently instructs administrators to set to the version of the Kafka brokers used with the Kafka-based orderer. It turns out that this value has less to be with the Kafka broker version, and more to do with the Kafka protocol api versions.'
h2. Proposed Changes:
 * Tweak the documentation of the  *Kafka.Version* property included in the orderer.yaml file.
 * Update the [Fabric documentation|http://hyperledger-fabric.readthedocs.io/en/latest/kafka.html] such that a Fabric orderer admin is aware that:
 * Kafka can be upgraded without altering the orderer.yaml.
 * Why you *should* update the orderer.yaml when the Kafka version is updated, e.g.:
 * Performance implications
 * Log truncation protection.

h2. About Version Compatibility

The Kafka protocol is intended to be backward compatible with older clients ([source|http://kafka.apache.org/protocol.html#protocol_compatibility]):
{quote}_The server ... will always respond to the client with exactly the protocol format it expects based on the version it included in its request._
{quote}
h2. Impacts of Protocol Version
||Kafka.Version
 in orderer.yaml||Kafka Broker Version||Notes||
|{{0.9.0}}|{{0.9.x}}| |
|{{0.9.0}}|{{0.10.x}}|Performance impacted negatively|
|{{0.9.0}}|{{0.11.0+}}|Performance impacted negatively|
|{{0.10.0}}|{{0.9.x}}|Not compatible.|
|{{0.10.0}}|{{0.10.x}}|Performance impacted positively (vs. 0.9.0)|
|{{0.10.0}}|{{0.11.0+}}|Performance impacted positively (vs. 0.9.0)|
|{{0.11.0}}|{{0.9.x}}|Not compatible.|
|{{0.11.0}}|{{0.10.x}}|Not compatible.|
|{{0.11.0}}|{{0.11.0+}}|Performance impacted positively (vs. 0.9.0 & 0.10.0)
 Better resiliency against log truncation after crash.|
h3.  ",,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-91,,,,,FAB-7330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyt93:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jan/18 4:20 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/16785/;;;",,,,,,,,,,,,,,,,,,,,,,
Missing signing on DeliverResponse ,FAB-7713,26777,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,rickr,rickr,13/Jan/18 1:52 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jan/18 3:21 AM,v1.1.0,,,Not a Bug,,,,,,,0,,,,,,"Best I can tell in events.proto there is no signing of Deliver service's rpc both Deliver and DeliverFiltered  

I think to be secure this service would need

message SignedDeliverResponse \{
   
         bytes signature = 1;  //signed signature on the below 
         bytes deliverResponse =2  // serialized DeliverResponse.
     }
 }

Right now I don't the theres any way to check any of the FilteredBlock or status. In Block
 there's no signing of the header or metadata",,C0rWin,mastersingh24,rickr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt9r:",,,,,,,,,,,,,,,,,,,,,C0rWin,mastersingh24,rickr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/18 2:07 AM;yacovm; I'm not sure why we're discussing this *now* especially since from what I recall - it has been discussed in the past.

Regarding whole (unfiltered) blocks:
Each transaction is signed by the client that sent it, and the endorsements in the transaction are signed. The orderer just sets the order of the transactions and it has the signature in the metadata which I believe is provided(?). 
Since the peer doesn't produce the block in the first place, and the block doesn't actually convey any information about the peer, there is no point in having the peer sign that information.

Regarding filtered blocks - Since the peer can easily be silent and not reveal any events to the peer, or just reveal a subset of the events, the client *has* to trust the peer.
So - what is the point in signing the messages? So the client could prove to someone else if the peer lied? But that would be too late because the client already did the business-related request. 

In my opinion, if you as a client don't trust a peer - don't use its event service and find a peer you do trust. 

Also - this is not a bug, this is a feature. 

Others, please chime in:
[~C0rWin] , [~mastersingh24] , [~jyellick] , [~elli-androulaki] , [~ales] , [~adc] ;;;","13/Jan/18 2:15 AM;C0rWin;{quote}
Regarding filtered blocks - Since the peer can easily be silent and not reveal any events to the peer, or just reveal a subset of the events, the client has to trust the peer.
So - what is the point in signing the messages? So the client could prove to someone else if the peer lied? But that would be too late because the client already did the business-related request.

In my opinion, if you as a client don't trust a peer - don't use its event service and find a peer you do trust. 
{quote}

I tend to completely agree, making peer to sign the on filtered block doesn't turn it to be more trusted. ;;;","13/Jan/18 2:50 AM;rickr;I noticed this it concerned me. Felt better to bring it up now while we're changing this.  If this has been settled before simply make this a duplicate of that JIRA.   IMO we should comment the the proto file with a pointer to that JIRA or this  why we feel it's not required.;;;","13/Jan/18 3:21 AM;mastersingh24;Right - no need for the peer to sign this.  It does not add any additional benefit.
I'm going to close this.;;;",,,,,,,,,,,,,,,,,,,
Invalid CouchDB index definitions may be packaged into chaincode installation,FAB-7715,26779,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,13/Jan/18 2:48 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 6:44 AM,,,,v1.1.0-alpha,,,fabric-ledger,,,,0,,,,,,"Invalid CouchDB index definitions may be packaged into chaincode installation, causing runtime problems when the chaincode is installed/instantiated.

Need to add filters for metadata file types and return error if unexpected files found.

See comments in [https://gerrit.hyperledger.org/r/#/c/16697/,] specifically:

[https://gerrit.hyperledger.org/r/#/c/16697/6/core/chaincode/platforms/golang/package.go]

 
 It will be nice to abstract this handing... a sketch (1) call this field ""fileType CCPackageFileType"" (2) the possible enums are \{VALIDCHAINCODEFILE, COUCHDBINDEX, INVALIDFILE}

Ideally we can attach handler for each file which will emit the SourceDescriptor or something to complete the abstraction.

More generally, add filters for metadata file types and return error if unexpected files found.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyt9z:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jan/18 9:53 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17045/;;;",,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript API testing (channel related APIs),FAB-7716,26780,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,13/Jan/18 4:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 5:36 AM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyta7:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 5:32 AM;AdnanChoudhury;Test for Channel creation, join, getting existing channels.;;;",,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript API testing (chaincode related APIs),FAB-7717,26781,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,13/Jan/18 4:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 5:35 AM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytaf:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 5:35 AM;AdnanChoudhury;Test for Install chaincode, instantiate chaincode, invoke chaincode, ;;;",,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript API testing (ledger related APIs),FAB-7718,26782,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,13/Jan/18 4:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 5:38 AM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytan:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 5:38 AM;AdnanChoudhury;Test for query of a value, get block by block number, get tx by TXid,   ;;;",,,,,,,,,,,,,,,,,,,,,,
remove test directory from fabric,FAB-7721,26785,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,scottz,scottz,13/Jan/18 5:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Apr/18 1:51 AM,v1.1.0,,,v1.2.0,,,fabric-quality,,,,1,hygiene,quality,,,,"Now that the fabric-test repository is established, we should remove everything in the test directory under hyperledger/fabric/test. The tools and tests are no longer supported there and will likely fail.

First ensure there are no CI jobs that use or refer to any of the tools or tests under this location. Then remove the entire directory structure from master development branch. And possibly from future release branches, too.",,cclauss,latitiah,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytav:",,,,,,,,,,,,,,,,,,,,,cclauss,latitiah,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Feb/18 1:01 AM;latitiah;We should also be sure that those in the community know that this code has been moved elsewhere.;;;","13/Apr/18 3:02 AM;sykesm;[https://gerrit.hyperledger.org/r/c/20503/]

[https://gerrit.hyperledger.org/r/c/20501/]

 

 ;;;",,,,,,,,,,,,,,,,,,,,,
rename def/provider/fabpvdr to pkg/fabpvdr,FAB-7722,26786,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,13/Jan/18 5:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 6:30 AM,,,,,,,,,,,0,,,,,,Duplicated by FAB-7917,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytb3:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invoke by clark start timeout when I add/remove member from channel,FAB-7723,26787,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid: Works as Expected,,wisam.mohammed,wisam.mohammed,13/Jan/18 6:04 AM,01/Dec/18 8:35 PM,28/Oct/23 3:02 AM,01/Dec/18 8:35 PM,,,,,,,fabric-peer,,,,0,,,,,,"*Description*
Invoke by clark start time out when I remove /add member from channel, and I have to restart peer in order back normal.

*Steps to reproduce the behaviour*
1- create channel via UI on clark
2-join peer >> clark
3- do instantiate on new channel {{ch1}} on clark
4- do some invoke on one peer on clark
5- stop invoke on clark
6- edit channel on clark, by add Amelia to clark channel {{ch1}}
7- Go to Amila and join here peer to channel {{ch1}} via UI
8- Amila now have same transaction clack have on {{ch1}} via UI
9- resume invoke by clark ... 1000 invoke
10. stop invoke on clark
11. edit channel on clark and approve it ... edit by remove Amila
12. invoke again on clark .. 1000 invoke
start time out after 32 invoke
*Expected behaviour*
Invoke should keep going
*Actual behaviour*
invoke timeout

 ",,denyeart,harrisob@us.ibm.com,harsha544,kchristidis,varadatibm,wisam.mohammed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/18 6:06 AM;wisam.mohammed;d8247ae2a4154cb2aa7ea99ccc64f0a4_Logs.zip;https://jira.hyperledger.org/secure/attachment/14145/d8247ae2a4154cb2aa7ea99ccc64f0a4_Logs.zip","17/Feb/18 6:48 AM;wisam.mohammed;img2.png;https://jira.hyperledger.org/secure/attachment/14633/img2.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytbb:",,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,harsha544,kchristidis,varadatibm,wisam.mohammed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/18 6:06 AM;wisam.mohammed;Attached in zip file;;;","09/Feb/18 5:10 AM;kchristidis;I'm not sure I follow what goes on here. Could you take another crack at describing what goes on here?;;;","10/Feb/18 1:15 AM;Clayton Sims;changing state to Monitor / Hold to indicate we are waiting on originator.   [~wisam.mohammed] ;;;","10/Feb/18 1:57 AM;wisam.mohammed;[~kchristidis] the issue here when you have channel and two member in it and 1st member running invoke using her/his peer.

When 2nd member decided to leave the channel and leave the 1st member alone in that channel. Then any invoke by 1st member will timeout after period of time. 

Please let me know if have question.

 

Thanks;;;","10/Feb/18 2:00 AM;kchristidis;What is the endorsement policy for the chaincode in question?;;;","10/Feb/18 3:12 AM;varadatibm;Hi Kostas,

I don't think there is any endorsement policies passed when instantiating... If there is nothing passed, I believe SDK sets it to be 'one of the orgs from the channel participants need to endorse' ;;;","10/Feb/18 3:20 AM;wisam.mohammed;Yes, [~varadatibm] know more endorsement policy. Thanks [~varadatibm];;;","14/Feb/18 3:25 AM;Clayton Sims;What is next step here?;;;","15/Feb/18 2:07 AM;denyeart;[~kchristidis] Could you try it out and assess if there is a defect here?;;;","15/Feb/18 2:30 AM;kchristidis;Sure thing. Will have a look this week.;;;","17/Feb/18 5:24 AM;kchristidis;Went through every step of this using the CLI commands and reproduced the scenario locally.

Could not reproduce the bug.

You are referring to a UI - what UI would be this?

 ;;;","17/Feb/18 6:49 AM;wisam.mohammed;IBM Blockchain Platform UI

!img2.png!;;;","17/Feb/18 9:31 AM;kchristidis;Let's do this right, given that this is not the bug tracker for IBM Blockchain. Here's a few questions:
 # What version of Fabric is this running on?
 # In Step 6, is it possible that the SDK is modifying the endorsement policy of the chaincodes in the channel? ([~harrisob@us.ibm.com]? Seems unlikely.)
 # You also note some numbers in the original description. e.g. ""1000 invoke"", ""32 invoke"". What are these exactly? Numbers of invocation? If so, can you please attempt to trim this problem to the smallest possible set of steps? (Think MWE if this were a StackOverflow thread.) For instance, in Step 12, does the first invocation work?;;;","17/Feb/18 11:53 PM;harrisob@us.ibm.com;NodeSDK does not inject or modify endorsement policies, if the application does not include one, then the system default is used.

 

When the second peer is added to the channel, is a new organization also added to the channel configuration ?? The system default endorsement policy requires endorsements from a majority of organizations... in this case that would mean both peers. Then when the peer is removed from the channel, is the channel configuration again updated to remove the organization ?? It looks like the organization is still defined the channel configuration as the commit of the invokes are not completing. This could be due to not getting a majority of endorsements from organizations defined on the channel ???;;;","18/Feb/18 12:49 PM;kchristidis;{quote}Then when the peer is removed from the channel, is the channel configuration again updated to remove the organization ??
{quote}
(This sounds like a good guess.);;;","18/Feb/18 11:42 PM;denyeart;Ok, it sounds like no bug in base Fabric.

[~wisam.mohammed] could you close this from Fabric Jira, and open a ticket against the IBM Blockchain service?;;;","20/Feb/18 6:58 AM;wisam.mohammed;[~kchristidis] [~harrisob@us.ibm.com] [~denyeart] Thanks for looking on that. Fabric/ Fabric Ca V1.0.3

Fabric [https://github.com/hyperledger/fabric/releases/tag/v1.0.3]

[https://github.com/hyperledger/fabric-ca/releases/tag/v1.0.3] 

And yes, ""1000 invoke"" mean number of invocation.

In Step 6, if the SDK is modifying the endorsement policy or not. [~varadatibm]Know more about it, I believe yes. 

And yes, in Step 12, the first invocation works.

 

 

I will closed this issue and open on UI repo. Thanks

 

 ;;;","22/Feb/18 1:43 AM;harrisob@us.ibm.com;Varad and I have discussed and he says this is on 1.0 and I have looked into the code and see that in that release NodeSDK did inject an endorsing policy if the application did not provide one. The NodeSDK builds a policy to include all the current orgs  in a '1 of [org_1, ...org_n]' So is it possible that once the org is removed from the channel that the endorsement policy fails due to a missing org ?;;;","12/Mar/18 11:53 PM;wisam.mohammed;Based on discussion between Varad and Bret, this issue need to be reopen. I will reopen it. ;;;","13/Mar/18 12:09 AM;kchristidis;Alright. What is the rationale behind re-opening this?;;;","13/Mar/18 1:42 AM;varadatibm;[~kchristidis] 

Based on SDK, the default endorsement policy is '1 of n' based on the orgs at the time of chaincode instantiation. (Bret's comment above)

When an org is removed from a channel, we need to update the endorsement policy by submitting a new chaincode instantiation? Perhaps, Wisam can experiment this and see if that fixes it.

I am not sure if I can explain why it works for about 30 invokes before it times out?;;;","13/Mar/18 3:25 AM;harrisob@us.ibm.com;I assume there is an application timeout waiting for an event listener to signal the completion of a transaction (which means the peer has committed the transaction), since the endorsement policy is not meet, the commit will never happen. There is no mechanism in the two phase fabric process  of endorsing a  transaction proposal (maybe what you might call half of an invoke) and the submitting of those endorsed transactions to the orderer (maybe what you are thinking is the other half of the invoke) to know if the whole action was actually successful. The response from the orderer when submitting, only indicates that it has accepted the transaction to be processed. Therefore the application will continue to perform ""invokes"" until it receives the timeout. This will indicate that a commit has not happened for the transaction on the peer and I believe the application logic will now think that the first ""invoke"" has failed and stop invoking, however before the timeout the application continues to invoke.;;;",
Replace Apache license header due to build error ,FAB-7724,26789,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,luomin,luomin,13/Jan/18 11:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Feb/18 1:43 AM,v1.1.0-preview,,,v1.1.0,,,fabric-build,,,,0,build-system,,,,,no error here. close this issue,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytbj:",,,,,,,,,,,,,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eventhub crashes on broadcasting same transaction blob twice,FAB-7725,26790,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,MuhammadSalah,MuhammadSalah,13/Jan/18 9:04 PM,02/Jan/19 4:31 PM,28/Oct/23 3:02 AM,18/Jan/18 9:16 PM,v1.0.4,v1.0.5,v1.1.0-preview,v1.1.0-alpha,,,fabric-peer,,,,0,,,,,,"I wanted to demonstrate how Peers refuse malicious transactions, so I looked for a way to resubmit same transaction twice like a ""double spend"" use case.
 The expected behavior, that Peers should reject the transaction, but it affects the Peers runtime.

 The steps in the github link; it runs a scenario of invoking a transaction to a chaincode; and all I did is retrieving that transaction details; and broadcasting it again.

In order to reproduce you follow the steps in the README file on the github, and then follow the steps I document down here.

I have leveraged this tool: ""fabric-prototype"" that does the basic CLI functionalities.

[https://github.com/jeffgarratt/fabric-prototype]

I run the basic scenario following the README; and everything checks out good on the network.

I check into a Python terminal: pasting all these lines

which can be found in the ""tmp"" folder under the current run ""UUID"" in the ""scenario.html""

{{from common import common_pb2 as common_dot_common_pb2}}

{{from common import configtx_pb2 as common_dot_configtx_pb2}}

{{from common import configuration_pb2 as common_dot_configuration_pb2}}

{{from common import ledger_pb2 as common_dot_ledger_pb2}}

{{from common import policies_pb2 as common_dot_policies_pb2}}

{{from msp import msp_config_pb2, msp_principal_pb2, identities_pb2}}

{{from peer import configuration_pb2 as peer_dot_configuration_pb2}}

{{from orderer import configuration_pb2 as orderer_dot_configuration_pb2}}

{{from steps import endorser_util}}

{{from steps import composer}}

{{from steps import bootstrap_util, contexthelper, compose}}

{{context = contexthelper.Context()}}

{{directory = bootstrap_util.getDirectory(context)}}

{{directory.initFromPath('tmp/<UUID>/dir.pickle') # it is usually auto generated in the scenario file.}}

{{composition = compose.Composition(context=context, projectName='<UUID>', composeFilesYaml='tmp/<UUID>/docker-compose.yml', register_and_up=False)}}

{{composition.rebuildContainerData()}}

{{context.compose_containers=composition.containerDataList}}

{{user = directory.getUser('dev0Org0')}}

{{node_admin_tuple = user.tags['consortium1-cert']}}

{{qscch = endorser_util.QSCCHelper(context=context, user=user, directory=directory, node_admin_tuple=node_admin_tuple)}}

{{user.tags.keys()}}
 {{p=user.tags['invokeProposal1']}}
 {{bootstrap_util.broadcast_channel_config_tx(context=context, certAlias=None, composeService='orderer0', user=user, configTxEnvelope=p)}}

{{The transaction blob should pass through the orderer normall ""Happens""}}
 {{The transaction blob should get rejected by the peers ""Happens""}}
 {{But the ""Eventhub"" doesn't handle it, and it crashes.}}

 

{{I traced the logs through docker logs.}}

{{I have confirmed this on all version builds, including the latest commit build.}}

 ",,C0rWin,denyeart,MuhammadSalah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/18 8:02 AM;MuhammadSalah;bypass-fix.png;https://jira.hyperledger.org/secure/attachment/14211/bypass-fix.png","17/Jan/18 3:12 AM;MuhammadSalah;firstshot.png;https://jira.hyperledger.org/secure/attachment/14207/firstshot.png","17/Jan/18 7:15 AM;MuhammadSalah;foundit.png;https://jira.hyperledger.org/secure/attachment/14210/foundit.png","13/Jan/18 9:01 PM;MuhammadSalah;image.png;https://jira.hyperledger.org/secure/attachment/14146/image.png","17/Jan/18 3:12 AM;MuhammadSalah;secondshot.png;https://jira.hyperledger.org/secure/attachment/14208/secondshot.png","17/Jan/18 3:32 AM;MuhammadSalah;thirdshot.png;https://jira.hyperledger.org/secure/attachment/14209/thirdshot.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytbr:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,MuhammadSalah,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jan/18 9:10 PM;denyeart;[~wlahti] [~jeffgarratt] Could you assess?  As this is a peer crash, we'll want to determine if a fix is possible before alpha release.;;;","17/Jan/18 1:49 AM;Clayton Sims;[~jeffgarratt]  could you let us know your thoughts/assessment here.  thanks;;;","17/Jan/18 3:12 AM;MuhammadSalah;This function is what causes the error
                    propRespPayload, err := utils.GetProposalResponsePayload(chaincodeActionPayload.Action.ProposalResponsePayload)
 I discovered it through old school debugging 
!firstshot.png!
!secondshot.png!;;;","17/Jan/18 3:30 AM;MuhammadSalah;!secondshot.png|thumbnail!;;;","17/Jan/18 3:32 AM;MuhammadSalah;In the python code we bypassed creating a proposal so the function doesn't find propsals
!thirdshot.png!;;;","17/Jan/18 3:34 AM;MuhammadSalah;I think the fix should be a suitable error handling here; in case there is no proposal it should just pop an error and continue.;;;","17/Jan/18 4:16 AM;MuhammadSalah;I think it's not a nil proposal, but it's just a bad one (Sorry for being not fully accurate, but I think problem should be addressed better now);;;","17/Jan/18 6:15 AM;C0rWin;[~MuhammadSalah] thanks for providing detailed analysis of the problem, going to add some UT to cover your use cases and provide a patch.;;;","17/Jan/18 6:18 AM;MuhammadSalah;[~C0rWin] I am already trying to work on a fix. I will be sharing what I have.;;;","17/Jan/18 7:14 AM;MuhammadSalah;I have already spotted it Payload is empty

!foundit.png!;;;","17/Jan/18 8:03 AM;MuhammadSalah;!bypass-fix.png|thumbnail!;;;","17/Jan/18 8:04 AM;MuhammadSalah;bypassed it in the getchaincode payload function just added a dummy check.;;;","17/Jan/18 8:08 AM;MuhammadSalah;This is what I exactly did; if you find it sufficing commit it; if not I was just happy to be fiddling :)

 
// GetChaincodeActionPayload Get ChaincodeActionPayload from bytes
func GetChaincodeActionPayload(capBytes []byte) (*peer.ChaincodeActionPayload, error) \{
    cap := &peer.ChaincodeActionPayload\{}
    err := proto.Unmarshal(capBytes, cap)
    if len(capBytes) == 0 \{
        return cap, errors.New(""No payload"")
    }
    return cap, err
};;;","17/Jan/18 9:22 AM;C0rWin;[~MuhammadSalah] apologize, noticed your answer a bit late, already prepared a fix: https://gerrit.hyperledger.org/r/#/c/16883/ :/, could you please rebase on top of it and make an additional check to see whenever it solves your problem?;;;","17/Jan/18 9:25 AM;C0rWin;{code}
    if len(capBytes) == 0 {
        return cap, errors.New(""No payload"")
    }
{code}

you could have that one at the beginning before even trying to unmarshal bytes. At any case thanks for your help, this is pretty much exactly what I did + add UT to cover the fix and your particular use case. ;;;","17/Jan/18 9:25 AM;C0rWin;CR: https://gerrit.hyperledger.org/r/#/c/16883/;;;","17/Jan/18 9:26 AM;MuhammadSalah;it is okay; I am thinking actually its way beyond just an empty payload; there has to be a system thats more reselient for malicious actions on the protocol level.
But thank you for considering my humble fix.;;;","17/Jan/18 9:29 AM;MuhammadSalah;I just saw what you did there; but I am not familiar with the software architecture yet; I just did it old school backlog trace. :)
I was fiddling only a bit.;;;",,,,,
Restructure/rename filtered transaction proto messages,FAB-7727,26797,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,15/Jan/18 12:14 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,15/Jan/18 4:53 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"In the [commit|https://gerrit.hyperledger.org/r/#/c/16795/5] which addresses FAB-7695 there are few changes was introduced for filtered block structure, among which was:

{code}
message FilteredProposalResponse {
    repeated FilteredChaincodeAction chaincodeActions = 1;
}
{code}

where David Enyeart commented with respect to the naming of {{FilteredProposalResponse}}

{quote}
This is not my favorite name.  I probably would have gone with something like 'FilteredChaincodeActions' to indicate that this is a set of FilteredChaincodeAction. These would come from N different ProposalResponses rather than a single ProposalResponse as your name implies.

(Note that peer doesn't currently support N TransactionActions, but the structure allows it for the future.)

That being said, the overall structure here is what we want, so I will go ahead and +2 and merge to unblock SDKs.  I'll defer to Artem if you want to do another CR to tweak the names.
{quote}

After negotiation we came to the agreement/conclusion where it make more sense to rename/restructure proto definitions in the following way:

{code}
// FilteredTransaction is a minimal set of information about a transaction
// within a block.
message FilteredTransaction {
    string txid = 1;
    common.HeaderType type = 2;
    TxValidationCode tx_validation_code = 3;
    oneof Data {
        FilteredTransactionActions transaction_actions = 4;
    }
}

// FilteredTransactionActions is a wrapper for array of TransactionAction
// message from regular block
message FilteredTransactionActions {
    repeated FilteredChaincodeAction chaincodeActions = 1;
}

//FilteredChaincodeAction is a minimal set of information about an action within a
//transaction.
message FilteredChaincodeAction {
    ChaincodeEvent ccEvent = 1;
}
{code}

which makes more sense and aligns with original definitions of block transaction structure.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzytd3:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/18 12:18 AM;C0rWin;https://gerrit.hyperledger.org/r/16825 ;;;",,,,,,,,,,,,,,,,,,,,,,
Check error on functional parameters in fabsdk,FAB-7728,26798,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,15/Jan/18 12:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jan/18 10:40 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytdb:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Update SDK options to conventions,FAB-7729,26800,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,15/Jan/18 8:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Jan/18 3:27 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytdj:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Filtered Block does not have Chaincode event payload,FAB-7730,26801,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Jan/18 12:00 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Jan/18 1:20 AM,v1.1.0-preview,,,v1.1.0-alpha,,,fabric-peer,,,,0,,,,,,"When using NodeSDK and receiving a filtered block, the chaincodeActions has a ccEvent with a payload of an empty byte array. When using the full block, the payload does have data. Fields in the filtered blocks should not have values that are different than the actual value. The field should be removed if the intent is to not show the value.",,C0rWin,denyeart,harrisob@us.ibm.com,jyellick,muralisr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytdr:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,harrisob@us.ibm.com,jyellick,muralisr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/18 4:47 PM;C0rWin;So current implementation were based on the existing filtering events [{{eventhelper.go}}|https://github.com/hyperledger/fabric/blob/master/events/producer/eventhelper.go#L97]:

{code}
						ccEvent, err := utils.GetChaincodeEvents(caPayload.Events)
						if err != nil {
							return nil, nil, """", fmt.Errorf(""error unmarshalling chaincode event for block event: %s"", err)
						}

						chaincodeAction := &pb.FilteredChaincodeAction{}
						if ccEvent.GetChaincodeId() != """" {
							filteredCcEvent := ccEvent
							// nil out ccevent payload
							filteredCcEvent.Payload = nil
							chaincodeAction.CcEvent = filteredCcEvent
						}
						transactionActions.ChaincodeActions = append(transactionActions.ChaincodeActions, chaincodeAction)
{code}

Please update if the payload *DO* need to be populated, since it wasn't beforehand.;;;","15/Jan/18 8:10 PM;denyeart;Per FAB-5481 the design was that only event name got populated, not the event payload.  This alerts a client that there was an event, but the client would have to then retrieve the full block if they want the event payload.  I'm not suggesting I agree with this, that's just what was written in FAB-5481 design.  We'll need to check with [~wlahti] and [~muralisr] on the original rationale.;;;","15/Jan/18 11:21 PM;harrisob@us.ibm.com;as a side note is there a reason the new event proto has a mix of camel case names and underscore names along with a mix of repeated names that end in 's' and those do not ?;;;","15/Jan/18 11:33 PM;C0rWin;{quote}
as a side note is there a reason the new event proto has a mix of camel case names and underscore names along with a mix of repeated names that end in 's' and those do not ?
{quote}

apparently this is a mistake;;;","15/Jan/18 11:43 PM;C0rWin;[~harrisob@us.ibm.com] to address your question please see FAB-7731 and consequent CR https://gerrit.hyperledger.org/r/16839;;;","15/Jan/18 11:50 PM;jyellick;Can we identify the original requirement for including the chaincode event in the filtered block?

To me, this sounds like a bad idea.  If the purpose of the filtered block is security oriented, then including the chaincode events (and especially their payload) seems to defeat the purpose, as it would very likely leak at least the chaincode being invoked, if not much more.;;;","16/Jan/18 12:26 AM;denyeart;I've heard the requirement to include chaincode events from a few people, I know this is important for [~troyronda] .  I agree that it can leak information.  I think Troy mentioned previously that he thought it was ok, since chaincodes can opt not to send chaincodes events.  Let's hear full rationale from Troy's perspective.  Also Troy, can you comment on the original question in Description (if including chaincode event name but not chaincode event payload is helpful)?;;;","16/Jan/18 1:01 AM;troyronda;[~denyeart] - The chaincode event name (not payload) is important for notification purposes in the filtered events. If the client is interested in that event then the client calls back to chaincode. This handling is similar to when a client receives an event for a transaction of interest then the client calls back. We are careful to ensure that chaincode event names minimize leaking.;;;","16/Jan/18 1:19 AM;C0rWin;Closing this item since it works as expected ;;;","16/Jan/18 2:24 AM;muralisr;[~C0rWin] just my two cents (great after closing the JIRA eh ? :-) but just saw the mention on RC)...  The rationale for the original requirement  was to take a middle course to _minimize leaking_  (just to piggyback on [~troyronda] comment above) but give enough information to avoid churn.  Users can further play with the CC event name to reduce the leakage if they so wish.;;;",,,,,,,,,,,,,
Fix events proto definition of filtered transaction,FAB-7731,26805,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,15/Jan/18 11:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Jan/18 4:43 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Need to make events proto definitions aligned with protobuf code guidelines, e.g. replace 

{code}
// FilteredTransactionActions is a wrapper for array of TransactionAction
// message from regular block
message FilteredTransactionActions {
    repeated FilteredChaincodeAction chaincodeActions = 1;
}
{code}

with 

{code}
// FilteredTransactionActions is a wrapper for array of TransactionAction
// message from regular block
message FilteredTransactionActions {
    repeated FilteredChaincodeAction chaincode_actions = 1;
}
{code}",,C0rWin,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7767,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytef:",,,,,,,,,,,,,,,,,,,,,C0rWin,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/18 11:50 PM;harrisob@us.ibm.com;If changes can be made how about the ccEvent ==> chaincode_event ?, and the repeated filtered_tx ==> filtered_transactions;;;","16/Jan/18 4:43 PM;C0rWin;[~harrisob@us.ibm.com]please open another JIRA since this one was merged and closed.;;;",,,,,,,,,,,,,,,,,,,,,
autoWarmIndexes should not be in peer config yaml or doc rst,FAB-7732,26806,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,16/Jan/18 12:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 6:17 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Per review comments in [https://gerrit.hyperledger.org/r/#/c/15057/] , all users will want autoWarmIndexes true, therefore the extra config will cause consumability issues and should be removed.  However, we will leave support for the config option in the peer binary, in case autoWarmIndexes needs to be disabled for unexpected service situations.",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyten:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jan/18 1:17 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/16999/;;;",,,,,,,,,,,,,,,,,,,,,,
Couchdb index warming should not be in commit path,FAB-7733,26807,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,16/Jan/18 12:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Jan/18 11:59 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Per review comments in [https://gerrit.hyperledger.org/r/#/c/15057/] , the index warming in the commit path will impact performance, it needs to be moved out of commit path in a separate goroutine or daemon.",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytev:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jan/18 1:18 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/16983/;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - create fabric-daily-s390x CI job,FAB-7734,26810,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Jan/18 4:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Jan/18 12:43 AM,,,,,,,fabric-ci,,,,0,,,,,,create fabric-daily-s390x CI job and trigger this job every day at 10:00 PM EST. Send an email to maintainers if the job is failed.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytf3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/18 9:53 AM;rameshthoomu;patch has been submitted and it's in-review;;;","17/Jan/18 12:43 AM;rameshthoomu;Patch has been merged and now this job is available in daily view;;;",,,,,,,,,,,,,,,,,,,,,
PTE supports both json and yaml input,FAB-7737,26814,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,16/Jan/18 6:45 AM,09/May/19 11:03 PM,28/Oct/23 3:02 AM,09/May/19 11:03 PM,,,,,,,fabric-quality,,,,0,,,,,,TPE supports both json and yaml inputs for service credential and tx config,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzytfj:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"30/Apr/19 11:16 PM;dongming;https://gerrit.hyperledger.org/r/#/c/31141/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE calculates interval TPS,FAB-7738,26815,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,16/Jan/18 6:53 AM,22/Jan/20 6:19 AM,28/Oct/23 3:02 AM,22/Jan/20 6:19 AM,,,,,,,fabric-quality,,,,0,,,,,,"PTE calculates TPS based on the intervals specified by the user.  The interval can be by transaction index intervalor run time interval.

For example, the interval from transaction 300 to 700 in the case that nRequest = 1000.

For example the interval from 2nd min to 7th min in the case that runDur = 10 min.

This feature allows the TPS to avoid initial and ending periods which the transactions are less busy.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|i00whf:r",,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/20 6:19 AM;scottz;Although it might be helpful, the existing tool works fine; nobody is asking for this PTE enhancement.;;;",,,,,,,,,,,,,,,,,,,,,,
Consentor error when upgraded orderers to v1.1 and left kafka at v1.0.X,FAB-7739,26816,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,suryalnvs,suryalnvs,16/Jan/18 7:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 5:49 AM,v1.1.0,,,v1.1.0,,,fabric-orderer,,,,0,quality,,,,,"When upgraded orderers from v1.0.X to v1.1 and left kafka brokers at v1.0.X, seeing the consentor error logs in orderers.
{code:java}
2018-01-12 20:29:48.185 UTC [orderer/consensus/kafka/sarama] func1 -> DEBU e18 Connected to broker at 5519eb1be81b:9092 (registered as #1)
2018-01-12 20:29:48.189 UTC [orderer/consensus/kafka/sarama] handleError -> DEBU e19 producer/broker/1 state change to [closing] because kafka: insufficient data to decode packet, more bytes expected
2018-01-12 20:29:48.189 UTC [orderer/consensus/kafka/sarama] Close -> DEBU e1a Closed connection to broker 5519eb1be81b:9092
2018-01-12 20:29:48.189 UTC [orderer/consensus/kafka] try -> DEBU e1b [channel: ed9f19] Need to retry because process failed = kafka: insufficient data to decode packet, more bytes expected
2018-01-12 20:29:50.902 UTC [common/deliver] Handle -> WARN e1c Error reading from 172.18.0.12:41400: rpc error: code = Canceled desc = context canceled
2018-01-12 20:29:50.903 UTC [orderer/common/server] func1 -> DEBU e1d Closing Deliver stream
2018-01-12 20:29:59.693 UTC [orderer/common/server] Deliver -> DEBU e1e Starting new Deliver handler
2018-01-12 20:29:59.693 UTC [common/deliver] Handle -> DEBU e1f Starting new deliver loop for 172.18.0.15:35832
2018-01-12 20:29:59.693 UTC [common/deliver] Handle -> DEBU e20 Attempting to read seek info message from 172.18.0.15:35832
2018-01-12 20:29:59.693 UTC [common/deliver] deliverBlocks -> WARN e21 [channel: com.acme.blockchain.jdoe.channel1] Rejecting deliver request for 172.18.0.15:35832 because of consenter error
2018-01-12 20:29:59.694 UTC [common/deliver] Handle -> DEBU e22 Waiting for new SeekInfo from 172.18.0.15:35832
2018-01-12 20:29:59.695 UTC [common/deliver] Handle -> DEBU e23 Attempting to read seek info message from 172.18.0.15:35832
2018-01-12 20:30:09.696 UTC [common/deliver] Handle -> WARN e24 Error reading from 172.18.0.15:35832: rpc error: code = Canceled desc = context canceled
2018-01-12 20:30:09.696 UTC [orderer/common/server] func1 -> DEBU e25 Closing Deliver stream
{code}",Commit Level: {color:#444444}60fc1e99f863bb5c47c1dde78e5e32acf9e7e203{color},denyeart,jyellick,sanchezl,scottz,smartheye,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-65,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytfz:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,sanchezl,scottz,smartheye,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/18 5:35 AM;denyeart;[~suryalnvs] Are you working this as a fabric-quality test issue?  Or are you expecting an orderer developer to look at it?

If the latter, then please assign to component fabric-orderer and then we can ask somebody like [~jyellick] to look at it.;;;","20/Jan/18 6:36 AM;jyellick;For what it's worth, the current default in {{orderer.yaml}} requires a higher version of Kafka than we shipped with.  This is almost definitely the source of your error.  I'll raise this with the rest of the orderer team to see whether we want to re-examine this default bump.;;;","20/Jan/18 6:43 AM;scottz;When we do NOT set the ORDERER_KAFKA_VERSION=0.9.0.1 in docker compose file, and let it default to its internal default (0.9 in v1.0.x, and 0.10 in v1.1), we see this happen when we upgrade the orderers. Yes if we DO set that env var, which means the upgraded v1.1 orderer also uses 0.9, then there is no problem. Yes a simple solution would be to set the min version to 0.9.0.1 by default in v1.1 orderer configuration. This has been troubleshooted (not a real word, but hey, it makes sense here) with Luis, so he is aware of the issue.;;;","25/Jan/18 5:49 AM;sanchezl;The upgrade documentation will reflect the need to set the {{ORDERER_KAFKA_VERSION}} property when upgrading using the docker images. FAB-7887 will enhance the logging output to provide a hint that the Kafka version property might need to be updated. ;;;",,,,,,,,,,,,,,,,,,,
[CI] - remove thirdparty images reference from fabric release jobs,FAB-7740,26817,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Jan/18 10:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jan/18 11:19 PM,,,,,,,fabric-ci,,,,0,,,,,,"remove thirdparty image (couchdb, kafka and zookeeper) references from fabric release jobs as these reference has been deleted from fabric repository and moved to fabric-baseimage repository.

Also, create new jobs to publish these images to dockerhub from baseimage repo.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytg7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/18 12:43 AM;rameshthoomu;patch has been submitted and it;s in review. https://gerrit.hyperledger.org/r/#/c/16857/;;;","18/Jan/18 11:19 PM;rameshthoomu;Patch has been merged. Now we publish ""peer, orderer, tools, javaenv and ccenv"" to hyperledger dockerhub account. Will push thirdparty images (Couchdb, kafka and zookeeper) through fabric-baseimage repository;;;",,,,,,,,,,,,,,,,,,,,,
Alleviating the lock contention for chaincode GRPC stream,FAB-7744,26821,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yoheiueda,yoheiueda,16/Jan/18 2:29 PM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,,,,,,,fabric-peer,,,,0,stale-item,,,,,"I analyzed goroutine proifles of Fabric peer, and found that the lock that guards the GRPC stream for the communication between peer and chaincode causes heavy lock contention.

[https://github.com/hyperledger/fabric/blob/v1.1.0-preview/core/chaincode/handler.go#L139]

I think removing this lock contention is important to improve the overall performance. I implemented a proof-of-concept code, and obtained 10% throughput improvement in my workload, and I think performance gain will become larger when the other bottlenecks in Fabric are fixed.

I come up with three ideas to alleviate this lock contention.

 
----
*Solution 1: Lock Sharding*

One straightforward solution is to use lock sharding.  Lock sharding is a technique that split a single lock into multiple locks.  A similar technique is used in Java’s ConcurrentHashMap.

To use multiple locks, we need to establish a fixed number of multiple GRPC streams between peer and chaincode in advance, and manage relationship between each transaction and a used GRPC stream.

*Solution 2: Opposite TLS connection*

Currently, the TLS connection for GRPC is established from chaincode to peer.  In this case, chaincode is GRPC server and chaincode is GRPC client.  If this connection direction can be reversed, we can initiate a new GRPC stream per transaction.  With this change, we don’t need to guard each GRPC stream by a giant lock.  

Initiating a GRPC connection from peer will need a lot of code changes in Fabric, but will simply the code of managing transactions. For example, currently we need to manage mapping of transaction contexts in order to correctly handle responses from chaincode, but if we use this solution, each transaction uses a dedicated stream for chaincode communication, so we don’t need to manage such relationship.

*Solution 3:  Reversal GRPC connection*

We can create a new GRPC connection using an existing TLS connection. This means that we can establish a TLS connection from chaincode to peer, and then create a new GRPC connection from peer to chaincode using the established TLS connection.

Using this technique, we can obtain all benefit of Solution 2 without changing the direction of TLS connection.
----
I implemented a toy benchmark program that compares these 3 solutions as well as original approach.

[https://github.com/yoheiueda/grpc-test]

The result shows these three techniques show about 30% better performance than the original one.

I think Solution 3 (reversal GRPC connection) is best one among three, so I am currently working of a proof-of-concept implementation of solution 3, and obtained 10% TPS improvement. I will post the PoC code later as a comment when I finish cleaning my code.

 ",,C0rWin,denyeart,inatatsu,moriohara,nikileshsa,qizhang87,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyth3:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,inatatsu,moriohara,nikileshsa,qizhang87,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/18 8:56 PM;yacovm;If we could have multiple gRPC streams, and multiple goroutines handling them - that should (in my opinion) increase the endorsement throughput by hundreds of percentages. 
What we need, IMO is just to have the chaincode shim open several connections to the peer and the peer would register them to the same chaincode.  ;;;","25/Aug/18 4:24 AM;yacovm;{quote}The result shows these three techniques show about 30% better performance than the original one.
{quote}
30% performance when doing what? Is this a micro-benchmark ? a macro-benchmark? What is the setup and evaluation being done?

 
{quote}we need to establish a fixed number of multiple GRPC streams between peer and chaincode in advance
{quote}
Back in the old days of the chaincode, before the massive refactoring that [~sykesm] and [~jyellick] did - I tried to do just that, but the change was too intrusive and the chaincode code itself was in a state that was too unmaintainable so I gave up, but - I think it's definitively the way to go:
 * Doesn't change API between the peer and the shim
 * Should be centered around specific areas

 
{quote}*Solution 2: Opposite TLS connection*
{quote}
The problem with this, is that the chaincode needs to be accessible and resolvable from the peer and you need to adjust the peer's code to every environment the chaincode container would run in (for example-  what if the DNS record of the chaincode container are only updated once it is created? what if there is a delay when doing that? etc.) , while in the existing way you don't need to worry about this because you know that the chaincode can always contact the peer. 

Overall as you said - this requires a big amount of code change in fabric.

 
{quote}*Solution 3:  Reversal GRPC connection*
{quote}
Doesn't this require changing the protobuf API between the chaincode and the peer? 
The fact that the chaincode initiates a TLS connection doesn't mean that the peer can initiate a connection to the chaincode via that connection, or at least this would require some massive gRPC hacking, no?

 

 ;;;","27/Aug/18 6:29 PM;yoheiueda;{quote}30% performance when doing what? Is this a micro-benchmark ? a macro-benchmark? What is the setup and evaluation being done?
{quote}
I did the experiment with a proprietary code.  I think I need to do the same experiments with the latest refactored code and PTE.
{quote}I tried to do just that, but the change was too intrusive and the chaincode code itself was in a state that was too unmaintainable so I gave up, but - I think it's definitively the way to go:
 * Doesn't change API between the peer and the shim
 * Should be centered around specific areas{quote}
I understand your points.  I agree that adopting multiple GRPC streams meets these two points.
{quote}Doesn't this require changing the protobuf API between the chaincode and the peer?
{quote}
The protobuf API will change with this approach.
{quote}The fact that the chaincode initiates a TLS connection doesn't mean that the peer can initiate a connection to the chaincode via that connection, or at least this would require some massive gRPC hacking, no?
{quote}
We can start an GRPC connection using an existing established TLS connection via the {{grpc.WithDialer }}option.

This code spinet shows how it works:

[https://github.com/yoheiueda/grpc-test/blob/master/reversal.go#L56-L60]

Then, we can initiate a new GRPC stream per a invoke transaction.

I believe this change will simply chaicnode-related code. For example, if we maintain each transaction with one GRPC stream, we don't need to maintain mapping between transaction ID and transaction context, so we can also remove the mutex lock for it.  However, the amount of required code changes of this approach will be large.

 

I will rethink how to implement Solution 1 first with the latest refactored code, and estimate possible performance gains.;;;","06/Feb/19 5:46 PM;yoheiueda;The phase 2 design proposed in [FAB-13582] uses the opposite TLS connection described in Solution 2 showed in this JIRA issue.

I think this lock contention issue should be addressed with [FAB-13582]. When  [FAB-13582] is implemented, we will be able consider the Solution 2 approach.;;;","23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,
Document Experimental build tag and Experimental features,FAB-7746,26825,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,,denyeart,denyeart,16/Jan/18 9:03 PM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,Future,,,fabric-docs,,,,1,Release-planning-1.1-PostAlpha,Release-planning-1.1-TechPreview,,,,Document Experimental build tag and Experimental features.,,ChristopherFerris,denyeart,guillaume.a,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6020,,,,,,,,,,,,,,FAB-1973,FAB-2005,FAB-1151,FAB-3621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwtun:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,guillaume.a,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/May/18 9:43 PM;ChristopherFerris;moving this to low for 1.2, as it affects only the developers of Fabric.;;;","10/May/18 9:13 PM;denyeart;Actually we have decided that we are not well set up for Experimental features yet.  The v1.1 Experimental features will become production features in v1.2, and we will not introduce new ones.  Code that is not ready will simply get held out as unmerged CRs, or disabled through other code/flag mechanisms. So this task is no longer needed.  Marking invalid.;;;",,,,,,,,,,,,,,,,,,,,,
as a fabric administrator I need documentation and example of how to use FAB-5664,FAB-7750,26839,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,angelo.decaro,angelo.decaro,16/Jan/18 11:29 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,17/Jan/18 5:09 AM,,,,v1.1.0,,,fabric-crypto,,,,0,Documentation,,,,,"FAB-5664 enhances the MSP infrastructure to tell apart fabric network nodes as clients, peers or orderers. In order to leverage this functionality, fabric needs to be configured in the appropriate way. Therefore, proper documentation and examples are needed.

[~ellaki], [~muralisrini], [~denyeart].",,angelo.decaro,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzytjj:",,,,Unset,,,,,,Unset,,,,,,,,,,,angelo.decaro,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/18 5:08 AM;denyeart;Sorry, I realized FAB-6547 was already created for FAB-5664 docs.  Let's cancel this one and use the original FAB-6547.;;;",,,,,,,,,,,,,,,,,,,,,,
chaincodeid should not be in couchdb document data envelope,FAB-7752,26841,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,17/Jan/18 12:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 3:19 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Now that there are couchdb databases per chaincode, the chaincode header that gets implicitly added to the data, to queries, and to indexes gets in the way and can cause issues for the user, it should be removed.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytjz:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/18 12:17 AM;denyeart;[~Senthil1] Could you help on this one?;;;","20/Jan/18 3:19 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16943/;;;",,,,,,,,,,,,,,,,,,,,,
Fabric MAINTAINERS (rst/html) lists are not in synch,FAB-7753,26842,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,JonathanLevi,JonathanLevi,JonathanLevi,17/Jan/18 12:29 AM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,v1.0.5,,,Future,,,,,,,0,stale-item,,,,,"The MAINTAINERS file in readthedocs.io is out of synch with [https://github.com/hyperledger/fabric/blob/master/docs/source/MAINTAINERS.rst]

 

Compared to what people see when they go to [http://hyperledger-fabric.readthedocs.io/en/release/MAINTAINERS.html] 
h1. Maintainers
||Name||Gerrit||GitHub||RocketChat||email||
|Artem Barger|c0rwin|c0rwin|c0rwin|[bartem@il.ibm.com|mailto:bartem%40il.ibm.com]|
|Binh Nguyen|binhn|binhn|binhn|[binhn@us.ibm.com|mailto:binhn%40us.ibm.com]|
|Chris Ferris|ChristopherFerris|christo4ferris|cbf|[chris.ferris@gmail.com|mailto:chris.ferris%40gmail.com]|
|Dave Enyeart|denyeart|denyeart|dave.enyeart|[enyeart@us.ibm.com|mailto:enyeart%40us.ibm.com]|
|Gabor Hosszu|hgabre|gabre|hgabor|[gabor@digitalasset.com|mailto:gabor%40digitalasset.com]|
|Gari Singh|mastersingh24|mastersingh24|garisingh|[gari.r.singh@gmail.com|mailto:gari.r.singh%40gmail.com]|
|Greg Haskins|greg.haskins|ghaskins|ghaskins|[gregory.haskins@gmail.com|mailto:gregory.haskins%40gmail.com]|
|Jason Yellick|jyellick|jyellick|jyellick|[jyellick@us.ibm.com|mailto:jyellick%40us.ibm.com]|
|Jim Zhang|jimthematrix|jimthematrix|jzhang|[jim_the_matrix@hotmail.com|mailto:jim_the_matrix%40hotmail.com]|
|Jonathan Levi|JonathanLevi|JonathanLevi|JonathanLevi|[jonathan@hacera.com|mailto:jonathan%40hacera.com]|
|Keith Smith|smithbk|smithbk|smithbk|[bksmith@us.ibm.com|mailto:bksmith%40us.ibm.com]|
|Kostas Christidis|kchristidis|kchristidis|kostas|[kostas@gmail.com|mailto:kostas%40gmail.com]|
|Manish Sethi|manish-sethi|manish-sethi|manish-sethi|[manish.sethi@gmail.com|mailto:manish.sethi%40gmail.com]|
|Sheehan Anderson|sheehan|srderson|sheehan|[sranderson@gmail.com|mailto:sranderson%40gmail.com]|
|Srinivasan Muralidharan|muralisr|muralisrini|muralisr|[muralisr@us.ibm.com|mailto:muralisr%40us.ibm.com]|
|Tamas Blummer|TamasBlummer|tamasblummer|tamas|[tamas@digitalasset.com|mailto:tamas%40digitalasset.com]|
|Yacov Manevich|yacovm|yacovm|yacovm|[yacovm@il.ibm.com|mailto:yacovm%40il.ibm.com]|
|Yaoguo Jiang|jiangyaoguo|jiangyaoguo|jiangyaoguo|[jiangyaoguo@gmail.com|mailto:jiangyaoguo%40gmail.com]|
----
 ",,JonathanLevi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzytk7:",,,,Unset,,,,,,Unset,,,,,,,,,,,JonathanLevi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
"Fix long database names - truncate/hash channel,chaincode,collection name while creating couchdb database",FAB-7754,26843,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,Senthil1,Senthil1,17/Jan/18 1:13 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 2:49 AM,,,,v1.1.0-alpha,,,fabric-ledger,,,,0,Ledger,,,,,"Currently, we create database in the couchDB with following naming convention:
1. channel DB – channelName_
2. namespace/chaincode DB - channelName_namespace
3. collection DB - channelName_namespace$pcollectionName 
 
As the length of CouchDB database name cannot be greater than 249 characters, we need to truncate the length of name. To avoid collision between dbName due to collision, we need to append sha256 hash of untruncated dbName to the truncated dbName. ",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7130,,,,,,,,FAB-7131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytkf:",,,,,,,,,,,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/18 1:51 AM;Clayton Sims;[~denyeart]  is this must fix for alpha?;;;","17/Jan/18 2:16 AM;denyeart;[~Clayton Sims] Yes, this should be fixed for alpha.  [~Senthil1] is making good progress, therefore I don't expect any issue.;;;","19/Jan/18 2:14 AM;Clayton Sims;https://gerrit.hyperledger.org/r/c/16933/;;;",,,,,,,,,,,,,,,,,,,,
PTE changes gen_cfgInputs sample cc to 8 bytes,FAB-7755,26844,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,17/Jan/18 1:44 AM,16/Apr/19 4:58 AM,28/Oct/23 3:02 AM,16/Apr/19 4:58 AM,,,,,,,fabric-quality,,,,0,,,,,,Change sample cc payload to 8 bytes used by gen_cfgInputs.sh.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzytkn:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"16/Apr/19 3:40 AM;dongming;https://gerrit.hyperledger.org/r/#/c/30948/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE adds chan0 in gen_cfgInputs.sh,FAB-7756,26845,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,17/Jan/18 1:49 AM,16/Apr/19 6:51 AM,28/Oct/23 3:02 AM,16/Apr/19 6:51 AM,,,,,,,fabric-quality,,,,0,,,,,,"add option chan0 in gen_cfgInputs to allow user to specify the starting channel of the test

 ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzytkv:",,,,Unset,,,,,,Unset,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"16/Apr/19 4:07 AM;dongming;https://gerrit.hyperledger.org/r/#/c/30949/;;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB unit tests fail for CouchDB 2.1.1,FAB-7757,26846,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,17/Jan/18 2:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Jan/18 11:22 PM,,,,v1.1.0-alpha,,,fabric-ledger,,,,0,,,,,,"Index definitions in CouchDB 2.1.1 allow for a Partial Filter Selector in the index definition.   When an index definition is returned by CouchDB, it now includes this as part of the JSON response.  The unit test needs to verify that the correct field and sort is in the JSON response and ignore the rest of the index definition.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytl3:",,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/18 2:36 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/16869/;;;",,,,,,,,,,,,,,,,,,,,,,
There are extra format 'verbs' in core/chaincode/shim/handle.go,FAB-7758,26847,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,17/Jan/18 2:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 6:15 AM,v1.0.5,v1.1.0-preview,,v1.1.0,,,fabric-peer,,,,0,quality,,,,,"There are extra format 'verbs' in core/chaincode/shim/handle.go.
In errFunc() error message have 3 format verbs, but it had set only 2 arguments.
As a result, error message shows extra string.

{code:java}
// Call chaincode's Run
// Create the ChaincodeStub which the chaincode can use to callback
stub := new(ChaincodeStub)
err := stub.init(handler, msg.ChannelId, msg.Txid, input, msg.Proposal)
if nextStateMsg = errFunc(err, nil, stub.chaincodeEvent, ""[%s]Init get error response [%s]. Sending %s"", shorttxid(msg.Txid), pb.ChaincodeMessage_ERROR.String()); nextStateMsg != nil {
  return
}
{code}",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytlb:",,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/18 3:33 AM;nnao;https://gerrit.hyperledger.org/r/#/c/16875/;;;",,,,,,,,,,,,,,,,,,,,,,
System Test: Set TLS to false with mutual TLS set to true,FAB-7759,26848,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,17/Jan/18 2:43 AM,01/Aug/19 10:07 AM,28/Oct/23 3:02 AM,17/Feb/18 5:25 AM,,,,,,,fabric-quality,,,,0,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7118,,,,,FAB-7762,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytlj:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"02/Feb/18 12:23 AM;latitiah;https://gerrit.hyperledger.org/r/17413;;;",,,,,,,,,,,,,,,,,,,,,,
System Test: Swap certs for different systems (basic TLS and mutual TLS),FAB-7760,26849,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,17/Jan/18 2:44 AM,28/Jul/19 1:35 AM,28/Oct/23 3:02 AM,28/Jul/19 1:35 AM,,,,,,,fabric-quality,,,,0,,,,,,"There are specified certificate/key files that are used for mutual TLS/ClientAuth and separate for ""normal"" TLS, if these certs are swapped, the handshake between client and server should fail. ",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytlr:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 1:35 AM;mastersingh24;no longer needed;;;",,,,,,,,,,,,,,,,,,,,,,
System Test: Expire certs in different systems (basic TLS and mutual TLS),FAB-7761,26850,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,17/Jan/18 2:45 AM,28/Jul/19 1:35 AM,28/Oct/23 3:02 AM,28/Jul/19 1:35 AM,,,,,,,,,,,0,,,,,,"Create separate testcases for ensuring many parts of the fabric code check for expired certificate and reject it:
 * Send TX Proposal with an expired cert to the peers for endorsement.
 * After peers endorse a TX, the cert expires while SDK has it. Broadcast an endorsed TX to the orderer with an expired cert.
 * After orderer processes it and sends it to kafka, using a long batchtimeout so the cert can expire, then kafka and orderer delivers it with an expired cert to the peers for validation.

And, can the certificates be renewed easily? Investigate and try the process for renewal before expiry and after expiry.",,latitiah,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytlz:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 1:35 AM;mastersingh24;no longer needed;;;",,,,,,,,,,,,,,,,,,,,,,
Unclear mutual TLS flag behavior,FAB-7762,26851,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,latitiah,latitiah,17/Jan/18 3:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Jan/18 8:02 PM,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,"With 2 flags being used for specifying when TLS and mutual TLS is used, there is a combination where the expected behavior is not clear - when setting CORE_PEER_TLS_ENABLED=true and CORE_PEER_TLS_CLIENTAUTHREQUIRED=false. 

Ideally, there would be an enumerated list containing values along the lines of ""OFF, TLS, MUTUAL_TLS"".

The following table expresses the assumed behavior:
||TLS_ENABLED||TLS_CLIENTAUTHREQUIRED||Expected Behavior||
|false|false|TLS turned off completely|
|false|true|????|
|true|false|regular TLS turned on|
|true|true|mutual TLS turned on|",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6715,,,,,,,,FAB-7759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytm7:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/18 9:14 AM;mastersingh24;It is pretty standard to have separate options for TLS and then mutual TLS.  So not exactly sure what the ask here is?  If you don't enable TLS, then mutual TLS is not applicable.;;;","23/Jan/18 4:19 AM;latitiah;This is about usability. If you have a single variable with multiple possible values, this would be easier to understand the expected behavior. Possible values can be: ""Disabled"", ""Client_auth"", ""Server_auth"", ""Client_optional"", etc... 

Separate option doesn't mean that it has to be a separate flag.;;;","23/Jan/18 8:02 PM;mastersingh24;We can't break backwards compatibility.  peer.tls.enabled exists today and can only take a boolean value.  We cannot change that.
And creating a different flag which overrides that setting does not seem consumable either.  So I don't really see a better option other than having a separate flag for client auth.  ;;;",,,,,,,,,,,,,,,,,,,,
Test Scenario: revoke certificate of an existing user from older version and ensure user cannot be reenrolled after upgrade,FAB-7764,26862,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,17/Jan/18 4:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Jan/18 4:53 AM,,,,,,,,,,,0,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytmn:",,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for Peer management of CouchDB indexes,FAB-7766,26867,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,denyeart,denyeart,17/Jan/18 5:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Jan/18 2:35 AM,,,,v1.1.0-alpha,,,fabric-docs,,,,0,release-planning-1.1,,,,,Documentation for Peer management of CouchDB indexes,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytn3:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/18 7:28 PM;denyeart;[~joe-alewine]

Raw documentation of couchdb index management can be found at: [https://docs.google.com/document/d/1pkY7LrHJ_0h0JmqSvKPFTFEXlKPMq6LdhuK_-EYeCcA/edit?usp=sharing] .

I'm proposing to split the existing *Ledger* topic into a *Ledger* topic and *CouchDB as State Database* topic. Both topics are included in the google doc. New doc content is in blue, notes to editor is in red. Anybody can make comments/suggsetions inline in the google doc.

FYI [~chris.elder] [~manish-sethi] [~Clayton Sims] [~AdnanChoudhury] [~scottz];;;","23/Jan/18 3:53 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17057/;;;","27/Jan/18 12:42 AM;joe-alewine;In docs:

http://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html;;;",,,,,,,,,,,,,,,,,,,,
Fix events proto definition of filtered transaction,FAB-7767,26869,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,17/Jan/18 12:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jan/18 12:22 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"to make events proto definitions aligned with protobuf code guidelines, e.g. replace
{code:java}
// FilteredTransactionActions is a wrapper for array of TransactionAction
// message from regular block
message FilteredChaincodeAction {
     ChaincodeEvent ccEvent = 1;
}


message FilteredBlock {
string channel_id = 1;
uint64 number = 2; // The position in the blockchain
repeated FilteredTransaction filtered_tx = 4;
}

{code}
with
{code:java}
// FilteredTransactionActions is a wrapper for array of TransactionAction
// message from regular block
message FilteredChaincodeAction {
     ChaincodeEvent chaincode_event = 1;
}

message FilteredBlock {
string channel_id = 1;
uint64 number = 2; // The position in the blockchain
repeated FilteredTransaction filtered_transaction = 4;
}
{code}",,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,60,60,,0%,60,60,,,,,,,,,,,,,,,,,FAB-7731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytnj:",,,,,,,,,,,,,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"if FABRIC_CFG_PATH set to non existant directory, peer panics",FAB-7769,26875,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,john.d.sheehan,john.d.sheehan,john.d.sheehan,17/Jan/18 9:36 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 3:11 AM,,,,,,,fabric-peer,,,,0,,,,,,"to reproduce

```
 go get github.com/hyperledger/fabric
 cd $\{GOPATH}/src/github.com/hyperledger/fabric/peer
 go build
 export FABRIC_CFG_PATH=/asdfasd
 ./peer

./peer
 panic: Fatal error when initializing core config : error when reading core config file: Unsupported Config Type """"

goroutine 1 [running]:
 main.main()
 /home/vagrant/golang/src/github.com/hyperledger/fabric/peer/main.go:77 +0x7b6
 ```",all,john.d.sheehan,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyton:",,,,,,,,,,,,,,,,,,,,,john.d.sheehan,mastersingh24,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/18 6:39 PM;mastersingh24;[~john.d.sheehan] - What do you think should happen here?;;;","21/Jan/18 7:19 PM;mastersingh24;https://gerrit.hyperledger.org/r/16897;;;","31/Jan/18 3:11 AM;wlahti;The above CR was merged on January 24. Marking this JIRA complete.;;;",,,,,,,,,,,,,,,,,,,,
Orderer panics when config file not found,FAB-7770,26876,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,john.d.sheehan,john.d.sheehan,john.d.sheehan,17/Jan/18 9:59 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,17/Feb/18 1:24 AM,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,"to reproduce

go get github.com/hyperledger/fabric
 cd $\{GOPATH}/src/github.com/hyperledger/fabric/orderer
 go build

export FABRIC_CFG_PATH=/faddf

./orderer 
2018-01-17 12:58:18.960 UTC [orderer/common/config] Load -> CRIT 001 Error reading configuration: Unsupported Config Type """"
panic: Error reading configuration:Unsupported Config Type """"

goroutine 1 [running]:
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panic(0xc42021c060, 0xc4201a1560, 0x2, 0x2)
    /home/vagrant/golang/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:188 +0xc7
github.com/hyperledger/fabric/orderer/common/localconfig.Load(0xc420120300)
    /home/vagrant/golang/src/github.com/hyperledger/fabric/orderer/common/localconfig/config.go:265 +0x430
github.com/hyperledger/fabric/orderer/common/server.Main()
    /home/vagrant/golang/src/github.com/hyperledger/fabric/orderer/common/server/main.go:73 +0xe2
main.main()
    /home/vagrant/golang/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20",,john.d.sheehan,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzytov:",,,,Unset,,,,,,Unset,,,,,,,,,,,john.d.sheehan,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Feb/18 6:35 AM;sanchezl;This is the expected behavior.;;;","08/Feb/18 2:35 AM;Clayton Sims;looks like we need a better message here to match similar situation in the peer.;;;","09/Feb/18 5:04 AM;kchristidis;https://gerrit.hyperledger.org/r/c/17241/;;;",,,,,,,,,,,,,,,,,,,,
Refactor config impl constructor,FAB-7771,26878,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,18/Jan/18 12:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jan/18 8:17 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Config impl should have

New(io.Reader)

FromFile(name string)

FromRaw(raw bytes[])

This impl will then be used for the fabsdk.New constructor in most cases.",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-444,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytp3:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario : GoCC-UpgradeIn3Channel-addedIndex-3channels,FAB-7772,26879,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,18/Jan/18 2:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 11:59 PM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytpb:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 6:09 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: LevelDB selected as stateDB, works ok with no indexes etc",FAB-7773,26880,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,18/Jan/18 2:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 11:35 PM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytpj:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/May/18 11:37 PM;AdnanChoudhury;This test will not be automated/part of the CI.;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: No indexes defined, no indexes created",FAB-7774,26881,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,18/Jan/18 2:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 11:41 PM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytpr:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/May/18 11:41 PM;AdnanChoudhury;Manually done, will not be in CI.;;;",,,,,,,,,,,,,,,,,,,,,,
Malformed index in metadata file,FAB-7775,26882,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,18/Jan/18 2:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 11:40 PM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytpz:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/May/18 11:40 PM;AdnanChoudhury;This was done manually. It will not be submitted in CR/added in CI.;;;",,,,,,,,,,,,,,,,,,,,,,
Peer panic if invalid couchdb index json passed to chaincode instantiate,FAB-7777,26884,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,denyeart,denyeart,18/Jan/18 3:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Feb/18 4:26 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Since couchdb indexes that are included in chaincode installation package are deployed at time of instantiation in the commit path, if there are errors deploying the indexes to couchdb (e.g. bad index definition provided or an operational issue on a single peer's couchdb), then the commit path cannot continue processing subsequent blocks and peer panics.

Here is an example panic of current behavior:

2018-01-17 05:10:49.132 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 3b1 Reading artifact from file: META-INF/statedb/couchdb/indexes/indexOwner_BAD.json
 2018-01-17 05:10:49.132 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 3b2 Creating index from file file: indexOwner_BAD.json
 2018-01-17 05:10:49.132 UTC [couchdb] CreateIndex -> DEBU 3b3 Entering CreateIndex()  indexdefinition=XXXXXXXXXXXXX BAD JSON data XXXXXXXXXXX
 2018-01-17 05:10:49.132 UTC [cceventmgmt] HandleChaincodeDeploy -> WARN 3b4 Error while invoking a listener for handling chaincode install event: JSON format is not valid
 2018-01-17 05:10:49.132 UTC [gossip/state] commitBlock -> ERRO 3b5 Got error while committing(JSON format is not valid
 commit failed
 github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:225
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
 runtime.goexit
     /opt/go/src/runtime/asm_amd64.s:2337
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:782
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
 runtime.goexit
     /opt/go/src/runtime/asm_amd64.s:2337)",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8268,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0d3:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jan/18 3:50 AM;denyeart;-----------FAB-3067----------- proposed adding *peer.ledger.state.couchDBConfig.autoDeployChaincodeIndexes* config option so that if an error like this was hit, the peer admin could suspend auto index deployment, and bring peer back up so that the chaincode instantiate transaction could be processed successfully without the index deployment.  This is fine for peer committing blocks, but without the index the peer may not be able to perform some chaincode queries.  The index would have to be deployed by some other means to make the peer fully capable of executing chaincode queries.  This may be sufficient if the error happened on a single peer, but if the index fails to be deployed due to invalid index json, it would fail on all peers in the network.  In that case a new chaincode installation package (new version) would need to be provided with fixed indexes, and instantiated on the channel.

The takeaway here is twofold:

1) Administrators of peers must pre-test all chaincode installation packages before installing the chaincode package on production peers, to protect against such scenarios. One would hope that this testing is performed regardless, but this new issue makes the pre-testing all the more critical.

2) Peer needs built-in protection against such index create failures rather than panic, as index creation is not needed for commits, and therefore index creation failure should not block peer's committer role.  

-------FAB-7715------- and -------FAB-7863------- added couchdb index validation checks at chaincode packaging time, which improves the chance that index creation will succeed at runtime.  But there is still possibility that index create fails at runtime for unexpected reasons, potentially on a single peer's couchdb database. This work item will suppress the peer panic and simply log the error.

In future work item FAB-8268, a mechanism to re-process failed index create statements is proposed.

 

 ;;;","14/Feb/18 8:21 PM;denyeart;Initial CR proposed writing failed index create statements to another directory for re-processing:

[https://gerrit.hyperledger.org/r/#/c/17425/]

Current CR simply logs the error and proposes re-processing feature to be added in FAB-8268:

[https://gerrit.hyperledger.org/r/#/c/17971/]

 ;;;",,,,,,,,,,,,,,,,,,,,,
Private data collections - couchdb indexes applied to collection databases,FAB-7779,26900,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,18/Jan/18 5:17 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,22/May/18 3:12 AM,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,"Any couchdb indexes defined for a chaincode will be deployed in the chaincode state database.  Indexes for collections of private data should be applied in the chaincode's collection state database rather than in the chaincode state database.

Indexes for public data are packaged in:

META-INF/statedb/couchdb/indexes

Indexes for private data collections will be packaged in:

META-INF/statedb/couchdb/collections/<collection_name>/indexes",,denyeart,fredbi,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8718,,,,,,,,,"1|hzwsx3:",,,,Unset,,May2018 - NextGen Endorsement,,,,Unset,,,,,,,,,,,denyeart,fredbi,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Feb/18 2:14 AM;denyeart;Private data collections (aka Side DB) are experimental in 1.1, this item can be deferred to 1.2.;;;","05/May/18 2:50 AM;jyellick;[~denyeart] has this been addressed?;;;","07/May/18 10:29 AM;denyeart;[~jyellick] Work on this item is beginning this week.;;;","09/May/18 3:19 AM;Clayton Sims;Who's doing this item?   Chris?;;;","10/May/18 7:55 PM;denyeart;Yes Chris started working on it this week.;;;","15/May/18 2:37 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/21753/;;;",,,,,,,,,,,,,,,,,
Cut v1.1.0-alpha release,FAB-7780,26901,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,denyeart,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 1:02 AM,v1.1.0-preview,,,v1.1.0,,,fabric-release,,,,0,,,,,,"Prepare and publish v1.1.0-alpha release of Hyperledger Fabric. The tasks are listed in execution order and I have indicated any dependencies in the description of each.

 

Note that until we address, the repositories must be tagged and published serially: fabric, fabric-ca, fabric-sdk-node, others.",,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8278,,FAB-6753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytqf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 9:58 PM;ChristopherFerris;What we learned:
 * the release is now very (overly, IMO) serialized. fabric must be published before fabric-ca will build, fabric-ca must be published before fabric-sdk-node will build, etc. While this is workable, it is very slow, especially if there are any issues in the build process itself (as there were)
 * the release managers need to have access to be able to merge the release CRs and to push tags to ALL repositories. It is impractical to have to run down maintainers during the process, and takes part of the responsibility out of the release manager's hands. Suggest that release managers be added as maintainers to all repos.
 * pushing follow-up CRs (preparing for NEXT release) before the parent CR (preparing for the current release) is also problematic with the rebase requirements. Suggest these be deferred until the parents are merged. This is less of an issue if there are absolutely no issues that need to be mitigated during the release process.;;;","27/Jan/18 10:39 PM;mastersingh24;Why is there any dependency between fabric and fabric-ca?;;;","29/Jan/18 11:57 AM;rameshthoomu;fabric-ca-tools, fabric-ca-peer and fabric-ca-orderer images are looking for fabric-tools, fabric-peer and fabric-orderer images with FABRIC_TAG (1.1.0-alpha). Below are the reference links

[https://github.com/hyperledger/fabric-ca/blob/master/Makefile#L46]

https://github.com/hyperledger/fabric-ca/blob/master/images/fabric-ca-tools/Dockerfile.in#L6;;;","29/Jan/18 9:51 PM;denyeart;Another learning -

Base image ""0.4.5"" had to be hardcoded into bootstrap.sh for third party docker images. You can pass any Fabric release version into bootstrap.sh to download that version's Docker images, but it will always pull third party docker images tagged with ""0.4.5"".  This appears to be workable for now, as all Fabric releases work with the latest (0.4.5) 3rd party docker images, but this may not always be the case.  We likely will need a matrix of which Fabric versions work with which 3rd party releases. 

Also, it is currently impossible to know what 3rd party versions are included under the 0.4.5 tag, without a lot of digging into Fabric repository source.  We may want to tag 3rd party docker images according to the 3rd party version.  This will make the logic in bootstrap.sh more complex, but it will clarify which Fabric releases are verified against which 3rd party versions. ;;;","30/Jan/18 4:45 AM;ChristopherFerris;One last thing I noticed, while we created a fabric homebrew recipe, we never updated it for dot releases (as we probably should have done) and we will need to update for all major/minor releases (but not -alpha, -beta etc). [~rameshthoomu];;;",,,,,,,,,,,,,,,,,,
[CI] - verify release jobs to support 1.1.0-alpha release,FAB-7781,26902,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 2:53 AM,v1.0.0,,,,,,fabric-ci,fabric-release,,,0,fabric-ci,,,,,Make sure all the release jobs are ready for v1.1.0-alpha release,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytqn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric master for 1.1.0-alpha release,FAB-7782,26903,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 1:40 AM,v1.1.0-preview,,,v1.1.0-alpha,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

*----------*

{{git checkout master}}

{{git pull}}

_*checkout the CR from Gerrit - be sure you have latest!!!*_ 

{{git checkout -b <newbranch>}}

{{git rebase master}}

git commit --amend

*_make a tweak to commit message_*

git review

 

Check for clean CI passes

merge

----------------------

Changes

----------------------------

Update Makefile

{{BASE_VERSION = 1.1.0-alpha}}
 {{PREV_VERSION = 1.1.0-preview}}
 {{IS_RELEASE = true}}

EXPERIMENTAL ?= false

 
 Update docs/source/samples.rst for  1.1.0-alpha

e.g. 
 curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.1.0-alpha
  
 {{release_notes/v1.1.0-alpha.txt should be created}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha",,ChristopherFerris,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytqv:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 1:23 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17183;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.1.0-alpha release,FAB-7783,26904,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 9:54 AM,v1.0.0,,,,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.1.0-alpha}}
 {{PREV_VERSION = 1.1.0-preview}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 
./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

update release_notes/v1.1.0-alpha.txt

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytr3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 3:53 AM;ChristopherFerris;per [~smithbk] waiting on [https://gerrit.hyperledger.org/r/#/c/17107|https://gerrit.hyperledger.org/r/#/c/17107/];;;","26/Jan/18 3:54 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/17187/;;;","26/Jan/18 12:07 PM;denyeart;CI requires hyperledger/fabric-orderer:x86_64-1.1.0-alpha to exist.  So this will not pass CI until fabric is released and pushed to dockerhub.;;;",,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for 1.1.0-alpha release,FAB-7784,26905,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 9:54 AM,v1.1.0-preview,,,v1.1.0-alpha,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST PRIOR TO MERGING*

generate CHANGELOG.md just *after rebasing* to pick up last minute merged CRs

./scripts/changelog.sh v1.1.0-preview v1.1.0-alpha

update release_notes/v1.1.0-alpha.txt

update package.json files with the release identifier

./package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./fabric-ca-client/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

./fabric-client/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-alpha"",

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytrb:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 3:52 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17197;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for next release,FAB-7785,26906,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 4:40 AM,v1.0.0,,,,,,fabric-release,,,,0,,,,,,"Note that this change must be stacked on the previous task to prepare for the v1.1.0-preview release -FAB-6822-

Update Makefile

BASE_VERSION = 1.1.0-beta

PREV_VERSION = 1.1.0-alpha

IS_RELEASE = false

EXPERIMENTAL ?= true",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytrj:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/18 1:40 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/17245/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for next release,FAB-7786,26907,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 9:49 PM,v1.1.0-preview,,,v1.1.0,,,fabric-release,,,,0,,,,,,"Update Makefile

{{BASE_VERSION = 1.1.0-beta}}
 {{PREV_VERSION = 1.1.0-alpha}}
 {{IS_RELEASE = false}}

 

This should be submitted as a child of the CR to update for the 1.1.0-alpha release FAB-7783",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytrr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/18 1:50 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17247;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for next release,FAB-7787,26908,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 9:50 PM,v1.1.0-preview,,,v1.1.0,,,fabric-release,,,,0,,,,,,"update package.json files with the SNAPSHOT release identifier

  ./package.json

  fabric-client/package.json

  fabric-ca-client/package.json",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytrz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 4:23 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17203;;;",,,,,,,,,,,,,,,,,,,,,,
Tag repositories for 1.1.0-alpha,FAB-7788,26909,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 9:50 PM,v1.1.0-preview,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*NOTE:* depends on FAB-7781, FAB-7782, FAB-7783, FAB-7784 and FAB-7793 being merged.

*NOTE* may need to create v1.1 branch

Tag each repository local clone with the release_notes/v1.1.0-alpha.txt as the tag comment

{{% git tag -a v1.1.0-alpha -F release_notes/v1.1.0-alpha.txt}}

{{% git push origin v1.1.0-alpha HEAD:refs/heads/master}}

Tag each of fabric, fabric-ca, fabric-sdk-node, and fabric-samples and fabric-chaincode-node (use v1.0.0-alpha)
----
Note, that one can also tag the repo at a specific commit-level.
 E.g., to add the {color:#f79232}*v1.1.0-alpha*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.1.0-alpha{color} {color:#205081}e4b4704{color}* -F release_notes/v1.1.0-alpha.txt}}

 

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyts7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test download of release artifacts and samples across all platforms,FAB-7790,26911,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 10:17 AM,v1.1.0-alpha,,,v1.1.0-alpha,,,fabric-release,,,,0,,,,,,test download of release artifacts and samples across all platforms,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytsf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Verify doc build status on v1.1.0-alpha release tag in ReadTheDocs,FAB-7791,26912,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,rameshthoomu,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 7:09 AM,v1.1.0-alpha,,,v1.1.0-alpha,,,fabric-ci,fabric-docs,fabric-release,,0,,,,,,Verify doc build status on v1.1.0-preview release tag in ReadTheDocs,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytsn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Verify fabric, fabric-ca docker images are published with 1.1.0-alpha tag to hyperledger dockerhub account",FAB-7792,26913,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 10:16 AM,v1.0.0,,,,,,fabric-ci,fabric-release,,,0,,,,,,"Verify fabric, fabric-ca docker images are published with 1.1.0-preview tag to hyperledger docker-hub account and make sure fabric-binaries are published to nexus repository.",,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytsv:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Send email to hyperledger-fabric mailing list,FAB-7795,26916,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,18/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 10:46 AM,v1.1.0-alpha,,,v1.1.0-alpha,,,fabric-release,,,,0,,,,,,send email announcing the release to hyperledger-fabric@lists.hyperledger.org mailing list.,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyttj:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
publish 3rd party images ,FAB-7797,26922,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,18/Jan/18 8:09 AM,27/Nov/19 2:17 AM,28/Oct/23 3:02 AM,26/Jan/18 1:22 AM,v1.1.0-preview,,,,,,,,,,0,,,,,,publish 3rd party images and new version of base image,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytuf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FabricCaTests failed in fabric-test-daily-x86_64 due to network authentication error,FAB-7799,26924,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rennman,sambhavdutt,sambhavdutt,18/Jan/18 9:19 AM,19/Mar/19 8:12 PM,28/Oct/23 3:02 AM,12/Feb/18 11:31 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,"Fabric Ca test has been failing as there is timing issue with the cert expiry time, 

ca_tests.FabricCaTests.test_FAB7206_GenCrlWindows (from pytest)


{code:java}
if retcode:
            cmd = kwargs.get(""args"")
            if cmd is None:
                cmd = popenargs[0]
>           raise CalledProcessError(retcode, cmd, output=output)
E           CalledProcessError: Command '['mkdir -p /tmp/logs/FAB7206; chmod 777 /tmp/logs/FAB7206;docker run -v $PWD/../../tools/CTE/:/tmp/test -v /tmp/logs/FAB7206:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt /tmp/test/crl_test.sh']' returned non-zero exit status 5
{code}


{code:java}
2018/02/03 19:00:32 [INFO] Configuration file location: /tmp/gencrl/notadmin/fabric-ca-client-config.yaml
Error: Response from server: Error Code: 20 - Authorization failure
{code}


*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/245/testReport/ca_tests/FabricCaTests/test_FAB7206_GenCrlWindows/",,rennman,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytuv:",,,,,,,,,,,,,,,,,,,,,rennman,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,"02/Feb/18 5:26 AM;rennman;Apparently, this is just a timing issue with the cert expiry time. Updated and pushed 
https://gerrit.hyperledger.org/r/#/c/17439/
with a more detailed explanation.l;;;","09/Feb/18 11:45 PM;sambhavdutt;This ca_test has been passing successfully from the last couple builds. As mentioned, these were failing due to timeout possibly.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/250/testReport/ca_tests/FabricCaTests/test_FAB7206_GenCrlWindows/;;;","12/Feb/18 11:36 AM;sambhavdutt;The ca-test has been passing successfully for the last five builds. The timeout error is fixed now.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/253/testReport/ca_tests/FabricCaTests/test_FAB7206_GenCrlWindows/;;;",,,,,,,,,,,,,,,,,,,,
Peer chain can't restart due to some configuration block issue,FAB-7801,26927,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid: Works as Expected,,mffrench,mffrench,18/Jan/18 3:02 PM,01/Dec/18 8:33 PM,28/Oct/23 3:02 AM,01/Dec/18 8:33 PM,v1.0.0-alpha2,,,Future,,,fabric-peer,,,,0,,,,,," 

Hi,

after the patch campaign on our Hyperledger Fabric cluster, all the VMs of the cluster has been restarted. 

After restart, all the containers were stopped an so we restarted the all stack : 
 * \{Hyperledger Fabric CA and Orderer Solo} on a dedicated consortium VM,
 * \{HF Peers, CouchDB and application} on 3 other network participant VMs. 

At this first restart everything was looking OK but there was a lot of logs history and so to troubleshoot easily another application issue on a a dedicated participan VMs, we decided to restart again the docker stack but this time by removing and recreating the docker containers to remove the past log (*). 

Unfortunately when restarting the Hyperledger stack on this particular node we hit an issue on one of our peers which prevent us to restart our chain on this peer and particularly read the MSP from the configuration block (see logs bellow). 

I'm currently looking some way to restart the peer and I see one by removing the peer data and resync the empty peer with the two other still running on our network. Do you see other cheaper way ? Do you have some advice to help us ? And finally do you have some idea on what could be the root cause of this issue ? 

Thank you
{code:java}
2017-06-19 23:26:01.361 UTC [ledgermgmt] OpenLedger -> INFO 1c9 Opened ledger with id = elixir-channel
2017-06-19 23:26:01.361 UTC [peer] getCurrConfigBlockFromLedger -> DEBU 1ca Getting config block
2017-06-19 23:26:01.361 UTC [fsblkstorage] retrieveBlockByNumber -> DEBU 1cb retrieveBlockByNumber() - blockNum = [26858]
2017-06-19 23:26:01.361 UTC [fsblkstorage] newBlockfileStream -> DEBU 1cc newBlockfileStream(): filePath=[/var/hyperledger/production/ledgersData/chains/chains/elixir-channel/blockfile_001449], startOffset=[10192565]
2017-06-19 23:26:01.361 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1cd Remaining bytes=[5377], Going to peek [8] bytes
2017-06-19 23:26:01.361 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1ce Returning blockbytes - length=[5375], placementInfo={fileNum=[1449], startOffset=[10192565], bytesOffset=[10192567]}
2017-06-19 23:26:01.361 UTC [fsblkstorage] retrieveBlockByNumber -> DEBU 1cf retrieveBlockByNumber() - blockNum = [26847]
2017-06-19 23:26:01.361 UTC [fsblkstorage] newBlockfileStream -> DEBU 1d0 newBlockfileStream(): filePath=[/var/hyperledger/production/ledgersData/chains/chains/elixir-channel/blockfile_001449], startOffset=[10025675]
2017-06-19 23:26:01.362 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1d1 Remaining bytes=[172267], Going to peek [8] bytes
2017-06-19 23:26:01.362 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1d2 Returning blockbytes - length=[5546], placementInfo={fileNum=[1449], startOffset=[10025675], bytesOffset=[10025677]}
2017-06-19 23:26:01.362 UTC [peer] getCurrConfigBlockFromLedger -> DEBU 1d3 Got config block[26847]
2017-06-19 23:26:01.362 UTC [common/config] NewStandardValues -> DEBU 1d4 Initializing protos for *config.ChannelProtos
2017-06-19 23:26:01.362 UTC [common/config] initializeProtosStruct -> DEBU 1d5 Processing field: HashingAlgorithm
2017-06-19 23:26:01.363 UTC [common/config] initializeProtosStruct -> DEBU 1d6 Processing field: BlockDataHashingStructure
2017-06-19 23:26:01.363 UTC [common/config] initializeProtosStruct -> DEBU 1d7 Processing field: OrdererAddresses
2017-06-19 23:26:01.363 UTC [common/config] initializeProtosStruct -> DEBU 1d8 Processing field: Consortium
2017-06-19 23:26:01.363 UTC [peer] Initialize -> WARN 1d9 Failed to load chain elixir-channel(Bad envelope: Not a tx of type CONFIG)
{code}
(*) : peers data and conf are configured to be on the host  through dedicated volume ; this procedure has been used a lot of time last years (at least 48 time as we did 48 chaincode upgrade).

 ",,denyeart,jeffgarratt,mastersingh24,mffrench,mplisov,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytv3:",,,,,,,,,,,,,,,,,,,,,denyeart,jeffgarratt,mastersingh24,mffrench,mplisov,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/18 12:09 AM;jeffgarratt;[~mffrench] to give yourself some confidence you could create a new peer and join the channel and verify that it syncs up.  Once it does, you could consider backing up your existing peer's file store (while it is stopped) and removing the directory from the chain file store, which in your case appears to be...

 <file_store>/ledgersData/chains/chains/elixir-channel

Then have that peer join the channel once more and verify it also syncs up.;;;","21/Jan/18 7:21 AM;mastersingh24;[~mffrench] - Which version are you starting with and to which version are you trying to upgrade?  If you are actually on v1.0.0-alpha2 and trying to upgrade to v1.0.x there is no guarantee that this is going to work as it is not even supported;;;","22/Jan/18 7:41 AM;mffrench;[~jeffgarratt] and [~mastersingh24] : first thank you both for your answers.

I've been able to restart a fresh peer and ledger resync from other peers has been successful. So I'm downgrading the priority of this issue to low as this is an issue on old Hyperledger Fabric and this is no more a prod issue.

[~mastersingh24] : I didn't try to upgrade the peer but I was just restarting it.

I kept the data from the older peer instance with the ledger with I can reproduce the issue. I would like to try understand what happened even if this is in a old version. [~jeffgarratt] gave me some test todo to get the config block with some `peer fetch...` command but I'm not sure of my test as the fetch I did was against the orderer and not the local peer ledger as the peer is trying to do before it raise me this error. If you have other idea please let me know.

Best,

 ;;;","22/Jan/18 7:57 AM;mffrench;Some other questions just in case you may have some answers :

+ Is there a HLF Peer backup best practices ? I think this could be interesting to reduce resync time but I'm not sure if such solution is supported and how.
+ Can you tell me since HLF version upgrade are supported ? I guess upgrade from v1.0 to v1.1 will be supported ? Is there some operation best practices to follow for such operation ?

Thank you again !;;;","26/Jan/18 5:13 PM;mffrench;Hi,

as I get the issue back on another peer on the network, I raise the issue again to high. If we can have some help to understand the root cause of this chain configuration problem on the peer that would be great.

Best,;;;","27/Jan/18 12:13 AM;muralisr;The error `Failed to load chain elixir-channel(Bad envelope: Not a tx of type CONFIG)` comes when loading in the ledger for the channel at peer startup time. 

I wonder if the hard stopping of the peers causes the ledger to get out of whack ? Can you provide the exact steps to recreate this issue [~mffrench];;;","27/Jan/18 12:34 AM;mffrench;Hi Srinivasan,

I've the impression this issue is related to this one : https://jira.hyperledger.org/browse/FAB-5286. After the VMs patching campaign we also had to restart the orderer (which is a solo orderer in our conf as we didn't get enough resources to deploy a kafka one) and this issue could be a side effect of FAB-5286.

It's currently hard for me to provide step to reproduce the error as I reproduce it with the client ledger and I can't it share publicly. Also I'm not sure yet on how to reproduce it from scratch. However I think I may have some idea on that and I will try to give you some env for that next week.

Best,;;;","27/Jan/18 1:21 AM;muralisr;Thank you for the quick response [~mffrench].

One thing would be interesting to do a high level comparison of at the ledger files on working peers with the non-working peer to if we can spot anything odd.;;;","27/Jan/18 2:09 AM;mffrench;Is there some tool for such comparison ? I mean the ledger has more than 25000 blocks and I don't know yet how to do such thing efficiently...;;;","27/Jan/18 11:49 PM;muralisr;[~mffrench] Right. No, I just meant looking at the ledger externally (file sizes for example) first to see if you could spot some anomalies. But looking at the logs it did find the current config block (just couldn't locate the config TX in there for some reason), so please ignore that suggestion.;;;","30/Jan/18 11:47 AM;denyeart;[~mffrench] Can you provide the same debug snippet for a peer that can start and a peer that cannot start.  We'll want to compare the block info in debug for the last config block, which in your case is block [26847].  For both peers, please ensure the config block number is the same for both peers, in the debug message:
""Got config block"";;;","08/Feb/18 2:26 AM;Clayton Sims;Move to monitor / hold.  waiting on info from originator.;;;","15/Feb/18 7:32 PM;mffrench;Hi,

I tried to reproduce the issue on 1.0.1 but I failed. On the other hands we were able to resync the peers on the network. So I will minor the issue severity again.

Best,;;;","15/Feb/18 8:32 PM;denyeart;Ok, let's leave this open for now with a Future fix date so that we can investigate potential causes in more detail after 1.1.

[~dongming] I know you are adding additional peer crash and recovery system tests.  Here is one problem that you can try to model as part of those tests.;;;","01/Dec/18 8:33 PM;denyeart;Unable to reproduce, closing.;;;",,,,,,,,
Improve code quality by enabling gofmt -s check,FAB-7802,26933,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,robert.zaremba,robert.zaremba,robert.zaremba,19/Jan/18 12:02 AM,25/Sep/19 7:56 AM,28/Oct/23 3:02 AM,19/Jan/18 4:42 AM,,,,v1.1.0,,,fabric-build,,,,0,,,,,,"Many developers have integrated `gofmt`  auto-formatting. If the check is not enforced in the linting tools, then some code changes can automatically cause other changes caused by `gofmt` integration, not related to the intent of the task.

For clarity in future pull-requests, the gofmt issues should be solved once and for all.

This change doesn't break the code, because it uses official `{{gofmt`}} to do the auto code formatting.

Gerrit review: https://gerrit.hyperledger.org/r/#/c/16947/

 ",,MHBauer,robert.zaremba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzytw7:",,,,,,,,,,,,,,,,,,,,,MHBauer,robert.zaremba,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Sep/19 7:56 AM;MHBauer;But why in addition to goimports? The tools do the same thing.;;;",,,,,,,,,,,,,,,,,,,,,,
Our documentation needs to encourage CR review,FAB-7803,26934,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,19/Jan/18 12:34 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,22/Jan/18 6:30 PM,v1.0.0,v1.1.0-preview,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Maintainers are constantly struggling to keep up with the flood of CRs that get submitted and could be helped in their reviews if more people reviewed the CRs.

Our documentation should mention that in the Contribution section and point out that it's a good way for people to ramp up and learn about fabric.",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzytwf:",,,,Unset,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
PTE uses sdk npm packages,FAB-7804,26935,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,john.d.sheehan,dongming,dongming,19/Jan/18 12:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Feb/18 11:28 PM,,,,,,,fabric-quality,,,,0,,,,,,PTE access SDK packages: fabric-clien and fabric-ca-client.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzytwn:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"01/Feb/18 3:10 AM;dongming;https://gerrit.hyperledger.org/r/#/c/16981/;;;",,,,,,,,,,,,,,,,,,,,,,
configtx.yaml has inconsistent naming and profile content,FAB-7808,26943,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,19/Jan/18 5:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Jan/18 10:54 AM,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu0v:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/18 5:45 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/16963 ;;;",,,,,,,,,,,,,,,,,,,,,,
Move BTL (block-to-live) configuration from core.yaml to chaincode init transaction,FAB-7810,26945,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,19/Jan/18 8:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/May/18 3:31 AM,,,,,,,fabric-ledger,,,,0,,,,,,Currently BTL (block-to-live) configuration is expected to be specified in the core.yaml file. Instead it should be possible to specify this information in the collection configuration that are specified in the chaincode instantiation transaction.,,denyeart,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwt07:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,denyeart,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Mar/18 4:23 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/16971/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix endorser debug to include channel and txid,FAB-7811,26948,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,19/Jan/18 12:15 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,19/Jun/18 7:37 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,Endorser debug did not consistently include channel and txid.  This made it impossible to correlate debug messages in production environments with many channels and transactions  flowing concurrently.,,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7838,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx0j3:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/18 1:29 PM;denyeart;[~mastersingh24] This one should be ported to release branch for improved serviceability.;;;","19/Jan/18 1:32 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/16975/;;;","21/Jan/18 6:39 AM;mastersingh24;[~denyeart] I don't think we should backport this one.  We need people to move to v1.1 once it's ready.  I'm going to remove v1.0.6 from fix version and mark as done.
If you think it needs to be backported, please open a separate task and we can discuss there;;;","21/Jan/18 7:02 AM;mastersingh24;OK - [~denyeart] will backport this.  The fix has been merged to master.  We can close this once merged to release;;;","19/Jun/18 7:38 AM;denyeart;Done in v1.1, not going to backport further.;;;",,,,,,,,,,,,,,,,,,
[Build] update baseimage release version to 0.4.4 in fabric,FAB-7815,26954,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Jan/18 11:53 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 7:43 AM,,,,v1.1.0-alpha,,,fabric-build,,,,0,fabric-build,,,,,"update *.baseimage-release ([https://github.com/hyperledger/fabric/blob/master/.baseimage-release)]* v0.4.4 release version.

v0.4.4 baseimage version has been released with nodejs version 8.9.1 and Couchdb version 2.1.1 https://github.com/hyperledger/fabric-baseimage/releases/tag/v0.4.4",,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu2n:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 7:44 AM;rameshthoomu;0.4.4 baseimage has been released with nodejs version 8.9.1 and couchdb 2.1.1;;;",,,,,,,,,,,,,,,,,,,,,,
Fix chaincode event handling to ignore lscc collection updates ,FAB-7816,26955,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,20/Jan/18 12:16 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jan/18 8:12 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Chaincode event handling was intended to pick up LSCC chaincode updates, but was also picking up LSCC chaincode collection updates.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu2v:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jan/18 5:27 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16995/;;;",,,,,,,,,,,,,,,,,,,,,,
Update fabric to use latest baseimage version,FAB-7817,26956,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,20/Jan/18 12:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 7:45 AM,,,,v1.1.0-alpha,,,fabric-build,,,,0,,,,,,"update baseimage version to pull latest thirdparty docker images (couchdb, kafka and zookeeper) from dockerhub. The latest thirdparty docker image is 0.4.4 https://github.com/hyperledger/fabric-baseimage/releases/tag/v0.4.4

 ",,denyeart,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu33:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 7:49 AM;rameshthoomu;0.4.5 docker image has been updated with nodejs version 8.9.1, couchdb 2.1.1 and kafka 0.10.2.1 and patch has been submitted and merged in fabric repo to pull 0.4.5 docker images;;;","20/Feb/18 12:10 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17001/;;;",,,,,,,,,,,,,,,,,,,,,
Instruction for recovering the fabric network on manually process,FAB-7818,26957,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,grapebaba,grapebaba,20/Jan/18 12:35 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,Future,,,fabric-ci,,,,1,common-components,Documentation,,,,"Assume in worst case, we cannot recover kafka/zookeeper cluster state, we need an approach to recover the whole fabric network from orderer ledger. Since it is a tedious/manual process, we need a instruction which could list all necessary steps. ",,grapebaba,mastersingh24,xana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyu3b:",,,,Unset,,,,,,Unset,,,,,,,,,,,grapebaba,mastersingh24,xana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
update tests to use generic channel client options,FAB-7821,26960,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,20/Jan/18 1:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Jan/18 2:26 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu3r:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
remove require('fabric-client/lib/utils.js') in PTE,FAB-7824,26963,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,john.d.sheehan,john.d.sheehan,john.d.sheehan,20/Jan/18 5:09 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,30/Jan/18 7:06 AM,,,,,,,,,,,0,,,,,,the only reason for this is to access a logger. PTE can create and use its own logger.,,dongming,john.d.sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyu47:",,,,,,,,,,,,,,,,,,,,,dongming,john.d.sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,"31/Jan/18 5:45 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17007/;;;",,,,,,,,,,,,,,,,,,,,,,
Use ConfigProvider interface,FAB-7827,26966,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,20/Jan/18 6:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Jan/18 11:56 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu4n:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
how to debug,FAB-7828,26967,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain,asaningmaxchain,20/Jan/18 5:54 PM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,,,,,,,fabric-orderer,fabric-peer,,,0,stale-item,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyu4v:",,,,Unset,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
how to debug,FAB-7829,26968,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain,asaningmaxchain,20/Jan/18 6:04 PM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,,,,,,,fabric-orderer,fabric-peer,,,0,stale-item,,,,,"as we know,debug is a good learning method to start everything,however,in the fabric ,i want to start one orderer,one peer to study the theory,it doesn't support start the chaincode in process mode,i get disappointment,althought i know it can use the unit test to test whether the method is good? however,it doesn't work,i should get the entire process,not just a part",,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyu53:",,,,Unset,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Refactor client interface to delay error propagation,FAB-7830,26970,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,20/Jan/18 11:40 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Jan/18 2:43 AM,,,,,,,,,,,0,,,,,,"// NewClient allows creation of transactions using the supplied identity as the credential.
 func (sdk *FabricSDK) NewClient(identityOpt IdentityOption, opts ...ClientOption) *Client \{
 // delay execution of the following logic to avoid error return from this function.
 // this is done to allow a cleaner API - i.e., client, err := sdk.NewClient(args).<Desired Interface>(extra args)
  

...",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu5j:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Move methods needed for propagating SDK context,FAB-7831,26971,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,21/Jan/18 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,30/Jan/18 3:36 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Part 1: [https://gerrit.hyperledger.org/r/c/17025]
 * Included a private context object

Part 2
 * Create a public Providers objects and move fabric and config underneath it.",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu5r:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Rename sdk.ConfigProvider to sdk.Config,FAB-7832,26972,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,21/Jan/18 5:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 11:17 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu5z:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BYFN docs point to wrong marbles02 directory location,FAB-7833,26973,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,21/Jan/18 7:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Jan/18 10:08 AM,,,,v1.1.0-alpha,,,fabric-docs,,,,0,,,,,,"BYFN used to point to fabric /examples directory.

It should point to fabric-samples directory.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0cf:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/18 8:17 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17029/;;;",,,,,,,,,,,,,,,,,,,,,,
Add couchdb index to fabric-samples marbles02 chaincode,FAB-7834,26974,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,21/Jan/18 8:07 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,19/Jun/18 7:36 AM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,Add sample couchdb index to marbles02 chaincode to support the chaincode queries.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyu67:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/18 8:16 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17033/;;;",,,,,,,,,,,,,,,,,,,,,,
Add design doc name to marbles02 sample index,FAB-7835,26975,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,21/Jan/18 8:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Jan/18 1:09 AM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,Add design doc name to marbles02 sample index.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu6f:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/18 8:20 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17035/;;;",,,,,,,,,,,,,,,,,,,,,,
"registerUser: ""No identity type provided"" Error",FAB-7836,26976,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,armujahid,armujahid,21/Jan/18 6:12 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Jan/18 11:00 AM,,,,,,,fabric-samples,,,,0,,,,,,"registerUser.js gives the following error:

[[\{""code"":0,""message"":""No identity type provided. Please provide identity type""}]]",,armujahid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu6n:",,,,,,,,,,,,,,,,,,,,,armujahid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/18 6:19 PM;armujahid;Fixed in https://gerrit.hyperledger.org/r/#/c/17027/

FAB-7836 Fix ""No identity type provided"" Error;;;",,,,,,,,,,,,,,,,,,,,,,
[Thirdparty Image] - update kafka version to 0.10.2.0 from 0.9.0.1,FAB-7837,26977,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,22/Jan/18 1:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Jan/18 10:33 PM,,,,v1.1.0-alpha,,,fabric-build,,,,0,,,,,,"update ""kafka"" version to 0.10.2.0 from 0.9.0.1.

Observed e2e tests are failing with kafka version 0.9.0.1 (https://jira.hyperledger.org/browse/FAB-7825)

 

 ",,kchristidis,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu6v:",,,,,,,,,,,,,,,,,,,,,kchristidis,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/18 10:33 PM;kchristidis;https://gerrit.hyperledger.org/r/c/17041/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix endorser debug to include channel and txid - Part2,FAB-7838,26978,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,22/Jan/18 9:22 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,22/Jan/18 6:29 PM,,,,,,,fabric-peer,,,,0,,,,,,Endorser and chaincode debug did not consistently include channel and txid.  This made it impossible to correlate debug messages in production environments with many channels and transactions  flowing concurrently.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7811,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx0cn:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Silent failure for certain invalid data,FAB-7840,26982,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,vdods,vdods,22/Jan/18 6:29 PM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,v1.0.5,,,,,,fabric-tools,,,,0,stale-item,,,,,"Running configtxgen on configtx.yaml.bad exits with error but gives no indication of what the cause of error was.

 

{{rm -f configtx.yaml}}
{{ln -s configtx.yaml.bad configtx.yaml}}
{{export FABRIC_CFG_PATH=.}}
{{configtxgen -profile SimpleOrdererGenesis -outputBlock orderer-genesis.block}}

 

The problem turned out to be that one element in the config YAML data had the wrong type (list of dicts instead of list of strings) due to the presence of an errant space.  Running configtxgen on configtx.yaml.good gets past that problem (though exits with error as expected, because we're not bothering to provide it with all the MSP materials it's looking for).
{code:java}
rm -f configtx.yaml
ln -s configtx.yaml.good configtx.yaml
export FABRIC_CFG_PATH=.
configtxgen -profile SimpleOrdererGenesis -outputBlock orderer-genesis.block{code}
If one were to provide MSP materials as advertised in configtx.yaml.good, then this command would succeed.

In particular, the error stemmed from this line in configtx.yaml.bad:
{code:java}
  ...
  Kafka:
    Brokers:
    - 127.0.0.1: 9092
  ...{code}
Notice the space before the port number.  The same line in configtx.yaml.good is
{code:java}
  ...
  Kafka:
    Brokers:
    - 127.0.0.1:9092
  ...
{code}
A fix for this would print an error message indicating that the ""Orderer.Kafka.Brokers"" element had the wrong type (and what type it expected), and ideally the line number of that element in the file.",,kchristidis,luomin,sykesm,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/18 6:29 PM;vdods;configtx.yaml.bad;https://jira.hyperledger.org/secure/attachment/14360/configtx.yaml.bad","22/Jan/18 6:29 PM;vdods;configtx.yaml.good;https://jira.hyperledger.org/secure/attachment/14359/configtx.yaml.good",,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyu7r:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,luomin,sykesm,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/18 4:33 PM;luomin;hi [~vdods]  I can't repeat the error reported above.  Thank you very much for providing more detailed information, including

where (which folder) should the ""configtx.yaml"" be placed at?

FYI:

the error msg i got: 
configtxgen -profile SimpleOrdererGenesis -outputBlock orderer-genesis.block
[common/tools/configtxgen] main -> INFO 001 Loading configuration
[common/tools/configtxgen/localconfig] Load => CRIT 002 Could not find profile: SimpleOrdererenesis
 

 ;;;","27/Jan/18 7:08 AM;vdods;I forgot to mention that the given files (configtx.yaml.good and configtx.yaml.bad) each need to be renamed to configtx.yaml – say each in a separate directory – before running.  configtxgen itself will look in the current working directory for them (because of FABRIC_CFG_PATH=. in the env vars).;;;","30/Jan/18 6:17 AM;kchristidis;[~luomin]: Are you working on this?;;;","30/Jan/18 6:29 AM;luomin;Hi, [~kchristidis] , yes. I am working on this one. ;;;","01/Feb/18 5:08 PM;luomin;hi [~kchristidis],  a modification of ""configtxgen"" file seems required. Currently, users download this file directly from the online repository

[https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric]/$\{ARCH}-$\{VERSION}/hyperledger-fabric-$\{ARCH}-$\{VERSION}.tar.gz

# [http://hyperledger-fabric.readthedocs.io/en/latest/samples.html?highlight=configtxgen%20#download-platform-specific-binaries]

 

if it is correct, I think it is beyond my capability to do this improvement.

Do you have any comment?

 

I would like to resign from the Assignee here if required.

 ;;;","23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,
[CI] - missing fabric unit-test cobertura coverage report in jenkins,FAB-7842,26985,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,22/Jan/18 11:00 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 11:34 AM,,,,v1.1.0,,,fabric-ci,,,,0,fabric-build,,,,,"Observed fabric unit-test cobertura coverage report is missing in Jenkins. [https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-x86_64/]

Seems this has been broken with this patch https://github.com/hyperledger/fabric/commit/fd65c752c8f03acb3a70ab2686d3f1838e97ea21#diff-7ad2aee83906c9ac1000cf59c5c40853",Jenkins,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu8f:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jan/18 11:44 PM;sykesm;I believe it was introduced elsewhere. Please see FAB-7635 [1]. With that change, coverage reports are only generated with the JOB_TYPE is set to PROFILE.

[1]: https://github.com/hyperledger/fabric/commit/6a4b44f4df4dd7656d9ad6f5939f9b0183d1a3f7;;;","23/Jan/18 2:03 PM;rameshthoomu;Created a new CI cron job to run ""profile"" target to generate code coverage report. Removed """" quotes using sed command in CI job. This has been tested in sandbox and it's working as expected https://jenkins.hyperledger.org/sandbox/job/fabric-unit-tests-coverage-daily-x86_64/;;;",,,,,,,,,,,,,,,,,,,,,
copy envsetup files to fabric-test ATD directory,FAB-7845,26991,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,23/Jan/18 2:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 11:35 AM,,,,,,,fabric-quality,,,,0,,,,,,"copy apply.yml, lfos.yml, roles/ and /verify.yml configuration files to fabric-test ATD directory. earlier these files are maintained in user personal repository but copy these to fabric-test repository to maintain these files in more consistent way.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu9b:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"26/Jan/18 11:35 AM;rameshthoomu;Patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,
Doc links to CI page are broken,FAB-7847,26993,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,23/Jan/18 4:20 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Feb/18 5:53 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Well, this is embarrassing but we've got two broken links that went unnoticed into a recent merge:

[https://gerrit.hyperledger.org/r/#/c/16407/4/docs/source/Gerrit/changes.rst@99]

[https://gerrit.hyperledger.org/r/#/c/16407/4/docs/source/submit_cr.rst@218]

Too bad Gari didn't have as sharp an eye on this as he had on grammar. ;)",,denyeart,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyu9r:",,,,,,,,,,,,,,,,,,,,,denyeart,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/18 4:27 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17067/;;;",,,,,,,,,,,,,,,,,,,,,,
Functional Opts for FabricClient,FAB-7853,27003,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,23/Jan/18 10:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 11:17 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,And remove setters.,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuav:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 11:17 AM;troyronda;deprecated FabricClient.;;;",,,,,,,,,,,,,,,,,,,,,,
Fix marbles02 example couchdb index commands,FAB-7856,27006,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,23/Jan/18 12:36 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,30/Jan/18 1:08 PM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,Fix example couchdb index commands in marbles02 example.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0cv:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/18 1:08 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17089/;;;",,,,,,,,,,,,,,,,,,,,,,
Document the generation of the python files from protobuf files for behave tests,FAB-7861,27015,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,RichardHill,latitiah,latitiah,23/Jan/18 10:28 PM,30/Jul/19 11:42 AM,28/Oct/23 3:02 AM,30/Jul/19 11:42 AM,,,,,,,fabric-quality,,,,0,,,,,,"As the protocol buffer files (protobufs) are updated, the python files that are generated from them and used in some of the behave tests that now reside in the fabric-test repository need to be updated.

The files can be updated using the following command from the fabric-test base directory. This will generate python files from the proto files in fabric/protos
{code}
protoc --proto_path=fabric/protos --python_out=feature/common common/collection.proto common/common.proto common/configtx.proto common/configuration.proto common/ledger.proto common/policies.proto gossip/message.proto idemix/idemix.proto ledger/queryresult/kv_query_result.proto ledger/rwset/rwset.proto ledger/rwset/kvrwset/kv_rwset.proto msp/identities.proto msp/msp_config.proto msp/msp_principal.proto orderer/configuration.proto orderer/kafka.proto peer/admin.proto peer/chaincode.proto peer/chaincode_event.proto peer/chaincode_shim.proto peer/configuration.proto peer/events.proto peer/peer.proto peer/proposal.proto peer/proposal_response.proto peer/query.proto peer/resources.proto peer/signed_cc_dep_spec.proto peer/transaction.proto {code}

Install protoc by:
{code}
sudo apt install protobuf-compiler{code}",,latitiah,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyucv:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 8:03 PM;RichardHill;Is the work product documentation? If so where should it be placed?;;;","27/Jan/18 9:36 PM;RichardHill;Hyperledger uses protocol version 3 which can be built using the instructions here..https://github.com/google/protobuf/blob/master/src/README.md. Ive  done that and Im not sure of the next step.;;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,
Add WithConfig helper method to fabsdk,FAB-7862,27019,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,24/Jan/18 1:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Jan/18 2:06 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Currently fabdsk.New requires a config provider as its first argument.

For those that want to directly provide the underlying Config, this new helper will convert a Config to a ConfigProvider.",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyudb:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
CouchDB Index Definitions need to be validated for CouchDB syntax errors,FAB-7863,27022,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,24/Jan/18 2:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 8:11 AM,,,,v1.1.0-alpha,,,fabric-ledger,,,,0,,,,,,"Framework for couchdb index validation as well as json validation has been added in FAB-7715.

Additionally, CouchDB index definitions should be validated for CouchDB syntax errors.  Invalid index definitions can cause peer panic.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyudj:",,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jan/18 2:21 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/17105/;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-ca-merge-x86_64 and fabric-ca-merge-s390x are failing because of formatting error,FAB-7865,27024,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,sambhavdutt,sambhavdutt,24/Jan/18 2:32 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,27/Jan/18 5:43 AM,,,,,,,fabric-quality,,,,0,ci-failure,,,,,"fabric-ca-merge jobs are failing consistently as there could be formatting errors 
(FAB-7448, FAB-6448)

16:39:33 Checking file format ...
16:39:33 Checking for trailing blanks...
16:39:33 trailing blanks in ./scripts/fvt/version_test.sh
16:39:33 trailing blanks in ./cmd/fabric-ca-server/config.go
16:39:33 To fix, run
16:39:33    find . -path ./vendor -prune -o -type f -regex "".*\(regenDocs\|\.\(go\|sh\)\)"" -exec sed -i ""s/ \+$//"" {} \;
16:39:33 
16:39:33 Makefile:92: recipe for target 'format' failed
16:39:33 make: *** [format] Error 1
16:39:33 Build step 'Execute shell' marked build as failure

*Build Logs*

https://jenkins.hyperledger.org/view/fabric-ca/job/fabric-ca-merge-x86_64/394/console

https://jenkins.hyperledger.org/view/fabric-ca/job/fabric-ca-merge-s390x/394/console",,rennman,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyudr:",,,,,,,,,,,,,,,,,,,,,rennman,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 5:16 AM;rennman;This is not a script error. This is correctly identifying a formatting error in the code.

The files mentioned:
  ./scripts/fvt/version_test.sh
 ./cmd/fabric-ca-server/config.go
have trailing blanks.

I'll checkout master, remove the trailing blanks from the files and push them.

[Remove trailing blanks from files|https://gerrit.hyperledger.org/r/#/c/17151/];;;","27/Jan/18 5:43 AM;sambhavdutt;The fabric-ca-merge-x86_64 and fabric-ca-merge-s390x have passed after the latest patch was merged(Gerrit ID FAB-7865);;;",,,,,,,,,,,,,,,,,,,,,
[CI] - update latest images in packer image on x86_64 minions,FAB-7866,27025,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Jan/18 2:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 11:33 AM,,,,v1.1.0-alpha,,,fabric-ci,,,,0,fabric-ci,,,,,"[CI] - update latest images in packer image on x86_64 minions

update thirdparty docker images to x86_64-0.4.5 and fabric-baseimage to x86_64-0.4.5 also update nodejs version to 8.9.1",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyudz:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 11:34 AM;rameshthoomu;Patch has been submitted and merged. Now the x86_64 nodes initiate with 0.4.5 baseimage and thirdparty docker images.;;;",,,,,,,,,,,,,,,,,,,,,,
Fix delivery client envelope header type,FAB-7871,27030,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,24/Jan/18 5:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 9:23 PM,,,,v1.1.0,v1.1.0-alpha,,fabric-peer,,,,0,,,,,,"blocksRequester in requester.go takes care to send request to the ordering service in order to fetch blocks, where following function is in use:

{code}
func (b *blocksRequester) seekLatestFromCommitter(height uint64) error {
	seekInfo := &orderer.SeekInfo{
		Start:    &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: height}}},
		Stop:     &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: math.MaxUint64}}},
		Behavior: orderer.SeekInfo_BLOCK_UNTIL_READY,
	}

	//TODO- epoch and msgVersion may need to be obtained for nowfollowing usage in orderer/configupdate/configupdate.go
	msgVersion := int32(0)
	epoch := uint64(0)
	tlsCertHash := b.getTLSCertHash()
	env, err := utils.CreateSignedEnvelopeWithTLSBinding(common.HeaderType_CONFIG_UPDATE, b.chainID, localmsp.NewSigner(), seekInfo, msgVersion, epoch, tlsCertHash)
	if err != nil {
		return err
	}
	return b.client.Send(env)
}
{code}

The header type of the envelope is set to {{common.HeaderType_CONFIG_UPDATE}}, while correct value should be {{HeaderType_DELIVER_SEEK_INFO}} instead, e.g.

{code}
func (b *blocksRequester) seekLatestFromCommitter(height uint64) error {
	seekInfo := &orderer.SeekInfo{
		Start:    &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: height}}},
		Stop:     &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: math.MaxUint64}}},
		Behavior: orderer.SeekInfo_BLOCK_UNTIL_READY,
	}

	//TODO- epoch and msgVersion may need to be obtained for nowfollowing usage in orderer/configupdate/configupdate.go
	msgVersion := int32(0)
	epoch := uint64(0)
	tlsCertHash := b.getTLSCertHash()
	env, err := utils.CreateSignedEnvelopeWithTLSBinding(HeaderType_DELIVER_SEEK_INFO, b.chainID, localmsp.NewSigner(), seekInfo, msgVersion, epoch, tlsCertHash)
	if err != nil {
		return err
	}
	return b.client.Send(env)
}
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuen:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Jan/18 6:00 AM;C0rWin;https://gerrit.hyperledger.org/r/17115;;;",,,,,,,,,,,,,,,,,,,,,,
Java SDK v1.1-alpha,FAB-7872,27034,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,24/Jan/18 8:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 5:20 AM,v1.1.0,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,"Create v1.1-alpha release.

Branch created in github [https://github.com/hyperledger/fabric-sdk-java/releases]

Present in Maven [https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java]

!image-2018-01-30-15-20-05-573.png!",,denyeart,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 5:20 AM;rickr;image-2018-01-30-15-20-05-573.png;https://jira.hyperledger.org/secure/attachment/14520/image-2018-01-30-15-20-05-573.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuev:",,,,,,,,,,,,,,,,,,,,,denyeart,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 4:59 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17195/;;;",,,,,,,,,,,,,,,,,,,,,,
Install chaincode without required files,FAB-7876,27038,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,sanchezl,nakyo7,nakyo7,24/Jan/18 3:04 PM,24/Sep/19 11:22 PM,28/Oct/23 3:02 AM,24/Sep/19 11:22 PM,,,,,,,fabric-peer,,,,0,,,,,,"When I install my chaincode that use external library like ethereum-go, exclude files needed.

I hope that use ECDSA algorithm(Ethereum-go) in chaincode, but needed file is excluded when run command 'peer chaincode install'.

Need c++ files in  crypto/secp256k1/libsecp256k1 for build, but skipped that folder.

So `peer chaincode instantiate' is failed. (Not found files..)

 

> install

 
{code:java}
2018-01-26 09:58:41.560 UTC [golang-platform] GetDeploymentPayload -> DEBU 02c processing dep: github.com/ethereum/go-ethereum/crypto/secp256k1
2018-01-26 09:58:41.560 UTC [golang-platform] GetDeploymentPayload -> DEBU 02d checking: /opt/gopath/src/github.com/ethereum/go-ethereum/crypto/secp256k1 exists: true
2018-01-26 09:58:41.560 UTC [golang-platform] func1 -> DEBU 02e skipping dir: /opt/gopath/src/github.com/ethereum/go-ethereum/crypto/secp256k1/libsecp256k1

{code}
 

> instantiate
{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1
chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1/curve.go:43:44: fatal error: libsecp256k1/include/secp256k1.h: No such file or directory
compilation terminated.
# github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/sha3
chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/sha3/keccakf_amd64.go:13: missing function body for ""keccakF1600""
{code}
 

 ",,jyellick,nakyo7,sanchezl,ycarmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyufb:",,,,,,,,,,,,,,,,,,,,,jyellick,nakyo7,sanchezl,ycarmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 5:23 AM;sanchezl;[~nakyo7], Did you vendor the dependency ? See https://www.youtube.com/watch?v=-mlUaJbFHcM;;;","29/Jan/18 4:00 PM;nakyo7;[~sanchezl], Yes. I saw that, and did it.

But the go vendor do not include c++ files in subdirectories.

Skipped all files in go-ethereum/crypto/secp256k1/libsecp256k1.;;;","07/Feb/18 12:14 AM;Clayton Sims;[~sanchezl]what is the next step here?   Assigning to you Luis if you aren't the right (or a good person) let me know. ;;;","07/Feb/18 8:21 AM;sanchezl;This is not a Fabric issue. This appears to be a known problem with go vendoring in general and go-ethereum specifically.

[https://github.com/ethereum/go-ethereum/issues/2738]

Personally, I wasn't even able to get this working (e.g. {{go build}} the chaincode locally) when using a vendored go-ethereum dependency locally.

I'm closing this issue. [~nakyo7], please feel free to reopen if you have more information.;;;","24/Sep/19 3:39 PM;ycarmel;I experience similar issue.

The packager only collect files from the go package root folder, a package that contains c dependencies as an embedded directory is skipped, causing the build step to fail due to missing files.

 

 ;;;","24/Sep/19 11:22 PM;jyellick;This has been addressed the new lifecycle epic in v2.0 via FAB-11237.  Packaging may now be performed by commodity tar utilities, no longer requiring specific fabric tools.;;;",,,,,,,,,,,,,,,,,
Allow shim.MockStub to set the transaction time,FAB-7877,27039,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,c.nattawit,c.nattawit,24/Jan/18 4:19 PM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,,,,,,,fabric-ledger,,,,0,stale-item,,,,,"The current behavior of shim.MockStub is that it will set transaction time to be current time when shim.MockTransactionStart is called. But in some use case such as document's expiry date, it is necessary to be able to take control of transaction time to test this features. 

My proposal is to add a new function shim.SetTxTimestamp which receive time.Time and set that time as a timestamp for transaction.",,c.nattawit,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx09b:",,,,Unset,,,,,,Unset,,,,,,,,,,,c.nattawit,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Publish Node SDK v1.0.3,FAB-7878,27040,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,mastersingh24,mastersingh24,24/Jan/18 10:13 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Apr/18 10:03 PM,,,,v1.0.3,,,,,,31/Jan/18 12:00 AM,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyufj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/18 10:03 PM;mastersingh24;https://gerrit.hyperledger.org/r/17567;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - update nodejs version to 8.9.1 in fabric-test,FAB-7879,27042,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Jan/18 11:45 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 7:42 AM,,,,,,,fabric-quality,,,,0,,,,,,upgrade nodejs version to 8.9.1 in fabric-test repository.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyufz:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,,,,,,,true,"25/Jan/18 7:43 AM;rameshthoomu;Patch has been merged and now the tests running in fabric-test repo is using 8.9.1 nodejs version;;;",,,,,,,,,,,,,,,,,,,,,,
Bad error message when endorsement policy fails on instantiation ,FAB-7881,27044,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Nishi,Nishi,25/Jan/18 2:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Feb/18 1:02 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Source: upgrade.feature

location: ""fabric-test/feature-upgrade/features"" folder 

*Steps to Reproduce:*
{code:java}
Org1: peer0, peer1 Org2: peer2, peer3 
In one instance when I created a new channel after upgrade: 
1. Created new channel 
2. Joined 2 peers from org1 (peer0 and peer1) 
3. Installed chaincode on 2 peers (peer0 and peer2) 
4. endorsement policy -  n_out_of(2,[signed_by(0),signed_by(1)]),[member('peerOrg0'), member('peerOrg1')] 
5. Endorsement proposals with the above policy was sent to peer0 and peer2 6. It failed @step:  And user ""configAdminPeerOrg0"" using cert alias ""config-admin-cert"" sends proposal ""instantiateProposalch2"" to endorsers with timeout of ""90"" seconds with proposal responses ""instantiateProposalCh2Responses1""  | Endorser | | peer0 | | peer2 |. 

Failure is perfectly fine since we have not joined peer2 on channel which is on endorsement proposal. And also because of endorsement policy expects that members from both orgs sign it. {code}

*Expected Error Message:* 
{code:java}
To fail with a meaningful and appropriate error message something like
""Endorsement policy failure only one peer signed on policy""{code}
 

*Actual Error Message:*
{code:java}
Traceback (most recent call last)
File ""/home/nishi/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1456, in run
match.run(runner.context)
File ""/home/nishi/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1903, in run
self.func(context, *args, **kwargs)
File ""steps/endorser_impl.py"", line 155, in step_impl
resultsDict = dict(zip(endorsers, [respFuture.result() for respFuture in proposalResponseFutures]))
File ""/home/nishi/Envs/behave_venv/local/lib/python2.7/site-packages/grpc/_channel.py"", line 279, in result
raise self
*_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, Failed to deserialize creator identity, err MSP peerOrg0 is unknown)>*
{code}
 ",,C0rWin,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyugn:",,,,,,,,,,,,,,,,,,,,,C0rWin,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Feb/18 1:02 AM;C0rWin;Actually duplicates the FAB-7952, closing and linking those issues.;;;",,,,,,,,,,,,,,,,,,,,,,
Node and golang chaincode do not consistently validate couchdb index file extension (.json),FAB-7886,27049,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,AdnanChoudhury,AdnanChoudhury,25/Jan/18 5:40 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 11:21 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"When using Golang CC, the presence of a *.txt file (containing multiple json indexes) does not cause any issues in creating indexes from valid index definition files, but while using Node CC, the peer crashes with following error:



 
{code:java}
[36m2018-01-24 18:25:09.185 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 937[0m Reading artifact from file: META-INF/statedb/couchdb/indexes/backup.txt
[36m2018-01-24 18:25:09.185 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 938[0m Creating index from file file: backup.txt
[36m2018-01-24 18:25:09.185 UTC [couchdb] CreateIndex -> DEBU 939[0m Entering CreateIndex() indexdefinition={""index"":{""fields"":[""data.docType"",""data.owner""]},""name"":""indexOwner"",""type"":""json""}
{""index"":{""fields"":[""data.owner""]},""name"":""indexOwnerOnly"",""type"":""json""}
{""index"":{""fields"":[""data.docType"",""data.owner"", ""data.color"", ""data.size""]},""name"":""indexAll"",""type"":""json""}
[33m2018-01-24 18:25:09.185 UTC [cceventmgmt] HandleChaincodeDeploy -> WARN 93a[0m Error while invoking a listener for handling chaincode install event: JSON format is not valid
[31m2018-01-24 18:25:09.186 UTC [gossip/state] commitBlock -> ERRO 93b[0m Got error while committing(JSON format is not valid
commit failed
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:225
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:782
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337)
[35m2018-01-24 18:25:09.186 UTC [gossip/state] deliverPayloads -> CRIT 93c[0m Cannot commit block to the ledger due to JSON format is not valid
commit failed
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:225
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:566
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337
panic: Cannot commit block to the ledger due to JSON format is not valid
commit failed
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:225
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:566
runtime.goexit
 /opt/go/src/runtime/asm_amd64.s:2337
goroutine 409 [running]:
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201e2840, 0xf0c2f5, 0x2c, 0xc421532330, 0x1, 0x1)
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194
{code}
*Expected:*

From the description from FAB-3067, the expected behavior is that the txt file is ignored and normal operation continues in *both* cases.

Attached is the peer log with Golang CC and Node CC.",,AdnanChoudhury,chris.elder,denyeart,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7889,,,,,,,,,,,,,,,,,"25/Jan/18 5:40 AM;AdnanChoudhury;peerlog_expected_golangCC.log;https://jira.hyperledger.org/secure/attachment/14398/peerlog_expected_golangCC.log","25/Jan/18 5:40 AM;AdnanChoudhury;peerlog_panic_nodeCC.log;https://jira.hyperledger.org/secure/attachment/14397/peerlog_panic_nodeCC.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuhj:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,chris.elder,denyeart,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 6:55 AM;denyeart;I see the difference... in golang chaincode packaging there is some additional filtering which removes *.txt files during chaincode packaging.  Therefore the invalid index does not get included and hence no crash.  The crash issue due to invalid JSON itself was fixed in -FAB-7715-.

{color:#444444}To resolve the issue of .txt files not getting included, let's document that extension of .json must be used for the index defintion json files (see FAB-7889).{color}

{color:#444444}To ensure more consistency across golang chaincode and node chaincode, let's use this JIRA to enforce that index files must utilize *.json file extension.{color};;;","04/Feb/18 6:04 AM;denyeart;I think this is a Medium problem now that we've documented that you should use *.json for index files.  I'll move to Medium since this defect is just about enforcing it during packaging time for consistency.  [~AdnanChoudhury] feel free to move back if you disagree.;;;","16/Feb/18 10:03 PM;denyeart;For background:

packaging of go chaincode indexes: [https://gerrit.hyperledger.org/r/#/c/16697/]

packaging of node chaincode indexes: [https://gerrit.hyperledger.org/r/#/c/16845/]

additional validation for both go and node chaincode indexes: [https://gerrit.hyperledger.org/r/#/c/17045/]

 ;;;","21/Feb/18 3:40 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/18063/;;;","21/Feb/18 11:55 AM;denyeart;The peer no longer panics when it hits a malformed index error, FAB-7777 changed the behavior to log the error and keep processing blocks, since the index is not needed on the committing side.
The only thing this Jira will do is enforce consistent file extension checking on packaged couchdb indexes across golang and node chaincode (it should be *.json only).  I've updated the title accordingly.;;;",,,,,,,,,,,,,,,,,,
client.config generated by cluster example contains the wrong identity keys,FAB-7888,27051,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,schristie,schristie,schristie,25/Jan/18 6:07 AM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,21/Apr/18 7:09 AM,,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"Running 'make' in examples/cluster, followed by 'build/compose-up.sh' generates a client.config file with all of the relevant keys for interacting with the generated docker-compose deployment. Specifically, it generates an identity [Admin@org1.net|mailto:Admin@org1.net] for use when interacting with chaincode deployed on the network.

However, instead of using the keys generated for that identity, it uses the server certs.

compose-up.sh needs to be fixed to use the correct keys for the [Admin@org1.net|mailto:Admin@org1.net] identity.

 

Changeset with possible fix: [https://gerrit.hyperledger.org/r/#/c/17925/]

This patch is untested, because I can't get the cluster example to work on the master branch; it worked in a previous version however.

May also be resolved by: [https://gerrit.hyperledger.org/r/#/c/12159/]

However, inspecting the relevant artifacts reveals that they have different contents, so they are not equivalent solutions.",,denyeart,greg.haskins,schristie,,,,,,,,,,,,,,,,,,,,,,,,,,,18000,3600,,0%,18000,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuhz:",,,,,,,,,,,,,,,,,,,,,denyeart,greg.haskins,schristie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/18 3:59 AM;Clayton Sims;Do you have an eta to fix this?;;;","14/Feb/18 7:32 AM;schristie;Sorry. I have a simple patch that fixes this, but I didn't push it because I was unable to test against the latest head last time I tried.

I'll try again this week, and maybe push the patch anyway.;;;","21/Feb/18 5:40 AM;denyeart;[~greg.haskins] Could you look at the two changesets in the Description?  Which direction do you think we should go with this one?

If not settled this week we'll defer to 1.2.;;;","21/Feb/18 6:05 AM;greg.haskins;I believe this is already fixed in the (yet to be merged) CR 12159

https://gerrit.hyperledger.org/r/c/12159/;;;",,,,,,,,,,,,,,,,,,,
CouchDB indexing Documentation: indexes should only be in *.json file,FAB-7889,27053,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,AdnanChoudhury,AdnanChoudhury,25/Jan/18 7:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Jan/18 1:15 PM,,,,v1.1.0-alpha,,,fabric-docs,,,,0,,,,,,The documentation should reflect that the supplied indexes with the chaincodes should only be in *.json file format.,,AdnanChoudhury,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyui7:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 8:32 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17161/;;;","25/Jan/18 8:38 AM;denyeart;{color:#444444}golang chaincode packaging excludes certain file extensions.  *.json is an allowed file extension for both golang and node.js, therefore we will document that couchdb index definition files should utilize *.json file extension.{color}

{color:#444444}To ensure more consistency across golang chaincode and node chaincode, follow-on FAB-7886 will enforce that index files must utilize *.json file extension.{color};;;","27/Jan/18 3:13 AM;joe-alewine;Doc merged here:

http://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html;;;",,,,,,,,,,,,,,,,,,,,
Add markdown capability to documentation,FAB-7891,27056,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,odowdaibm,odowdaibm,25/Jan/18 9:02 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,25/Jan/18 9:11 PM,,,,,,,fabric-docs,,,,0,,,,,,"Allow READTHEDOCS documentation to accept .md (markdown) files as well as current .RST format. 

This will allow more contributors to create content.",,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyuiv:",,,,Unset,,,,,,Unset,,,,,,,,,,,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/18 9:04 PM;odowdaibm;Fairly straightforward changes required to enable this
 # Install commonmark parser by updating docs/requirements.txt
 # update conf.py to enable .md files in sphinx framework using commonmark parser;;;","25/Jan/18 9:05 PM;odowdaibm;# Had put commonmark parser in wrong file.  Updated to docs/requirement.txt rather than /docs/source/requirements.txt
 # Also specified version explicitly with recommonmark==0.4.0;;;","25/Jan/18 9:11 PM;odowdaibm;Killed this JIRA, as figured out how to move previous from BE project.;;;",,,,,,,,,,,,,,,,,,,,
Add markdown capability to documentation,FAB-7892,27041,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,odowdaibm,odowdaibm,24/Jan/18 10:24 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,26/Jan/18 11:43 PM,,,,,,,fabric-docs,,,,0,Documentation,,,,,"Allow READTHEDOCS documentation to accept .md (markdown) files as well as current .RST format. 

This will allow more contributors to create content.",,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyufr:",,,,Unset,,,,,,Unset,,,,,,,,,,,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/18 2:27 AM;odowdaibm;Fairly straightforward changes required to enable this
 # Install commonmark parser by updating docs/requirements.txt
 # update conf.py to enable .md files in sphinx framework using commonmark parser

 

 

 ;;;","25/Jan/18 8:56 PM;odowdaibm;# Had put commonmark parser in wrong file.  Updated to docs/requirement.txt rather than /docs/source/requirements.txt
 # Also specified version explicitly with recommonmark==0.4.0;;;","25/Jan/18 9:06 PM;odowdaibm;Created in wrong project by accident.  Moved to FAB as https://jira.hyperledger.org/browse/FAB-7892

 ;;;",,,,,,,,,,,,,,,,,,,,
Concept - Peer,FAB-7895,27060,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,odowdaibm,odowdaibm,odowdaibm,25/Jan/18 11:37 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,15/Mar/18 4:15 AM,,,,v1.1.0,,,fabric-docs,,,,0,Documentation,,,,,"New Peers topic in Key Concepts section.

This is a new topic covering peers

(Uses markdown for content)",,denyeart,luomin,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyujr:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,luomin,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 5:14 AM;odowdaibm;Updating JIRA as patch now ready;;;","04/Feb/18 1:26 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17473/;;;",,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-ca scripts in the ci-management repo.,FAB-7896,27061,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,25/Jan/18 11:39 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/May/18 12:57 AM,,,,Future,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-arrange the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-ca project in it's own folder in the ci-management repository.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyujz:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 12:08 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21975/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric scripts in the ci-management repo.,FAB-7897,27062,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,25/Jan/18 11:45 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/May/18 6:18 AM,Future,,,,,,fabric-ci,,,,0,build-system,quality,,,,"Re-arrange the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric project in it's own folder in the ci-management repository.
 ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuk7:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/18 1:04 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21861/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-chaincode-java scripts in the ci-management repo.,FAB-7898,27063,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,25/Jan/18 11:51 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/May/18 12:51 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-arrange the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-chaincode-java project in it's own folder in the ci-management repository.
 ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyukf:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 12:04 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21973/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-chaincode-node scripts in the ci-management repo.,FAB-7899,27064,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jtclark,jtclark,25/Jan/18 11:51 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/May/18 8:08 AM,Future,,,,,,fabric-ci,,,,0,build-system,quality,,,,"Re-arrange the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-chaincode-node project in it's own folder in the ci-management repository.
 ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyukn:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/18 8:08 AM;rameshthoomu;No changes required for fabric-chaincode-node CI jobs config in CI-management repo. Marking this as done without any changes to the ci config.;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-chaintool scripts in the ci-management repo.,FAB-7900,27065,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,25/Jan/18 11:52 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/May/18 12:51 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-chaintool project in it's own folder in the ci-management repository.
  ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyukv:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 12:00 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21971/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-samples scripts in the ci-management repo.,FAB-7901,27066,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,25/Jan/18 11:53 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/May/18 11:53 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-samples project in it's own folder in the ci-management repository.
  ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyul3:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 11:38 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21969/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-sdk-go scripts in the ci-management repo.,FAB-7902,27067,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,26/Jan/18 12:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/May/18 11:53 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-sdk-go project in it's own folder in the ci-management repository.
 ",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyulb:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 11:31 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21967/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-sdk-java scripts in the ci-management repo.,FAB-7903,27068,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,26/Jan/18 12:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/May/18 11:53 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-sdk-java project in it's own folder in the ci-management repository.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyulj:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 11:27 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21965/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-sdk-node scripts in the ci-management repo.,FAB-7904,27069,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,26/Jan/18 12:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/May/18 12:51 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-sdk-node project in it's own folder in the ci-management repository.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyulr:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 11:22 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21963/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-sdk-py scripts in the ci-management repo.,FAB-7905,27070,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jtclark,jtclark,26/Jan/18 12:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/May/18 8:07 AM,Future,,,,,,fabric-ci,,,,0,build-system,quality,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-sdk-py project in it's own folder in the ci-management repository.",,jtclark,palash25,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyulz:",,,,,,,,,,,,,,,,,,,,,jtclark,palash25,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/18 8:07 AM;rameshthoomu;No changes required for fabric-sdk-py CI jobs config in CI-management repo. Marking this as done without any changes to the ci config.;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-sdk-rest scripts in the ci-management repo.,FAB-7906,27071,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,jtclark,jtclark,26/Jan/18 12:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/May/18 8:06 AM,Future,,,,,,fabric-ci,,,,0,build-system,quality,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-sdk-rest project in it's own folder in the ci-management repository.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyum7:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/18 8:06 AM;rameshthoomu;No changes required for fabric-sdk-rest CI jobs config in CI-management repo. Marking this as done without any changes to the ci config.;;;",,,,,,,,,,,,,,,,,,,,,,
Re-organize the fabric-test scripts in the ci-management repo.,FAB-7907,27072,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jtclark,jtclark,26/Jan/18 12:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/May/18 11:54 AM,Future,,,,,,fabric-ci,,,,0,CI_Optimization,,,,,"Re-organize the Jenkins Jobs, Jenkins Macros, shell scripts for the fabric-test project in it's own folder in the ci-management repository.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyumf:",,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/18 11:04 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/21961/;;;",,,,,,,,,,,,,,,,,,,,,,
Mutual TLS no longer connecting successfully,FAB-7908,27074,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,latitiah,latitiah,26/Jan/18 12:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 11:47 PM,v1.1.0,,,v1.1.0-alpha,,,fabric-samples,,,,0,,,,,,"*fabric commit:* f3ea98e55dae5a6c24887407eae110cc784c3512

The TLS connections are failing. When executing using fabric-ca, the RootCA fails with the following error:
{code}
2018/01/24 15:02:17 [DEBUG] 1 CA instance(s) running on server
2018/01/24 15:02:17 [DEBUG] TLS is enabled
2018/01/24 15:02:17 [DEBUG] Closing server DBs
Error: TLS is enabled but no TLS certificate provided{code}
",,aambati,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyumv:",,,,,,,,,,,,,,,,,,,,,aambati,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 12:32 AM;aambati;The reason it was not working is :

1. Some fabric-ca images that base on fabric images, so make sure FABRIC_TAG environment variable is set to the latest tag of the fabric images that are on the machine where fabric-ca sample is being run

 

2. Fabric-ca code was changed to restrict custom attributes from starting with ""hf."" prefix. But fabric-ca-sample was using hf.admin custom attribute. Hence it was failing. 

 

After fixing these two problems, [~latitiah]was able to run the fabric-ca sample with mutual auth successfully.;;;","26/Jan/18 1:31 AM;aambati;https://gerrit.hyperledger.org/r/c/17179/;;;",,,,,,,,,,,,,,,,,,,,,
update bootstrap script to pull latest thirdparty docker images,FAB-7909,27075,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jan/18 12:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 10:49 PM,,,,v1.1.0-alpha,,,fabric-build,,,,0,,,,,,"update bootstrap script ([https://github.com/hyperledger/fabric/blob/master/scripts/bootstrap.sh)] to pull latest thirdparty docker images version 0.4.5

Thirdparty docker images have been released with version 0.4.5, which is not same as fabric release version (1.1.0-alpha). This boortstrap script has to change to pull fabric images with 1.1.0-alpha and thirdparty images with 0.4.5",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyun3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Clean up chaincode containers during stop script in fabric-ca sample,FAB-7910,27076,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,26/Jan/18 12:58 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,31/Jan/18 4:04 AM,,,,,,,fabric-samples,,,,0,,,,,,"The stop.sh script performs a docker-compose down which stops the network and the services that are in the composition file, but it does not stop the chaincode containers.",,denyeart,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyunb:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/18 4:04 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17189/;;;",,,,,,,,,,,,,,,,,,,,,,
Extract Resource methods into new pkg,FAB-7912,27079,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,26/Jan/18 3:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 6:15 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyunz:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: peer upgrade with vendored chaincode shim,FAB-7913,27080,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,jyellick,jyellick,26/Jan/18 3:56 AM,23/Jan/20 7:23 AM,28/Oct/23 3:02 AM,23/Jan/20 7:23 AM,,,,Future,,,fabric-quality,,,,0,stale-item,,,,,"Some users may have vendored the chaincode shim because they wished to import the protobuf timestamp, or some other structure which is also used in the fabric codebase.

In this case, the user most likely vendored the chaincode shim.  For example: https://github.com/ghaskins/hyperledger-fabric-alpha2-challenge/tree/master/jyellick/plob/

When the chaincode shim is vendored, the peer builds a chaincode image based on the version of the chaincode shim vendored, not based on the version of the peer.

-----

Test case:

Procedure:

# Start a v1.0.x peer
# Deploy a chaincode which vendors a v1.0.x chaincode shim.
# Shut down the peer
# Delete the chaincode image
# Upgrade the peer to v1.1.0
# Start up the peer
# Attempt to query the chaincode

Expected Results:

The chaincode container will fail to connect to the peer, as the v1.0.x vendored shim fails to do mutual TLS authentication.

Please additionally document:

What does the peer log look like? The chaincode log? Are there any clues for a user to detect this?",,jyellick,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8242,FAB-8243,,,,,,,FAB-8091,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyuo7:",,,,,,,,,,,,,,,,,,,,,jyellick,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"06/Feb/18 2:57 AM;scottz;[~jyellick] Is it sufficient (equivalent) to do this without doing the v1_1 capabilities updates for the orderers and peers? If so, then we [~Nishi] can put these changes into [https://github.com/hyperledger/fabric-test/blob/master/feature-upgrade/features/upgrade-abort.feature] instead of the upgrade.feature file which does the full upgrade.;;;","01/Mar/18 10:35 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/17855/]

[https://gerrit.hyperledger.org/r/#/c/17857/]

[https://gerrit.hyperledger.org/r/#/c/17963/]

 ;;;","23/Jan/20 7:23 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Test Scenario: peer chaincode deploy with vendored newer chaincode shim,FAB-7914,27081,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,jyellick,jyellick,26/Jan/18 4:00 AM,23/Jan/20 7:24 AM,28/Oct/23 3:02 AM,23/Jan/20 7:24 AM,,,,,,,,,,,0,stale-item,,,,,"Some users may have vendored the chaincode shim because they wished to import the protobuf timestamp, or some other structure which is also used in the fabric codebase.

In this case, the user most likely vendored the chaincode shim.  For example: https://github.com/ghaskins/hyperledger-fabric-alpha2-challenge/tree/master/jyellick/plob/

When the chaincode shim is vendored, the peer builds a chaincode image based on the version of the chaincode shim vendored, not based on the version of the peer.

-----

Test case:

Procedure:

# Start a v1.0.x peer
# Deploy a chaincode which vendors a v1.1.0 chaincode shim.
# Attempt to query the chaincode

Expected Results:

The chaincode container will fail to start because the v1.0.x peer does not inject a client certificate into the container.

Please additionally document:

What does the peer log look like? The chaincode log? Are there any clues for a user to detect this?",,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8135,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyuof:",,,,,,,,,,,,,,,,,,,,,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:24 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Test Scenario: peer downgrade without deleting chaincode image,FAB-7915,27082,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,jyellick,jyellick,26/Jan/18 4:03 AM,23/Jan/20 7:24 AM,28/Oct/23 3:02 AM,23/Jan/20 7:24 AM,,,,,,,,,,,0,stale-item,,,,,"There is no reason to believe that a chaincode image built with mutual TLS auth, and injected peer certificate should fail to connect and operate with a v1.0.x peer.  However, this needs to be tested.

-----

Test case:

Procedure:

# Start a v1.1.0 peer
# Deploy a chaincode (which either vendors the v1.1.0 chaincode shim, or does not vendor the shim)
# Query the chaincode
# Shutdown the peer
# Downgrade the peer to v1.0.x (do not delete the chaincode image)
# Start the peer
# Query the chaincode

Expected Results:

The query should execute correctly.",,jirad2020,jyellick,Ratnakar,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8210,,,,,,,,FAB-7376,FAB-8152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyuon:",,,,,,,,,,,,,,,,,,,,,jirad2020,jyellick,Ratnakar,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/18 2:42 AM;scottz;[~jyellick] Is this a valid testcase? Is this procedure really supported and expected to work? The upgrade procedure document says to delete the chaincode images when the peer is down when upgrade/downgrade binaries.;;;","09/Feb/18 8:12 AM;Ratnakar;[~jyellick] as per the above comment I see the chaincode container is failed to connect to peer and unable to execute the query. 

*chaincode logs for reference:*

{code}
docker logs dev-peer0.org1.example.com-mycc-1.0

2018-02-08 22:53:38.443 UTC [shim] userChaincodeStreamGetter -> ERRO 001 open : no such file or directory
error trying to read file content
github.com/hyperledger/fabric/core/chaincode/shim.userChaincodeStreamGetter
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:89
github.com/hyperledger/fabric/core/chaincode/shim.Start
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:150
main.main
	/chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:189
runtime.main
	/opt/go/src/runtime/proc.go:195
runtime.goexit
	/opt/go/src/runtime/asm_amd64.s:2337
Error starting Simple chaincode: error trying to read file content : open : no such file or directoryr
{code}

I raised a bug for this [FAB-8152|https://jira.hyperledger.org/browse/FAB-8152];;;","10/Feb/18 7:48 AM;jyellick;As mentioned in the bug, this is not a supported path, but I was not expecting a failure.  It seems likely that our users might also expect this path to work.  Since we are certain that it does not work, we can note and perhaps document the failure case to save our users the trouble of debugging.;;;","12/Feb/18 3:42 AM;scottz;I created a task to document this, as suggested, FAB-8210, and linked it to this issue (relates-to).;;;","23/Jan/20 7:24 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,
System Test: Add new node to existing fabric network and use mutualTLS,FAB-7916,27083,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,26/Jan/18 4:40 AM,28/Jul/19 1:35 AM,28/Oct/23 3:02 AM,28/Jul/19 1:35 AM,,,,,,,fabric-quality,,,,0,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuov:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 1:35 AM;mastersingh24;no longer needed;;;",,,,,,,,,,,,,,,,,,,,,,
redefine tests in fabric-test smoke suite used for merge jobs,FAB-7918,27085,26225,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,26/Jan/18 5:54 AM,01/Aug/19 11:36 AM,28/Oct/23 3:02 AM,01/Aug/19 11:36 AM,,,,Future,,,fabric-quality,,,,0,,,,,,"Rescope the smoke test suite (currently exists in regression/smoke/ directory).

And possibly rename it.

Include the minimum tests required to exercise major functionalities in each tool in the fabric-test repo

We can continue to use it for the CI verify jobs for fabric-test; so it will be run with each submitted Patchset.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyup3:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/19 11:36 AM;scottz;This was completed, using a different task.;;;",,,,,,,,,,,,,,,,,,,,,,
redefine tests in fabric-test daily suite,FAB-7919,27086,26225,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,26/Jan/18 5:56 AM,01/Aug/19 11:38 AM,28/Oct/23 3:02 AM,01/Aug/19 11:38 AM,,,,Future,,,fabric-quality,,,,0,,,,,,This should provide functional coverage and integration tests leveraging all the fabric family repositories.,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyupb:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/19 11:38 AM;scottz;We've done this; and are redoing again, with other issues, to remove the behave tests (replace with fabric UT/IT and sdk IT tests) and likely removing python driver.;;;",,,,,,,,,,,,,,,,,,,,,,
redefine tests in fabric-test release bucket,FAB-7920,27087,26225,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,scottz,scottz,scottz,26/Jan/18 5:59 AM,01/Aug/19 11:39 AM,28/Oct/23 3:02 AM,01/Aug/19 11:39 AM,,,,Future,,,fabric-quality,,,,0,,,,,,"Move other tests from the daily test suite, such as long runs and most of performance tests, to an independent test suite (could be run 'weekly' or 'per release')",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyupj:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
why is a v1.1 config update needed in greenfield deployment,FAB-7923,27097,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,26/Jan/18 9:02 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,27/Jan/18 4:32 AM,,,,v1.1.0,,,fabric-orderer,,,,0,Usability,,,,,"When starting a new network in v1.1, after creating a channel, we have been told that a configAdmin for the OrdererOrg must send a capabilities config update to enable capability v1_1 in group /Channel/Application.

I sort of understand why this makes sense for the upgrade scenario, but this seems entirely unnecessary in this situation where we are starting the entire network on v1.1. Why should we require the network operator to enable a v1.1 capability, for every channel they create? If they didn't want v1.1 capabilities, they would not have installed a v1.1 network.

Is there some way to avoid this - maybe with a config parameter in orderer.yaml or configtx.yaml when starting the v1.1 orderer? Please explain.

As a side issue, we should probably document the need to do this when creating a channel in v1.1, and possibly mention it in the upgrade doc  https://docs.google.com/document/d/1JRYj7UW_3WXW5xCxXFdM5KtoNGmFr5g0HA_tR-8afLc/edit#heading=h.waeh2h8byypm",,jyellick,kchristidis,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyurr:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,kchristidis,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 11:42 AM;jyellick;> we have been told that a configAdmin for the OrdererOrg must send a capabilities config update to enable capability v1_1 in group /Channel/Application.

This is incorrect.  The channel creation transaction should encode the /Channel/Application capabilities.  Also, the ordering admin never has anything to do with the /Channel/Application capabillities, only the /Channel and /Channel/Orderer capabilities.

> I sort of understand why this makes sense for the upgrade scenario, but this seems entirely unnecessary in this situation where we are starting the entire network on v1.1. 

You might be starting a greenfield network using the v1.1 fabric tools, but you might want to bootstrap it in a way that other organizations who are still running v1.0.x code could join it.  When bootstrapping, if you choose one of the v1.1 profiles, the system will be bootstrapped in v1.1 mode, no updates are necessary.

> Why should we require the network operator to enable a v1.1 capability, for every channel they create? If they didn't want v1.1 capabilities, they would not have installed a v1.1 network.

When creating a channel, you specify the application portion of the channel config.  This includes the organizations, policies, and capabilities for this channel.

> Is there some way to avoid this - maybe with a config parameter in orderer.yaml or configtx.yaml when starting the v1.1 orderer? Please explain.

You can look for example at https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/configtx.yaml where all of the profiles use v1.1 capabilities.  Note that the e2e never does any configuration updates, but is bootstrapped and creates channels with v1.1 capabilities.
;;;","27/Jan/18 4:31 AM;scottz;ok. This seems sufficient. We will revise our tests and expectations.;;;",,,,,,,,,,,,,,,,,,,,,
Update fabric-ca to use latest fabric-baseimage version,FAB-7924,27098,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jan/18 1:21 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 8:42 PM,,,,v1.1.0-alpha,,,fabric-ca,,,,0,,,,,,update fabric-baseimage version to (0.4.5) latest in fabric-ca. Current version in fabric-ca is 0.4.2.,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyurz:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 1:44 PM;rameshthoomu;Patch has been submitted, in-review;;;","26/Jan/18 8:44 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17237/;;;",,,,,,,,,,,,,,,,,,,,,
Update fabric-sdk-node to use latest fabric-baseimage version,FAB-7925,27099,26901,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Jan/18 1:59 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 11:23 PM,,,,v1.1.0-alpha,,,fabric-sdk-node,,,,0,,,,,,couchdb version has to update to 0.4.5 in fabric-client/package.json. Existing process won't work as we don't publish thirdparty docker images with image tag `1.1.0-alpha`,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyus7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 2:31 PM;rameshthoomu;patch has been submitted and it;s in-review [https://gerrit.hyperledger.org/r/#/c/17239/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
Document TLS configuration for peers and orderers,FAB-7926,27100,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,26/Jan/18 9:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Jan/18 10:48 PM,,,,v1.1.0,v1.1.0-alpha,,fabric-docs,,,,0,release-planning-1.1,,,,,,,joe-alewine,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyusf:",,,,,,,,,,,,,,,,,,,,,joe-alewine,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/18 12:43 AM;joe-alewine;In docs:

http://hyperledger-fabric.readthedocs.io/en/latest/enable_tls.html;;;",,,,,,,,,,,,,,,,,,,,,,
PTE backward compatible get_peerStats.sh,FAB-7927,27101,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,26/Jan/18 11:23 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 3:55 AM,,,,,,,fabric-quality,,,,0,,,,,,"The peer log message of the block information was

2018-01-24 15:45:44.042 UTC [kvledger] CommitWithPvtData -> INFO 331 Channel [testorgschannel1]: Created block [466] with 86 transaction(s)

Now is ""Committed block""

The script get_peerStats.sh was created after the changes.  This JIRA task is to make script get_peerStats.sh backward compatible.

 

Also change the default batchsize from 10 to 500. And add option ""-l INFO"" in creating network so that the block information is included in the peer log.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyusn:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,,,,,,,true,"27/Jan/18 12:52 AM;dongming;review patch: https://gerrit.hyperledger.org/r/#/c/17243/;;;",,,,,,,,,,,,,,,,,,,,,,
Fabric 1.1 Binaries Fail When Using a Fabric 1.0 Config File (core.yaml) on Join Channel,FAB-7928,27102,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,suryalnvs,suryalnvs,27/Jan/18 12:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 4:09 AM,v1.1.0,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Event producer is erroring out when joining the peers using SDK to a new channel with v1.1 images but using v1.0 config files. First peers in each org (2 peers per org) are able to join successfully with 200 response and second peers in each org erroring out showing
{code:java}
Error: 2 UNKNOWN: event message validation failed: [message timestamp out of acceptable range. must be within 0s of current server time]
    at createStatusError (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:65:15)
    at ClientDuplexStream._emitStatusIfDone (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:271:19)
    at ClientDuplexStream._receiveStatus (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:249:8)
    at /root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:767:12
/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/pte-main.js:814
                                    throw new Error('[joinChannel] Failed to registerBlockEvent due to error: ' + err.stack ? err.stack : err);
                                    ^

Error: Error: 2 UNKNOWN: event message validation failed: [message timestamp out of acceptable range. must be within 0s of current server time]
    at createStatusError (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:65:15)
    at ClientDuplexStream._emitStatusIfDone (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:271:19)
    at ClientDuplexStream._receiveStatus (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:249:8)
    at /root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:767:12
    at eh.registerBlockEvent (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/pte-main.js:814:43)
    at closer (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/EventHub.js:435:5)
    at EventHub._closeAllCallbacks (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/EventHub.js:440:3)
    at EventHub._disconnect (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/EventHub.js:385:8)
    at ClientDuplexStream.<anonymous> (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/EventHub.js:356:10)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at ClientDuplexStream._emitStatusIfDone (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:272:12)
    at ClientDuplexStream._receiveStatus (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:249:8)
    at /root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/client.js:767:12
{code}",,suryalnvs,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7955,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyusv:",,,,,,,,,,,,,,,,,,,,,suryalnvs,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jan/18 10:14 PM;wlahti;Looks like we need a fallback value for when the timewindow is not set to avoid unintended registration failures like this. ;;;","30/Jan/18 3:48 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/17299/;;;",,,,,,,,,,,,,,,,,,,,,
"PTE smoke test scenario: 4 ch, 8 threads x 100, channel events with full-blocks",FAB-7929,27104,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,27/Jan/18 12:50 AM,28/Nov/18 8:56 AM,28/Oct/23 3:02 AM,05/Sep/18 6:04 AM,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,"Find or create a short PTE test, using NL, and kafka, multiple channels and orderers, and integrate into the fabric-test/regression/smoke/runSmokeTestSuite.sh

Test Scenario name: Performance test: 4 channels short test
 Component: Performance test
 Description: performance events per channel with levelDB
     chaincode: each channel has one chancode, sample_cc, instantiated
     transactions: 8 threads, each thread sends 100 invokes concurrently

         thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

         thread 5 sends to org1 peer1 on channel 3, registers events for channel3
          thread 6 sends to org2 peer1 on channel 3, registers events for channel3
          thread 7 sends to org1 peer1 on channel 4, registers events for channel4
          thread 8 sends to org2 peer1 on channel 4, registers events for channel4

Network Topology: docker containers; 4 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels
 event type: channel event service, listener: block

Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error in the PTE log
     each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself in the PTE log
 The TPS (transactions per second) will be calculated from peers logs and documented.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8099,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/18 1:07 AM;suryalnvs;FAB-7929-8i-FAB-7929-8q.log;https://jira.hyperledger.org/secure/attachment/15100/FAB-7929-8i-FAB-7929-8q.log",,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzyutb:",,,,,,,,,,,,,,,,Pass,,Unset,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"31/Jan/18 5:40 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17311/;;;","29/Aug/18 6:44 AM;scottz;Test is done. Need to add it to the smoke test suite. Refer to FAB-8099.;;;","31/Aug/18 5:08 AM;scottz;https://gerrit.hyperledger.org/r/#/c/26006/;;;",,,,,,,,,,,,,,,,,,,,
Consolidate multiple steps in feature-upgrade tests,FAB-7930,27106,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,27/Jan/18 1:44 AM,30/Jul/19 11:42 AM,28/Oct/23 3:02 AM,30/Jul/19 11:42 AM,,,,,,,fabric-quality,,,,0,,,,,,"In the feature-upgrade behave tests, there are multiple steps that are used to perform certain actions. It would be nice to be able to write tests such that these steps can be consolidated into a single step. For example, when a user wants to invoke on a specific channel with a specific set of args, we should be able to write this in 1 step. 

Behave allows for the consolidation of steps. For example, 
{code}
@when('I do the same thing as before')
def step_impl(context):
    context.execute_steps('''
        When I press the big red button
        And I duck
    '''){code}",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyutr:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,
misspellings in fabric/examples/e2e_cli/configtx.yaml,FAB-7933,27111,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,luomin,scottz,scottz,27/Jan/18 4:39 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,31/Jan/18 3:25 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,"3 instances of a word are spelled incorrectly, in the Capabilities section:

imcompatibilities  : (im) -> (in)",,luomin,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyuuf:",,,,Unset,,,,,,Unset,,,,,,,,,,,luomin,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jan/18 9:08 PM;luomin;https://gerrit.hyperledger.org/r/#/c/17287/;;;",,,,,,,,,,,,,,,,,,,,,,
Make Context func names consistent,FAB-7935,27113,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,27/Jan/18 5:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Jan/18 6:48 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuun:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
OTE smoke test scenario: add to fabric-test smoke-test-suite,FAB-7936,27114,26225,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,27/Jan/18 6:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 11:02 PM,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"Find or create a short OTE test, using NL, and kafka, multiple channels and orderers, and integrate into the fabric-test/regression/smoke/runSmokeTestSuite.sh",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7996,FAB-8090,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuuv:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,"07/Feb/18 11:02 PM;scottz;https://gerrit.hyperledger.org/r/#/c/17365/;;;",,,,,,,,,,,,,,,,,,,,,,
TLS doc should be under operations not architecture,FAB-7939,27117,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,27/Jan/18 8:19 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Jan/18 6:18 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuvj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/18 8:40 PM;mastersingh24;https://gerrit.hyperledger.org/r/17269;;;",,,,,,,,,,,,,,,,,,,,,,
Kafka Ordering service section should be under operations,FAB-7941,27119,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,27/Jan/18 8:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Jan/18 6:19 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"The ""Bringing up a Kafka-based Ordering Service"" doc is currently under architecture.  It belong under operations",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuvr:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/18 8:40 PM;mastersingh24;https://gerrit.hyperledger.org/r/17271;;;",,,,,,,,,,,,,,,,,,,,,,
Remove logging section from building fabric topic,FAB-7942,27120,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,27/Jan/18 8:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Jan/18 6:19 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,This section adds no value as logging is under operations,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuvz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/18 8:40 PM;mastersingh24;https://gerrit.hyperledger.org/r/17273;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-node8-merge-x86_64 failed as test is unable to fetch a required block for chaincode,FAB-7947,27203,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,30/Jan/18 1:34 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,12/Feb/18 10:31 AM,,,,v1.1.0,,,fabric-quality,,,,0,ci-failure,,,,,"fabric-sdk-node8-merge-x86_64, the following errors were observed,

{code:java}

02:11:17 not ok 1344 Error: 2 UNKNOWN: error executing chaincode: error chaincode is already launching: end2endnodesdk:v3
02:11:17   ---
02:11:17     operator: error
02:11:17     expected: |-
02:11:17       undefined
02:11:17     actual: |-
02:11:17       { [Error: 2 UNKNOWN: error executing chaincode: error chaincode is already launching: end2endnodesdk:v3] code: 2, metadata: { _internal_repr: {} }, details: 'error executing chaincode: error chaincode is already launching: end2endnodesdk:v3' }
{code}


*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node8-merge-x86_64/104/consoleFull",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyux3:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/18 10:30 AM;sambhavdutt;The chaincode test is successful now and is not failing the builds anymore in fabric-sdk-node8-merge-x86_64.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node8-merge-x86_64/111/;;;",,,,,,,,,,,,,,,,,,,,,,
SideDB scalability/durability controls and considerations,FAB-7951,27207,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,troyronda,troyronda,30/Jan/18 2:59 AM,23/Jan/20 7:24 AM,28/Oct/23 3:02 AM,23/Jan/20 7:24 AM,,,,Future,,,,,,,0,stale-item,,,,,"Policies that control replication factors for a collection and organization. The network should proactively redistribute data according to the desired balance of durability and scalability. For example, allow for:
 * Minimum number of peers that should contain a data element to mitigate against reduction in durability when peer fails.
 * Maximum number of peers that should contain a data element to enable scaling of larger collections.",,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5108,,,,,,,,,"1|hzyuxz:",,,,Unset,,,,,,Unset,,,,,,,,,,,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:24 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Unclear and generic error message,FAB-7952,27208,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,latitiah,latitiah,30/Jan/18 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 7:00 AM,v1.1.0,,,v1.1.0,,,fabric-peer,,,,0,Usability,,,,,"The following error is received for different reasons:
{code}
Failed to deserialize creator identity, err MSP org1.example.com is unknown{code}

For example, when attempting to query on a channel that doesn't exist or a peer has not successfully joined an existing channel - this error is generated.

The error messages either should be clarified as to what the actual error is or documented as to what areas to look at during a debugging process. At the very least, if the desire is to be vague, a more generic message such as ""Unable to communicate on the channel"" should be used instead. I would still highly recommend documenting what areas to look at when receiving this message.
",,bmos299,latitiah,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7881,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuy7:",,,,,,,,,,,,,,,,,,,,,bmos299,latitiah,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Feb/18 2:07 AM;wlahti;I think we should keep this error message vague to avoid malicious users scanning for channels. I propose we wrap the error message with ""channel unavailable"" and then add a troubleshooting doc to cover the possible reasons a user would see this error message. ;;;","08/Feb/18 4:38 AM;wlahti;https://gerrit.hyperledger.org/r/c/17633/;;;","09/Feb/18 2:27 AM;bmos299;Fair enough.  Keeping what we send back to the client as vague as a good thing.   However, what we cut in the peer logs should have the details about the failure. ;;;","13/Feb/18 3:19 AM;wlahti;As my fix is currently coded, the CLI user will receive the following purposefully vague error message while attempting to query for non-existent channel ""mychannel2"":
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = channel [mychannel2] unknown on peer, or creator org [Org1MSP] unknown on channel - <nil>{code}

The peer will log the following error message which contains the exact root cause: 
{code:java}
2018-02-12 18:17:17.991 UTC [protoutils] ValidateProposalMessage -> WARN 837 channel [mychannel2]: MSP error: channel doesn't exist{code};;;","13/Feb/18 4:24 AM;bmos299;[~wlahti] do we really want to say

 
 *desc = channel [mychannel2] unknown on peer*
 
 Wouldn't this clue an attacker in that this channel does not exist?  I really like the peer log details.;;;","13/Feb/18 4:30 AM;wlahti;Note that the entire message is:
{code:java}
desc = channel [mychannel2] unknown on peer, or creator org [Org1MSP] unknown on channel{code}
It doesn't clarify one or the other. Perhaps the comma should be removed from the error message though.;;;","13/Feb/18 4:37 AM;latitiah;Not necessarily - it is also possible that the channel does exist but the peer has not joined the channel or the MSP is wrong for that channel. This could be an issue that ranges from the peer not having access to simply not joining the channel yet. 

That said, it does give the user a hint as to what they should investigate to be sure that the info they have is correct. I thought it was a good middle ground of being vague while giving valid users enough information such that they can troubleshoot effectively.;;;","13/Feb/18 5:13 AM;wlahti;I have updated my CR to make it more obvious that the error message encapsulates an ""OR"" statement:
{code:java}
channel [mychannel2] unknown on peer OR creator org [Org1MSP] unknown on channel{code};;;","16/Feb/18 12:21 AM;wlahti;There have been a few code reviews now, which I plan to address today.

The new plan is to return a completely generic ""access denied"" message to the end user to ensure that no undesired information is leaked. The peer logs will contain the exact root cause, including additional details that were not available prior to this CR. If there is a trusted relationship between the peer and client (which is obviously true for developers/testers), the timestamp can be used to search the peer log for the exact root cause. 

I will also post a question and answer on Stack Overflow highlighting the new error message, likely causes, and troubleshooting steps. ;;;","16/Feb/18 3:02 AM;wlahti;With my newest update to the CR ([https://gerrit.hyperledger.org/r/c/17633/]),  the CLI user will now receive the following purposefully vague error message while attempting to query for non-existent channel ""mychannel2"":
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = access denied: channel [mychannel2] creator org [Org1MSP] - <nil>{code}
The peer will log the following error message which contains the exact root cause: 
{code:java}
2018-02-12 18:17:17.991 UTC [protoutils] ValidateProposalMessage -> WARN 837 channel [mychannel2]: MSP error: channel doesn't exist{code};;;",,,,,,,,,,,,,
Chaincode JSON documents get unmarshalled and re-marshalled when committed to CouchDB in bulk,FAB-7953,27209,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,chris.elder,denyeart,denyeart,30/Jan/18 3:45 AM,23/Jan/20 7:24 AM,28/Oct/23 3:02 AM,23/Jan/20 7:24 AM,,,,,,,fabric-ledger,,,,0,stale-item,,,,,"In BatchUpdateDocuments(), the chaincode JSON gets unmarshalled and re-marshalled.  It would be better to handle the chaincode JSON as a RawMessage so that it is not parsed/marshaled twice.  Here is the code in question... note that {color:#333333}jsonDocument.JSONValue{color} is []byte but it could be a RawMessage.

 

{color:#333333} //{color}{color:#333333}create{color}{color:#333333} a {color}{color:#333333}document{color} {color:#333333}map{color}
 {color:#333333}var{color} {color:#333333}document{color}{color:#333333} = make({color}{color:#333333}map{color}{color:#333333}[{color}{color:#333333}string{color}{color:#333333}]{color}{color:#333333}interface{color}{color:#333333}\{}){color}

{color:#333333} //unmarshal the {color}{color:#333333}JSON{color}{color:#333333} component {color}{color:#333333}of{color}{color:#333333} the CouchDoc {color}{color:#333333}into{color}{color:#333333} the {color}{color:#333333}document{color}
{color:#333333} json.Unmarshal(jsonDocument.JSONValue, &{color}{color:#333333}document{color}{color:#333333}){color}",,chris.elder,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtp8:",,,,Unset,,,,,,Unset,,,,,,,,,,,chris.elder,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/18 5:04 AM;chris.elder;The chaincode JSON does get unmarshalled then re-marshalled.   I am not sure RawMessage could be used to store the document, since the attachments need to be added to the map.  The RawMessage would be used if the JSON interpretation could be deferred.  In this case, the JSON needs to be modified with the attachments.   Please let me know if this is not the correct interpretation.;;;","23/Jan/20 7:24 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Errors not handled for JSON marshaling,FAB-7954,27210,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,30/Jan/18 3:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Feb/18 7:19 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Upon code review in statecouchdb.go and couchdb.go, it appears there are occurrences of the following error producing functions without errors captured and handled:

json.Marshal()

json.Unmarhsal()

decoder.Decode()

   e.g. json.NewDecoder(resp.Body).Decode(&dbResponse)  

   e.g. decoder.Decode(&genericMap)",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx093:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 1:39 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/17627/;;;",,,,,,,,,,,,,,,,,,,,,,
Deliver requests unexpectedly fail when timewindow not set,FAB-7955,27211,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,30/Jan/18 3:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 3:29 AM,,,,,,,fabric-orderer,fabric-peer,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7928,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuyf:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/18 6:16 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/17313/;;;",,,,,,,,,,,,,,,,,,,,,,
update homebrew recipe to 1.0.5,FAB-7956,27214,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,30/Jan/18 4:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 7:55 PM,v1.0.5,v1.1.0-alpha,,,,,fabric-installers,,,,0,,,,,,"the homebrew recipe should be updated with each release. The following script can produce the necessary text to update [https://github.com/hyperledger/homebrew-fabric/blob/master/Formula/fabric-tools.rb]

 

#!/bin/bash

set -e

VERSION=$\{1:-1.0.5}

URL=""https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-$\{VERSION}/hyperledger-fabric-darwin-amd64-$\{VERSION}.tar.gz""

SHA=`curl -sSL https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-$\{VERSION}/hyperledger-fabric-darwin-amd64-$\{VERSION}.tar.gz | shasum -a 256`

echo 'url ""'$\{URL}'""'

echo 'sha256 ""'$\{SHA:0:64}'""'",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuz3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/18 4:40 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/17303;;;",,,,,,,,,,,,,,,,,,,,,,
peer not respecting --logging-level parameter,FAB-7957,27215,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,sanchezl,sanchezl,30/Jan/18 4:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Feb/18 4:53 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Starting the peer with {{--logging-level}}
does not seem to override the log level set in {{core.yaml}}. 
For example, starting a peer node like this:
{code}peer node start --logging-level debug
{code}
does not enable debug traces, while starting like this:
{code}CORE_LOGGING_LEVEL=debug peer node start{code}
does start with the expected debug traces enabled.",,sanchezl,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuzb:",,,,,,,,,,,,,,,,,,,,,sanchezl,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/18 7:30 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/17317/;;;",,,,,,,,,,,,,,,,,,,,,,
Provide Channel interface from fabsdk,FAB-7958,27216,26401,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,30/Jan/18 4:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 12:47 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuzj:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InvokeChaincode - application error is handled by the fabric instead of by chaincode,FAB-7959,27218,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,30/Jan/18 5:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Jun/18 8:03 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"When the chaincode calls InvokeChaincode with a non-existing channel, the fabric detects the error and returns to the caller without passing the error back to the chaincode to handle. This is an app level error which should really be handled by the chaincode. 

The Chaincode CRs to remove FSM fix this issue correctly.",,ChristopherFerris,jyellick,kchristidis,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7580,FAB-5424,FAB-7573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyuzz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jyellick,kchristidis,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 2:52 AM;jyellick;Since the FSM was removed, presumably this is done? If so, could you please mark it as such [~muralisr];;;","22/May/18 3:32 AM;kchristidis;[~muralisr]: Can you take a moment to update this? See Jason's question above.;;;","12/Jun/18 5:44 AM;ChristopherFerris;marking as Done per [~muralisr];;;","12/Jun/18 5:45 AM;muralisr;[~ChristopherFerris] let me confirm on recent it (just to be sure as it's been a while).;;;","12/Jun/18 8:03 AM;muralisr;[~ChristopherFerris] Confirmed that error on invoke chaincode (in this case due to passing ""NONEXISTENTCHANNEL"") reaches the calling chaincode and the final error comes from the calling chaincode and not the fabric.
{code:java}
peer chaincode install -p github.com/hyperledger/fabric/examples/chaincode/go/example04/cmd -n mycc -v 0
peer chaincode instantiate -n mycc -v 0 -c '{""Args"":[""init"", ""e"", ""1""]}' -C myc
peer chaincode invoke -n mycc -c '{""Args"":[""invoke"",""myx"",""e"",""1"",""NONEXISTCHANNEL""]}' -C myc
{code}
The invoke receives an error
{code:java}
chaincode result: status:500 message:""Failed to invoke chaincode. Got error: INVOKE_CHAINCODE failed: transaction ID: d786edc9dfeb55b8276e92fc47b8037471ca95f2f2794a83b7cd80c9d019d4ba: Failed to get policy manager for channel [NOCHAN]
{code}
This comes from this piece of code in example04 chaincode
{code:java}
        invokeArgs := toChaincodeArgs(f, ""a"", ""b"", ""10"")
        response := stub.InvokeChaincode(chainCodeToCall, invokeArgs, channelID)
        if response.Status != shim.OK {
                errStr := fmt.Sprintf(""Failed to invoke chaincode. Got error: %s"", string(response.Payload))
                fmt.Printf(errStr)
                return shim.Error(errStr)
        }
{code};;;",,,,,,,,,,,,,,,,,,
fabric upgrade: ChannelApplication capability config update tx passes with incorrect signatures in envelope ,FAB-7961,27224,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Jan/18 8:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/May/18 12:48 AM,,,,v1.2.0,,,fabric-quality,,,,0,,,,,,"Currently config update transactions when adding ChannelApplication capability in v1.1  was tested with following combinations of certs when sending an update transaction envelope :

| Developer | Cert Alias |
|configAdminOrdererOrg0|config-admin-cert|

| configAdminOrdererOrg1 | config-admin-cert |

or 
| configAdminPeerOrg0 | config-admin-cert |
|configAdminPeerOrg1|config-admin-cert|

or
 | peer0Admin | peer-admin-cert |
 | peer2Admin | peer-admin-cert |

or 

a combination any of the two from each one above

 

*Expected Result:*

Config update tx on ChannelApplication capability to be successful only when 

| configAdminPeerOrg0 | config-admin-cert |
|configAdminPeerOrg1|config-admin-cert|

signatures are passed

*Actual Result:*

It passed for all the signatures above.

 

*Sample Piece of Code:*
{code:java}
#######################################################################################################################
#
# orderer config Admin then adds v1.1 capability to /Channel/Application group for channel2
# Channel/Orderer and /Channel capabilities are already defined
#
#####################################################################################################################
Given user ""configAdminOrdererOrg0"" retrieves the latest config update ""latestPeerConfigForCapabilitiesChangeForChannel2"" from orderer ""<orderer0>"" for channel ""com.acme.blockchain.jdoe.channel2""
And user ""configAdminOrdererOrg0"" creates a capabilities config update ""capabilitiesV1.1ConfigUpdateForPeerChannelLevel2"" using config ""latestPeerConfigForCapabilitiesChangeForChannel2"" using channel ID ""com.acme.blockchain.jdoe.channel2"" with mod policy ""Admins"" to add capabilities:
| Group | Capabilities |
| /Channel/Application | V1_1 |
And the user ""configAdminOrdererOrg0"" creates a configUpdateEnvelope ""capabilitiesV1.1ConfigUpdateEnvelopeForPeerChannelLevel2"" using configUpdate ""capabilitiesV1.1ConfigUpdateForPeerChannelLevel2""

And the user ""configAdminOrdererOrg0"" collects signatures for ConfigUpdateEnvelope ""capabilitiesV1.1ConfigUpdateEnvelopeForPeerChannelLevel2"" from developers:
| Developer | Cert Alias |
| peer0Admin | peer-admin-cert |
| peer2Admin | peer-admin-cert |

And the user ""configAdminOrdererOrg0"" creates a ConfigUpdate Tx ""capabilitiesConfigUpdateForPeerTx2ChannelLevel2"" using cert alias ""config-admin-cert"" using signed ConfigUpdateEnvelope ""capabilitiesV1.1ConfigUpdateEnvelopeForPeerChannelLevel2""

And the user ""configAdminOrdererOrg0"" using cert alias ""config-admin-cert"" broadcasts ConfigUpdate Tx ""capabilitiesConfigUpdateForPeerTx2ChannelLevel2"" to orderer ""<orderer0>""

{code}",,jyellick,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 12:11 AM;Nishi;channel1_channelApplication_configupdate_And_txDetails.tar.gz;https://jira.hyperledger.org/secure/attachment/14517/channel1_channelApplication_configupdate_And_txDetails.tar.gz","30/Jan/18 11:39 PM;Nishi;orderer_logs.tar.gz;https://jira.hyperledger.org/secure/attachment/14515/orderer_logs.tar.gz",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv0v:",,,,,,,,,,,,,,,,,,,,,jyellick,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/18 11:25 AM;jyellick;Please post complete orderer logs at debug level.

Considering that this is the same config update validation code that was present in v1.0, I suspect that this is not actually a bug.

If at all possible, please also include the config update transactions as well. ;;;","31/Jan/18 12:17 AM;Nishi;Attached -
 # ""channel1_channelApplication_configupdate_And_txDetails.tar.gz"" - In here you would find the protobuf for config update (block) and config update transaction details.
 # ""orderer_logs.tar.gz"" - Has the all the three orderer logs @ DEBUG level.

 ;;;","31/Jan/18 12:30 AM;jyellick;I do not believe that your testing tool is appropriately capturing the failure case.  Looking at your orderer logs:


{noformat}
orderer0_1.log:2018-01-30 14:28:28.241 UTC [orderer/common/broadcast] Handle -> WARN 911 [channel: db69d3] Rejecting broadcast of config message from 172.18.0.1:41382 because of error: error authorizing update: error validating ReadSet: readset expected key [Group]  /Channel/Orderer at version 0, but got version 1
{noformat}

{noformat}
orderer0_1.log:2018-01-30 14:30:27.139 UTC [orderer/common/broadcast] Handle -> WARN 11a9 [channel: com.acme.blockchain.jdoe.channel1] Rejecting broadcast of config message from 172.18.0.1:41382 because of error: error authorizing update: error validating DeltaSet: policy for [Group]  /Channel/Application not satisfied: Failed to reach implicit threshold of 2 sub-policies, required 2 remaining
{noformat}

{noformat}
orderer0_1.log:2018-01-30 14:30:56.263 UTC [orderer/common/broadcast] Handle -> WARN 15ec [channel: com.acme.blockchain.jdoe.channel2] Rejecting broadcast of config message from 172.18.0.1:41382 because of error: error authorizing update: error validating DeltaSet: policy for [Group]  /Channel/Application not satisfied: Failed to reach implicit threshold of 2 sub-policies, required 2 remaining
{noformat}

This would imply that on three occasions, the config update sent in failed, once because it was malformed, and twice because sufficient peer org config admins did not sign off on the transaction, but according to the description above, they all succeeded.;;;","21/Feb/18 9:03 AM;scottz;[~Nishi] can we look at the logs more closely to see what error response is sent back by the orderer? Maybe you could even run the test and stop after that point, and send in the command again from CLI to see the response directly output to you. Based on the logs Jason pointed out, it looks like we will need to enhance the implementation steps for jeff's upgrade.feature file.;;;","05/May/18 2:53 AM;jyellick;Since this is both behave related, do we intend to address this, or can it be closed out? [~scottz];;;","09/May/18 12:48 AM;scottz;Invalid testcase. Tool problem. Non-issue. This can be closed.;;;",,,,,,,,,,,,,,,,,
Returned err of gzip/tar writer should be checked,FAB-7963,27230,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,mastersingh24,guoger,guoger,30/Jan/18 12:58 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Apr/18 10:00 PM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Returned err of gzip/tar should be checked in order to fail early. e.g. https://github.com/hyperledger/fabric/blob/master/core/chaincode/platforms/golang/platform.go#L469-L470

Not sure if we should use {{defer}} here though..",,denyeart,greg.haskins,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv1j:",,,,,,,,,,,,,,,,,,,,,denyeart,greg.haskins,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/18 12:59 PM;guoger;cc [~greg.haskins];;;","30/Jan/18 9:33 PM;greg.haskins;Agree with error checking.  I think the defer is not strictly necessary though.  IIUC, the .Close() only forces the rendering of the data to the buffer, which is only needed in the success path.  The resources themselves (the buffer and the writers) will be garbage collected either way.;;;","15/Feb/18 1:26 AM;denyeart;[~greg.haskins] Will you be able to get to this within a week?  If not, please either unassign yourself or move to Fix Version v1.2.;;;","08/Apr/18 1:08 AM;mastersingh24;https://gerrit.hyperledger.org/r/20287;;;",,,,,,,,,,,,,,,,,,,
Support PostgreSQL and MySQL as the stateDB,FAB-7964,27231,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,vchengsong,vchengsong,30/Jan/18 1:28 PM,23/Jan/20 7:24 AM,28/Oct/23 3:02 AM,23/Jan/20 7:24 AM,,,,,,,fabric-peer,,,,1,mysql,postgresql,stale-item,,,To support more complex queries and improve performance.,,remmeier,sykesm,vchengsong,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyv1r:",,,,Unset,,,,,,Unset,,,,,,,,,,,remmeier,sykesm,vchengsong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:24 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
when making kafka image got a 404 not found error,FAB-7966,27235,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,hammerWang,hammerWang,30/Jan/18 7:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Feb/18 1:36 AM,,,,v1.0.0,,,fabric-build,,,,0,kafka,,,,,"""make kafka"" got en error:

curl: (22) The requested URL returned error: 404 Not Found

due to incorrect url path in Dockerfile.in",,hammerWang,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,FAB-7046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv3j:",,,,,,,,,,,,,,,,,,,,,hammerWang,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/18 1:34 AM;sanchezl;[~hammerWang] This should already be fixed. When apache retired version v0.9.0.1, we switched to using an apache archive link to download Kafka in FAB-7046. --;;;",,,,,,,,,,,,,,,,,,,,,,
"CouchDB queries and indexes not consistent with respect to ""data"" envelope",FAB-7969,27244,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,31/Jan/18 1:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Feb/18 4:41 PM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"Chaincode data is saved in CouchDB under a JSON ""data"" envelope.

For queries, peer automatically re-writes chaincode query to account for data envelope.

For indexes, chaincode author must specify the data envelop when referencing fields.

Need to make the experience consistent, by removing the ""data"" envelope.  This will fix the usability issue, and also simplify the code, eliminating other possible defects.

This change is only possible in 1.1, since the upgrade from 1.0 to 1.1 will rebuild CouchDB state database using the enhanced 1.1 CouchDB data structure.",,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv4f:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 1:39 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/17347/;;;",,,,,,,,,,,,,,,,,,,,,,
LF infra network issues causing build failures consistently,FAB-7971,27246,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ryjones,sambhavdutt,sambhavdutt,31/Jan/18 1:33 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,14/Apr/18 4:26 AM,,,,v1.2.0,,,fabric-ci,,,,0,ci-failure,,,,,"The following errors are observed due to timeout which is failing the tests,

orderer.Orderer Service.FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.4


{code:java}
@scenario.begin

  @daily
  Scenario Outline: FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.4 
    Given the CONFIGTX_ORDERER_BATCHTIMEOUT environment variable is 10 seconds ... passed in 0.001s
    And I have a bootstrapped fabric network of type kafka ... passed in 31.177s
    When a user sets up a channel ... passed in 45.661s
    And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with name ""mycc"" ... passed in 57.322s
    When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] ... passed in 6.740s
    Then a user receives a success response of 1000 ... passed in 0.000s
    When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] ... passed in 4.796s
    And I wait ""5"" seconds ... passed in 5.004s
    When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] ... passed in 4.824s
    Then a user receives a success response of 1000 ... failed in 0.000s
{code}



*orderer_ote.perf_orderer.test_FAB_7038_3ord_kafka_3ch (from pytest)*

{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-7038 test with OTE====================\nnumber of orderers: 3\nnumber of CA: 1\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 3\nnumber of kafka: 5\nnumber of zookeeper: 3\norderer service type: kafka\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=kafka, nKafka=5, nOrderer=3, nZoo=3\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-test-daily-x86_64/gopath\n \n        
{code}


*BUILD LOG*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/245/",,rameshthoomu,ryjones,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv4v:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,ryjones,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/18 6:38 AM;sambhavdutt;Peer and Chaincode tests are failing along with Orderer Service and Orderer_ote as kafka fails due to timeout, build #241

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/241/consoleFull

;;;","02/Feb/18 12:08 AM;rameshthoomu;Observed these failures on network latency in x86_64 nodes. I see many builds are failing with timeout error or curl is failing to fetch. Informed this to Linux foundation in #infra-support RC channel

[ ]([https://chat.hyperledger.org/channel/infra-support?msg=yDjDiFiQtzTCgT2q3)]

[~ry] [~jwagantall] ^^;;;","02/Feb/18 11:50 PM;rameshthoomu;h3. one more test failed with timeout error. https://jenkins.hyperledger.org/view/fabric/job/fabric-smoke-test-daily-x86_64/26/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_kafka_orderer_using_the_NodeJS_SDK_interface_____1_4_/
h3.  
{code:java}
Error Message
The containers are not ready in the allotted time (300 seconds)

Stacktrace
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 321.442s Location: orderer.feature:64 Assertion Failed: The containers are not ready in the allotted time (300 seconds) Captured stdout: testConfigs: configs/96489ed007de11e88883fa163ed8ae26
{code}
 ;;;","03/Feb/18 7:35 AM;ryjones;No update on network issues from service provider.;;;","05/Feb/18 11:34 PM;rameshthoomu;[~ryjones] [~jwagantall] seems network issues are more frequent now and causing most of the build failures. Developers are complaining about these failures. Could you please let us know the ETA or findings on this issue.

https://gerrit.hyperledger.org/r/#/q/project:fabric-test;;;","06/Feb/18 4:39 AM;ryjones;I am working to schedule an outage for an upgrade;;;","06/Feb/18 11:26 PM;sambhavdutt;[~ryjones] Can you tell when this outage is planned or if it has been worked on already. There are still some errors in the fabric tests due to the same issue. If the outage is not done yet, and will happen soon or later, that would be fine as it would possibly solve this problem.;;;","07/Feb/18 5:41 AM;ryjones;[~sambhavdutt] there will be an email to the TSC when this is scheduled;;;","09/Feb/18 11:09 AM;ryjones;This work is done. We should see much less of these types of failures.;;;","15/Feb/18 1:33 AM;sambhavdutt;After the Network fix, ca_tests and chaincodes tests are passing, but still Gossip(behave) fails due to 300 second timeout, and the Orderer tests fail too as kafka build was not complete within the timeframe. 

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/255/console;;;","16/Feb/18 1:05 AM;rameshthoomu;[~ryjones] We are not seeing `curl` issues after the network is upgraded but below `timeout issues` are popping up very frequently. Below are few

 
{code:java}
Issue#1: Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode

Issue#2: The containers are not ready in the allotted time (300 seconds){code}
 ;;;","17/Feb/18 1:01 AM;rameshthoomu;[~ryjones] *curl(18)* issues are popping up again in the builds. Most of the e2e tests are failing while downloading (using curl) maven binary. Also, I see many other builds are failing because of the timeout errors. See the below example

 
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:24f68e0a12d711e89721fa163e90259d,peerid:peer1.org1.example.com,tx:35df92cdb3d553c9556aac6270b56ab9b8e77674ea0e776e96dc61272333111f) - <nil> Usage:{code}
{code:java}
00:02:45.612 Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
00:02:45.668  ---> Running in f4d72bdecd50
00:02:50.786 curl: (18) transfer closed with 5559958 bytes remaining to read{code}
 ;;;","20/Feb/18 11:53 PM;sambhavdutt;The Gossip(behave) tests are failing in the last build for fabric-test-daily-x86_64 as timeout expired.


{code:java}
Expected response was 930; received Error occurred ['docker exec peer0.org1.exam...
{code}

{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:ba788a6815fd11e8829dfa163ef5eecb,peerid:peer0.org1.example.com,tx:0edb24a66e4e307ca691ed4bed5ff798dcb210753013564b26ef8c8cee509dd7) - <nil>
{code}

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/262/testReport/gossip/Gossip%20Service/_FAB_4667___FAB_4671___FAB_4672__A_leader_peer_goes_down_by_disconnect__comes_back_up__after__another_leader_is_elected__catches_up______1_3_/

;;;","22/Feb/18 11:12 PM;sambhavdutt;The Bootstrap, Chaincode, Orderer and Peer tests failing in fabric-smoke-test daily(and in fabric-test-daily) due to timeout error,


{code:java}
Failing step: And I have a bootstrapped fabric network of type kafka with tls ... failed in 323.763s
Location: bootstrap.feature:82
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/7ba1a996179211e88bc6fa163ef84b42
{code}


{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 314.238s
Location: chaincodes.feature:379
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/44962eb0179511e88bc6fa163ef84b42
{code}


{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 313.436s
Location: orderer.feature:64
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/6e22173e179611e88bc6fa163ef84b42
{code}


{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka using state-database leveldb with tls ... failed in 313.921s
Location: peer.feature:40
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/d4ae2738179911e88bc6fa163ef84b42
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/47/consoleFull
;;;","23/Feb/18 5:37 AM;sambhavdutt;[~ryjones] Need your advise on this, I get the following error during byfn tests. Worked ok yesterday, should I increase the timeout to more than 60. It wouldn't be a problem if it is due a slow network issue that will be fixed soon.

{code:java}

16:15:16 ERROR: for peer1.org1.example.com  UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)
16:15:16 
16:15:16 ERROR: for peer1.org1.example.com  UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)
16:15:16 An HTTP request took too long to complete. Retry with --verbose to obtain debug information.
16:15:16 If you encounter this issue regularly because of slow network conditions, consider setting COMPOSE_HTTP_TIMEOUT to a higher value (current value: 60).
{code}
;;;","23/Feb/18 5:40 AM;ryjones;[~sambhavdutt] I would increase the timeout. I'm not sure why things are failing.;;;","23/Feb/18 5:43 AM;sambhavdutt;[~ryjones] Thank you ! Will increase the timeout;;;","26/Feb/18 11:11 PM;sambhavdutt;Gossip test in fabric-test-daily failed to execute as timeout expired.


{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:9b361a181ab111e88f05fa163ef01172,peerid:peer1.org1.example.com,tx:09e4e0e09a50dfd26e69cd9e9bf3a41fabb50f9b3a28d8130812b8e14675fb04) - <nil>

{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/269/testReport/gossip/Gossip%20Service/_FAB_4663___FAB_4664___FAB_4665__A_non_leader_peer_goes_down_by_disconnect__comes_back_up_and_catches_up_eventually______1_3_/
;;;","05/Mar/18 11:09 PM;sambhavdutt;Gossip Service failed in the fabric-test-daily due to timeout,

*gossip.Gossip Service.[FAB-4673] [FAB-4674] [FAB-4675] A leader peer goes down by disconnect, comes back up *before* another leader is elected, catches up. -- @1.3*


{code:java}
Assertion Failed: Expected response was 980; received Error occurred ['docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/d69596c6203611e8a422fa163e982d63/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com 
{code}


{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:d69596c6203611e8a422fa163e982d63,peerid:peer0.org1.example.com,tx:5dbf6c01a0c9710f9a283ac9a1d35d2907ee582c9dcd48a873834ee86c3cffc5) - <nil>
{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/278/testReport/gossip/Gossip%20Service/_FAB_4673___FAB_4674___FAB_4675__A_leader_peer_goes_down_by_disconnect__comes_back_up__before__another_leader_is_elected__catches_up______1_3_/
;;;","06/Mar/18 11:05 PM;sambhavdutt;Timeout error observed in, chaincodes tests for fabric-smoke-test daily, and Gossip test for fabric-test daily,

*smoke-test-daily*

{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 311.878s
Location: chaincodes.feature:379
Assertion Failed: The kafka containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/16362de8210111e889b4fa163e5ab570
{code}

*fabric-test-daily*


{code:java}
Failing step: Then a user receives a success response of 900 from ""peer0.org2.example.com"" ... failed in 0.000s
Location: gossip.feature:303
Assertion Failed: Expected response was 900; received Error occurred [u'docker exec peer0.org2.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/34f06ef2210511e89d2ffa163e1a0116/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer0.org2.example.com CORE_PEER_ADDRESS=peer0.org2.example.com:7051 peer chaincode query --name mycc --ctor '{\""Args\"": [\""query\"",\""a\""]}' --channelID behavesystest ""']: 2018-03-06 06:15:04.597 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-03-06 06:15:04.597 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-03-06 06:15:04.597 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-03-06 06:15:04.597 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-03-06 06:15:04.597 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-03-06 06:15:04.597 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AB8070A6B08031A0C08E8E3F8D40510...6D7963631A0A0A0571756572790A0161 
2018-03-06 06:15:04.598 UTC [msp/identity] Sign -> DEBU 007 Sign: digest: 87ED54981283B907AE466EBDF9678CCFBF1C2A9F1A01CBF4AA3C9DDFD931B6B4 
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode 

{code}

*Build Log*
smoke-test-daily:
https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/60/testReport/chaincodes/Chaincodes%20Testing/FAB_5791__Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_kafka_orderer_couchdb_db_GOLANG_lang_____1_2_/

faric-test-daily:
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/279/testReport/gossip/Gossip%20Service/_FAB_4683___FAB_4684___FAB_4685__In_leader_selection_setup__leader_peer_goes_down_by_disconnect_for_at_least_15_seconds__comes_back_up_and_catches_up_eventually______1_3_/;;;","23/Mar/18 8:10 PM;sambhavdutt;[~ryjones]
Good Morning Ry. 
Can you suggest something about the test case fails due to network issue (if I am not wrong) that are causing the tests/builds to timeout and fail, specifically in fabric-test-daily and smoke-test daily. Should I create a Bug and assign it to someone or communicate with a  team for this. Many of the test case timeouts were little more than 60 seconds. The time has been increased to 300 seconds but the builds still fail but to timeout.;;;","30/Mar/18 4:11 AM;sambhavdutt;The root cause of these build fails due to timeout will be verified soon if  the tests are failing due to network issue or if it because of tests.;;;","14/Apr/18 4:29 AM;sambhavdutt;The timeout errors that failed due to 300 seconds container timeout are not happening anymore in recent CI builds.;;;"
Upgrade viper to v1.0.0,FAB-7973,27249,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sykesm,sykesm,31/Jan/18 2:50 AM,23/Jan/20 7:25 AM,28/Oct/23 3:02 AM,23/Jan/20 7:25 AM,,,,Future,,,fabric-common,,,,0,hygiene,stale-item,,,,"We currently vendor an old version of viper with several ""quirks"". An example can be found in FAB-6803.

The upgrade is complicated by the fact that all keys (not just top level keys) are now treated as case insensitive. This breaks assumptions in the viperutil code used by peer, chaincode, orderer, and configtxgen.",,haibbo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10523,,,,,,,,,,,FAB-8062,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i00cj1:",,,,,,,,,,,,,,,,,,,,,haibbo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Oct/18 4:54 AM;sykesm;In addition to simply upgrading viper, we need stories to move away from repeatedly calling the viper package to get configuration values. In 95% of the places where we use configuration, the configuration values are static and can be memoized. While memoization out of a constructor can work, ideally we move to exported attributes on the structs that need configuration (caller provides the config), configuration options (caller provides config as named, optional values), or configuration objects.;;;","23/Jan/20 7:25 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Zero-value checks for the time.Duration type should be unitless,FAB-7974,27250,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,31/Jan/18 3:43 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,01/Feb/18 5:53 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,,,,,,H/T: https://gerrit.hyperledger.org/r/c/17313/1/core/peer/deliverevents.go#135,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyv5r:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/18 3:55 AM;kchristidis;https://gerrit.hyperledger.org/r/c/17339/;;;",,,,,,,,,,,,,,,,,,,,,,
missing links on node.js chaincode interfaces,FAB-7976,27253,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,luomin,Ratnakar,Ratnakar,31/Jan/18 7:30 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,15/Feb/18 2:59 AM,,,,,,,fabric-docs,,,,0,quality,,,,,"There are several places where Node.js chaincode is used

ex: *Build your First Network , Fabcar &* *Balance-transfer*

 

Adding a link do the Node.js shim documentation [https://fabric-shim.github.io/] and about npm module will help application developers to understand the APIs and sample chaincodes.",,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyv5z:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/18 9:38 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17371/;;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB documentation correction,FAB-7977,27254,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,31/Jan/18 7:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Feb/18 3:54 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"a few comments and nits on the Couchdb doc at [http://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html]
1. Period missing after ""with the index definition formatted in JSON following the CouchDB index JSON syntax
2. “Any index in the chaincode’s META-INF/statedb/couchdb/indexes directory will be packaged up and installed with the chaincode on a peer” ---It is not clear what this sentence tries to convey. Does “with” here means “at the same time”? this sentence seems to indicate that the index is installed on a peer (incorrect) which is clarified in a correct way in next sentence.
3. “... the index will automatically be deployed to the peer’s channel state database” more precisely, it is deployed to the peer’s chaincode-channel state database
4. “For CouchDB installations outside of the docker images supplied with Fabric, the local.ini file must be edited….” it’d be helpful to provide the location of local.ini file.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv67:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/18 1:34 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17373/;;;",,,,,,,,,,,,,,,,,,,,,,
make testenv failed from inside fabric-test/fabric/.,FAB-7979,27257,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,scottz,scottz,31/Jan/18 9:20 AM,30/Jul/19 11:41 AM,28/Oct/23 3:02 AM,30/Jul/19 11:41 AM,,,,Future,,,fabric-build,fabric-quality,,,0,,,,,,"First: the build `make testenv` works fine inside hyperledger/fabric/ directory. Here I rebuilt it inside my vagrant environment:

```

ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric$ make testenv
make: Nothing to be done for 'testenv'.

```

However, the build fails when attempted inside fabric-test repository. We should investigate whether something changed in the fabric/Makefile recently.

```

ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test/fabric$ make testenv
mkdir -p build/image/testenv/payload
cp build/docker/bin/orderer build/docker/bin/peer build/sampleconfig.tar.bz2 images/testenv/install-softhsm2.sh build/image/testenv/payload
Building docker testenv-image
docker build -t hyperledger/fabric-testenv build/image/testenv
Sending build context to Docker daemon 64.38MB
Step 1/10 : FROM hyperledger/fabric-buildenv:x86_64-1.1.0-alpha-snapshot-83be755
pull access denied for hyperledger/fabric-buildenv, repository does not exist or may require 'docker login'
Makefile:303: recipe for target 'build/image/testenv/.dummy-x86_64-1.1.0-beta-snapshot-30dd68f' failed
make: *** [build/image/testenv/.dummy-x86_64-1.1.0-beta-snapshot-30dd68f] Error 1

```",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv6v:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,
"failed node SDK test in vagrant in fabric-test after make pre-setup, because the new node version is not passed along to PATH",FAB-7982,27260,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,scottz,scottz,scottz,31/Jan/18 12:07 PM,30/Jul/19 11:40 AM,28/Oct/23 3:02 AM,30/Jul/19 11:40 AM,,,,Future,,,fabric-build,fabric-quality,,,0,,,,,," 

 {{Project is now using node v8.9.1 (npm v5.5.1)}}
 {{npm version ======>}}
 {{5.5.1}}
 {{node version =======>}}
 {{v8.9.1}}

 

After ""make pre-setup"" in fabric-test, inside Vagrant, I see it says node version is 8.9.1, but not when I see it.
 {{ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test$ npm --version}}
 {{5.3.0}}
 {{ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test$ node --version}}
 {{v8.4.0}}

 

It is not set in env after installation script is done. In vagrant file install_nvm.sh we set the version to 8.4

[https://github.com/hyperledger/fabric/blob/master/devenv/install_nvm.sh]

It seems we need to push a new vagrant image.

It also seems the fabric-test/pre_setup.sh script (which executes: nvm install 8.9.4) seems to be effective ONLY WITHIN that shell and not in the environment calling that script, so we may have to execute those commands from the pre_setup.sh script to execute them inline in the Makefile when building target pre-setup.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv7z:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 9:53 AM;scottz;A workaround exists - to execute the installation steps on command line instead of ""make pre-setup"". Moving to lower priority.;;;","30/Jul/19 11:40 AM;mastersingh24;been open over a year with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,
TimeWindow default for orderer config is not applied if unset,FAB-7985,27266,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,31/Jan/18 11:39 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Jan/18 11:41 PM,,,,WON'T FIX,,,fabric-orderer,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv8n:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 11:41 PM;jyellick;Looks like this was fixed between the revision I was examining and master when I opened this defect. Not a defect anymore.;;;",,,,,,,,,,,,,,,,,,,,,,
make docker now pulls all thirdparty base images,FAB-7986,27268,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,tongliofcary,tongliofcary,01/Feb/18 12:48 AM,28/Oct/18 3:13 AM,28/Oct/23 3:02 AM,28/Oct/18 3:13 AM,,,,Future,,,fabric-build,,,,0,,,,,,"Recent build changes pulls thirdparty images when docker target is made.

 

make docker will pull the following images

hyperledger/fabric-zookeeper
hyperledger/fabric-kafka
hyperledger/fabric-couchdb

 the target should have only pulled the images necessary, in this case, these third party images should not have been pulled.

Expected results are only the images listed below

hyperledger/fabric-tools 
hyperledger/fabric-testenv
hyperledger/fabric-buildenv
hyperledger/fabric-orderer
hyperledger/fabric-peer
hyperledger/fabric-javaenv
hyperledger/fabric-ccenv","any build env

procedure to reproduce.

 

git clone fabric code and install build required software such as go and docker

go to fabric directory and execute the following command:

make docker

 

once it completes successfully, inspect the images produced, these thrid party images will have been pulled.",rameshthoomu,sanchezl,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv8v:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sanchezl,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/18 1:41 AM;sanchezl;You will have to make a case as to why this is a problem. ;;;","01/Feb/18 1:53 AM;tongliofcary;why would you want to spend extra time to pull down the things that are not necessary? This is wasting the build machines time and network bandwidth. Consider this process is done for every patch set. This should be fixed asap.;;;","04/Feb/18 5:42 AM;sanchezl;Reviewing the Makefile, I see that the images are downloaded and then tagged as {{latest}}. Some scripts and docker-compose files, in turn, expect to find these images with a {{latest}} tag. I think this is worth cleaning up at some point.

[~ChristopherFerris], is there more to this that I am not aware of?;;;","05/Feb/18 11:30 PM;rameshthoomu;[~tongliofcary] We cache thirdparty images & base images in CI build nodes and then tag it to latest. So, we don't pull them every time in build nodes.;;;","06/Feb/18 12:09 AM;tongliofcary;[~rameshthoomu]that does not make it right even if that is the case. CI recreates the worker nodes very often. Each time these things were not cached will be pulled. There is no good reason why it is part of docker target. If some other targets need to do that, then it is their job to pull them down.;;;","14/Feb/18 5:04 AM;Clayton Sims;Not a base product bug, so changing type to task (non bug).;;;",,,,,,,,,,,,,,,,,
add tox.ini file to build fabric documentation,FAB-7987,27274,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Feb/18 3:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Feb/18 11:07 PM,,,,,,,fabric-build,,,,0,,,,,,"add tox.ini file to build fabric documentation. Trigger the documentation build job based on the changes submitted to fabric. If the changes are related to .rst or .md, rtd-verify job executes tox.ini file to build fabric documentation.",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyv9j:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/18 4:27 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17275/;;;",,,,,,,,,,,,,,,,,,,,,,
Typo in fabric/docs/source/samples.rst,FAB-7988,27276,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,01/Feb/18 3:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 2:20 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Fabric’s version is still 1.1.0-preview in a note of fabric/docs/source/samples.rst.
The version should be updated to 1.1.0-alpha.",fabric d7dd2315372eadc4f9b1f6a3f7f734ebc97b9e91,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyva7:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/18 8:03 AM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/17397/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE add channel option to get_peerstats.sh,FAB-7991,27279,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,01/Feb/18 4:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 11:36 PM,,,,,,,fabric-quality,,,,0,,,,,,"get_peerStats.sh provides stats of blocks, transactions, TPS etc information of a test.  This information is good for analysis.  However some scenarios tests do not have this work since they were written before this scripts exists.  Now want to include this script in all scenarios testcases.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyvav:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Fix instruction to restart cli container in Reconfiguring Your First Network,FAB-7992,27281,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,01/Feb/18 4:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Feb/18 4:15 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"In Reconfiguring Your First Network, the document has incorrect instruction about relaunching cli container.

According to the instruction described in fabric/docs/source/channel_update.rst,
``docker start cli`` is executed to relaunch cli container, which is configured in Bring Your First Network.
However, cli container fails to relaunch with the following error messages.

{noformat}

$ docker start cli
$ docker logs cli


/ ___|  |_   _|    / \    |  _ \  |_   _|
\___ \    | |     / _ \   | |_) |   | |
___) |   | |    / ___ \  |  _ <    | |
|____/    |_|   /_/   \_\ |_| \_\   |_|

Build your first network (BYFN) end-to-end test

Channel name : mychannel
Creating channel...
(snip)
!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
========= ERROR !!! FAILED to execute End-2-End Scenario ===========
{noformat}

This error happens because a script building fabric network is called when starting cli container. 
To use cli container for manual work in reconfiguring fabric network, this script should not be executed.
To fix this problem, the script should be commented out in docker-compose-cli.yaml. After that, cli container should be relaunched to reflect this change.
",fabric d7dd2315372eadc4f9b1f6a3f7f734ebc97b9e91,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvb3:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/18 8:02 AM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/17399/;;;",,,,,,,,,,,,,,,,,,,,,,
Remove workaround in buildenv docker image,FAB-7995,27285,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,01/Feb/18 5:14 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Apr/18 2:40 AM,,,,v1.2.0,,,fabric-build,,,,0,,,,,,"We currently apply a temporary workaround for a Go plugin issue that was fixed in Go 1.9.2

[https://github.com/hyperledger/fabric/blob/master/images/buildenv/Dockerfile.in#L8]

This can now be removed as the upgrade to Go 1.9.2 is complete with the latest baseimage update",,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvbr:",,,,,,,,,,,,,,,,,,,,,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
OTE spy functionality is broken,FAB-7996,27286,14770,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,scottz,scottz,01/Feb/18 5:36 AM,23/Jan/20 7:25 AM,28/Oct/23 3:02 AM,23/Jan/20 7:25 AM,v1.1.0,,,Future,,,fabric-quality,,,,0,quality,stale-item,,,,"To do a better verification of the orderer delivery service, the OTE spy, a Deliver Client that attaches to the orderer to receive blocks some time after the test starts, must be fixed and then it can be leveraged in several tests. The functionality became ""broken"" after we moved to v1.0 when identity certs became required; the Spy deliver client (just like any peer) must obtain and use one when connecting to the orderer.",,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvbz:",,,,,,,,,,,,,,,,,,,,,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:25 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Parallel commit of namespaces into couchdb - address review comments/TODO,FAB-7997,27287,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,01/Feb/18 5:47 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,08/Mar/18 3:00 AM,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,"Address review comments from : [https://gerrit.hyperledger.org/r/#/c/16695/] .

 

1) Need to address this TODO in statecouchdb.go:

 

   //TODO: processUpdateBatch is called with updateBatch of a single namespace/chaincode at a time.
    // Hence, retrieving namespaces from updateBatch and looping over it is not required. Need to remove
    // only the outer for loop.

 

2) Add comment for LoadCommittedVersions()",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvc7:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Feb/18 1:39 AM;Senthil1;https://gerrit.hyperledger.org/r/#/c/17541/;;;",,,,,,,,,,,,,,,,,,,,,,
Expose configtxlator REST functions from CLI,FAB-7999,27289,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/18 6:10 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,02/Feb/18 9:13 PM,,,,v1.1.0,,,fabric-tools,,,,4,Release-planning-1.1-PostAlpha,review-needed,,,,"To allow applications to perform channel config updates, the {{configtxlator}} tool was created.  It exposes a REST API for translating between protobufs and JSON, as well as a utility for computing a config update based on an original config and an updated config.

For examples and manipulation of channel config from the CLI, curl was used to invoke the functions of the REST server.  Because performing channel config updates was something most users did not need, this was considered a reasonable solution for v1.0.

However, channel 'capabilities' are required to be added to upgrade a fabric network, which is a modification to the channel config.  This can be accomplished by starting the REST server and issuing curl commands, but this is a bit cludgy.

It would be a fairly small amount of code to simply allow {{configtxlator}} to allow the REST functions to be invoked directly as CLI parameters, and it would make our upgrade samples easier to parse, and cleaner.

I propose the following three new commands to {{configtxlator}}

{noformat}
# Decode a protobuf message to JSON
configtxlator proto_decode --type <message_type> [--input <file.pb>] [--output <file.json>]

# Encode a JSON message to protobuf
configtxlator proto_encode --type <message_type> [--input <file.json>] [--output <file.pb>]

# Compute a config update from an original config and updated config
configtxlator compute_update --channel_id <channel_id> --original <original_config.pb> --updated <updated_config.pb> [--output <config_update_file.pb>]
{noformat}

Note, wherever input/output parameters are optional above, they default to stdin/stdout respectively.

Because this is a tool, and because it makes documentation and samples easier (and is not involved in any peer or orderer code path), it seems like this could still be a candidate for v1.1.0, but because it is an improvement and not a bug fix, excluding it could also be the correct decision.",,greg.haskins,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvcf:",,,,Unset,,,,,,Unset,,,,,,,,,,,greg.haskins,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric-sdk-go-verify-s390x, fabric-sdk-go-merge-s390x are failing as repository fails to clone.",FAB-8000,27290,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,01/Feb/18 6:22 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,05/Feb/18 10:42 PM,,,,,,,fabric-ci,,,,0,ci-failure,,,,,"The fabric-sdk-go-verify-s390x, fabric-sdk-go-merge-s390x are failing as repository fails to clone, and the following errors pop up due to improper data transfer  

17:07:00 [fabric-sdk-go-tests-merge-s390x] $ /bin/bash -eu /tmp/jenkins6935474819872650108.sh
17:07:00 Installing dependencies ...
17:07:00 # cd /w/workspace/fabric-sdk-go-tests-merge-s390x/gopath/src/github.com/axw/gocov; git pull --ff-only
17:07:00 fatal: Not a git repository (or any of the parent directories): .git
17:07:00 package github.com/axw/gocov/...: exit status 128
17:07:00 package github.com/AlekSi/gocov-xml: remote origin not found
17:07:00 package github.com/client9/misspell/cmd/misspell: remote origin not found
17:07:00 package github.com/golang/lint/golint: remote origin not found
17:07:00 package golang.org/x/tools/cmd/goimports: remote origin not found
17:07:00 Installing dep@v0.4.1 to /w/workspace/fabric-sdk-go-tests-merge-s390x/gopath/bin ...
17:07:02 HEAD is now at 37d9ea0 dep: Sharpen `dep prune` warning message
17:07:06 Installing mockgen@v1.0.0 to /w/workspace/fabric-sdk-go-tests-merge-s390x/gopath/bin ...
17:07:07 HEAD is now at 13f3609 Merge pull request #93 from golang/restore_backwards_compatibility
17:07:08 gocov is not installed (go get -u github.com/axw/gocov/...)
17:07:08 gocov-xml is not installed (go get -u github.com/AlekSi/gocov-xml)
17:07:08 misspell is not installed (go get -u github.com/client9/misspell/cmd/misspell)
17:07:08 golint is not installed (go get -u github.com/golang/lint/golint)
17:07:08 goimports is not installed (go get -u golang.org/x/tools/cmd/goimports)
17:07:08 Missing dependency. Aborting. You can fix by installing the tool listed above or running make depend-install.
17:07:08 Makefile:177: recipe for target 'depend' failed
17:07:08 make: *** [depend] Error 1
17:07:08 Build step 'Execute shell' marked build as failure

*Build Log*
https://jenkins.hyperledger.org/view/fabric-sdk-go/job/fabric-sdk-go-tests-merge-s390x/261/console",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvcn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/18 10:42 PM;rameshthoomu;This has been fixed. We have added a cleanup script to delete workspace in all the s390x build nodes. After this, we didn't observe any issues like above. Closing this issue as it is not reproducing now after the fix;;;",,,,,,,,,,,,,,,,,,,,,,
Validation against reserved fields in CouchDB JSON required at simulation time,FAB-8006,27301,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,01/Feb/18 1:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 7:29 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"When doing PutState() with CouchDB state database, need to validate that if the content is JSON, that it does not include at the top level the four reserved fields:

_id

_rev

_deleted

~version

For more info see code review:

[https://gerrit.hyperledger.org/r/#/c/17347/3/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go]",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8877,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx05r:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jun/18 11:55 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17657/;;;",,,,,,,,,,,,,,,,,,,,,,
Minimize transaction size by saving identities to stateDB and referencing them,FAB-8007,27302,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,yacovm,yacovm,01/Feb/18 7:38 PM,28/Jan/21 10:58 PM,28/Oct/23 3:02 AM,,,,,,,,fabric-crypto,,,,1,,,,,,"As we know, x509 certificates of clients and peers greatly contribute to the abnormal size of transactions in fabric.

a typical x509 PEM is roughly 700 bytes, and a typical transaction has the PEM of the client, and also of the peer, and takes roughly 3KB because it has PEMs in:
 # Signature header of the client in the transaction payload
 # Signature header of the client in the TransactionAction
 # Endorser identity in the endorsement, per endorser.

So, about 2.1KB out of 3KB of data, is x509 certificates, which takes lots of space, 
From an experiment I made - when a PEM is compressed via gzip, it goes from ~ 700 to ~ 500 bytes, and when it is compressed as a DER - it is reduced to ~ 400 bytes.

My proposal is to:
 * Save (per channel) in the stateDB the identities of clients and peers by creating a mapping from the unique representation (hereafter *idRef*) of the identity (i.e the hash over the identity and the type) to the identity bytes. This would reduce the size of a single identity to 32 bytes, and consequently - the total average size of a 1-endorsement transaction to less than 1KB.
 * Optionally, whenever an identity is needed is placed in the transaction in its raw form, just put *idRef * instead. This is optional, because the criteria for an identity to be inserted into the mapping would be that it was validated at the commit time.
So, in order for a peer to use the optimization it would need to proactively know that its identity resides in the mapping, by querying the stateDB at startup or after it endorsed in the old way and as a result, the mapping was created. 
Clients, could use the old way and if their transaction was valid, it proves that their identity was valid, which means that it should have been successfully inserted into the mapping.
 * Validation: When peer validates the transaction, if it sees a full representation it checks if it's already in the mapping, and if not, and the identity is valid - it inserts it into the mapping. When it sees a reference instead of the full representation, it fetches from the stateDB mapping the full representation.
Since this is all per channel, total order is preserved in each channel and there is no dependency between channels.

However - I tried compressing a regular block via gzip and it compressed only to 50% of its size, so identity referencing is still superior in terms of space for a single block. 
We could, however - have the ledger compress every K blocks, and then the compression rate on the disk would be much higher (for reference - a configuration block in e2e_cli is ~ 15K and is compressed to 5K).

The benefit of reducing the size of the transaction, is that we send less bytes (a third) over the wire and thus it reduces the bandwidth load on orderers, and transfers data faster across the network.

Thoughts? 
 [~C0rWin] [~mastersingh24] [~jyellick] [~ellaki] [~ales] [~adc] [~denyeart] [~manish-sethi]
 * Also, this would require a channel capability
 * The identity should be represented in a well-structured form, i.e for x509 identities, the pem header should be ""CERTIFICATE"", and the identity should be sanitized to the low/high s according to what fabric wants, so that we won't have multiple entries for the same identity.",,angelo.decaro,denyeart,elli-androulaki,jyellick,luomin,mastersingh24,nkalichynskyi,samodergec,satheeshk,silliman,xuqiang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvl3:",,,,Unset,,,,,,Unset,,,,,,,,,,,angelo.decaro,denyeart,elli-androulaki,jyellick,luomin,mastersingh24,nkalichynskyi,samodergec,satheeshk,silliman,xuqiang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/18 9:23 PM;denyeart;[~yacovm] I agree controlling the size is fairly urgent.

Are you suggesting we do both - reference identities AND compress over every K blocks? What is the expected savings if we do both vs each one individually?

Is the client certificate really required twice?

Could we do the identity referencing also for the orderer certificate from the block signature?;;;","01/Feb/18 9:33 PM;yacovm;I am suggesting to do both, yes.
{quote} What is the expected savings if we do both vs each one individually?{quote}
 I can check if you want. My intuition says that if as K grows, the compression rate is improved, but we don't want to increase K too much because if peers do state transfer between themselves, or just any API call that fetches the entire block from the disk, this would mean to un-compress lots of data only for fetching a single block. Perhaps, what we should do is not compress every K blocks but rather every D cumulative bytes over a sequence of blocks.

 I argue that doing referencing alone gives an advantage that compressing every K blocks in the ledger doesn't give - it reduces the size of the transactions and blocks before they end up in the peers, and thus reduce the bytes sent over the wire, which increases the effective bandwidth of an OSN.

{quote}Is the client certificate really required twice?{quote}
Well, that's how the code is written... the *TransactionAction.Header* field, is the *SignatureHeader* of the original proposal header and it is checked in validation in the peer in *validateEndorserTransaction*. I'd advise that we don't change this, to be backward compatible with old peer versions.

{quote}Could we do the identity referencing also for the orderer certificate from the block signature?{quote}
I guess we could. ;;;","01/Feb/18 10:27 PM;denyeart;I agree that identity referencing would be the most valuable, as you say that would give instant benefit over the wire and on disk.

Concerning the compression, note that there are already K blocks per block storage file, so we could compress at the block storage file level, and implicitly get compression over K blocks.  Currently block storage file is hardcoded to be 64MB:

[https://github.com/hyperledger/fabric/blob/release/common/ledger/blkstorage/fsblkstorage/config.go#L26]

[https://github.com/hyperledger/fabric/blob/release/core/ledger/ledgerconfig/ledger_config.go#L64]

We could punt on the compression in Fabric and recommend hosting services do disk compression, giving us compression over the K blocks in each block storage file for free.

 ;;;","01/Feb/18 10:35 PM;yacovm;64 MB sounds to me like a bit too much to be a compression unit. I haven't delved into low-level compression APIs of golang standard library, but unless there is a way of extracting a single block from that 64MB compressed blob into the memory, that means to fetch a single 100K block from the disk, we need to expand 64MB in memory just for that. 

{quote}We could punt on the compression in Fabric and recommend hosting services do disk compression{quote}
While that's doable, I would recommend we also implement compression ourselves, because the average user doesn't have such capabilities.
We could make it toggle-able at the peer level, and if the storage service provider has compression, then the peer admin can just disable the compression in the peer itself.

wdyt?;;;","01/Feb/18 10:44 PM;denyeart;We probably should make the 64 MB size configurable.  I'm just saying that there is an opportunity to sync up file size and compression threshold to keep things simpler. If we move forward with this we could set default block storage file size with compression optimization in mind, given a representative read/write workload.

Let's get some more insight from service providers such as [~ptippett] .;;;","03/Feb/18 3:07 AM;mastersingh24;I like the store and reference idea and seems like it should work well.
As for compression, it could be a background task.  There are also filesystems that do compression;;;","05/Feb/18 6:25 PM;angelo.decaro;[~yacovm], this is very interesting. The modification to the MSP would be minimal. Actually, one can modify just cachedMSP to do this additional work. We can introduce a generic interface to allow cachedMSP to get the serialised identity given the hash of it and the work is done :)
Anyway, I would be glad to give support :);;;","05/Feb/18 6:32 PM;yacovm;I don't think this should be driven via the MSP cache. What if the cache is empty when the peer boots? also - the MSP cache is per channel, it has redundancy as channel number grows. 

 If anything we should have a cache at the ledger/DB level and not use the cache for the MSP for this. I will soon also post a JIRA where I propose to have a cache layer in the peer so we won't fetch values for keys over the wire like in couchDB. ;;;","08/Feb/18 4:45 AM;jyellick;I think I am not fully grasping the proposal, despite reading the description a few times.  I'll try to summarize my understanding:

Whenever the peer sees a full certificate in the validation path, it automatically creates a record for that cert in a 'certificate reference table' or similar in the state database.  Because validation must execute deterministically on peers, we can conclude that at validation time, all peers have the same 'certificate reference table', so all peers will come to agreement as to whether a certificate's short form *idRef* is resolvable to an actual identity.  Is this summary accurate?

The endorsement phase can replace the embedded certificates, including its own in the endorsement, with an *idRef* assuming that the certificate is found in the statedb.  Would you include this reference into the statedb as a part of the read set?

 > This would reduce the size of a single identity to 32 bytes, and consequently - the total average size of a 1-endorsement transaction to less than 1KB.

Based on the above statement, I assume that you do _not_ intend that the identity in the outermost signature header be replaced with an *idRef*, leaving you with ~700 bytes for the submitter's identity, 32 bytes for the one embedded inside the tx, and 32 bytes for the endorser's identity.

The reason why I note this, is from an orderer perspective, there is of course no statedb, and we would not want to introduce it as a dependency.  From an orderer perspective, so long as this outermost identity is left intact, optimizations inside the endorser-tx are welcomed.  The orderer similarly cannot assume that its identity is known to the peers, so it would always need to include its identity in the signature of each block.

My primary concern about this scheme overall is that replacing identities with hashes adds another layer of opacity to the system.  In order to allow clients to fully understand transactions, would you propose adding some new service which allows a client to map hashes back to identities?

At a broader level, I suspect that for 'serious deployment', putting the block storage onto a filesystem which supports compression is going to be a good idea regardless.  I'd be very curious to see what the performance of such a configuration would be.

I would also be curious to see some performance numbers which back up the notion that we are IO bound or CPU bound.  If we are not IO bound  then the filesystem compression seems like it would provide 90+% of the value by making filesystem usage lower, would work with Kafka brokers too, all while adding zero additional complexity to fabric.

Also, have we investigated simply using compression on the HTTP2 body? Since we are using gRPC, this also seems like a very low work, potentially high reward option.;;;","08/Feb/18 5:32 AM;yacovm;{quote}Whenever the peer sees a full certificate in the validation path, it automatically creates a record for that cert in a 'certificate reference table' or similar in the state database. Because validation must execute deterministically on peers, we can conclude that at validation time, all peers have the same 'certificate reference table', so all peers will come to agreement as to whether a certificate's short form idRef is resolvable to an actual identity. Is this summary accurate?{quote}
Yes

{quote}The endorsement phase can replace the embedded certificates, including its own in the endorsement, with an idRef assuming that the certificate is found in the statedb. Would you include this reference into the statedb as a part of the read set?{quote}
No, there is no change in the read set or anything of the sort.
The peer just checks the stateDB if it sees a reference instead of the full identity.
If the peer sees a full identity, and sees there is no reference in the stateDB, it adds one.
{quote}
Based on the above statement, I assume that you do not intend that the identity in the outermost signature header be replaced with an idRef, leaving you with ~700 bytes for the submitter's identity, 32 bytes for the one embedded inside the tx, and 32 bytes for the endorser's identity.{quote}
No, I intend to do that exactly. I guess you're concerned for the orderer, right? 
So, I think the client can just attach the preimage of the idRef to a new field in the envelope, which is not the signature and not the payload that is signed, and the orderer can verify using a hash that it matches, and use that ""attachable"" identity to verify the signature.
{quote}
The reason why I note this, is from an orderer perspective, there is of course no statedb, and we would not want to introduce it as a dependency. From an orderer perspective, so long as this outermost identity is left intact, optimizations inside the endorser-tx are welcomed. The orderer similarly cannot assume that its identity is known to the peers, so it would always need to include its identity in the signature of each block.{quote}
Perhaps I should read the entire comment instead of replying per block, but it's too late now. See above.

{quote}My primary concern about this scheme overall is that replacing identities with hashes adds another layer of opacity to the system. In order to allow clients to fully understand transactions, would you propose adding some new service which allows a client to map hashes back to identities?{quote}

Why would clients understand transactions? What do you mean by that? Which identities does a client need to understand?

{quote}I would also be curious to see some performance numbers which back up the notion that we are IO bound or CPU bound. If we are not IO bound then the filesystem compression seems like it would provide 90+% of the value by making filesystem usage lower, would work with Kafka brokers too, all while adding zero additional complexity to fabric.{quote}
I don't really understand what you mean here. An orderer node has a limited bandwidth. That bandwidth, dictates how many peers as a function of transaction throughput that orderer can deliver, no?
If you deliver blocks at a rate of X Mbps to 10 peers, then you deliver 10X Mbps of data. It has nothing to do with how fast these 10 peers process these blocks, because the ""free factor"" here is the amount of peers that pull from that orderer node. If you decrease the data you send, you increase the amount of peers it can talk to without reducing its throughput.

{quote}Also, have we investigated simply using compression on the HTTP2 body? Since we are using gRPC, this also seems like a very low work, potentially high reward option.{quote}
Doesn't compression before encryption harm security? I'm not an expert on this, but my intuition says it does, because the amount of data that is encrypted is smaller, and also - when you compress stuff, you create a bias in the length of the payload and this is in a way- more information to an attacker, no? Perhaps [~elli-androulaki]  or [~ales] or [~angelo.decaro] can chime in here?

Now, putting security aside- from experiments I made, when you compress a block that has only 1 transaction, it compresses to only half the size, but if you just put the hashes - a transaction is compressed to a third of the size, without even counting the identity of the orderer. It might be that in a high throughput environment, the cumulative repetitions of the transactions makes compression cost-effective as the hashing, but if the throughput is low - it is not the case. 

{quote}
At a broader level, I suspect that for 'serious deployment', putting the block storage onto a filesystem which supports compression is going to be a good idea regardless. I'd be very curious to see what the performance of such a configuration would be.{quote}

Well, but:
# You can do this regardless of the solution of the identity referencing, no? Won't that be a cumulative effect? Or, do you think that the compression would end up with the same space capacity regardless if we reference identities or not?
# What about the users that don't have this capability? I've seen users complain on rocket-chat that their disk space runs out very, very fast. 
Since this is not a project that is aimed only for high-end customers like financial institutions and enterprises, I think it makes sense to try and reduce the technical requirements of deploying Fabric with success.
I think it makes sense this feature will be configurable by the clients and peers, and if we have a serious deployment with a lot of disk space and / or effective compression at the file system level, they could just turn this off, no?


;;;","08/Feb/18 4:10 PM;luomin;No changes were made above. It is a misoperation. Sorry;;;","08/Feb/18 9:32 PM;elli-androulaki;Hi, so i agree that in principal one could do this sort of identity deduplication (also a from of compression) at the ledger side, starting from the transaction submission stage. 

If you know that your identity has been used in some other transaction in the past, one could provide a reference to it in its transactions to follow, forcing the fabric entities that play the role of ""verifier"" to retrieve the full identity from the ledger prior to starting the validation. Of course, the devil is in the details :)

Regarding the point that extra logic would need to be added to the orderers (besides the committing peers), one could say that at a first stage, client-certificates are attached in whole, and this identity-by-reference inclusion in transactions applies for endorser identities. Given endorser identities are more than the creator single identity, we may still benefit, no? In the future, one could leverage threshold signatures on the endorsement side, to make the size of endorsedAction even smaller. 

Exception is the utxo type of transactions that are likely to include only client signatures... 

Another point is that when privacy preserving client or endorser identities are in place, such a deduplication is not possible to be applied.

 

-----


> Doesn't compression before encryption harm security? I'm not an expert on this, but my intuition says it does, because the amount of data that is encrypted is smaller, and also - when you compress stuff, you create a bias in the length of the payload and this is in a way- more information to an attacker, no?

I guess it depends on the setting, i.e., who you consider to be your attacker (neighboring peer, orderer) and what are its powers (e.g., can it see the packages exchanged across peers?), what is the type of messages you are to encrypt. If the attacker is given a ciphertext that is assumed to be the encryption of compressed version of one of two messages whose compressed version exhibits different sizes, then of course the attacker can gain some advantage into distinguishing the encrypted message. But if the compression ratios of are the same for all equal size exchanged messages, then performing compression at the single message side would not  leak more than the amount of information exchanged among parties (that is anyway leaked, no?). 

On the other hand if compression takes place considering the respective ledger (i.e., deduplication at the identity level) and the adversary eavesdrops a communication among two parties from a different channel, it may infer that the two parties exchanged a transaction that includes only one certificate, increasing the chances (from the adversarial perspective) that the transaction refers to identities that have already appeared in the respective channel.

 

 ;;;","08/Feb/18 9:46 PM;yacovm;[~elli-androulaki], the attacker I had in mind in the story is not a member of the blockchain, but someone that can route all the traffic through itself via ip layer hijacking, and it is not supposed to see the encrypted TLS traffic.

;;;","09/Feb/18 12:47 AM;jyellick;{quote}No, I intend to do that exactly. I guess you're concerned for the orderer, right? 
 So, I think the client can just attach the preimage of the idRef to a new field that is not part of the envelope, and the orderer can verify using a hash that it matches, and use that ""attachable"" identity to verify the signature.
{quote}
If the transaction still comes with the identity attached as well as the hash, it seems like that is defeating the purpose? From an ordering perspective, we will have to order both of these (so that other nodes can validate the transaction), so this would, at least for the orderer add complexity without any performance value. Of course having the rest of the payload be smaller would help. And of course the blocks would be smaller in size which could help the Deliver service somewhat.

This still raises questions to me. What about a client wishing to anonymously DoS the chain? They could send unlimited transactions, leaving only their certificate hash in the blockchain. So long as they never send a successful transaction, there will be no obvious way to map the transaction back to a user.
{quote}I don't really understand what you mean here. An orderer node has a limited bandwidth. That bandwidth, dictates how many peers as a function of transaction throughput that orderer can deliver, no?
 If you deliver blocks at a rate of X Mbps to 10 peers, then you deliver 10X Mbps of data. It has nothing to do with how fast these 10 peers process these blocks, because the ""free factor"" here is the amount of peers that pull from that orderer node. If you decrease the data you send, you increase the amount of peers it can talk to without reducing its throughput.
{quote}
Yes,the orderer has a finite amount of available bandwidth. However, bandwidth is not the only finite resource. CPU is also a finite resource, as is memory, as is disk. If orderers were _only_ doing Deliver, then I agree, it is going to be IO bound, but orderers also do Broadcast, which limits the rate at which transactions may pass through the system, and is largely CPU bound.

If the orderer cannot validate transactions (CPU bound) fast enough to produce enough blocks to saturate the downlink of the Deliver service (Network Bound). Then reducing the transaction size will not increase throughput. Similarly, if the peer cannot validate blocks fast enough (CPU bound) that it pulls blocks from the orderer to saturate the downlink, then reducing transaction size will similarly not reduce throughput.

Yes, the orderers and peers should scale horizontally, but before we start optimizing the transaction size on the network as a bottleneck, I'd like to see that it is indeed the transaction size that is the bottleneck. Anecdotally, I have heard complaints about peers lagging far behind the orderer in terms of block height, because they cannot validate transactions as fast as the orderer puts them in the blockchain. Hopefully the parallel validation in v1.1 will alleviate that, but I'm still wary of making a structural change to our messages to optimize for something which has not been demonstrated to be a real world problem.
{quote}Doesn't compression before encryption harm security? I'm not an expert on this, but my intuition says it does, because the amount of data that is encrypted is smaller, and also - when you compress stuff, you create a bias in the length of the payload and this is in a way- more information to an attacker, no? Perhaps Alessandro Sorniotti or Angelo De Caro can chime in here?
{quote}
I agree, a security expert is needed here, but I wonder whether it's leaking any information which isn't already there. The transaction length is already visible, and is strongly correlated with number of signers.
{quote}Now, putting security aside- from experiments I made, when you compress a block that has only 1 transaction, it compresses to only half the size, but if you just put the hashes - a transaction is compressed to a third of the size, without even counting the identity of the orderer. It might be that in a high throughput environment, the cumulative repetitions of the transactions makes compression cost-effective as the hashing, but if the throughput is low - it is not the case.
{quote}
I agree, clearly, the hash is going to be the superior solution from a bandwidth perspective. But we need to agree what problem we are trying to solve. Do things take up too much room on disk? Is our throughput too low because the network is clogged? The hash clearly solves many or all of these problems, but if it is solving ones which do not actually exist, and we could solve the ones which do with no development effort, then all the better.
{quote}Well, but:
 1. You can do this regardless of the solution of the identity referencing, no? Won't that be a cumulative effect? Or, do you think that the compression would end up with the same space capacity regardless if we reference identities or not?
 2. What about the users that don't have this capability? I've seen users complain on rocket-chat that their disk space runs out very, very fast.
 Since this is not a project that is aimed only for high-end customers like financial institutions and enterprises, I think it makes sense to try and reduce the technical requirements of deploying Fabric with success.
{quote} # I would expect that the affect would be muted after the referencing, though obviously, the only way to be sure would be to test.
 # This is what I was looking for. The issue as written discusses the ""what"" but not so much the ""why"". What would you think of creating default checkpoint/pruning rules for these users? (Even with compression, users will still face disk exhaustion issues).;;;","09/Feb/18 1:22 AM;yacovm;{quote}If the transaction still comes with the identity attached as well as the hash, it seems like that is defeating the purpose? From an ordering perspective, we will have to order both of these (so that other nodes can validate the transaction),{quote}

So, the orderer would not put it into the block, but would send it to other nodes. 
I'm talking about the bandwidth downstream - from the orderers to the peers.


{quote}This still raises questions to me. What about a client wishing to anonymously DoS the chain? They could send unlimited transactions, leaving only their certificate hash in the blockchain. So long as they never send a successful transaction, there will be no obvious way to map the transaction back to a user.{quote}
If the orderer includes the transaction in the block, it means it came attached with a valid identity of the client, no? Then it's not anonymous. 


{quote}Yes,the orderer has a finite amount of available bandwidth. However, bandwidth is not the only finite resource. CPU is also a finite resource, as is memory, as is disk. If orderers were only doing Deliver, then I agree, it is going to be IO bound, but orderers also do Broadcast, which limits the rate at which transactions may pass through the system, and is largely CPU bound.
If the orderer cannot validate transactions (CPU bound) fast enough to produce enough blocks to saturate the downlink of the Deliver service (Network Bound). Then reducing the transaction size will not increase throughput. Similarly, if the peer cannot validate blocks fast enough (CPU bound) that it pulls blocks from the orderer to saturate the downlink, then reducing transaction size will similarly not reduce throughput.
{quote}
Right, but assuming peers are somewhat uniform in their processing power, and the transaction rate that goes into broadcast is constant - as the peer number scales, the bandwidth becomes the bottleneck for deliver, simply because all you do is add more peers. 

{quote}Anecdotally, I have heard complaints about peers lagging far behind the orderer in terms of block height, because they cannot validate transactions as fast as the orderer puts them in the blockchain.{quote}
That's just because no one runs a deployment with more than a couple of peers. 

{quote} I'm still wary of making a structural change to our messages to optimize for something which has not been demonstrated to be a real world problem.{quote}
{quote}The hash clearly solves many or all of these problems, but if it is solving ones which do not actually exist, and we could solve the ones which do with no development effort, then all the better.{quote}
This makes sense - if this isn't a cost-effective change, then we shouldn't do it.

{quote}What would you think of creating default checkpoint/pruning rules for these users? (Even with compression, users will still face disk exhaustion issues).{quote}
Right, I agree that if we have auto-pruning then disk space isn't a problem. 


To sum up, I guess it might be indeed a little too early to introduce such a change in fabric, since most deployments are tiny and will probably be in the future as well.
So, I'm removing the version label for now.
;;;","09/Feb/18 2:30 AM;jyellick;{quote}
If the orderer includes the transaction in the block, it means it came attached with a valid identity of the client, no? Then it's not anonymous.
{quote}

The scenario I am thinking is this:

# CA issues identity ""Foo"", along with a million others. 
# Owner of ""Foo"" deliberately does _not_ ever successfully transact.
# Owner of ""Foo"" creates a tx with the creator as a hash, and the attached identity so that the orderer can validate, the payload data is garbage
# Orderer verifies that the hash in the header corresponds to the attached ""Foo"" identity, and allows the tx through
# Orderer strips out the attached identity, leaving only the hash (because otherwise, we are not actually reducing the message size)
# Peer receives a tx which has only a hashed identity (which it has never observed), and a garbage data payload

So, yes, the orderer knows the identity and that the identity is valid, but it doesn't know the tx is garbage.  The peer knows the tx is garbage, but it does not know the associated identity.

How can the peers figure out which identity is doing this? The only evidence on the chain is an unresolvable hash of identity.  I assume the peer guys would have to go ask the ordering admins to somehow capture the tx with the attached identity before it has been stripped out, or we would have to allow blacklisting of identities by hash, or maintain a map at the CA from hash to cert.  It's certainly solvable, but it was meant only as an illustration of some of the additional complexity that could cascade in.;;;","09/Feb/18 3:37 AM;yacovm;I think any client can send a transaction anonymously by simply getting his hands on a transaction of some other user via calling deliver on the orderer, and then sending that transaction over and over again, and it will be included in the block, no?
The orderer doesn't check the txID and doesn't do any time checks. 

{quote} I assume the peer guys would have to go ask the ordering admins to somehow capture the tx with the attached identity before it has been stripped out, or we would have to allow blacklisting of identities by hash, or maintain a map at the CA from hash to cert. It's certainly solvable, but it was meant only as an illustration of some of the additional complexity that could cascade in.{quote}

This might be resolved when we have CRLS for TLS. ;;;","24/May/19 11:32 PM;samodergec;Hey [~yacovm] [~mastersingh24] [~denyeart] [~jyellick] ,
We are currently looking into use case where endorsement policy will contains about 10 organisations. Consequently that means each transaction will contains x.509 certificate with is approximately 0.7K Kbytes in size, therefore results in overhead of 7Kbytes per single transaction. Given the estimated load of thousands of transactions implies significant burden in terms of space. Current absence of ledger truncate capabilities makes this problem even more acute.
The raised concern in this JIRA is legit and we wondering what is the current status and whenever any progress has been done so far? We would like to collaborate on this topic and see what could be done to decrease overhead of keep x.509 certs on disk. ;;;","28/Jan/21 10:03 PM;nkalichynskyi;Hi,

[~yacovm], [~mastersingh24], [~denyeart], [~jyellick], was there any progress on this, maybe another ticket created or something? Big transaction size is still an issue.;;;","28/Jan/21 10:58 PM;yacovm;No;;;",,,
Separate out the native deployment and docker deployment steps in document for orderer upgrade,FAB-8009,27310,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,suryalnvs,suryalnvs,02/Feb/18 12:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Feb/18 6:07 AM,,,,v1.1.0,,,fabric-docs,,,,0,documentation,quality,,,,"Native deployment and Docker deployment are two different ways of upgrading orderers. In the document, native deployment and docker deployment are given as sequential steps.

http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-orderer-binaries",,bmos299,denyeart,joe-alewine,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvlr:",,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,joe-alewine,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Feb/18 1:02 PM;denyeart;[~suryalnvs] [~scottz] [~bmos299] 

For ones like this where a tester knows exactly what the minor doc fix is, could the tester simply push a doc fix?  That way nothing gets lost in translation and it is addressed immediately.  Also other small problems that would otherwise get ignored as not defect-worthy could also be fixed as part of document review.;;;","06/Feb/18 12:16 AM;Clayton Sims;[~suryalnvs] [~scottz] [~bmos299]  you good with the suggest approach?

 ;;;","07/Feb/18 12:33 AM;joe-alewine;This is one we've caught and will be addressing in an upcoming CR.;;;","07/Feb/18 1:41 AM;bmos299;[~Clayton Sims] [~denyeart] .  Absolutely.   We can all make document changes.;;;","07/Feb/18 2:56 AM;Clayton Sims;[~bmos299] thanks Barry that will make it go much faster. ;;;","10/Feb/18 1:37 AM;joe-alewine;CR that addresses this – and other things – here:

 

https://gerrit.hyperledger.org/r/#/c/17485/;;;",,,,,,,,,,,,,,,,,
Provide ways to find kafka cluster version in upgrade orderers documentation,FAB-8010,27311,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,suryalnvs,suryalnvs,02/Feb/18 12:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Feb/18 6:01 AM,,,,,,,fabric-docs,,,,0,documentation,quality,,,,"In the documentation for upgrade orderers ([http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-orderer-binaries),] while adding the ORDERER_KAFKA_VERSION as environment variable, need to provide ways on how to find the kafka cluster version.",,denyeart,sanchezl,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvlz:",,,,,,,,,,,,,,,,,,,,,denyeart,sanchezl,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 12:47 PM;denyeart;[~sanchezl] Could you help with a doc clarification?;;;","06/Feb/18 12:12 AM;Clayton Sims;luis can you take a look?;;;","06/Feb/18 4:59 AM;sanchezl;While Kafka has no straightforward way to figure out which version you are using, I don't think that it is our responsibility to document how to figure out your Kafka version. From Fabric's point of view, it's an external dependency. In my view, it's like documenting ""What operating system are you using?"". 

That said, I can see that for users that don't care what version of Kafka they are using and are just simply using our sample Kafka images we can remind them which version of Kafka was in our sample images. I will add a note in the upgrade doc documenting which Kafka version was bundled in 1.0.x sample images. ([https://gerrit.hyperledger.org/r/c/17551/])
----
To actually figure out which Kafka version you are using:
 * Ask your Kafka provider to tell you.
 * Search the Kafka broker's log for {{INFO Kafka version}}.
 * Examine the names of the jars files in Kafka's {{bin}} directory.

 ;;;",,,,,,,,,,,,,,,,,,,,
PTE supports Marbles rich queries,FAB-8011,27312,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,02/Feb/18 12:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 1:55 AM,,,,,,,fabric-quality,,,,0,,,,,,PTE supports marbles02 chaincode rich queries: queryMarblesByOwner and queryMarbles .  This is couchDB only.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyvm7:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"10/Feb/18 4:41 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17743/;;;",,,,,,,,,,,,,,,,,,,,,,
Document detailed upgrade steps via Upgrade Tutorial,FAB-8012,27313,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,rohitadivi,rohitadivi,02/Feb/18 12:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 8:06 AM,,,,v1.1.0,,,fabric-docs,,,,0,documentation,must-fix,quality,,,"In the documentation for upgrading from v1.0.x, the documentation does not mention the steps for configuration update in the section for capabilities in a configuration update http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#capabilities-in-a-configuration-update
For a new user this can be difficult and mentioning the steps to make configuration update will help them.",,joe-alewine,luomin,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvmf:",,,,,,,,,,,,,,,,,,,,,joe-alewine,luomin,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Feb/18 6:05 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/18351/;;;",,,,,,,,,,,,,,,,,,,,,,
"As part of native deployment in upgrading, document the config file changes from v1.0 to v1.1",FAB-8013,27314,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,suryalnvs,suryalnvs,02/Feb/18 1:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 1:32 AM,,,,v1.1.0,,,fabric-docs,,,,0,documentation,quality,,,,"When upgrading orderers and peers from v1.0.x to v1.1 using native deployment, which uses the v1.0 config files, needs to add new configuration variables from v1.1 config files as the environment variables in orderers and peers after upgrading. Need to know the differences between config files from v1.0 to v1.1 so that those differences can be set as environment variables in the upgraded orderers and peers respectively.

 

Orderer upgrade: [http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-orderer-binaries]

 

Peer Upgrade: [http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-orderer-binaries]

 ",,ChristopherFerris,denyeart,joe-alewine,jyellick,luomin,mastersingh24,rameshthoomu,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvmn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,joe-alewine,jyellick,luomin,mastersingh24,rameshthoomu,suryalnvs,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 5:29 AM;denyeart;[~jyellick] What do you think?;;;","22/Feb/18 11:48 PM;jyellick;This issue highlights a difference between how we treat native deployments and docker from a release perspective.

If users deploy using our docker images, then they get not only the correct binaries for the processes, but they also get updated base configuration files for those binaries, such as `orderer.yaml` and `core.yaml`. From a viper perspective, it's fairly imperative that these files are kept up to date. If a variable is not present in the yaml file, then it cannot be overridden in the environment, and it is a support nightmare if we cannot rely on env overrides to affect configuration.

For v1.1, `orderer.yaml` has a total of 40 new lines, including 6 new variables.  For `core.yaml` the total is 240 new lines, including 35 new variables. This excludes the nesting structure required for these new variables, as well as the inline documentation, and changed defaults. It is likely a futile goal to document each of these new variables in an effort to get users to add them to their files manually.

Instead, it makes the most sense that a user should start with the new config file, and using a tool like diff, port their changes from their old config file to their new one.  We can document this procedure, but this raises a question, where should the user get these configuration files from?

After discussion on #fabric-maintainers, there seemed to be a consensus that we must support non-docker deployments.

[~ChristopherFerris] Pointed out that we also do installations via go get and Mac homebrew.  He is interested especially in a consistent approach to dealing with the config files.

[~yacovm] Thought we should include the config files along side the release artifacts.

Personally, I'm in favor including the config files along with the release artifacts, as it is a sticking point for documenting upgrade at the moment.  Then, we can look at bringing the other installation methods into parity, but I welcome other opinions.;;;","23/Feb/18 2:46 AM;mastersingh24;I'd vote for including them.  It's good to have them as reference in any case and better than having to keep updating the download link;;;","23/Feb/18 3:23 AM;ChristopherFerris;ok, chatted with Gari, let's include them in the tarfile that we publish the binaries under config/ directory sibling of bin/

Chris;;;","23/Feb/18 12:01 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18221/;;;",,,,,,,,,,,,,,,,,,
Document that chaincode can invoke other chaincode on same channel to update state,FAB-8014,27315,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,denyeart,denyeart,02/Feb/18 1:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 9:25 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"*From mailing list:*

I created a program on hyperledger-fabric that could change the state of the ledger by invoking a method of one chaincode through another if they are on the same channel. 

However, in your documents it's mentioned that the second chaincode can only access the state of the first. 

I request you to kindly update your documents so that the developers can make full use of the capabilities that hyperledger-fabric provides.

*Doc topic:*

[http://hyperledger-fabric.readthedocs.io/en/v1.1.0-alpha/chaincode4ade.html#what-is-chaincode]

 

*The InvokeChaincode() API doc is correct:*

https://github.com/hyperledger/fabric/blob/release/core/chaincode/shim/interfaces.go#L66-L80

but we need to indicate the same thing in readthedocs.

 ",,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvmv:",,,,,,,,,,,,,,,,,,,,,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Feb/18 12:19 AM;Clayton Sims;min thanks for picking this up.   any outlook on when you could have this fixed?    ;;;","06/Feb/18 7:04 PM;luomin;Hi, [~Clayton Sims] , thank you for the query. Could you have a check of my current CR [https://gerrit.hyperledger.org/r/#/c/17571/]

 ;;;",,,,,,,,,,,,,,,,,,,,,
Behave framework: add capability for autogeneration of json files,FAB-8016,27317,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,AdnanChoudhury,AdnanChoudhury,02/Feb/18 1:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 2:24 AM,,,,,,,fabric-quality,,,,0,,,,,,,,AdnanChoudhury,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvn3:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"08/Feb/18 4:08 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/17457/;;;",,,,,,,,,,,,,,,,,,,,,,
Peer CLI fetch command error assignment issue,FAB-8017,27321,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,02/Feb/18 2:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Feb/18 4:19 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"I found this bug while attempting to fetch the genesis block for a channel with an identity from an organization that is not part of the channel. 

The fetchconfig code creates an initial err variable before the switch statement but accidentally creates another err variable as it creates new variables in some of the case statements. This new err variable is assigned the error value but the initial err variable remains nil. Upon exiting the switch statement, the error has been lost and the proto marshal call proceeds with a nil block. 

Before the fix, the user can see the log message state that the action was forbidden but receives an error message related to marshaling a nil block:
{code:java}
2018-01-31 00:41:47.571 UTC [channelCmd] readBlock -> DEBU 00a Got status: &{FORBIDDEN}

Error: proto: Marshal called with nil{code}
After this fix, the user receives the expected error message: 
{code:java}
2018-01-31 00:50:32.524 UTC [channelCmd] readBlock -> DEBU 00a Got status: &{FORBIDDEN}

Error: can't read the block: &{FORBIDDEN}{code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvnb:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 2:11 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/17423/;;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB Retry count is misleading,FAB-8019,27329,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,02/Feb/18 2:48 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Feb/18 3:15 AM,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,"The CouchDB retry currently assumes the first pass through is actually retry number 1.

It also does not currently allow a setting of zero retries.   This can be confusing to the end user and will prevent some potential use cases that may need to wrap the request handler with zero retry logic.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvnj:",,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 3:23 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/17435/;;;",,,,,,,,,,,,,,,,,,,,,,
Capabilities are not defined in the upgrade docs,FAB-8020,27330,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,rohitadivi,rohitadivi,02/Feb/18 2:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 3:48 AM,,,,v1.1.0,,,fabric-docs,,,,0,docs,documentation,quality,,,"* One of the major features of v1.1 upgrade is capabilities but they are not defined specifically in the documentation http://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_one_point_one.html. 
* The documentation should define the list of capabilities that are enabled in v1.1 and what they do. This will help users in understanding the v1.1 upgrades better.
* The documentation also needs to specify the list of capabilities the users need to put in to enable the channel capabilities.",,denyeart,joe-alewine,luomin,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvnr:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,luomin,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 12:55 PM;denyeart;[~jyellick] Could you help with this one?;;;","16/Feb/18 8:12 AM;joe-alewine;In google docs here: [https://docs.google.com/document/d/1IExLBJZc5JqH1xXNVCraRzMVzwcQpVGYbOt93Tgg6dg/edit?usp=sharing]

Will need more prescriptive commands pending work of Surya and Matt Hamilton – as is it's very similar to the Capability Requirements sections here: http://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_one_point_one.html;;;","24/Feb/18 4:40 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/18291/;;;",,,,,,,,,,,,,,,,,,,,
Add configtxlator proto decode/encode,FAB-8025,27344,27289,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,02/Feb/18 6:13 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Feb/18 9:13 PM,,,,,,,,,,,0,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvon:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 11:24 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17447/;;;",,,,,,,,,,,,,,,,,,,,,,
Add configtxlator compute_update,FAB-8026,27345,27289,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,02/Feb/18 6:13 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Feb/18 9:12 PM,,,,,,,,,,,0,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvov:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 7:24 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17449/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix unchecked pointer dereference,FAB-8027,27346,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Feb/18 6:14 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Feb/18 7:24 AM,,,,v1.1.0,,,fabric-tools,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvp3:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/18 6:20 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/17445;;;",,,,,,,,,,,,,,,,,,,,,,
Duplicated loading of environment variables in ACL tests,FAB-8028,27348,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,02/Feb/18 6:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Mar/18 2:18 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-quality,,,,0,quality,,,,,"'acl_happy_path.py' sets environment variables by 'scripts/env.sh' and runs 'start.sh'.
But ‘start.sh’ also reads the same file, which is unnecessary.
 
In 'fabric-test/regression/daily/acl_happy_path.py'
{code:java}
...
fca_sample_directory = '../../fabric-samples/fabric-ca'
...
class ACL(unittest.TestCase):
 
    def test_FAB6490_Using_FCA_With_ACL_Permissioning(self):
...
        output = subprocess.check_output([""./scripts/env.sh && ./start.sh""],
                                         shell=True, cwd=fca_sample_directory)
...
{code}

In ../../fabric-sample/fabric-ca/start.sh 
{code:java} 
#!/bin/bash
...
SDIR=$(dirname ""$0"")
source ${SDIR}/scripts/env.sh
...
{code}",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvpb:",,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"02/Feb/18 9:32 AM;nnao;https://gerrit.hyperledger.org/r/#/c/17459/;;;",,,,,,,,,,,,,,,,,,,,,,
PostgreSQL as Fabric's State Database,FAB-8031,27355,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Senthil1,Senthil1,02/Feb/18 5:19 PM,23/Jul/20 5:44 PM,28/Oct/23 3:02 AM,23/Jan/20 7:25 AM,,,,Future,,,fabric-ledger,,,,4,Ledger,stale-item,,,,"Fabirc v1.1 has two state database options: (i) LevelDB, and (ii) CouchDB. LevelDB is the default key/value state database which stores values as binary data. Hence, only the key based query is supported. In the case of CouchDB (a JSON document store), both binary data and JSON documents are supported. Hence, CouchDB enables rich query against the chaincode data (for JSON data).
 
Ledger component in fabric was reworked in fabric to partly support the v1 transaction flow, mainly the endorsement model ([https://github.com/hyperledger-archives/fabric/wiki/Next-Consensus-Architecture-Proposal]) which requires simulation of transaction and collection of read/write set, ordering of transaction, finally state validation (read set) and commit of valid transactions. Hence, we needed following features from an open-source state database (note that the following is a viewpoint on what we needed during initial ledger design discussion with Dave Enyeart (fabric-maintainer) and Manish Sethi (fabric-maintainer)):

1. Snapshot isolation level & transaction support
 * To ensure consistent view of data to provide repeatable read property so that chaincode does not get confused.
 * To allow transaction simulations to run in parallel with no contention for read and write locks which would significantly degrade the performance.
 * To rollback the transaction at end of the simulation. 

2. Collection of read and write set
 * To validate the transaction during commit phase.

3. Validation of read set & commit the write set
 * To ensure serializability isolation level needed by most blockchain applications. 

However, none of the existing databases provide all the above features (though there are a few research papers that talks about collecting read/write set, etc...). Hence, ledger component in fabric was reworked to support the endorsement model (https://jira.hyperledger.org/browse/FAB-758?jql=text%20~%20%22ledger%22) by collecting read/write set and validating the same on ledger itself rather than within the database. Due to this design, we couldn't use sophisticated queries within transaction (i.e., write). 

Instead of building a lot of database concept in ledger, we propose for a modified PostgreSQL as a state database so that we can support the following:

1. Both {color:#000000}relational{color} data model (structural data), and  {color:#000000}JSON{color} data model (non-structural data)
 * As traditional applications are built using relational data model, it would ease their movement to the fabric. Further, certain applications need to maintain entity relationships between data items (could be done easily with the relational model).

2. Structured Query Language ({color:#000000}SQL{color}) on chaincodes for both data models.
 * Ease analytics operations.

{color:#000000}3. Sophisticated{color} {color:#000000}queries{color} (both read and write) as a part of {color:#000000}transactions{color}.
 * With no restriction on the type of queries (i.e., joins, nested queries, group by, etc…) and with the combination of both chaincodes (go, java, nodejs) and SQL, it would become easier to write smart contracts with more power. Even smart-contract can be implemented fully in SQL procedure by still retaining chaincode to do invoke of SQL procedure. 

{color:#000000}4. Read Your Own Write{color} (within a chaincode transaction).

{color:#000000}5. History{color}/provenance query {color:#000000}using SQL{color}.

{color:#000000}6. Recovery{color} and new node joining using database {color:#000000}checkpointing{color}.

7. Use of {color:#000000}Access Control{color} (GRANT PERMISSIONS) features along with {color:#000000}row level security policies {color}in PostgreSQL.

8. State replication to Intra organization {color:#000000}committer only{color} node using {color:#000000}selective replication{color}.

{color:#000000}9. Simultaneous{color} execution of both {color:#000000}simulation{color} and final {color:#000000}commit{color}.

We have come up a proposal to modify PostgreSQL v10 to support the fabric's endorsement model so that we can support PostgreSQL as state database. This is a preliminary design and we have already implemented a few required components to ensure that it can be done. We will post a detailed design document soon. We would like to hear feedback on the early design, any flaws/changes required in our design, flaws, the usefulness of this work, etc...  

Corda (another blockchain platform) supports relational database.",,adarshsaraf123,bmalavan,daijianw,davidkhala,denyeart,Gauravimpro,grapebaba,heixiongtt,ibmamnt,jmason900,jmcnevin,knagware9,luomin,minollo,nagap,remmeier,seemohan,Senthil1,silliman,sykesm,thomasland,troyronda,vchengsong,vigneswaran.r,wutongtree,yacovm,ynamiki,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,FAB-2998,,,,,,,,,,,,,,,,,,,,,,,,,"02/Feb/18 11:57 PM;Senthil1;postgreSQL-under-fabric (2).pptx;https://jira.hyperledger.org/secure/attachment/14538/postgreSQL-under-fabric+%282%29.pptx",,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-9,,PostgreSQL as State Database,To Do,,,Unset,,,,"1|hzyvq7:",,,,Unset,Unset,,,,,,,,,,,,,,,,adarshsaraf123,bmalavan,daijianw,davidkhala,denyeart,Gauravimpro,grapebaba,heixiongtt,ibmamnt,jmason900,jmcnevin,knagware9,luomin,minollo,nagap,remmeier,seemohan,Senthil1,silliman,sykesm,thomasland,troyronda,vchengsong,vigneswaran.r,wutongtree,yacovm,ynamiki,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/18 4:59 AM;jmcnevin;I have to say, I bristle at the idea of needing to modify Postgres to make it operate in a way that Fabric expects.  Are you certain that there are no alternative ways of operating with temporary tables/stored procedures/triggers that can meet the requirements, even if doing so would incur a performance penalty?

If it is required that we use a custom fork of Postgres in order to use it as a state database, it's going to limit our deployment options (no ability to use managed database services), and slow down database upgrade cycles as we wait for the fork to catch up with stock postgres.

In addition, disabling pg_vacuum and using the cruft left behind by updates as a history database seems dangerous.  Are there any guarantees that that data will be maintained in the event of a database dump/restore?;;;","03/Feb/18 2:28 PM;Senthil1;[~jmcnevin]
We are in fact aware of another way to achieve this (from another team) but it has the following four limitations:
 # Only basic DML queries can be supported (no joins, no nested/sub-queries, no stored procedures, no triggers, cannot support provenance/history query)
 # Validation and commit of each transaction in a block must be done sequentially (by executing SQL queries) which would incur significant performance overhead.
 # Only a limited data types are supported (no array support mainly).
 # No support for JSON and related queries.

In order to provide the full power of RDBMS to fabric (and for better performance), we would need to modify PostgreSQL. If there are any other approach which can use only stored procedures and triggers to achieve this, we can discuss on it and modify our design accordingly.

Not all applications require provenance/historical queries. This feature can be enabled and disabled. I agree with your point on disabling pg_vacuum. It has two problems: (a) it bloats up the index (as we are still retaining the delete tuples), (b) it bloats up the tables as well. In a database, the size would really impact the performance. We could definitely come up with a middle approach in which we can enable pg_vaccum and specify till which block it should retain the deleted tuples (again it requires modifications to PostgreSQL). Even in fabric with KV store, there is a discussion on enabling purging of blocks and related data from state DB. This is because as the system continues to run for a longer period, the database would definitely bulk up and degrade the performance. Hence, we can achieve the same using pg_vaccum.

During database dump/restore, as it is now, it won’t consider the deleted tuples. As we would be changing the tuple visibility rule (for provenance queries), we would do the same for database dump so that it would capture all tuples in a table (irrespective of whether it is deleted or not).;;;","23/Jan/20 7:25 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Transaction status code not available through ProcessProposal() RPC,FAB-8035,27377,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,divyank,divyank,02/Feb/18 11:59 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Jul/18 11:06 PM,,,,,,,fabric-peer,,,,1,,,,,,"When a chaincode returns a non-OK status code during transaction simulation, the ProcessProposal() RPC on the endorsing peer returns a ProposalResponse (with the correct error information inside it) and an error string describing the chaincode error.

[https://github.com/hyperledger/fabric/blob/v1.1.0-alpha/core/endorser/endorser.go#L477]

However on the client side of the RPC, when an error is present, [only the error is returned|https://github.com/hyperledger/fabric/blob/v1.1.0-alpha/protos/peer/peer.pb.go#L90] and not the proposal response object. It is recommended that servers return errors created using the [gRPC status|https://godoc.org/google.golang.org/grpc/status] package with a meaningful error code.

As things stand, there is currently no way extract the status code apart from parsing the returned error string.",,divyank,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvsv:",,,,Unset,,,,,,Unset,,,,,,,,,,,divyank,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/May/18 11:37 PM;divyank;This is resolved by https://gerrit.hyperledger.org/r/c/15737/;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-multihost-tests-x86_64 failed due to Timeout.,FAB-8036,27378,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,03/Feb/18 12:02 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,17/Feb/18 1:21 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,"fabric-multihost-tests-x86_64 failed as the build timed out,

{code:java}
11:22:43 TASK [Checking the health of PTE container] ************************************
14:35:50 Build timed out (after 240 minutes). Marking the build as failed.
14:35:50 $ ssh-agent -k
14:35:50 unset SSH_AUTH_SOCK;
14:35:50 unset SSH_AGENT_PID;
14:35:50 echo Agent pid 2129 killed;
14:35:50 [ssh-agent] Stopped.
14:35:50 Build was aborted
{code}


*Build Log*
https://jenkins.hyperledger.org/view/multihost/job/fabric-multihost-tests-x86_64/54/console",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvt3:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/18 3:07 AM;sambhavdutt;The last build #55 for fabric-multihost-tests-x86_64 fails with the timeout error again at PTE container test,

{code:java}
11:07:39 TASK [Start PTE docker container] **********************************************
11:07:40 changed: [10.30.66.17]
11:07:40 
11:07:40 TASK [Checking the health of PTE container] ************************************
14:35:27 Build timed out (after 240 minutes). Marking the build as failed.
14:35:27 $ ssh-agent -k
14:35:27 unset SSH_AUTH_SOCK;
14:35:27 unset SSH_AGENT_PID;
14:35:27 echo Agent pid 2129 killed;
14:35:27 [ssh-agent] Stopped.
14:35:27 Build was aborted
{code}

*Build Log*
https://jenkins.hyperledger.org/view/multihost/job/fabric-multihost-tests-x86_64/55/console;;;","06/Feb/18 2:17 AM;sambhavdutt;The build #57, #58, #59 for the multihost tests passed successfully. The last build #60 failed as there are some changes needed in script. A [*patch* |https://gerrit.hyperledger.org/r/17583]has been submitted to fix this issue.

*Build Log*
https://jenkins.hyperledger.org/view/multihost/job/fabric-multihost-tests-x86_64/60/console;;;",,,,,,,,,,,,,,,,,,,,,
Remove the the disabled jobs from fabric-sdk-java as they are no longer required.,FAB-8037,27381,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,03/Feb/18 12:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,29/Mar/18 2:49 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,Remove the disabled jobs fabric-sdk-java-verify-jsdk1.0.0-fabric_latest-x86_64 and fabric-sdk-java-merge-jsdk1.0.0-fabric_latest-x86_64 from the CI job list as they are not required anymore.,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvtb:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/18 2:20 AM;scottz;[~sambhavdutt] Why is this status INVALID ?  What does that mean? There is no explanation; it cannot remain ""invalid"" and remain open.  What is next step to solve or close this issue?;;;","29/Mar/18 2:53 AM;sambhavdutt;These jobs have been removed, as they are not required

fabric-sdk-java-verify-jsdk1.0.0-fabric_latest-x86_64
fabric-sdk-java-merge-jsdk1.0.0-fabric_latest-x86_64;;;",,,,,,,,,,,,,,,,,,,,,
[ci] - remove fabric-preview-images jobs from CI,FAB-8038,27383,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,03/Feb/18 1:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,05/Feb/18 9:02 PM,,,,,,,fabric-ci,,,,0,,,,,,remove fabric-preview-images CI jobs as these jobs are based on 0.6 code base.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvtj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/18 9:03 PM;rameshthoomu;patch has been merged;;;",,,,,,,,,,,,,,,,,,,,,,
Concept - Identity,FAB-8040,27385,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,joe-alewine,joe-alewine,joe-alewine,03/Feb/18 4:10 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,27/Feb/18 5:01 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,Identity conceptual information.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvtz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Feb/18 4:19 AM;joe-alewine;In gerrit review here: https://gerrit.hyperledger.org/r/#/c/17481/;;;","06/Feb/18 12:00 AM;joe-alewine;Staged here: [http://joestaging-fabric.readthedocs.io/en/latest/identity/identity.html|http://joestaging-fabric.readthedocs.io/en/latest/Identity/Identity.html];;;",,,,,,,,,,,,,,,,,,,,,
Concept - Membership,FAB-8041,27386,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,joe-alewine,joe-alewine,joe-alewine,03/Feb/18 4:11 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,27/Feb/18 8:21 PM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,,joe-alewine,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvu7:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/18 11:58 PM;joe-alewine;[https://gerrit.hyperledger.org/r/#/c/17505/]

 

Staged here: http://joestaging-fabric.readthedocs.io/en/latest/membership/membership.html;;;",,,,,,,,,,,,,,,,,,,,,,
An API to retrieve fabric and fabric-ca versions for application developers,FAB-8042,27387,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Nishi,Nishi,03/Feb/18 4:18 AM,23/Jan/20 7:25 AM,28/Oct/23 3:02 AM,23/Jan/20 7:25 AM,,,,Future,,,fabric-peer,,,,0,stale-item,,,,,When writing application using Node/Java SDK and tools like Fabric Composer having access to current Fabric version as an API that these tools can access is helpful.,,denyeart,Nishi,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvuf:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,Nishi,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/18 6:53 AM;sanchezl;[~Nishi], I've changed this from bug to New Feature, and moved to v1.2.;;;","23/Mar/18 2:08 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:25 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,
Feature Regression  : With blockevent listener now being deprecated,FAB-8043,27388,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,Nishi,Nishi,03/Feb/18 4:25 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,,,,fabric-peer,,,,0,,,,,,"blockevent listener function of getting all events for all channels is being deprecated

say we have

1000 channels, now we got to issue a 1000 calls to listen to events.

and change code as new channels are added

This is a feature regression.

 ",,bmos299,kchristidis,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvun:",,,,Unset,,,,,,Unset,,,,,,,,,,,bmos299,kchristidis,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 12:39 AM;wlahti;While the eventhub isn't ""officially"" deprecated in v1.1, in essence it is and will likely be removed in a future release. Until that point, however, the eventhub will be usable for this scenario. Can we switch this JIRA item to an Improvement or New Feature request and have a discussion there regarding having this capability in the new event services in a future release?;;;","12/Feb/18 9:46 AM;bmos299;[~wlahti] Sure.;;;","22/May/18 12:03 AM;kchristidis;[~bmos299], [~scottz]: I've removed Luis from this as he's working on other things. Please re-assign. (Also a good opportunity to reassess relevance, make sure the tags and target versions are current, and edit the title.);;;","23/May/18 12:01 AM;scottz;Actually, would there  be any security concerns? I am wondering if it is wise to provide this functionality at all, and thus maybe we should close this. Comments?;;;",,,,,,,,,,,,,,,,,,,
CouchDB index warming: potential resource straining due to warming being too frequent (per block),FAB-8044,27389,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,AdnanChoudhury,AdnanChoudhury,03/Feb/18 4:54 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Feb/18 7:55 AM,,,,v1.1.0,,,fabric-ledger,,,,0,couchdb,Quality,,,,"CouchDB index warming is executed per block, and as a result it may become an unexpected resource hog in some scenarios, such as when a high rate of updates going on with very small Batchsize.",,AdnanChoudhury,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvuv:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Feb/18 4:44 PM;denyeart;Need a config option to warm indexes once every N blocks instead of once every 1 block.;;;","08/Feb/18 6:53 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/17603/;;;",,,,,,,,,,,,,,,,,,,,,
"Update upgrade.feature file to retrieve ""config block"" insteead of ""config update""",FAB-8045,27390,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,susmita,susmita,03/Feb/18 6:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Feb/18 2:47 AM,,,,v1.1.0,,,,,,,0,,,,,,https://gerrit.hyperledger.org/r/#/c/17561/,,susmita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvv3:",,,,,,,,,,,,,,,,,,,,,susmita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Create a common log script and remove unused logs from CI jobs.,FAB-8046,27395,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,03/Feb/18 7:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,29/Mar/18 1:37 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,Some post build logs in hyperledger project are not in view anymore and can be removed to save build time. A common build script for all jobs would also be useful to simplify the tasks.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvw7:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhancements to endorsement policies,FAB-8053,27405,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,,muralisr,muralisr,05/Feb/18 2:19 AM,08/Mar/19 2:59 AM,28/Oct/23 3:02 AM,08/Mar/19 2:59 AM,,,,v2.0.0,,,fabric-peer,,,,3,,,,,,"There are several improvements that can be made to endorsement policies. To start with the simplest, endorsement policy for a chaincode is specified at the time of instantiation. There is no way to update except to do an ""upgrade"" using a different endorsement policy. This could be a workaround but has the following drawbacks
 * disrupts service 
 * user have to go through the instantiation process just to update a policy 

One example of need to update the policy is when the channel membership changes. A new member may not have invoke capability based on existing endorsement policy (see --FAB-5893--). 

We could consider two types of enhancements just in terms of
 * flexible ways to specify an endorsement policy during instantiation
 ** e.g., ""*.Admin"" instead of ""Org0.Admin or Org1.Admin""... of course this needs dynamic evaluation at commit time)
 ** e.g. instead of named organizations in the endorsement policy, allow any 1 org, any 2 orgs, majority of orgs, etc. (see FAB-12292)
 * ability to set the endorsement policy separately. This is trickier as the EP is part of the chaincode fingerprint

Beyond the above ""update"" requirement, there are several other enhancements that can be considered. From a list gathered from elsewhere
 * Named endorsers is brittle wrt adding organizations
 * In the real world endorsement often depends on data content, asset ownership, etc. (see FAB-8812)
 * With multiple similar chaincodes managing endorsement policy individually is painful
 * Current default endorsement policy default is entirely inadequate and allows arbitrary state manipulation even without executing chaincode
 * Endorsement policy is tied to chaincode version so modifications require installing a second copy of the chaincode at a new version
 * Providing a good dynamic default of all orgs is impossible
 * Endorsement policy specified per chaincode function

Ideas:
 * Key based endorsement policies (see FAB-8812)
 * Endorsement policies by reference rather than by literal
 * Endorsement policies based on preimage and or postimage",,ales,AshishkumarLakshmanan,C0rWin,denyeart,jyellick,MariWade,muralisr,n-horiguchi,pmcosta1,silliman,yacovm,yxuco,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12292,,FAB-11237,,,FAB-5893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzyvwv:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,AshishkumarLakshmanan,C0rWin,denyeart,jyellick,MariWade,muralisr,n-horiguchi,pmcosta1,silliman,yacovm,yxuco,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/18 7:53 AM;yacovm;{quote}flexible ways to specify an endorsement policy during instantiation (e.g., ""*.Admin"" instead of ""Org0.Admin or Org1.Admin""... of course this needs dynamic evaluation at commit time){quote}

Well we have these in channel reconfiguration and membership, they are meta-policies (I think). 
I don't think it's hard to just have the policy be a marshaled meta-policy instead of a signature policy and it should work I believe. 
[~jyellick] could elaborate on this, I believe.

{quote}ability to set the endorsement policy separately. This is trickier as the EP is part of the chaincode fingerprint{quote}
If we didn't rollback the resource based lifecycle work, we could have that for free (from v1.2 point of view)... I think we should adopt a similar approach in the long run and take out the policy from the fingerprint.
The fingerprint is there to ensure the chaincode of the channel is what you have installed locally, no? 

{quote}Named endorsers is brittle wrt adding organizations{quote}
What do you mean brittle?

{quote}In the real world endorsement often depends on data content, asset ownership, etc.{quote}
Right, but how do you link content and asset ownership to peers? The endorsement is just an attestation of a mandatory witness (peers from the right org) for an execution of a smart contract.
In the end, the executor is a peer or a set of peers. How do you link from the business logic point of view, that such and such peers are eligible of endorsing?
Peers don't own assets, users own them.

{quote}Current default endorsement policy default is entirely inadequate and allows arbitrary state manipulation even without executing chaincode{quote}
What would you suggest the new default to be? Why do we even need a default, by the way? Can't we just not have one? I know we have a pseudo default for SCCs but that's another story...

{quote}Providing a good dynamic default of all orgs is impossible{quote}
That's why I think there shouldn't be one :)

{quote}Key based endorsement policies{quote}
I guess that means that the peer that endorsed, is the owner? Or is there a different idea?

{quote}Endorsement policies based on preimage and or postimage{quote}
Of what function? Can you elaborate?
And postimage is just image, no?

Finally, another thing I would like to say is that though it's true that if you add a new org to the channel, and you want the peers of that org to be endorsers - you need to upgrade the chaincode and that's an overhead, but I don't think that just using meta-policies (majority of orgs) is a silver bullet.
In fact, the only use case where that is suitable for, is if you have several orgs and you want an endorsement from a majority just to make sure peers are not cheating you about their results.

I'm sure that in many use cases, not all orgs can endorse all chaincodes, because organizations have business meaning behind them, and not all businesses provide the same services. 
;;;","06/Jun/18 10:22 AM;AshishkumarLakshmanan;By ""Endorsement policy specified per chaincode function"", the intent is to do this endorsement at the ""function"" which comes as the o/p of go-shim API, *function, args := stub.GetFunctionAndParameters()* . Correct ?;;;","04/Oct/18 1:57 PM;denyeart;[~jyellick] I've added this to the v2.0 lifecycle epic for your consideration. Would you prefer to carry it as a separate epic?  Or split into smaller stories under the existing lifecycle epic?

In my opinion, some progress must be made here and v2.0 would be the logical target to go hand-in-hand with the new lifecycle.  I believe there has been discussion of some improvements such as ""instead of named organizations in the endorsement policy, allow any 1 org, any 2 orgs, majority of orgs, etc"". FAB-12292 has again highlighted this need.

Anyways, would appreciate your thoughts on which pieces would make the most sense in which timeframe.;;;","08/Mar/19 2:58 AM;jyellick;I'm going to close this out, I think we've addressed this in the new lifecycle.;;;","08/Mar/19 2:59 AM;jyellick;I'm going to close this out, I think we've addressed this in the new lifecycle.;;;",,,,,,,,,,,,,,,,,,
Document: Wrong Function Name,FAB-8055,27407,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,05/Feb/18 10:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 12:44 PM,v1.1.0-alpha,,,,,,fabric-docs,,,,0,,,,,,"There is no getMarblesByOwner() function in the marbles02 sample.
It should be queryMarblesByOwner().

http://hyperledger-fabric.readthedocs.io/en/master/couchdb_as_state_database.html?highlight=getMarblesByOwner

bq. The marbles02 fabric sample demonstrates use of CouchDB queries from chaincode. It includes a getMarblesByOwner() function that ...
",,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvx3:",,,,,,,,,,,,,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/18 10:43 AM;ynamiki;https://gerrit.hyperledger.org/r/17515;;;",,,,,,,,,,,,,,,,,,,,,,
Update to latest version of grpc-go,FAB-8061,27414,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,05/Feb/18 8:18 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Mar/18 11:24 PM,,,,v1.2.0,,,fabric-orderer,fabric-peer,,,0,hygiene,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvxz:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Mar/18 8:04 AM;mastersingh24;1.10.0 as of today;;;","17/Mar/18 8:04 AM;mastersingh24;https://gerrit.hyperledger.org/r/19329;;;",,,,,,,,,,,,,,,,,,,,,
Update out of date 3rd party packages,FAB-8062,27415,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,sykesm,mastersingh24,mastersingh24,05/Feb/18 8:21 PM,05/Oct/18 11:06 PM,28/Oct/23 3:02 AM,04/Oct/18 3:15 PM,,,,Future,,,fabric-build,,,,0,hygiene,,,,,"There are many vendored packages which have not bee upgraded since the project began, e.g. viper.

As part of FAB-7083, dependent packages should be upgrade to the latest version possible",,ChristopherFerris,haibbo,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7973,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvy7:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,haibbo,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 4:34 AM;mastersingh24;After chatting with [~sykesm], viper is going to be one the most difficult packages to update so we should take a look at that early on;;;","09/May/18 9:32 PM;ChristopherFerris;[~mastersingh24], with the introduction of dep, is this still relevant or can it be closed?;;;","09/May/18 11:25 PM;kchristidis;As of the time of this writing (HEAD at {{acf93e75d}}), we do not have the most recent versions for the following dependencies:

https://github.com/fsouza/go-dockerclient/releases (1.2.0 vs 1.1.0)
https://github.com/spf13/cobra/releases (0.0.2 vs 0.0.1)
https://github.com/spf13/pflag/releases (1.0.1 vs 1.0.0)
https://github.com/uber-go/tally/releases (3.3.3 vs 3.3.2)
https://github.com/grpc/grpc-go/releases (1.12.0 vs 1.11.3)
https://github.com/cheggaaa/pb/releases (1.0.24 vs 1.0.22)

In our {{constraint}} stanzas we define versions without an operator. According to the documentation, this means that we're actually pinning the left-most non-zero digit in the version. However {{dep ensure}} on the latest master ({{acf93e75d}} does not result in any changes. Interesting.;;;","04/Oct/18 6:11 AM;sykesm;Submitted a bunch of CRs to update dependencies. I did separate CRs for dependencies that may be problematic ({{dep ensure -update [package name]}} and then one large one for everything else {{dep ensure -update}}.

As part of this exercise, I updated version specs for a couple of dependencies and pinned some transient dependencies for docker and sarama with overrides. I also had to address some fallout related to testify and protobuf changes.;;;",,,,,,,,,,,,,,,,,,,
Implement a mock ledger for gossip state transfer tests,FAB-8064,27417,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,yacovm,yacovm,05/Feb/18 8:49 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,13/Mar/18 6:38 PM,,,,,,,fabric-gossip,,,,0,,,,,,"Gossip currently creates a real ledger instance for the state transfer tests, and it should ideally use a mock ledger instance to isolate the logic as much as possible.


[~C0rWin]",,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvyn:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Mar/18 11:44 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/19045/;;;",,,,,,,,,,,,,,,,,,,,,,
Restore properly the log backend in gossip state transfer test,FAB-8065,27418,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yacovm,yacovm,yacovm,05/Feb/18 10:23 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Feb/18 3:55 PM,,,,,,,fabric-gossip,,,,0,,,,,,"The test TestHaltChainProcessing attempts to restore the log backend by overriding the logger, but the function that creates the logger, caches previous logger instances by the package name. 

Even though we can override the logger instance with a new package name, it is probably more correct to overwrite the backend itself. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvyv:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/18 10:25 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/17529/;;;",,,,,,,,,,,,,,,,,,,,,,
State transfer instance uses 2 logger instances instead of 1,FAB-8066,27419,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Feb/18 10:28 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 1:36 PM,,,,,,,fabric-gossip,,,,0,,,,,,"The state transfer constructor in gossip has a redundant reference to a logger, which is actually the same logger instance as the package-wide logger.

This is confusing, and thus needs to be eliminated. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyvz3:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/18 10:30 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/17531/;;;",,,,,,,,,,,,,,,,,,,,,,
Assign port ranges for gossip unit tests,FAB-8067,27426,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Feb/18 10:56 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,11/Mar/18 9:56 PM,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,"Gossip tests run sequentially since some tests in different packages use the same port ranges.

The easiest and most cost-effective thing would be to just make a pass on the tests and assign different port ranges between packages.

[~C0rWin] wdyt? ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8843,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyvzr:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Reduce api packages and remove apiprefix,FAB-8069,27428,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,troyronda,troyronda,06/Feb/18 1:17 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Mar/18 5:56 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzsn:",,,,Unset,,,,,,Unset,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/18 1:50 AM;troyronda;FabricProvider API should probably be in fabsdk/api or in apifabclient (rather than apicore).;;;",,,,,,,,,,,,,,,,,,,,,,
peers panic for longrun test,FAB-8072,27431,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,dongming,dongming,06/Feb/18 1:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Feb/18 3:23 AM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"With fabric commit level 0eb83eb, using PTE to drive transactions with various payload, 1k-500k, with 8 threads, each thread sends 1 transaction per second, i.e., 8 transactions per second, batchsize 1, each transaction followed by a query, after about  4 hours, peers panic with the following traceback:

2018-02-03 02:07:07.061 UTC [kvledger] CommitWithPvtData -> INFO 1159a^[[0m Channel [testorgschannel2]: Committed block [33676] with 1 transaction(s)
2018-02-03 02:07:07.083 UTC [kvledger] CommitWithPvtData -> INFO 1159b^[[0m Channel [testorgschannel1]: Committed block [33811] with 1 transaction(s)
panic: Error during commit to txmgr:sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error

goroutine 455 [running]:
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc420151540, 0xc4209694d0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421d13d80, 0xc4209694d0, 0x0, 0x0)
 <autogenerated>:1 +0x47
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitWithPvtData(0xc4220133c0, 0xc4209694d0, 0xc427f73cf8, 0xdf8475800)
 /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:87 +0x6b
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc421fccbe0, 0xc421ab0360, 0x0, 0x0, 0x0, 0xc421ab0360, 0xc42002f180)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:223 +0xcf9
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc421d15b80, 0xc421ab0360, 0x0, 0x0, 0x0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781 +0x7d
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc421d15b80)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561 +0x411
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:253 +0x6d3

 

If reduce transaction rate to 1 transaction per 2 seconds, the test passes.",,bmos299,C0rWin,dongming,Senthil1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/18 1:29 AM;dongming;4229-crash-0203.log.gz;https://jira.hyperledger.org/secure/attachment/14547/4229-crash-0203.log.gz",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw07:",,,,,,,,,,,,,,,,,,,,,bmos299,C0rWin,dongming,Senthil1,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/18 4:24 AM;yacovm;{quote}sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error{quote}

The output of *dmesg* will be useful here.
Also - was the file system full at the time of the crash?;;;","06/Feb/18 4:26 AM;Clayton Sims;i am changing the component to fabric-peer.   fabric-quality should be used for bugs against the qa tooling as opposed to product defect.    I think this product defect as opposed to qa tool   if i misunderstood then let me know

 ;;;","07/Feb/18 12:16 AM;Clayton Sims;Yacov assigning to you, if there is a better person let me know;;;","07/Feb/18 12:19 AM;yacovm;I'm not even sure it's even a bug in Fabric.
According to the stack trace, the last fabric component from which the error manifested is the ledger. ;;;","07/Feb/18 12:28 AM;yacovm;I suggest we get the requested information, and proceed from there before we classify this as a bug.;;;","07/Feb/18 1:00 AM;dongming;[~yacovm] I do not have dmesg information when it occurred.  I attempted to recreate the bug yesterday, but the test passed.  Now I am running it with constant payload, 500k, and see if this will occur sooner.  Once it occurs I will preserve the system and let you look it.;;;","07/Feb/18 10:41 PM;Senthil1;Looks like the disk is failing. Similar issues found on web: [https://github.com/syncthing/syncthing/issues/1483] and [https://github.com/syncthing/syncthing/issues/2796] ;;;","08/Feb/18 3:53 AM;dongming;Test with 500k payload stops because of disk full.;;;","09/Feb/18 6:13 AM;dongming;The traceback says:

panic: Error during commit to txmgr:sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error

But no specific reason about the I/O error is given.  It would be helpful to debug if more detail information related to the error can be provided in the future.;;;","09/Feb/18 6:21 PM;yacovm;well, what you can do to have more information in the future, is to wrap the peer binary execution command with a script, in your tests.
In the script - after the peer exits (due to a crash), just output all kinds of information, such as *dmesg*, *df -h*, etc. etc.

It might work, but it also might not, if the device that the logs write to, is the same one that made that I/O error.;;;","10/Feb/18 1:25 AM;bmos299;[~denyeart] [~yacovm]  [~manish-sethi] there are several issues out there with

*panic: Error during commit to txmgr:sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error .*   **  

For the most part this is committing blocks but could also happen when reading in configurations, etc.   Is there a way we can give more information in the log about the i/o error?  I do see there are debug messages that should probably be error level log messages.  There are some good commands above like dmesg, etc. but if running native on different platforms may not work.  What do you guys think?  I just think over the next few years we will see this issue come in time after time and the more information we can provide....the better.

Thanks.;;;","10/Feb/18 1:47 AM;yacovm;This file is a levelDB file, so that means levelDB is the one that encountered the error and returned it to the upper layer (fabric), and fabric doesn't control the information detail of the file that generated the error.

What information did you have in mind to be added to the log, Barry? Can you give an example?
;;;","12/Feb/18 12:14 AM;bmos299;Do we know exactly what was passed back from levelDB? What is an EIO from errno.h?   Does leveldb have more options that can be enabled to get more details?  Can we make an attempt to look at a system file?  Things such is insufficient disk space (runtime) or permission errors (at startup) would eliminate over 90% of calls that would come into support.   The message of 'insufficient disk space' would be a huge time saver. As you can see several issues have been opened that are most likely due to running out of disk space.   ;;;","12/Feb/18 11:34 PM;dongming;I attempted to recreate this in the weekend, but have no luck for 3 attempts.;;;","14/Feb/18 3:23 AM;Clayton Sims;ok i will close.  if this happens again you can reopen;;;",,,,,,,,
Peer is not able to re-establish connection with other available orderer ,FAB-8075,27436,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,rhegde,rhegde,06/Feb/18 6:39 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 11:36 PM,,,,v1.0.6,v1.1.0,,fabric-peer,,,,0,,,,,,"Fabric Release v.1.0.4
Kafka Consensus Setup with 3 Orderer, 4 Kafka and 3 ZK.

steps to reproduce
 # During boot-up, peer connects successfully to one of the available orderer say ord02. Here ord01 and ord03 is down.

{code:java}
2018-02-05 21:41:21.060 CET [eventhub_producer] Chat -> ERRO 033 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:41:23.053 CET [kvledger] Commit -> INFO 034 Channel [afb1jhb-anz2mel]: Created block [4038] with 2 transaction(s)
2018-02-05 21:41:25.857 CET [kvledger] Commit -> INFO 035 Channel [afb1jhb-anz2mel]: Created block [4039] with 1 transaction(s)
2018-02-05 21:43:34.537 CET [ConnProducer] NewConnection -> ERRO 036 Failed connecting to ord03.clsorder.cit.clsnet:7050 , error: context deadline exceeded
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 037 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 038 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 039 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 03a error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 03b error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 03c error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled{code}
{code:java}
[clsnet@dusd1devrhap065 ~]$ docker exec -it 1ea7fa53abfa bash
root@peer01:/opt/gopath/src/github.com/hyperledger/fabric/peer# netstat -a
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 127.0.0.11:45411        *:*                     LISTEN
tcp        0      0 peer01.afb1jhb1.c:59324 172.16.212.18:7050      ESTABLISHED
tcp6       0      0 [::]:7051               [::]:*                  LISTEN
tcp6       0      0 [::]:7053               [::]:*                  LISTEN
tcp6       0      0 peer01.afb1jhb1.ci:7051 dev-peer01.afb1jh:46346 ESTABLISHED
tcp6       0      0 peer01.afb1jhb1.ci:7051 dev-peer01.afb1jh:33554 ESTABLISHED
udp        0      0 127.0.0.11:42642        *:*
Active UNIX domain sockets (servers and established)
Proto RefCnt Flags       Type       State         I-Node   Path{code}
   2.  Don't perform any ledger transaction for say >15mins
{code:java}
[clsnet@dusd1devrhap065 ~]$ date
Mon Feb  5 22:04:45 CET 2018{code}
3. Bring up the ord01

4. Bring down the ord02
{code:java}
2018-02-05 21:43:34.537 CET [ConnProducer] NewConnection -> ERRO 036 Failed connecting to ord03.clsorder.cit.clsnet:7050 , error: context deadline exceeded
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 037 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 038 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 039 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 03a error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 03b error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 21:45:50.242 CET [eventhub_producer] Chat -> ERRO 03c error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 22:01:34.807 CET [eventhub_producer] Chat -> ERRO 03d error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 22:18:14.256 CET [eventhub_producer] Chat -> ERRO 03e error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 22:18:14.256 CET [eventhub_producer] Chat -> ERRO 040 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2018-02-05 22:18:14.256 CET [eventhub_producer] Chat -> ERRO 041 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled{code}
5. Peer looses connection with ord02 however does not connect to the ord01.
{code:java}
root@peer01:/opt/gopath/src/github.com/hyperledger/fabric/peer# netstat -a
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 127.0.0.11:45411        *:*                     LISTEN
tcp6       0      0 [::]:7051               [::]:*                  LISTEN
tcp6       0      0 [::]:7053               [::]:*                  LISTEN
tcp6       0      0 peer01.afb1jhb1.ci:7051 fd9ae51b7998.clsn:46346 ESTABLISHED
tcp6       0      0 peer01.afb1jhb1.ci:7051 dev-peer01.afb1jh:33554 ESTABLISHED
udp        0      0 127.0.0.11:42642        *:*
Active UNIX domain sockets (servers and established)
Proto RefCnt Flags       Type       State         I-Node   Path{code}
6. Peer was then restarted and it was able to establish connection with orderer.
{code:java}
[clsnet@dusd1devrhap065 ~]$ docker  ps | grep 1ea7fa53abfa
1ea7fa53abfa        dusd1devrhap061.dev.local/clsnet/fabric-peer:1.0.4                                                                  ""/docker-entrypoin...""   About an hour ago   Up About an hour                                     cit23_peer01_afb1jhb1_cit_clsnet.1.fpqb5kay1k4qjq8n7ops690op
[clsnet@dusd1devrhap065 ~]$ date
Mon Feb  5 22:28:54 CET 2018
[clsnet@dusd1devrhap065 ~]$ docker  ps | grep 1ea7fa53abfa^C
[clsnet@dusd1devrhap065 ~]$ docker exec -it 1ea7fa53abfa bash
root@peer01:/opt/gopath/src/github.com/hyperledger/fabric/peer# netstat -a
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 127.0.0.11:45411        *:*                     LISTEN
tcp6       0      0 [::]:7051               [::]:*                  LISTEN
tcp6       0      0 [::]:7053               [::]:*                  LISTEN
tcp6       0      0 peer01.afb1jhb1.ci:7051 fd9ae51b7998.clsn:46346 ESTABLISHED
tcp6       0      0 peer01.afb1jhb1.ci:7051 dev-peer01.afb1jh:33554 ESTABLISHED
udp        0      0 127.0.0.11:42642        *:*
Active UNIX domain sockets (servers and established)
Proto RefCnt Flags       Type       State         I-Node   Path
root@peer01:/opt/gopath/src/github.com/hyperledger/fabric/peer# exit
exit
[clsnet@dusd1devrhap065 ~]$ docker ^C
[clsnet@dusd1devrhap065 ~]$ docker stop 1ea7fa53abfa
1ea7fa53abfa
[clsnet@dusd1devrhap065 ~]$ date
Mon Feb  5 22:29:37 CET 2018
[clsnet@dusd1devrhap065 ~]$ docker  ps | grep peer01_afb1jhb1
2a356e49a21a        dusd1devrhap061.dev.local/clsnet/fabric-peer:1.0.4                                                                  ""/docker-entrypoin...""   15 seconds ago      Up 8 seconds                                         cit23_peer01_afb1jhb1_cit_clsnet.1.tof39e9i6wugwe9s8hcex812n
[clsnet@dusd1devrhap065 ~]$ docker exec -it 2a356e49a21a bash
root@peer01:/opt/gopath/src/github.com/hyperledger/fabric/peer# netstat -a
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 127.0.0.11:37998        *:*                     LISTEN
tcp        0      0 peer01.afb1jhb1.c:60718 172.16.212.18:7050      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60714 172.16.212.18:7050      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60728 172.16.212.18:7050      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60988 172.16.212.38:5984      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60716 172.16.212.18:7050      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60726 172.16.212.18:7050      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60990 172.16.212.38:5984      TIME_WAIT
tcp        0      0 peer01.afb1jhb1.c:60978 172.16.212.38:5984      ESTABLISHED
tcp        0      0 peer01.afb1jhb1.c:60720 172.16.212.18:7050      ESTABLISHED
tcp6       0      0 [::]:7051               [::]:*                  LISTEN
tcp6       0      0 [::]:7053               [::]:*                  LISTEN
udp        0      0 127.0.0.11:41007        *:*
Active UNIX domain sockets (servers and established)
Proto RefCnt Flags       Type       State         I-Node   Path
root@peer01:/opt/gopath/src/github.com/hyperledger/fabric/peer# exit
exit
[clsnet@dusd1devrhap065 ~]$ date
Mon Feb  5 22:30:30 CET 2018
[clsnet@dusd1devrhap065 ~]${code}
+
 Expected Result+
 Peer must be able to establish connection with available orderers.",,C0rWin,rhegde,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw0n:",,,,,,,,,,,,,,,,,,,,,C0rWin,rhegde,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Feb/18 10:19 PM;C0rWin;Can you please attach peer logs file?;;;","06/Feb/18 11:17 PM;yacovm;FWIW - this scenario doesn't fail in our unit tests, I just wrote an integration test in the release branch (we're at v1.0.5 but nothing has changed since v1.0.4 in the area) that works.
{code}
func TestDeliverServiceShutdownAndRespawn(t *testing.T) {
	defer ensureNoGoroutineLeak(t)()
	// Scenario: Launch an ordering service node and let the client pull some blocks.
	// Then, start a new instance and shut down the old instance
	osn1 := mocks.NewOrderer(5614, t)

	time.Sleep(time.Second)
	gossipServiceAdapter := &mocks.MockGossipServiceAdapter{GossipBlockDisseminations: make(chan uint64)}

	service, err := NewDeliverService(&Config{
		Endpoints:   []string{""localhost:5614"", ""localhost:5615""},
		Gossip:      gossipServiceAdapter,
		CryptoSvc:   &mockMCS{},
		ABCFactory:  DefaultABCFactory,
		ConnFactory: DefaultConnectionFactory,
	})
	assert.NoError(t, err)

	li := &mocks.MockLedgerInfo{Height: uint64(100)}
	osn1.SetNextExpectedSeek(uint64(100))
	err = service.StartDeliverForChannel(""TEST_CHAINID"", li, func() {})
	assert.NoError(t, err, ""can't start delivery"")

	// Check that delivery service requests blocks in order
	go osn1.SendBlock(uint64(100))
	assertBlockDissemination(100, gossipServiceAdapter.GossipBlockDisseminations, t)
	go osn1.SendBlock(uint64(101))
	assertBlockDissemination(101, gossipServiceAdapter.GossipBlockDisseminations, t)
	atomic.StoreUint64(&li.Height, uint64(102))

	// Now start the new instance
	osn2 := mocks.NewOrderer(5615, t)
	// Now stop the old instance
	osn1.Shutdown()
	// Send some a block from osn2
	osn2.SetNextExpectedSeek(uint64(102))
	go osn2.SendBlock(uint64(102))
	assertBlockDissemination(102, gossipServiceAdapter.GossipBlockDisseminations, t)
	service.Stop()
	osn2.Shutdown()
}
{code}

Could it be a docker related issue that stems from the fact that the second instance was started after the peer and docker's name resolution at the peer wasn't ""refreshed""?

As Artem said - logs would be good, but also can you perhaps get into the peer and try to ping the host of the second orderer (the one that started late)?
;;;","07/Feb/18 2:55 AM;yacovm;actually it seems we have a bug. Actually the UT above fails if I put a sleep just as [~rhegde] implied (to mimic the ""no blocks being sent"") . I'll post here a fix shortly. ;;;","07/Feb/18 4:03 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/17599/;;;","07/Feb/18 4:11 AM;Clayton Sims;[~bmos299] [~scottz] we should investigate and ensure we cover these in system test

 ;;;","12/Feb/18 4:16 AM;scottz;[~yacovm] I took a quick look at see that you added a test. But I am not an expert and it is not clear if you have indeed written a test for the identified scenario: let the network lay idle for 5 or more minutes without sending any transactions, then restart the orderer to which a peer is connected, then send another transaction and confirm that peer connects to another orderer automatically and receives the block. If you have done this exactly, then I do not feel we need to write a system test (as Clayton suggested). What do you think?;;;","12/Feb/18 5:35 AM;yacovm;The [test I added|https://gerrit.hyperledger.org/r/#/c/17599/3/core/deliverservice/deliveryclient_test.go] checks the following scenario (as written in the comments):
{quote}	// Scenario: Launch an ordering service node and let the client pull some blocks.
	// Then, wait a few seconds, and don't send any blocks.
	// Afterwards - start a new instance and shut down the old instance.{quote}

The ""wait a few seconds"" part is equivalent to the 5 minutes because I manually and artificially reduced the wait time from 5 minutes to a second.
From the code:
{code}
	SetReconnectTotalTimeThreshold(time.Second)
	defer func() {
		SetReconnectTotalTimeThreshold(time.Second * 60 * 5)
	}()
{code}

The exact scenario is the following:
{quote}	// Check that delivery service requests blocks in order from osn1
	// Now wait for a few seconds
	// Now start the new instance (osn2)
	// Now stop the old instance (osn1)
	// Send a block from osn2
	// Ensure it is received{quote}
To your question:
{quote}then restart the orderer to which a peer is connected, then send another transaction and confirm that peer connects to another orderer automatically {quote}
We can't ensure the peer connects to a different node in case the orderer is restarted, because it may select that same one with probability of 50%. That's why I shut down the active and bring up the inactive.

{quote} If you have done this exactly, then I do not feel we need to write a system test (as Clayton suggested). What do you think?{quote}

I guess that depends on your team's priorities. I would prioritize tests for code paths that are not tested in the unit tests over code paths that are. 
My suggestion is to first and foremost focus on security related scenarios that deal with channel reconfiguration and client (none)eligibility of data, since these are the code paths that are not tested in the code from an end-to-end perspective.

However, the ideal is to be able to test from an end-to-end perspective the scenario outlined in this item, as it is not a rare scenario (and I can't but think that we must have seen users complaining about this issue before this, but were too inattentive to their plights). 

An even more comprehensive testing type that is nice to have, is to have some sort of long-term running system (not a PTE test) that does thinks randomly (sends transactions randomly, crashes nodes randomly, etc.) and see how the system behaves, and does it recover. ;;;",,,,,,,,,,,,,,,,
[Upgrade] logs doesn't indicate from which config field is causing the panic while validating the config block on the v1.0 peer,FAB-8080,27452,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,suryalnvs,suryalnvs,07/Feb/18 12:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Feb/18 4:05 AM,,,,v1.1.0,,,fabric-docs,,,,0,serviceability,Serviceability,,,,"When upgrading the fabric components from v1.0 to v1.1, upgraded orderers and peers except one peer, then enabled v1.1 capabilites results the old peer crash. Here is the log of the crashed peer
{code:java}
[35m2018-02-05 22:19:17.730 UTC [txvalidator] Validate -> CRIT 674^[[0m Error validating config which passed initial validity checks: ConfigEnvelope LastUpdate did not produce the supplied config result
^[[36m2018-02-05 22:19:17.731 UTC [txvalidator] Validate -> DEBU 675^[[0m END Block Validation
^[[31m2018-02-05 22:19:17.731 UTC [gossip/state] commitBlock -> ERRO 676^[[0m Got error while committing(Error validating config which passed initial validity checks: ConfigEnvelope LastUpdate did not produce the supplied config result)
^[[35m2018-02-05 22:19:17.731 UTC [gossip/state] deliverPayloads -> CRIT 677^[[0m Cannot commit block to the ledger due to Error validating config which passed initial validity checks: ConfigEnvelope LastUpdate did not produce the supplied config result
panic: Cannot commit block to the ledger due to Error validating config which passed initial validity checks: ConfigEnvelope LastUpdate did not produce the supplied config result

goroutine 227 [running]:
panic(0xc64f00, 0xc421b53aa0)
        /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201fb2f0, 0xdcc9f3, 0x2b, 0xc421b539f0, 0x1, 0x1)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc421bceb40)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:449 +0x54d
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:228 +0x7d9

{code}
*The logs doesn't indicate from which config field is causing the panic while validating the block.* 

 

Expected Result: The logs should indicate which config field is causing the panic after enabling capabilities in v1.1",,bmos299,denyeart,jyellick,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw47:",,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,jyellick,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 2:30 AM;Clayton Sims;Yacov can you help assess. ;;;","08/Feb/18 2:54 AM;yacovm;Yes, my assessment is that this is related to the [configtx|https://github.com/hyperledger/fabric/blob/0631ccd2b1e30f56088dd3905a78bfb73a93ed51/common/configtx/manager.go#L238] framework.

[~jyellick] ^ ;;;","08/Feb/18 3:51 AM;jyellick;Correct.  This is related to the configtx framework.

When the capabilities framework is enabled, the way the new config is computed changes.  This means that the v1.0 peer is rejecting the update prior to getting to the point of the unrecognized key.  Since this is already code out in v1.0.x, I'm not sure that there is much to be done about it.

I would propose that this be treated as a doc defect.;;;","08/Feb/18 4:17 AM;yacovm;I agree with your analysis, Jason. ;;;","08/Feb/18 8:27 AM;scottz;We should still fix it in code, so the log is clearer when this happens in *future* upgrades. And I suggest Surya create another bug/improvement to ALSO add something to the doc for upgrading to v1.1.;;;","10/Feb/18 3:27 AM;Clayton Sims;I think [~jyellick] already has that in the newer code for going forward.   [~scottz]  or [~suryalnvs]  I assume you will open the doc or better yet submit the doc change yourself. ;;;","12/Feb/18 5:05 AM;scottz;Not quite, [~Clayton Sims].  Jason merely stated that since the v1.0 code is out in the field already, we cannot change it. The traceback and log we observed is in the v1.0 code. OK, I understand.  However, the point is that it says nothing about the peer not yet being upgraded, which is necessary before the peer can even handle the config update - and also says nothing about the particular config update ""v1_1"" which is causing the peer to intentionally crash. I realize we cannot change the error response or the traceback or the code logic in v1.0 software (unless we wanted to do that in another v1.0.8? release and force people to upgrade to that before proceeding towards v1.1 - which is NOT something I would recommend for merely this reason). Thus, we get to the alternative of capturing that panic log in the documentation and explain to the operators that the peer might not yet be upgraded and cannot handle the v1_1 capabilities update. [~suryalnvs] can create a bug for enhancing the doc for that.

Of course, [~jyellick] can confirm if my understanding is correct.

My suggestion was (in addition to the doc enhancement) to ensure this made sense IN THE v1.1 CODE and logs, so it would be accurate and helpful in FUTURE upgrades from v1.1 and up. Would it be clear, between the error logs and the panic traceback, that the panic occurs because we are trying to enable capability v1_2 while the peer binary is still on v1.1? It does not appear so, unless the v1.1 code adds that information to the CRIT log (because what we observed does NOT specify the config field that the user is attempting to change, which is causing the panic). That is the other point of my request. This should be made very obvious. 

 ;;;","12/Feb/18 2:05 PM;jyellick;{quote}
Not quite, Clayton Sims.  Jason merely stated that since the v1.0 code is out in the field already, we cannot change it. The traceback and log we observed is in the v1.0 code. OK, I understand.  However, the point is that it says nothing about the peer not yet being upgraded, which is necessary before the peer can even handle the config update - and also says nothing about the particular config update ""v1_1"" which is causing the peer to intentionally crash. I realize we cannot change the error response or the traceback or the code logic in v1.0 software (unless we wanted to do that in another v1.0.8? release and force people to upgrade to that before proceeding towards v1.1 - which is NOT something I would recommend for merely this reason). Thus, we get to the alternative of capturing that panic log in the documentation and explain to the operators that the peer might not yet be upgraded and cannot handle the v1_1 capabilities update. Naga Surya Lanka can create a bug for enhancing the doc for that.
Of course, Jason Yellick can confirm if my understanding is correct.
{quote}

Yes, in order to make this log message more descriptive, we would need to patch v1.0.x to be aware of, and to output a sensible log message for capabilities.

{quote}
My suggestion was (in addition to the doc enhancement) to ensure this made sense IN THE v1.1 CODE and logs, so it would be accurate and helpful in FUTURE upgrades from v1.1 and up. Would it be clear, between the error logs and the panic traceback, that the panic occurs because we are trying to enable capability v1_2 while the peer binary is still on v1.1? It does not appear so, unless the v1.1 code adds that information to the CRIT log (because what we observed does NOT specify the config field that the user is attempting to change, which is causing the panic). That is the other point of my request. This should be made very obvious. 
{quote}

This is already covered in the new code.  If you are curious, you may even test this today.  Simply define a new capability, say, {{V1_2}} or... {{Crazy_Peer_Crasher_7}} which the peer does not support.  Then, in the peer log, you will see a panic, but with an accompanying descriptive log message:

https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L130-L136
https://github.com/hyperledger/fabric/blob/master/common/capabilities/capabilities.go#L50

So, I would expect that the log should contain a panic like:

{noformat}
Panic: [channel foo] incompatible Application capability V1_2 is required but not supported
{noformat}
;;;","14/Feb/18 3:21 AM;Clayton Sims;This now goes to a doc defect.  ;;;","21/Feb/18 5:18 AM;denyeart;[~jyellick] Are you intending to document something for this one, and for FAB-8213?;;;","25/Feb/18 12:50 AM;jyellick;Yes, will make sure that this gets into the doc, but, we need the doc to exist first.;;;","25/Feb/18 4:05 AM;jyellick;Verified this is captured in the upgrade doc.;;;",,,,,,,,,,,
[CI] - Manual clone in CI jobs should checkout to GERRIT_BRANCH,FAB-8081,27453,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Feb/18 12:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 12:37 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"Below git clone command should checkout to $GERRIT_BRANCH instead of pulling code always from master branch.

git clone ssh://hyperledger-jobbuilder@gerrit.hyperledger.org:29418/$REPO_NAME $WD
cd $WD",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw4f:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 12:37 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18981/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE does not execute if nRequest is 0,FAB-8082,27454,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,07/Feb/18 12:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 11:22 PM,,,,,,,fabric-quality,,,,0,,,,,,PTE will not execute when nRequest is 0.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyw4n:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"09/Feb/18 12:04 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17695/;;;",,,,,,,,,,,,,,,,,,,,,,
old configuration files need to be updated,FAB-8083,27458,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,tongliofcary,tongliofcary,tongliofcary,07/Feb/18 1:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Feb/18 6:33 AM,,,,,,,fabric-quality,,,,0,PTE,,,,,PTE test uses cello to setup the env and has its own configuration file. Cello has been updated with new parameters and these new parameters should be added to the PTE configuration file.,CI,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw73:",,,,,,,,,,,,,,,,,,,,,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"07/Feb/18 1:14 AM;tongliofcary;https://gerrit.hyperledger.org/r/17587;;;",,,,,,,,,,,,,,,,,,,,,,
 Missing Chaincode examples to explain usage of shim API,FAB-8085,27460,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Nishi,Nishi,07/Feb/18 1:39 AM,23/Jan/20 7:25 AM,28/Oct/23 3:02 AM,23/Jan/20 7:25 AM,,,,Future,,,fabric-samples,,,,0,stale-item,,,,,"It would be nice if we can add newer chaincodes to demonstrate usage and purpose of following shimAPI for user/testers to consume these API.
{code:java}
GetBinding  
GetCreator
GetTxTimeStamp
GetSignedProposal
GetTransient
GetTxID
GetDecorations
SetEvent{code}",,denyeart,haibbo,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6979,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyw7z:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,haibbo,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:25 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
fabric wiki link broken,FAB-8086,27461,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,ChristopherFerris,ChristopherFerris,07/Feb/18 1:52 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 1:55 PM,v1.1.0-alpha,,,,,,fabric-docs,,,,0,,,,,,"the link to the fabric wiki is broken [https://wiki.hyperledger.org/projects/fabric.md|https://wiki.hyperledger.org/projects/fabric.md#history] should be https://wiki.hyperledger.org/projects/fabric",,ChristopherFerris,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw87:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Feb/18 3:03 AM;joe-alewine;Where is the .md link showing up?;;;",,,,,,,,,,,,,,,,,,,,,,
[Upgrade] v1.1 Peer logs doesn't show the failure attempts from chaincode container which still using v1.0 chaincode image,FAB-8088,27463,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,suryalnvs,suryalnvs,07/Feb/18 2:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Feb/18 6:20 AM,,,,v1.1.0,,,fabric-peer,,,,0,serviceability,,,,,"During upgrade of the peers, if chaincode container images on v1.0 are not deleted, when we send a query or invoke, peer tries to launch the chaincode container using the existing chaincode container image which does not have the mutual tls certificate, chaincode container shows
{code:java}
docker logs -f dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:44:26.739 UTC [shim] userChaincodeStreamGetter -> ERRO 001 Error trying to connect to local peer: remote error: tls: bad certificate
Error starting Simple chaincode: Error trying to connect to local peer: remote error: tls: bad certificate
{code}
But peer doesn't show any handshake failures (similar to handshake failures errors we see between peer and orderer when there is any tls issue) or attempts from chaincode container to communicate. A timeout happens in launching the chaincode container and removes chaincode container instance by which we may miss what is happening underlying unless and until we do a new query. At this stage, peer just shows chaincode container creation timeout.

Peer log shows as below
{code:java}
2018-02-06 15:44:26.244 UTC [container] lockContainer -> DEBU 37e waiting for container(dev-peer0.org1.example.com-mycc-1.0) lock
2018-02-06 15:44:26.244 UTC [container] lockContainer -> DEBU 37f got container (dev-peer0.org1.example.com-mycc-1.0) lock
2018-02-06 15:44:26.244 UTC [dockercontroller] Start -> DEBU 380 Cleanup container dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:44:26.245 UTC [dockercontroller] stopInternal -> DEBU 381 Stop container dev-peer0.org1.example.com-mycc-1.0(Container not running: dev-peer0.org1.example.com-mycc-1.0)
2018-02-06 15:44:26.245 UTC [dockercontroller] stopInternal -> DEBU 382 Kill container dev-peer0.org1.example.com-mycc-1.0 (API error (409): {""message"":""Cannot kill container: dev-peer0.org1.example.com-mycc-1.0: Container 1caa993e4b25ac57af0367eef042051be133ff0dc9ebac0a5b8f00b1e406cd93 is not running""}
)
2018-02-06 15:44:26.255 UTC [dockercontroller] stopInternal -> DEBU 383 Removed container dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:44:26.255 UTC [dockercontroller] Start -> DEBU 384 Start container dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:44:26.255 UTC [dockercontroller] getDockerHostConfig -> DEBU 385 docker container hostconfig NetworkMode: e2ecli_default
2018-02-06 15:44:26.256 UTC [dockercontroller] createContainer -> DEBU 386 Create container: dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:44:26.308 UTC [dockercontroller] createContainer -> DEBU 387 Created container: dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9
2018-02-06 15:44:26.713 UTC [dockercontroller] Start -> DEBU 388 Started container dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:44:26.713 UTC [container] unlockContainer -> DEBU 389 container lock deleted(dev-peer0.org1.example.com-mycc-1.0)
2018-02-06 15:49:26.243 UTC [chaincode] launchAndWaitForRegister -> DEBU 38b stopping due to error while launching: timeout expired while starting chaincode mycc:1.0(networkid:dev,peerid:peer0.org1.example.com,tx:77e0f51121dc9a63277381c376961f151fa2671993cba4c8d56aa06435ea41bb)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:567
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:729
github.com/hyperledger/fabric/core/chaincode.Execute
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/support.go:93
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:123
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:256
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:458
github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61
github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:31
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
    /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
    /opt/go/src/runtime/asm_amd64.s:2337
2018-02-06 15:49:26.243 UTC [container] lockContainer -> DEBU 38c waiting for container(dev-peer0.org1.example.com-mycc-1.0) lock
2018-02-06 15:49:26.243 UTC [container] lockContainer -> DEBU 38d got container (dev-peer0.org1.example.com-mycc-1.0) lock
2018-02-06 15:49:26.245 UTC [dockercontroller] stopInternal -> DEBU 38e Stop container dev-peer0.org1.example.com-mycc-1.0(Container not running: dev-peer0.org1.example.com-mycc-1.0)
2018-02-06 15:49:26.245 UTC [dockercontroller] stopInternal -> DEBU 38f Kill container dev-peer0.org1.example.com-mycc-1.0 (API error (409): {""message"":""Cannot kill container: dev-peer0.org1.example.com-mycc-1.0: Container c47f62a1f3f0c0bea1039cd8cfd5743f61a7fd2e5ede1ebbf6d9d181bf193fdb is not running""}
)
2018-02-06 15:49:26.254 UTC [dockercontroller] stopInternal -> DEBU 390 Removed container dev-peer0.org1.example.com-mycc-1.0
2018-02-06 15:49:26.254 UTC [container] unlockContainer -> DEBU 391 container lock deleted(dev-peer0.org1.example.com-mycc-1.0)
2018-02-06 15:49:26.254 UTC [chaincode] func1 -> DEBU 392 chaincode mycc:1.0 launch seq completed
2018-02-06 15:49:26.254 UTC [chaincode] Launch -> ERRO 393 launchAndWaitForRegister failed: timeout expired while starting chaincode mycc:1.0(networkid:dev,peerid:peer0.org1.example.com,tx:77e0f51121dc9a63277381c376961f151fa2671993cba4c8d56aa06435ea41bb)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:567
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:729
github.com/hyperledger/fabric/core/chaincode.Execute
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
    /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/support.go:93
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:123
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:256
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:458
github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61
github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal
    /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:31
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
    /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
    /opt/go/src/runtime/asm_amd64.s:2337

{code}
*Expected Result:* Need some sort of message showing the attempts from chaincode container.

 

 

 ",,sanchezl,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8091,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw8n:",,,,,,,,,,,,,,,,,,,,,sanchezl,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Feb/18 6:20 AM;sanchezl;Closing as a duplicate of FAB-8091.;;;",,,,,,,,,,,,,,,,,,,,,,
PTE test scenarios,FAB-8089,27464,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,07/Feb/18 3:41 AM,01/Aug/19 10:11 AM,28/Oct/23 3:02 AM,01/Aug/19 10:11 AM,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,Epic for PTE test scenarios,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-2,,Test - PTE scenarios,To Do,,,Unset,,,,"1|hzyw8v:",,,,Unset,Unset,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add details to OTE test names ,FAB-8090,27465,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nnao,scottz,scottz,07/Feb/18 4:03 AM,04/Sep/18 10:14 PM,28/Oct/23 3:02 AM,04/Sep/18 10:14 PM,v1.1.0,,,,,,fabric-quality,,,,0,Usability,,,,,"The ote tests are named with format FAB-wxyz. To make it easier for a user to know what each one does, and to more easily verify the output data, it would be helpful to lengthen the names. For an example of the places to be modified in order to do that, refer to FAB-7936 update [https://gerrit.hyperledger.org/r/#/c/17365.] For example we gave detailed names to two of them, *FAB-7936_100tx_3ch_3ord_3kb* and *FAB-6996_1ch_solo*. Refer to the help text returned by the runote.sh tool, which is one easy way to run the ote tests, which identifies the available tests which can be renamed.

 

fabric-test/tools/OTE$ ./runote.sh -??
./runote.sh: illegal option – ?
Invalid option: -
Usage: 
./runote.sh [opt] [value] 
-t <testcase (default=FAB-6996_1ch_solo)>

Examples: 
./runote.sh # run the default testcase FAB-6996_1ch_solo
./runote.sh -t FAB-6996_1ch_solo # basic test with 1 channel, 1 solo orderer
./runote.sh -t FAB-7936_100tx_3ch_3ord_3kb # short test covering OTE functionalities

The supported testcases are:
 FAB-6996_1ch_solo
 FAB-7070
 FAB-7024
 FAB-7071
 FAB-7026
 FAB-7072
 FAB-7027
 FAB-7073
 FAB-7036
 FAB-7074
 FAB-7037
 FAB-7075
 FAB-7038
 FAB-7936_100tx_3ch_3ord_3kb
 FAB-7076
 FAB-7039
 FAB-7077
 FAB-7058
 FAB-7078
 FAB-7059
 FAB-7079
 FAB-7060
 FAB-7080
 FAB-7061
 FAB-7081

 ",,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyw93:",,,,Unset,,,,,,Unset,,,,,,,,,,,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,true,"31/Aug/18 5:52 AM;nnao;https://gerrit.hyperledger.org/r/c/26009/;;;",,,,,,,,,,,,,,,,,,,,,,
During execution of FAB- 7913:  logs should indicate failure is due to difference in shim versions,FAB-8091,27466,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,Nishi,Nishi,07/Feb/18 7:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 1:39 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"When testing with a chaincode that has vendored  1.0.x shim using:

[https://github.com/ghaskins/hyperledger-fabric-alpha2-challenge/tree/master/jyellick/plob/]

*Steps to Reproduce:*

From ""github.com/hyperledger/fabric-test/feature-upgrade/features/upgrade-abort.feature"" file use the above chaincode and implement the below scenario
{code:java}
https://jira.hyperledger.org/browse/FAB-7913

1. Start a v1.0.x peer
2. Deploy a chaincode which vendors a v1.0.x chaincode shim.
3. Shut down the peer
4. Delete the chaincode image
5. Upgrade the peer to v1.1.0
6. Start up the peer
7. Attempt to query the chaincode{code}
 

 

*Actual Result:* Use case fails as expected @step7  when we look at:

*1. chaincode logs:*
{code:java}
 2018-02-06 21:44:57.257 UTC [shim] userChaincodeStreamGetter -> ERRO 001 Error trying to connect to local peer: remote error: tls: bad certificate
Error starting PermissionedBlobRegistry chaincode: Error trying to connect to local peer: remote error: tls: bad certificatenishi@nishi-VirtualBox:~/gopath/src/github.com/hyperledger/fabric-release/examples/chaincode/go/hyperledger-fabric-alpha2-challenge/jyellick/plob/chaincode${code}
 

2. *peer logs*

After 5 minutes of failure following was reported in peer logs:
{code:java}

2018-02-06 21:49:42.275 UTC [endorser] callChaincode -> DEBU 474 [com.acme.blockchain.jdoe.channel1][e5437651] Exit
2018-02-06 21:49:42.275 UTC [endorser] simulateProposal -> ERRO 475 [com.acme.blockchain.jdoe.channel1][e5437651] failed to invoke chaincode path:""github.com/hyperledger/fabric-release/examples/chaincode/go/hyperledger-fabric-alpha2-challenge/jyellick/plob/chaincode"" name:""example02_vendor"" version:""1.0"" , error: timeout expired while starting chaincode example02_vendor:1.0(networkid:ee28cd0a0b8511e8837b0800277dd479,peerid:vp0,tx:e54376518a555732a11141d1b89033c67afc32296251cb0e477fe6f753047d6b)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:567
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:729
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/support.go:93
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:123
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:256
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:458
github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61
github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:31
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
error executing chaincode
{code}
*Expected Result:*

 

When step 7 above fails error messages reported in peer log are not indicating about the chaincode query failure as being related to difference in shim version after upgrade of fabric from step 5 . 

Can the user be notified that error is occurring because of difference in shim version?",,jyellick,Nishi,sanchezl,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8088,,,,,FAB-7913,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/18 7:32 AM;Nishi;peer0_chaincodeshimvendoring_logs;https://jira.hyperledger.org/secure/attachment/14550/peer0_chaincodeshimvendoring_logs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyw9b:",,,,,,,,,,,,,,,,,,,,,jyellick,Nishi,sanchezl,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Feb/18 3:54 AM;jyellick;From a chaincode perspective, this error message is originating from the chaincode shim.  So, in order to fix the error message to discuss the underlying problem (an outdated shim) would require an update to the shim (thus solving the problem).

From a peer perspective, I also don't think the error message can be made more specific.  Essentially, the peer expects for the chaincode container to connect, but it is detecting that the container has not.  From the peer's perspective this could be because there is a bug in the chaincode which made it crash, or there could be a networking error between the chaincode and peer, a shim version mismatch, or probably some other scenarios which I am forgetting, so, I don't think that it's possible to make this error message more specific, as it would lead the user to a false cause when the shim connection problem has a different source.

I would propose that we change this to a doc defect and be sure to put these exact log strings in the upgrade docs so that users may easily search for them.;;;","08/Feb/18 11:19 PM;scottz;The chaincode container says it is a bad TLS certificate. And that is NOT the problem. The message is misleading. So let's fix the chaincode example02 (or whatever examples we are testing). And yes we should document the possible cause (mismatch shim version) for that error message in the cc container.;;;","11/Feb/18 6:03 AM;sanchezl;There is no detection that can happen at the peer level against a running chaincode container that cannot even connects to the peer.
{quote}The chaincode container says it is a bad TLS certificate. And that is NOT the problem.
{quote}
That is exactly the problem, and the reason why they shim needs to be updated.

I can add some more text to the [Securing Communication With Transport Layer Security (TLS)|http://hyperledger-fabric.readthedocs.io/en/latest/enable_tls.html] document topic, which already mentions the {{remote error: tls: bad certificate}} message in its debugging section.

 ;;;","13/Feb/18 11:58 PM;Clayton Sims;So what is the next step here?  Make this a doc defect and have Luis update doc? [~sanchezl];;;","14/Feb/18 3:25 AM;sanchezl;There is a doc change set under review at https://gerrit.hyperledger.org/r/c/17763/.;;;",,,,,,,,,,,,,,,,,,
Typo in chaincode shim interfaces documentation,FAB-8093,27468,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,07/Feb/18 10:08 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,07/Feb/18 4:58 PM,,,,,,,fabric-peer,,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyw9j:",,,,Unset,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Feb/18 10:11 AM;wlahti;https://gerrit.hyperledger.org/r/c/17613/;;;",,,,,,,,,,,,,,,,,,,,,,
orderer node should not be identifiable by their organisational units,FAB-8094,27470,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,angelo.decaro,angelo.decaro,angelo.decaro,07/Feb/18 10:38 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,07/Feb/18 9:56 PM,,,,v1.1.0,,,fabric-crypto,,,,0,Release-planning-1.1,review-needed,Security,,,"Currently the MSP allows to identifier the orderer nodes by their organisational units. This functionality does not match the way fabric currently works. Indeed, orderer nodes are named explicitly, given that their identities needs to be known to the entire network. ",,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyw9z:",,,,Unset,,,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
event protos inconsitent,FAB-8095,27471,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,07/Feb/18 5:53 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Feb/18 9:27 PM,,,,,,,fabric-peer,,,,0,,,,,,The events .pb.go files are inconsistent with the .proto,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywa7:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Fix README links in the release branch,FAB-8096,27472,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Feb/18 8:05 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Feb/18 12:43 AM,,,,v1.0.6,,,fabric-docs,,,,0,,,,,,"Links to the docs should point to ""release"" version
Link to Fabric project page is broken",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywaf:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Don't trigger non documentation builds (unit & e2e jobs) for documentation change,FAB-8097,27488,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jwagantall,rameshthoomu,rameshthoomu,07/Feb/18 10:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 8:49 AM,,,,,,,fabric-ci,,,,0,,,,,,"In the current approach, CI jobs trigger unit & e2e jobs for a documentation patch set with .rst or .md changes. This approach is unnecessary and not required at all..

This should be restricted from CI configuration. The proposed approach is

When a patch set has .rst or .md changes, trigger fabric-rtd-verify-master CI job and don't trigger any other jobs. After the recent patches, now the fabric-rtd-verify-master triggers after .rst or .md changes in patch set but restriction is not happening. In result it's triggering all the jobs instead of only fabric-rtd-verify-master job.",,jwagantall,luomin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywdb:",,,,,,,,,,,,,,,,,,,,,jwagantall,luomin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 8:28 AM;jwagantall;Dear Ramesh, 

I think this change needs to be done in the fabric-verify-end-2-end-<arch> and fabric-verify-<arch> right? Not in the docs job.

 These two jobs (unit and e2e) need to have a ""Forbidden File: **/*.md, **/*.rst, **/*.txt and **/conf.py"" path right?

 

Thanks!

Jess;;;","14/Mar/18 7:05 AM;rameshthoomu;yes... We can use forbidden file path to restrict builds on doc changes. But what happens if I have a patch set with both *.md* and *code* change (like .go file).. Will this stop triggering the above two jobs?;;;","14/Mar/18 7:10 AM;jwagantall;It should still trigger the fabric-verify ones since at least one of the paths is getting activated. 

I can make to test this scenario

 

Thanks!

Jess;;;","15/Mar/18 1:50 AM;jwagantall;Continue with my tests as of today.. 

 

Will update once I have a successful case.. ;;;","15/Mar/18 3:04 AM;jwagantall;Done with my testing after discovering that Jenkins's forbidden path feature has a small bug. 

 

So normally the way to go was to add a forbidden file path for the triggers and select the ""Disable Strict Forbidden File Verification"" feature which should allow the verification getting tirggered for a change that combines code and documentation. But this was not working as stated, and then I came across this: [https://stackoverflow.com/questions/29028195/exact-use-of-forbidden-file-path-of-the-jenkins-gerrit-trigger-plugin]

 

So in this case, it seems that we need to go another route described in that article which is what i have implemented in my tests. 

Currently, my test works as expected.

The fabric-verify-end-2-end-<arch> and fabric-verify-<arch> gets triggered if:
 * the change contains any code changes
 * the change contains any code + documentation changes

It wont trigger if:
 * the change contains any doc changes in the *.*md, .rst, .txt and **/conf.py files

 

Working on translating this into JJB ;;;",,,,,,,,,,,,,,,,,,
Allowing Interchannel Communication,FAB-8098,27490,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,MuhammadSalah,MuhammadSalah,07/Feb/18 10:58 PM,26/Aug/19 6:11 PM,28/Oct/23 3:02 AM,26/Aug/19 6:11 PM,,,,,,,,,,,0,,,,,,"Kindly, review the google document; and feel free to pitch in with ideas.
Suggest better mechanisms, and solutions.

 

https://docs.google.com/document/d/1J59WRPDT_DxcyKEA-_QUnFs7SGwVipz7x5cJ5y2nGS4/edit?usp=sharing",,MuhammadSalah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1792,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywdr:",,,,Unset,,,,,,Unset,,,,,,,,,,,MuhammadSalah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 6:44 AM;MuhammadSalah;Now we have hyperledger Quilt!
This is not the place :);;;",,,,,,,,,,,,,,,,,,,,,,
add PTE smoke test to runSmokeTest.sh script,FAB-8099,27491,26225,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,07/Feb/18 11:04 PM,05/Sep/18 6:05 AM,28/Oct/23 3:02 AM,05/Sep/18 6:05 AM,,,,v1.3.0,,,fabric-quality,,,,0,,,,,,"Edit the fabric-test/regression/smoke/systest_pte.py, to execute fabric-test/tools/PTE/CITest/scenarios/FAB-7929-8i.sh (and remove any other tests defined in this file). For reference, model the test and comments after the passing pte tests in the daily folder daily/systest_pte.py.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7929,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywdz:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"31/Aug/18 5:07 AM;scottz;https://gerrit.hyperledger.org/r/#/c/26006/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE adds a latency transMode example,FAB-8102,27495,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,08/Feb/18 12:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Mar/18 9:58 PM,,,,,,,fabric-quality,,,,0,,,,,,PTE needs to add a latency transMode example: sampleccInputs/samplecc-latency-i.json to illustrate the usage of latency mode.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzywen:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,"13/Mar/18 2:32 AM;dongming;https://gerrit.hyperledger.org/r/#/c/19091/;;;",,,,,,,,,,,,,,,,,,,,,,
Peer Incorrectly sets has_more to true if result set is exactly a multiple of 100,FAB-8103,27497,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,sanchezl,davidkel,davidkel,08/Feb/18 2:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 11:20 AM,v1.1.0-alpha,v1.1.0-preview,,v1.1.0,,,fabric-peer,,,,0,peer,,,,,"A request is made using the handleGetStateByRange, the result set from this request is exactly 100 elements, and the peer returns those 100 elements but it also sets the has_more flag to true. The result is sent back to the chaincode which sees that the has_more flag is set to true and then makes another call via handleQueryStateNext, however there aren't any more elements and the peers returns a completely empty response, not even a response with zero elements which at least might be a more reasonable thing to expect.
This can be recreated using any multiple of 100.
The peer should not set the has_more flag for a range result set when there isn't more data to return. 

See https://jira.hyperledger.org/browse/FAB-8115 as it directly affects the node.js shim",,AshishkumarLakshmanan,davidkel,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywev:",,,,,,,,,,,,,,,,,,,,,AshishkumarLakshmanan,davidkel,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Feb/18 3:47 PM;sanchezl;Because the underlying ledger implementation streams the results, it is not possible to 'peek' ahead and see if there are more results. When the final number of results is not a multiple of 100 (100 is the max number of results returned in a QueryResponse), the HasNext flag will need to continue returning {{true}} because we cannot tell if we are done without `peeking` ahead.

As a solution, I am changing the implementation to return an empty array of results instead of nil for that final result.;;;","08/Feb/18 9:00 PM;denyeart;[~sanchezl] Instead of changing the contract, can you simply iterate to the 101st item and check if it is there and set HasMore accordingly?  But not append it to the result set (append it at the beginning of the next page instead).;;;","08/Feb/18 11:27 PM;denyeart;I'd suggest fix HasMore function in FAB-8103.  And fix the nil response in FAB-8115.  I believe this is what the reporter intended.;;;","13/Feb/18 8:29 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17665/;;;",,,,,,,,,,,,,,,,,,,
Fabric-test PTE: update document with clarifying comments ,FAB-8104,27498,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,08/Feb/18 2:40 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,12/Feb/18 6:36 AM,,,,,,,fabric-quality,,,,0,,,,,,"PTE document:
 1) Recommend clarifying the fact that in section ""running PTE"" it should run from the installed location under {{fabric-test/fabric-sdk-node/test/PTE}} instead of {{fabric-test/tools/PTE}} 
 2) from the readme, replace all hardcoded gopaths with generic paths e.g. remove {{root/gopath}} with {{$GOPATH}}
 3)  in the section ""creating a local Fabric network"", the first bullet point is actually a prerequisite, and the next two steps are either-or. This section should be formatted accordingly to avoid confusion.
 4) Add sub-section for ""if you are using mac"" in the pre-requisite section with the following info:

Only for Mac, you need to install a gnu-compatible version of the  awk, date utility:
 * Install Brew: [http://brew.sh|http://brew.sh/]
 * run {{brew install gawk —-with-default-names; brew install gdate —-with-default-names}} in order to swap out Mac's default tar command for a gnu-compliant one. 

This will be deferred for a future CR:
PTE code:
 1) replace all instance of hardcoded path with generic paths eg replace {{/home/ibmadmin/gopath/}} with {{$GOPATH}}",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzywf3:",,,,Unset,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"09/Feb/18 4:36 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17651/;;;",,,,,,,,,,,,,,,,,,,,,,
Behave framework: add capability for autogeneration of couchdb partial index files,FAB-8105,27499,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,latitiah,latitiah,08/Feb/18 3:09 AM,23/Jan/20 7:26 AM,28/Oct/23 3:02 AM,23/Jan/20 7:26 AM,,,,,,,,,,,0,stale-item,,,,,"http://docs.couchdb.org/en/2.1.1/api/database/find.html#db-index for more details and info.
",,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8016,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywfb:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/18 1:28 AM;latitiah;This was suggested, but there has been no use case for adding it at this point.;;;","23/Jan/20 7:26 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Move apiconfig to config,FAB-8106,27501,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,08/Feb/18 3:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Mar/18 5:56 AM,,,,,,,,,,,0,,,,,," * -remove Config suffix on structs-
 * -rename ConfigProvider to Provider-
 * -rename Config to ??--

since config package content has been moved to core package, any reference to the config types/Interface must have Config suffix. The above statements are no more valid. Config interface must remain unnamed.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywfr:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move apicore/fabric.go to pkg/fabsdk/api/fabric.go,FAB-8107,27502,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,aleksandar.likic,aleksandar.likic,08/Feb/18 3:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 9:14 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywfz:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Move apicryptosuite to pkg/fabsdk/api/core/cryptosuite,FAB-8108,27503,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,08/Feb/18 3:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 11:38 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywg7:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move apifabca to pkg/context/api/fab,FAB-8109,27504,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,08/Feb/18 3:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 11:39 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywgf:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move apifabclient to pkg/fabsdk/api/fab,FAB-8110,27505,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,08/Feb/18 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 11:38 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywgn:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move apilogging to log,FAB-8111,27506,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,08/Feb/18 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 11:39 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywgv:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename apitxn to client,FAB-8112,27507,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,08/Feb/18 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 2:06 AM,,,,,,,,,,,0,,,,,,"* Flatten the file structure (all under api/client)
 ** Leave txnhandler.go in a separate subpackage called invoke 
 ** Combine options that are similar
 * Remove suffixes that create stutters",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywh3:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Troubleshooting doc for ""MSP is unknown"" error message",FAB-8113,27508,27208,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,wlahti,wlahti,wlahti,08/Feb/18 4:22 AM,14/Mar/19 11:37 PM,28/Oct/23 3:02 AM,14/Mar/19 11:37 PM,,,,,,,fabric-docs,,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywhb:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 5:17 AM;wlahti;https://gerrit.hyperledger.org/r/c/17639/;;;","08/Feb/18 10:04 PM;wlahti;Apparently, our troubleshooting ""docs"" are typically done in Stack Overflow at the moment. I'll add the text from the gerrit CR above once the parent JIRA has been merged and closed. ;;;",,,,,,,,,,,,,,,,,,,,,
improve readme to list releases,FAB-8114,27509,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,08/Feb/18 4:48 AM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,30/Mar/18 8:11 AM,v1.0.5,v1.1.0-alpha,,,,,fabric-docs,,,,0,,,,,,add releases and link to release roadmap to README,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywhj:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Mar/18 8:11 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/17635/;;;",,,,,,,,,,,,,,,,,,,,,,
Ensure that revoked client is ejected from Deliver,FAB-8117,27512,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,08/Feb/18 5:00 AM,23/Jan/20 7:26 AM,28/Oct/23 3:02 AM,23/Jan/20 7:26 AM,,,,,,,,,,,0,stale-item,,,,,"A client sends one request to deliver blocks from a channel indefinitely.  This request is authorized before any blocks are delivered.  However, it is possible that that client's access will be revoked, in which case, the Deliver service should re-evaluate that client's ability to receive blocks, and return a 'FORBIDDEN' error, breaking the stream.

To test:
 # Connect a client to the peer's Deliver service, requesting blocks Newest->Max_Uint64
 # Send a transaction, verify that the client gets a new block.
 # Send a config update which removes that client's org, or adds that client's certificate to the CRL.
 # Send a transaction, verify that the client does not get a new block containing this transaction, and instead gets a FORBIDDEN result.",,AloYangYuu,jyellick,Ratnakar,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywi7:",,,,,,,,,,,,,,,,,,,,,AloYangYuu,jyellick,Ratnakar,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 7:44 AM;Ratnakar;[~jyellick] Thanks for providing the use case.

Here is my observation:

Tested using a channel deliver service client, details [here|https://github.com/hyperledger/fabric/tree/master/examples/events/eventsclient]

*Testcase*: 
_Network Topology_: 3 orgs (org1 , org2, org3) and each org has 2 peers in it.

Step 1 : Create a channel with all 3 org peers joined the channel using e2e_cli scripts
Step 2: Channel deliver service client is connected to one of the peer (*peer0.org3.example.com*) of org3
Step 3 : Remove one of the org (*org3*) from the channel by config update. 
Step 4:  Send few transactions on *org1* and *org2* and observe the client is still connected to the peer and listening for the blocks, however no new blocks are retrieved.
Step 5: Disconnect the client on peer0 of org3 and connect it again. No error is observed,  however client could still retrieve old blocks but not the new blocks any more.

NOTE: 

peer0 of org3 indicates that it receives a FORBIDDEN as a response from the orderer.
{code}
2018-02-09 19:15:25.804 UTC [deliveryClient] StartDeliverForChannel -> DEBU 1619 This peer will pass blocks from orderer service to other peers for channel mychannel
2018-02-09 19:15:25.808 UTC [deliveryClient] connect -> DEBU 161a Connected to orderer.example.com:7050
2018-02-09 19:15:25.808 UTC [deliveryClient] connect -> DEBU 161b Establishing gRPC stream with orderer.example.com:7050 ...
2018-02-09 19:15:25.809 UTC [deliveryClient] afterConnect -> DEBU 161c Entering
2018-02-09 19:15:25.809 UTC [deliveryClient] RequestBlocks -> DEBU 161d Starting deliver with block [8] for channel mychannel
2018-02-09 19:15:25.809 UTC [deliveryClient] afterConnect -> DEBU 161e Exiting
2018-02-09 19:15:25.811 UTC [blocksProvider] DeliverBlocks -> ERRO 161f [mychannel] Got error &{FORBIDDEN}
2018-02-09 19:15:25.911 UTC [deliveryClient] Disconnect -> DEBU 1620 Entering
2018-02-09 19:15:25.911 UTC [ConnProducer] DisableEndpoint -> WARN 1621 Only 1 endpoint remained, will not black-list it
{code}
 



;;;","10/Feb/18 7:51 AM;jyellick;Can you confirm that when a client of org3 is connected to the deliver service on a peer of org2 or org1, that this deliver stream is broken?;;;","10/Feb/18 8:38 AM;Ratnakar;There is no provision for me to connect to deliver service on a peer of org2 or org1, using org3 certs. 

There is a cert validation happens and it throws the following error when client tries to connect other orgs peer

for example client of org1 tries to connect to org2, it throws the following error
{code:java}
2018-02-09 18:35:19.885 EST [eventsclient] main -> INFO 001 Error connecting: failed to create new connection: x509: certificate is valid for peer1.org1.example.com, peer1, not peer0.org2.example.com
{code};;;","12/Feb/18 2:34 PM;jyellick;Ah, unfortunately, then the hack of simply removing the org may not be sufficient here.  I think you will need to revoke only the client certificate, so that the peer may continue to receive updated blocks, including the updated CRL.;;;","23/Jan/20 7:26 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,
[balance-transfer]Clear the containers and artifacts before starting the network in manual mode.,FAB-8122,27517,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,susmita,susmita,susmita,08/Feb/18 5:34 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,27/Feb/18 11:05 AM,,,,,,,fabric-docs,,,,0,,,,,,,,susmita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywjb:",,,,Unset,,,,,,Unset,,,,,,,,,,,susmita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
document chaincode deployment configuration options,FAB-8125,27520,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,yacovm,yacovm,08/Feb/18 6:38 AM,13/Jan/21 3:52 AM,28/Oct/23 3:02 AM,,,,,,,,fabric-docs,,,,0,,,,,,"We need to document guidelines how chaincode deployment configuration affects environments where people run their peers.

For example:


- CORE_PEER_CHAINCODEADDRESS=peer1.org1.example.com:7052
- CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052

These 2 should be explained in the docs - what do they do, and when to configure them, and why, etc.

",,pandrejko,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtkf:",,,,Unset,,,,,,Unset,,,,,,,,,,,pandrejko,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 6:39 AM;yacovm;[~joe-alewine] ;;;","15/Jan/20 6:03 AM;pandrejko;[~negupta][~joe-alewine]
Would it be appropriate to add this information in the new cc deployment tutorial?
;;;","13/Jan/21 3:52 AM;pandrejko;[~yacovm]
We added these in the peer deployment guide:
- CORE_PEER_CHAINCODEADDRESS: https://hyperledger-fabric.readthedocs.io/en/latest/deploypeer/peerchecklist.html#peer-chaincodeaddress
- CORE_PEER_CHAINCODELISTENADDRESS: https://hyperledger-fabric.readthedocs.io/en/latest/deploypeer/peerchecklist.html#peer-chaincodelistenaddress

Is there more detail you would like added here or can this be closed now?
;;;",,,,,,,,,,,,,,,,,,,,
Automatically kick off CI after each merge,FAB-8126,27521,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,aambati,aambati,08/Feb/18 8:38 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 4:33 AM,,,,v1.1.0,,,fabric-ci,,,,0,,,,,,Recently we are seeing a lot of cases where two change sets that have functional conflicts are let in that results in bad code (does not build or test cases fail) in the master branch. It would be nice if a CI build is kicked off after each merge and letting the owner of the change set and committers know if the build fails.,,aambati,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywjj:",,,,,,,,,,,,,,,,,,,,,aambati,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/18 12:08 AM;rameshthoomu;[~aambati] as mentioned in RC, fabric-ca has both verify and merge jobs [https://jenkins.hyperledger.org/view/fabric-ca/]

Merge jobs triggers only after a patch is merged in fabric-ca repository. All I have to do is send an email to maintainers if a build is failed. Could you please provide below details..
 * Could you please provide me the list of maintainer email ID's or just say to whom I have to send the failed build notification email
 * Do you want me to send an email, if the build fails on s390x as well?;;;",,,,,,,,,,,,,,,,,,,,,,
testing endorsement policy in v1.0.4 - patch for balance-transfer and policy test document,FAB-8130,27525,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,nharshita,nharshita,08/Feb/18 7:51 PM,18/Aug/19 8:45 PM,28/Oct/23 3:02 AM,18/Aug/19 8:45 PM,,,,,,,fabric-samples,,,,0,,,,,,"We would like to submit a patch for balance-transfer to test endorsement policy.

*Patch details:* Attached [^endorse_test_code_changes_v1.0.4.txt] is created for fabric-samples/balance-transfer *release* version with git commit level  b99e1b8da2bc4d17f689c152078d96e8f6428a27 to test/understand endorsements policy working on fabric v1.0.4 version.

Patch incorporates code that passes/sends endorsement request to endorsement peers from *all* organizations (which needs to endorse the transaction). Without the patch endorsement request is sent to only 1 organization peer(s) based on the organization pertaining to the JWT token passed.

Details on applying patch and testing are documented in the attached pdf [^Endorsement_policy_verification_testcases_v1.0.4.pdf]

*Need for patch:* From balance-transfer code exploration, it is found that existing helper.js code (for loop, where clients, channels are initialized) maintains separate client objects for each organization, in which channel object is present and to the channel object organization peers are added. Due to which target peers are populated only for that organization.

Events from second organization peers are not considered here, to avoid MSP related error.

p.s: The patch is a tweak for balance-transfer code (b99e1b8da2bc4d17f689c152078d96e8f6428a27) to test endorsements. But, similar changes can be applied to test endorsement policy for fabric v1.0.0 to v1.0.4.",,mastersingh24,nharshita,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 7:48 PM;nharshita;Endorsement_policy_verification_testcases_v1.0.4.pdf;https://jira.hyperledger.org/secure/attachment/14554/Endorsement_policy_verification_testcases_v1.0.4.pdf","08/Feb/18 7:48 PM;nharshita;endorse_test_code_changes_v1.0.4.txt;https://jira.hyperledger.org/secure/attachment/14555/endorse_test_code_changes_v1.0.4.txt",,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywk7:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,nharshita,SashaPESIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/19 11:33 PM;SashaPESIC;Is there going to be a workaround for this? It still does not work in version 1.4. You cannot invoke chaincode properly when there is an instantiation policy involving multiple organizations. ;;;","18/Aug/19 8:45 PM;mastersingh24;If someone would like to submit a patch for this, that's fine.  But we've removed this sample going forward and replaced with samples that use things like the discovery service and the improved programming interface.   I'm going to close this as won't do for now, but if someone wants to take this and add it to the release-1.4 samples feel free to reopen.;;;",,,,,,,,,,,,,,,,,,,,,
Make TLS binding verification mechanisms support reverse proxies,FAB-8131,27526,,Story,Backlog,FAB,Fabric,software,denyeart,,,Medium,,,yacovm,yacovm,08/Feb/18 8:09 PM,15/Apr/21 7:27 AM,28/Oct/23 3:02 AM,,v1.2.0,,,Future,,,fabric-crypto,,,,0,,,,,,"When mutual TLS is used, the client includes in the channel header the hash of its TLS certificate, and the server (orderer or peer) checks whether the hash of the TLS certificate the client sent, matches the hash it claimed in the channel header.

This is to create a binding between the enrollment certificate the request was signed with and the TLS certificate that the connection uses.

However, in may cases - servers such as orderers and peers are behind an application layer reverse proxy, and in these cases - the TLS certificate that the server sees is the TLS certificate of the proxy and not of the client.

Some proxies support including the TLS certificate of the client as an HTTP header, and to support the deployment scenario described above, we could make the server (peer or orderer) first check the TLS certificate hash from the connection, and if it doesn't match the TLS binding in the channel header, it will attempt to check a specific HTTP header (if defined in the configuration) and will compare that TLS certificate hash to the one in the channel header instead.

* A similar problem exists between p2p communication between peers.",,C0rWin,denyeart,hakan.eryargi,jyellick,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywkf:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,hakan.eryargi,jyellick,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/18 4:22 AM;jyellick;This seems like a good idea to me.  Being able to hide orderer topology behind a reverse proxy would allow a user to do proper load balancing and decrease the on chain configuration burden.

It does seem like we run into a problem if it's possible for the client to bypass the reverse proxy and connect directly to the orderer.  Then, the client could pretend to be the proxy and effectively impersonate any client of its choosing by appropriately setting this header.

Maybe as an accompanying option to the header field, we could include an override for the TLS CA as well.  If the orderer is only to be connected to via the reverse proxy, then it should only expect/accept TLS certs from the reverse proxy (and not from the orgs as defined in the channel config).  With this additional protection, the user could not accidentally expose the backing orderers without use of the proxy.;;;","09/Feb/18 4:53 AM;yacovm;{quote}Maybe as an accompanying option to the header field, we could include an override for the TLS CA as well{quote}

Sounds like a good idea, Jason.
We could either do that, or we could just add an option in the TLS [binding verification method|https://github.com/hyperledger/fabric/blob/master/core/comm/util.go#L96-L108] that constricts the TLS certificate of the connection, to have a specific hash (TLS certificate pinning), meaning - we would first check the TLS hash of the connection matches the pinned hash from the configuration, and then return the value from the http header set by the proxy.

I guess the TLS CA override is more elastic because it gives the ability to add and remove proxies with different TLS certificates and keys without having to restart orderer nodes for configuration updates.
The downside is that this option is less restrictive than the TLS pinning, and thus a misconfiguration or a leak of any certificate issued by the CA would compromise the confidentiality of the data.
For instance - if the same CA issues certificates for other nodes in the company, and that is not even related to fabric and is compromised.

[~mastersingh24] what do you think?
;;;","15/Feb/18 9:16 PM;yacovm;OK, in the spirit of ""silence is acquiescence"" I pushed https://gerrit.hyperledger.org/r/#/c/17883/ and am now moving on to do a similar thing in gossip.;;;","07/May/18 11:44 AM;denyeart;I noticed this CR is abandoned.  [~yacovm] could you update Fix Version and status accordingly (either to Invalid if it will not be done or Todo if it still needs to be done).;;;","07/May/18 3:30 PM;yacovm;I can't, I don't know if it's needed.

[~mastersingh24] - any news on the [proxy passthrough|https://github.com/envoyproxy/envoy/issues/1843] for envoy, or about this at all?;;;",,,,,,,,,,,,,,,,,,
Fix typos in lockbased_txmgr,FAB-8132,27529,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Feb/18 10:21 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 3:33 AM,v1.1.0,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywkn:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Feb/18 10:23 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/17689/;;;",,,,,,,,,,,,,,,,,,,,,,
Move kvstore to pkg/fabsdk/api/core/kvstore,FAB-8133,27530,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sudeshrshetty,aleksandar.likic,aleksandar.likic,08/Feb/18 11:14 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 5:24 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywkv:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
During execution of FAB- 7914:  logs indicate build failure during deployment,FAB-8135,27533,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,Nishi,Nishi,09/Feb/18 1:03 AM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,Not a Bug,,,,,,,1,,,,,,"When executing  a chaincode vendored with 1.1 shim on 1.0.x peer using ""github.com/hyperledger/fabric-test/feature-upgrade/features/upgrade-abort.feature"" file

Chaincode could not be deployed as expected in task FAB-7914 , but it fails for a different reason:

*Error from peer-logs & behave feature file is as follows*:
{code:java}
Error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""chaincode/input/src/github.com/hyperledger/fabric-test/chaincodes/jyellick/plob-1.1-shim/chaincode/vendor/github.com/hyperledger/fabric/bccsp/factory/pluginfactory.go:12:2: cannot find package ""plugin"" in any of:
/chaincode/input/src/github.com/hyperledger/fabric-test/chaincodes/jyellick/plob-1.1-shim/chaincode/vendor/github.com/hyperledger/fabric/vendor/plugin (vendor tree)
/chaincode/input/src/github.com/hyperledger/fabric-test/chaincodes/jyellick/plob-1.1-shim/chaincode/vendor/plugin{code}
 

hyperledger/fabric-ccenv:x86_64-1.0.4 image used in tests uses:

go version go1.7.5 linux/amd64 vs 

go version go1.9.2 linux/amd64 that was used to vendor chaincode with a 1.1 shim.

 

Difference in go versions across 1.0.x and 1.1 images failed to build the chaincode (vendored with 1.1 shim) to instantiate on a 1.0.x peer successfully.",,kit,mastersingh24,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7914,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywlb:",,,,,,,,,,,,,,,,,,,,,kit,mastersingh24,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/18 12:01 AM;kit;I have similar error, but I +don’t have+ shim vendored. So, I just cannot instantiate chaincode at all. Nothing helps. Don’t know what to do. Using 1.0.5 and 1.0.6 containers.;;;","12/Apr/18 10:08 PM;mastersingh24;This is not a valid scenario .... you cannot deploy v1.1 chaincode on a v1.0 peer;;;",,,,,,,,,,,,,,,,,,,,,
TxID refactoring,FAB-8136,27534,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,09/Feb/18 1:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 2:05 AM,,,,,,,,,,,0,,,,,,"* Add String() on TxID, returning only txid (not nonce)
 * Each high level package returning TxID should return its own TxID interface",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywlj:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca-merge-x86_64 fails as some build steps failed to execute.,FAB-8137,27535,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,09/Feb/18 1:10 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,12/Feb/18 11:17 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,"fabric-ca-merge-x86_64 is failing from last two builds due to the following errors,


{code:java}
17:45:10 #########################################################################
17:45:10 RC: 22, fabric-ca-fvt FAILED
17:45:10 31 minutes, 53 seconds runtime
17:45:10 TIMESTAMP--2018-02-07 05:45:10PM fabric-ca-fvt ENDED
17:45:10 #########################################################################
17:45:10 TIMESTAMP--2018-02-07 05:45:10PM
17:45:10 fabric-ca-fvt test ended.
17:45:10 Makefile:207: recipe for target 'fvt-tests' failed
17:45:10 make: *** [fvt-tests] Error 22
17:45:11 Build step 'Execute shell' marked build as failure

17:30:32  =============> testNonExistant
17:30:32 Error: Response from server: Error Code: 60 - Affiliation already exists
17:30:32 statusCode=404 (404 Not Found)
17:30:32 Error: Response from server: Error Code: 16 - Failed to get affiliation: : scode: 404, code: 63, msg: Failed to get Affiliation: sql: no rows in result set
{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-ca/job/fabric-ca-merge-x86_64/404/console
",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywlr:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/18 11:17 AM;sambhavdutt;All tests passing now for fabric-ca-merge-x86_64 , and the 404-Affiliation error is fixed, which was possibly caused due to network error. The tests are successful  from several builds. 

*Build Log*
https://jenkins.hyperledger.org/view/fabric-ca/job/fabric-ca-merge-x86_64/412/consoleFull
;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-go-tests-merge-x86_64 failed in the last build as some build codes didn't execute well,FAB-8138,27537,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,09/Feb/18 1:25 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,12/Feb/18 11:25 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,"fabric-sdk-go-tests-merge-x86_64 has failed in the last build #330 as the following errors were observed,


{code:java}
Aborting on container exit...
00:40:09 Makefile:232: recipe for target 'integration-tests-prerelease' failed
00:40:09 make[1]: *** [integration-tests-prerelease] Error 1
00:40:09 make[1]: Leaving directory '/w/workspace/fabric-sdk-go-tests-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-go'
00:40:09 Makefile:267: recipe for target 'integration-test' failed
00:40:09 make: *** [integration-test] Error 2
00:40:09 Build step 'Execute shell' marked build as failure
{code}


*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-go/job/fabric-sdk-go-tests-merge-x86_64/330/consoleFull",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywlz:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/18 11:24 AM;sambhavdutt;The Makefile error has been fixed and the builds have been successful on several instances.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-go/job/fabric-sdk-go-tests-merge-x86_64/342/consoleFull;;;",,,,,,,,,,,,,,,,,,,,,,
Remove mutator functions from fabclient interfaces,FAB-8139,27538,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,09/Feb/18 1:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Mar/18 5:56 AM,,,,,,,,,,,0,,,,,,"* Add
 * Set
 * Remove
 * etc.

 ",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywm7:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merge Channel Mgmt Client Interface into Resource mgmt client,FAB-8140,27539,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,09/Feb/18 1:48 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 11:38 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywmf:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move out implementation from api,FAB-8141,27540,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Baha-sk,aleksandar.likic,aleksandar.likic,09/Feb/18 1:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Mar/18 10:59 PM,,,,,,,,,,,0,,,,,,"* network.go

 ",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywmn:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
The name of genesis block is incorrect in behave test FAB-4773,FAB-8144,27551,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,09/Feb/18 4:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 5:53 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"The name of genesis block is wrong in behave test FAB-4773.
FAB-4773 is a test case fetching a channel genesis block.
The name of genesis block fetched from orderer is ""mychannel.block"".
However, the behave script checks a block named ""mychannel.tx"" in fabric-test/feature/bootstrap.feature.
https://github.com/hyperledger/fabric-test/blob/master/feature/bootstrap.feature#L124
 
The name of channel genesis block should be fixed correctly.
",fabric-test 002c4bfe55201794107c738ca76ba3cf7056eecb,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywof:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"09/Feb/18 9:01 AM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/17713/;;;",,,,,,,,,,,,,,,,,,,,,,
Cleanup Documentation Terminology for Upgrade/Update,FAB-8147,27554,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,bmos299,bmos299,09/Feb/18 6:45 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Feb/18 2:38 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"In group discussions, there are areas of the documentation where we conflate the terms upgrade and update.  [~jyellick] is going to help up the documentation.",,bmos299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2dj:",,,,,,,,,,,,,,,,,,,,,bmos299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Unable to unmarshall block information on orderer system channel,FAB-8148,27555,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,rohitadivi,rohitadivi,09/Feb/18 6:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Feb/18 7:56 AM,,,,v1.1.0,,,fabric-tools,,,,0,,,,,,"While trying to unmarshall the block 1 on orderer system channel (testchainid) from proto to json format am geting the following error:

{code}
*common.Block: error in PopulateTo for field data for message *common.Block: *common.BlockData: error in PopulateTo for slice field data at index 0 for message *common.BlockData: *common.Envelope: error in PopulateTo for field payload for message *common.Envelope: *common.Payload: error in PopulateTo for field data for message *common.Payload: decoding type 4 is unimplemented
{code}

attached is the pb file for reference.",,jyellick,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/18 6:45 AM;rohitadivi;config_block1.pb;https://jira.hyperledger.org/secure/attachment/14561/config_block1.pb",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywp3:",,,,,,,,,,,,,,,,,,,,,jyellick,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Feb/18 4:43 AM;jyellick;In review via:  https://gerrit.hyperledger.org/r/17745;;;",,,,,,,,,,,,,,,,,,,,,,
Rename New to Create for non-local types,FAB-8149,27556,27428,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,troyronda,troyronda,09/Feb/18 6:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 2:06 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"* For types created in other packages:
 ** Rename New... methods to Create...
 * For local types, keep using New...",,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywpb:",,,,,,,,,,,,,,,,,,,,,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"peer is unable to connect with chaincode container, when downgrade peer from V1.1 to V1.0",FAB-8152,27559,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Ratnakar,Ratnakar,09/Feb/18 8:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 12:58 AM,,,,v1.1.0,,,fabric-docs,,,,0,chaincode,peer,quality,,,"Testcase description/details can be referred from the FAB-7915

*Procedure:*
 # Start a v1.1.0 peer
 # Deploy a chaincode (which either vendors the v1.1.0 chaincode shim, or does not vendor the shim)
 # Query the chaincode
 # Shutdown the peer
 # Downgrade the peer to v1.0.x (do not delete the chaincode image)
 # Start the peer
 # Query the chaincode

*Expected Results:*

The query should execute correctly.

*Observed:*

chaincode container fails to connnect to peer and could see the following error in chaincode container logs

{code}
$ docker logs dev-peer0.org1.example.com-mycc-1.0
2018-02-08 22:53:38.443 UTC [shim] userChaincodeStreamGetter -> ERRO 001 open : no such file or directory
error trying to read file content
github.com/hyperledger/fabric/core/chaincode/shim.userChaincodeStreamGetter
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:89
github.com/hyperledger/fabric/core/chaincode/shim.Start
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:150
main.main
	/chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:189
runtime.main
	/opt/go/src/runtime/proc.go:195
runtime.goexit
	/opt/go/src/runtime/asm_amd64.s:2337
Error starting Simple chaincode: error trying to read file content : open : no such file or directory
{code}

 Enclosed the peer logs

 

( _Tried with and without deleting the chaincode conatiner and see the same result._ )

 ",,ChristopherFerris,denyeart,jyellick,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7915,,,,,,,,FAB-8210,,,,,,,,,,,,,,,,,"09/Feb/18 8:07 AM;Ratnakar;Archive.zip;https://jira.hyperledger.org/secure/attachment/14562/Archive.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywpz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,jyellick,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 3:32 AM;Clayton Sims;What is reason a user would want to downgrade his peer ?   Is this use case we expect to support?;;;","10/Feb/18 3:53 AM;Ratnakar;[~Clayton Sims] This is not an actual upgrade , meaning we haven't enabled the *V1.1 capabilities* yet.

we are just changing the binaries from 1.1 to 1.0.

 

[~jyellick] Could you please confirm if we are expected to support this usecase. I executed the testcase described in  FAB-7915;;;","10/Feb/18 4:25 AM;jyellick;You said you tried with and without deleting the chaincode container.  Did you mean container or image? If deleting the chaincode image does not fix this, it is rather perplexing.;;;","10/Feb/18 4:26 AM;jyellick;> Jason Yellick Could you please confirm if we are expected to support this usecase. I executed the testcase described in FAB-7915

Officially, I believe we would say that the user should restore the backup of the peer that they took before upgrading to v1.1.  However, I see no reason why this should fail, and if it does, I thought it would be worth noting and documenting.;;;","10/Feb/18 5:33 AM;Ratnakar;> You said you tried with and without deleting the chaincode container. Did you mean container or image? If deleting the chaincode image does not fix this, it is rather perplexing.
----
It is the chaincode conatiner that I was referring above.

Deleting v1.1 chaincode image has no issues. It is as per the test case step 5, we tested this.

 *_Downgrade the peer to v1.0.x (do not delete the chaincode image)_* ;;;","10/Feb/18 7:46 AM;jyellick;Great, thanks for testing this.  As mentioned, this is not the supported path, but it was worth investigating what our users will see if they fail to delete the chaincode image on downgrade.  Let's take this as a doc defect to help users identity this failure case?;;;","14/Feb/18 3:27 AM;Clayton Sims;[~Ratnakar]  moving to doc let us know if you disagree.;;;","15/Feb/18 2:54 AM;denyeart;[~Ratnakar] Since doc team is stretched, would you be able to push doc improvements like this as you find them?;;;","15/Feb/18 3:45 AM;Ratnakar;[~denyeart] [~Clayton Sims] 

[~scottz] has raised another doc improvement FAB-8210 and linked to this JIRA hence I removed the *fabric-docs* component. 
 Sure I shall provide a patch for the doc improvement with FAB-8210.;;;","26/Feb/18 8:53 PM;denyeart;[~Ratnakar] You could make a comment or update to the upgrade doc for this instead of using another work item:

https://gerrit.hyperledger.org/r/#/c/18351/;;;","26/Feb/18 9:52 PM;ChristopherFerris;should not hold up rc1;;;","27/Feb/18 12:57 AM;Ratnakar;As per the discussions and investigation, the docs are accurate.

[http://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_one_point_one.html?#upgrade-peer-binaries|http://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_one_point_one.html#upgrade-peer-binaries]

point 3 *Upgrade Peer Binaries*  addresses the same , here for ref
{code:java}
remove all Docker chaincode images.

These can be recognized by the pattern:

{{$\{CORE_PEER_NETWORKID}-$\{CORE_PEER_ID}-$\{CC_NAME}-$\{CC_VERSION}-$\{CC_HASH}}}

for instance:

{{dev-peer1.org2.example.com-mycc-1.0-26c2ef32838554aac4f7ad6f100aca865e87959c9a126e86d764c8d01f8346ab}}

{code}
closing this issue.;;;",,,,,,,,,,,
Python 3 syntax error in bddtests/steps/bootstrap_util.py,FAB-8153,27560,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,cclauss,cclauss,09/Feb/18 10:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Feb/18 10:45 AM,,,,,,,,,,,0,SyntaxError,,,,,"{{./bddtests/steps/bootstrap_util.py:492:67: E999 SyntaxError: invalid syntax
    def addSignatureToSignedConfigItem(cls, configUpdateEnvelope, (entity, mspId, cert)):
                                                                  ^}}

In Python 3, an explicit tuple is not an acceptable function parameter.  The workaround is to create a single function parameter named *entity_mspId_cert* and then on the first line of the function body , write *entity, mspId, cert = entity_mspId_cert*.",,cclauss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywq7:",,,,,,,,,,,,,,,,,,,,,cclauss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB index validation needs to support partial indexes,FAB-8156,27564,,Story,In CR Review,FAB,Fabric,software,denyeart,,,Medium,,chris.elder,chris.elder,chris.elder,09/Feb/18 9:26 PM,09/Nov/20 11:25 PM,28/Oct/23 3:02 AM,,,,,,,,fabric-ledger,,,,0,,,,,,CouchDB 2.1 introduced partial indexes.  Chaincode deployment currently validates defined indexes and needs to support the new partial index definition.,,chris.elder,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|i00wur:0n",,,,Unset,,v2.x,,,,Unset,,,,,,,,,,,chris.elder,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
submit upgrade scripts to fabric-test/feature-upgrade,FAB-8158,27566,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,suryalnvs,suryalnvs,suryalnvs,09/Feb/18 11:13 PM,30/Jul/19 10:19 AM,28/Oct/23 3:02 AM,30/Jul/19 10:19 AM,,,,,,,fabric-quality,,,,0,,,,,,Submit upgrade scripts to fabric-test,,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywr3:",,,,,,,,,,,,,,,,,,,,,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:19 AM;mastersingh24;been out there for a while ... don't think we'll be getting to this;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-test-merge-x86_64 failed to build successfully due to timeout error.,FAB-8159,27567,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,09/Feb/18 11:32 PM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,15/Feb/18 4:21 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,"fabric-test-merge-x86_64 failed twice as the following timeout error was observed,


{code:java}
22:14:00   @smoke
22:14:00   Scenario Outline: FAB-1440, FAB-3861: Basic Chaincode Execution - kafka orderer type, using leveldb, with tls -- @1.5   # peer.feature:56
22:14:00     Given I have a bootstrapped fabric network of type kafka using state-database leveldb with tls                        # steps/basic_impl.py:105
22:14:00 org1.example.com
22:14:00 org2.example.com
22:14:00 2018-02-08 22:14:00.660 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
22:14:00 2018-02-08 22:14:00.699 UTC [common/tools/configtxgen] doOutputBlock -> INFO 002 Generating genesis block
22:14:00 2018-02-08 22:14:00.700 UTC [common/tools/configtxgen] doOutputBlock -> INFO 003 Writing genesis block
22:14:00 2018-02-08 22:14:00.718 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
22:14:00 2018-02-08 22:14:00.747 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
22:14:00 2018-02-08 22:14:00.771 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Writing new channel tx
22:14:00 2018-02-08 22:14:00.789 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
22:14:00 2018-02-08 22:14:00.818 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
22:14:00 2018-02-08 22:14:00.818 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
22:14:00 2018-02-08 22:14:00.836 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
22:14:00 2018-02-08 22:14:00.866 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
22:14:00 2018-02-08 22:14:00.866 UTC [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
22:14:19 2018-02-08 22:14:15.140 UTC [nodeCmd] func7 -> INFO 1aa Starting profiling server with listenAddress = 0.0.0.0:6060
22:14:19 2018-02-08 22:14:15.746 UTC [nodeCmd] func7 -> INFO 1ba Starting profiling server with listenAddress = 0.0.0.0:6060
22:14:19 2018-02-08 22:14:15.176 UTC [nodeCmd] func7 -> INFO 1b9 Starting profiling server with listenAddress = 0.0.0.0:6060
22:14:20 2018-02-08 22:14:15.802 UTC [nodeCmd] func7 -> INFO 1bf Starting profiling server with listenAddress = 0.0.0.0:6060
22:19:19 2018-02-08 22:14:15.140 UTC [nodeCmd] func7 -> INFO 1aa Starting profiling server with listenAddress = 0.0.0.0:6060
22:19:19 2018-02-08 22:14:15.746 UTC [nodeCmd] func7 -> INFO 1ba Starting profiling server with listenAddress = 0.0.0.0:6060
22:19:19 2018-02-08 22:14:15.176 UTC [nodeCmd] func7 -> INFO 1b9 Starting profiling server with listenAddress = 0.0.0.0:6060
22:19:19 2018-02-08 22:14:15.802 UTC [nodeCmd] func7 -> INFO 1bf Starting profiling server with listenAddress = 0.0.0.0:6060
22:19:19       Assertion Failed: The containers are not ready in the allotted time (300 seconds)
{code}


*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/165/consoleFull",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywrb:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 4:21 AM;sambhavdutt;The fabric-test-merge is passing without the timeout error for 3 builds. ;;;",,,,,,,,,,,,,,,,,,,,,,
"Change name of ""Reconfiguring Your First Network""",FAB-8160,27568,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 1:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Feb/18 2:03 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"The name ""Reconfiguring Your First Network"" -- while technically correct - is not the best name for this doc, since it is a tutorial whose scope is limited to only a particular reconfig - adding an org to a channel.

Need a name change to reflect this given coming docs that will talk more generally and conceptually about a range of possible reconfigurations.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywrj:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Feb/18 1:25 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/17727/;;;",,,,,,,,,,,,,,,,,,,,,,
Updating a Channel Config (channel task) ,FAB-8161,27569,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 1:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 5:03 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Document a more general and conceptual overview of a channel config, taking a broader approach than the tutorial formerly known as ""Reconfiguring Your First Network"".

This should among other things gives a better sense of *potential* config updates, as well as an overview of the necessary flow no matter what they are trying to change.

Google doc of preliminary effort on this topic available here:

https://docs.google.com/document/d/1SCgNcKZufaKrP5JHlC4FfGdRPGqAKUbSBPSTG7pPhxY/edit?usp=sharing",,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywrr:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Feb/18 1:46 AM;joe-alewine;[~denyeart] [~MattHamilton] [~jyellick] [~simsc] [~bmos299] [~rohitadivi] [~suryalnvs] [~scottz] – link should now work.;;;","16/Feb/18 8:18 AM;joe-alewine;[~denyeart] [~MattHamilton] [~jyellick] [~simsc] [~bmos299] [~rohitadivi] [~suryalnvs] [~scottz] 

Other than a section at the end I need to expand on (and the section under actually editing the JSON – I've added notes/filler in these section), this should be ready for early edits/comments. Out of respect for the review process, wanted to get it out there now rather than waiting until tomorrow.;;;","19/Feb/18 8:08 PM;denyeart;I've done a round of edits on the google doc.   [~jyellick] there are some details that I think you will need to crisp up, could you do a review/edit in the google doc.  Once you are done it can be submitted to gerrit.;;;","22/Feb/18 3:06 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/18113/;;;",,,,,,,,,,,,,,,,,,,
Update config update doc to use configtxlator cli instead of REST,FAB-8162,27571,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Feb/18 2:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Feb/18 1:05 AM,,,,,,,fabric-docs,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyws7:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"All the docs/tasks needed to document the upgrade/update, including scripts",FAB-8163,27572,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 2:14 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,23/Mar/18 5:46 AM,,,,v1.2.0,,,fabric-docs,fabric-samples,,,0,,,,,,,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,316800,316800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,ghx-label-4,,Documenting update/upgrade for v1.1,To Do,,,,,,,"1|hzx7br:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 2:56 AM;joe-alewine;[~Clayton Sims] [~denyeart] [~MattHamilton] [~jyellick] [~suryalnvs] [~bmos299] [~scottz] [~rohitadivi];;;",,,,,,,,,,,,,,,,,,,,,,
"Script ""adding an org to a channel"" steps",FAB-8164,27573,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,lehors,joe-alewine,joe-alewine,10/Feb/18 2:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Feb/18 6:13 AM,,,,,,,fabric-docs,fabric-samples,,,0,,,,,,"Need to create a script that takes a user through the steps in this doc:

[http://hyperledger-fabric.readthedocs.io/en/latest/channel_update.html]

This is in the spirit of BYFN, which provides the same option.",,joe-alewine,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7540,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywsf:",,,,,,,,,,,,,,,,,,,,,joe-alewine,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 2:44 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/16441/;;;","13/Feb/18 6:14 AM;jyellick;Fixed via https://gerrit.hyperledger.org/r/c/16441/;;;",,,,,,,,,,,,,,,,,,,,,
Create script for Upgrading components doc,FAB-8165,27574,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,joe-alewine,joe-alewine,10/Feb/18 2:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 7:21 AM,,,,v1.1.0,,,fabric-docs,fabric-samples,,,0,must-fix,,,,,"In the mold of BYFN and ""Adding an Org to a Channel"", need to figure out steps for updating network components and script them.",,denyeart,joe-alewine,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywsn:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 12:00 AM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/18187/;;;","27/Feb/18 11:09 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/18207/;;;",,,,,,,,,,,,,,,,,,,,,
"Upgrading network components (peer, orderer, chaincode shim task)",FAB-8166,27575,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 2:48 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jul/18 7:16 AM,,,,,,,fabric-docs,,,,0,,,,,,"In the mold of ""Updating a Channel Config"" – modify current document here:

[http://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_one_point_one.html]

To provide conceptual overview and general task guidelines for upgrading peers and orderers and the chaincode shim, not just for 1.1 but in general.

Dependent somewhat on the work being done in FAB-8165 and FAB-8012.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywsv:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 6:08 AM;joe-alewine;Folded in as part of: https://jira.hyperledger.org/browse/FAB-8012;;;",,,,,,,,,,,,,,,,,,,,,,
"""What's New"" doc -- general instructions for updating/upgrading ",FAB-8167,27576,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 2:50 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,22/Mar/18 7:20 AM,,,,,,,fabric-docs,,,,0,,,,,,"Since instructions on upgrading and updating are being spread across several docs, necessary to have a place that can point to which docs people should be looking at to find these steps and what order to do them in.

What's New"" should also discuss more generally what is new in v1.1 (beyond capabilities and the process to update/upgrade). This will rely heavily on the wiki:

https://wiki.hyperledger.org/projects/fabric/proposedv1_1",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzywt3:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/18 7:20 AM;joe-alewine;Wasn't needed.;;;",,,,,,,,,,,,,,,,,,,,,,
Ensure users can download 1.0 binaries in order to do upgrades/updates,FAB-8168,27577,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,joe-alewine,joe-alewine,10/Feb/18 2:54 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jul/18 5:42 AM,,,,,,,fabric-samples,,,,0,,,,,,"BYFN currently uses the ""latest"" tag for its binaries. We need to ensure that users can download 1.0 binaries to run through tutorials based around updating/upgrading – especially ""Upgrading Your Components"".",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywtb:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channels (conceptual documentation),FAB-8169,27578,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,joe-alewine,joe-alewine,10/Feb/18 3:03 AM,26/Aug/19 6:06 PM,28/Oct/23 3:02 AM,26/Aug/19 6:06 PM,,,,,,,fabric-docs,,,,0,,,,,,"In the mold of ""identity"", ""membership"", and ""peers"", document the concepts around channels.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywtj:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 3:11 AM;joe-alewine;[~odowdaibm];;;",,,,,,,,,,,,,,,,,,,,,,
Ledgers (conceptual documentation),FAB-8170,27579,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,joe-alewine,joe-alewine,10/Feb/18 3:04 AM,26/Aug/19 6:08 PM,28/Oct/23 3:02 AM,26/Aug/19 6:08 PM,,,,,,,fabric-docs,,,,0,,,,,,"""Key Concepts"" documentation for ledgers.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywtr:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 3:11 AM;joe-alewine;[~odowdaibm];;;",,,,,,,,,,,,,,,,,,,,,,
Orderers (conceptual documentation),FAB-8171,27580,,Documentation,Closed,FAB,Fabric,software,denyeart,,,High,Done,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 3:04 AM,28/Mar/19 4:06 AM,28/Oct/23 3:02 AM,28/Mar/19 3:32 AM,,,,v1.4.1,v2.0.0,,fabric-docs,,,,1,,,,,,"""Key Concepts"" documentation around orderers.

Some thoughts on how to proceed:

First, we'll have to talk about the role ordering plays in the network. What does ""ordering"" mean in terms of blocks of transactions? Why is it important that transactions are ordered? Why does the role an orderer plays mean it's best to have a single, yet still distributed, ordering service where this is carried out?

Then I think we should get into some of the administrative aspects. What is an orderer? How orderers are administrated? The purpose of the orderer system channel/consortium. The validation role orderers play.

Then we can get into orderer implementation types. Solo vs Kafka vs Raft.

 

Of course, this is just a broad outline. Would welcome other suggestions.

 ",,isaacwch,joe-alewine,kchristidis,odowdaibm,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6135,,,,,,,,,"1|hzywtz:",,,,,,,,,,,,,,,,,,,,,isaacwch,joe-alewine,kchristidis,odowdaibm,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Feb/18 3:12 AM;joe-alewine;[~odowdaibm];;;","11/Jan/19 5:36 AM;pandrejko;Would it be worth mentioning the double-spend problem here or is that more appropriate for the transaction topic? (I think I mentioned that to Isaac as well.);;;","19/Jan/19 1:05 AM;joe-alewine;Some text to start with. Comments welcome:

 

*What is ordering?*

Orderers are key components in a network because they perform a few essential functions:
 - They literally *order* the blocks of transactions that are sent to the peers to be written to their ledgers, a process called ""ordering"". If these transactions were instead bundled and ordered at the peers themselves, it would increase the possibility of one peer writing a transaction to its ledger where another peer did not, creating a state fork.

 - They maintain the *orderer system channel*, the place where of the *consortium*, the list of peer organizations permitted to create channels, resides.

 - They perform important identity validation checks. For example, if an organization tries to create a channel when it is not a member of the orderer's consortium, the request will be denied. Orderers also validate against behaviors in transaction channels, such as the permissions for changing a channel configuration.;;;","01/Feb/19 11:17 PM;joe-alewine;Some comments on the above from [~kchristidis], who's leading RAFT development:  


Just a recap from our earlier chat:
 
1. I think the justification for the existence of the orderers in bullet point #1 needs to go; it is not accurate. We _could_ build orderer capability into the peers and things would work fine; splitting the roles into peers and orderers just allows for finer-grained scaling (if peers are the bottleneck, just upgrade those!) and cleaner architectural diagrams.
 
2. Here's how I've always described the ordering service. The ordering service does:
 
a. Ordering (duh): It orders incoming client transactions into blocks that are then relayed to the peers, etc.
 
b. ACL: It enforces the policies decided by the consortium or the channel administrators. These policies dictate everything from who gets to read from/write to a channel, to who can create/modify a channel.
 
c. Reconfiguration, i.e. it runs the reconfiguration engine for channels. Remember that who gets to modify a configuration element in a channel is subject to the policies that the consortium/channel administrators set when they created the consortium/channel. And most of these configuration elements can be modified at any point in time. But the actual entity that takes your ""I would like to modify the batch timeout from 1 second to 2 seconds in channel 'foo' configuration update"", processes it to see if you have the proper administrative rights for that configuration update, validates it against the existing configuration, generates a new configuration (new = existing + submitted delta), and relays it to the peers? That entity is the ordering service.
 
We don't focus much on the consortiums but we should, and you are right to point that out in your original text. A minor edit I would propose on your consortium bullet point: I'd talk about consortiums (plural): a consortium is essentially our multi-tenancy vehicle; an ordering service by design can host multiple consortiums, i.e. multiple groups of peer orgs that are allowed to create channels.;;;","22/Feb/19 3:54 AM;joe-alewine;Taking some content from the ""Peers"" doc — [https://hyperledger-fabric.readthedocs.io/en/release-1.4/peers/peers.html] — to use here, in addition to a few images developed for that doc. Will need to edit the peers doc as a result.

 ;;;","27/Feb/19 7:28 AM;joe-alewine;The CR is here: [https://gerrit.hyperledger.org/r/c/29449/]

Thanks to everyone for the comments so far.;;;",,,,,,,,,,,,,,,,,
Chaincode/smart contracts (conceptual documentation),FAB-8172,27581,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,joe-alewine,joe-alewine,10/Feb/18 3:05 AM,26/Aug/19 6:06 PM,28/Oct/23 3:02 AM,26/Aug/19 6:06 PM,,,,Future,,,fabric-docs,,,,0,,,,,,"""Key Concepts"" documentation around cc/smart contracts.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywu7:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 3:12 AM;joe-alewine;[~odowdaibm];;;",,,,,,,,,,,,,,,,,,,,,,
Principals (conceptual documentation),FAB-8173,27582,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,joe-alewine,joe-alewine,10/Feb/18 3:06 AM,26/Aug/19 6:08 PM,28/Oct/23 3:02 AM,26/Aug/19 6:08 PM,,,,,,,fabric-docs,,,,0,,,,,,"""Key Concepts"" documentation around principals.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywuf:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 3:12 AM;joe-alewine;[~odowdaibm];;;",,,,,,,,,,,,,,,,,,,,,,
Organizations (conceptual documentation),FAB-8174,27583,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,joe-alewine,joe-alewine,10/Feb/18 3:06 AM,26/Aug/19 6:08 PM,28/Oct/23 3:02 AM,26/Aug/19 6:08 PM,,,,,,,fabric-docs,,,,0,,,,,,"""Key Concepts"" documentation around organizations.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywun:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 3:13 AM;joe-alewine;[~odowdaibm];;;",,,,,,,,,,,,,,,,,,,,,,
Migrate to new Table of Contents,FAB-8175,27584,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Duplicate,odowdaibm,joe-alewine,joe-alewine,10/Feb/18 3:16 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,20/Jul/18 11:06 PM,,,,DUPLICATE,,,fabric-docs,,,,0,,,,,,"Plan is to fold in current documentation under this organizational model (following overall guideline that documentation should be divided into three major categories (with sub categories underneath) - Concepts, Tasks, and Reference:

[https://github.com/FabricTOC/FabricTOC/blob/master/docs/Guide/Guide.md]

Current docs are noted with an asterisk.",,ChristopherFerris,joe-alewine,pandrejko,wjzheng,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx0a7:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,joe-alewine,pandrejko,wjzheng,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Mar/18 3:59 AM;wjzheng;Before we complete the move to new TOC, we can do some re-organization on existing topics to have a better structure.;;;","18/Apr/18 9:35 PM;ChristopherFerris;We have made a rather comprehensive reorg of the TOC to radically simplify the presentation. https://jira.hyperledger.org/browse/FAB-8666 [~odowdaibm] [~pandrejko] suggest maybe this could be closed?;;;","20/Apr/18 4:45 AM;pandrejko;[~odowdaibm] - do you have an opinion here based on the work delivered in FAB-8666?;;;","09/May/18 9:45 PM;ChristopherFerris;[~odowdaibm] I think that this can be closed. I believe we have accomplished our objective with FAB-8666. We can reopen if you disagree.;;;",,,,,,,,,,,,,,,,,,,
Document API reference,FAB-8176,27585,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,joe-alewine,joe-alewine,10/Feb/18 3:27 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Apr/18 12:04 AM,,,,v1.2.0,,,fabric-docs,,,,0,Documentation,,,,,Need to get API reference into the documentation to help developers.,,denyeart,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/18 2:34 AM;pandrejko;image-2018-04-03-13-34-04-141.png;https://jira.hyperledger.org/secure/attachment/14847/image-2018-04-03-13-34-04-141.png",,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwttb:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Mar/18 5:13 AM;joe-alewine;[~pandrejko] [~bmos299] [~ChristopherFerris]

Currently we point to our API reference here: [http://hyperledger-fabric.readthedocs.io/en/release-1.1/getting_started.html]

But I think we could do more to give people some guidance on what to do when they navigate to the godoc site: [https://godoc.org/github.com/hyperledger/fabric]

The question is what kind of guidance would be most useful. Perhaps the solution would be to make sure every API has a synopsis on the godoc page? Or perhaps we can give people some information about what they should be looking for (or where certainly commonly used APIs can be found)?

 

 ;;;","30/Mar/18 5:00 AM;pandrejko;Investigating how the 'Synopsis' works.

From what I can tell from other Go lang package repositories, the synopsis is optional - some packages have them, many don't.

Some packages have a description at the top of them (just under the import statement) , if the developer provides one, it becomes the synopsis.

I'm not sure it makes sense for ID to try to describe the package - the developer should be doing that. 

The list of APIs is by directory -

There could possibly be an opportunity for ID to provide a summary synopsis of the api sets at the folder level.  Something along the lines of ""Package provides functions to.... ""

It also might be useful in our docs to refer them to the examples in go.

Still investigating..

 

 ;;;","04/Apr/18 2:39 AM;pandrejko;[~denyeart]

Discussed this one some more with Barry and Clayton today. Barry is thinking the API Reference documentation does not belong in this getting started list at all and maybe should even be removed from the docs entirely?

Look at http://hyperledger-fabric.readthedocs.io/en/release-1.1/getting_started.html

The API Reference section points to this link which is for Fabric developers: [https://godoc.org/github.com/hyperledger/fabric]

The thinking here is that consumers of our HyperLedger Fabric doc on the Getting Started page are interested in developing:

1) Client apps (using the SDK)

2) Chaincode

and  would not be interested in using the golang api's to contribute to the Fabric community itself, so we should remove this section entirely.

 

Your thoughts?

 

 ;;;","05/Apr/18 4:05 AM;pandrejko;Discussed this with Chris Ferris today. He said rather than changing this content, the paragraph section should be moved down to the Contributions Welcome! section instead.;;;","07/Apr/18 9:45 PM;denyeart;I agree, 99% of the APIs there are for developers, that paragraph should be moved to contribution section, maybe here:

[http://hyperledger-fabric.readthedocs.io/en/release-1.1/Style-guides/go-style.html#coding-golang]

 

The 1% of interesting APIs for consumers, are the chaincode APIs.  The topic that covers chaincode dev is:

[http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html#chaincode-api]

That paragraph mentions the ChaincodeShimInterface APIs, but has a ""Go"" link to the wrong location!  It currently points to:

[https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#ChaincodeStub]

It should point to:

[https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#ChaincodeStubInterface]

that's where the chaincode APIs are documented.;;;","13/Apr/18 12:17 AM;pandrejko;https://gerrit.hyperledger.org/r/20495;;;",,,,,,,,,,,,,,,,,
Improve Glossary (documentation),FAB-8177,27586,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,pandrejko,joe-alewine,joe-alewine,10/Feb/18 3:28 AM,13/Jan/21 3:42 AM,28/Oct/23 3:02 AM,13/Jan/21 3:42 AM,,,,Future,,,fabric-docs,,,,0,Documentation,stale-item,,,,"Do not close this FAB. It represents a hub around which we can add jiras related to glossary updates.

The glossary found here:

[http://hyperledger-fabric.readthedocs.io/en/latest/glossary.html]

Is outdated and/or missing critical items. Needs improvement.

 

 

 ",,joe-alewine,pandrejko,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtvz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,pandrejko,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 4:40 AM;pandrejko;https://gerrit.hyperledger.org/r/#/c/19617/;;;","03/Dec/18 5:34 AM;pandrejko;This is an on-going doc issue. Removing the 1.4 tag from it.;;;","23/Jan/20 7:26 AM;sykesm;Stale;;;","13/Jan/21 3:42 AM;pandrejko;Closing this issue now as no further work is planned for the glossary. ;;;","13/Jan/21 3:42 AM;pandrejko;All started work has been completed.;;;",,,,,,,,,,,,,,,,,,
Improve BYFN by adding images ,FAB-8178,27587,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,SjirNijssen,joe-alewine,joe-alewine,10/Feb/18 3:34 AM,15/Jan/20 6:04 AM,28/Oct/23 3:02 AM,15/Jan/20 6:04 AM,,,,,,,fabric-docs,,,,0,stale-item,,,,,"BYFN is a nice sample but would be even more user friendly if it had images that accompany the creation of the network (especially in the second half as it is being build iteratively).

Sjir Nijssen is working on this with Anthony O'Dowd (following image styling being established in new conceptual documentation).",,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtxz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/20 6:04 AM;pandrejko;Closing this one out since BYFN is being replaced by the Test network;;;",,,,,,,,,,,,,,,,,,,,,,
"Document available commands (peer, cryptogen, configtxgen, configtxlator, fabric-ca-cleint, fabric-ca-server)",FAB-8179,27588,,Epic,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,odowdaibm,joe-alewine,joe-alewine,10/Feb/18 3:37 AM,21/Jul/18 4:09 AM,28/Oct/23 3:02 AM,20/Mar/18 5:08 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Using a pro-forma for creating commands documentation, list available commands for fabric components:

Peer (topic in docs but needs improvement)

cryptogen

configtxgen

configtxlator

fabric-ca-cleint

fabric-ca-server",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-6,,Document commands (reference),To Do,,,Unset,,,,"1|hzywuv:",,,,Unset,Unset,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
peer commands,FAB-8180,27589,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,odowdaibm,joe-alewine,joe-alewine,10/Feb/18 3:41 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,27/Feb/18 4:51 AM,,,,,,,fabric-docs,,,,0,,,,,,"Topic was put together somewhat rushed – could use improvement:

[http://hyperledger-fabric.readthedocs.io/en/latest/peer-commands.html]

Nevertheless this is the basic framework that should be followed for all ""commands"" docs.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8179,,,,,,,,,"1|hzywv3:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cryptogen commands,FAB-8181,27590,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,ellaki,joe-alewine,joe-alewine,10/Feb/18 3:42 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,20/Mar/18 5:08 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"List all commands possible with cryptogen, following basic framework found here:

http://hyperledger-fabric.readthedocs.io/en/latest/peer-commands.html",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8179,,,,,,,,,"1|hzywvb:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 6:05 AM;Clayton Sims;Elli can we ask that Zurich write the document for this piece.   Anthony has created the first template for the peer channel command.    Can you follow example using same format and do this for cryptogen command.    

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,
configtxgen commands,FAB-8182,27591,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,joe-alewine,joe-alewine,10/Feb/18 3:43 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,25/Feb/18 12:48 AM,,,,,,,fabric-docs,,,,0,,,,,,"Document all configtxgen commands, following framework found here:

http://hyperledger-fabric.readthedocs.io/en/latest/peer-commands.html",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8179,,,,,,,,,"1|hzywvj:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
configtxlator commands,FAB-8183,27592,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,joe-alewine,joe-alewine,10/Feb/18 3:45 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,25/Feb/18 12:48 AM,,,,,,,fabric-docs,,,,0,,,,,,"Document all configtxlator commands, following this template:

http://hyperledger-fabric.readthedocs.io/en/latest/peer-commands.html",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8179,,,,,,,,,"1|hzywvr:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca-client commands,FAB-8184,27593,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,skarim,joe-alewine,joe-alewine,10/Feb/18 3:46 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,27/Feb/18 6:04 AM,,,,,,,fabric-docs,,,,0,,,,,,"Document fabric-ca-client commands, follow template found here:

http://hyperledger-fabric.readthedocs.io/en/latest/peer-commands.html",,joe-alewine,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8179,,,,,,,,,"1|hzywvz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Feb/18 2:04 AM;skarim;https://gerrit.hyperledger.org/r/#/c/18281/;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-ca-server commands,FAB-8185,27594,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,skarim,joe-alewine,joe-alewine,10/Feb/18 3:47 AM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,13/Mar/18 11:16 PM,,,,,,,fabric-docs,,,,0,,,,,,"Document fabric-ca-server commands, following template found here:

http://hyperledger-fabric.readthedocs.io/en/latest/peer-commands.html",,joe-alewine,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8179,,,,,,,,,"1|hzyww7:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Feb/18 2:04 AM;skarim;https://gerrit.hyperledger.org/r/#/c/18281/;;;",,,,,,,,,,,,,,,,,,,,,,
Update BYFN reconfigure doc to use configtxlator CLI,FAB-8186,27595,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Feb/18 3:48 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Feb/18 4:49 PM,,,,,,,fabric-docs,,,,0,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywwf:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 8:42 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17737/;;;",,,,,,,,,,,,,,,,,,,,,,
Tutorial: CRL tutorial,FAB-8187,27596,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,joe-alewine,joe-alewine,joe-alewine,10/Feb/18 3:50 AM,10/Jan/20 1:25 AM,28/Oct/23 3:02 AM,10/Jan/20 1:25 AM,,,,,,,fabric-docs,fabric-samples,,,1,Documentation,,,,,"In mold of ""Adding an Org to a Channel"" tutorial, take people through CRLs (documenting concepts as well as providing script based on the Fabric-CA network – BYFN will not work with a CRL tutorial since it is not compatible with fabric-ca-client).

Will need commands and accompanying script, as doc should follow template of providing a script and taking people through concepts and the steps one at a time.",,joe-alewine,mastersingh24,petroccoC,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,,,,,,,"1|hzwtjz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,mastersingh24,petroccoC,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 1:31 AM;mastersingh24;We need to stop using byfn for these things .... at the end of the day, all of these tasks are *channel update* transactions.
We do need some better tools to perform common functions (and there are a few JIRAs for these), but I don't think we need yet another ""scenario"" added to byfn .;;;",,,,,,,,,,,,,,,,,,,,,,
Develop steps/script for CRL extension of BYFN,FAB-8188,27597,27596,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,rohitadivi,joe-alewine,joe-alewine,10/Feb/18 3:52 AM,28/Jul/19 1:32 AM,28/Oct/23 3:02 AM,28/Jul/19 1:32 AM,,,,,,,fabric-samples,,,,0,,,,,,Will need steps and script for CRL extension of BYFN documentation.,,joe-alewine,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywwn:",,,,,,,,,,,,,,,,,,,,,joe-alewine,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 1:32 AM;mastersingh24;We need to stop abusing byfn;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenrio:Create index against large volume of data, immediately followed by query/invoke during Init() before the index can be fully built.",FAB-8190,27599,29983,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,AdnanChoudhury,AdnanChoudhury,10/Feb/18 4:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Jul/18 5:44 AM,,,,,,,,,,,0,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8251,FAB-8252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywx3:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 5:44 AM;AdnanChoudhury;Closing this as this one is duplicated.;;;","14/Jul/18 1:58 PM;AdnanChoudhury;Closing this as duplicate.;;;",,,,,,,,,,,,,,,,,,,,,
PTE testcase: marbles02 invokes,FAB-8192,27601,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,10/Feb/18 6:22 AM,28/Nov/18 9:04 AM,28/Oct/23 3:02 AM,05/Oct/18 11:07 PM,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,"(To be added to Daily test suite)
Test name: Performance test: channel events, 2 channels
 Component: Performance test
 Description: performance events per channel with couchDB
     chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
     transactions: 4 threads, each thread sends 1000 invokes concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Event:
          service: channel
          listener: block
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6813,,,,,,,,FAB-8199,FAB-8200,FAB-8201,FAB-12857,,,,,,,,,,,,,,"08/Jun/18 4:12 AM;suryalnvs;FAB-8192-4i-marbles02-4q.log;https://jira.hyperledger.org/secure/attachment/15077/FAB-8192-4i-marbles02-4q.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,"1|hzywxb:",,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"15/Feb/18 3:54 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17917/;;;","08/Jun/18 4:11 AM;suryalnvs;Tested at Commit level 186ae9f;;;",,,,,,,,,,,,,,,,,,,,,
Removed Orderer Still Processing Transactions,FAB-8193,27602,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,Ratnakar,Ratnakar,10/Feb/18 7:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Feb/18 7:15 AM,,,,Not a Bug,v1.1.0,,fabric-orderer,,,,0,quality,,,,,"Fabric version 1.1 

Objective : As an Orderer Org admin , I wanted to delete one of the rouge Orderer process from my system channel (*testchainid*)

Steps:
 1. Launch the network with kafka based ordereing service (3 orderer process)
 2. Create a channel , join peers and send some invokes and queries
 3. Now we wanted to kick out the *orderer2.example.com* process from the orderer organization.
 Fetch the config block and remove the orderer2.example.com from the config block , calculate the difference and send a config update on the system channel (*testchainid*)
  4. Send a config update, however the config update with an error.

Expected: Config update should happen and ordere2.example.com should be removed from the system channel *testchainid*

Gist of error logs:
{code:java}
peer channel update -f config_update_in_envelope.pb -c $CHANNEL_NAME -o orderer0.example.com:7050 --tls true --cafile $ORDERER_CA
2018-02-09 21:41:20.414 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-09 21:41:20.414 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-09 21:41:20.417 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
2018-02-09 21:41:20.418 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2018-02-09 21:41:20.418 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2018-02-09 21:41:20.419 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP
2018-02-09 21:41:20.419 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity
2018-02-09 21:41:20.420 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A95060A0A4F7264657265724D535012...6C2F4F7264657265722F41646D696E73
2018-02-09 21:41:20.420 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: AD9EECA9E904C4018CE23B99A96AABB8DBCA1CFC77FCD6E6B7D0816AFE8BE748
2018-02-09 21:41:20.420 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP
2018-02-09 21:41:20.420 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity
2018-02-09 21:41:20.420 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP
2018-02-09 21:41:20.420 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity
2018-02-09 21:41:20.420 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0ACE060A1708021A060880ABF8D30522...5B93E74AD5B6F7DFD9CE768D8F1F9757
2018-02-09 21:41:20.420 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: F2782257EEBFC7033FDBC24D1123A62D560EBF16E7A230641DF85FB29FD9E31A
Error: got unexpected status: BAD_REQUEST -- error authorizing update: error validating DeltaSet: policy for [Value]  /Channel/OrdererAddresses not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining
Usage:
  peer channel update [flags]

Flags:
  -c, --channelID string   In case of a newChain command, the channel ID to create.
  -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint
      --clientauth                          Use mutual TLS when communicating with the orderer endpoint
      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint
      --logging-level string                Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
      --tls                                 Use TLS when communicating with the orderer endpoint
  -v, --version                             Display current version of fabric peer server
{code}
 

Gist ordere0.example.com logs: (enclosed the full logs for reference)
{code:java}
^[[36m2018-02-09 21:41:20.424 UTC [cauthdsl] func2 -> DEBU e49^[[0m 0xc420c060d0 identity 0 does not satisfy principal: This identity is not an admin
^[[36m2018-02-09 21:41:20.424 UTC [cauthdsl] func2 -> DEBU e4a^[[0m 0xc420c060d0 principal evaluation fails
^[[36m2018-02-09 21:41:20.424 UTC [cauthdsl] func1 -> DEBU e4b^[[0m 0xc420c060d0 gate 1518212480424667706 evaluation fails
^[[36m2018-02-09 21:41:20.424 UTC [policies] Evaluate -> DEBU e4c^[[0m Signature set did not satisfy policy /Channel/Orderer/OrdererOrg/Admins
^[[36m2018-02-09 21:41:20.424 UTC [policies] Evaluate -> DEBU e4d^[[0m == Done Evaluating *cauthdsl.policy Policy /Channel/Orderer/OrdererOrg/Admins
^[[36m2018-02-09 21:41:20.424 UTC [policies] func1 -> DEBU e4e^[[0m Evaluation Failed: Only 0 policies were satisfied, but needed 1 of [ OrdererOrg.Admins ]
^[[36m2018-02-09 21:41:20.424 UTC [policies] Evaluate -> DEBU e4f^[[0m Signature set did not satisfy policy /Channel/Orderer/Admins
^[[36m2018-02-09 21:41:20.424 UTC [policies] Evaluate -> DEBU e50^[[0m == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Orderer/Admins
^[[33m2018-02-09 21:41:20.424 UTC [orderer/common/broadcast] Handle -> WARN e51^[[0m [channel: testchainid] Rejecting broadcast of config message from 172.18.0.18:38768 because of error: error authorizing update: error validating DeltaSet: policy for [Value]  /Channel/OrdererAddresses not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining
^[[36m2018-02-09 21:41:20.424 UTC [orderer/common/server] func1 -> DEBU e52^[[0m Closing Broadcast stream
^[[36m2018-02-09 21:41:20.426 UTC [grpc] Printf -> DEBU e53^[[0m transport: http2Server.HandleStreams failed to read frame: read tcp 172.18.0.17:7050->172.18.0.18:38768
{code}",,bmos299,denyeart,jyellick,mastersingh24,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/18 9:50 AM;Ratnakar;block_events.tar;https://jira.hyperledger.org/secure/attachment/14568/block_events.tar","10/Feb/18 6:57 AM;Ratnakar;orderer0_example_com.txt;https://jira.hyperledger.org/secure/attachment/14565/orderer0_example_com.txt","12/Feb/18 9:41 AM;Ratnakar;orderer_logs.tar;https://jira.hyperledger.org/secure/attachment/14566/orderer_logs.tar","12/Feb/18 9:42 AM;Ratnakar;sys_channel_latest_config_orderer2.pb;https://jira.hyperledger.org/secure/attachment/14567/sys_channel_latest_config_orderer2.pb",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywxj:",,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,jyellick,mastersingh24,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/18 7:13 AM;jyellick;Are you certain you are signing this with an ordering admin? From the log:

>  identity 0 does not satisfy principal: This identity is not an admin;;;","10/Feb/18 7:25 AM;Ratnakar;I am not signing with the ordering admin.

My assumption is that *peer channel update*  command will take care of signing with orderer admin
{code:java}
peer channel update -f config_update_in_envelope.pb -c ""testchainid"" -o orderer0.example.com:7050 --tls true --cafile $ORDERER_CA{code};;;","10/Feb/18 7:28 AM;Ratnakar;Here are my env variables in the container where I executed the above cli command
{code:java}
        CORE_PEER_LOCALMSPID=""OrdererMSP""
	CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
	CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp{code};;;","10/Feb/18 7:52 AM;jyellick;[~Ratnakar] According to the environment variables, you are signing as an orderer, not as an orderer admin.  Please try using an identity like: {{crypto-config/ordererOrganizations/example.com/users/Admin\@example.com/}} instead, as you would for instance in enabling the orderer capabilities.;;;","10/Feb/18 8:30 AM;Ratnakar;[~jyellick] Thats my bad.

Now after pointing to the right MSP config path , I could successfully update the config block. I verified the latest config block has deleted *orderer2.example.com* address
{code:java}
                  ""OrdererAddresses"": {
                    ""mod_policy"": ""/Channel/Orderer/Admins"",
                    ""value"": {
                      ""addresses"": [
                        ""orderer0.example.com:7050"",
                        ""orderer1.example.com:7050""
                      ]
                    },
                    ""version"": ""1""
                  }
{code}
However I could still send the transaction over this orderer *orderer2.example.com.*
{code:java}
peer chaincode invoke -o orderer2.example.com:7050  --tls --cafile $ORDERER_CA -C mychannel -n mycc -c '{""Args"":[""invoke"",""a"",""b"",""10""]}'
....
2018-02-09 23:24:14.314 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 00b Chaincode invoke successful. result: status:200
2018-02-09 23:24:14.314 UTC [main] main -> INFO 00c Exiting.....
{code}
Shouldn't this be failing ?;;;","12/Feb/18 3:04 AM;scottz;Interesting turn of events...

1. Regarding [~Ratnakar] changing the signature to use an orderer config admin to get it to work... was [~rohitadivi] using orderer admin to change the batchsize in his tests successfully (in which case we should create a different bug)? Or was he using orderer config admin already?

2. When the config update to remove the orderer2 was accepted by the other orderers, then did orderer2 receive the delivered block? Should orderer2 lose its connection to the kafkas (like the peers of a deleted org would lose their connections to the orderers)? I think that is probably what needs to happen (but did not) - which is the first problem. That way, the broadcast client and deliver clients(peers) could find out because it might lose its connection to the orderer2 (because service-unavailable) and could connect to another orderer.

3. What happens when you ADD another orderer? Can your client broadcast transactions and peers receive/deliver them through the new orderer?;;;","12/Feb/18 9:53 AM;Ratnakar;Discussed with [~bmos299], As per his suggestion would like to provide few more details.

In the CLI flow,  the transaction proposal response from the peer would be sent to the orderer given in the command (connected with option *-o <orderer_name>*). we see the Block height is increased when the transaction is sent to the *ordere2.example.com* which has been deleted though a config update.

To make sure, we stopped the orderer processes *orderer0.example.com* and *orderer1.example.com* aswell ( using command _docker stop orderer0.example.com orderer1.example.com_ ) and sent another invoke transaction to *ordere2.example.com* and observed successful block commit. 
 NOTE: Validated the transaction using query aswell channel delivery service filtered block.

Enclosed orderer system channels latest config block [^sys_channel_latest_config_orderer2.pb] , the orderers logs [^orderer_logs.tar] and event blocks information [^block_events.tar]

Gist of orderer2 logs after the above successful transation.
{code:java}
kNumber=[13]
2018-02-12 00:24:53.430 UTC [orderer/commmon/multichannel] commitBlock -> DEBU a5a [channel: mychannel] Wrote block 13
2018-02-12 00:24:53.431 UTC [fsblkstorage] waitForBlock -> DEBU a5b Came out of wait. maxAvailaBlockNumber=[13]
2018-02-12 00:24:53.431 UTC [fsblkstorage] Next -> DEBU a5c Initializing block stream for iterator. itr.maxBlockNumAvailable=13
2018-02-12 00:24:53.431 UTC [fsblkstorage] newBlockfileStream -> DEBU a5e newBlockfileStream(): filePath=[/var/hyperledger/production/orderer/chains/mychannel/blockfile_000000], startOffset=[105296]
2018-02-12 00:24:53.431 UTC [fsblkstorage] waitForBlock -> DEBU a5d Came out of wait. maxAvailaBlockNumber=[13]
2018-02-12 00:24:53.431 UTC [fsblkstorage] Next -> DEBU a5f Initializing block stream for iterator. itr.maxBlockNumAvailable=13
2018-02-12 00:24:53.431 UTC [fsblkstorage] waitForBlock -> DEBU a60 Came out of wait. maxAvailaBlockNumber=[13]
2018-02-12 00:24:53.432 UTC [fsblkstorage] Next -> DEBU a62 Initializing block stream for iterator. itr.maxBlockNumAvailable=13
2018-02-12 00:24:53.432 UTC [fsblkstorage] newBlockfileStream -> DEBU a63 newBlockfileStream(): filePath=[/var/hyperledger/production/orderer/chains/mychannel/blockfile_000000], startOffset=[105296]
2018-02-12 00:24:53.432 UTC [fsblkstorage] newBlockfileStream -> DEBU a61 newBlockfileStream(): filePath=[/var/hyperledger/production/orderer/chains/mychannel/blockfile_000000], startOffset=[105296]
2018-02-12 00:24:53.432 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a64 Remaining bytes=[4779], Going to peek [8] bytes
2018-02-12 00:24:53.432 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a65 Returning blockbytes - length=[4777], placementInfo={fileNum=[0], startOffset=[105296], bytesOffset=[105298]}
2018-02-12 00:24:53.432 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a67 blockbytes [4777] read from file [0]
2018-02-12 00:24:53.432 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a66 Remaining bytes=[4779], Going to peek [8] bytes
2018-02-12 00:24:53.432 UTC [common/deliver] deliverBlocks -> DEBU a68 [channel: mychannel] Delivering block for (0xc4203ad540) for 172.18.0.6:40202
2018-02-12 00:24:53.432 UTC [fsblkstorage] waitForBlock -> DEBU a6a Going to wait for newer blocks. maxAvailaBlockNumber=[13], waitForBlockNum=[14]
2018-02-12 00:24:53.432 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a69 Returning blockbytes - length=[4777], placementInfo={fileNum=[0], startOffset=[105296], bytesOffset=[105298]}
2018-02-12 00:24:53.433 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a6b blockbytes [4777] read from file [0]
2018-02-12 00:24:53.433 UTC [common/deliver] deliverBlocks -> DEBU a6c [channel: mychannel] Delivering block for (0xc4204c7860) for 172.18.0.2:39298
2018-02-12 00:24:53.433 UTC [fsblkstorage] waitForBlock -> DEBU a6d Going to wait for newer blocks. maxAvailaBlockNumber=[13], waitForBlockNum=[14]
2018-02-12 00:24:53.433 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a6e Remaining bytes=[4779], Going to peek [8] bytes
2018-02-12 00:24:53.433 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a6f Returning blockbytes - length=[4777], placementInfo={fileNum=[0], startOffset=[105296], bytesOffset=[105298]}
2018-02-12 00:24:53.433 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU a70 blockbytes [4777] read from file [0]
2018-02-12 00:24:53.434 UTC [common/deliver] deliverBlocks -> DEBU a71 [channel: mychannel] Delivering block for (0xc4202cb4e0) for 172.18.0.8:36370
2018-02-12 00:24:53.434 UTC [fsblkstorage] waitForBlock -> DEBU a72 Going to wait for newer blocks. maxAvailaBlockNumber=[13], waitForBlockNum=[14]
{code}
 ;;;","12/Feb/18 1:54 PM;jyellick;The configuration parameter you changed, {{OrdererAddresses}} is an enumeration of orderer which clients and peers should use to connect to ordering.  It is not an exhaustive list of orderers, and adding and removing nodes from this list has no impact on their participation in ordering.  This is a deliberate feature by design, as it may be desirable to configure hot spare orderers, or to remove an orderer from the list for maintenance, recovery etc.

To disconnect an orderer from Kafka, standard Kafka access control measures may be leveraged, such as TLS CRLs, or firewalling.  If the orderer system and its key material were compromised, its certificate should be added to the orderer's MSP's CRL.;;;","12/Feb/18 6:48 PM;mastersingh24;As [~jyellick] commented above, this is not a bug.;;;","12/Feb/18 10:29 PM;bmos299;[~jyellick] agreed.  If the config parm changed was only *OrdererAddresses* than that is not revoking, or removing this orderer from the channel from a security perspective.   Actually it is a nice design feature.;;;","15/Feb/18 1:54 AM;denyeart;[~jyellick] If not a bug, anything else needed here?  Doc update, etc?;;;","15/Feb/18 3:35 AM;Ratnakar;Raised another bug [FAB-8240|https://jira.hyperledger.org/browse/FAB-8240] to address the doc update;;;",,,,,,,,,,,
"Document format of ""Chaincode for Operators"" is broken",FAB-8194,27603,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,10/Feb/18 7:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Feb/18 9:46 AM,v1.1.0-alpha,,,,,,fabric-docs,,,,0,,,,,,"The document format is broken in fabric/docs/source/chaincode4noah.rst.
The usage of CLI is not displayed correctly.
https://github.com/hyperledger/fabric/blob/master/docs/source/chaincode4noah.rst#cli

The format should be updated.
",fabric 978b4f244b8a5b63891d67bc8c03b49f521595d6,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywxr:",,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Feb/18 5:49 AM;yuki-kon;CR is posted here: https://gerrit.hyperledger.org/r/#/c/17813/;;;",,,,,,,,,,,,,,,,,,,,,,
Loading embedded certs from configuration file is broken,FAB-8195,27604,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,10/Feb/18 10:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Feb/18 1:35 PM,,,,,,,,,,,0,,,,,,The last commit that properly load embedded certs is 5f54093a6ab3ff48bb6a640d5f540926c4179385 .,,aleksandar.likic,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzun:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
If Docker fails make all will fail until manually resolved,FAB-8197,27606,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,ChristopherFerris,satchell,satchell,10/Feb/18 4:49 PM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,Future,,,fabric-build,,,,0,,,,,,"A new developer checking out fabric code for the first time will follow the documentation at [http://hyperledger-fabric.readthedocs.io/en/release/dev-setup/build.html]

If they have not configured their user into the Docker group, the build will fail:
{code:java}
~/go/src/github.com/hyperledger/fabric$ make all
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.26/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
Makefile:245: recipe for target 'build/docker/gotools' failed
make: *** [build/docker/gotools] Error 126
{code}
Once this occurs, even after Docker is fixed, make all will continue to fail indefinitely with the following error:
{code:java}
~/go/src/github.com/hyperledger/fabric$ cp build/docker/gotools/bin/protoc-gen-go 
build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
cp: cannot stat 'build/docker/gotools/bin/protoc-gen-go': No such file or directory
Makefile:263: recipe for target 'build/image/ccenv/payload' failed
make: *** [build/image/ccenv/payload] Error 1
{code}
The user must manually delete the gotools folder and then run make all in order for it to be successful:
{code:java}
~/go/src/github.com/hyperledger/fabric$ rm -rf build/docker/gotools/
~/go/src/github.com/hyperledger/fabric$ make all
{code}",,ChristopherFerris,denyeart,mastersingh24,sanchezl,satchell,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywy7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,sanchezl,satchell,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 4:10 AM;denyeart;[~lehors] This looks like the kind of challenge you enjoy... could you take a look and provide your opinion?;;;","16/Feb/18 6:09 AM;sanchezl;[~satchell], {{make clean all}} would be appropriate in this situation.

It will never be perfect, as the Docker images are not files that {{make}} can examine the existence of or the timestamp on. There are many situations where you will just have to clean the build/images directory to get your docker image rebuilt.

[~lehors]: That said, we might be able improve this a little bit based on the pattern we use for the other docker images:
 # Move the recipe of the {{build/docker/gotools}} target to a new {{build/docker/gotools/$(DUMMY)}} target and add a final {{touch @}} command to the recipe.
 # Make the {{build/docker/gotools}} target depend on the {{build/docker/gotools/$(DUMMY)}} and leave it's recipe empty.

With these changes, the {{build/docker/gotools/$(DUMMY)}} file would of not been created the first time around and the {{build/docker/gotools/$(DUMMY)}} target would of been re-run to create the gotools image.;;;","23/Feb/18 4:10 AM;mastersingh24;Note:  we need to cleanup the overall make process in any case ... we should be able to use the go toolchain locally to build things.;;;","06/Apr/18 5:33 AM;ChristopherFerris;[~sykesm] did your cleanup of gotools address this?;;;","10/Apr/18 9:32 PM;sykesm;[~ChristopherFerris] I don't believe any of my changes would resolve this as I didn't change the docker targets. The go tools are built for native execution and, to preserve previous behavior, installed to $GOPATH/bin (with all of the assumptions around a single path element in GOPATH). The changes simply moved the makefile for the tools out of the gotools directory and to a top level file that's included into the Makefile.

I agree with [~mastersingh24] that we should do what we can to move to a local build process that is less dependent on docker.;;;","06/May/18 6:54 AM;ChristopherFerris;This is no longer relevant;;;",,,,,,,,,,,,,,,,,
"PTE testcase: marbles02 query (refer to 6813, 8192)",FAB-8199,27609,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,11/Feb/18 1:07 AM,28/Nov/18 9:04 AM,28/Oct/23 3:02 AM,05/Oct/18 11:07 PM,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,"(To be added to Daily test suite. Will be a part of FAB-8192 shell script)
Test name: Performance test: channel events, 2 channels
 Component: Performance test
 Description: performance events per channel with couchDB
     chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
     transactions: 4 threads, each thread sends 1000 queries concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Event:
          service: channel
          listener: block
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8192,FAB-6813,,,,,,,,,,,,,,,,,,,,,,,,"13/Jun/18 10:42 AM;suryalnvs;FAB-8192-4i-FAB-8199-4q.log;https://jira.hyperledger.org/secure/attachment/15096/FAB-8192-4i-FAB-8199-4q.log",,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzywyv:",,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"15/Feb/18 3:54 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17917/;;;",,,,,,,,,,,,,,,,,,,,,,
"PTE testcase: marbles02 rich query - queryMarblesByOwner (refer to 6813,  8192)",FAB-8200,27610,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,11/Feb/18 1:09 AM,28/Nov/18 9:04 AM,28/Oct/23 3:02 AM,05/Oct/18 11:07 PM,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,"(To be added to Daily test suite. Will be a part of FAB-8192 shell script)
Test name: Performance test: channel events, 2 channels
 Component: Performance test
 Description: performance events per channel with couchDB
     chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
     transactions: 4 threads, each thread sends 1000 query marbles by owner concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Event:
          service: channel
          listener: block
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8192,FAB-6813,,,,,,,FAB-12857,,,,,,,,,,,,,,,,,"07/Jun/18 11:51 AM;suryalnvs;FAB-8192-4i-FAB-8200-4q.log;https://jira.hyperledger.org/secure/attachment/15065/FAB-8192-4i-FAB-8200-4q.log",,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzywz3:",,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"15/Feb/18 3:55 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17917/;;;","07/Jun/18 11:52 AM;suryalnvs;Tested at Commit level 186ae9f;;;",,,,,,,,,,,,,,,,,,,,,
"PTE testcases: marbles02 rich query - queryMarbles (refer to 6813, 8192)",FAB-8201,27611,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,11/Feb/18 1:09 AM,28/Nov/18 9:04 AM,28/Oct/23 3:02 AM,05/Oct/18 11:07 PM,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,"(To be added to Daily test suite. Will be a part of FAB-8192 shell script)
Test name: Performance test: channel events, 2 channels
 Component: Performance test
 Description: performance events per channel with couchDB
     chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
     transactions: 4 threads, each thread sends 1000 queryMarbles (docType and owner) concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Event:
          service: channel
          listener: block

Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8192,FAB-6813,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/18 11:52 AM;suryalnvs;FAB-8192-4i-FAB-8201-4q.log;https://jira.hyperledger.org/secure/attachment/15066/FAB-8192-4i-FAB-8201-4q.log",,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzywzb:",,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"15/Feb/18 3:55 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17917/;;;","08/Jun/18 4:11 AM;suryalnvs;Tested at Commit level 186ae9f;;;",,,,,,,,,,,,,,,,,,,,,
Certificate files and keys not copied to the respective container,FAB-8202,27612,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,Amjadnz,Amjadnz,11/Feb/18 6:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Feb/18 11:21 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"Using node SDK the following steps have been used.

Create Channel - Success
 Join Channel - Success
 Install Chaincode - success
 Instantiate Chaincode - Failure.

*PEER LOG:*

*peer0.dfm.local.ubn.ae    |* 2018-02-10 21:34:48.231 UTC [dev-peer0.dfm.local.ubn.ae-accountsmaster-v0] func2 -> INFO 393 Error starting AccountMasters chaincode: Error trying to read file content : open : no such file or directory
 2018-02-10 21:34:48.230 UTC [shim] userChaincodeStreamGetter -> ERRO 001 Error trying to read file content : open : no such file or directory

After Investigating the issue - we have come to 3 parts

1. when the container is getting initialzed - the follworing logs are seen in logs

 

peer0.dfm.local.ubn.ae    | FROM hyperledger/fabric-baseos:x86_64-0.3.2
 peer0.dfm.local.ubn.ae    | ADD binpackage.tar /usr/local/bin
 peer0.dfm.local.ubn.ae    | LABEL org.hyperledger.fabric.chaincode.id.name=""accountsmaster"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.chaincode.id.version=""v0"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.chaincode.type=""GOLANG"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.version=""1.0.5"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.base.version=""0.3.2""
 peer0.dfm.local.ubn.ae    | ENV CORE_CHAINCODE_BUILDLEVEL=1.0.5
 peer0.dfm.local.ubn.ae    | ENV CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer.crt
 peer0.dfm.local.ubn.ae    | COPY peer.crt /etc/hyperledger/fabric/peer.crt

 

Two critical params are missing to to be set ""tls.client.key.path"" and ""tls.client.cert.path"", And they are not getting set in the Container creating time

2. the fabric path does not contain all the artifacts (crts and keys)
 It contains on only 1 file (peer.crt).

3. And the most important : The current chaincode is vendor support enabled (I have a vendor folder within the chaincode package itself)  - the moment I remove the vendor folder and comment out code related to vendor packages - the chaincode instantiates properly.","MAC i7

Client:

 Version:      17.06.2-ce
API version:  1.30
Go version:   go1.8.3
Git commit:   cec0b72
Built:        Tue Sep  5 20:12:06 201
OS/Arch:      darwin/amd64

 Server:
Version:      17.06.2-ce
API version:  1.30 (minimum version 1.12)
Go version:   go1.8.3
Git commit:   cec0b72
Built:        Tue Sep  5 19:59:19 2017
OS/Arch:      linux/amd64
Experimental: true

 

Fabric 1.0.5",Amjadnz,denyeart,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzywzj:",,,,,,,,,,,,,,,,,,,,,Amjadnz,denyeart,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/18 3:29 AM;Clayton Sims;Bret can you triage this one.;;;","14/Feb/18 6:56 AM;harrisob@us.ibm.com;Looks like an issue with the Chaincode container;;;","14/Feb/18 7:00 AM;Amjadnz;Hi Bret,

I did another round of tests also to confirm if the chaincode is fine.
It looks okay if I do an instantiation manually without nodesdk.  Instantiation with vendor-ed package is the issue.

However what I need to check is the vendor-ed packages area all on hyperledger fabric 1.05. Specially the hyperledger shim version.
This was pointed on the rocket chat. Once those tests are done would update this issue log.

Thanks.;;;","15/Feb/18 1:43 AM;denyeart;[~yacovm] I believe you have worked on chaincode container tls.  Can you provide your opinion on whether there is a defect here?;;;","15/Feb/18 1:54 AM;Amjadnz;Thanks People - I manage to resolve it after following Yacov's suggestion. The chaincode was govendored with an older version of fabric and when I cleared all -
 * downloaded a fresh copy of fabric 1.0.5
 * set my GOPATH to the correct new FABRIC
 * govendor +init and external.
 * copy the vendor folder to my chaincode
 * Did SDK create-channel, join-channel, install chaincode process - success
 * Did SDK instantiate-chaincode - this also created the instances of the chaincode images and I could query and invoke too as a test.

I would finish my remaining tasks and if nothing found - would close this from my side.;;;","15/Feb/18 7:47 AM;yacovm;[~denyeart] isn't this a v1.0.x item? why is this marked v1.1 ? His logs clearly imply he's running v1.0.x and I told him in rocket chat that I speculate he is vendoring a v1.1 shim into a v1.0.x peer which can't work.;;;","19/Feb/18 11:21 PM;denyeart;Ok, I will close as it looks like user error.;;;",,,,,,,,,,,,,,,,
Update minimum versions of Node.js and npm,FAB-8204,27615,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,11/Feb/18 8:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Feb/18 3:18 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,";11/Feb/18 8:41 PM;mastersingh24;300",300,0,300,100%,300,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx07:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Feb/18 8:41 PM;mastersingh24;https://gerrit.hyperledger.org/r/17769;;;",,,,,,,,,,,,,,,,,,,,,,
PTE testcase: multihost openstack TPS LevelDB,FAB-8205,27616,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,tongliofcary,scottz,scottz,12/Feb/18 2:13 AM,30/Jul/19 10:46 AM,28/Oct/23 3:02 AM,30/Jul/19 10:46 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"TPS test (default network; refer to PTE/CITest/scenarios, similarities to FAB-3807-4i.sh or FAB-8192/8199). Use leveldb, stress mode, with 4 threads, 2 peers per 2 orgs, plus use 2 chans instead of 1, but replace NL with ATD, Cello, openstack multihost (maybe use 7 servers: 2 peers per host, 4 hosts for sharing orderers/kafkas/zks, 1 for pte cli). Use samplecc node chaincode. Variable payload size. Batchsize=500",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzyx0f:",,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE testcase: multihost openstack tps couchdb richq,FAB-8206,27617,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,tongliofcary,scottz,scottz,12/Feb/18 2:16 AM,30/Jul/19 11:34 AM,28/Oct/23 3:02 AM,30/Jul/19 11:34 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"TPS test, similar to FAB-8205, but using marbles02 GO chaincode, couchdb, indexing, rich queries. (default network, refer to PTE/CITest/scenarios, similarities to FAB-3807-4i.sh or FAB-8192/8199). Use stress mode, with 4 threads, 2 peers per 2 orgs, plus use 2 chans instead of 1, but replace NL with ATD, Cello, openstack multihost (maybe use 7 servers: 2 peers per host, 4 hosts for sharing orderers/kafkas/zks, 1 for pte cli). Variable payload size. Batchsize=500.",,mastersingh24,scottz,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzyx0n:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/18 12:30 PM;tongliofcary;We've run the test for awhile and sent the report.;;;","30/Jul/19 11:34 AM;mastersingh24;not using PTE for this;;;",,,,,,,,,,,,,,,,,,,,,
PTE testcase to stress peers: 1 chan 2 org x 64 = 128 peers,FAB-8207,27618,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,dongming,scottz,scottz,12/Feb/18 2:18 AM,30/Jul/19 11:35 AM,28/Oct/23 3:02 AM,30/Jul/19 11:35 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"stress peers/gossip

couchdb

1 chan

2 orgs, 64 peers per org, all peers join all channels

1 chaincode

2 endorsers policy sent to 2 peers per org (4 total)

4 orderers, 4 kafkas, 3 zks, TLS, filtered block event service,  batch size 500, timeout 2s, ATD, Cello, openstack multihost.

Transactions: constant rate traffic with 64 threads sending 1 TX per sec to two peers of each org, distributed among peers by channels sending to different peers; payload size=1k for samplecc GO

 

TODO LATER we can rerun and stop/start peers; join a new peer to an existing org hours later in middle of test; add a new org and join its peers.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzyx0v:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:35 AM;mastersingh24;Not using PTE for this;;;",,,,,,,,,,,,,,,,,,,,,,
"PTE testcase 64 peers, 2 peers X 32 orgs, 4 orgs per channel, 8 chans",FAB-8208,27619,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,scottz,scottz,12/Feb/18 2:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Jun/18 12:16 AM,,,,v1.1.0,,,fabric-quality,,,,0,SystemTestcase,,,,,"SolutionMix1 (many peers per org, heavily load peer)

Transactions: constant PTE traffic with 32 threads sending 2 TX per sec to the first peer of each org, variable payload size (1k-2k) for samplecc golang

Network: 8 channels, 32 org, 64 peers, 4 org per channel, 2 peers per org, 8 hosts, max 4 peers/host, batchsize 500, timeout 2s, filtered blocks event service. 3 orderers, 5 kafkas, 3 zks. with ATD, Cello, openstack multihost. TLS, goleveldb.

See also the System_Performance tab and the Multihost Layouts tab in the SVT testcase spreadsheet: [https://docs.google.com/spreadsheets/d/1E3-PXchMOWm6DC5xq6RN-NT2YmngKNcG_zQqW0ireY4/edit#gid=1788257737]",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8584,FAB-10504,,,,,,,,,,,,,,,,"17/Mar/18 12:11 AM;suryalnvs;FAB-8208-64i-03162018-055920.tgz;https://jira.hyperledger.org/secure/attachment/14790/FAB-8208-64i-03162018-055920.tgz","17/Mar/18 12:12 AM;suryalnvs;org32p64.yml;https://jira.hyperledger.org/secure/attachment/14791/org32p64.yml",,,,,,,,,,,,,,,,,,,,,,,,FAB-10081,,,,,,,,,"1|hzyx13:",,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,true,"25/Feb/18 11:42 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/18361/ = the first draft of this testcase with 64 peers.|https://gerrit.hyperledger.org/r/#/c/18361/]

And later we can add couch, join peers to multiple channels, increase the threads from 64, and possibly another PTE engine, and more. And modify the testcase description here to accurately reflect the test.;;;","17/Mar/18 12:09 AM;suryalnvs;Successfully ran this test for 12hrs on 8 hosts (openstack 16gb RAM - 160gb hard disk) using rc1 images. Attaching the PTE logs and cello configuration file for 32 orgs - 64 peers network.;;;","01/Jun/18 1:18 AM;scottz;Edited title, to return as it was, to reflect the 64 peer test that we did in v1.1 on OSI host machines.

We are creating a new testcase JIRA task for the 128 peer test, to be run in the new cloud environment.;;;","07/Jun/18 11:02 PM;scottz;Assigned to Surya, who will run this in the new cloud environment for v1.2.;;;",,,,,,,,,,,,,,,,,,,
PTE testcase to stress orderers: 64 chan 64 orgs X 2 = 128 peers,FAB-8209,27620,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,dongming,scottz,scottz,12/Feb/18 2:28 AM,30/Jul/19 11:35 AM,28/Oct/23 3:02 AM,30/Jul/19 11:35 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"SolutionMix2 (many orgs, many channels) 

stress orderers, kafka, connections

couchdb

64 chan

64 orgs, 2 peers per org, all peers join all channels

2 chaincodes, but only one per channel.

2 endorsers policy sent to 2 peers per org (4 total)

4 orderers, 4 kafkas (MAY NEED MORE), 3 zks, TLS, channel event service,  batch size 500, timeout 2s, ATD, Cello, openstack multihost.

Transactions: constant rate traffic with 64 threads sending 1 TX per sec to two peers of each org, distributed among peers by channels sending to different peers; payload size=1k. 32 threads/channels use samplecc GO, and other 32 use samplecc NODE JS.

 

See also the System_Performance tab and the Multihost Layouts tab in the SVT testcase spreadsheet: [https://docs.google.com/spreadsheets/d/1E3-PXchMOWm6DC5xq6RN-NT2YmngKNcG_zQqW0ireY4/edit#gid=1788257737]

 

TODO LATER we can rerun and stop/start peers, orderers, kafkas.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzyx1b:",,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:35 AM;mastersingh24;not using PTE for this;;;",,,,,,,,,,,,,,,,,,,,,,
clarify removing chaincode images on upgrades and aborted upgrade,FAB-8210,27621,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,scottz,scottz,12/Feb/18 3:40 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,27/Feb/18 1:32 AM,,,,,,,fabric-docs,,,,0,,,,,,"In the upgrade doc http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-fabric-ca-binary ,

in section ""Update Peer Binaries"", near sentence `Next, remove all Docker chaincode images.`,

I think we might want to add some more words explaining why it is necessary to delete the images (The chaincode container will fail to connect, maybe explaining a reason or maybe not).

But it is more complicated than that, because my real objective is, per FAB-7915 , for those new words to also mention the same requirement - i.e. to remove the chaincode images - when changing peer binary version from v1.1 DOWN to v1.0.x (when backing down / aborting an upgrade, which is allowed if done before the config updates (PONR)).

We tested this; the chaincode container would fail to connect; chaincode container logs will show `Error starting Simple chaincode: error trying to read file content : open : no such file or directory`

I am not sure if this location in the identified doc is the correct place for adding error messages and detailed explanations for troubleshooting, but hopefully a short explanation could be added; otherwise, is there somewhere else to put such details?",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8152,,,,,,,,FAB-7915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyx1j:",,,,Unset,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 1:32 AM;scottz;The upgrade doc [http://joestaging-fabric.readthedocs.io/en/latest/upgrade_your_network_components_tutorial.html] clearly states the steps to remove chaincode containers and images during upgrade. It does not even discuss the aborted upgrade scenario, but I think one would follow the same steps (but using the target release to be the lower/downgraded release) and thus the documentation is sufficient. I am willing to close this.;;;",,,,,,,,,,,,,,,,,,,,,,
[upgrade] Document the error shown in v1.0 peer when it crashes on a channel after enabling the capabilities during upgrade,FAB-8213,27625,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MattHamilton,suryalnvs,suryalnvs,12/Feb/18 8:06 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 8:51 PM,,,,v1.1.0,,,fabric-docs,,,,0,Documentation,,,,,Document the error shown in v1.0 peer crash after upgrading the rest of the network to v1.1 and enabling the capabilities,,denyeart,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8080,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx2f:",,,,,,,,,,,,,,,,,,,,,denyeart,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/18 8:51 PM;denyeart;I've confirmed this is in the upgrade doc CR:

[https://gerrit.hyperledger.org/r/#/c/18351/]

 

Closing.;;;",,,,,,,,,,,,,,,,,,,,,,
Endorsement policy testing in v1.1.0-preview -- test document shared,FAB-8214,27628,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,nharshita,nharshita,12/Feb/18 4:57 PM,23/Jan/20 7:26 AM,28/Oct/23 3:02 AM,23/Jan/20 7:26 AM,,,,,,,,,,,1,stale-item,,,,,"Endorsement Policy test document [^Endorsement_policy_verification_testcases_v1.1.0-preview.pdf]

Test cases include the simulation of insufficient proposal responses (simulated with the help of passing target peers or stopping endorser containers) and RW sets mismatch in those proposals (simulated with the help of peer file system tampering and non-deterministic chaincode)

Tests were performed on fabric, fabric-ca and fabric-samples/balance-transfer v1.1.0-preview version, with the attached patch [^endorse_test_code_changes_v1.1.0-preview.txt]

 

Patch intention: is to pass peer names from the client side and to prove that if RW Sets differs from endorsers (and if there is no check at client side for RWset equality), state changes are applied based on the last endorser's RWset.

This patch is useful, especially for Objective 2: Policy where endorsement from one of the two organizations is sufficient.",,MaddaliPadmaja,nharshita,sykesm,vigneswaran.r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/18 4:49 PM;nharshita;Endorsement_policy_verification_testcases_v1.1.0-preview.pdf;https://jira.hyperledger.org/secure/attachment/14569/Endorsement_policy_verification_testcases_v1.1.0-preview.pdf","12/Feb/18 4:48 PM;nharshita;endorse_test_code_changes_v1.1.0-preview.txt;https://jira.hyperledger.org/secure/attachment/14570/endorse_test_code_changes_v1.1.0-preview.txt",,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyx33:",,,,Unset,,,,,,Unset,,,,,,,,,,,MaddaliPadmaja,nharshita,sykesm,vigneswaran.r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:26 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - Create Release tests CI jobs to run byfn samples,FAB-8219,27637,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,13/Feb/18 12:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 12:36 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,Create Release tests CI jobs to run byfn samples pulling published docker images and binaries,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx4f:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node support to node 8.9.4,FAB-8223,27647,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,harrisob@us.ibm.com,harrisob@us.ibm.com,13/Feb/18 4:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 4:51 AM,,,,v1.1.0,,,fabric-sdk-node,,,,0,,,,,,"now that node.js engine LTS has been updated from 6.9 to 8.9, we should upgrade the chaincode support accordingly.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx5r:",,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node SDK 1.1 CI jobs to use 8.9.4,FAB-8224,27648,27647,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,harrisob@us.ibm.com,harrisob@us.ibm.com,13/Feb/18 4:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 4:50 AM,,,,,,,fabric-ci,,,,0,,,,,,"node.js has published new LTS with version 8.9.4, as a result the CI for node 8 runs should be upgraded to 8.9.4",,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8225,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx5z:",,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/18 5:07 AM;rameshthoomu;[~denyeart] ^^;;;","14/Feb/18 6:42 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17899/;;;",,,,,,,,,,,,,,,,,,,,,
Upgrade node chaincode 1.1 CI job and base image to use 8.9.4,FAB-8225,27649,27647,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,harrisob@us.ibm.com,harrisob@us.ibm.com,13/Feb/18 4:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 4:50 AM,,,,,,,fabric-ci,,,,0,,,,,,"node.js has published new LTS with version 8.9.4, as a result the CI for node 8 runs should be upgraded to 8.9.4",,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8224,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx67:",,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/18 5:07 AM;rameshthoomu;[~denyeart] ^^;;;","14/Feb/18 6:42 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17899/;;;",,,,,,,,,,,,,,,,,,,,,
Orderer does not import consortia TLS CA certs,FAB-8226,27650,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,jyellick,jyellick,13/Feb/18 4:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Feb/18 6:00 AM,v1.1.0-alpha,,,v1.1.1,,,fabric-orderer,,,,0,,,,,,"If an orderer is bootstrapped, requiring mutual TLS, then it only recognizes orderer client TLS certs as valid.  This is because the update code only inspects the ""Orderer"" and ""Application"" config groups, and ignores the organization definitions under the consortium definitions.

Because of this bug, if mutual TLS is enabled, consortium org clients will be unable to create any channels (if channels with that org have not already been created).",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx6f:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Feb/18 5:06 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/17815/;;;",,,,,,,,,,,,,,,,,,,,,,
"Document ""add an org to a channel"" script",FAB-8228,27652,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joe-alewine,joe-alewine,joe-alewine,13/Feb/18 6:40 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 7:06 AM,,,,v1.1.1,,,fabric-docs,,,,0,must-fix,,,,,FAB-7540 created scripts to make the tutorial for adding an org to a channel simpler. This now needs to be documented.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyx6v:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Feb/18 8:08 AM;joe-alewine;In review: https://gerrit.hyperledger.org/r/#/c/17967/;;;",,,,,,,,,,,,,,,,,,,,,,
"Test node.js SDK 1.0 for compatibility against 1.1 peer, orderer, ca",FAB-8230,27654,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,denyeart,denyeart,13/Feb/18 7:59 AM,30/Jul/19 11:42 AM,28/Oct/23 3:02 AM,30/Jul/19 11:42 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"For v1.1:

Run the SDK test suite from 1.0 against 1.1 server components.

 

For v1.2:

Run the SDK test suites from 1.0 and 1.1 against 1.2 server components.",,denyeart,jyellick,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7175,,,,,,,,FAB-8231,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzx05j:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/18 11:01 AM;scottz;Hopefully the necessity of doing this again for v1.2 will spur us to automate or at least provide script or documented test steps.;;;","16/May/18 10:50 AM;denyeart;[~AdnanChoudhury] [~scottz] since this item was in TODO state and fix version v1.2, I thought we'd use this for v1.2 testing and I updated the description accordingly.

If you want to switch this back to a v1.1 item, please open a corresponding item for v1.2.;;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,
"Test node.js SDK 1.1 for compatibility against 1.0 peer, orderer, ca",FAB-8231,27655,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,denyeart,denyeart,13/Feb/18 8:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/May/18 11:14 AM,,,,v1.1.1,,,fabric-quality,,,,0,release-planning-1.1,,,,,"Identify the 1.1 SDK tests that were relevant in 1.0 timeframe, and run them against 1.0 server components.",,denyeart,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7175,FAB-8230,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyx7b:",,,,,,,,,,,,,,,,,,,,,denyeart,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/18 11:13 AM;scottz;This is an invalid testcase, because the product does not support the upgrading of SDK first.

Both the CA and Fabric must be upgraded prior to SDK upgrade.;;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB Performance Test: 0.3 Million Query of 2-Field Rich Query,FAB-8239,27670,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,13/Feb/18 11:59 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jun/18 2:31 PM,,,,v1.2.0,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated

2)transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 0.3 million/4

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2

3) 1 million rich-queries of 2-field spread among 2 channels

+*Result*+:
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers and CouchDB containers",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8244,FAB-8695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/18 2:31 PM;AdnanChoudhury;resource_chart_fab-8239.html;https://jira.hyperledger.org/secure/attachment/15114/resource_chart_fab-8239.html",,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyxaf:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/18 2:17 PM;AdnanChoudhury;Changing this to 0.3 million Tx, will reopen and put data once 1 million is done.
 platform:

Ubuntu 14.04 64 bit, 4 CPU ( Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz) with 8 GB Memory, 80 GB spindle hard drive.

Fabric Version Tested:

hyperledger/fabric-tools                                                                                          latest                         d5e0cae2ab29        2 weeks ago         1.46GB

hyperledger/fabric-tools                                                                                          x86_64-1.2.0                   d5e0cae2ab29        2 weeks ago         1.46GB

nexus3.hyperledger.org:10001/hyperledger/fabric-tools                                                             stable                         d5e0cae2ab29        2 weeks ago         1.46GB

hyperledger/fabric-ccenv                                                                                          amd64-1.2.0-snapshot-156f39d   bb10b204ecc6        2 weeks ago         1.42GB

hyperledger/fabric-ccenv                                                                                          latest                         bb10b204ecc6        2 weeks ago         1.42GB

hyperledger/fabric-ccenv                                                                                          x86_64-1.2.0                   bb10b204ecc6        2 weeks ago         1.42GB

nexus3.hyperledger.org:10001/hyperledger/fabric-ccenv                                                             stable                         bb10b204ecc6        2 weeks ago         1.42GB

hyperledger/fabric-orderer                                                                                        latest                         dfd6f62edb72        2 weeks ago         147MB

hyperledger/fabric-orderer                                                                                        x86_64-1.2.0                   dfd6f62edb72        2 weeks ago         147MB

nexus3.hyperledger.org:10001/hyperledger/fabric-orderer                                                           stable                         dfd6f62edb72        2 weeks ago         147MB

hyperledger/fabric-peer                                                                                           latest                         03fff10a3d44        2 weeks ago         154MB

hyperledger/fabric-peer                                                                                           x86_64-1.2.0                   03fff10a3d44        2 weeks ago         154MB

nexus3.hyperledger.org:10001/hyperledger/fabric-peer                                                              stable                         03fff10a3d44        2 weeks ago         154MB

hyperledger/fabric-baseos                                                                                         amd64-0.4.8                    83b7b016c8e5        7 weeks ago         128MB

hyperledger/fabric-zookeeper                                                                                      latest                         1ce465be7112        2 months ago        1.39GB

hyperledger/fabric-kafka                                                                                          latest                         4fed436fc0a0        2 months ago        1.4GB

hyperledger/fabric-couchdb                                                                                        latest                         35228d48a25a        2 months ago        1.56GB

hyperledger/fabric-ca                                                                                             latest                         72617b4fa9b4        3 months ago        299MB

 

TPS:

Invokes (300k total): 32.73 per second.

Query (300K total): 61.2 per second.

Resource usage  chart attached. ;;;",,,,,,,,,,,,,,,,,,,,,,
Orderer.Addresses config field must be documented in configtx.yaml and readthedocs,FAB-8240,27671,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,luomin,Ratnakar,Ratnakar,14/Feb/18 12:05 AM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,06/Mar/18 11:44 PM,,,,v1.1.1,v1.2.0,,fabric-docs,,,,0,quality,Usability,,,,"As [~jyellick] described , copying content from [here|https://jira.hyperledger.org/browse/FAB-8193]
{code:java}
The configuration parameter in configtx.yaml, Orderer addresses is an enumeration of orderer which clients and peers should use to connect to ordering. It is not an exhaustive list of orderers, and adding and removing nodes from this list has no impact on their participation in ordering. This is a deliberate feature by design, as it may be desirable to configure hot spare orderers, or to remove an orderer from the list for maintenance, recovery etc.

To disconnect an orderer from Kafka, standard Kafka access control measures may be leveraged, such as TLS CRLs, or firewalling. If the orderer system and its key material were compromised, its certificate should be added to the orderer's MSP's CRL.
{code}
This needs to be captured both in the configtx.yaml and the readthedocs.",,denyeart,luomin,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxan:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,luomin,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Feb/18 8:49 PM;luomin;https://gerrit.hyperledger.org/r/#/c/18021/;;;","06/Mar/18 10:04 PM;denyeart;release-1.1 branch CR:

https://gerrit.hyperledger.org/r/#/c/18771/;;;",,,,,,,,,,,,,,,,,,,,,
Subtask to submit chaincode vendored with 1.0 shim in gerrit for FAB-7913,FAB-8242,27674,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,Nishi,Nishi,14/Feb/18 3:36 AM,23/Jan/20 7:26 AM,28/Oct/23 3:02 AM,23/Jan/20 7:26 AM,,,,,,,,,,,0,stale-item,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxb3:",,,,,,,,,,,,,,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"23/Jan/20 7:26 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Subtask to submit chaincode vendored with 1.1 shim in gerrit for FAB-7913,FAB-8243,27675,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,Nishi,Nishi,14/Feb/18 3:36 AM,23/Jan/20 7:26 AM,28/Oct/23 3:02 AM,23/Jan/20 7:26 AM,,,,,,,,,,,0,stale-item,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxbb:",,,,,,,,,,,,,,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"23/Jan/20 7:26 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
PTE: supports CouchDB indexing,FAB-8244,27676,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,AdnanChoudhury,AdnanChoudhury,14/Feb/18 4:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Mar/18 1:22 AM,,,,,,,fabric-quality,,,,0,PTE,,,,,"PTE install of Chaincode is unable to create the indexes in the CouchDB. 

how to reproduce: 
 with PTE, install and instantiate a chaincode (make sure that peers have CouchDB as stateDB and the Chaincode has the necessary index definitions in the specified folder)

Result: The CouchDB does not have the indexes defined, as seen by looking through the CouchDB web interface 
Browse to `localhost:5984/utils/#/_all_dbs`
click on the database named `<channel_name><chaincode_name>`
click on the `design docs`


 expected: indexes are defined and are present as design docs",,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8239,FAB-7117,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyxbj:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"07/Mar/18 7:25 AM;dongming;https://gerrit.hyperledger.org/r/#/c/18801/;;;",,,,,,,,,,,,,,,,,,,,,,
CLI query response output contains extra characters,FAB-8245,27677,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,Ratnakar,Ratnakar,14/Feb/18 4:27 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,18/Apr/18 9:00 AM,,,,v1.2.0,,,fabric-peer,,,,1,quality,Usability,,,,"CLI query response contains ""*Query Result :* "" and ""*\n*"" which makes difficult to parse output from things like query system chaincode using protobuf or tools like configtxlator. rather it would be easier to parse the raw output using these tools.
{code:java}
peer chaincode query -o orderer0.example.com:7050 -C mychannel -n qscc -c '{""Args"":[""GetBlockByNumber"",""mychannel"",""1""]}'
{code}
Enclosed the response [^block.pb]",,C0rWin,denyeart,jyellick,muralisr,nirro,Ratnakar,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8430,,,,,,,,,,,,,,,,,"14/Feb/18 4:26 AM;Ratnakar;block.pb;https://jira.hyperledger.org/secure/attachment/14580/block.pb",,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxbr:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,jyellick,muralisr,nirro,Ratnakar,yacovm,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.4/pr-3646,true,"14/Feb/18 4:48 AM;jyellick;Agreed, the contaminated output makes this tool effectively useless for any binary APIs.  The only way I see to fix this without breaking existing clients who might be working around this bug would be to add something like a {{-s}} / {{--silent}} flag to suppress the problematic output.  I'm not sure whether adding a flag like this fits within the context of v1.1.;;;","14/Feb/18 4:54 AM;yacovm;I second [~jyellick] and think we should eventually move (in older versions) towards a unix-like output convention in which a successful invocation doesn't contain any ""decorating"" output, ideally only outputs the relevant information, or is even silent in case there shouldn't be any, and an in-successful one contains decorating data (""the command failed because - foo"")

Right now, when we run the peer CLI it starts logging all kinds of completely irrelevant information and when the command fails it... also outputs the usage, even when not asked for it.;;;","14/Feb/18 10:13 PM;denyeart;I clarified the subject and description to indicate that CLI adds the extra information, rather than the query system chaincode.

I would consider this a bug.  We have the option to fix 1.0 bugs in 1.1 (and also backport to 1.0.x release branch) without adding a new flag, and mentioning it in the 1.1 release notes to notify any current users.

What are your thoughts [~muralisr] ?;;;","14/Feb/18 10:48 PM;C0rWin;If we going to fix this and refine the way we doing output for queries in CLI, I think we also need to consider refactor following peace of code, as it make no real sense and anyway related to the FAB subject:
[common.go|https://github.com/hyperledger/fabric/blob/master/peer/chaincode/common.go#L144]:
{code}
		if chaincodeQueryRaw {
			if chaincodeQueryHex {
				return fmt.Errorf(""Options --raw (-r) and --hex (-x) are not compatible"")
			}
			fmt.Print(""Query Result (Raw): "")
			os.Stdout.Write(proposalResp.Response.Payload)
		} else {
			if chaincodeQueryHex {
				fmt.Printf(""Query Result: %x\n"", proposalResp.Response.Payload)
			} else {
				fmt.Printf(""Query Result: %s\n"", string(proposalResp.Response.Payload))
			}
		}
{code}

I would also consider this is a bug and prefer to fix it rather than adding new flags to masquerade the problem. ;;;","15/Feb/18 1:46 AM;denyeart;[~C0rWin] I agree, I suggest go ahead with a CR and let's try to get this into 1.1 with a release note.;;;","15/Feb/18 3:21 AM;muralisr;[~denyeart] Originally the intent was to use query for user chaincodes for doing quick checks. As its getting used for other things (reading blocks with qscc for example) makes sense to remove all decorating text in success cases. Additionally make sure for the failing cases
* if err != nil, put an error message fmt.Printf(""Error : %s\n"", err)
* if response.Status != 0 or 200, put a a meaningful message like fmt.Printf(""Response Error :[status-%d, message-%s]\n"", status, err)

[~C0rWin] I think the raw, hex options were added later on presumably for some satisfying some needs. I'd hesitate to remove them. What did you have in mind re cleanup with the above comment ? ;;;","15/Feb/18 4:34 AM;C0rWin;[~muralisr] didn't mean to remove them, but there is definitely some refactoring to the code, for example:

{code}
			os.Stdout.Write(proposalResp.Response.Payload)
{code}

inside 
{code}
if chaincodeQueryRaw {
}
{code}

and later inside else

{code}
				fmt.Printf(""Query Result: %x\n"", proposalResp.Response.Payload)
{code}

which IMO doesn't make any sense. Overall I'd prefer this to be restructured.;;;","15/Feb/18 5:02 AM;denyeart;Thanks [~C0rWin] , I'd say go ahead with the minor restructuring as well as removal of the decorating for success cases.;;;","15/Feb/18 5:51 AM;C0rWin;[~denyeart] on my way cap.;;;","19/Feb/18 6:49 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/18049/;;;","22/Feb/18 1:01 AM;denyeart;The change to remove extra characters from CLI query response will be reverted using FAB-8430 so that existing tests/clients don't break.

FAB-8245 will be re-opened as an Improvement for 1.2, the intent is to use a flag to specify silent or binary mode.;;;","22/Feb/18 3:05 AM;C0rWin;While it's sounds reasonable to postpone the change, I do not think that adding new flag make any sense. 
As doesn't sounds reasonable to support buggy output.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Mar/18 11:04 PM;jyellick;This one I think we should address for v1.2.  It's the only way we ship to directly query chaincodes, and for doing debugging, say, querying a chaincode and decoding the protobuf, it would be very useful.  Assuming we can agree to an approach, I also don't think it's terribly difficult to implement.;;;","17/Apr/18 8:22 PM;nirro;https://gerrit.hyperledger.org/r/#/c/20657/;;;",,,,,,,,
Orderer uses ClientAuthEnabled and peer uses clientAuthRequired,FAB-8246,27678,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,jyellick,yacovm,yacovm,14/Feb/18 4:50 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,14/Feb/18 7:32 AM,v1.1.0-alpha,,,v1.1.1,,,fabric-orderer,,,,0,,,,,,"The orderer has ClientAuthEnabled  as its configuration key that toggles the TLS service to verify clients, and the peer uses clientAuthRequired.

I think this is a bit confusing and also not uniform, and since we are introducing mutual TLS in v1.1 there is no backward compatibility issues with changing this to be uniform.

I think the required (clientAuthRequired) should be in both, because Enabled makes it sound as if it is a recommendation and not a requirement, though the option clearly makes it mandatory. 

[~jyellick] [~kchristidis] opinions?",,jyellick,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxbz:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Feb/18 4:51 AM;jyellick;100% agree with this, let's not confuse our users and make this consistent.;;;","14/Feb/18 4:58 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/17867/;;;","14/Feb/18 5:14 AM;kchristidis;Good catch.;;;",,,,,,,,,,,,,,,,,,,,
CouchDB Performance Test: 1 Million Query of 4-Field Rich Query,FAB-8248,27681,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 6:49 AM,11/Oct/18 12:47 AM,28/Oct/23 3:02 AM,11/Oct/18 12:47 AM,,,,Future,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
 2)

transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 250000

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2
3) 1 million rich-queries of 4-field spread among 2 channels

+*Result*+:
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers and CouchDB containers
  ",,AdnanChoudhury,ibmamnt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyxcn:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,ibmamnt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/18 10:25 AM;ibmamnt;Any result such as RPS ?;;;","11/Oct/18 12:46 AM;AdnanChoudhury;[~ibmamnt] please see FAB-8251 and FAB-8252;;;",,,,,,,,,,,,,,,,,,,,,
CouchDB Performance Test: Concurrent operation of: 1)1 Million Invoke And 2) 1 million Query of 2-Field Rich Query,FAB-8249,27682,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 6:53 AM,29/Aug/18 5:30 AM,28/Oct/23 3:02 AM,28/Jun/18 11:16 AM,,,,v1.2.0,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
 2) 1 million transactions
 transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 250000

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2
 3) do the following 2 concurrently: 
 a) 1 million transactions (like step 2 but with newer keys)
 b)1 million rich-queries of 2-field spread among 2 channels

+*Result:*+
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers and CouchDB containers
  ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzyxcv:",,,,,,,,,,,,,,,,Unset,,System Test,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/18 4:15 AM;AdnanChoudhury; Need machines with more resources (HD space) than available, requested Cloud server upgrade on  June 1st.;;;","28/Jun/18 10:55 AM;AdnanChoudhury;*Hardware Setup:*
IBM cluster of 6 machines (3 each of 2 CPU-4GB memory, 3 each of 4 CPU-16GB memory)

*Result:*
*Short:* 
1st set of  million invoke at 36.96 PS
2nd set of million invoke at 33.67 PS 
1st set of 2 million query at 40.32 PS 
(non-indexed query. For comparison, indexed results to be added)

*Details:*

 

======= PTE 1 main Test Summary: executed at Wed Jun 27 2018 02:43:59 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 500000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530067456987  end 1530094492965  duration 27035978 ms 

(testorgschannel2:marbles02_go_ch2): TPS 18.49

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 21187390 ms 

(testorgschannel2:marbles02_go_ch2): min: 11 ms  max: 325 ms  avg: 42.37478 ms 

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 8480281 ms 

(testorgschannel2:marbles02_go_ch2): min: 5 ms  max: 299 ms  avg: 16.960562 ms 

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 204239646 ms 

(testorgschannel2:marbles02_go_ch2): min: 90 ms  max: 1375 ms  avg: 408.479292 ms 

 

======= PTE 0 main Test Summary: executed at Wed Jun 27 2018 02:43:59 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 500000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530067456990  end 1530094532114  duration 27075124 ms 

(testorgschannel1:marbles02_go_ch1): TPS 18.47

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 21223500 ms 

(testorgschannel1:marbles02_go_ch1): min: 11 ms  max: 308 ms  avg: 42.447 ms 

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 8169312 ms 

(testorgschannel1:marbles02_go_ch1): min: 5 ms  max: 1479 ms  avg: 16.338624 ms 

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 203971910 ms 

(testorgschannel1:marbles02_go_ch1): min: 92 ms  max: 1999 ms  avg: 407.94382 ms 

 

======= PTE 1 main Test Summary: executed at Wed Jun 27 2018 10:17:33 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 500000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530094678249  end 1530124336194  duration 29657945 ms 

(testorgschannel2:marbles02_go_ch2): TPS 16.86

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 33531323 ms 

(testorgschannel2:marbles02_go_ch2): min: 13 ms  max: 582 ms  avg: 67.062646 ms 

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 9561097 ms 

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 314 ms  avg: 19.122194 ms 

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 237838383 ms 

(testorgschannel2:marbles02_go_ch2): min: 112 ms  max: 1856 ms  avg: 475.676766 ms 

 

======= PTE 0 main Test Summary: executed at Wed Jun 27 2018 10:17:33 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 500000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530094678247  end 1530124418749  duration 29740502 ms 

(testorgschannel1:marbles02_go_ch1): TPS 16.81

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 33711423 ms 

(testorgschannel1:marbles02_go_ch1): min: 12 ms  max: 652 ms  avg: 67.422846 ms 

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 9297104 ms 

(testorgschannel1:marbles02_go_ch1): min: 6 ms  max: 369 ms  avg: 18.594208 ms 

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 238592576 ms 

(testorgschannel1:marbles02_go_ch1): min: 111 ms  max: 1807 ms  avg: 477.185152 ms 

 

======= PTE 3 main Test Summary: executed at Wed Jun 27 2018 10:17:32 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): QUERY transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 1000000

(testorgschannel2:marbles02_go_ch2): start 1530094678257  end 1530144051565  duration 49373308 ms 

(testorgschannel2:marbles02_go_ch2): TPS 20.25

 

======= PTE 2 main Test Summary: executed at Wed Jun 27 2018 10:17:33 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): QUERY transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 1000000

(testorgschannel1:marbles02_go_ch1): start 1530094678255  end 1530144494580  duration 49816325 ms 

(testorgschannel1:marbles02_go_ch1): TPS 20.07;;;","31/Jul/18 4:37 AM;AdnanChoudhury;This test can be executed by running the FAB-9575 from `Fabric-test/tools/PTE/CITests/scenarios/FAB-9575.sh`;;;",,,,,,,,,,,,,,,,,,,,
CouchDB Performance Test: Concurrent operation of: 1)1 Million Invoke And 2) 1 million Query of 4-Field Rich Query,FAB-8250,27683,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 6:55 AM,30/Jul/19 11:41 AM,28/Oct/23 3:02 AM,30/Jul/19 11:41 AM,v1.2.0,,,Future,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
 2) 1 million transactions
 transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 250000

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2
 3) do the following 2 concurrently
 a) 1 million transactions (like step 2 but with newer keys)
 b)1 million rich-queries of 4-field spread among 2 channels

+*Result:*+
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers and CouchDB containers
  ",,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyxd3:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB Index Rebuild while 2-field rich queries and invokes,FAB-8251,27684,,Test Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:04 AM,10/Jan/20 5:41 AM,28/Oct/23 3:02 AM,30/Jun/18 12:00 AM,,,,v1.2.0,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
 2) 100K transactions: 4 threads, each thread sends 25000 invokes concurrently with tx id from 1 to 25000

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2
 3) do the following 3 concurrently 
 a) upgrade the chaincode with a new index to force an index rebuild 
 b) 100K transactions (like step 2 but with newer keys)
 c) 200K rich-queries of 2-field spread among the 4 threads on the 2 channels

+*Result:*+
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers and CouchDB containers",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12204,FABN-949,FAB-13286,,,,,,,,,FAB-8260,FAB-8190,,FAB-8252,,,,,,,,FAB-17347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,Automated,,,,,,"1|hzyxdb:",,,,,,,,,,,,,,,,Pass,"Please see FAB-13286

1) in 1.2 it was run on an IKS cluster in medium hardware (6 nodes with total 18 cpu) , with 1/10th of traffic volume, and its recorded as passed.
2) in 1.3, it was decided to run on Vlaunch, Dongming and me observed issues of peer panic and created a bug https://jira.hyperledger.org/browse/FAB-12204
3) in 1.4, it was run in IKS cluster with medium hardware (5 nodes with 20 CPU), seeing peer panic while committing right after CC upgrade. CC upgrades keep CouchDB in busy for 4+ hours, and queries+invokes cause peer panic. See FAB-13286",System Test,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,true,"30/Jun/18 12:00 AM;AdnanChoudhury;*Hardware Setup:*
 IBM Kubernetes cluster of 6 machines (3 each of 2 CPU-4GB memory, 3 each of 4 CPU-16GB memory)

*Result:*
 *Short:* 
 1st set of 0.1 million invoke at 36.86 PS
 2nd set of 0.1 million invoke at 28.25 PS 
 set of 0.2 million query at 53.64 PS 

Long:

======= PTE 0 main Test Summary: executed at Fri Jun 29 2018 05:10:13 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 50000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530249030695  end 1530251742270  duration 2711575 ms

(testorgschannel1:marbles02_go_ch1): TPS 18.44

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 2146903 ms

(testorgschannel1:marbles02_go_ch1): min: 12 ms  max: 255 ms  avg: 42.93806 ms

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 1011223 ms

(testorgschannel1:marbles02_go_ch1): min: 5 ms  max: 267 ms  avg: 20.22446 ms

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 19815683 ms

(testorgschannel1:marbles02_go_ch1): min: 88 ms  max: 1075 ms  avg: 396.31366 ms

 

======= PTE 1 main Test Summary: executed at Fri Jun 29 2018 05:10:13 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 50000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530249030695  end 1530251745075  duration 2714380 ms

(testorgschannel2:marbles02_go_ch2): TPS 18.42

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 2136626 ms

(testorgschannel2:marbles02_go_ch2): min: 12 ms  max: 248 ms  avg: 42.73252 ms

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 1062880 ms

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 260 ms  avg: 21.2576 ms

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 20066236 ms

(testorgschannel2:marbles02_go_ch2): min: 90 ms  max: 1181 ms  avg: 401.32472 ms

 

======= PTE 0 main Test Summary: executed at Fri Jun 29 2018 06:00:17 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 50000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530252041863  end 1530255578198  duration 3536335 ms

(testorgschannel1:marbles02_go_ch1): TPS 14.14

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 3851193 ms

(testorgschannel1:marbles02_go_ch1): min: 13 ms  max: 852 ms  avg: 77.02386 ms

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 2111295 ms

(testorgschannel1:marbles02_go_ch1): min: 6 ms  max: 891 ms  avg: 42.2259 ms

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 26144176 ms

(testorgschannel1:marbles02_go_ch1): min: 111 ms  max: 3145 ms  avg: 522.88352 ms

 

======= PTE 1 main Test Summary: executed at Fri Jun 29 2018 06:00:17 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 50000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530252041853  end 1530255584878  duration 3543025 ms

(testorgschannel2:marbles02_go_ch2): TPS 14.11

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 3844437 ms

(testorgschannel2:marbles02_go_ch2): min: 13 ms  max: 743 ms  avg: 76.88874 ms

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 2154443 ms

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 758 ms  avg: 43.08886 ms

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 26356620 ms

(testorgschannel2:marbles02_go_ch2): min: 113 ms  max: 3026 ms  avg: 527.1324 ms

 

======= PTE 3 main Test Summary: executed at Fri Jun 29 2018 06:00:16 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): QUERY transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 100000

(testorgschannel2:marbles02_go_ch2): start 1530252041869  end 1530255758520  duration 3716651 ms

(testorgschannel2:marbles02_go_ch2): TPS 26.91

 

======= PTE 2 main Test Summary: executed at Fri Jun 29 2018 06:00:16 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): QUERY transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 100000

(testorgschannel1:marbles02_go_ch1): start 1530252041865  end 1530255782335  duration 3740470 ms

(testorgschannel1:marbles02_go_ch1): TPS 26.73

 ;;;","09/Jul/18 10:51 PM;AdnanChoudhury;======= PTE 0 main Test Summary: executed at Fri Jun 29 2018 05:10:13 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 50000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530249030695  end 1530251742270  duration 2711575 ms 

(testorgschannel1:marbles02_go_ch1): TPS 18.44

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 2146903 ms 

(testorgschannel1:marbles02_go_ch1): min: 12 ms  max: 255 ms  avg: 42.93806 ms 

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 1011223 ms 

(testorgschannel1:marbles02_go_ch1): min: 5 ms  max: 267 ms  avg: 20.22446 ms 

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 19815683 ms 

(testorgschannel1:marbles02_go_ch1): min: 88 ms  max: 1075 ms  avg: 396.31366 ms 

 

======= PTE 1 main Test Summary: executed at Fri Jun 29 2018 05:10:13 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 50000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530249030695  end 1530251745075  duration 2714380 ms 

(testorgschannel2:marbles02_go_ch2): TPS 18.42

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 2136626 ms 

(testorgschannel2:marbles02_go_ch2): min: 12 ms  max: 248 ms  avg: 42.73252 ms 

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 1062880 ms 

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 260 ms  avg: 21.2576 ms 

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 20066236 ms 

(testorgschannel2:marbles02_go_ch2): min: 90 ms  max: 1181 ms  avg: 401.32472 ms 

 

======= PTE 0 main Test Summary: executed at Fri Jun 29 2018 06:00:17 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 50000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530252041863  end 1530255578198  duration 3536335 ms 

(testorgschannel1:marbles02_go_ch1): TPS 14.14

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 3851193 ms 

(testorgschannel1:marbles02_go_ch1): min: 13 ms  max: 852 ms  avg: 77.02386 ms 

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 2111295 ms 

(testorgschannel1:marbles02_go_ch1): min: 6 ms  max: 891 ms  avg: 42.2259 ms 

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 26144176 ms 

(testorgschannel1:marbles02_go_ch1): min: 111 ms  max: 3145 ms  avg: 522.88352 ms 

 

======= PTE 1 main Test Summary: executed at Fri Jun 29 2018 06:00:17 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 50000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530252041853  end 1530255584878  duration 3543025 ms 

(testorgschannel2:marbles02_go_ch2): TPS 14.11

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 3844437 ms 

(testorgschannel2:marbles02_go_ch2): min: 13 ms  max: 743 ms  avg: 76.88874 ms 

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 2154443 ms 

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 758 ms  avg: 43.08886 ms 

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 26356620 ms 

(testorgschannel2:marbles02_go_ch2): min: 113 ms  max: 3026 ms  avg: 527.1324 ms 

 

======= PTE 3 main Test Summary: executed at Fri Jun 29 2018 06:00:16 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): QUERY transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 100000

(testorgschannel2:marbles02_go_ch2): start 1530252041869  end 1530255758520  duration 3716651 ms 

(testorgschannel2:marbles02_go_ch2): TPS 26.91

 

======= PTE 2 main Test Summary: executed at Fri Jun 29 2018 06:00:16 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): QUERY transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 100000

(testorgschannel1:marbles02_go_ch1): start 1530252041865  end 1530255782335  duration 3740470 ms 

(testorgschannel1:marbles02_go_ch1): TPS 26.73;;;","27/Sep/18 3:52 AM;scottz;Dongming will run this in v1.3 on RC1 load, in vLaunch.;;;","26/Oct/18 1:15 AM;scottz;Surya should write script to run this on IKS cluster.;;;","20/Dec/18 1:04 AM;AdnanChoudhury;1) *in 1.2* it was run on an *IKS cluster* in medium hardware (6 nodes with total 18 cpu) , with 1/10th of traffic volume, and its recorded as passed.
2) *in 1.3*, it was decided to run on *Vlaunch*, Dongming and me observed issues of *peer panic* and created a bug https://jira.hyperledger.org/browse/FAB-12204
3) *in 1.4*, it was run in *IKS cluster* with medium hardware (5 nodes with 20 CPU), seeing peer panic while committing right after CC upgrade. CC upgrades keep CouchDB in busy for 4+ hours, and queries+invokes cause peer panic. See FAB-13286;;;","05/Jan/19 12:59 AM;AdnanChoudhury;If the test is modified to make the step 3b and 3c to send query and invokes at slower rate (tested with 1 invoke or query per second), 
1)the peer does not panic
2) the queries and invokes are successful.
[~denyeart] mentions that as the CPU usage is high during the index rebuild, and slower queries and invokes pass, it looks like a resource issue, and we need to document that index rebuild may take a toll on the CPU. marking this as pass.;;;",,,,,,,,,,,,,,,,,
CouchDB Index Rebuild while 4-field rich queries and invokes,FAB-8252,27685,,Test Task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:05 AM,19/Dec/18 8:20 AM,28/Oct/23 3:02 AM,19/Dec/18 8:20 AM,,,,v1.2.0,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
 2) 100,000 invoke transactions (25,000 per each of 4 threads)

Transactions: 4 threads, each thread sends 25000 queries concurrently with tx id from 1 to 25000

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2
 3) Concurrently, do 
 a) upgrade the chaincode with a new index to force an index rebuild 
 b) 100K invoke transactions (like step 2 but with newer keys)
 c) 200K rich-queries of 4-fields, spread among the 4 threads on the 2 channels

+*Result:*+
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers and CouchDB containers",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12204,FABN-949,,,,,,,,,,FAB-8260,FAB-8190,,,,,,,,,,FAB-8251,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,Automated,,,,,,"1|hzyxdj:",,,,,,,,,,,,,,,,Unset,,System Test,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,true,"30/Jun/18 1:47 PM;AdnanChoudhury;*Hardware Setup:*
IBM Kubernetes cluster of 6 machines (3 each of 2 CPU-4GB memory, 3 each of 4 CPU-16GB memory)

*Result:*
*Short:* 
1st set of 0.1 million invoke at 36.78 PS
2nd set of 0.1 million invoke at 28.17 PS 
set of 0.2 million query at 55.01 PS 

*Long:*

======= PTE 0 main Test Summary: executed at Fri Jun 29 2018 20:35:02 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 50000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530304519686  end 1530307230703  duration 2711017 ms

(testorgschannel1:marbles02_go_ch1): TPS 18.44

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 2172249 ms

(testorgschannel1:marbles02_go_ch1): min: 10 ms  max: 258 ms  avg: 43.44498 ms

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 1037976 ms

(testorgschannel1:marbles02_go_ch1): min: 6 ms  max: 783 ms  avg: 20.75952 ms

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 19849089 ms

(testorgschannel1:marbles02_go_ch1): min: 87 ms  max: 1377 ms  avg: 396.98178 ms

 

======= PTE 1 main Test Summary: executed at Fri Jun 29 2018 20:35:02 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 50000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530304519689  end 1530307246501  duration 2726812 ms

(testorgschannel2:marbles02_go_ch2): TPS 18.34

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 2163429 ms

(testorgschannel2:marbles02_go_ch2): min: 12 ms  max: 249 ms  avg: 43.26858 ms

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 1177241 ms

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 472 ms  avg: 23.54482 ms

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 20130664 ms

(testorgschannel2:marbles02_go_ch2): min: 88 ms  max: 1037 ms  avg: 402.61328 ms

 

======= PTE 0 main Test Summary: executed at Fri Jun 29 2018 21:25:18 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 50000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530307543453  end 1530311081207  duration 3537754 ms

(testorgschannel1:marbles02_go_ch1): TPS 14.13

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 3867209 ms

(testorgschannel1:marbles02_go_ch1): min: 13 ms  max: 13234 ms  avg: 77.34418 ms

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 2112570 ms

(testorgschannel1:marbles02_go_ch1): min: 7 ms  max: 585 ms  avg: 42.2514 ms

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 50000  total time: 26258705 ms

(testorgschannel1:marbles02_go_ch1): min: 108 ms  max: 15109 ms  avg: 525.1741 ms

 

======= PTE 1 main Test Summary: executed at Fri Jun 29 2018 21:25:18 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 50000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530307543451  end 1530311104184  duration 3560733 ms

(testorgschannel2:marbles02_go_ch2): TPS 14.04

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 3834961 ms

(testorgschannel2:marbles02_go_ch2): min: 13 ms  max: 13048 ms  avg: 76.69922 ms

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 2241674 ms

(testorgschannel2:marbles02_go_ch2): min: 7 ms  max: 417 ms  avg: 44.83348 ms

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 50000  total time: 26452014 ms

(testorgschannel2:marbles02_go_ch2): min: 103 ms  max: 15107 ms  avg: 529.04028 ms

 

======= PTE 3 main Test Summary: executed at Fri Jun 29 2018 21:25:18 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): QUERY transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 100000

(testorgschannel2:marbles02_go_ch2): start 1530307543461  end 1530311128772  duration 3585311 ms

(testorgschannel2:marbles02_go_ch2): TPS 27.89

 

======= PTE 2 main Test Summary: executed at Fri Jun 29 2018 21:25:18 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): QUERY transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 100000

(testorgschannel1:marbles02_go_ch1): start 1530307543460  end 1530311230230  duration 3686770 ms

(testorgschannel1:marbles02_go_ch1): TPS 27.12

 ;;;","03/Jul/18 12:07 AM;AdnanChoudhury;Same test with 10x the query and transaction (1 million ivokes, then indexrebuild+1millInvoke+1millQuery)

*Result:*
 *Short version:* 
 1st set of 0.1 million invoke at 36.80 PS
 2nd set of 0.1 million invoke at 26.56 PS 
 set of 0.2 million query at 46.36 PS 


*Long version:* 
======= PTE 0 main Test Summary: executed at Sat Jun 30 2018 05:40:17 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 500000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530337234717  end 1530364331661  duration 27096944 ms

(testorgschannel1:marbles02_go_ch1): TPS 18.45

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 21336054 ms

(testorgschannel1:marbles02_go_ch1): min: 10 ms  max: 371 ms  avg: 42.672108 ms

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 9330039 ms

(testorgschannel1:marbles02_go_ch1): min: 6 ms  max: 1169 ms  avg: 18.660078 ms

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 200009802 ms

(testorgschannel1:marbles02_go_ch1): min: 85 ms  max: 1791 ms  avg: 400.019604 ms

 

======= PTE 1 main Test Summary: executed at Sat Jun 30 2018 05:40:17 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 500000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530337234714  end 1530364479593  duration 27244879 ms

(testorgschannel2:marbles02_go_ch2): TPS 18.35

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 21207720 ms

(testorgschannel2:marbles02_go_ch2): min: 11 ms  max: 317 ms  avg: 42.41544 ms

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 10886288 ms

(testorgschannel2:marbles02_go_ch2): min: 6 ms  max: 1161 ms  avg: 21.772576 ms

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 203147353 ms

(testorgschannel2:marbles02_go_ch2): min: 87 ms  max: 1820 ms  avg: 406.294706 ms

 

======= PTE 0 main Test Summary: executed at Sat Jun 30 2018 13:19:07 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): INVOKE transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 500000  timeout transactions 0

(testorgschannel1:marbles02_go_ch1): start 1530364773198  end 1530402346869  duration 37573671 ms

(testorgschannel1:marbles02_go_ch1): TPS 13.31

(testorgschannel1:marbles02_go_ch1): peer latency stats (endorsement)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 43511789 ms

(testorgschannel1:marbles02_go_ch1): min: 12 ms  max: 30207 ms  avg: 87.023578 ms

(testorgschannel1:marbles02_go_ch1): orderer latency stats (transaction ack)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 21103329 ms

(testorgschannel1:marbles02_go_ch1): min: 6 ms  max: 633 ms  avg: 42.206658 ms

(testorgschannel1:marbles02_go_ch1): event latency stats (end-to-end)

(testorgschannel1:marbles02_go_ch1): total transactions: 500000  total time: 283256555 ms

(testorgschannel1:marbles02_go_ch1): min: 102 ms  max: 60291 ms  avg: 566.51311 ms

 

======= PTE 1 main Test Summary: executed at Sat Jun 30 2018 13:19:08 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): INVOKE transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 500000  timeout transactions 0

(testorgschannel2:marbles02_go_ch2): start 1530364773198  end 1530402519936  duration 37746738 ms

(testorgschannel2:marbles02_go_ch2): TPS 13.25

(testorgschannel2:marbles02_go_ch2): peer latency stats (endorsement)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 42402861 ms

(testorgschannel2:marbles02_go_ch2): min: 12 ms  max: 30141 ms  avg: 84.805722 ms

(testorgschannel2:marbles02_go_ch2): orderer latency stats (transaction ack)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 22841063 ms

(testorgschannel2:marbles02_go_ch2): min: 7 ms  max: 597 ms  avg: 45.682126 ms

(testorgschannel2:marbles02_go_ch2): event latency stats (end-to-end)

(testorgschannel2:marbles02_go_ch2): total transactions: 500000  total time: 278332247 ms

(testorgschannel2:marbles02_go_ch2): min: 112 ms  max: 60247 ms  avg: 556.664494 ms

 

======= PTE 3 main Test Summary: executed at Sat Jun 30 2018 13:19:07 GMT+0000 (UTC) =======

(testorgschannel2:marbles02_go_ch2): QUERY transaction stats

(testorgschannel2:marbles02_go_ch2): Total transactions 1000000

(testorgschannel2:marbles02_go_ch2): start 1530364773209  end 1530404399292  duration 39626083 ms

(testorgschannel2:marbles02_go_ch2): TPS 25.24

 

======= PTE 2 main Test Summary: executed at Sat Jun 30 2018 13:19:08 GMT+0000 (UTC) =======

(testorgschannel1:marbles02_go_ch1): QUERY transaction stats

(testorgschannel1:marbles02_go_ch1): Total transactions 1000000

(testorgschannel1:marbles02_go_ch1): start 1530364773204  end 1530412161498  duration 47388294 ms

(testorgschannel1:marbles02_go_ch1): TPS 21.10

 

 ;;;","27/Sep/18 3:51 AM;scottz;Dongming will run this in v1.3, on vLaunch.;;;","26/Oct/18 1:16 AM;scottz;Surya should write script to run this on IKS cluster.;;;","19/Dec/18 8:16 AM;scottz;This was originally planned to run in v1.4, but we decided it is not necessary since we are running another similar test with a 2-field rich query.;;;","19/Dec/18 8:20 AM;scottz;In v1.4, we don't need to run this, as it is very similar to another testcase.;;;",,,,,,,,,,,,,,,,,
LevelDB Performance Test: 0.3 Million Query,FAB-8253,27686,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jun/18 3:02 PM,,,,v1.2.0,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with LevelDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated

2)transactions: 4 threads, each thread sends 0.3million/4 queries concurrently with tx id from 1 to 0.3 million/4

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2

3) 0.3 million query

+*Result*+:
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10137,,,,,,,,,,,,,,,,,"18/Jun/18 3:02 PM;AdnanChoudhury;resource-log-FAB-8253.html;https://jira.hyperledger.org/secure/attachment/15115/resource-log-FAB-8253.html",,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyxdr:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/18 2:56 PM;AdnanChoudhury;Changing this to 0.3 million Tx, will reopen and put data once 1 million is done.
 platform:

Ubuntu 14.04 64 bit, 4 CPU ( Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz) with 8 GB Memory

Fabric Version Tested:

hyperledger/fabric-tools                                                                                          latest                         d5e0cae2ab29        2 weeks ago         1.46GB

hyperledger/fabric-tools                                                                                          x86_64-1.2.0                   d5e0cae2ab29        2 weeks ago         1.46GB

nexus3.hyperledger.org:10001/hyperledger/fabric-tools                                                             stable                         d5e0cae2ab29        2 weeks ago         1.46GB

hyperledger/fabric-ccenv                                                                                          amd64-1.2.0-snapshot-156f39d   bb10b204ecc6        2 weeks ago         1.42GB

hyperledger/fabric-ccenv                                                                                          latest                         bb10b204ecc6        2 weeks ago         1.42GB

hyperledger/fabric-ccenv                                                                                          x86_64-1.2.0                   bb10b204ecc6        2 weeks ago         1.42GB

nexus3.hyperledger.org:10001/hyperledger/fabric-ccenv                                                             stable                         bb10b204ecc6        2 weeks ago         1.42GB

hyperledger/fabric-orderer                                                                                        latest                         dfd6f62edb72        2 weeks ago         147MB

hyperledger/fabric-orderer                                                                                        x86_64-1.2.0                   dfd6f62edb72        2 weeks ago         147MB

nexus3.hyperledger.org:10001/hyperledger/fabric-orderer                                                           stable                         dfd6f62edb72        2 weeks ago         147MB

hyperledger/fabric-peer                                                                                           latest                         03fff10a3d44        2 weeks ago         154MB

hyperledger/fabric-peer                                                                                           x86_64-1.2.0                   03fff10a3d44        2 weeks ago         154MB

nexus3.hyperledger.org:10001/hyperledger/fabric-peer                                                              stable                         03fff10a3d44        2 weeks ago         154MB

hyperledger/fabric-baseos                                                                                         amd64-0.4.8                    83b7b016c8e5        7 weeks ago         128MB

hyperledger/fabric-zookeeper                                                                                      latest                         1ce465be7112        2 months ago        1.39GB

hyperledger/fabric-kafka                                                                                          latest                         4fed436fc0a0        2 months ago        1.4GB

hyperledger/fabric-couchdb                                                                                        latest                         35228d48a25a        2 months ago        1.56GB

hyperledger/fabric-ca                                                                                             latest                         72617b4fa9b4        3 months ago        299MB

 

TPS:

Invokes (300k total): 39.73 per second.

Query (300K total): 269.86 per second.

Resouce log attached.;;;",,,,,,,,,,,,,,,,,,,,,,
Consensus type cannot be changed using config update,FAB-8254,27687,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,rohitadivi,rohitadivi,14/Feb/18 7:07 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,30/Mar/18 4:21 AM,,,,v1.2.0,,,fabric-docs,,,,0,,,,,,The documentation doesn't explain that changing the consensus type in a config update is not allowed. the code works fine and it will be good to document the same in the docs.,,joe-alewine,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtzr:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Mar/18 3:24 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/19865/;;;",,,,,,,,,,,,,,,,,,,,,,
LevelDB Performance Test: 1 Million Concurrent operation  Query and Invoke,FAB-8255,27688,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:08 AM,11/Oct/18 12:48 AM,28/Oct/23 3:02 AM,11/Oct/18 12:48 AM,,,,Future,,,fabric-quality,,,,0,SystemTestcase,,,,,"+*Setup:*+ 
 Network Topology: 2 channels, 2 org, 2 peers per org, each peer with LevelDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels.
 Client Driver: PTE
 +*Test Steps:*+
 1) chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
 2) 1 million transactions
 transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 250000

         thread 1 sends to org1 peer1 on channel 1
          thread 2 sends to org2 peer1 on channel 1
          thread 3 sends to org1 peer1 on channel 2
          thread 4 sends to org2 peer1 on channel 2
 3) do the following 2 concurrently: 
 a) 1Million  transactions (like step 2 but with newer keys)
 b)1Million query

+*Result:*+
 1)hardware setup
 2) RPS (request per second) achieved for queries
 3) CPU and memory usage for the Peers
  ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyxdz:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/18 12:48 AM;AdnanChoudhury;It was decided to focus on other related tests.;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: With 0.1 million records, with indexing, install after instantiate, get TPS for 1 field rich query ",FAB-8256,27689,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:09 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,,,,,0,,,,,,"Driver: PTE

4 channels, `marbles02` chaincode installed on all peers, with 0.1 million marbles invoked, installed on a peer after instantiate, with indexing, get the TPS on 1 field rich query on that peer..

Passes if all queries come back successful, and record the TPS.
 ",,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxe7:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: With 0.1 million records, with indexing, with install after instantiate, get TPS for 3 field rich query",FAB-8257,27690,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:11 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,,,,,0,,,,,,"Driver: PTE

4 channels, `marbles02` chaincode installed on all peers, with 0.1 million marbles invoked,installed on a peer after instantiate, with indexing, get the TPS on 3 field rich query on that peer.

Passes if all queries come back successful, and record the TPS.",,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxef:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: With 0.1 million records, with indexing, upgrade the chaincode, get TPS for regular query",FAB-8258,27691,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:15 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,,,,,0,,,,,,"Driver: PTE

4 channels, `marbles02` chaincode installed on all peers, with 0.1 million marbles invoked, with indexes, upgrade the CC, get the TPS on regular keyed query on that peer.

Passes if all queries come back successful, and record the TPS.",,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxen:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: With 0.1 million records, with indexing, upgrade the CC, get TPS for 1 field rich query ",FAB-8259,27692,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:16 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,,,,,0,,,,,,"Driver: PTE

4 channels, `marbles02` chaincode installed on all peers, with 0.1 million marbles invoked, upgrade the CC, with indexing, get the TPS on 1 field rich query on that peer..

Passes if all queries come back successful, and record the TPS.
 ",,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxev:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: With 0.1 million records, with indexing, with CC upgrade, get TPS for 3 field rich query",FAB-8260,27693,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Feb/18 7:17 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Jul/18 5:05 AM,,,,,,,,,,,0,,,,,,"Driver: PTE

4 channels, `marbles02` chaincode installed on all peers, with 0.1 million marbles invoked, upgrade the CC, with indexing, get the TPS on 3 field rich query on that peer.

Passes if all queries come back successful, and record the TPS.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8251,FAB-8252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxf3:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 5:04 AM;AdnanChoudhury;Closing this as two tests with similar aim are defined and conducted elsewhere (see the ""duplicated by"" links) ;;;",,,,,,,,,,,,,,,,,,,,,,
Changes to ATD to support latest PTE scenarios,FAB-8263,27699,21029,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,14/Feb/18 12:42 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Feb/18 12:39 AM,,,,,,,fabric-quality,,,,0,quality,,,,,Changes to ATD to support latest PTE scenarios,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxfz:",,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"14/Feb/18 9:48 PM;scottz;https://gerrit.hyperledger.org/r/#/c/17893/;;;",,,,,,,,,,,,,,,,,,,,,,
[baseimage] - upgrade baseimage nodejs version to v8.9.4 ,FAB-8264,27700,27647,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Feb/18 1:31 PM,27/Nov/19 2:17 AM,28/Oct/23 3:02 AM,14/Feb/18 11:38 PM,,,,,,,,,,,0,,,,,, upgrade baseimage nodejs version to v8.9.4,,denyeart,jmason900,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxg7:",,,,,,,,,,,,,,,,,,,,,denyeart,jmason900,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Feb/18 6:28 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17897/;;;",,,,,,,,,,,,,,,,,,,,,,
Misspell,FAB-8265,27701,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,daseybold,ZKWang,ZKWang,14/Feb/18 6:18 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,11/May/18 5:34 PM,,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"fabric-samples/fabcar/registerUser.js line74 should be ""interact"" instead of ""intreact""",,daseybold,ZKWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxgf:",,,,Unset,,,,,,Unset,,,,,,,,,,,daseybold,ZKWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Mar/18 11:03 AM;daseybold;https://gerrit.hyperledger.org/r/#/c/19509/;;;",,,,,,,,,,,,,,,,,,,,,,
Re-process failed couchdb index create statements automatically,FAB-8268,27705,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,chris.elder,denyeart,denyeart,14/Feb/18 8:20 PM,23/Jan/20 7:27 AM,28/Oct/23 3:02 AM,23/Jan/20 7:27 AM,v1.1.0,,,,,,fabric-ledger,,,,0,stale-item,,,,,"As of FAB-7777 , failed index create during chaincode install/instantiate will not panic peer but will still leave peer in a state where chaincode is deployed to a peer, but not able to endorse transactions (at least, not able to endorse transactions that utilize rich queries that require the indexes).

If the index create statements failed due to operational issues, there needs to be ability to re-process the failed index create statements at a later point in time, in an attempt to create the indexes that failed previously.

The re-processing of failed index create statements could be done in two ways:

1) Manually by a peer admin, e.g. via new peer APIs.

2) Automatically upon peer startup when ledger is being initialized and recovered.

Hosted environments have requested automatic recovery be implemented first.  This work item will add capability to re-process failed index create statements upon peer startup during ledger initialization/recovery.

[https://gerrit.hyperledger.org/r/#/c/17425/]

proposed to drop failed index create statements to /stateDBfailedChaincodeArtifacts directory for re-processing.

Additionally, although most indexes are known at chaincode deploy time and applicable to all peers, and therefore included in the chaincode deployment package, there are scenarios where an index may apply to queries performed on a single peer only (for example consider an auditor peer). There have been requirements to create new indexes on a single peer's channel database.  The mechanism implemented for this work item could also be used as a way to deploy new index definitions to the peer, by dropping index create json files into the correct /stateDBfailedChaincodeArtifacts directory.",,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7777,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx09j:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/18 4:03 AM;sykesm;Just had a conversation with [~mastersingh24] on this. We're trying to understand the deployment flow relative to the database creation, index creation, and chaincode deploy/launch relative to the expected behavior. At a high level it seems like an issue creating the index should behave similarly to a failure to launch the chaincode.

We think there are two cases we have to deal with:
1. The index definition is invalid; it will never work.
2. The index definition is valid but creating the index encounters a transient failure

In case 1, the index definition is bad. It will never work. A new version of the chaincode needs to be deployed.
In case 2, if we were able to launch the chaincode, create the index, and then stop the chaincode if either of those failed, we would implicitly get a retry.

Before implementing this style of re-processing, we should discuss options.;;;","23/Jan/20 7:27 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Identity Management High-Level API,FAB-8269,27714,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,14/Feb/18 11:14 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,15/Mar/18 1:16 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Goals:
 - Split FabricCAClient interface into two:
 ** EnrollmentService - users without signing identities use it to signup with a Fabric network
 ** IdentityManagement - services that require signing identity of a CA registrar
 *** remove the user parameter from Register/Revoke. It represents the CA registrar and should be taken from the client CA configuration.
 - Add ability to provide attributes on enroll/reenroll.
 - Reimplement the user store to allow for easy manual cert management.
 ** Specifically, the use case of enrolling with a certificate issued by a public certificate authority should be supported.
 - Manage user certificates within the SDK
 ** save to store on enroll/reenroll",,aleksandar.likic,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzlj:",,,,Unset,,,,,,Unset,,,,,,,,,,,aleksandar.likic,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Feb/18 12:28 AM;troyronda;We need to ensure that type and affiliation can be set:

https://jira.hyperledger.org/browse/FAB-5314?focusedCommentId=40252&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-40252;;;",,,,,,,,,,,,,,,,,,,,,,
Split FabriCAClient interface,FAB-8270,27715,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,14/Feb/18 11:27 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Mar/18 9:40 AM,,,,,,,,,,,0,,,,,,"Split FabricCAClient interface into two:
 * EnrollmentService - users without signing identities use it to signup with a Fabric network
 * IdentityManagement - services that require signing identity of a CA registrar
 ** remove the user parameter from Register/Revoke. It represents the CA registrar and should be taken from the client CA configuration.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxh3:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate application channel configs should be rejected,FAB-8271,27716,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rohitadivi,rohitadivi,15/Feb/18 12:01 AM,01/Aug/19 11:18 AM,28/Oct/23 3:02 AM,01/Aug/19 11:18 AM,,,,v1.1.1,,,fabric-quality,,,,0,help-wanted,,,,,"The network is brought up using byfn with 1.1 capabilities enabled, config update is made by fetching the latest config block and adding a new org. The final proto is signed by Org 1 Admin and update is sent by Org 2 Admin. After the update is done the update step is repeated 10 times and every time it failed and gave the error validating ReadSet: readset expected key [Group] /Channel/Application at version 1, but got version 2 as expected.",,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxhb:",,,,,,,,,,,,,,,,,,,,,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 12:07 AM;rohitadivi;The testing is done but need to discuss how to automate the test case and whether to automate it or no ;;;","15/May/18 10:59 AM;scottz;Latitia implemented a way to do config updates in behave. I believe it is general enough to use for a few other testcases such as this one. Next step here is to write up the steps to make sure that they would run. Look at the existing test case and the defined steps, to see if those are the steps that are needed.;;;","01/Aug/19 11:18 AM;scottz;As noted, testing was executed. We will not automate this.;;;",,,,,,,,,,,,,,,,,,,,
Duplicate system channel configs should be rejected,FAB-8272,27717,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rohitadivi,rohitadivi,15/Feb/18 12:11 AM,01/Aug/19 11:19 AM,28/Oct/23 3:02 AM,01/Aug/19 11:19 AM,,,,v1.1.1,,,fabric-quality,,,,0,help-wanted,,,,,"The network is brought up using byfn with 1.1 capabilities enabled, config update is made by fetching the latest config block and changing the batch size. The final proto is signed and update is sent by orderer org Admin. After the update is done the pb is converted to json and the batch size is increased by 1 and only the update step is carried out without carrying out the entire config process and this failed and gave the Error: got unexpected status: BAD_REQUEST -- error authorizing update: error validating DeltaSet: attempt to set key [Value] /Channel/Orderer/BatchSize to version 1, but key is at version 1 as expected.",,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxhj:",,,,,,,,,,,,,,,,,,,,,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 12:12 AM;rohitadivi;The testing is done but need to discuss how to automate the test case and whether to automate it or no ;;;","15/May/18 10:59 AM;scottz;Latitia implemented a way to do config updates in behave. I believe it is general enough to use for a few other testcases such as this one. Next step here is to write up the steps to make sure that they would run. Look at the existing test case and the defined steps, to see if those are the steps that are needed.;;;","01/Aug/19 11:18 AM;scottz;As noted, the testing was executed. We will not automate this.;;;",,,,,,,,,,,,,,,,,,,,
Incorrect Jira link in README.md ,FAB-8273,27719,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sheehan,sheehan,sheehan,15/Feb/18 12:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Feb/18 4:27 AM,v1.0.0,,,,,,fabric-docs,,,,0,Documentation,Usability,,,,"The first Jira link in the root README.md file points to 
 [https://jira.hyperledger.org/secure/RapidBoard.jspa?projectKey=FAB&rapidView=5&view=planning]
  
 There are two issues with this link
  
 1. It is not accessible unless you're logged in. This was brought up as a usability issue at the recent maintainers meeting. [~rjones-lf] double checked the Jira settings to confirm that there is no option for anonymous access to all pages.
  
 2. It points to Boards -> Fabric - Membership Services once logged in instead of a higher level Fabric page.
  
 I suggest we point the link to the Fabric Dashboard.
 [https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104]",,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxhr:",,,,,,,,,,,,,,,,,,,,,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Changing consensus type should fail,FAB-8274,27720,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rohitadivi,rohitadivi,15/Feb/18 12:57 AM,01/Aug/19 11:20 AM,28/Oct/23 3:02 AM,01/Aug/19 11:20 AM,,,,v1.1.1,,,fabric-quality,,,,0,help-wanted,,,,,"The network was brought up using byfn with 1.1 capabilities enabled, config update is made by fetching the latest config block and changing the orderer type from solo to kafka. The final proto is signed and updated is sent by orderer org Admin. This caused an Error: got unexpected status: BAD_REQUEST -- Attempted to change consensus type from solo to Kafka. This will not work as the network doesn’t support Kafka and because of the explicit rules put in place to forbid changing the consensus type.",,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxhz:",,,,,,,,,,,,,,,,,,,,,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 12:57 AM;rohitadivi;The testing is done but need to discuss how to automate the test case and whether to automate it or no ;;;","15/May/18 10:59 AM;scottz;Latitia implemented a way to do config updates in behave. I believe it is general enough to use for a few other testcases such as this one. Next step here is to write up the steps to make sure that they would run. Look at the existing test case and the defined steps, to see if those are the steps that are needed.;;;","01/Aug/19 11:20 AM;scottz;Testing is done. We will not automate this.;;;",,,,,,,,,,,,,,,,,,,,
Add queries to ResourceManagementClient,FAB-8275,27721,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandrav,aleksandar.likic,aleksandar.likic,15/Feb/18 12:57 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,06/Mar/18 4:43 AM,,,,,,,fabric-sdk-go,,,,0,,,,,," 
 * QueryInstalledChaincodes()
 * QueryChannelsForPeer()
 * QueryInstantiatedChaincodes()
 * QueryConfig()

QueryConfigFromOrderer() retrieves channel config from orderer.",,aleksandar.likic,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzof:",,,,Unset,,,,,,Unset,,,,,,,,,,,aleksandar.likic,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 1:02 AM;troyronda;Some of these are already part of ChannelService.Ledger. I don't think we should duplicate those into ResourceMgmtClient as they are Channel specific.;;;",,,,,,,,,,,,,,,,,,,,,,
Channel config template versions can be unpredictable,FAB-8277,27723,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,15/Feb/18 1:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Feb/18 1:32 AM,v1.1.0-alpha,,,v1.1.1,,,fabric-orderer,,,,0,,,,,,"Presently, before applying a channel creation transaction, a 'template
config' is created by copying various pieces of the orderer system
channel into a new config, then applying the channel creation tx as an
update.

This works well in greenfield deployments, but as the orderer system
channel mutates, so does the template config.  Users would have to
deduce the correct versions to use in computing their config updates,
which becomes onerous and requires out of band communication.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxi7:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Feb/18 1:02 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/17891;;;",,,,,,,,,,,,,,,,,,,,,,
Cut v1.1.0-rc1 release,FAB-8278,27724,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,denyeart,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 6:33 AM,v1.1.0-preview,,,v1.1.1,,,fabric-release,,,,0,,,,,,"Prepare and publish v1.1-rc1 release of Hyperledger Fabric. The tasks are listed in execution order and I have indicated any dependencies in the description of each.

 

Note that until we address, the repositories must be tagged and published serially: fabric, fabric-ca, fabric-sdk-node, others.",,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8881,,FAB-7780,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxif:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - verify release jobs to support 1.1.0-rc1 release,FAB-8279,27725,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 2:13 AM,v1.0.0,,,v1.1.0,,,fabric-ci,fabric-release,,,0,fabric-ci,,,,,Make sure all the release jobs are ready for v1.1.0-rc1 release,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxin:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/18 2:13 AM;rameshthoomu;All CI jobs are compatible for 1.1.0-rc1 release.;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric master for 1.1.0-rc1 release,FAB-8283,27729,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 4:48 AM,v1.1.0-preview,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

*----------*

{{git checkout master}}

{{git pull}}

_*checkout the CR from Gerrit - be sure you have latest!!!*_ 

{{git checkout -b <newbranch>}}

{{git rebase master}}

git commit --amend

*_make a tweak to commit message_*

git review

 

Check for clean CI passes

merge

----------------------

Changes

----------------------------

Update bootstrap.sh for latest baseimage:

export THIRDPARTY_IMAGE_VERSION=0.4.6

 

Update Makefile

{{BASE_VERSION = 1.1.0-rc1}}
 {{PREV_VERSION = 1.1.0-alpha}}
 {{IS_RELEASE = true}}

EXPERIMENTAL ?= false

 
 Update docs/source/samples.rst for  1.1.0-rc1

e.g. 
 curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.1.0-rc1
  
 {{release_notes/v1.1.0-rc1.txt should be created}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}

./scripts/changelog.sh v1.1.0-alpha v1.1.0-rc1",,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxiv:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 3:34 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18625/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for next release,FAB-8284,27730,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 4:53 AM,v1.0.0,,,,,,fabric-release,,,,0,,,,,,"Note that this change must be stacked on the previous task to prepare for the v1.1.0-rc1 release FAB-8283

Update Makefile

BASE_VERSION = 1.1.0-rc2

PREV_VERSION = 1.1.0-rc1

IS_RELEASE = false

EXPERIMENTAL ?= true",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxj3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 3:11 AM;denyeart;rc1: https://gerrit.hyperledger.org/r/#/c/18629/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.1.0-rc1 release,FAB-8286,27732,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 6:33 AM,v1.0.0,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.1.0-rc1}}
 {{PREV_VERSION = 1.1.0-alpha}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 
 ./scripts/changelog.sh v1.1.0-alpha v1.1.0-rc1

update release_notes/v1.1.0-rc1.txt

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxjb:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 3:27 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/18623/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for next release,FAB-8287,27733,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 6:36 AM,v1.1.0-preview,,,v1.1.1,,,fabric-release,,,,0,,,,,,"Update Makefile

{{BASE_VERSION = 1.1.0-rc2}}
 {{PREV_VERSION = 1.1.0-rc1}}
 {{IS_RELEASE = false}}

 

This should be submitted as a child of the CR to update for the 1.1.0-rc1 release FAB-8286",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxjj:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 3:27 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/18623/;;;",,,,,,,,,,,,,,,,,,,,,,
Tag repositories for 1.1.0-rc1,FAB-8293,27739,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 6:36 AM,v1.1.0-preview,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*NOTE:* depends on preceding related CRs being merged.

*NOTE* may need to create v1.1 branch

Tag each repository local clone with the release_notes/v1.1.0-alpha.txt as the tag comment

{{% git tag -a v1.1.0-rc1 -F release_notes/v1.1.0-rc1.txt}}

{{% git push origin v1.1.0-rc1 HEAD:refs/heads/master}}

Tag each of fabric, fabric-ca, fabric-sdk-node, and fabric-samples and fabric-chaincode-node (use v1.0.0-rc1)

{color:#ff0000}For 1.1.0-rc1, also tag fabric-samples release branch with v1.0.6, to enable upgrade tutorial.{color}

 
----
Note, that one can also tag the repo at a specific commit-level.

NOTE *e4b4704 should be updated with latest commit sha*

E.g., to add the {color:#f79232}*v1.1.0-rc1*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.1.0-rc1{color} {color:#205081}e4b4704{color}* -F release_notes/v1.1.0-rc1.txt}}

 

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxjr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/18 3:32 AM;ChristopherFerris;#!/bin/sh
set -e

export RELEASE=$\{1:-v1.1.0-rc1}

tag() \{
  cd $GOPATH/src/github.com/hyperledger/$\{1}
  git checkout master
  git pull
  COMMIT=`git log -n 1 --pretty=oneline | head -c7`
  if [$1 === ""fabric-samples""]; then
                git tag -a $\{RELEASE} $\{COMMIT} -m ""Aligned with Hyperledger Fabric $\{RELEASE}""
  else
                git tag -a $\{RELEASE} $\{COMMIT} -F release_notes/$\{RELEASE}.txt
  fi
  git push origin $\{RELEASE} HEAD:refs/heads/master
}

# TODO add fabric-sdk-java
# for x in fabric fabric-ca fabric-sdk-node fabric-samples fabric-chaincode-node; do
for x in fabric fabric-ca fabric-samples; do
  tag $x
done
~                    ;;;","02/Mar/18 4:22 AM;denyeart;{color:#ff0000}*NOTE:*  The script above cannot be used due to dependencies:
{color}
 * {color:#ff0000}fabric dockerhub image must exist before fabric-ca will verify.{color}
 * {color:#ff0000}fabric-ca dockerhub image must exist before fabric-node-sdk will verify.{color}

{color:#ff0000}*CAUTION:* If using the above script to tag repositories, double-check the list of repositories, and ensure that each one's HEAD is sitting at the release CR, and not the ""prepare for next"" CR.{color};;;",,,,,,,,,,,,,,,,,,,,,
"Verify fabric, fabric-ca docker images are published with 1.1.0-rc1 tag to hyperledger dockerhub account",FAB-8294,27740,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 6:37 AM,v1.0.0,,,v1.1.0,,,fabric-ci,fabric-release,,,0,,,,,,"Verify fabric, fabric-ca docker images are published with 1.1.0-rc1 tag to hyperledger docker-hub account and make sure fabric-binaries are published to nexus repository.",,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxjz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test download of v1.1.0-rc1 release artifacts and samples across all platforms,FAB-8295,27741,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 6:37 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-release,,,,0,,,,,,test download of release artifacts and samples across all platforms,,ChristopherFerris,harrijk,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxk7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,harrijk,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/18 9:09 AM;rameshthoomu;Below is the testing update on rc1 images and binaries:
 * Triggered release jobs to test *byfn*, *eyfn* on x86, s390x and ppc64le platforms - Failed intermittently on x86_64 CI build node FAB-8630
 * [~harrijk] testing byfn and efyn tests in windows machine.. PASSED
 * Verified 1.1.0-rc1 binary versions - PASSED
 * Tested fabric-ca example in x86 – Failed twice FAB-8633
 * Verified all make targets - PASSED
 * Verified tags and short url updates in fabric and fabric-ca ReadTheDocs - PASSED
 * downloaded fabric-client binaries from nexus – PASSED
 * Triggered functional tests on rc1 commit - Smoke tests are passed, few daily tests are failed. In-progress;;;","02/Mar/18 10:02 AM;harrijk;In order to run the byfn and eyfn tests I had to issue the command *dos2unix.exe fabric-samples/first-network/scripts/** to remove all carriage return characters.

I then proceeded with a byfn and eyfn end-2-end tests.  Both tests passed.;;;",,,,,,,,,,,,,,,,,,,,,
Verify doc build status on v1.1.0-rc1 release tag in ReadTheDocs,FAB-8296,27742,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,rameshthoomu,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 7:57 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-ci,fabric-docs,fabric-release,,0,,,,,,Verify doc build status on v1.1.0-rc1 release tag in ReadTheDocs,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxkf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 2:32 AM;rameshthoomu;[~ChristopherFerris], create a release tag (v1.1.0-rc1) for fabric-ca RTD build as well.;;;","02/Mar/18 6:37 AM;ChristopherFerris;RTD build queue insanely backed up;;;","02/Mar/18 6:52 AM;rameshthoomu;queue is cleared now.. http://hyperledger-fabric.readthedocs.io/en/v1.1.0-rc1/samples.html;;;",,,,,,,,,,,,,,,,,,,,
Send email to hyperledger-fabric mailing list,FAB-8297,27743,27724,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,15/Feb/18 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 8:54 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-release,,,,0,,,,,,send email announcing the release to hyperledger-fabric@lists.hyperledger.org mailing list.,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxkn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/18 8:55 AM;denyeart;[https://lists.hyperledger.org/pipermail/hyperledger-fabric/2018-March/002934.html];;;",,,,,,,,,,,,,,,,,,,,,,
Two config updates sent simultaneously with different pre-conditions should pass,FAB-8304,27750,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rohitadivi,rohitadivi,rohitadivi,15/Feb/18 4:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/May/18 7:35 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"The network was brought up using byfn with 1.1 capabilities enabled, two config updates are made by fetching the latest config block from orderer system channel (testchainid), first change is increasing the max message count in batch size from 10 to 20 and second change is increasing the batch timeout from 2s to 5s. the final pb files of both the changes are sent to the orderer at the same time using orderer admin and both the updates are passed successfully as expected. This creates two new config blocks on the orderer system channel",,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxkv:",,,,,,,,,,,,,,,,,,,,,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 4:50 AM;rohitadivi;The testing is done but need to discuss how to automate the test case and whether to automate it or no ;;;","15/May/18 7:35 AM;scottz;This is not a system test, and the design team can implement with a UT or IT testcase if they so desire. It is not a normal use case, and really does not lend itself to automation, anyways. Closing.;;;",,,,,,,,,,,,,,,,,,,,,
Two config updates sent simultaneously with same pre-conditions should fail,FAB-8305,27751,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rohitadivi,rohitadivi,rohitadivi,15/Feb/18 4:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/May/18 7:34 AM,,,,v1.1.1,,,fabric-quality,,,,0,quality,,,,,"The network was brought up using byfn with 1.1 capabilities enabled, two config updates are made by fetching the latest config block from orderer system channel (testchainid), first change is increasing the max message count in batch size from 10 to 20 and second change is increasing the max message count in batch size from 10 to 50. The final pb files of both the changes are send to the orderer at the same time using orderer admin. 

No error message is seen on the cli side but only one config update happens and the other one is discarded by the orderer.

The config update that is queued first passes successfully and the second one fails as a result only one new config block gets written on the orderer system channel.

",,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxl3:",,,,,,,,,,,,,,,,,,,,,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 4:56 AM;rohitadivi;The testing is done but need to discuss how to automate the test case and whether to automate it or no ;;;","15/May/18 7:33 AM;scottz;This is not a system test, and the design team can implement with a UT or IT testcase if they so desire. It is not a normal use case, and really does not lend itself to automation, anyways. Closing.;;;",,,,,,,,,,,,,,,,,,,,,
Corrupting a channel transaction before making a config update should fail,FAB-8306,27752,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rohitadivi,rohitadivi,rohitadivi,15/Feb/18 5:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/May/18 7:41 AM,,,,v1.1.1,,,fabric-quality,,,,0,quality,,,,,"The network is brought up using byfn with 1.1 capabilities enabled, config update is made by fetching the latest config block and adding a new org. The final proto is signed by Org 1 Admin and before sending the update from Org 2 Admin a character of the cert is changed in the pb and the config update fails as expected as the pb file is corrupted with a different value.",,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyxlb:",,,,,,,,,,,,,,,,,,,,,rohitadivi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 5:01 AM;rohitadivi;The testing is done but need to discuss how to automate the test case and whether to automate it or no ;;;","15/May/18 7:41 AM;scottz;This is not a system test, and the design team can implement with a UT or IT testcase if they so desire. Passing an invalid cert should be covered under those testcases. Closing.;;;",,,,,,,,,,,,,,,,,,,,,
[CI] - fix job configuration errros & generate code coverage report for BE jobs,FAB-8307,27753,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,15/Feb/18 5:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Feb/18 12:59 PM,,,,,,,fabric-ci,,,,0,,,,,,"fix below errors

1) remove /tmp/fabric-shim directory after the chaincode-node tests are executed

2) Generate html code coverage report for BE jobs

3) update multihost CI job configuration",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxlj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 12:59 PM;rameshthoomu;patch has been merged;;;",,,,,,,,,,,,,,,,,,,,,,
No error message on cli logs when two config updates are sent simultaneously,FAB-8309,27756,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,rohitadivi,rohitadivi,15/Feb/18 7:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 7:44 AM,,,,v1.1.1,,,fabric-peer,,,,0,quality,,,,,"When two config updates (with same conditions such as changing batch size in both) are sent to the orderer at the same time using orderer org admin, the cli logs show no error message even though one of the transactions gets discarded by the orderer. The error can be seen in the orderer logs as: Discarding bad config message: error authorizing update: error validating DeltaSet: attempt to set key [Value]  /Channel/Orderer/BatchSize to version 1, but key is at version 1

The same test scenario if done with different conditions such as changing batch size and changing batch timeout passes successfully and two config blocks are created.

This might create a confusion that both the config updates passed successfully.

Please refer to the attached screenshots to see the command that was used to send in the config update and the the error message in the orderer logs.",,denyeart,rohitadivi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 5:09 AM;rohitadivi;Cli_log.JPG;https://jira.hyperledger.org/secure/attachment/14597/Cli_log.JPG","15/Feb/18 5:09 AM;rohitadivi;ordererlog_1.JPG;https://jira.hyperledger.org/secure/attachment/14596/ordererlog_1.JPG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxm7:",,,,,,,,,,,,,,,,,,,,,denyeart,rohitadivi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 11:27 PM;denyeart;I think the CLI log just needs to indicate that the update was submitted for processing (implying that it may be invalidated upon processing, like any other transaction).;;;","21/Feb/18 1:45 AM;wlahti;Agreed, similar to how the peer channel join command was updated to state ""Successfully submitted proposal to join channel"" instead of ""Peer joined the channel"". ;;;","21/Feb/18 2:11 AM;wlahti;https://gerrit.hyperledger.org/r/c/18093/;;;",,,,,,,,,,,,,,,,,,,,
[CI] - publish stable images to nexus after perform e2e tests,FAB-8310,27758,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,15/Feb/18 1:02 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Feb/18 2:21 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"publish stable images to nexus after perform e2e tests from CI cron jobs.
 * Create a CI job to execute e2e cli, node, java and byfn tests
 * after the tests are executed successfully, trigger the downstream job
 * Downstream job should build these images and publish to nexus repository  with $ARCH-$BASE_VERSION tag",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxmn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 2:21 AM;rameshthoomu;Patch has been merged https://gerrit.hyperledger.org/r/#/c/17941/;;;",,,,,,,,,,,,,,,,,,,,,,
npm install error on optional package,FAB-8311,27759,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,latitiah,latitiah,15/Feb/18 1:29 PM,07/Sep/18 12:18 AM,28/Oct/23 3:02 AM,07/Sep/18 12:18 AM,,,,,,,fabric-build,,,,0,,,,,,"When performing `npm install` there is an error on the optional package fsevents@1.0.14.
The node_modules folder is being generated, but with the following errors on that package.

*commit*: 35cde418724af4693e51a40cad15a07a14d313fb

On local macOS:
{code}../node_modules/nan/nan_maybe_43_inl.h:220:17: warning: 'CloneElementAt' is deprecated [-Wdeprecated-declarations]
  return array->CloneElementAt(GetCurrentContext(), index);
                ^
/Users/quality/.node-gyp/8.9.4/include/node/v8.h:3502:36: note: 'CloneElementAt' has been explicitly marked deprecated here
                MaybeLocal<Object> CloneElementAt(Local<Context> context,
                                   ^
In file included from ../src/x509.cc:3:
In file included from ../include/x509.h:7:
In file included from ../node_modules/nan/nan.h:200:
In file included from ../node_modules/nan/nan_new.h:189:
../node_modules/nan/nan_implementation_12_inl.h:40:29: warning: 'New' is deprecated [-Wdeprecated-declarations]
  return v8::BooleanObject::New(value).As<v8::BooleanObject>();
                            ^
/Users/quality/.node-gyp/8.9.4/include/node/v8.h:4793:56: note: 'New' has been explicitly marked deprecated here
  V8_DEPRECATED(""Pass an isolate"", static Local<Value> New(bool value));
                                                       ^
In file included from ../src/x509.cc:3:
In file included from ../include/x509.h:7:
../node_modules/nan/nan.h:1963:15: warning: 'SetAccessor' is deprecated [-Wdeprecated-declarations]
  return obj->SetAccessor(
              ^
/Users/quality/.node-gyp/8.9.4/include/node/v8.h:3172:22: note: 'SetAccessor' has been explicitly marked deprecated here
                bool SetAccessor(Local<Name> name,
                     ^
../src/x509.cc:433:35: warning: 'CallAsConstructor' is deprecated [-Wdeprecated-declarations]
  return scope.Escape(DateObject->CallAsConstructor(1, args));
                                  ^
/Users/quality/.node-gyp/8.9.4/include/node/v8.h:3467:30: note: 'CallAsConstructor' has been explicitly marked deprecated here
                Local<Value> CallAsConstructor(int argc, Local<Value> argv[]));
                             ^
4 warnings generated.
  SOLINK_MODULE(target) Release/x509.node
added 1133 packages in 30.311s
{code}

On vagrant VM:
{code}$ npm install
npm WARN Integration@1.0.0 No repository field.
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.0.14 (node_modules/sync-dir/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.0.14: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""linux"",""arch"":""x64""})

npm ERR! path /opt/gopath/src/github.com/hyperledger/node_modules/grpc/node_modules/verror/node_modules/assert-plus/package.json.3078159880
npm ERR! code ENOENT
npm ERR! errno -2
npm ERR! syscall open
npm ERR! enoent ENOENT: no such file or directory, open '/opt/gopath/src/github.com/hyperledger/node_modules/grpc/node_modules/verror/node_modules/assert-plus/package.json.3078159880'
npm ERR! enoent This is related to npm not being able to find a file.
npm ERR! enoent 

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/ubuntu/.npm/_logs/2018-02-14T18_40_03_535Z-debug.log
$ npm -v
5.6.0
$ node -v
v8.9.4
$ more package.json 
{
  ""name"": ""Integration"",
  ""version"": ""1.0.0"",
  ""description"": ""Behave Node.js SDK Integration"",
  ""keywords"": [
    ""Behave node-sdk integration"",
    ""Call node-sdk apis from behave""
  ],
  ""engines"": {
    ""node"": "">=6.9.5 <7.0"",
    ""npm"": "">=3.10.10 <4.0""
  },
  ""license"": ""Apache-2.0"",
  ""dependencies"": {
    ""fabric-ca-client"": ""unstable"",
    ""fabric-client"": ""unstable"",
    ""fs-extra"": ""^2.0.0"",
    ""log4js"": ""^0.6.38""
  },
  ""devDependencies"": {
    ""sync-dir"": ""^1.5.1""
  }
}
{code}",,denyeart,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxmv:",,,,,,,,,,,,,,,,,,,,,denyeart,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/18 8:07 PM;denyeart;[~latitiah] Is this still an issue?  What is the component impacted?;;;","06/Sep/18 10:45 PM;latitiah;This problem no longer exists - closing;;;","07/Sep/18 12:18 AM;denyeart;Must have been fixed by another CR.;;;",,,,,,,,,,,,,,,,,,,,
Make gossip TLS binding support reverse proxies,FAB-8312,27762,27526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,yacovm,yacovm,yacovm,15/Feb/18 9:19 PM,23/Jan/20 7:27 AM,28/Oct/23 3:02 AM,23/Jan/20 7:27 AM,,,,,,,fabric-gossip,,,,0,stale-item,,,,,"A similar task to FAB-8131, gossip also employs TLS binding, and thus if we are to support peers running behind proxies, we should make the code support that.",,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxn3:",,,,,,,,,,,,,,,,,,,,,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:27 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Make gossip random selection more efficient,FAB-8313,27764,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,15/Feb/18 9:40 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,08/Mar/18 8:05 AM,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,"When gossip selects K peers out of the total candidates, it performs the filter predicate over all of them and then selects a random subset of size K (if possible).

It might be problematic in case the membership view is very large.

It will be much more efficient to first randomize the order of all peers, and then iterate and select the first K that match the predicate. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxnb:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Misspelled module name or incorrect module path causing multihost job failure,FAB-8315,27767,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,tongliofcary,rameshthoomu,rameshthoomu,16/Feb/18 12:30 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,,,,fabric-quality,,,,0,ci-failure,,,,," Error1:

ERROR! no action detected in task. This often indicates a misspelled module name, or incorrect module path.
{code:java}
tasks:
00:05:39.268     - include_tasks: ""fabricbuild/tasks/{{ mode }}.yml""
00:05:39.268       ^ here{code}
Error2:
{code:java}
00:06:17.630 ERROR! an undefined variable was found when attempting to template the vars_files item './../../vars/{{ pteenv }}.yml'
00:06:17.630 
00:06:17.630 The error appears to have been in '/w/workspace/fabric-multihost-tests-x86_64/fabric-test/tools/ATD/roles/tool_pte/plays.yml': line 13, column 7, but may
00:06:17.630 be elsewhere in the file depending on the exact syntax problem.
00:06:17.630 
00:06:17.630 The offending line appears to be:
00:06:17.630 
00:06:17.630     - ""./../../../../cello/src/agent/ansible/vars/{{ env }}.yml""
00:06:17.631     - ""./../../vars/{{ pteenv }}.yml""
00:06:17.631       ^ here
00:06:17.631 We could be wrong, but this one looks like it might be an issue with
00:06:17.631 missing quotes.  Always quote template expression brackets when they
00:06:17.631 start a value. For instance:
00:06:17.631 
00:06:17.631     with_items:
00:06:17.631       - {{ foo }}
00:06:17.631 
00:06:17.631 Should be written as:
00:06:17.631 
00:06:17.631     with_items:
00:06:17.631       - ""{{ foo }}""{code}
https://jenkins.hyperledger.org/view/multihost/job/fabric-multihost-tests-x86_64/71/console",,rameshthoomu,scottz,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxnj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,scottz,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 12:32 AM;rameshthoomu;[~suryalnvs] seems Error2 is from fabric-test/ATD.. Could you please check this.;;;","08/Mar/18 12:28 PM;tongliofcary;this is due to the ansible upgrade. the runtime needs to be upgraded. this is not a bug from agent point of view.;;;","29/Mar/18 2:19 AM;scottz;[~tongliofcary]  : what is the next step for this to get resolved, before we can close this? Are you the right person to own it, or is it [~rameshthoomu] ?;;;","28/Apr/18 3:48 AM;scottz;What is status of this issue, Ramesh? Why is it marked invalid, Tong? You did not provide any investigation details to support your action.;;;","11/May/18 2:39 AM;scottz;[~rameshthoomu] :  Is this a task for [~suryalnvs] to fix?;;;",,,,,,,,,,,,,,,,,,
Upgrade the nodejs version from 8.9.1 to 8.9.4,FAB-8316,27768,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,16/Feb/18 12:37 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,17/Feb/18 9:19 AM,,,,v1.1.1,,,fabric-ci,,,,0,ci-failure,,,,,The current nodejs version that is in use now is 8.9.1. This has to be updated to 8.9.4 as the latest tests run on nodejs 8.9.4 in the fabric tests.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxnr:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"17/Feb/18 9:27 AM;sambhavdutt;[This patch|https://gerrit.hyperledger.org/r/#/c/17949/] has been merged and the node version has been updated in [fabric-test|https://github.com/hyperledger/fabric-test/blob/master/pre_setup.sh] from 8.9.1 to 8.9.4;;;",,,,,,,,,,,,,,,,,,,,,,
Fetch the HEAD commit in verify & merge jobs instead of parent commit from the patchset,FAB-8317,27770,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,rameshthoomu,rameshthoomu,rameshthoomu,16/Feb/18 12:48 AM,19/Nov/18 2:47 PM,28/Oct/23 3:02 AM,19/Nov/18 2:47 PM,,,,,,,fabric-ci,,,,2,CI_Adhoc_Req,,,,,"*Problem area:*
 Existing Jenkins verify & merge jobs always clone the “parent commit” & GERRIT_REFSPEC from the patch set submitted by the developer not against the HEAD.

 - This approach reminds maintainer to rebase the patch before merge, as it is not fetching patch set against the latest commit from the repository.
  - When a build reference is changed in CI (like adding a new make target or update name of the target) or when a new file is added (ex: ci.properties), developers have to rebase all their submitted patches. This wastes build resources also this approach takes developer time to analyze the error.

*Proposed Solution:*

Every verify and merge patch clones the parent commit HEAD, fetch the GERRIT_REFSPEC & checkout to FETCH_HEAD.

*Benefit with this solution:*

Irrespective of the parent commit of the patch, the proposed approach catch the integration issues in the early stage of the patch verification and can avoid rebase issues.

saves build resources.",,denyeart,rameshthoomu,scottz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7454,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10181,,,,,,,,,"1|hzyxo7:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,rameshthoomu,scottz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 4:35 AM;rameshthoomu;[~ChristopherFerris] [~mastersingh24] [~yacovm] [~jyellick] [~muralisr] [~keithsmith] [~kchristidis] [~rjones-lf] [~scottz] [~tongliofcary] [~greg.haskins] need your inputs/votes on this..;;;","23/Feb/18 11:15 PM;scottz;Ramesh, please document the flows that will change. What process steps are broken (sequence that allows the loadbuild to be broken- such as not running the verify or merge jobs against rebased code)?;;;","06/Sep/18 6:03 AM;denyeart;I vote for this, it will prevent master build breaks, such as FAB-11883.

I'll propose FixVersion v1.4.0 (don't want to impact v1.3.0 delivery).;;;","19/Nov/18 2:47 PM;denyeart;Actually we decided not to do this, as it may lead to unexpected results.;;;",,,,,,,,,,,,,,,,,,,
The fabric-test-daily-x86_64 is failing in the orderer_ote as a required container is missing.,FAB-8318,27772,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,16/Feb/18 1:20 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,03/Apr/18 5:58 AM,,,,v1.2.0,,,fabric-quality,,,,0,ci-failure,,,,,"The fabric-test-daily is failing in the orderer_ote because OTE container was not found,


{code:java}
====================Starting FAB-6996 test with OTE====================
./runote.sh: line 246: FAB-6996: command not found
Error response from daemon: No such container: OTE
The testcase variable is not set. Defaulting to a blank string.
The numChannels variable is not set. Defaulting to a blank string.
./runote.sh: line 250: cd: ../../fabric-test/tools/NL: No such file or directory
./runote.sh: line 251: ./networkLauncher.sh: No such file or directory
====================Completed FAB-6996 test====================
{code}


*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/257/testReport/orderer_ote/perf_orderer/test_FAB_6996_solo_1ch/",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/18 7:40 AM;sambhavdutt;fabtest.png;https://jira.hyperledger.org/secure/attachment/14634/fabtest.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxon:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,"17/Feb/18 7:44 AM;sambhavdutt;This test case *test_FAB_6996_solo_1ch* has been failing from 10th February 


{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-6996 test with OTE====================\n./runote.sh: line 246: FAB-6996: command not found\nError response from daemon: No such container: OTE\nThe testcase variable is not set. Defaulting to a blank string.\nThe numChannels variable is not set. Defaulting to a blank string.\n./runote.sh: line 250: cd: ../../fabric-test/tools/NL: No such file or directory\n./runote.sh: line 251: ./networkLauncher.sh: No such file or directory\n====================Completed FAB-6996 test====================\n'
{code}

There have been multiple test case failures from last two tests as the node version was not update to the latest version used by the CI environment - v8.9.4. 

The other multiple test case errors in ote will possibly pass the tests, save FAB_6996, as the node version patch(FAB-8316)  has been merged today.;;;","19/Feb/18 11:55 PM;sambhavdutt;The orderer_ote test has been failing in the smoke-test-daily as well as in fabric-test-daily-x86_64. 


{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-7936_100tx_3ch_3ord_3kb test with OTE====================\nnumber of orderers: 3\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 3\nnumber of kafka: 3\nnumber of zookeeper: 1\norderer service type: kafka\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=kafka, nKafka=3, nOrderer=3, nZoo=1\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-smoke-test-daily-x86_64/gopath\n \n        ####################################################### \n        #                generate crypto-config.yaml          # \n        ####################################################### \ngenerate crypto-config.yaml ...\n./gen_crypto_cfg.sh -o 3 -r 1 -p 1 -C example.com\nnOrderer:  3\nnOrg:  1\npeersPerOrg: 1\ncomName:  example.com\nnOrderer=3, peersPerOrg=1, nOrg=1\ncfgOutFile=/w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL/crypto-config.yaml\n \n   
{code}
 
There are multiple test case failures in the orderer_ote section for  fabric-test-daily.
    
*Build Logs*

smoke-test-daily

https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/43/testReport/orderer_ote/OTE_Orderer_Traffic_Engine/test_FAB7936_100tx_3ch_3ord_3kb/

fabric-test daily

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/261/testReport/orderer_ote/perf_orderer/test_FAB_6996_solo_1ch/;;;","24/Feb/18 11:47 PM;sambhavdutt;The orderer_ote tests have been skipped/disabled for now.;;;","30/Mar/18 1:47 AM;scottz;We just merged subtask FAB-8423. Reassigning this to Sambhav for monitoring; this can be closed AFTER the ote tests passes in the next daily test run.;;;","03/Apr/18 6:03 AM;sambhavdutt;The Orderer ote test executed successfully after FAB-8423 was merged. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/1051/testReport/orderer_ote/OTE_Orderer_Traffic_Engine/test_FAB7936_100tx_3ch_3ord_3kb/;;;",,,,,,,,,,,,,,,,,,
Query Installed Chaincodes,FAB-8319,27776,27721,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandrav,sandrav,sandrav,16/Feb/18 1:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Mar/18 12:32 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,Expose query installed chaincodes,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxpj:",,,,,,,,,,,,,,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Query Channel For Peers,FAB-8320,27777,27721,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandrav,sandrav,sandrav,16/Feb/18 1:45 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Mar/18 12:32 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxpr:",,,,,,,,,,,,,,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Query Instantiated Chaincodes,FAB-8321,27778,27721,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandrav,sandrav,sandrav,16/Feb/18 1:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Mar/18 6:41 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxpz:",,,,,,,,,,,,,,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Query Config (from peers),FAB-8323,27780,27721,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sandrav,sandrav,16/Feb/18 1:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Mar/18 6:39 AM,,,,,,,,,,,0,,,,,,Note: Query channel config from peers can be done using ledger client,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxqf:",,,,,,,,,,,,,,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query Config From Orderer,FAB-8324,27781,27721,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sandrav,sandrav,sandrav,16/Feb/18 1:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 4:43 AM,,,,,,,,,,,0,,,,,,Expose query config from orderer,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxqn:",,,,,,,,,,,,,,,,,,,,,sandrav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Update CLI commands in eyfn.sh script,FAB-8327,27785,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,joe-alewine,joe-alewine,16/Feb/18 5:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 2:10 AM,v1.1.0,,,,,,fabric-docs,fabric-samples,,,0,,,,,,"The script found here: https://jira.hyperledger.org/browse/FAB-7540

Needs to have its curl commands updated to the current CLI.",,joe-alewine,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxrb:",,,,,,,,,,,,,,,,,,,,,joe-alewine,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Feb/18 7:14 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/17997;;;",,,,,,,,,,,,,,,,,,,,,,
PTE chaincodePath for nodeJS chaincode,FAB-8328,27787,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,16/Feb/18 6:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Mar/18 10:30 PM,,,,,,,fabric-quality,,,,0,,,,,,PTE chaicodePath failed when gopath is undefined in the service credential file with Node JS chaincode.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyxrr:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"17/Mar/18 12:20 AM;dongming;Node SDK adds GOPATH/src to golang chaincode but not for Node JS chaincode. This CR changes PTE to require relative path for Golang cc and absolute path for Node JS cc.

https://gerrit.hyperledger.org/r/#/c/19289/;;;",,,,,,,,,,,,,,,,,,,,,,
"PTE, update README to include usage of unstable fabric-sdk-node packages",FAB-8332,27791,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,john.d.sheehan,john.d.sheehan,john.d.sheehan,16/Feb/18 7:45 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 7:09 AM,,,,,,,fabric-quality,,,,0,,,,,,"Currently, PTE clones a copy of fabric-sdk-node in case the user wants to use PTE with the latest fabric-sdk-node code.

However, when fabric-sdk-node is updated, unstable npm packages are published.

The PTE readme should detail how to leverage these unstable packages instead of cloning the latest fabric-sdk-node.

Also need to update path in all PTE/CITest/scenarios scripts.",,dongming,john.d.sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyxsn:",,,,,,,,,,,,,,,,,,,,,dongming,john.d.sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"27/Feb/18 11:38 PM;dongming;https://gerrit.hyperledger.org/r/#/c/18403/;;;",,,,,,,,,,,,,,,,,,,,,,
Peer admin API should only be usable by admins,FAB-8333,27794,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,16/Feb/18 10:13 PM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,31/Mar/18 8:10 PM,,,,v1.2.0,,,fabric-peer,,,,3,,,,,,"The peer has an admin API which performs administrative operations such as:
 * Faking starting the peer
 * Returning the peer is up
 * Returning the log severity of a given module
 * Setting the log severity of a given module
 * Setting the log severity of all modules to default

These API methods are exposed on the same port and interface as the endorser service.
 * When the peer is configured to use TLS without requiring clients to authenticate via mutual TLS, any one that doesn't have any certificate or identity, can invoke these methods.
 * When the peer is configured to verify client certificates via mutual TLS, any client that has a TLS certificate that is issued by any organization in the channel, can invoke any of these methods.

I think, that only an admin should be able to invoke these methods, specifically - the be able to change the logging level. 
 The reason is several modules, such as gossip and msp - have high verbosity and log lots of information and that might make the disk space run out eventually, which is bad.

Something related to the topic of the admin API: 
 I think it makes sense to add to the admin API a method that makes the peer dump its stack trace into the log. This is useful for highly secure and isolated environments where no one can get into, but if there is a problem like a deadlock or something similar, having the stack trace in the log is very useful to troubleshoot.

Therefore, I propose:
 # To enforce admin authentication in the peer's admin API, meaning - to extend the protobuf message(s) to include credentials and a proof of credentials (a signature + a timestamp, to prevent replay). The signature should be only verifiable by a peer administrator of the local MSP.
 # To add a new method to the admin gRPC API ( see FAB-8335) that would make the peer dump its stack trace into the stdout.

Attached below an invocation example:
 !Capture3.PNG|thumbnail!",,C0rWin,denyeart,elli-androulaki,jyellick,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/18 11:55 PM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/14637/Capture.PNG","17/Feb/18 11:54 PM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/14636/Capture.PNG","16/Feb/18 10:16 PM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/14630/Capture.PNG","18/Feb/18 12:04 AM;yacovm;Capture2.PNG;https://jira.hyperledger.org/secure/attachment/14638/Capture2.PNG","18/Feb/18 12:10 AM;yacovm;Capture3.PNG;https://jira.hyperledger.org/secure/attachment/14639/Capture3.PNG",,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxsv:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,elli-androulaki,jyellick,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Feb/18 1:43 AM;jyellick;It seems like this exposes fabric to some potential DoS style attacks.  Given the usage of this API is so limited, I'd be inclined to lean towards pushing a fix now if it is reasonably simple.;;;","17/Feb/18 3:17 AM;denyeart;If we are going to be changing/securing APIs, I would rather do it sooner than later when there are fewer consumers.;;;","17/Feb/18 7:24 AM;mastersingh24;The first thing which should be done is to make the endpoint for the admin service configurable and give it a different default address than the endorser service (e.g. localhost:7055 or something)

There's no reason not to actually just get rid of the current service altogether .... the only useful thing is the ability to get/set logging levels remotely.

I'm not sure about typing this to the MSP structure .... need to give that some thought
;;;","17/Feb/18 9:20 AM;yacovm;{quote}The first thing which should be done is to make the endpoint for the admin service configurable and give it a different default address than the endorser service (e.g. localhost:7055 or something){quote}
If the user mis-configures the endpoint by mistake, it leaves its peer completely exposed to denial of service attacks, as Jason correctly said.
Just as an example - I can craft a special message and make the peer's CPU usage to spike for a few seconds just by changing a few lines in the peer CLI:
{code}
  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
21197 root      20   0 4103184 3.545g  11136 R  66.1 36.4   0:40.35 peer                              
{code}
I'm sure that if a malicious user does this from several terminals / threads - it effectively chokes the peer's CPU.
Also - I think that the system needs to provide a complete solution and not expect users to supply their own defenses in the forms of firewalls, and network interfaces.
I thought that people say that if you use blockchain, you're secure, no? ;)

{quote}There's no reason not to actually just get rid of the current service altogether{quote}
But then where do we put FAB-8335 ? We don't have any service that provides administrative APIs.

{quote}the only useful thing is the ability to get/set logging levels remotely.{quote}
Right, so you want to get rid of it now? Don't we need this capability?

{quote}I'm not sure about typing this to the MSP structure{quote}
I think that the local MSP is in fact pretty simple, and is always an x509 one - so what's wrong with using it for evaluating admin signatures?
They come with the peer anyway, and this has been used long ago since the start of the project... 

Meanwhile, I implemented access control for the admin service and [pushed a CR|https://gerrit.hyperledger.org/r/#/c/17985/] that has 100% code coverage for the server-side code.
I'll see where this discussion goes and will finish the client side if needed.;;;","17/Feb/18 7:56 PM;mastersingh24;Chatted with [~yacovm] on this ... concerns I have are actually orthogonal to this one.
I do still think we should run the admin service on a different listener though;;;","17/Feb/18 8:06 PM;yacovm;Yes, it makes sense to do that since the 7051 listener's client TLS CA cert pool is also contaminated by the channel wide TLS client root CA certs;;;","17/Feb/18 10:23 PM;yacovm;The CR is ready: https://gerrit.hyperledger.org/r/#/c/17985/

I tested that it works with admin, and doesn't work with none-admin certificates:
 !Capture2.PNG|thumbnail! ;;;","17/Feb/18 11:55 PM;yacovm;{quote}I do still think we should run the admin service on a different listener though
{quote}
I pushed a new [change set|https://gerrit.hyperledger.org/r/#/c/18007/] that takes care of that. By [default|https://gerrit.hyperledger.org/r/#/c/18007/1/sampleconfig/core.yaml@351], the admin server still runs with the endorser's gRPC server, however if defined otherwise it can run with its own listener.

 

!Capture.PNG|thumbnail!;;;","21/Feb/18 2:34 AM;yacovm;[~denyeart] https://gerrit.hyperledger.org/r/#/c/17985/ is based on top of https://gerrit.hyperledger.org/r/#/c/17981/ which I abandoned in light of your comment. 
Is there a point in rebasing it on top of the master branch? I'll only do that if it *100% goes in for v1.1*;;;","22/Feb/18 11:03 PM;yacovm;I'll try to re-promote this again for v1.2 after v1.1 is cut ;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Mar/18 11:04 PM;jyellick;As this is a security issue, we should address this in v1.2.;;;","24/Mar/18 12:26 AM;yacovm;[~jyellick] I rebased all 3 change sets (use envelopes + move to separate package + use different listener);;;",,,,,,,,,,
Integrate EYFN in the e2e daily CI tests,FAB-8334,27795,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,17/Feb/18 12:01 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,22/Feb/18 2:54 AM,,,,,,,fabric-ci,,,,0,quality,,,,,"Integrate Extend Your First Network into the CI tests in Jenkins environment. Append the EYFN tests with the BYFN, to add the third org and run the EYFN tests to successfully.",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxt3:",,,,Unset,,,,,,Unset,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dump peer stack trace into the output,FAB-8335,27796,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,17/Feb/18 12:12 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,21/Feb/18 2:47 AM,,,,Abandoned,,,fabric-peer,,,,3,release-planning-1.1,,,,,"I think it makes sense to add an API call to the peer, that makes the peer dump its stack trace into the log. 

This is useful for highly secure and isolated environments where no one can get into, and only the container logs are visible because they are automatically shipped via some mechanism.
In such environments, if there is a problem like a deadlock or something similar, having the stack trace in the log is very useful to troubleshoot. 

There are 2 approaches that I see:
# Add a new method to the admin gRPC API:
## Pros: The admin gRPC interface was created just for these kind of operations.
## Cons: I don't see a reason of adding this method unless it is authenticated, and the admin API currently does not have authentication. 
# Add a new method to CSCC
## Pros: We don't need to extend the admin protos, however there is no real backward compatibility issue because I don't think any client but the peer CLI has implemented this capability anyway.
## Cons: I personally don't think that chaincodes should be used for administrative operations in the peer at all, and it's pretty hard to unit test SCCs but I may be biased.",,denyeart,smithbk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxtb:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,smithbk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/18 12:41 AM;denyeart;Ability to dump stack trace is critical for troubleshooting hung peers in production environments.  I am in favor of the admin gRPC approach over chaincode approach.

I suggest we look at pprof first though...
Given that pprof collects the same information and more, and that peer already has a config option to enable pprof (https://github.com/hyperledger/fabric/blob/master/peer/node/start.go#L320), and that the configuration can either be a network port or localhost port (restricted to peer server admin), it does seem that we have our bases covered already without introducing our own code that does something that go does natively.;;;","17/Feb/18 1:43 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/17981/;;;","18/Feb/18 5:17 AM;smithbk;I agree with the admin gRPC approach with authentication/authorization added;;;","21/Feb/18 2:47 AM;yacovm;{quote}it does seem that we have our bases covered already without introducing our own code that does something that go does natively.{quote}

All right [~denyeart].  
If we're covered then there is no need for this :) ;;;",,,,,,,,,,,,,,,,,,,
CouchDB indexing: The peer log misleadingly indicates that N indexes were created when in reality it may be different,FAB-8336,27797,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,AdnanChoudhury,AdnanChoudhury,17/Feb/18 12:17 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 4:21 AM,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,"If the provided index definitions have more than one (lets say N) index with same DesignDoc and indexName but with potentially different indexes, the log will contain N messages like `created CouchDB index in the channel...` but in reality only 1 index will be created in CouchDB. Fabric goes through each file in alphabetic order, creating and (quietly) replacing the index created in last round with the same DDoc and indexName, so only the last index remains in CouchDB.

+*How to reproduce:*+
if there are two indexes in the index folder:

 
{code:java}
adnans-mbp:indexes adnanc$ cat indexOwner.json 
{""index"":{""fields"": [""docType"", ""owner"", ""color""]}, ""ddoc"": ""indexOwnerDoc"", ""type"": ""json"", ""name"": ""indexOwner""}
adnans-mbp:indexes adnanc$ cat indexOwnerOriginal.json 
{""index"":{""fields"":[""docType"",""owner""]},""ddoc"":""indexOwnerDoc"", ""name"":""indexOwner"",""type"":""json""}
{code}
The Peer log contains:
{code:java}
[36m2018-02-16 14:52:03.951 UTC [couchdb] CreateIndex -> DEBU 52f[0m Entering CreateIndex() indexdefinition={""index"":{""fields"": [""docType"", ""owner"", ""color""]}, ""ddoc"": ""indexOwnerDoc"", ""type"": ""json"", ""name"": ""indexOwner""}
[36m2018-02-16 14:52:03.951 UTC [couchdb] handleRequest -> DEBU 530[0m Entering handleRequest() method=POST url=http://couchdb01:5984/mychannel1_mycc1/_index
[36m2018-02-16 14:52:03.958 UTC [couchdb] handleRequest -> DEBU 531[0m HTTP Request: POST /mychannel1_mycc1/_index HTTP/1.1 | Host: couchdb01:5984 | User-Agent: Go-http-client/1.1 | Content-Length: 115 | Accept: application/json | Content-Type: application/json | Accept-Encoding: gzip | | 
[36m2018-02-16 14:52:04.137 UTC [couchdb] handleRequest -> DEBU 532[0m Exiting handleRequest()
2018-02-16 14:52:04.137 UTC [couchdb] CreateIndex -> INFO 533[0m Created CouchDB index in state database mychannel1_mycc1
[36m2018-02-16 14:52:04.137 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 534[0m Reading artifact from file: META-INF/statedb/couchdb/indexes/indexOwnerOriginal.json
[36m2018-02-16 14:52:04.137 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 535[0m Creating index from file file: indexOwnerOriginal.json
[36m2018-02-16 14:52:04.137 UTC [couchdb] CreateIndex -> DEBU 536[0m Entering CreateIndex() indexdefinition={""index"":{""fields"":[""docType"",""owner""]},""ddoc"":""indexOwnerDoc"", ""name"":""indexOwner"",""type"":""json""}
[36m2018-02-16 14:52:04.137 UTC [couchdb] handleRequest -> DEBU 537[0m Entering handleRequest() method=POST url=http://couchdb01:5984/mychannel1_mycc1/_index
[36m2018-02-16 14:52:04.141 UTC [couchdb] handleRequest -> DEBU 538[0m HTTP Request: POST /mychannel1_mycc1/_index HTTP/1.1 | Host: couchdb01:5984 | User-Agent: Go-http-client/1.1 | Content-Length: 99 | Accept: application/json | Content-Type: application/json | Accept-Encoding: gzip | | 
[36m2018-02-16 14:52:04.151 UTC [couchdb] handleRequest -> DEBU 539[0m Exiting handleRequest()
2018-02-16 14:52:04.151 UTC [couchdb] CreateIndex -> INFO 53a[0m Created CouchDB index in state database mychannel1_mycc1
{code}
 

Result:
Only 1 index gets created even though two index files were there and log mentions index was created for both
{code:java}
adnans-mbp:/ adnanc$ curl -k -X GET http://localhost:5984/mychannel1_mycc1/_index

{""total_rows"":2,""indexes"":[{""ddoc"":null,""name"":""_all_docs"",""type"":""special"",""def"":{""fields"":[{""_id"":""asc""}]}},{""ddoc"":""_design/indexOwnerDoc"",""name"":""indexOwner"",""type"":""json"",""def"":{""fields"":[{""docType"":""asc""},{""owner"":""asc""}],""partial_filter_selector"":{}}}]}
{code}




 ",,AdnanChoudhury,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxtj:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Feb/18 12:51 AM;denyeart;Chris, I think this would best be handled by additional validation at packaging time.;;;","21/Feb/18 3:39 AM;chris.elder;I think this can be handled at two different levels.   One level would be to correct the messaging to indicate if the index is created or updated and include the name of the index and design document.   An additional check can be made during packaging to ensure that two separate but identical indexes are created.;;;","21/Feb/18 3:40 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/18099/;;;","21/Feb/18 3:54 AM;denyeart;Ok, after looking at the options, only the logging clarification is containable in 1.1, let's go with that approach.  The peer log should indicate whether it is creating or updating an index.  This will be helpful for people upgrading chaincode with an existing index in place regardless.;;;","25/Feb/18 1:03 AM;AdnanChoudhury;Working with images built this morning (Feb 24), for the scenario mentioned in original message, I am seeing the peer log still contains two ""created CouchDB index"" and *no* ""updated CouchDB index"" and the only one index exists in CouchDB.

 ;;;","25/Feb/18 3:02 AM;denyeart;Testing against latest master, I deployed a chaincode that had two index json files, each defining the same index.  In the peer log, I see that the index is created and then updated:


{code:java}
2018-02-24 17:49:42.916 UTC [couchdb] CreateIndex -> INFO 517 Created CouchDB index [indexOwner] in state database [myc_marbles] using design document [_design/indexOwnerDoc]

2018-02-24 17:49:42.919 UTC [couchdb] CreateIndex -> INFO 51c Updated CouchDB index [indexOwner] in state database [myc_marbles] using design document [_design/indexOwnerDoc]
{code}



[~AdnanChoudhury] could you paste the corresponding lines from your log?  This could be a timing issue where CouchDB does not detect a previously created index for a few milliseconds, we've seen issues like that but determined it was benign after discussing with CouchDB developers.
;;;","26/Feb/18 8:50 PM;denyeart;Since there is no runtime problem, only logging for an edge case, let's defer this to 1.2.;;;","27/Feb/18 4:25 AM;chris.elder;I duplicated Dave's results with the current build.  The timestamps for create and update of the same index are 3ms apart.

2018-02-26 17:21:37.112 UTC [couchdb] CreateIndex -> INFO 50f Created CouchDB index [indexOwner] in state database [myc_marbles] using design document [_design/indexOwnerDoc]

2018-02-26 17:21:37.115 UTC [couchdb] CreateIndex -> INFO 514 Updated CouchDB index [indexOwner] in state database [myc_marbles] using design document [_design/indexOwnerDoc]

[~AdnanChoudhury], were the times between the two timestamps in your log closer in time?   If you can post your results here, that would be great.;;;","28/Feb/18 1:52 AM;AdnanChoudhury;[~chris.elder] heres the debug level log, in my test the ""Created CouchDB index"" messages are 12 ms apart. Tested with images built today.



 
{code:java}
[[36m2018-02-27 16:40:02.613 UTC [couchdb] CreateIndex -> DEBU 586^[[0m Entering CreateIndex()  indexdefinition={""index"":{""fields"":[""docType"",""owner""]},""ddoc"":""indexOwnerDoc"", ""name"":""indexOwner"",""t     ype"":""json""}
1516 ^[[36m2018-02-27 16:40:02.613 UTC [couchdb] handleRequest -> DEBU 587^[[0m Entering handleRequest()  method=POST  url=http://couchdb01:5984/mychannel1_mycc1/_index
1517 ^[[36m2018-02-27 16:40:02.614 UTC [couchdb] handleRequest -> DEBU 588^[[0m HTTP Request: POST /mychannel1_mycc1/_index HTTP/1.1 | Host: couchdb01:5984 | User-Agent: Go-http-client/1.1 | Content-Lengt     h: 99 | Accept: application/json | Content-Type: application/json | Accept-Encoding: gzip |  |
1518 ^[[36m2018-02-27 16:40:02.712 UTC [couchdb] handleRequest -> DEBU 589^[[0m Exiting handleRequest()
1519 2018-02-27 16:40:02.712 UTC [couchdb] CreateIndex -> INFO 58a^[[0m Created CouchDB index [indexOwner] in state database [mychannel1_mycc1] using design document [_design/indexOwnerDoc]
1520 ^[[36m2018-02-27 16:40:02.712 UTC [couchdb] CreateIndex -> DEBU 58b^[[0m Entering CreateIndex()  indexdefinition={""index"":{""fields"": [""docType"", ""owner"", ""color""]}, ""ddoc"": ""indexOwnerDoc"", ""type"": ""     json"", ""name"": ""indexOwner""}
1521 ^[[36m2018-02-27 16:40:02.712 UTC [couchdb] handleRequest -> DEBU 58c^[[0m Entering handleRequest()  method=POST  url=http://couchdb01:5984/mychannel1_mycc1/_index
1522 ^[[36m2018-02-27 16:40:02.712 UTC [couchdb] handleRequest -> DEBU 58d^[[0m HTTP Request: POST /mychannel1_mycc1/_index HTTP/1.1 | Host: couchdb01:5984 | User-Agent: Go-http-client/1.1 | Content-Lengt     h: 115 | Accept: application/json | Content-Type: application/json | Accept-Encoding: gzip |  |
1523 ^[[36m2018-02-27 16:40:02.729 UTC [couchdb] handleRequest -> DEBU 58e^[[0m Exiting handleRequest()
1524 2018-02-27 16:40:02.729 UTC [couchdb] CreateIndex -> INFO 58f^[[0m Created CouchDB index [indexOwner] in state database [mychannel1_mycc1] using design document [_design/indexOwnerDoc]
 
{code}
 ;;;","28/Feb/18 2:47 AM;denyeart;To test my theory that this is due to a CouchDB timing issue, copy the index definition 50 times in the package.  I suspect you will see a few Creates and then the rest Updates.;;;","28/Feb/18 4:21 AM;AdnanChoudhury;[~denyeart] was doing just that :) 
You guessed correct, 3 ""Created"" and 97 ""Updated"" for 100 same index definitions. 
As the Fabric is dependent on the CouchDB return message, and Fabric log now shows ""updated"" when Couch says that it was updated, for me this issue is solved/verified.

The small corner case that remains is a CouchDB issue, that may be addressed via CouchDB project if need be.  ;;;",,,,,,,,,,,,
"Send traffic while upgrading orderers and peers on only 2 channels, enable capabilities on orderers and on channel1, and leave the peers on chan2 at v1.0",FAB-8337,27798,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,suryalnvs,suryalnvs,suryalnvs,17/Feb/18 12:24 AM,27/Jul/19 9:26 PM,28/Oct/23 3:02 AM,27/Jul/19 9:26 PM,,,,v1.1.1,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,"{color:#000000}upgrade binaries on 2 peers who have joined chan1; 2 peers on chan2 not updated staying on 1.0 binaries. Send traffic while upgrading orderers and peers on only 2 channels, enable capabilities on orderers and on channel1, and leave the peers on chan2 at v1.0. (with v1.0.x fabric-ca, fabric-sdk-node?){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6446,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxtr:",,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create latest docker image tag alias when publishing to docker hub.,FAB-8338,27799,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rickr,rickr,17/Feb/18 12:30 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,23/May/18 11:18 AM,v1.1.0,,,v1.2.0,,,fabric-build,,,,1,,,,,,"The purpose for this is to allow in docker-compose files the ability to just reference the latest fabaric/ca images regardless of their release tags.

Each time a release in a major version is published to docker hub with tags like:

x86_64-1.1.0-alpha, x86_64-1.1.0-rc and later x86_64-1.1.0, and then x86_64-1.1.1

There should be a x86_64-1.1-LATEST image tag alias that is update to reference that same image above.

 

This would allow for SDKs, tests user created in docker-compose files to just get the latest when they're published. by specifying something like this:

orderer.example.com:
     container_name: orderer.example.com
     image: hyperledger/fabric-orderer:x86_64-1.1-LATEST

 

Discussed with [~mastersingh24]

 

 ",,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,rickr,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5680,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10068,,,,,,,,,"1|hzyxtz:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,rickr,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/18 12:34 AM;mastersingh24;I think we should do this for 1.1.

I'd like to leverage multi-arch support if we can, but this seems like a fairly expedient solution depending on timing;;;","17/Feb/18 4:11 AM;rameshthoomu;Working on this;;;","19/Feb/18 1:52 AM;rickr;If it's fairly easily doable can we post update Docker hub so that x86_64-1.1-LATEST is now an alias to  _*x86_64-1.1.0-alpha*_?
When we publish _*x86_64-1.1.0-rc*_ we can see it get updated to that?  Also, this would allow for merging that change in the SDK right now.
I'm guessing it's not easy so not expecting it.  But you can always ask :);;;","01/Mar/18 2:16 AM;rameshthoomu;[~mastersingh24], proposal is submitted here for fabric-ca images [https://gerrit.hyperledger.org/r/#/c/18467/] . Please review and let me know if this works. I would suggest to push manifest with `latest` tag so that we can skip giving arch based tags in the docker-compose files.

I have tested this patch with my personal dockerhub account and it worked as expected.

I have pushed *latest* docker tag to *rameshthoomu/fabric-peer* and if you execute *docker pull rameshthoomu/fabric-peer* from x86_64, ** it will try to pull from _rameshthoomu/fabric-peer-x86_64_ *1.1.0-beta* image and the same works from s390x (_rameshthoomu/fabric-peer-s390x_)
 * docker manifest is pushed to the docker registry with *1.1.0-beta* to *latest* docker image tag. So that both tags are in sync..;;;","10/Mar/18 1:21 AM;denyeart;Discussed on maintainers channel, we will target 1.2 for this capability.;;;","22/Mar/18 2:47 AM;sanchezl;In keeping with the [official guidance on tags|https://github.com/docker-library/official-images#tags-and-aliases], we should refrain from using the `latest` text on any tags (except the actual {{latest}}. 
h6. Images should be tagged

A published image would be tagged with one or more of the following tags:
|*{{m.n.p}}*|Latest build of patch version.|
|*{{m.n}}*|Latest build of minor version.|
|-*{{m}}*-|-Latest build of major version.- (we can skip this for fabric for now) |
|*{{latest}}*|Latest recommended version image.|
|*{{m.n.p-xxxx}}*|Latest milestone release build of a patch version (e.g. {{beta}}, {{alpha}}, {{rc}}, etc.. |
h6. Tags pointing to releases

Based on the currently published images, I would expect to see the following tags:
|{{1.1.0  1.1  latest}}|all point to 1.1.0 (a.k.a 1.1 release)|
|{{1.0.6  1.0}}|all point to 1.0.6 (a.k.a 1.0 release)|
|{{1.0.0  1.0.1  1.0.2  1.0.3  1.0.4  1.0.5}}|other release images|
h6. Unreleased image tags

You should be able to start using the {{1.1.1}} and {{1.2.0}} and {{1.2}} tags now if you want to be on the bleeding edge:
|{{1.2  1.2.0  1.2.0-xxxx}}|all point to latest build of 1.2 (where {{xxxx}} might be {{beta}}, {{alpha}}, {{snapshot}}, etc.).|
|{{1.1.1}}   {{1.1.1-xxxx}}|all point to the latest build of the release-1.1 branch.|
h6.  Use of these tags

It is up to the consumer of these tags to decide which ones to use when pulling images. For example, [~rickr] would have to decide if he uses the {{1.2}} tag or the {{1.2.0}} tag to pick up the latest 1.2.0 builds depending on how much control he wants when it comes to moving up to new patch releases.
h6. Multi-arch 

The tags in this comment assume that this would happen together with the multi-arch support being added in FAB-5680. 

----
[~denyeart][~ChristopherFerris][~mastersingh24];;;","24/Mar/18 12:09 AM;rickr;I'm not going to get hung up on verbage here on tags. As the key word in that link is *guidance*.

The SDK or any dependencies of Fabric should be able to reference a stream of updates in a m.n of fix releases without being locked stepped in to having to issue a new release to match the latest fix version.   I'm fine with anything  as long as that is what is achieved.

 ;;;","22/Apr/18 8:43 AM;ChristopherFerris;I'm working on this from https://jira.hyperledger.org/browse/FAB-9629;;;","23/Apr/18 1:30 AM;ChristopherFerris;[https://gerrit.hyperledger.org/r/20875] scripts for all images for 1.1.x release;;;","23/Apr/18 1:51 AM;ChristopherFerris;To be clear, docker multi-arch support essentially is a manifest list of published images that can be architecture and os specific, but referenced by the same tag ""alias"". You can still reference the images by their FQT (fully qualified name:tag). Hence, we can publish:

hyperledger/fabric-peer:x86_64-1.1.0

hyperledger/fabric-peer:ppc64le-1.1.0

hyperledger/fabric-peer:s390x-1.1.0

can all be referenced (from their respective architectures) as:

hyperledger/fabric-peer:latest

or

hyperledger/fabric-peer:1.1.0

and just as with docker tags, you can replace them any time. So, as 1.1.1 is published, it could receive the 'latest' tag, etc,.

 ;;;","16/May/18 6:16 AM;rameshthoomu;[~ChristopherFerris] I think publishing *`latest`* tag is only happen from *`master`* branch and not from any other branches (release-*).  What tags we use to publish images with docker multi-arch from release branches?;;;","23/May/18 11:18 AM;rameshthoomu;Docker multi-arch support is now available for 1.1.0 [https://hub.docker.com/r/hyperledger/fabric-tools/tags/];;;",,,,,,,,,,,
Fixing config templates in ATD to run nodejs chaincode using PTE,FAB-8339,27800,21029,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,17/Feb/18 12:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Feb/18 5:22 AM,,,,,,,fabric-quality,,,,0,quality,,,,,Fixing config templates in ATD to support running nodejs chaincode using PTE,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxu7:",,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"25/Feb/18 5:22 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/18347/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - update CI wiki page with updated CI process documentation,FAB-8340,27801,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,17/Feb/18 1:22 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,07/May/18 8:03 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,update wiki page [https://wiki.hyperledger.org/projects/fabric/fabric_ci_documentation] with latest CI information,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxuf:",,,,Unset,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update pre-setup script path to install location,FAB-8341,27802,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,luomin,scottz,scottz,17/Feb/18 2:36 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 11:34 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"Running in vagrant the fabric-tes/pre-setup.sh script, I see error:

ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test$ make pre-setup
 => nvm is already installed in /home/ubuntu/.nvm, trying to update using git
 => error: pathspec 'v0.33.2' did not match any file(s) known to git.

...

 

Line

wget -qO- [https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh] | bash

must be changed to use updated path such as  v0.33.4  or even  v0.33.8 ",,luomin,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxun:",,,,,,,,,,,,,,,,,,,,,luomin,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"19/Feb/18 10:29 AM;luomin;https://gerrit.hyperledger.org/r/#/c/18051/;;;",,,,,,,,,,,,,,,,,,,,,,
Allow querying inequalities for CompositeKeys with GetStateByRange,FAB-8342,27803,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,CallanHP,CallanHP,17/Feb/18 2:54 AM,20/Aug/18 8:35 PM,28/Oct/23 3:02 AM,20/Aug/18 8:35 PM,,,,,,,fabric-ledger,,,,0,,,,,,"GetStateByPartialCompositeKey only allows for exact matching of key attribute values, it does not allow for comparisons. This is an issue when working with objects such as timestamps, where an exact match is far less valuable than a less than or greater than comparison.

This can be handled by allowing GetStateByRange to query both the composite and simple key namespaces, though obviously querying both at the same time is likely to cause issues.

This could be achieved by replacing the current validateSimpleKeys check with a namespacing check, i.e.

{{// GetStateByRange documentation can be found in interfaces.go}}
{{func (stub *ChaincodeStub) GetStateByRange(startKey, endKey string) (StateQueryIteratorInterface, error) \{}}
{{    if startKey == """" \{}}
{{        startKey = emptyKeySubstitute}}
{{    }}}
{{    if keyInCompositeNamespace(startKey) != keyInCompositeNamespace(endKey) \{}}
{{        return nil, fmt.Errorf(""Range queries cannot mix simple and composite keys."")}}
{{    }}}
{{    return stub.handleGetStateByRange(startKey, endKey)}}
{{}}}

Where {{keyInCompositeNamespace}} is something like the follows:

{{//Check if a given key is in the composite namespace}}
{{func keyInCompositeNamespace(key string) bool \{}}
{{    return len(key) != 0 && key[0] == compositeKeyNamespace[0]}}
{{}}}

 ",,CallanHP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11281,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxuv:",,,,Unset,,,,,,Unset,,,,,,,,,,,CallanHP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reentrant lock issue casung deadlock during commit with pvt data,FAB-8347,27808,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,17/Feb/18 8:38 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/May/18 3:31 AM,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,"When committing a block with pvt data. The committer routine queries the ledger for retrieving the static collection configs. This causes the committer to get a read lock. Further, this happens when the committer has already acquired the write lock. The acquisition of write lock should be performed after the earlier needed data is read.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwsyv:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
e2e tests from fabric-samples (master) are not working with 1.1.0-alpha release,FAB-8348,27809,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,rameshthoomu,rameshthoomu,17/Feb/18 10:20 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 11:39 AM,,,,v1.1.1,,,fabric-samples,,,,0,,,,,,"Observed e2e tests from fabric-samples (*commit # 24f35c14932a0ae622dd32da76ceb33afd635594)* are not working with *1.1.0-alpha images*

Below are the steps executed:
{code:java}
cd fabric-samples
curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0-alpha
cd first-network
echo ""======> DEFAULT CHANNEL <======""
echo y | ./byfn.sh -m down
echo y | ./byfn.sh up -t 60
echo y | ./byfn.sh -m down{code}
Query is failing on peer1.org2

 
{code:java}
 
00:02:56.954 !!!!!!!!!!!!!!! Query result on peer1.org2 is INVALID !!!!!!!!!!!!!!!!
00:02:56.954 ================== ERROR !!! FAILED to execute End-2-End Scenario ==================
{code}
 ",,denyeart,luomin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxvz:",,,,,,,,,,,,,,,,,,,,,denyeart,luomin,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Feb/18 11:24 AM;denyeart; 
I think we have to say that only 1.1.0-alpha fabric-samples are guaranteed to work with 1.1.0-alpha binaries/images. And as improvements are made in master they have to be compatible between fabric and fabric-samples master.
 
So let's use this work item to mention this on the doc page:
[http://hyperledger-fabric.readthedocs.io/en/master/samples.html]
 
after cloning fabric-samples, checkout the samples tag matching your binaries/images.
 
Lowering priority to Medium.
 ;;;","18/Feb/18 9:13 PM;luomin;https://gerrit.hyperledger.org/r/#/c/18025/;;;",,,,,,,,,,,,,,,,,,,,,
Move peer admin server to its own package,FAB-8349,27810,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,17/Feb/18 10:26 PM,08/May/19 10:07 PM,28/Oct/23 3:02 AM,08/May/19 10:07 PM,,,,,,,fabric-peer,,,,0,,,,,,"We should probably move the peer admin API to its own package, because it stands out in the core/ package and affects its code coverage report and doesn't reflect well the reality.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxw7:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Feb/18 10:50 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/18005/;;;",,,,,,,,,,,,,,,,,,,,,,
Make admin server have its own listener,FAB-8350,27811,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,17/Feb/18 10:53 PM,08/May/19 10:08 PM,28/Oct/23 3:02 AM,08/May/19 10:08 PM,,,,,,,fabric-peer,,,,0,,,,,,"The peer's admin server shares the listener with the endorser one.

 

This doesn't make much sense because the admin service might be deployed in a setup where it should only be accessible to peer administrators and not to clients, and also  - mutual TLS is used, then it also accepts TLS client certificates issued by CAs of other organizations which share a channel with the peer's organization.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxwf:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Feb/18 11:45 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/18007/;;;",,,,,,,,,,,,,,,,,,,,,,
"pull access denied for hyperledger/fabric-buildenv, repository does not exist",FAB-8354,27815,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,RichardHill,RichardHill,18/Feb/18 9:32 AM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,,,,fabric-quality,,,,0,,,,,,"I am unable to find the docker repo  hyperledger/fabric-buildenv

I am using commit 1e73fa791bc2681aa827bf802f8637321948dcff from fabric-test.git

steps
git submodule update --init --recursive

git submodule foreach git reset --hard origin/master

cd fabric-ca/

make docker

cd ../fabric

make docker configtxgen cryptogen

result
Step 1/10 : FROM hyperledger/fabric-buildenv:x86_64-1.1.0-alpha-snapshot-792e4fe
pull access denied for hyperledger/fabric-buildenv, repository does not exist or may require 'docker login'

This can also be replicated by 

$docker pull hyperledger/fabric-buildenv:x86_64-1.1.0-alpha-snapshot-792e4fe.

Searching docker hub for 'hyperledger/fabric-buildenv', shows me its not there 

https://hub.docker.com/search.

I wonder if the problem is that the repo is private

",,denyeart,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxxb:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/18 4:51 AM;denyeart;[~rameshthoomu] What is your opinion?;;;","08/Apr/18 4:00 AM;mastersingh24;We don't publish the fabric-buildenv image.  It is built as part of the build process;;;",,,,,,,,,,,,,,,,,,,,,
Cut v1.0.6 release,FAB-8356,27817,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,18/Feb/18 8:55 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 7:44 AM,,,,v1.0.6,,,fabric-release,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxxj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.6 for fabric bugs to be included in 1.0.6 release,FAB-8357,27818,27817,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,18/Feb/18 8:58 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Feb/18 8:58 PM,,,,v1.0.6,,,fabric-release,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxxr:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/18 8:58 PM;mastersingh24;https://jira.hyperledger.org/issues/?filter=12124;;;",,,,,,,,,,,,,,,,,,,,,,
Update pkcs11 vendor package to support go 1.9.4 and 1.10.,FAB-8358,27819,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,18/Feb/18 9:03 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 4:46 AM,,,,v1.1.1,,,fabric-peer,,,,0,,,,,,"After upgrading golang to new version of either 1.9.4 or 1.10 following issues appears on MacOS while trying to compile peer code:

{code}
go build github.com/miekg/pkcs11: invalid flag in #cgo LDFLAGS: -Wl,--no-as-needed
{code}

There is an [issue|https://github.com/miekg/pkcs11/issues/63] on miekg/pkcs11
lib github which provides a fix, therefore I'd suggest to update the pkcs11 dependency to latest.

",,C0rWin,shaileshkanzariya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxxz:",,,,,,,,,,,,,,,,,,,,,C0rWin,shaileshkanzariya,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Feb/18 9:03 PM;C0rWin;https://gerrit.hyperledger.org/r/18023;;;","02/Mar/18 12:08 AM;shaileshkanzariya;[~C0rWin] looks like you have fixed this issue. But as per this [https://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html] we use ""go get -u --tags nopkcs11 github.com/hyperledger/fabric/core/chaincode/shim"" which still gives error into go 1.9.4. Please check.;;;","02/Mar/18 1:42 AM;C0rWin;sure, will take a look into it.;;;","04/Mar/18 11:09 PM;C0rWin;[~shaileshkanzariya] just tried to compile and works as expected. have you updated you vendors folders within your chaincode?;;;","06/Mar/18 9:46 PM;shaileshkanzariya;[~C0rWin] When I try to run ""govendor update +vendor"" command into my chaincode-folder, it gives error ""Error: Package ""/../../../""  not a go package or not in GOPATH."" I know that this is different problem but I have ended up having GOPATH as different folder and ""chaincode src with vendor"" into different folder. I tried different things as per govendor doc but yet not any success. Let me know if you have come across similar issue and know the way to fix it.;;;",,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.0.6,FAB-8359,27820,27817,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,18/Feb/18 9:05 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 7:23 AM,,,,v1.0.6,,,fabric-release,,,,0,,,,,,"* Update Makefile
** BASE_VERSION = 1.0.6
** PREV_VERSION = 1.0.5
** IS_RELEASE = true
* update download link in docs/source/samples.rst
* create release_notes/v1.0.6.txt
* docs/source/releases.rst should be updated with prose and link to GH release page
* change log should be generated just after rebasing to pick up the last minute merged CRs and linked from docs/source/releases.rst",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxy7:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 1:29 AM;mastersingh24;https://gerrit.hyperledger.org/r/18031;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for v1.0.7 release,FAB-8360,27821,27817,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,18/Feb/18 9:07 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 7:23 AM,,,,,,,,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxyf:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 1:29 AM;mastersingh24;https://gerrit.hyperledger.org/r/18033;;;",,,,,,,,,,,,,,,,,,,,,,
"Improve block committer UT, remove dependency on ledger",FAB-8361,27822,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,18/Feb/18 9:17 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,15/Mar/18 6:22 PM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"Currently committer UT using ledger, to actually check functionality, however this introduces complexity and couples test to be dependent on the ledger package. This dependency could be removed by leveraging:
{code}
""github.com/stretchr/testify/mock""
{code}

which will allow to speed up the test, to make it parallel and voids the need to create physical ledger during UT.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyxyn:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Feb/18 9:20 PM;C0rWin;https://gerrit.hyperledger.org/r/18027;;;",,,,,,,,,,,,,,,,,,,,,,
upgrade baseimage version in fabric components,FAB-8362,27823,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Feb/18 10:35 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 4:08 AM,,,,v1.1.0,,,fabric-build,,,,0,fabric-build,,,,,upgrade baseimage version in fabric components,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxyv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade baseimage version to 0.4.6 in fabric,FAB-8363,27824,27823,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Feb/18 10:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 8:28 PM,,,,v1.1.0,,,fabric-build,,,,0,fabric-build,,,,,**upgrade baseimage version to 0.4.6 in fabric,,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-65,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxz3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 10:27 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18041/;;;",,,,,,,,,,,,,,,,,,,,,,
upgrade baseimage version to 0.4.6 in fabric-sdk-node,FAB-8364,27825,27823,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Feb/18 10:45 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 4:08 AM,,,,v1.1.0,,,fabric-build,,,,0,fabric-build,,,,,"upgrade baseimage version to 0.4.6 in fabric-sdk-node

 
{code:java}
fabri-sdk-node/fabric-ca-client/package.json

""thirdparty"": ""0.4.6"",
{code}
 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxzb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 10:27 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18047/;;;",,,,,,,,,,,,,,,,,,,,,,
upgrade baseimage version to 0.4.6 in fabric-ca,FAB-8365,27826,27823,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Feb/18 10:47 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 4:08 AM,,,,v1.1.0,,,fabric-ca-build,,,,0,fabric-ca,,,,,"upgrade baseimage version to 0.4.6 in fabric-ca

https://github.com/hyperledger/fabric-ca/blob/master/Makefile#L55",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyxzj:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 10:27 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18039/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix incorrect Org.Name description in configtx YAML,FAB-8366,27828,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,19/Feb/18 1:10 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,20/Feb/18 5:00 AM,v1.0.5,,,v1.1.1,,,fabric-orderer,,,,0,,,,,,"The current description:

{quote}DefaultOrg defines the organization which is used in the sampleconfig of the fabric.git development environment{quote}

Makes zero sense.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyy07:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Feb/18 1:13 AM;kchristidis;https://gerrit.hyperledger.org/r/c/18029/;;;",,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.6 for fabric-ca bugs to be included in 1.0.6 release,FAB-8367,27829,27817,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/Feb/18 1:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,19/Feb/18 1:47 AM,,,,v1.0.6,,,fabric-release,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy0f:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 1:47 AM;mastersingh24;https://jira.hyperledger.org/issues/?filter=12125;;;",,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric CA v1.0.6,FAB-8368,27830,27817,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/Feb/18 1:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 7:23 AM,,,,v1.0.6,,,fabric-release,,,,0,,,,,,"* Update Makefile
** BASE_VERSION = 1.0.6
** PREV_VERSION = 1.0.5
** IS_RELEASE = true
* change log should be generated just after rebasing to pick up the last minute merged CRs 
update release_notes/v1.0.6.txt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy0n:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 1:53 AM;mastersingh24;https://gerrit.hyperledger.org/r/18035;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for v1.0.7 release,FAB-8369,27831,27817,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/Feb/18 1:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 7:23 AM,,,,v1.0.6,,,fabric-release,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy0v:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 1:53 AM;mastersingh24;https://gerrit.hyperledger.org/r/18037;;;",,,,,,,,,,,,,,,,,,,,,,
Per chaincode authentication filters and decorators,FAB-8370,27832,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yacovm,yacovm,19/Feb/18 2:49 AM,23/Jan/20 7:27 AM,28/Oct/23 3:02 AM,23/Jan/20 7:27 AM,,,,,,,fabric-peer,,,,0,stale-item,,,,,"Introduction:
 * Many use cases need an endorsement policy that requires endorsements from multiple organizations
 * The chaincode that is installed needs to be identical across all peers (in fact - Fabric enforces this at endorsement time).

However, two organizations that have the same chaincode installed, may have slightly different rules that dictate who is authorized to request an endorsement:
 *  Organization A might trust only users from a specific OU in organization B to receive an endorsement from it, while this might not be of an importance to organization B.
 * The reason the chaincode needs to be identical across organizations is that the write sets would be computed in the same fashion across organizations, since the chaincode endorsement is actually a proof of correct execution of business logic rules that dictate the next world state based on the previous world state.
 * An organization might want to check if the given client (user) is found in some black list (i.e an OCSP request to the client's issuer) and doesn't want to enforce other organizations in the channel that have endorsers to upgrade their chaincodes.
 * An organization might want to communicate to some system that performs access control decisions but it may not want to share this with other organizations.

As known, [authentication filters|https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L345-L360] (introduced in v1.1) are peer-local handlers which intercept chaincode proposals for endorsement, and enforce custom logic which may decide to reject the client's proposal and return an error.

Currently, authentication filters are enforced globally across all chaincodes, and the implementer needs to extract the chaincode name from the proposal if he/she wishes to have different rules per chaincode.

This makes deployment clumsy and inefficient, because if the peer has *n* chaincodes installed and each of the chaincodes has its own authentication filter - the peer actually runs the proposal through *n* authentication filters instead of through 1 of them.
  
 I suggest that we make authentication filters to be able to be enforced per-chaincode and not globally. 
 However, in order to be backward compatible with existing deployments and also to be able to have authentication filter logic that spans across chaincodes - we need to also support the original mode where authentication filters are enforced globally.

Therefore I suggest that the authentication filter configuration would be extended with another attribute that would govern whether the given auth filter is enforced globally or only to specific chaincodes.

The existing authentication filter configuration looks as the following:
{code:java}
authFilters:

-
 name: FilterOne
 library: /opt/lib/filter.so
 
-
 name: FilterTwo{code}
Where the library attribute symbols that it is a plugin and not a pre-compiled auth filter.

We propose another attribute: *chaincodes* which governs on which chaincodes the auth filter is enforced. 
 Absence of the attribute would denote it is enforced globally, and therefore the existing behavior will be preserved.

In the following example - *FilterOne* is only enforced on exampleCC, and *FilterTwo* is enforced on all chaincodes.
 Therefore, if a proposal is received - it will first go through *FilterOne* (if it is targeted to exampleCC, otherwise it won't go through it), and in any case will go through *FilterTwo*.
{code:java}
authFilters:

-
 name: FilterOne
 library: /opt/lib/filter.so
 chaincodes: exampleCC
 
-
 name: FilterTwo

{code}
*Decorators*: I believe similar arguments could be applied for [decorators|https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L361-L366], which are handlers which pass additional information to the shim. 
 I believe that users might benefit from per chaincode decorators

Opinions?

[~mastersingh24] [~troyronda] [~C0rWin] [~denyeart] [~jyellick]",,indira.kalagara,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyy13:",,,,Unset,,,,,,Unset,,,,,,,,,,,indira.kalagara,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:27 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] - update baseimage  version to 0.4.6 in CI x86_64 node packer image,FAB-8371,27833,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Feb/18 4:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 4:39 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,[CI] - update baseimage version to 0.4.6 in CI x86_64 node packer image,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy1b:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 10:33 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18045/;;;",,,,,,,,,,,,,,,,,,,,,,
Deprecate FabricCAClient interface,FAB-8372,27834,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,19/Feb/18 8:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 12:15 PM,,,,,,,,,,,0,,,,,,.. in favour of the EnrollmentService and IdentityManager,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy1j:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""ERROR !!! ORG Unknown"" in fabric-samples byfn test",FAB-8374,27836,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,Ratnakar,rameshthoomu,rameshthoomu,19/Feb/18 12:00 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 4:42 AM,,,,v1.1.0,,,fabric-samples,,,,0,fabric-samples,,,,,"Observed below error message on console log, while running *""./byfn.sh up -t 60""* in fabric-samples on latest commit repository.
{code:java}
00:18:23.559 Build your first network (BYFN) end-to-end test
00:18:23.559 
00:18:23.563 Channel name : mychannel
00:18:23.568 Creating channel...
00:18:23.569 ================== ERROR !!! ORG Unknown =================={code}
https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-byfn-verify-x86_64/213/console",,denyeart,rameshthoomu,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy1z:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/18 4:41 AM;Ratnakar;This has been fixed with [https://gerrit.hyperledger.org/r/#/c/18075/];;;","21/Feb/18 4:42 AM;Ratnakar;changing the priority to *Low* as this doesn't impact the test but an error message is shown in the logs;;;","21/Feb/18 4:44 AM;denyeart;[~Ratnakar] If it is fixed, why does it still print the error message?  Do you know the fix?;;;","21/Feb/18 5:03 AM;Ratnakar;[~denyeart] The above said fix been merged couple of hours ago. with this [change|https://github.com/hyperledger/fabric-samples/commit/41e144f3278c455c1068d5571ea89c1e4e7560f4#diff-425d1f9adb6c14ac446745318342a78cR36]. The error messages won't be displayed any more with latest code.;;;",,,,,,,,,,,,,,,,,,,
Documentation Node SDK for Mutual TLS/Client Auth,FAB-8377,27840,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,latitiah,latitiah,20/Feb/18 2:24 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,07/Mar/18 10:23 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,There is currently no documentation for enabling mutual TLS on a node-sdk based client.,,denyeart,latitiah,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5980,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyy2n:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,latitiah,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 4:42 AM;denyeart; [~smithbk] per our discussion, assigning to you since you've been working in this area.;;;","07/Mar/18 6:05 AM;smithbk;https://gerrit.hyperledger.org/r/18793 [FAB-8377] Add doc for mutual TLS;;;",,,,,,,,,,,,,,,,,,,,,
Test MSP Identity - Happy Path,FAB-8379,27842,21310,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,20/Feb/18 3:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 2:04 AM,,,,,,,,,,,0,,,,,,"Given the CORE_PEER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And the ORDERER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And I have a bootstrapped fabric network of type kafka with tls with organizational units enabled on all nodes
 When a user sets up a channel
 And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with policy ""OR ('Org1MSP.peer','Org2MSP.peer')""
 When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] with ""peer0.org1.example.com""
 Then a user receives a success response of 1000
 # Endorsement policies not enforced during initialization
 And a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]
 And I wait ""5"" seconds
 Then a user receives a success response of 990",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy33:",,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"24/Feb/18 7:55 AM;scottz;https://gerrit.hyperledger.org/r/#/c/18277/;;;",,,,,,,,,,,,,,,,,,,,,,
Test MSP Identity - Malicious Peer,FAB-8380,27843,21310,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,20/Feb/18 3:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 8:38 AM,,,,,,,,,,,0,,,,,,"This is the feature file test case:
{code}
 Given the CORE_PEER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And the ORDERER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And I have a bootstrapped fabric network of type kafka with tls with organizational units enabled for all nodes with peer ""peer1.org2.example.com"" bootstrapped using a client identity
 When a user sets up a channel

And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with policy ""OR ('Org1MSP.peer','Org2MSP.peer')""

When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] with ""peer0.org1.example.com""
 Then a user receives a success response of 1000
 # Endorsement policies not enforced during initialization
 And a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] with ""peer1.org2.example.com""
 And I wait ""30"" seconds
 When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] with ""peer0.org1.example.com""
 Then a user receives a success response of 1000{code}
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy3b:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"27/Feb/18 2:01 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/18425/;;;",,,,,,,,,,,,,,,,,,,,,,
Test MSP Identity - Malicious Peer - Clients set as Writers only in the channel policy (not endorsement policy),FAB-8381,27844,21310,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,20/Feb/18 3:06 AM,02/Aug/18 10:10 PM,28/Oct/23 3:02 AM,02/Aug/18 10:10 PM,,,,,,,,,,,0,,,,,,"Given the CORE_PEER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And the ORDERER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And I have a bootstrapped fabric network of type kafka with tls with organizational units enabled on all nodes
 When a user sets up a channel

And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with policy ""OR ('Org1MSP.client','Org2MSP.client')""
 And the Admin changes the writer channel policy to ""OR ('Org1MSP.client','Org2MSP.client')""

And a user using a peer identity invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""]
 Then a user receives an error of 400",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy3j:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"02/Aug/18 10:10 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/18655/;;;",,,,,,,,,,,,,,,,,,,,,,
Test MSP Identity with inconsistencies,FAB-8382,27845,21310,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,20/Feb/18 3:07 AM,02/Aug/18 10:10 PM,28/Oct/23 3:02 AM,02/Aug/18 10:10 PM,,,,,,,,,,,0,,,,,,"Given the CORE_PEER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And the ORDERER_TLS_CLIENTAUTHREQUIRED environment variable is ""true""
 And I have a bootstrapped fabric network of type kafka with tls with organizational units enabled for Org1 # peer bootstrapped using a client identity
 When a user sets up a channel
 And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with policy ""OR ('Org1MSP.peer','Org2MSP.peer')""",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy3r:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"02/Aug/18 10:10 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/18601/;;;",,,,,,,,,,,,,,,,,,,,,,
Remove Kafka version from Kafka topic,FAB-8383,27846,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,denyeart,denyeart,20/Feb/18 3:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Feb/18 12:02 PM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Kafka is updated to version 1.0.0 as of baseimage 0.4.6.

[http://hyperledger-fabric.readthedocs.io/en/master/kafka.html] mentions that Kafka version is 0.10.2.1.  Remembering to keep the version in this doc topic up to date is not going to be practical.  I'd suggest reword in such a way that the version number does not need to be provided here.  The version number is still available in the upgrade doc topic, and we'll likely add it to an overall 'version dependencies' release doc page in the future.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-91,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy3z:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 7:46 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/18129/;;;",,,,,,,,,,,,,,,,,,,,,,
"PTE testcase: samplecc endorsement policy, 3M tx to 4 peers",FAB-8384,27847,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,dongming,dongming,20/Feb/18 4:21 AM,31/Jul/19 5:51 AM,28/Oct/23 3:02 AM,31/Jul/19 3:58 AM,,,,v1.1.1,,,fabric-quality,,,,0,SystemTestcase,,,,,"Test name: Performance test: endorsement policy
 Component: Performance test
 Description: performance endorsement policy with levelDB
     chaincode: each channel has one chancode, sample_cc Node JS, instantiated
     transactions: 4 threads, each thread sends 750,000 invokes concurrently, total 3 millions
          thread 1 sends to all 4 peers on channel 1, registers events for channel1
          thread 2 sends to all 4 peers on channel 1, registers events for channel1
          thread 3 sends to all 4 peers on channel 2, registers events for channel2
          thread 4 sends to all 4 peers on channel 2, registers events for channel2

 

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Endorsement policy: 

""endorsement"": \{
     ""identities"": [
         \{ ""role"": \{ ""name"": ""peer"", ""mspId"": ""PeerOrg1"" }},
         \{ ""role"": \{ ""name"": ""peer"", ""mspId"": ""PeerOrg2"" }}
      ],
      ""policy"": \{
           ""2-of"": [

\{ ""signed-by"": 0 }

,

\{ ""signed-by"": 1 }

]
       }
 },

Event: channel service with block listener
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11711,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyy47:",,,,,,,,,,,,,,,,,,,,,dongming,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,"21/Feb/18 1:07 AM;latitiah;Questions: Why use both fabric-ca and cryptogen? If you are using cryptogen, you don't need fabric-ca and vice versa (at least for now)


If you are using cryptogen to generate your certificates, you will need to add the following to your crypto yaml file for each organization
{code}EnableNodeOUs: true{code}

Also, your endorsement identities for the endorsement policy will change to not just say member, but needs to be more specific to indicate who actually has permission for the endorsement policy. That is, since you are using peer certificates for your transactions, set the member identity to be 'peer' for the orgs; if you are using client certificates, set the member identity to be 'client'.;;;","24/Feb/18 1:02 AM;dongming;https://gerrit.hyperledger.org/r/#/c/18267/;;;",,,,,,,,,,,,,,,,,,,,,
EYFN  - Unable to Query on ORG3 due to an unsuccessful invoke.,FAB-8386,27849,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,Ratnakar,sambhavdutt,sambhavdutt,20/Feb/18 6:23 AM,19/Mar/19 8:12 PM,28/Oct/23 3:02 AM,21/Feb/18 4:18 AM,,,,v1.1.0,,,fabric-samples,,,,0,ci-failure,,,,,"Observed below error (Query failed to fetch right values from peer0.org3) after execute the byfn.sh on the below *commits*
{code:java}
!!!!!!!!!!!!!!! Query result on peer0.org3 is INVALID !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

ERROR !!!! Unable to run test{code}
{code:java}
Fabric Commit# e91df49
Fabric CA Commit # 8eb2b2b
Fabric Samples Commit # 24f35c1{code}
{code:java}
2018-02-19 19:49:25.907 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 00b Chaincode invoke successf
ul. result: status:200 
2018-02-19 19:49:25.907 UTC [main] main -> INFO 00c Exiting.....
===================== Invoke transaction on peer0.org3 on channel 'mychannel' is successful ===================== 

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org3MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp
CORE_PEER_ID=Org3cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org3.example.com:7051
===================== Querying on peer0.org3 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org3 ...3 secs
Attempting to Query peer0.org3 ...7 secs
Attempting to Query peer0.org3 ...10 secs

2018-02-19 19:49:35.148 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-19 19:49:35.148 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-19 19:49:35.148 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-02-19 19:49:35.148 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-02-19 19:49:35.148 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-02-19 19:49:35.148 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AAA070A6608031A0B08CFD4ACD40510...6D7963631A0A0A0571756572790A0161 
2018-02-19 19:49:35.148 UTC [msp/identity] Sign -> DEBU 007 Sign: digest: 078B5187C77FCB3C30355EF3CADCB894B015F61A0868B36C9C18D2E3A6DAB6F3 
Query Result: 90
2018-02-19 19:49:35.167 UTC [main] main -> INFO 008 Exiting.....
!!!!!!!!!!!!!!! Query result on peer0.org3 is INVALID !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

ERROR !!!! Unable to run test

{code}",,Ratnakar,sallon123456,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy4n:",,,,,,,,,,,,,,,,,,,,,Ratnakar,sallon123456,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Feb/18 12:34 PM;Ratnakar;Gist of org3 peer0 logs, the following error is seen while executing the invoke transaction
{code}
2018-02-20 02:46:31.718 UTC [vscc] Invoke -> DEBU 981 VSCC invoked
2018-02-20 02:46:31.719 UTC [vscc] deduplicateIdentity -> DEBU 982 Signature set is of size 1 out of 1 endorsement(s)
2018-02-20 02:46:31.720 UTC [vscc] Invoke -> WARN 983 Endorsement policy failure for transaction txid=232fd6574f9bb23ee92fe0d1e6cade51c56b1cf6483585d6f19cdbc7dd432e88, err: signature set did not satisfy policy
....
2018-02-20 02:46:31.742 UTC [committer/txvalidator] validateTx -> ERRO 990 VSCCValidateTx for transaction txId = 232fd6574f9bb23ee92fe0d1e6cade51c56b1cf6483585d6f19cdbc7dd432e88 returned error: VSCC error: endorsement policy failure, err: signature set did not satisfy policy
{code}

After adding org3 to the channel , chaincode been upgraded with the following command , refer code [here|https://github.com/hyperledger/fabric-samples/blob/master/first-network/scripts/utils.sh#L135]
{code}
   peer chaincode upgrade -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n mycc -v 2.0 -c '{""Args"":[""init"",""a"",""90"",""b"",""210""]}' -P ""OR ('Org1MSP.peer','Org2MSP.peer','Org3MSP.peer')""
  {code}

However role for org3 peers not enabled in first-network/org3-artifacts/org3-crypto.yaml hence endorsement policy evaluation fails

*Fix*: Adding the missed configuration *_EnableNodeOUs: true_* enabled the peer role and fixes the issue.;;;","20/Feb/18 12:35 PM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/18075/;;;","20/Feb/18 10:16 PM;scottz;Is there a doc bug related to this? Do we need one?;;;","21/Feb/18 1:11 AM;Ratnakar;when the last patch was made https://gerrit.hyperledger.org/r/#/c/17943/ 
the changes didn't addressed for the 3rd org hence we see failures in eyfn.sh

I do see there is one JIRA item FAB-6547 to address documentation. however it would be good if this is explained in this section http://hyperledger-fabric.readthedocs.io/en/latest/channel_update.html aswell;;;","24/Apr/18 5:22 PM;sallon123456;Hi,

I also face the same error about:

2018-02-20 02:46:31.742 UTC [committer/txvalidator] validateTx -> ERRO 990 VSCCValidateTx for transaction txId = 232fd6574f9bb23ee92fe0d1e6cade51c56b1cf6483585d6f19cdbc7dd432e88 returned error: VSCC error: endorsement policy failure, err: signature set did not satisfy policy.

How do you solve it?

 

Thanks a lot.;;;",,,,,,,,,,,,,,,,,,
"""TestMSPWithIntermediateCAs"" unit-tests are failing as the ""certs"" in fabric/msp/intermediate are expired yesterday",FAB-8393,27857,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,rameshthoomu,rameshthoomu,20/Feb/18 10:15 PM,27/Nov/19 10:53 AM,28/Oct/23 3:02 AM,20/Feb/18 11:24 PM,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"seems *""certs""* in fabric/msp/intermediate directory are expired and causing unit-tests failures. Below is the error log
{code:java}
00:17:46.008 unit-tests_1  | --- FAIL: TestMSPWithIntermediateCAs (0.01s)
00:17:46.009 unit-tests_1  |     assertions.go:221: 
                        
    Error Trace:    msp_test.go:1033
00:17:46.009 unit-tests_1  |         
            mspwithintermediatecas_test.go:32
00:17:46.010 unit-tests_1  |         
    Error:        Received unexpected error ""signing identity expired 19h41m58.479620677s ago""
00:17:46.010 unit-tests_1  |         
00:17:46.011 unit-tests_1  |     assertions.go:221: 
                        
    Error Trace:    mspwithintermediatecas_test.go:37
00:17:46.012 unit-tests_1  |         
    Error:        Received unexpected error ""this MSP does not possess a valid default signing identity""{code}
*cert validity:* 
{code:java}
Validity
 Not Before: Feb 9 16:07:10 2017 GMT
 Not After : Feb 19 16:07:10 2018 GMT
{code}
*Jenkins Job Log:*

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/3196/consoleFull",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8394,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy67:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/18 10:56 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/18081];;;",,,,,,,,,,,,,,,,,,,,,,
Certificates in msp/testdata/intermediate are expired,FAB-8394,27858,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,yacovm,yacovm,20/Feb/18 10:18 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Feb/18 11:24 PM,,,,,,,fabric-crypto,,,,0,,,,,,The certificates in msp/testdata/intermediate are expired.,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy6f:",,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Feb/18 10:57 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/18081];;;",,,,,,,,,,,,,,,,,,,,,,
Abstract Event Service API and Impl,FAB-8395,27859,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,20/Feb/18 10:49 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 4:55 AM,,,,,,,,,,,0,,,,,,"Define an event service API and provide an abstract implementation which may be reused by protocol-specific implementations (i.e. Event Hub and Deliver Service)
",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy6n:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Abstract Event Client API and Impl,FAB-8396,27860,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,20/Feb/18 10:50 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 10:58 PM,,,,,,,,,,,0,,,,,,"Implement an abstract event client that connects to a GRPC event server and manages the connect/disconnect events. This client may be extended by protocol-specific implementations (i.e. Event Hub and Deliver Service).
",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy6v:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Event Hub Client Implementation,FAB-8397,27861,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,20/Feb/18 10:50 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 12:23 AM,,,,,,,,,,,0,,,,,,"Provide an Event Hub implementation for the event client API and make this the default implementation (for now).

",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy73:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Deliver Service Client Implementation,FAB-8398,27862,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,20/Feb/18 10:51 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 5:20 AM,,,,,,,,,,,0,,,,,,"Provide a Deliver Service implementation for the event client API and allow the default (Event Hub) implementation to be overridden by this one.
",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy7b:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Make peer CLI hint why the connection attempt failed,FAB-8402,27868,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,yacovm,yacovm,21/Feb/18 1:28 AM,13/Sep/19 3:47 PM,28/Oct/23 3:02 AM,,,,,,,,fabric-peer,,,,2,,,,,,"In fabric, when the peer CLI is invoked and it fails because of a connection error, the problem is not always because the connection can't be established, but in many cases it's due to incorrect configuration (lack of TLS flag, lack of TLS CA certs, wrong CA certs, etc. etc.)

Consider for example the following error:
{code}Error: Error endorsing query: rpc error: code = Unavailable desc = transport is closing - <nil>{code}

This is an error that I made by a peer CLI query when the TLS_ENABLED is missing, and the peer is running with TLS.

The following error:
{code}
Error: Error getting endorser client chaincode: endorser client failed to connect to foobar:7051: failed to create new connection: context deadline exceeded
{code}

Is when the peer CLI tries to connect to an unknown host.

This only gets worse when the server node (orderer/peer) uses mutual TLS because we have more configuration options.

I propose that the wrap the comm package's gRPC client (that has the NewConnection method) with another module (to be used by the peer/orderer/admin clients for the peer CLI) that will have the following behavior:

{code}
func (ws *wrapperStruct) NewConnection( ... )  (connection, error) {
      // calls the inner gRPC client's NewConnection method
      conn, err := ws.NewConnection( ... )
      if err == nil {
              return conn, nil
       }

    // else, we try to figure out why we weren't able to connect.
      return ws.TryToFindErrorReason()
}
{code}

Basically - the peer CLI would just pass the connection attempt to the existing code, but upon failure - it would do more operations, such as:
* DNS lookup
* TCP probe
* In case the peer CLI doesn't use TLS - figure out if the remote node uses TLS.
* In case the peer CLI loaded a cert of CA foo, but the remote node's TLS certificate is signed by a TLS root CA of bar - figure it out and output it. 
* In case the remote node expects us to use mutual auth but we haven't sent a client certificate, output it.

To figure out why the connection failed, and would pass the more informative error to the user.
I think this has the potential to greatly enhance the user experience of using fabric and to prevent un-necessary user frustration.
Opinions? 

[~denyeart] [~mastersingh24] [~ChristopherFerris] [~jyellick]  [~C0rWin]",,bmos299,denyeart,haibbo,yacovm,zacpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyy7r:",,,,Unset,,,,,,Unset,,,,,,,,,,,bmos299,denyeart,haibbo,yacovm,zacpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/18 11:16 PM;bmos299;[~yacovm] Absolutely!  Currently, people can go look at the peer, orderer logs and figure out the failure.  However, that isn't possible in the production world where the enduser using the peer cli only has the cli logs.   Can this be an item that goes into the first 1.1 fixpack?  
[~simsc] Should we mark a fix version?
Regards,
Barry;;;","24/Feb/18 12:55 AM;Clayton Sims;Definitely like the serviceability this brings.   I think we should t this up for our first v1.1.1 item.   ;;;","26/Feb/18 12:46 AM;denyeart;{color:#444444} The TLS config trips everybody up. If it is just error handling path I wouldn't be against merging some small updates in 1.1, and defer any larger refactoring for 1.2.
{color};;;","13/Sep/19 3:47 PM;zacpl;Just wanted to follow up on this: I've recently finished setting up a Fabric network with TLS enabled on different components.

The error handling described in this post would have saved me quite a lot of time.

 

 

 ;;;",,,,,,,,,,,,,,,,,,,
Disable fabric-sdk-node-vulnerable-tests-x86_64 for now.,FAB-8404,27871,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,21/Feb/18 3:10 AM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,21/Feb/18 5:03 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,The fabric-sdk-node-vulnerable-tests-x86_64 is disabled as these tests are not required for now.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy87:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NL adds v1.1 capabilities,FAB-8405,27872,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,21/Feb/18 4:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 5:12 AM,,,,,,,fabric-quality,,,,0,,,,,,Add V1.1 capabilities to NetworkLauncher,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzyy8f:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"21/Feb/18 6:33 AM;dongming;add

EnabledNodeOUs: true to cyrpto-config.yaml

V1.1 Capabilities to configtx.yaml;;;","21/Feb/18 6:34 AM;dongming;https://gerrit.hyperledger.org/r/#/c/18109/;;;",,,,,,,,,,,,,,,,,,,,,
fabric-ca sample fails with new fabric-ca code,FAB-8407,27876,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,aambati,aambati,21/Feb/18 5:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 10:36 PM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"Fabric-ca sample fails with latest 1.1 code with the following error:

{{Error: failed to create deliver client: orderer client failed to connect to orderer1-org0:7050: failed to create new connection: remote error: tls: bad certificate}}

 

{{*Following error is seen in the orderer log:*}}
{{2018-02-19 16:02:53.939 UTC [orderer/common/server] Start -> INFO 0c3[0m Beginning to serve requests}}
{{[36m2018-02-19 16:03:03.434 UTC [grpc] Printf -> DEBU 0c4[0m grpc: Server.Serve failed to complete security handshake from ""172.18.0.14:39718"": tls: client didn't provide a certificate}}",,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy8v:",,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 6:15 AM;aambati;https://gerrit.hyperledger.org/r/c/18105/;;;",,,,,,,,,,,,,,,,,,,,,,
Upgrade Document Does Not Mention Zookeeper,FAB-8408,27877,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,bmos299,bmos299,21/Feb/18 5:36 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 2:41 AM,v1.1.0,,,v1.1.1,,,fabric-docs,,,,0,Documentation,,,,,The document http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html does not mention the steps involved with Zookeeper when upgrading from 1.0.x to 1.1.0. ,,bmos299,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx04v:",,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 5:25 AM;sanchezl;We refer you to the Kafka Upgrade documentation. We have no say in what you do about Zookeeper.;;;","25/Feb/18 2:44 AM;denyeart;[~sanchezl] We should at least mention that in the upgrade documentation since we provide both Kafka and Zookeeper images.

Joe Alewine is creating a CR for the improved upgrade doc topic today.  After that is created, please inject at least one sentence about Zookeeper into the Kafka upgrade section (and yes, for the most part what we say is to reference the Kafka docs).;;;","26/Feb/18 8:48 PM;denyeart;[~sanchezl] Please inject one comment in the upgrade doc Kafka section to mention Zookeeper: https://gerrit.hyperledger.org/r/#/c/18351/;;;","27/Feb/18 2:41 AM;denyeart;This is addressed in [https://gerrit.hyperledger.org/r/#/c/18351/] now.  Thanks [~sanchezl];;;",,,,,,,,,,,,,,,,,,,
peer channel,FAB-8409,27878,27589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,Clayton Sims,Clayton Sims,21/Feb/18 5:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 9:59 AM,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy93:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
peer chaincode,FAB-8410,27879,27589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,Clayton Sims,Clayton Sims,21/Feb/18 6:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 6:16 AM,,,,,,,,,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy9b:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 3:46 AM;wlahti;https://gerrit.hyperledger.org/r/c/18213/;;;",,,,,,,,,,,,,,,,,,,,,,
peer logging,FAB-8411,27880,27589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,Clayton Sims,Clayton Sims,21/Feb/18 6:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 9:59 AM,,,,,,,,,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy9j:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 4:48 AM;wlahti;https://gerrit.hyperledger.org/r/c/18223/;;;",,,,,,,,,,,,,,,,,,,,,,
peer node,FAB-8412,27881,27589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,Clayton Sims,Clayton Sims,21/Feb/18 6:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 4:27 AM,,,,,,,,,,,0,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy9r:",,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Feb/18 6:08 AM;aambati;https://gerrit.hyperledger.org/r/c/18167/;;;",,,,,,,,,,,,,,,,,,,,,,
peer version,FAB-8413,27882,27589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,Clayton Sims,Clayton Sims,21/Feb/18 6:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 4:27 AM,,,,,,,,,,,0,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyy9z:",,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Feb/18 6:10 AM;aambati;https://gerrit.hyperledger.org/r/c/18169/;;;",,,,,,,,,,,,,,,,,,,,,,
"PTE testcase: samplecc endorsement policy, 3M tx to 2 peers",FAB-8414,27883,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,21/Feb/18 6:29 AM,31/Jul/19 5:51 AM,28/Oct/23 3:02 AM,29/Aug/18 4:32 AM,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"Test name: Performance test: endorsement policy
 Component: Performance test
 Description: performance endorsement policy with levelDB
     chaincode: each channel has one chancode, sample_cc Node JS, instantiated
     transactions: 4 threads, each thread sends 750,000 invokes concurrently, total 3 millions
          thread 1 sends to peer 1 of both org on channel 1, registers events for channel1
          thread 2 sends to peer 1 of both org on channel 1, registers events for channel1
          thread 3 sends to peer 1 of both org on channel 2, registers events for channel2
          thread 4 sends to peer 1 of both org on channel 2, registers events for channel2

 

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Endorsement policy: 

""endorsement"": \{
     ""identities"": [
         \{ ""role"": \{ ""name"": ""peer"", ""mspId"": ""PeerOrg1"" }},
         \{ ""role"": \{ ""name"": ""peer"", ""mspId"": ""PeerOrg2"" }}
      ],
      ""policy"": \{
           ""2-of"": [

\{ ""signed-by"": 0 }

,

\{ ""signed-by"": 1 }

]
       }
 },

Event: channel service with block listener
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11711,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyya7:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,true,"24/Feb/18 1:03 AM;dongming;https://gerrit.hyperledger.org/r/#/c/18267/;;;",,,,,,,,,,,,,,,,,,,,,,
document restrictions for gossip mode without leader election,FAB-8416,27885,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,scottz,scottz,21/Feb/18 6:50 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,06/Mar/18 12:42 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Per FAB-5246, for fabric networks NOT using gossip leader election, we must document that we can support using gossip in this mode ONLY IF all peers are set as leaders when adding extra orgs and peers to an existing network.

Otherwise, any nonleader peers added later in time (at least to organizations added after the initial network bring-up) would never receive any blocks.

This could be addressed in release notes , and should be addressed in docs - most likely in the gossip section [http://hyperledger-fabric.readthedocs.io/en/master/gossip.html] or somewhere in the Operations Guide section because it involves discussing supported gossip configurations.

 ",,C0rWin,denyeart,kchristidis,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyan:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,kchristidis,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 12:02 PM;denyeart;[~C0rWin] Could you help improve the doc for this one.;;;","23/Feb/18 7:57 AM;C0rWin;[~denyeart]  [~scottz]  I'm failing to understand what is the actual limitation we need to address with documentation, e.g. I'd glad if following could be elaborated a bit:

{quote}
for fabric networks NOT using gossip leader election, we must document that we can support using gossip in this mode ONLY IF all peers are set as leaders when adding extra orgs and peers to an existing network
{quote}

as far as I know there is an issue of adding a new organization to already existing network, where peers bootstrapped from genesis block. Since genesis block doesn't contains MSP of newly added org it will fail to communicate unless synced up till recent config. And making newly added peers statically configured to be leaders (not running leader election) solves the problem by making them connect ordering service.

However from description it's not clear whenever this is the case, [~scottz], could you expand, please? ;;;","23/Feb/18 10:29 PM;scottz;I am just asking for documentation on the limitation which [~yacovm] and you have already summarized. Basically, customers may choose to use leaderelection throughout their network, or choose not to do so. If not, then they need to set all new peers as leaders; they cannot choose some to be non-leaders, otherwise they canno't be added successfully. That is a restriction that some might not assume to be true. Yes there is a ""workaround"" to simply make them all leaders. The point is that people need to be aware of how to configure things right so it all works correctly.;;;","24/Feb/18 6:53 AM;C0rWin;{quote}
If not, then they need to set all new peers as leaders; they cannot choose some to be non-leaders, otherwise they canno't be added successfully.
{quote}

this is not correct, as you confusing the root cause of the actual problem and the ""workaround"" to fix it. The only restriction with respect to the gossip running w/o leader election is that users will have to maintain high availability of the statically configured leader. The FAB-5246, describes different aspect which is not a gossip limitation, but the way new organization should be added to the network, hence should we need to address it within instructions explaining how to add new org.

However I agree that leader election of gossip component need to be expanded with more details to make it clear. ;;;","25/Feb/18 7:31 AM;scottz;For a better and more stable product overall, if our customers must place limitations on the gossip configuration or on procedures that operators must follow to maintain a successful network, then it is still a restriction - whether gossip is the root cause or whether it is providing a workaround for something else. I am not trying to blame any one area, and you can write it up any way you feel is accurate, as long is it conveys the necessary information. We simply need to tell people about it in the release notes and the documentation - so we have explanation ready when they inevitably create trouble tickets saying ""My new peers are not participating in my network"".

You say something like ""it is not a restriction as long as the user does something else (e.g. maintain high availability of the statically configured leader)"". Exchanging one restriction option for another can provide options for the customers to consider, which may certainly be helpful, so by all means provide those suggestions. But we cannot assume that, and so if they cannot guarantee high availability, for example, then explain what is the requirement/impact.;;;","01/Mar/18 4:28 AM;denyeart;Changed to Improvement.

[~C0rWin] are you working on some small edits to the gossip and/or adding an org doc topics?  That would be helpful in general (even if not strictly scoped to the work item title).

[http://hyperledger-fabric.readthedocs.io/en/master/gossip.html]

[http://hyperledger-fabric.readthedocs.io/en/master/channel_update_tutorial.html]

 ;;;","01/Mar/18 5:58 AM;C0rWin;[~denyeart] Yes, working to submit edits to gossip doc and to the channel update tutorial.;;;","04/Mar/18 10:55 PM;C0rWin;Created sub-task to reflect changes to both doc files.;;;",,,,,,,,,,,,,,,
Fabric-CA Section Needs To Be Enhanced for Upgrade,FAB-8417,27886,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,bmos299,bmos299,21/Feb/18 7:01 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,01/Mar/18 3:01 AM,v1.1.0,,,v1.1.1,,,fabric-docs,,,,0,must-fix,,,,,"In the upgrade document,
http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html

The upgrading of the fabric-ca is more comprehensive then updating the binaries.  We need to provide details to prevent database corruption, clustering steps, any specifics with respect to support DBs, should it be done in a maintenance window or rolling upgrades.  If someone adds the text here someone from the quaility team can submit the CR. 
Thanks,
Barry",,bmos299,ChristopherFerris,denyeart,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx053:",,,,Unset,,,,,,Unset,,,,,,,,,,,bmos299,ChristopherFerris,denyeart,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 4:39 AM;rennman;[CR18217:Update cluster doc for migration|https://gerrit.hyperledger.org/r/#/c/18217/];;;","26/Feb/18 8:42 PM;denyeart;[~rennman] [~aambati] Could you upload a final patch?;;;","26/Feb/18 9:48 PM;ChristopherFerris;This is doc, should it hold up RC1? Also, not a bug but an improvement.;;;","28/Feb/18 3:34 AM;denyeart;Thanks for the final patch Allen.  Ready for final reviews.;;;","28/Feb/18 7:05 AM;Clayton Sims;https://gerrit.hyperledger.org/r/c/18217/;;;",,,,,,,,,,,,,,,,,,
Dev Improvements and Cleanup,FAB-8418,27887,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,sykesm,mastersingh24,mastersingh24,21/Feb/18 7:06 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,11/Jun/18 10:16 PM,,,,v1.2.0,,,,,,,0,hygiene,,,,,,,ChristopherFerris,guoger,kchristidis,mastersingh24,swetharepakula,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8658,FAB-8655,FAB-5722,FAB-8976,FAB-9010,FAB-9021,FAB-9057,FAB-9466,FAB-8660,FAB-8668,FAB-8674,FAB-8697,FAB-8706,FAB-8869,FAB-8923,FAB-8933,FAB-8934,FAB-8970,FAB-8975,FAB-9022,FAB-9027,FAB-9032,FAB-9101,FAB-9102,FAB-9105,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymcv:",,,,Unset,,May2018 - Hygiene,,,,Unset,,,,,,,,,,,ChristopherFerris,guoger,kchristidis,mastersingh24,swetharepakula,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/18 8:57 AM;sykesm;After spending a few weeks with the code base, there are a number of things we can do to improve the experience of developers working on the fabric. This is intended to capture some of the thoughts so we can spin out the appropriate work items.

Goals:
* Enable native execution of unit tests from the root `fabric` directory with a simple `go test ./...`
* Dramatically improve the execution time of unit tests
* Use tools to generate mocks/fakes for unit tests
* Reduce use of global singletons accessed via package functions or variables
* Establish a pattern and structure for integration tests that are written in go

Enabling native `go test`
* Remove link flag requirements for test. Several test cases fail when the metadata package variables are empty strings.
* Ensure docker builds do not leave golang artifacts in the build/docker/golang directory that prevent the compilation and execution of tests.
* Remove golang code from bddtests (bddtests/context.go)
* Move uncompilable golang test fixtures under a testdata folder (test/chaincodes/BadImport/main.go:11:2)
* Ensure examples compile (examples/chaincode/chaintool/example02/src/chaincode/chaincode_example02.go:26)
* Be laptop friendly - use 127.0.0.1 instead of 0.0.0.0 (INADDRANY)

Dramatically improve the execution time of unit tests
* Use ephemeral ports instead of fixed port assignment to avoid issues with port reuse or conflicts
* Use fake clocks in unit tests (github.com/pivotal-golang/clock); control time and avoid any sleeps
* Use matching libraries (gomega) or polling when waiting for channels to send, receive, or be closed instead of sleeping
* Explicitly wire dependencies through locally defined interfaces and use simple call-based mocks (counterfeiter) in tests to track and implement dependency behavior
* Avoid integration tests outside of the explicit integration test directories

Use tools to generate mocks/fakes
* Define interfaces at point of use
* Add `go:generate` statement that uses `counterfeiter` to create implementations of the interfaces into a `fakes` or `mocks` folder that lives with the code under test
* Ensure only generated code lives in the `fakes` or `mocks` directory that can be regenerated at any time from `go generate .`

Reduce use of global singletons
* Evaluate all package level variables and refactor into structures.
* Evaluate all package level functions that reference global state (ie procedures) and refactor into pure functions or methods on the appropriate objects.
* Tell. Don't ask. Explicitly create instances of structures and wire together.
* Remove viper sprawl and replace with configuration that is explicitly set or provided on objects. Viper should never be used to get configuration from a constructor or at runtime.

Establish a pattern and structure for integration tests in go
* Use tests/integration folders to hold the integration tests.
* Ensure tests are guarded by the +integration build tag
* When external dependencies (like couchdb) are needed, start the instance locally or in a container.
* Use ginkgo, gomega, and gexec to orchestrate and verify.
* Ensure tests can be run in parallel - use separate backend instances and processes where necessary

Miscellaneous
* Use exported fields for configuration and injection when appropriate.
* Favor _test packages for unit tests that only use exported symbols.
* Refactor inline, unnamed function closures to named, testable methods when appropriate.;;;","11/Jun/18 10:17 PM;sykesm;Many of these threads have been advanced during the 1.2 cycle. While some are incomplete, we've gone as far as we can right now given current constraints.;;;",,,,,,,,,,,,,,,,,,,,,
write your first app tutorial does not describe how to teardown,FAB-8419,27888,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Feb/18 7:44 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,01/Apr/18 9:47 PM,v1.1.0-alpha,,,v1.2.0,,,fabric-docs,,,,0,,,,,,write your first app tutorial does not describe how to teardown a network that was started.,,ChristopherFerris,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx0af:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Mar/18 3:51 AM;joe-alewine;https://gerrit.hyperledger.org/r/#/c/19871/;;;",,,,,,,,,,,,,,,,,,,,,,
OTE failing with multiple-value config.Load() in single-value context,FAB-8423,27892,27772,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,21/Feb/18 12:40 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Jul/18 5:55 AM,,,,,,,fabric-quality,,,,0,,,,,,"Disable the ote tests temporarily and debug the issue causing the error
{code:java}
# github.com/hyperledger/fabric/OTE
./ote.go:944:35: multiple-value config.Load() in single-value context
# github.com/hyperledger/fabric/OTE
./ote.go:944:35: multiple-value config.Load() in single-value context
{code}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyybj:",,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,true,"21/Feb/18 10:39 PM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/18121/;;;",,,,,,,,,,,,,,,,,,,,,,
Fix fabric-samples checkout instructions,FAB-8424,27893,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,21/Feb/18 12:50 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 1:10 PM,,,,,,,fabric-docs,,,,0,,,,,,"fabric-samples instructions say to execute these commands:

  git clone -b master https://github.com/hyperledger/fabric-samples.git
  cd fabric-samples
  git checkout {TAG}　

It should be in this order:

  git clone -b master https://github.com/hyperledger/fabric-samples.git
  cd fabric-samples
  git checkout {TAG}　",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx067:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Test with different combination of indexes ,FAB-8426,27895,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,21/Feb/18 3:53 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Feb/18 3:53 PM,,,,,,,,,,,0,,,,,,"Test to see if Fabric can work with different combinations of indexes:
1) 2 index definitions containing same indexes, same designdoc name, same index name
2) 2 index definitions containing same indexes, same designdoc name, different index name
3)2 index definitions containing same indexes, different designdoc name, same index name
4)2 index definitions containing same indexes, different designdoc name, different index name
5)2 index definitions containing different indexes, same designdoc name, same index name
6)2 index definitions containing same indexes, same designdoc name, different index name

These tests to be done for both Node and golang chaincode, as they exercise different code",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyybz:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/May/18 11:39 PM;AdnanChoudhury;Duplicated by other tests in FAB-7117.;;;",,,,,,,,,,,,,,,,,,,,,,
UserStore,FAB-8428,27897,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,21/Feb/18 9:58 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 1:55 PM,,,,,,,,,,,0,,,,,,"Introduce a concept of a UserStore, for persistence of user information. Initially, store only the user primary key (mspID, name) and cert. Note that user's primary key is added to cryptosuite automatically during enrollment.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyycf:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
BYFN tutorial should make clear to teardown before doing step-by-step,FAB-8429,27898,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Feb/18 10:56 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,30/Mar/18 10:49 PM,v1.1.0-alpha,,,v1.2.0,,,fabric-docs,,,,0,,,,,,BYFN tutorial should make clear to teardown before doing step-by-step,,ChristopherFerris,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwu1j:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,joe-alewine,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Feb/18 10:57 PM;ChristopherFerris;Could also use a thorough edit to make things clearer.;;;","28/Mar/18 2:20 AM;pandrejko;The BYFN tutorial  [http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#want-to-run-it-now]

now contains these instructions:
h3. Bring Down the Network

Finally, let’s bring it all down so we can explore the network setup one step at a time. The following will kill your containers, remove the crypto material and four artifacts, and delete the chaincode images from your Docker Registry:
./byfn.sh -m down;;;","29/Mar/18 5:31 AM;pandrejko;http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#install-instantiate-chaincode

Nancy experienced a problem running the BYFN commands manually.

When she ran the following command :

_*peer chaincode install -n myndcc -v 2.0 -l node -p github.com/chaincode/chaincode_example02/node*_

it failed with the error:

2018-03-28 20:03:39.345 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing loc
al MSP
2018-03-28 20:03:39.345 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtainin
g default signing identity
2018-03-28 20:03:39.346 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 U
sing default escc
2018-03-28 20:03:39.346 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 U
sing default vscc
Error: Error getting chaincode code chaincode: Failed to determine platform type
*: Unknown chaincodeType: NODE*

The reason this failed was because she was  following the BYFN tutorial using the HyperLedger v1.1 doc, but the binary code she was running was v1.0.0. (Node chaincode was not supported in V1.0.0.)

Actions:
 # We should add some text around this line in the tutorial that the Node version of this command is only supported if you are running Hyperledger Frabric v1.1.0 or higher
 #  We should also add this error to the Troubleshooting section for BYFN.

 

 ;;;","30/Mar/18 9:54 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/19949;;;","30/Mar/18 9:24 PM;pandrejko;Comment from the HyperLedger Fabric e-mail:

-BYFN  - I am a little confused about the meaning of an  ""end-to-end"" application? in ==>
    _""This will launch all of the containers, and then drive a complete_
    _*end-to-end** application* scenario.""_


        Is it has the same meaning of ""e2e"" in the file name of docker-compose-e2e.
        yaml?
    If so,  it shouldn't be an e2e application since it started a *cli*
    container:;;;","30/Mar/18 9:44 PM;ChristopherFerris;end-to-end (hence the e2e) is a hold-over term. basically, we had the e2e scenario in the fabric repo as a test that covered the entire lifecycle of deploying a network, deploying a trivial application (chaincode) and driving a few transactions before tearing it down. We still use this today. We turned it into a tutorial and it has grown arms and legs.;;;",,,,,,,,,,,,,,,,,
byfn (fabric-samples) e2e tests are failing on latest fabric commit,FAB-8430,27899,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,rameshthoomu,rameshthoomu,22/Feb/18 12:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 7:43 AM,,,,v1.1.1,,,fabric-peer,,,,0,,,,,,"byfn e2e tests are failing on latest fabric commit
{code:java}
00:11:24.364 !!!!!!!!!!!!!!! Query result on peer0.org1 is INVALID !!!!!!!!!!!!!!!!
00:11:24.366 ================== ERROR !!! FAILED to execute End-2-End Scenario ==================
00:11:24.366
{code}
below is the fabric commit which caused this

 https://github.com/hyperledger/fabric/commit/11ddbbe1c4fcb305cb91ba773ca1df62a7a0d581",,bmos299,C0rWin,denyeart,latitiah,rameshthoomu,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyycn:",,,,,,,,,,,,,,,,,,,,,bmos299,C0rWin,denyeart,latitiah,rameshthoomu,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/18 12:19 AM;denyeart;I believe the tests need to be updated in response to https://gerrit.hyperledger.org/r/c/18049 , like what was done in https://gerrit.hyperledger.org/r/#/c/18049/13/examples/e2e_cli/scripts/script.sh@185 .  Changed to fabric-quality.;;;","22/Feb/18 12:21 AM;denyeart;I've added a task to document the peer CLI query response syntax in 1.1 release notes: FAB-8433 .;;;","22/Feb/18 12:30 AM;bmos299;This is a regression.  Changing outputs, regardless of the reason, has consequences.  I think the original support should be returned and if you want to add a flag to return the result in another agreed upon format that the binary APIs can consume.  Anyone who has scripted based on the ""Query: xxx"" string now fails. Mark Parzygnat had pinged me on byfn failing and the fabric-test daily suite had many failures.  There is nothing that irks a customer more than when their application worked yesterday....and fails today.   ;;;","22/Feb/18 12:45 AM;latitiah;Issue FAB-8245 there was a comment added that stated that a flag was needed in order to not break regression. This is a minor release and as such you should not change output in this manner. Use of a flag helps to mitigate this.;;;","22/Feb/18 1:00 AM;denyeart;I agree, let's revert to the 1.0 behavior of printing Query Response so that existing tests/clients don't break. Assigning to [~C0rWin].

A new flag can be added for silent or binary mode in 1.2.  FAB-8245 will be re-opened as an Improvement.;;;","22/Feb/18 2:58 AM;C0rWin;https://gerrit.hyperledger.org/r/18153;;;",,,,,,,,,,,,,,,,,
Hyperledger Composer: Error trying to ping business network: x509: certificate signed by unknown authority,FAB-8431,27900,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ramorcicare1,ramorcicare1,ramorcicare1,22/Feb/18 12:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 10:39 AM,v1.0.6,,,,,,,,,,0,,,,,,"Receiving error when Fabric CA Server starts *(ca.org1.example.com)*

_Could not load TLS certificate with BCCSP: Could not find matching private key for SKI: CSP:500 - Failed getting key for SKI [[74 227 52 30 73 220 158 98 138 158 61 209 206 89 246 99 232 211 108 174 62 7 117 225 123 88 119 70 196 195 234 44]]_

 

Receiving error for the command: *composer network ping -c alice@tutorial-network*
_Error: Error trying to ping. Error: Error trying to query business network. Error: Failed to deserialize creator identity, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority_
{color:#ff0000}Command failed{color}

 

Docker Images:

{color:#ff0000}!image-2018-02-21-09-58-28-560.png!{color}

 

 ","Using Fabric Samples First Network environment. org1 with 2 peers (peer 0 & 1), org2 with 2 peers (peer 0 & 1), 1 orderer, 2 ca servers (ca0 & ca1). Docker Yaml file attached.",ramorcicare1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/18 12:14 AM;ramorcicare1;ca.org1.log.txt;https://jira.hyperledger.org/secure/attachment/14663/ca.org1.log.txt","22/Feb/18 12:08 AM;ramorcicare1;docker-compose-cli.yaml;https://jira.hyperledger.org/secure/attachment/14664/docker-compose-cli.yaml","21/Feb/18 11:58 PM;ramorcicare1;image-2018-02-21-09-58-28-560.png;https://jira.hyperledger.org/secure/attachment/14665/image-2018-02-21-09-58-28-560.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyycv:",,,,,,,,,,,,,,,,,,,,,ramorcicare1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 10:40 AM;ramorcicare1;This issue got resolved, no one helped. ;;;",,,,,,,,,,,,,,,,,,,,,,
Add release notes for change in peer CLI query response,FAB-8433,27902,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,22/Feb/18 12:20 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Feb/18 1:04 AM,,,,,,,fabric-docs,,,,0,,,,,,"Document the query response syntax change from:
FAB-8245
https://gerrit.hyperledger.org/r/c/18049",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyydb:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/18 1:04 AM;denyeart;The FAB-8245 change is being reverted in FAB-8430, no need for release note now.;;;",,,,,,,,,,,,,,,,,,,,,,
Update package.json to use release shim,FAB-8434,27903,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,zhaochy,skarim,skarim,22/Feb/18 12:23 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Mar/18 2:49 PM,v1.1.0-alpha,,,,,,fabric-sdk-node,,,,0,,,,,,"Need to update package.json to use release shim after GA.

https://github.com/hyperledger/fabric-sdk-node/blob/90881bb0996ca9c4da9d2870e5de108ff4996a50/test/fixtures/src/node_cc/example_cc/package.json#L13",,davidkhala,skarim,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-627,,FAB-8892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyydj:",,,,,,,,,,,,,,,,,,,,,davidkhala,skarim,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Mar/18 3:19 PM;zhaochy;https://gerrit.hyperledger.org/r/18717;;;","16/Mar/18 11:16 PM;davidkhala;Abandoned;;;",,,,,,,,,,,,,,,,,,,,,
Update Node CC package.json to latest shim,FAB-8435,27904,27903,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,skarim,skarim,22/Feb/18 12:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Mar/18 2:50 PM,,,,,,,fabric-sdk-java,,,,0,,,,,,Update Node CC package.json to use latest shim,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyydr:",,,,,,,,,,,,,,,,,,,,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
incorrect terminology in error message s/chain/channel/,FAB-8436,27905,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,ChristopherFerris,ChristopherFerris,22/Feb/18 12:41 AM,23/Jan/20 7:27 AM,28/Oct/23 3:02 AM,23/Jan/20 7:27 AM,v1.1.0-alpha,,,Future,,,fabric-peer,,,,0,stale-item,,,,,"Error: failed sending proposal: rpc error: code = Unknown desc = chaincode error (status: 500, message: Invalid chain ID, my-channel)",,ChristopherFerris,denyeart,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyydz:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 4:29 AM;denyeart;[~ChristopherFerris] Do you intend to fix in 1.1 or defer to 1.2?;;;","22/May/18 3:40 AM;kchristidis;Bumping this up. [~ChristopherFerris]: please update when you get a moment.;;;","14/Jun/18 1:22 AM;ChristopherFerris;This is low priority and bumping to post 1.2 as there is more than just the error message that need changing to expunge the 'chain' concept.;;;","23/Jan/20 7:27 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,
Update high level client New() to have context and options,FAB-8437,27906,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,biljana.lukovic,biljana.lukovic,22/Feb/18 12:49 AM,26/Aug/19 8:37 PM,28/Oct/23 3:02 AM,,,,,,,,fabric-sdk-go,,,,0,,,,,,"New(context  Context, opts ...Option)",,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyye7:",,,,Unset,,,,,,Unset,,,,,,,,,,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Create initial configtxlator command md,FAB-8439,27910,27592,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,22/Feb/18 3:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Feb/18 5:37 AM,,,,,,,,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyev:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Create initial configtxgen command md,FAB-8440,27911,27591,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,22/Feb/18 3:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Feb/18 5:38 AM,,,,,,,,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyf3:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Save user (with enrollment cert) on Enroll(),FAB-8441,27912,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,22/Feb/18 6:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Feb/18 6:26 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,So the application doesn't have to do it.,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyfb:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Chaincode address and chaincode listen address default to wrong values,FAB-8443,27914,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tsharris,dbshah,dbshah,22/Feb/18 7:18 AM,16/Jun/20 9:56 PM,28/Oct/23 3:02 AM,16/Jun/20 9:56 PM,v1.1.0,,,,,,fabric-peer,,,,0,ipm,,,,,"In core.yaml for v1.1.0-alpha,

 


{code}
# The endpoint this peer uses to listen for inbound chaincode connections.

# If this is commented-out, the listen address is selected to be

# the peer's address (see below) with port 7052

# chaincodeListenAddress: 0.0.0.0:7052

 

# The endpoint the chaincode for this peer uses to connect to the peer.

# If this is not specified, the chaincodeListenAddress address is selected.

# And if chaincodeListenAddress is not specified, address is selected from

# peer listenAddress. # chaincodeAddress: 0.0.0.0:7052

{code}

 

The chaincodeListenAddress defaults to the peerAddress, and the chaincodeAddress defaults to peerListenAddress. Instead, I think chaincodeListenAddress should default to peerListenAddress and chaincodeAddress should default to peerAddress.

 ",,dbshah,denyeart,guoger,joaquimpedrooliveira,jyellick,muralisr,sykesm,tsharris,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|i00n2e:8znqzzzzzwr",,,,,,,,,,,,,,,,,,,,,dbshah,denyeart,guoger,joaquimpedrooliveira,jyellick,muralisr,sykesm,tsharris,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Feb/18 2:15 PM;denyeart;[~yacovm] You are wise in this area, could I ask you to review the various core.yaml port bindings and clean up as necessary.
 ;;;","22/Feb/18 5:07 PM;yacovm;This is aligned with the [code|https://github.com/hyperledger/fabric/blob/master/peer/node/start.go#L350-L375].

;;;","22/Feb/18 5:51 PM;yacovm;{quote}Instead, I think chaincodeListenAddress should default to peerListenAddress and chaincodeAddress should default to peerAddress.{quote}
I don't think it's a good idea to change that now for v1.1.

[~muralisr] what do you think about changing that to v1.2? ;;;","24/Feb/18 4:25 AM;denyeart;I've deferred to v1.2.  

[~muralisr] What change (if any) would you recommend in 1.2 timeframe to make this less confusing?;;;","22/May/18 3:41 AM;kchristidis;[~muralisr]: Can you please update with thoughts and plan of attack (if any) for this? Trying to figure out what goes on in 1.2.;;;","15/Jun/18 1:10 AM;kchristidis;Any updates on this?;;;","18/Jun/18 9:01 PM;denyeart;[~muralisr] I'll defer to v1.3 but would still like your thoughts!;;;","18/Jun/18 11:00 PM;muralisr;[~denyeart] Agree that's the right thing to do at this stage. On the face of it looks like a reasonable change (not quite sure about ""chaincodeAddress should default to peerAddress"" though) but would need to understand the ripple effect (tests, docs, and user experiance).

Suggest we tee it up early for 1.3 to give users adequate notice if we end up making changes here.

(Apologize for the delay on this one.)

 ;;;","28/Nov/18 12:26 AM;denyeart;[~muralisr] As we are closing down v1.4.0, I've deferred to v2.0.0.  [~muralisr] as we keep punting this each release, would you be able to take a look and make suggestions for early in v2.0.0 cycle?;;;","28/Nov/18 1:35 AM;muralisr;[~denyeart] I will do that. In any case 2.0.0 gives more leeway for things like backwards compat.;;;","25/Sep/19 1:22 AM;jyellick;[~muralisr] are you still planning to make this fix for v2.0?;;;","28/Nov/19 5:44 PM;guoger;is this to solve name confusion?

i think we probably want to give it more clear names, like
- {{AdvertisedChaincodeListenAddress}}
- {{ChaincodeListenAddress}}
- {{AdvertisedPeerListenAddress}}
- {{PeerListenAddress}}

if we simply change the default mapping w/o changing names, i imagine lots of users would complain when they switch to 2.0;;;","14/May/20 12:41 AM;wlahti;[~dbshah] Similar to Jay in his comment, I'm just trying to understand the motivation behind this request. Is it naming confusion or something else? What's the real end goal in your mind for this task? If we're going to make any changes here, seems like now would be a good time before we hit v2.2.0, which is the next LTS. ;;;","14/May/20 1:34 AM;dbshah;[~wlahti] Yup it is for the naming confusion.;;;","23/May/20 12:21 AM;wlahti;[~sykesm] Would you mind chiming in here with thoughts on the proper course of action (and when you think is the right time to implement it)? Since this request deals with the defaults for chaincodeAddress and chaincodeListenAddress, we don't want to just break existing client setups while we're in between major releases. ;;;","09/Jun/20 7:48 AM;sykesm;[~tsharris] just pinged me on this asking me to comment.

IMO, this has been carried for so long it's pretty clear it's not a heavy hitter. With that:

First, changing the names isn't worth the churn. Ensuring the code matches the comments in the sample configuration seems more important.

There are multiple gRPC servers running in the peer. Clients of peer services like gossip, discovery, and the endorser are expected to access the peer through the server that's listening on {{peer.listenAddress}}. Instances of chaincode that are started by the peer are expected to access the chaincode server listening on {{peer.chaincodeListenAddress}}.

Depending on the network topology, the listen addresses may not be accessible to the clients. For example, the default {{peer.listenAddress}} is {{0.0.0.0:7051}}. Clients can't connect to that address since it's not valid. This is what {{peer.address}} is used for. When set, {{peer.address}} is what the peer advertises to clients. If it's not set, the peer will actually enumerate the interfaces and choose the first non-loopback address it finds when {{peer.addressAutoDetect}} is enabled. This doesn't always work as the auto-detected address may not be accessible.

Imagine a multi-home host (like the classic SoftLayer hosts) with an internal and external network. Clients that are not on the local VLAN need to use the external address so this may need to be explicitly configured. Virtual IPs that automatically choose the correct network path are another example of where {{peer.address}} might be needed.

Similarly, chaincode instances need to connect to the peer. The server will listen on the {{chaincodeListenAddress}} (if specified) or the IP from {{listenAddress}} and port 7052 if it's not. And, just like {{peer.address}}, {{chaincodeAddress}} is used to tell the chaincode what to connect to. In a Docker for macOS environment, for example, the {{chaincodeAddress}} can be set to {{docker.host.internal}} to connect to chaincode server in a peer running on the macOS host.

I haven't walked all the code but the one thing that looks wrong to me is this comment:

{code}
    # The endpoint the chaincode for this peer uses to connect to the peer.
    # If this is not specified, the chaincodeListenAddress address is selected.
    # And if chaincodeListenAddress is not specified, address is selected from
    # peer listenAddress.
    # chaincodeAddress: 0.0.0.0:7052
{code}

I believe if {{chaincodeListenAddress}} is not specified, the chaincode should be told to connect to {{peer.address}} instead of {{peer.chaincodeListenAddress}}. Once the behavior is verified, I think that's the only thing that needs to change is the comment.;;;","10/Jun/20 2:55 AM;tsharris;The behavior is verified in [this|https://github.com/hyperledger/fabric/blob/e137a20c5cdc7433c6faa443d51890b1d99a7c2e/internal/peer/node/start_test.go#L84] unit test. As noted by Matt, this would require updating the comment in the sampleconfig yaml. ;;;","10/Jun/20 9:22 AM;tsharris;[https://github.com/hyperledger/fabric/pull/1386];;;",,,,,
Create gerrit comment trigger to trigger specific cron jobs,FAB-8444,27915,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,sambhavdutt,sambhavdutt,sambhavdutt,22/Feb/18 7:44 AM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,,,,fabric-ci,,,,0,,,,,,"Create gerrit trigger comments to retrigger daily jobs like fabric-smoke-test, fabric test-daily that would enable someone to retrigger cron jobs when a patch for the cron job is merged, by selecting the ""Reply"" on Gerrit and submit the respective trigger comment. This will help the patch submitter to retrigger the cron job after merge in hyperledger, not having to wait for the job to trigger till the time specified in the cron job. The trigger comment can also be helpful to retrigger the cron job when it fails becaulse on a network issue or a timeout error.",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyfz:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/18 5:11 AM;sambhavdutt;Not required at the moment.;;;",,,,,,,,,,,,,,,,,,,,,,
Change byfn to accept the IMAGE_TAG for network launching in fabric-samples,FAB-8445,27916,27572,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Feb/18 7:52 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Feb/18 1:08 AM,,,,v1.1.1,,,fabric-samples,,,,0,,,,,,Add IMAGE_TAG option to byfn in fabric-samples repository (release branch) to launch specific version of fabric network without using latest tag,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyg7:",,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Feb/18 7:58 AM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/18183/;;;",,,,,,,,,,,,,,,,,,,,,,
Need consistent validation for couchdb indexes regardless of which client packages the index,FAB-8446,27917,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,22/Feb/18 9:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Feb/18 11:21 AM,,,,v1.1.1,,,fabric-ledger,,,,0,,,,,,"The existing validation for packaged couchdb indexes in chaincode was only getting called if peer CLI packaged the index.  Need the same validation logic called if an SDK client attempts to package and install the chaincode.

This change ensures that the same validation is called during peer CLI packaging and during LSCC install chaincode.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx06n:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Feb/18 9:38 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18193/;;;",,,,,,,,,,,,,,,,,,,,,,
Example of authentication between Kafka and Orderer,FAB-8447,27919,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,YashGanthe,YashGanthe,22/Feb/18 1:09 PM,23/Jan/20 7:27 AM,28/Oct/23 3:02 AM,23/Jan/20 7:27 AM,v1.0.6,,,Future,,,fabric-samples,,,,0,kafka,stale-item,,,,Please provide an example compose file that shows the environment variables to be set in the containers for making it possible to authenticate orderers that access Kafka. The Kafka should be configured such that only orderers are allowed to access the topics.,,denyeart,fredbi,sanchezl,sykesm,YashGanthe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyygn:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,fredbi,sanchezl,sykesm,YashGanthe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/18 1:10 PM;sanchezl;[~YashGanthe], Check out the zip file attached to FAB-5226. ;;;","23/Feb/18 1:53 PM;YashGanthe;I have gone through the zip file. Apparently any process that uses an SSL certificate signed by the trusted CA will get access to the kafka topics and consume the messages. Instead, I am looking for a configuration where only the orderer is recognized as an authorized client.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:27 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,
Error on running byfn.sh up,FAB-8449,27921,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,d8bhatta,d8bhatta,22/Feb/18 7:54 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Feb/18 2:54 AM,,,,,,,,,,,0,,,,,,"Hello,

I am following [http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html] and when I run command 

./byfn.sh -m generate

It successfully generates peers but when I run following command:

./byfn.sh -m up

Error: failed to create deliver client: orderer client failed to connect to orderer.example.com:7050: failed to create new connection: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""tlsca.example.com"")

Usage:

  peer channel create [flags]

 

Flags:

  -c, --channelID string   In case of a newChain command, the channel ID to create.

  -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer

  -t, --timeout int        Channel creation timeout (default 5)

 

Global Flags:

      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint

      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint

      --clientauth                          Use mutual TLS when communicating with the orderer endpoint

      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint

      --logging-level string                Default logging level and overrides, see core.yaml for full syntax

  -o, --orderer string                      Ordering service endpoint

      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.

      --tls                                 Use TLS when communicating with the orderer endpoint

  -v, --version                             Display current version of fabric peer server

 

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

========= ERROR !!! FAILED to execute End-2-End Scenario ===========

Can somebody please suggest me the solution?

Thanks",,ChristopherFerris,d8bhatta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyh3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,d8bhatta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/18 2:54 AM;ChristopherFerris;I would strongly advise that you use a specific release... it is likely that you may hit a transient issue when running against master/latest.

 

I just tested against v1.1.0-alpha, and it works correctly. Please use this version of the docs to install prerequisites, etc and run the sample. You will want to re-install the fabric-samples and perform the install of binaries again per the v1.1.0-alpha docs.

 ;;;",,,,,,,,,,,,,,,,,,,,,,
Certificates may expire in Fabric 1.1 lifetime,FAB-8451,27926,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,adc,denyeart,denyeart,22/Feb/18 11:39 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 7:34 PM,,,,v1.1.1,,,fabric-crypto,,,,0,,,,,,"As we saw in FAB-8415 , certificate expirations are a major disruption, regardless of whether it happens in production, tests, or samples.

We are at risk of other certificate expirations over the life span of 1.1 (let's say next two years).  Need to review all certificates and update any that will expire within the next two years, across these repositories:
fabric
fabric-ca
fabric-baseimage
fabric-chaincode-node
fabric-samples
fabric-sdk-java
fabric-sdk-node
fabric-test
fabric-test-resources

Longer term we need a better strategy for managing certificates in the repositories.",,angelo.decaro,denyeart,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx06f:",,,,,,,,,,,,,,,,,,,,,angelo.decaro,denyeart,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 9:06 PM;angelo.decaro;This is a preliminary output of my scanning tool:
{code:java}
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric]
Entry [2016-04-20 22:49:51 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/bddtests/tlsca.cert]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/core/handlers/auth/filter/testdata/expiredCert.pem]
Entry [2018-01-07 12:05:36 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/events/producer/testdata/expiredCert.pem]
Entry [2017-11-11 17:07:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/badconfigoucert/admincerts/admincert.pem]
Entry [2017-11-11 17:07:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/badconfigoucert/signcerts/peer.pem]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/expired/admincerts/admincert-expired.pem]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/expired/cacerts/cacert.pem]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/expired/signcerts/peer-expired.pem]
Entry [2018-01-07 10:39:03 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/orderer/common/msgprocessor/testdata/expiredCert.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-ca]
Entry [2018-04-17 15:08:36 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-ca/testdata/ec_cert.pem]
Entry [2017-03-22 14:19:04 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-ca/testdata/expiredcert.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric-ca]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-chaincode-node]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-chaincode-node]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-samples]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-samples]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java]
Entry [2017-11-11 17:07:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/cacerts/admincert.pem]
Entry [2017-12-15 15:02:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/cas/peerOrg1/cert.pem]
Entry [2017-12-15 15:02:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/cas/peerOrg2/cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/orderer/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer0/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer1/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer2/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer3/ca-cert.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/org1.example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/org2.example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/peerOrganizations/org1.example.com/msp/cacerts/org1.example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/peerOrganizations/org1.example.com/msp/cacerts/org2.example.com-tls-cert.pem]
Entry [2017-11-27 12:24:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/fabricca/ecert.pem]
Entry [2017-12-19 03:56:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/local/signcerts/admin.pem]
Entry [2018-01-10 02:27:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/org0/admincerts/admin.pem]
Entry [2018-01-10 02:35:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/org1/admincerts/admin.pem]
Entry [2018-01-24 19:55:45 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/org1/cacerts/org_ca.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-test]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-test]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-test-resources]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-test-resources]
{code}
Safe repos are:
 * fabric-chaincode-node
 * fabric-samples
 * fabric-test
 * fabric-test-resources

The others have issues.;;;","23/Feb/18 10:22 PM;angelo.decaro;https://gerrit.hyperledger.org/r/#/c/18247/ addresses *fabric*;;;","23/Feb/18 10:45 PM;angelo.decaro;https://gerrit.hyperledger.org/r/#/c/18251/ addresses *fabric-sdk-java*;;;","23/Feb/18 10:52 PM;angelo.decaro;for *fabric-skd-node*, it looks like the problematic certificates have already expired. Therefore, they are not causing harm. Therefore, probably some of them should be removed. 
For instance, the expired certificate test/fixtures/fabricca/ecert.pem is not causing any harm because it used used only to test that loading a certificate from file is successful. No expiration is checked. This file can stay as it is.;;;","23/Feb/18 10:53 PM;angelo.decaro;*fabric-ca* will be addressed by [~smithbk];;;","24/Feb/18 3:51 AM;Clayton Sims;[~skarim]  is doing ca.   eta today. ;;;","24/Feb/18 5:36 AM;skarim;https://gerrit.hyperledger.org/r/#/c/18303/ addresses *fabric-ca*;;;","24/Feb/18 7:34 PM;denyeart;[~adc] Looks like we are done here, I will close.
Is there anything remaining from your perspective?;;;","25/Feb/18 9:18 PM;angelo.decaro;[~denyeart], I think we are done with the certificates. Next step is to implement the long term strategy :);;;",,,,,,,,,,,,,,
Invalid policy Error when MSPID has multiple '.'s,FAB-8453,27929,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ales,latitiah,latitiah,23/Feb/18 3:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 11:14 PM,v1.1.0,,,v1.1.1,,,fabric-peer,,,,0,,,,,,"When the MSPID is defined as ""org1.example.com"" and we attempt to set the policy during an instantiation, then the instantiation fails with:
{code}Error: Invalid policy OR ('org1.example.com.peer','org2.example.com.peer')
{code}

Command used:
{code}peer chaincode instantiate --name mycc --version 0 --lang GOLANG --channelID behavesystest --ctor '{""Args"": [""init"",""a"",""1000"",""b"",""2000""]}' --tls true --cafile /var/hyperledger/configs/bc2fc3ae17f511e89d840214683e8447/ordererOrganizations/example.com/orderers/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --orderer orderer0.example.com:7050 --policy ""OR ('org1.example.com.peer','org2.example.com.peer')"" {code}

*Expected response:* No error, but would accept set MSPID when setting the policy

After looking through the documentation, it does not clearly state what the MSPID should and should not contain.",,ales,denyeart,elli-androulaki,kchristidis,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8480,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyif:",,,,,,,,,,,,,,,,,,,,,ales,denyeart,elli-androulaki,kchristidis,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 8:07 AM;denyeart;[~elli-androulaki] Could somebody from crypto team take a look?
Can the limitation be lifted?
Can the error message be clarified?
Can the naming restrictions be documented?;;;","23/Feb/18 5:51 PM;elli-androulaki;Hi, sure.

However, not sure it makes sense to lift the ""."" limitation in the code, mostly cause not sure where else a ""."" is used as delimiter in the policy language.

Therefore, I would only add documentation on the limitations on the msp identifier and allow the error message be more accurate. [~denyeart] what would be a good place to add such documentation?

Thanks!

 ;;;","23/Feb/18 9:19 PM;denyeart;Hi Elli, first I suggest discuss with the policy language experts and determine if dots can be supported. It seems like it should be possible to look for the role (e.g. *.member) by allowing multiple dots and picking the role off of the last segment.  As the example above illustrates, having dots in MSPIDs may be a common request.

Adding such support would likely be a 1.2 item though.  

For 1.1, maybe the best thing would be to mention the current restriction in the comments in the configtx.yaml sample, I think that's where most people would see it, and would be most easy to revert if we decide to support dots in 1.2.

If we decide the restriction should be permanent, I think the right place to document the MSP naming rules is here:
http://hyperledger-fabric.readthedocs.io/en/master/msp.html

I assume that doc will remain as-is even after the MSP conceptual doc is merged:
https://gerrit.hyperledger.org/r/#/c/17505/

Finally, If we decide the restriction should be permanent, I think configtxgen needs to validate MSPIDs based on the naming rules.

I think just the configtx.yaml sample could be updated to resolve the immediate 1.1 defect, and then create follow-on Jira items for 1.2 based on the decision of whether to support dots in the future.;;;","23/Feb/18 9:49 PM;elli-androulaki;Reassigning to [~ales] as he worked on the endorsement policy language :);;;","23/Feb/18 11:10 PM;kchristidis;Dashes seem to not be allowed either? https://chat.hyperledger.org/channel/fabric-orderer?msg=SBQuaGaXswueRDjQ5
+1 for documenting the limitations.;;;","24/Feb/18 8:34 PM;ales;See here [https://gerrit.hyperledger.org/r/#/c/18323/]
Now we support dots and dashes;;;","24/Feb/18 8:59 PM;denyeart;Discussed with [~ales], we concluded that even though configtxgen allows any characters, we didn't want to add new validation at that level as there could be existing networks with MSP IDs beyond alphanumeric and dots and dashes.  Safest resolution is to simply add support for dots and dashes in the policy parser and document that dots and dashes are supported.;;;",,,,,,,,,,,,,,,,
publish config files from sampleconfig directory as part binary release process,FAB-8455,27931,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,23/Feb/18 4:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 1:33 AM,,,,v1.1.0,,,fabric-build,,,,0,,,,,,"requirement created from one of the comment of FAB-8013

publish all the config files from ""sampleconfig"" directory as part of binary release process.

Create a *config* directory sibling to bin directory and copy all the config files from sampleconfig directory.

tar it along with bin directory and publish it as part of binary release.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyiv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 12:01 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18221/;;;",,,,,,,,,,,,,,,,,,,,,,
Rel note : FAB-8373 security scan vulnerabilities,FAB-8456,27932,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,rameshthoomu,Clayton Sims,23/Feb/18 5:25 AM,19/Mar/19 8:12 PM,28/Oct/23 3:02 AM,24/Feb/18 7:21 AM,,,,v1.1.0,v1.1.1,,fabric-docs,,,,0,ci-failure,,,,,Release note: 8373,,denyeart,harrisob@us.ibm.com,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-250,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyj3:",,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 7:51 AM;denyeart;[~smithbk] you can go ahead and add a couple sentences now to fabric-sdk-node release_notes/v1.1.0-rc1.txt (new file).
You can see the release note precedent in : https://gerrit.hyperledger.org/r/#/c/17197/ .;;;","23/Feb/18 7:54 AM;denyeart;[~smithbk] Actually I see you have a release note CR https://gerrit.hyperledger.org/r/#/c/18211/ tied to FAB-8373.  I'd suggest let's keep FAB-8373 open for the eventual fix in future, and do the release note under this FAB-8456.;;;","24/Feb/18 4:01 AM;denyeart;I've updated commit message in https://gerrit.hyperledger.org/r/#/c/18211/ to indicate it is for this FAB-8456.;;;",,,,,,,,,,,,,,,,,,,,
"Peer out of memory, trying to allocate 842GB",FAB-8458,27934,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,aleksandar.likic,aleksandar.likic,23/Feb/18 7:07 AM,01/Dec/18 8:36 PM,28/Oct/23 3:02 AM,01/Dec/18 8:36 PM,,,,,,,fabric-peer,,,,0,,,,,,"Last night one of our peers ran out of memory. At one point, we observed that the peer went unresponsive (not available for client transaction requests). In logs we found that the peer has just restarted. Apparently, the peer was waiting for chaincodes to initialize. User CC logs were not present, which to us looked like the CCs failed initialization. We redeployed Fabric to get the system running again.

 

Peer Log:

runtime: out of memory: cannot allocate 842394632192-byte block (314507264 in use)

fatal error: out of memory

 

runtime stack:

runtime.throw(0x13ee5cc, 0xd)

        /opt/go/src/runtime/panic.go:605 +0x95

runtime.largeAlloc(0xc422a148bb, 0x9f0100, 0x1ffffffffffffff)

        /opt/go/src/runtime/malloc.go:829 +0x114

runtime.mallocgc.func1()

        /opt/go/src/runtime/malloc.go:722 +0x46

runtime.systemstack(0xc420023900)

        /opt/go/src/runtime/asm_amd64.s:344 +0x79

runtime.mstart()

        /opt/go/src/runtime/proc.go:1135

 

goroutine 1710 [running]:

runtime.systemstack_switch()

        /opt/go/src/runtime/asm_amd64.s:298 fp=0xc425b82e00 sp=0xc425b82df8 pc=0x9ff8d0

runtime.mallocgc(0xc422a148bb, 0x0, 0x1300000, 0x1)

        /opt/go/src/runtime/malloc.go:721 +0x7ae fp=0xc425b82ea8 sp=0xc425b82e00 pc=0x9b5a4e

runtime.rawstring(0xc422a148bb, 0x0, 0x0, 0x0, 0x0, 0x0)

        /opt/go/src/runtime/string.go:245 +0x6a fp=0xc425b82ed8 sp=0xc425b82ea8 pc=0x9ed23a

runtime.rawstringtmp(0x0, 0xc422a148bb, 0xc425b82f60, 0x9b663d, 0xc42233de28, 0xc427224980, 0xc4227387c0)

        /opt/go/src/runtime/string.go:115 +0x6f fp=0xc425b82f18 sp=0xc425b82ed8 pc=0x9ecc2f

runtime.concatstrings(0x0, 0xc425b82ff8, 0x2, 0x2, 0x1b4d620, 0xc426003e60)

        /opt/go/src/runtime/string.go:46 +0x10a fp=0xc425b82fb0 sp=0xc425b82f18 pc=0x9ec75a

runtime.concatstring2(0x0, 0xc422a148a0, 0xc422a148b0, 0x13ed01c, 0xb, 0xc425b83040, 0xc427224980)

        /opt/go/src/runtime/string.go:55 +0x47 fp=0xc425b82ff0 sp=0xc425b82fb0 pc=0x9ec957

github.com/hyperledger/fabric/core/common/privdata.BuildCollectionKVSKey(...)

        /opt/gopath/src/github.com/hyperledger/fabric/core/common/privdata/collection.go:106

github.com/hyperledger/fabric/core/peer.(*collectionSupport).GetCollectionKVSKey(0xc4218ca080, 0xc422a3aff0, 0xf, 0xc422a14870, 0xc422a14880, 0xc422a148c0, 0xc422a148d0, 0xc422a148a0, 0xc422a148b0, 0xc42211b8c0, ...)

        /opt/gopath/src/github.com/hyperledger/fabric/core/peer/peer.go:749 +0x59 fp=0xc425b83038 sp=0xc425b82ff0 pc=0x111a689

github.com/hyperledger/fabric/core/common/privdata.(*simpleCollectionStore).retrieveCollectionConfigPackage(0xc4218ca090, 0xc422a3aff0, 0xf, 0xc422a14870, 0xc422a14880, 0xc422a148c0, 0xc422a148d0, 0xc422a148a0, 0xc422a148b0, 0x0, ...)

        /opt/gopath/src/github.com/hyperledger/fabric/core/common/privdata/store.go:58 +0x2c6 fp=0xc425b83258 sp=0xc425b83038 pc=0x10237f6

github.com/hyperledger/fabric/core/common/privdata.(*simpleCollectionStore).retrieveCollectionConfig(0xc4218ca090, 0xc422a3aff0, 0xf, 0xc422a14870, 0xc422a14880, 0xc422a148c0, 0xc422a148d0, 0xc422a148a0, 0xc422a148b0, 0x138b620, ...)

        /opt/gopath/src/github.com/hyperledger/fabric/core/common/privdata/store.go:76 +0x60 fp=0xc425b83328 sp=0xc425b83258 pc=0x1023ce0

github.com/hyperledger/fabric/core/common/privdata.(*simpleCollectionStore).retrieveSimpleCollection(0xc4218ca090, 0xc422a3aff0, 0xf, 0xc422a14870, 0xc422a14880, 0xc422a148c0, 0xc422a148d0, 0xc422a148a0, 0xc422a148b0, 0xc425b83668, ...)

        /opt/gopath/src/github.com/hyperledger/fabric/core/common/privdata/store.go:97 +0x60 fp=0xc425b83420 sp=0xc425b83328 pc=0x1023fa0

github.com/hyperledger/fabric/core/common/privdata.(*simpleCollectionStore).RetrieveCollectionAccessPolicy(0xc4218ca090, 0xc422a3aff0, 0xf, 0xc422a14870, 0xc422a14880, 0xc422a148c0, 0xc422a148d0, 0xc422a148a0, 0xc422a148b0, 0x9b5695, ...)

        /opt/gopath/src/github.com/hyperledger/fabric/core/common/privdata/store.go:114 +0x48 fp=0xc425b83490 sp=0xc425b83420 pc=0x1024348

github.com/hyperledger/fabric/gossip/privdata.(*puller).computeFilters(0xc423004300, 0xc423fbce10, 0xc42734df1b, 0x5, 0xc42734df20)

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:375 +0x1d5 fp=0xc425b836b8 sp=0xc425b83490 pc=0x10f6b25

github.com/hyperledger/fabric/gossip/privdata.(*puller).fetch(0xc423004300, 0xc423fbce10, 0xc423fbce10, 0x0, 0xc423fbce10, 0xd900000000000003, 0xc420021300)

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:208 +0x50 fp=0xc425b83808 sp=0xc425b836b8 pc=0x10f3e40

github.com/hyperledger/fabric/gossip/privdata.(*coordinator).fetchFromPeers(0xc422eb3900, 0xcc, 0xc422494d20, 0xc427604c30)

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:259 +0xe8 fp=0xc425b83af0 sp=0xc425b83808 pc=0x10e75a8

github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc422eb3900, 0xc42b6d7dc0, 0x0, 0x0, 0x0, 0x9b65a6, 0xc4230e3e08)

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:189 +0x648 fp=0xc425b83dc8 sp=0xc425b83af0 pc=0x10e63b8

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc4218f5a80, 0xc42b6d7dc0, 0x0, 0x0, 0x0, 0x0, 0x0)

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781 +0x7d fp=0xc425b83e70 sp=0xc425b83dc8 pc=0x1105e5d

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc4218f5a80)

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561 +0x411 fp=0xc425b83fd8 sp=0xc425b83e70 pc=0x1103a11

runtime.goexit()

        /opt/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc425b83fe0 sp=0xc425b83fd8 pc=0xa02501

created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider

        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:253 +0x6d3

 ",,ahmedsajid,aleksandar.likic,bstasyszyn,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzysbz:",,,,,,,,,,,,,,,,,,,,,ahmedsajid,aleksandar.likic,bstasyszyn,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 8:17 AM;denyeart;The stack trace seems to be saying that this function:

func BuildCollectionKVSKey(ccname string) string {
	return ccname + collectionSeparator + collectionSuffix
}

is requesting 842GB, which seems difficult to believe.

Recreation steps and peer debug logs are required to troubleshoot further.;;;","26/Feb/18 8:35 PM;denyeart;We have been unable to reproduce this in local environments. Without recreation steps, this item will have to be deferred to a 1.1.x fixpack or 1.2.;;;","01/Mar/18 11:59 PM;ahmedsajid;peer image was build from tag v1.1.0-alpha plus cherry picks:
 [https://github.com/securekey/fabric-next/blob/v1.1.0-0.0.7/scripts/fabric_cherry_picks.sh]

I'll be uploading logs soon.;;;","01/Dec/18 8:36 PM;denyeart;No further response from reporter, closing.;;;",,,,,,,,,,,,,,,,,,,
generate command help docs,FAB-8459,27935,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,23/Feb/18 10:05 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Apr/18 2:17 AM,,,,v1.2.0,,,fabric-docs,,,,0,,,,,,fabric-ca used a scheme to generate the help docs by simply piping the help output to a markdown doc. This seems like a better approach than manually editing documents with the same intent. We should work to ensure over time that the help text is helpful and sufficient to be the documentation.,,ChristopherFerris,joe-alewine,odowdaibm,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwttz:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,joe-alewine,odowdaibm,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Feb/18 10:06 AM;ChristopherFerris;[~odowdaibm] [~mastersingh24];;;","23/Feb/18 10:29 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/18233/;;;","23/Feb/18 10:51 PM;ChristopherFerris;Ok, so this needs to somehow incorporate the additional prose in the command reference docs. I still believe that we need to work smarter, and we need the docs to be consistent with the code. This approach is more likely to yield more accurate docs at less effort.

However, if we are going to add additional content, then that needs to be merged. I'll prototype this with configtxgen;;;","24/Feb/18 12:05 AM;odowdaibm;Wouldn't this approach negatively affect keeping the docs up to date, as writers would need to update commands and scripts to make this happen.  I don't see the problem with writing this, and keeping it up to date.  The problem is not the mechanics, it's the content.;;;","16/Mar/18 8:33 AM;ChristopherFerris;What I would suggest is to augment the help desk accordingly so as to eliminate the need.;;;","26/Mar/18 10:10 PM;joe-alewine;[~aambati] wanted to add you to this based on our conversation on Friday.;;;","03/Apr/18 6:19 PM;odowdaibm;We need to get the balance right here.  Generating syntax is fine, but explanations need to be clear, and likewise examples.  These are important parts of documentation, and it's not appropriate to auto-generate these.  I think we're on the same page.;;;",,,,,,,,,,,,,,,,
Doc updating the config file for native deployments,FAB-8460,27936,27314,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,23/Feb/18 10:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 3:22 AM,,,,,,,,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyjj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Create CI process document for each repository,FAB-8461,27937,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,23/Feb/18 3:09 PM,29/May/20 5:18 PM,28/Oct/23 3:02 AM,14/Jan/20 1:01 AM,,,,v1.2.0,,,fabric-ci,,,,0,ci_documentation,stale-item,,,,"document CI process for each repository. Each .md file should explain the below process for each repository
 * What jobs we trigger on verify and merge
 * What tests
 * On what platforms
 * Build tool versions
 * how to re-trigger failed jobs
 * Where to post questions
 * release process if applicable!

Above process is applicable for each repository we run in hyperledger CI server.",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10519,,,,,,,,,,,,,,,,,,,,,,FAB-10524,FAB-10526,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,[CI] - Create CI process document for each repository,,,,Unset,,,,"1|hzyyjr:",,,,Unset,Unset,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/18 11:41 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/19391/;;;","07/May/18 8:04 AM;rameshthoomu;The recent change has been pushed here [https://gerrit.hyperledger.org/r/#/c/20307/]

 ;;;","14/Jan/20 1:01 AM;rameshthoomu;Documentation on CI process has been updated here. [https://ci-docs.readthedocs.io/en/latest/] Closing this as there is no action item pending on this.;;;",,,,,,,,,,,,,,,,,,,,
remove FIT-node-x86_64 CI job,FAB-8471,27952,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,24/Feb/18 12:16 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 4:35 AM,,,,,,,fabric-ci,,,,0,,,,,,"FIT-node-x86_64 CI job basically runs e2e.js (e2e tests) and this job was added very early stage of fabric-sdk-node.. Now, these node e2e tests we are running in many fabric repositories like

fabric, fabric-ca, fabric-sdk-node and daily jobs.. so, it's better to remove this job.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyym7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configtxlator appends to files rather than truncates in CLI,FAB-8473,27954,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,24/Feb/18 12:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 2:07 AM,,,,,,,fabric-tools,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyymn:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Feb/18 12:59 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/18269;;;",,,,,,,,,,,,,,,,,,,,,,
PTE supports couchDB indexing,FAB-8476,27958,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,24/Feb/18 1:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 1:38 AM,,,,,,,fabric-quality,,,,0,,,,,,PTE supports couchDB indexing,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyyn3:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 1:38 AM;dongming;close, dup to FAB-8244;;;",,,,,,,,,,,,,,,,,,,,,,
Added Endorsement policy in Balance transfer.,FAB-8479,27961,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,susmita,susmita,susmita,24/Feb/18 2:04 AM,25/Jul/18 5:09 AM,28/Oct/23 3:02 AM,25/Jul/18 5:09 AM,,,,v1.3.0,,,,,,,0,,,,,,,,denyeart,Ratnakar,susmita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyynb:",,,,,,,,,,,,,,,,,,,,,denyeart,Ratnakar,susmita,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 11:20 PM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/18285/;;;","19/Jun/18 7:34 AM;denyeart;[~susmita] Could you update the readme in a final CR patch?;;;",,,,,,,,,,,,,,,,,,,,,
"Reinstate test code, configtx.yaml and docker composition files from workaround changes",FAB-8480,27962,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,24/Feb/18 2:18 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,27/Feb/18 12:57 AM,,,,,,,fabric-quality,,,,0,,,,,,"Once FAB-8453, is fixed/corrected, we will need to revisit the use of ""."" in the MSPID.

This includes any other changes that were made to allow tests to continue including using 'peer channel fetch config'.
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8453,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyynj:",,,,Unset,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"25/Feb/18 9:54 PM;latitiah;Reinstate using ""orgN.example.com"" as the MSPID in the following files:
* configs/configtx.yaml
* docker-compose/docker-compose-*.yml
* steps/endorser_util.py
;;;","27/Feb/18 12:58 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/18375/;;;",,,,,,,,,,,,,,,,,,,,,
LSCC error for chaincode instantiate/upgrade reveals server information,FAB-8481,27963,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,denyeart,denyeart,24/Feb/18 2:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Feb/18 11:48 PM,,,,,,,fabric-peer,,,,0,,,,,,"If chaincode is not installed, and you try to instantiate/upgrade, client will get back an error message:

status: 500, message: cannot get package for chaincode (marblesx:1)-open /var/hyperledger/production/chaincodes/marblesx.1: no such file or directory

Server API responses should not reveal server filepath information to the client, even in error scenarios. The filepath information should be logged to peer but not returned to client.",,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-44,,,,,,,,FABN-332,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyynr:",,,,,,,,,,,,,,,,,,,,,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/18 10:46 PM;muralisr;https://gerrit.hyperledger.org/r/#/c/18379/;;;","26/Feb/18 1:48 PM;denyeart;The ""*no such file or directory""* error was no good, both from a user perspective, and because it leaked server file system path information (security vulnerability).

It has been changed in FAB-8481 as follows:

 

*Scenario:* instantiate/upgrade against a non-installed chaincode

*Client error message received in 1.1:* chaincode error (status: 500, message: cannot get package for chaincode (marbles:1))

 

Other related messages in 1.1 are:

 

*Scenario:* invoke against a non-instantiated chaincode

*Client error message received in 1.1:* make sure the chaincode marbles has been successfully instantiated and try again: could not find chaincode with name 'marbles' - <nil>

 

*Scenario:* instantiate/upgrade/invoke against a non-exist channel, or client not a member of channel:

*Client error message received in 1.1:* access denied: channel [myc] creator org [DEFAULT]

This message was made intentionally vague, so that clients could detect which channels a peer has joined.;;;",,,,,,,,,,,,,,,,,,,,,
Context-centric SDK API,FAB-8482,27965,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sudeshrshetty,biljana.lukovic,biljana.lukovic,24/Feb/18 3:25 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,14/Jun/18 6:11 AM,,,,,,,,,,,0,,,,,,Implement Context Functions,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxzvz:",,,,Unset,,,,,,Unset,,,,,,,,,,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
upgrade go version to 1.9.2,FAB-8483,27966,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Feb/18 4:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 4:23 AM,,,,v1.1.0,v1.1.1,,fabric-build,,,,0,,,,,,,,denyeart,mastersingh24,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyynz:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,rameshthoomu,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 4:35 AM;rameshthoomu;[~mastersingh24] I see go version 1.9 in both fabric, fabric-ca master branches but the go version in baseimage is 1.9.2.. Do you want me to push this change?;;;","24/Feb/18 9:32 PM;mastersingh24;Ah - yeah - I guess we should update to the latest Go version in CI;;;","25/Feb/18 5:10 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/18345/]

[https://gerrit.hyperledger.org/r/#/c/18349/]

We have installed 1.9.2 and 1.9.4 and latest go versions in sandbox environment and testing is in-progress on 1.9.2 go version. [~mastersingh24], I think it;s better to be in sync with the version mentioned in baseimage, fabric and fabric-ca. Suggestion?;;;","25/Feb/18 10:03 PM;denyeart;I agree to update to 1.9.2 across the board, to match the baseimage version 1.9.2.;;;",,,,,,,,,,,,,,,,,,,
upgrade go version to 1.9.2 in fabric,FAB-8484,27967,27966,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Feb/18 4:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 1:05 AM,,,,v1.1.0,v1.1.1,,fabric-build,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyo7:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/18 5:02 AM;rameshthoomu;the fabric is now pointing to 1.9 in `ci.properties` file. As we are claiming 1.1 release supports 1.9.2, it's better to update go version in fabric to 1.9.2.;;;","25/Feb/18 5:03 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18345/;;;",,,,,,,,,,,,,,,,,,,,,
upgrade go version to 1.9.2 in fabric-ca,FAB-8485,27968,27966,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Feb/18 4:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 1:04 AM,,,,,,,fabric-ca-build,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyof:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/18 5:01 AM;rameshthoomu;the fabric-ca is now pointing to 1.9 in `ci.properties` file. As we are claiming 1.1 release supports 1.9.2, it's better to update go version in fabric-ca to 1.9.2.;;;","25/Feb/18 5:02 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18349/;;;",,,,,,,,,,,,,,,,,,,,,
"upgrade go version to 1.9.2 in CI x86, power and z nodes",FAB-8486,27969,27966,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Feb/18 4:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 11:16 PM,,,,v1.1.0,v1.1.1,,fabric-ci,,,,0,,,,,,,,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyon:",,,,,,,,,,,,,,,,,,,,,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/18 5:05 AM;rameshthoomu;go version 1.9.2 is updated in z and x86_64 build nodes in sandbox environment. Testing is in-progress. Will update the same in production build nodes,  once the tests are executed successfully on 1.9.2 version;;;","25/Feb/18 5:05 AM;rameshthoomu;[~harsha544] could you please update go version to 1.9.2 in power builds nodes both in sandbox and production;;;","26/Feb/18 1:28 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/18383/]

 ;;;","26/Feb/18 4:21 PM;harsha544;[~rameshthoomu] Updated go to 1.9.2 in power build nodes ( i.e sandbox & production );;;","26/Feb/18 11:17 PM;rameshthoomu;go1.9.2 is updated in all the CI node platforms.;;;",,,,,,,,,,,,,,,,,,
Create fabric-amcl repository,FAB-8488,27971,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,24/Feb/18 5:45 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 4:58 AM,,,,v1.2.0,,,fabric-build,,,,0,,,,,,"For the 1.2 release, we want to use [dep|https://golang.github.io/dep/] to manage our vendored dependencies.  Unfortunately the milagro-crypto/amcl  does not conform to standard Go packaging; you actually need to clone the repo and then build packages for the specific curves you want to use.  dep uses Git branches / tags for pulling dependencies. 

The plan is to create github.com/hyperledger/fabric-amcl and generate the amcl package(s) we need there and then import those using dep",,davidkhala,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyp3:",,,,,,,,,,,,,,,,,,,,,davidkhala,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 5:46 AM;mastersingh24;[~ry] [~rjones-lf] please have a look;;;","24/Feb/18 8:27 AM;ryjones;who are the committers, [~mastersingh24]? exactly same as /fabric? 2+2 or NACR rules?;;;","26/Feb/18 7:17 AM;mastersingh24;Oh yeah - I always forget about that part [~ryjones]  :-)
I think we can go with the same maintainers as /fabric and NACR for this one;;;","27/Feb/18 4:57 AM;ryjones;https://gerrit.hyperledger.org/r/#/admin/projects/fabric-amcl
mirrored to github
NACR;;;",,,,,,,,,,,,,,,,,,,
IMAGE_TAG is required and breaks release branch docs/scripts,FAB-8489,27972,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,jyellick,jyellick,24/Feb/18 6:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,24/Feb/18 7:26 AM,,,,v1.0.6,,,fabric-samples,,,,0,,,,,,Fix fabric-samples in release branch.,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyypb:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 7:22 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18307/;;;",,,,,,,,,,,,,,,,,,,,,,
Fetching the channel config cli command Error,FAB-8492,27978,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,muralisr,latitiah,latitiah,24/Feb/18 9:37 AM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,v1.1.0,,,Future,,,fabric-peer,,,,0,,,,,,"The command {code}peer channel fetch config <filename> --channelID <channelID> --orderer <ordererAddress>{code} no longer works as expected when using the config parameter.

When executing this command the error: {code}
      Error: can't read the block: &{FORBIDDEN}
      Usage:
        peer channel fetch <newest|oldest|config|(number)> [outputfile] [flags]
      
      Flags:
        -c, --channelID string   In case of a newChain command, the channel ID to create.
      {code}
is received.

Note: the config parameter is still listed as a possible option.

CI log links for examples of instances of this failure:
    *orderer0 log:* https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/886/artifact/gopath/src/github.com/hyperledger/fabric-test/feature/orderer0.example.com_FAB-6211%3A_Test_example02_chaincode_written_using_GOLANG_with_tls_--_@1.1_.log
    *peer0.org1 log*: https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/886/artifact/gopath/src/github.com/hyperledger/fabric-test/feature/peer0.org1.example.com_FAB-6211%3A_Test_example02_chaincode_written_using_GOLANG_with_tls_--_@1.1_.log",,ChristopherFerris,denyeart,jyellick,latitiah,mastersingh24,muralisr,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyq7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,jyellick,latitiah,mastersingh24,muralisr,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/18 12:06 AM;jyellick;This error would indicate that the user you are performing the operation with is not authorized to read from the channel.  What do the orderer logs say?;;;","25/Feb/18 12:08 AM;denyeart;I can reproduce easily in my local dev environment using:

peer channel fetch config -o 127.0.0.1:7050;;;","25/Feb/18 12:12 AM;jyellick;FWIW:

{noformat}
peer channel fetch config foo_config.pb -o 127.0.0.1:7050 -c testchainid
{noformat}

works fine on my machine with the latest master.  Are there any more details to reproduce?;;;","25/Feb/18 12:16 AM;latitiah;I verified that the Admin user is being used for this command. I will add pointers to the logs in CI for examples of what is being seen.;;;","25/Feb/18 12:43 AM;jyellick;{quote}
I verified that the Admin user is being used for this command.
{quote}

[~latitiah] Can please be more specific.  The admin user for what org? And what channel are you targetting?

For instance, if a peer org admin to attempts to read configuration from the orderer system channel, I would expect this error.;;;","25/Feb/18 12:47 AM;jyellick;From the orderer log

{noformat}
[36m2018-02-24 03:04:20.453 UTC [common/deliver] deliverBlocks -> DEBU 2a6[0m Rejecting deliver for 172.18.0.7:36430 because channel behavesystest not found
[36m2018-02-24 03:04:20.453 UTC [common/deliver] Handle -> DEBU 2a7[0m Waiting for new SeekInfo from 172.18.0.7:36430
[36m2018-02-24 03:04:20.453 UTC [common/deliver] Handle -> DEBU 2a8[0m Attempting to read seek info message from 172.18.0.7:36430
[36m2018-02-24 03:04:20.456 UTC [common/deliver] Handle -> DEBU 2a9[0m Received EOF from 172.18.0.7:36430, hangup
[36m2018-02-24 03:04:20.456 UTC [orderer/common/server] func1 -> DEBU 2aa[0m Closing Deliver stream
{noformat}

This the only rejection I can see, which implies to me that something went wrong earlier with your channel creation.;;;","25/Feb/18 12:48 AM;muralisr;Worked for me with these steps using a non-testchainid channel

* start orderer
** ORDERER_GENERAL_GENESISPROFILE=SampleSingleMSPSolo ORDERER_GENERAL_LOGLEVEL=debug orderer
* generate channel tx
** configtxgen -profile SampleSingleMSPChannel -channelID myc -outputCreateChannelTx myc.tx
* create channel
** peer channel create -c myc -f myc.tx -o 127.0.0.1:7050 
* fetch config block
** peer channel fetch config foo_config.pb -o 127.0.0.1:7050 -c myc

If using wrong channel name, I get NOT_FOUND (and not FORBIDDEN) as expected.

{code:java}
peer channel fetch config foo_config.pb -o 127.0.0.1:7050 -c mycwrong
2018-02-24 10:43:14.415 EST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Error: can't read the block: &{NOT_FOUND}
{code}

If using wrong MSPID, get FORBIDDEN

{code:java}
CORE_PEER_LOCALMSPID=BADMSP peer channel fetch config foo_config.pb -o 127.0.0.1:7050 -c myc
2018-02-24 10:41:45.616 EST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
Error: can't read the block: &{FORBIDDEN}
{code}

If using wrong MSP, get FORBIDDEN

{code:java}
CORE_PEER_MSPCONFIGPATH=~/fabric_acl/crypto-config/org1/peer1/msp  peer channel fetch config foo_config.pb -o 127.0.0.1:7050 -c myc
2018-02-24 10:45:40.268 EST [msp] getMspConfig -> INFO 001 Loading NodeOUs
2018-02-24 10:45:40.287 EST [channelCmd] InitCmdFactory -> INFO 002 Endorser and orderer connections initialized
Error: can't read the block: &{FORBIDDEN}
{code}

I'd say the something has changed in the tests that messes up the MSP info.;;;","25/Feb/18 1:10 AM;denyeart;In my case I forgot to add the -c flag for a channel, and received:

Error: can't read the block: &{NOT_FOUND}

How about if we use this Jira to improve the validation and error message?;;;","25/Feb/18 2:06 AM;muralisr;[~denyeart] in that case the channel name """" is NOT_FOUND. Logically correct as omitting -c defaults to empty chanell ID. We might just want to fix it by insisting on providing a -c parameter. Perhaps for 1.2 ?;;;","25/Feb/18 2:42 AM;latitiah;It's possible this is due to a workaround change added to get around the FAB-8453 issue. I'll reinstate that code then test this again.;;;","27/Feb/18 12:13 AM;mastersingh24;I can't reproduce this;;;","27/Feb/18 1:06 AM;denyeart;Ok, we'll likely defer this to 1.2 and improve the validation and error message at that time.

[~latitiah] any final comments before we defer?;;;","27/Feb/18 5:31 AM;latitiah;Once the fix for FAB-8453 was merged and the workaround removed, I was able to execute 'peer channel fetch config' successfully. It does seem that this defect was seen due to MSPID inconsistencies. 

I'm fine with any changes made under this issue being deferred to a future release.;;;","27/Feb/18 5:38 AM;denyeart;Ok, will assess improved validation and error message in 1.2.;;;","05/May/18 1:28 AM;ChristopherFerris;This is no longer valid, closing;;;",,,,,,,,
Workaround: Use the index 0 when retrieving config block for channel,FAB-8493,27979,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,24/Feb/18 9:40 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Mar/18 2:49 AM,,,,v1.2.0,,,fabric-quality,,,,0,,,,,,"A change was recently made that breaks the {code}peer channel fetch{code} command to have some issues when using the ""config"" parameter.

This is a workaround such that we can continue with fabric-test testing in CI.
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyqf:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca sample does not allow modification of affiliations,FAB-8496,27982,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,rennman,rennman,24/Feb/18 10:14 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,08/Mar/18 8:01 AM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"Updating the orgs for the fabric-ca sample does not have an effect.
If I modify the {{env.sh}} script:
{code:none}
# Names of the orderer organizations
ORDERER_ORGS=""eu""

# Names of the peer organizations
PEER_ORGS=""fr ge it sp""
{code}
The register attempts fail with a message like:
{{  Failed to get Affiliation: sql: no rows in result set}}

This is because the server init/start sequence relies on all of the config defaults, so only
 the default affiliations are available. It requires a little massaging of the start-up scripts:

a) in {{makeDocker.sh}}:
{code:none}
writeRootCA()
...
environment:
- FABRIC_ORGS=""$ORGS""
{code}
and
{code:none}
writeIntermediateCA()
...
environment:
- FABRIC_ORGS=""$ORGS""{code}
b) in both {{./scripts/start-root-ca.sh}} and {{./scripts/start-intermediate-ca.sh}}:
{code:none}
# Add custom orgs
for o in $FABRIC_ORGS; do
   aff=$aff""\n   $o: []""
done
aff=""${aff#\\n   }""
sed -i ""/affiliations:/a \\   $aff"" \
   $FABRIC_CA_SERVER_HOME/fabric-ca-server-config.yaml
{code}
Now the start.sh tests pass.",,denyeart,luomin,rennman,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyqv:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,luomin,rennman,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Feb/18 7:40 PM;luomin;https://gerrit.hyperledger.org/r/#/c/18399/;;;","26/Feb/18 8:26 PM;denyeart;[~smithbk] Do you agree with this change for 1.1 release?;;;","26/Feb/18 11:47 PM;smithbk;I changed this to an improvement for 1.2.  I don't think it is needed for 1.1;;;","08/Mar/18 2:11 AM;denyeart;[~smithbk] Looking closer at this one... it is only samples repository and looks low risk, so I think it would be ok for 1.1 samples.  What do you think?

[~rennman] wants it...;;;",,,,,,,,,,,,,,,,,,,
Document the images that are required for fabric ca sample,FAB-8497,27983,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,skarim,rennman,rennman,24/Feb/18 10:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 1:13 AM,,,,v1.1.1,,,fabric-installers,fabric-samples,,,0,,,,,,"In {{scripts/boostrap.sh}}, not all of the required images are downloaded to run the fabric-ca samples – namely
{code:java}
hyperledger/fabric-ca-tools
hyperledger/fabric-ca-peer
hyperledger/fabric-ca-orderer
{code}

need to add a loop with something like [ {{"""" ""-tools"" ""-orderer"" ""-peer""}} ] to dockerCaPull() :
{code:java}
@@ -39,8 +39,10 @@ dockerCaPull() {
       local CA_TAG=$1
       echo ""==> FABRIC CA IMAGE""
       echo
-      docker pull hyperledger/fabric-ca:$CA_TAG
-      docker tag hyperledger/fabric-ca:$CA_TAG hyperledger/fabric-ca
+      for image in """" ""-tools"" ""-orderer"" ""-peer""; do
+         docker pull hyperledger/fabric-ca${image}:$CA_TAG
+         docker tag hyperledger/fabric-ca${image}:$CA_TAG hyperledger/fabric-ca${image}
+      done
 }
{code}
 

 ",,ChristopherFerris,denyeart,mastersingh24,rennman,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyr3:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,rennman,skarim,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Feb/18 8:23 PM;denyeart;[~mastersingh24] [~ChristopherFerris] [~rameshthoomu] [~smithbk] Is this something you think we need to add for 1.1 release?;;;","26/Feb/18 9:56 PM;ChristopherFerris;I take it we have tutorial(s) that now use the CA? If so, makes sense to add.;;;","27/Feb/18 12:15 AM;mastersingh24;I really don't think we should be publishing these images at all .... but that's a different story.
We should update the fabric-ca sample to include instructions on downloading these images.
I don't think we need to confuse people by downloading even more images;;;","27/Feb/18 1:10 AM;denyeart;Ok, I've changed the assignment since the resolution for this one has changed.

[~luomin]  [~aambati]  [~skarim]  [~rennman] Could one of you take this work item to update the fabric ca sample instructions?;;;","27/Feb/18 6:26 AM;skarim;https://gerrit.hyperledger.org/r/#/c/18443/;;;",,,,,,,,,,,,,,,,,,
Improve peer channel command output,FAB-8498,27985,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,odowdaibm,odowdaibm,odowdaibm,24/Feb/18 6:05 PM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,Future,,,fabric-peer,,,,0,,,,,,"A placeholder feature to improve command output.

 

The peer channel command (and indeed all subcommands), should
 # Provide a clear indication of whether the command has succeeded or failed
 # Have some level of helpful INFO messages that return helpful information on command progress. 

I'm happy to expand here on what these need to be, but for now, I've just opened this JIRA as a placeholder.",,ChristopherFerris,mastersingh24,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyrj:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,mastersingh24,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/18 6:07 PM;odowdaibm;Just a heads up for [~ChristopherFerris] [~mastersingh24] that I will document a little more clearer what would improve command output.  I've created this placeholder for now.  If there's someone I should work with, please let me know, and thanks!;;;","25/Feb/18 5:18 PM;odowdaibm;Note to self that need to go through all 1.1 commands to generate list of suggestions, as 1.1 addressed lots of 1.0 observations.;;;","26/Feb/18 1:25 AM;ChristopherFerris;**my preference would be to adopt the generated + usage approach documented in FAB-8459;;;","30/Mar/18 7:51 AM;ChristopherFerris;This might be done in conjunction with the refactor of the peer node. Agree that the commands could be more helpful, including the help text.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,
Event Hub Client Integration Tests,FAB-8499,27986,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,bstasyszyn,bstasyszyn,bstasyszyn,24/Feb/18 10:59 PM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:06 PM,,,,,,,,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyrr:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event Client Integration Tests,FAB-8500,27987,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,24/Feb/18 10:59 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Mar/18 6:42 AM,,,,,,,,,,,0,,,,,,Add integration tests for both Deliver event client and Event Hub event client.,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyrz:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"byfn.sh 1.1 script failure when previous image v1.1.0-alpha was already on the system, NodeJS installed but GO lang not installed",FAB-8502,27989,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,nileshdeotale,nileshdeotale,25/Feb/18 2:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 10:32 PM,,,,v1.1.0,,,fabric-samples,,,,0,fabric-samples,quality,,,,"Followed byfn documentation step by step. Had all pre-reqs met except that I had previous images of v1.1.0-alpha and I did not have GO language installed (missed the step to install) executed byfn.sh script but it failed with errors (for NodeJS as well as GO) that were not helpful to indicate root cause of the failure.  Please see detailed log attached.

Proposed solution:
 * Check if pre-reqs are met. If not, abort the script with errors stating which pre-reqs are missing.
 * It would be helpful to have a recovery/cleanup/nuke option to cleanup images (if old images exist on the system) and install compatible images automatically prior to building first network.
 * It will be helpful if script is backwards compatible (if it's not already).

 

 

 ",,bmos299,denyeart,nileshdeotale,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8539,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/18 2:46 AM;nileshdeotale;byfn.sh-failure-log.rtf;https://jira.hyperledger.org/secure/attachment/14681/byfn.sh-failure-log.rtf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyysf:",,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,nileshdeotale,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 2:01 AM;scottz;This is the same user scenarioas 8539. The user has previously downloaded images that do not match the version for which this particular byfn script was intended. The error in 8539 is different than the error seen here because the images in 8539 were more backward (using 1.0.x versus v1.1-alpha in this 8502).

We need to figure out a way to prevent users from shooting themselves in foot.;;;","27/Feb/18 4:08 AM;bmos299;This problem has already been hit with this bug and FAB-8539.  I think FAB-8539 we will see over and over as it is the orderer that will have the first problem in the case of back-leveled docker images.  Here are a few thoughts, could we consider, 
a) make the orderer panic have more explicit information like: 'orderer running version x.x and trying to add yyy (capabilities v1.1)
b) in the script cut more messages about what version of fabric the script is running
c) provide a nuke option as a byfn parm that removes the fabric* images and reloads new ones.

Thanks,
Barry;;;","27/Feb/18 10:32 PM;denyeart;Let's use FAB-8539 to track this one.  It has a CR that does:
 * Check if pre-reqs are met. If not, abort the script with errors stating which pre-reqs are missing.

I will close this so that we can put all comments in FAB-8539.;;;",,,,,,,,,,,,,,,,,,,,
Prevent CLI container from exiting,FAB-8503,27990,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Feb/18 2:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 1:19 AM,,,,v1.1.1,,,fabric-samples,,,,0,,,,,,"For some reason, our samples start a CLI container, then exec commands against it.  Then our tutorials do the same.  However, the CLI container is started with a 1000 second sleep, then exits.  Since we want it to stick around forever, it's better to simply run bash, and leave it be.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyysn:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/18 5:55 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18341/;;;",,,,,,,,,,,,,,,,,,,,,,
Include Nodejs installation steps in  hyperledger-fabric docs in  prereqs section,FAB-8504,27991,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,nileshdeotale,nileshdeotale,25/Feb/18 2:55 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,15/May/18 7:10 AM,,,,v1.2.0,,,fabric-docs,,,,0,fabric-doc,quality,,,,"1. Would be good to include Nodejs installation steps (or atleast download link with instructions to install Nodejs) in the prereqs.html in hyperledger-fabric docs.

2. Mention compatible version of Nodejs that is required.

[http://hyperledger-fabric.readthedocs.io/en/master/prereqs.html|https://nodejs.org/en/download/]

[https://nodejs.org/en/download/]

 3. Add steps to install GO language and set GOPATH env variable

[ |https://nodejs.org/en/download/]",,nileshdeotale,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwu1z:",,,,Unset,,,,,,Unset,,,,,,,,,,,nileshdeotale,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/18 7:10 AM;scottz;This task has been completed already. Closing this issue.

http://hyperledger-fabric.readthedocs.io/en/master/prereqs.html;;;",,,,,,,,,,,,,,,,,,,,,,
[Interoperability test ] multiple release test using Node.js SDK,FAB-8505,27992,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,25/Feb/18 3:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,20/Jun/18 4:32 AM,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,"||Integration
 test suite||Node.js SDK||Fabric||Fabric-CA|| Failed||
|1.0|1.0|1.1|1.0|Refer [#Case 1] below|
|1.0|1.0|1.0|1.1|Refer Case 2 below|
|1.0|1.0|1.1|1.1|Refer Case 3 below|
|1.0|1.1|1.1|1.1|Refer Case 4 below|

 

Pre-requisite:

1. You have pulled with TAG *x86_64-1.0.3*

2. and Generate the latest images on master branch of fabric repo

 
----
[#Case 1]
{code:java}
app/tests at 1.0 , SDK at 1.0 and Fabric-CA at 1.0. However Fabric is at 1.1

Step 1 : Clone the repo
git clone https://github.com/hyperledger/fabric-sdk-node
cd fabric-sdk-node

Step 2: Install the node modules
npm install

Step 3: There needs a tweaking on the docker-compose.yaml
(To automate this we might need to provide 3 environment variables in future ?
ex: Fabric [peer/orderer] , Fabric-CA and 3rd party docker-images [couchdb])

For now, hardcode the DOCKER_IMG_TAG with "":latest"" on peer and orderer image section
and couchdb with `uname -m`""-0.4.6""

Step4:
As part of this compatibility tests we wouldn't want to test the unit tests
Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js
https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95

Step5:
Execute the following command and make sure all the tests are passing now
 ""gulp test""
{code}
----
Case 2
{code:java}
app/tests at 1.0 , SDK at 1.0 and Fabric at 1.0 However Fabric-CA is at 1.1

 Step 1 : Clone the repo
 git clone https://github.com/hyperledger/fabric-sdk-node
 cd fabric-sdk-node

 Step 2: Install the node modules
 npm install

 Step 3: There needs a tweaking on the docker-compose.yaml
 (To automate this we might need to provide 3 environment variables in future ?
 ex: Fabric [peer/orderer] , Fabric-CA and 3rd party docker-images [couchdb])

 For now, hardcode the DOCKER_IMG_TAG with "":latest"" on CA section

 Step4:
 As part of this compatibility tests we wouldn't want to test the unit tests
 Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js
 https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95

 Step5:
 Execute the following command and make sure all the tests are passing now
  ""gulp test""

{code}
----
Case 3
{code:java}
app/tests at 1.0 , SDK at 1.0 and Fabric at 1.0 However Fabric-CA is at 1.1

  Step 1 : Clone the repo
  git clone https://github.com/hyperledger/fabric-sdk-node
  cd fabric-sdk-node

  Step 2: Install the node modules
  npm install

  Step 3: There needs a tweaking on the docker-compose.yaml
  (To automate this we might need to provide 3 environment variables in future ?
  ex: Fabric [peer/orderer] , Fabric-CA and 3rd party docker-images [couchdb])

  For now, hardcode all DOCKER_IMG_TAG with "":latest"" all images and ""x86_64-0.4.6"" for couchdb

  Step4:
  As part of this compatibility tests we wouldn't want to test the unit tests
  Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js
  https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95

  Step5:
  Execute the following command and make sure all the tests are passing now
   ""gulp test""
{code}
----
Case 4:
{code:java}
app/tests at 1.0 , SDK at 1.0 and Fabric at 1.0 However Fabric-CA is at 1.1

     Step 1 : Clone the repo
     git clone -b master https://github.com/hyperledger/fabric-sdk-node
     cd fabric-sdk-node

     Step 2: Install the node modules
     npm install

     Step 3: remove the test folder and copy from fabric-sdk-node release branch
     rm -rf test
     cp -r <fabric-sdk-node release branch>/tests tests

     Step 4: There needs a tweaking on the docker-compose.yaml
     (To automate this we might need to provide 3 environment variables in future ?
     ex: Fabric [peer/orderer] , Fabric-CA and 3rd party docker-images [couchdb])

     For now, hardcode all DOCKER_IMG_TAG with "":latest"" all images and ""x86_64-0.4.6"" for couchdb

     Step 5:
     As part of this compatibility tests we wouldn't want to test the unit tests
     Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js
     https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95

     Step 6:
     Execute the following command and make sure all the tests are passing now
      ""gulp test""
{code}",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyysv:",,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to from logs show what capablities are enabled.,FAB-8506,27993,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,rickr,rickr,25/Feb/18 3:47 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,25/Feb/18 8:38 AM,v1.1.0,,,v1.1.1,,,fabric-orderer,,,,0,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8508,,,,,FAB-8508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyt3:",,,,Unset,,,,,,Unset,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric-samples and fabric/examples/e2e_cli are out of sync,FAB-8507,27994,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,jyellick,jyellick,25/Feb/18 3:48 AM,19/Nov/18 1:33 PM,28/Oct/23 3:02 AM,19/Nov/18 1:33 PM,v1.1.0,,,v1.4.0,,,fabric-samples,,,,0,,,,,,"The fabric-sample first-network tutorial was originally based off of the e2e_cli example.  Over time, the two have diverged.  The e2e now only supports Kafka, the samples only support solo.  The e2e runs the test script directly via the compose file, the samples do it via a docker exec in byfn.sh.

The list goes on.

We should really synchronize these two, so that we don't have to do dual maintenance.",,ChristopherFerris,denyeart,jyellick,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyytb:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,jyellick,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/18 7:33 AM;ChristopherFerris;I think we should eliminate e2e and enable the CI processes to use fabric-samples/first-network. The purpose of e2e is to provide a smoke test for fabric repo.;;;","07/May/18 11:14 PM;lehors;As someone who helped improve the samples version I agree with Chris. Trying to keep the two in sync is going to be an ongoing challenge.

Of course one has to wonder whether we shouldn't remove all examples from fabric and have those only in fabric-samples. I think we should. As things stand, it's as if we started moving in that direction and never completed the move.;;;","07/May/18 11:16 PM;lehors;To make this easier I would volunteer to add kafka support to the first network tutorial so that it can fully replace e2e.;;;","14/May/18 6:15 AM;ChristopherFerris;[~lehors] +1;;;","22/May/18 3:43 AM;kchristidis;[~lehors]: Can you take this over? And do you have the cycles to do this on time for the 1.2 cut? (We got until June 10 at the very very latest.) Or we defer to 1.3?;;;","22/May/18 5:51 AM;lehors;Yeah, not sure I can do that in time for 1.2 but happy to take it over.;;;","13/Jul/18 9:04 PM;lehors;So, I added support for Kafka to byfn as a first step but in the meantime a test for private data and idemix was added to e2e and I don't think we really want to have that in byfn. So, I have to admit not to be sure about the direction we should take here.

I could upgrade e2e to be closer to byfn but this still would not leave us with a single consolidated version.

e2e also goes into compiling the binaries if it can find it. That's also something I don't think we want in byfn. Does the CI depend on that feature?

And then we also have fabric-samples/basic-network which is used by fabcar... It would seem desirable to leverage byfn for this as well but basic-network sets up a network with fabric-ca, which isn't used in byfn. Do we care? We can either add fabric-ca to byfn - as an option - or have fabcar not use it. Given that most people want fabric-ca in their network eventually I'm inclined to add support to it.

Anyone with opinions on any of this? [~ChristopherFerris] ?

 ;;;","04/Aug/18 3:58 AM;lehors;See [https://chat.hyperledger.org/channel/fabric-scrum?msg=DkYaysZy3bjYGmcaj] for some related discussion.;;;","03/Sep/18 10:21 PM;lehors;I'm still struggling to get a clear idea on what the end goal might look like so, unless someone else knows I suggest this be postponed further.;;;","19/Nov/18 1:33 PM;denyeart;examples/e2e_cli was removed during v1.4 development.;;;",,,,,,,,,,,,,
Need to from logs show what capablities are enabled.,FAB-8508,27995,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,25/Feb/18 3:48 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,25/Feb/18 3:51 AM,v1.1.0,,,v1.1.1,,,fabric-peer,,,,0,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8506,FAB-8506,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyytj:",,,,Unset,,,,,,Unset,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/18 3:51 AM;rickr;Was informed that will fix this too;;;",,,,,,,,,,,,,,,,,,,,,,
upgrade go version to 1.9.2 in fabric-sdk-go,FAB-8509,27996,27966,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,25/Feb/18 5:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 3:17 AM,,,,v1.1.1,,,fabric-build,,,,0,,,,,,upgrade go version to 1.9.2 in fabric-sdk-go ci.properties,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyytr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
change byfn.sh generate to byfn.sh -m generate in https://hyperledger-fabric.readthedocs.io/en/master/build_network.html,FAB-8510,27997,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,nileshdeotale,nileshdeotale,25/Feb/18 5:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 4:59 AM,,,,v1.1.0,,,fabric-docs,,,,0,fabric-doc,quality,,,,"As per documentation ""./byfn.sh generate"" (does not work.. returns command usage options) should be run. I believe f,or it to work, -m option is required  ""./byfn.sh -m generate"" .

Please correct documentation in https://hyperledger-fabric.readthedocs.io/en/master/build_network.html

 ",,ChristopherFerris,denyeart,lehors,mastersingh24,muralisr,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyytz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,lehors,mastersingh24,muralisr,nileshdeotale,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/18 5:56 AM;mastersingh24;[~nileshdeotale] I believe this works - but you need to clone the master branch of fabric-samples.  By default, git clone clones the release branch.

Unless we plan to deprecate the `-m` option, maybe we should put it back in the docs?
In any case, we'll need to make sure that we are cloning the right version of fabric-samples;;;","26/Feb/18 1:21 AM;denyeart;I confirmed release branch fabric-samples requires -m option.  Master branch works either with or without the -m.  I believe -m was removed from the docs so that we could reduce the baggage going forward.

I assume we will have a release-1.1.x branch for both fabric and fabric-samples, and that it will become the default.  In that case I think we're good with how the docs are now (no -m option needed).;;;","26/Feb/18 9:29 PM;mastersingh24;Right.  And we'll want to make the 1.1.x branch the default for all repos once we release;;;","26/Feb/18 9:54 PM;ChristopherFerris;This is nuts... apparently, there are multiple patches that are changing how we handle the mode. Needs to STOP. The script was originally written with a mode option that takes an argument. Please just align around that.;;;","26/Feb/18 11:22 PM;denyeart;Ok, the fabric-sample master branch works either with or without the -m. 

[~muralisr] Could you add the -m instruction back to the byfn tutorial, so that we have consistency across releases (I believe you removed it?);;;","27/Feb/18 12:02 AM;muralisr;[~denyeart] I believe it was [~lehors] who made this change as part of the work to refactor the sample so the CLI container can be used correctly.

However, should we do this ?  The ""-m"" is not needed now...its just left there if someone runs old scripts. At some point we do have to remove the '-m' from docs. Why not now ? 

Thoughts/correction [~lehors] ?;;;","27/Feb/18 12:30 AM;mastersingh24;Let's put the -m back in.  People who know about the shortcut can use it;;;","27/Feb/18 12:31 AM;muralisr;OK. will take care of it.;;;","27/Feb/18 12:49 AM;muralisr;https://gerrit.hyperledger.org/r/#/c/18419/;;;","27/Feb/18 1:02 AM;denyeart;Thanks [~muralisr] .  I've +2ed. Sorry if I tagged you incorrectly, somehow I thought you were involved in those updates.  All's well that ends well.;;;","27/Feb/18 1:05 AM;muralisr;[~denyeart] no worries. I did review the CR, probably that was it.;;;","27/Feb/18 1:43 AM;lehors;That change did come from me indeed. There is just no need for the -m flag. I don't see why the 1.1 doc would refer to that flag anywhere. Once we release 1.1 everything will be aligned.;;;","27/Feb/18 1:57 AM;lehors;By the way, we're bringing a lot more changes to byfn, like -p and upgrade. Are we not going to have these in the doc because they won't work with older version of the script? I think not. So, let's keep things in perspective here.

People do need to look at the documentation that matches the version they use. That's a fact. Maybe we should work on making that clearer in the doc, with a banner or something so that people would not get confused. That would seem a better solution than singling out one particular change.;;;","27/Feb/18 2:20 AM;denyeart;Appreciate the comments Arnaud.  I too was on the fence on this one, but ultimately confusion is one of our largest enemies and therefore I'm in favor of keeping things consistent across releases (like use of -m flag), unless there is compelling reason to change.  Certainly we can add new optional flags where it is important, but we'd like to keep the core sample functioning consistent, as this is the on ramp for many users for each release.;;;",,,,,,,,,
Integrate EYFN test in fabric-samples.,FAB-8511,27998,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,25/Feb/18 6:00 AM,19/Mar/19 8:12 PM,28/Oct/23 3:02 AM,27/Feb/18 7:54 AM,,,,v1.1.0,,,fabric-ci,,,,0,ci-failure,,,,,Include the EYFN tests in fabric in fabric-byfn-verify-x86_64 and fabric-byfn-merge-x86_64.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyu7:",,,,Unset,,,,,,Unset,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 7:56 AM;sambhavdutt;This patch has been Merged. The BYFN & EYFN are executing as expected.;;;",,,,,,,,,,,,,,,,,,,,,,
Rename FabricCAClient to IdentityManager,FAB-8512,27999,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,25/Feb/18 6:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 12:15 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,"This is a part of bigger refactoring. IdentityManager uses Fabric CA client library to talk to the CAs. The plan is to move IdentityManager from fab/ca into fab, and merge it with CredentialManager, as the two services are very closely related.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyuf:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Move IdentityManager and CredentialManager to pkg/fab/identitymgr,FAB-8513,28000,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,25/Feb/18 9:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,26/Feb/18 12:14 PM,,,,,,,,,,,0,,,,,,"This is a part of a bigger refactoring. The plan is to merge IdentityManager with CredentialManager, as the two services are very closely related.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyun:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
cryptogen generated NodeOUs should match fabric-ca,FAB-8516,28003,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,25/Feb/18 7:44 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,15/Mar/18 5:53 AM,,,,v1.1.1,,,fabric-tools,,,,0,,,,,,"cryptogen has the option to generate NodeOUs and currently uses ""FabricPeer"" and ""FabricClient"" for peers and clients respectively.

fabric-ca supports NodeOUs by specifying the ""type"" of user when registering but uses ""peer"" and ""client"".

The fact that they do not match causes issues when trying to bootstrap a network with cryptogen with NodeOUs enabled and then registering and enrolling users with fabric-ca.

The logical thing would be for cryptogen to simply use the same convention as fabric-ca.",,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyvb:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/18 7:53 PM;mastersingh24;https://gerrit.hyperledger.org/r/18371;;;","25/Feb/18 9:05 PM;rickr;The SDK in the past has used ""user"" as the default role.  Not ""peer"" or ""client"".  Should it not match that ?
[~smithbk] ^^;;;",,,,,,,,,,,,,,,,,,,,,
"Allow command ""peer channel fetch"" to be used against a peer to fetch a block",FAB-8517,28004,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,denyeart,denyeart,25/Feb/18 9:36 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,27/May/18 9:57 PM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Command *peer channel fetch* is used against an orderer deliver service to fetch a block.

If you forget to add -o to connect to an orderer, you get error:

*Error: ordering service endpoint  is not valid or missing*

However, starting in 1.1 the peer also supports the deliver service, and therefore this command can be used against a peer now.  The command should be improved to go against an orderer or a peer.",,C0rWin,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx06v:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","22/May/18 9:27 PM;wlahti;I picked up this task to facilitate integration testing of the block event ACL for FAB-9873.

[https://gerrit.hyperledger.org/r/c/22087/];;;",,,,,,,,,,,,,,,,,,,,,
Not all images in the compose file use the IMAGE_TAG,FAB-8518,28005,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Feb/18 10:42 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,25/Feb/18 11:12 PM,v1.0.6,v1.1.0,,v1.0.6,v1.1.0,,fabric-samples,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyvj:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Introduce local collection protos,FAB-8520,28007,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,26/Feb/18 5:15 AM,23/Jan/20 7:27 AM,28/Oct/23 3:02 AM,23/Jan/20 7:27 AM,,,,Future,,,,,,,0,stale-item,,,,,Local collections require a protobuf representation so that they can be stored on the ledger as is the case for normal collections.,,ales,geahaad,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7593,,,,,,,,,"1|hzwsev:",,,,,,,,,,,,,,,,,,,,,ales,geahaad,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:27 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Support for local collections in collection store,FAB-8521,28008,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,26/Feb/18 5:18 AM,23/Jan/20 7:28 AM,28/Oct/23 3:02 AM,23/Jan/20 7:28 AM,,,,Future,,,,,,,1,stale-item,,,,,"Fabric has a collection store interface that returns collection configuration given a collection name. The collection configuration - among other fields - contains a dissemination policy, that is, a policy to define which orgs have access to this collection’s private data. In the case of local collections, this policy is different at each peer. In particular, given a peer, the policy requires preimage data to be disseminated to other peers of the same org. This task tracks the work required to dynamically create collection configuration for local collections.",,ales,sykesm,troyronda,ycarmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7593,,,,,,,,,"1|hzwsxz:",,,,,,,,,,,,,,,,,,,,,ales,sykesm,troyronda,ycarmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:28 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Support for local collections in CLI,FAB-8522,28009,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,26/Feb/18 5:20 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,Future,,,,,,,0,stale-item,,,,,"When a chaincode is created, collection configuration may be specified through the peer CLI. This task tracks the work required to extend the parser of collection configuration data on the CLI side to also support local collections.",,ales,geahaad,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7593,,,,,,,,,"1|hzwsy7:",,,,,,,,,,,,,,,,,,,,,ales,geahaad,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
[upgrade] Orderers and peers containers are exiting when restarted the containers after replacing the v1.0.x binaries to v1.1 binaries,FAB-8524,28011,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,suryalnvs,suryalnvs,26/Feb/18 9:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 5:38 AM,v1.1.0,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"After upgrading the binaries of peers and orderer from v1.0.x version to v1.1 in v1.0.x containers, containers are getting exited with following error:

For orderer:
{code:java}
docker logs -f orderer.example.com
orderer: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
orderer: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
{code}
For peers:
{code:java}
docker logs -f peer0.org1.example.com
peer: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
peer: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
{code}
*Steps:*
 # Launch the network with v1.0.x using the following commands from byfn
{code:java}
cd <path to fabric-samples/first-network>
git checkout release
./byfn.sh -m up -i 1.0.x{code}

 # Have the binaries built on the latest code
 # Stop the orderer and peers using the following command
{code:java}
docker stop orderer.example.com peer0.org1.example.com peer1.org1.example.com peer0.org2.example.com peer1.org2.example.com
{code}

 # Copy the latest orderer binary to orderer container using the following command
{code:java}
docker cp <path/to/fabric>/build/bin/orderer orderer.example.com:/usr/local/bin/orderer
{code}

 # Similarly copy the peer binaries to peers using the following command
{code:java}
docker cp <path/to/fabric>/build/bin/peer <peer container name>:/usr/local/bin/peer
{code}

 # Restart the containers using the following command
{code:java}
docker start orderer.example.com peer0.org1.example.com peer1.org1.example.com peer0.org2.example.com peer1.org2.example.com
{code}

 # Look for the containers using the following command
{code:java}
docker ps -a{code}

 # Look for the orderer logs using the following command
{code:java}
docker logs orderer.example.com
{code}

Orderer logs should show the following errors
{code:java}
docker logs -f orderer.example.com
orderer: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
orderer: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
{code}
Peer logs should show the similar logs as well

*Expected:* Orderer and peers should start normally",,ChristopherFerris,denyeart,jyellick,mastersingh24,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyw7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,jyellick,mastersingh24,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/18 12:10 PM;scottz;Surya got the test to pass. We will have to update the upgrade doc prereqs/steps. Too busy to do it tonight; he still has 3 more big tests to run, but he captured his notes for updating the doc later. (Maybe he can give them to someone else to update the doc tomorrow.);;;","27/Feb/18 5:20 AM;denyeart;[~scottz] [~suryalnvs] Could somebody update the upgrade doc? Or at least add comments at the right place? https://gerrit.hyperledger.org/r/#/c/18351/;;;","27/Feb/18 7:05 AM;scottz;Test steps for FAB-7202: replacing peer binaries (not images) to do the upgrade:
 # stop 1.0.x peer
 # replace peer binary in /usr/local/bin with v1.1 binary from outside container
 # restart docker container

Problem: the peer exits. Thus we created this bug FAB-8524.

Initially we were thinking it is a doc bug. Now we'd like to explore whether we could do something to allow the user to do this without the additional steps (1A and 1B, documented below) and without adding such details to the upgrade documentation.

To get the test to pass, our workaround ""solution"" was to log into each peer container and update and install the library ""libltdl-dev"". In other words, insert two steps between 1 and 2:
 * 1.A. launch each peer container first only in bash
 * 1.B. log into each peer container and update and install the library ""libltdl-dev""

The ideal solution would be something like ""adding the library to the peer binary"" like we could add artifacts to the images. In lieu of that, hmmm, maybe this is a doc bug afterall and we could document all these manual steps.

Or we just drop support for upgrading binaries directly, instead of images.

Thoughts?;;;","27/Feb/18 12:56 PM;denyeart;The test scenario here was awkward and not realistic... real deployments would not upgrade binaries within a docker image, so the extra pain you faced around launching containers first only in bash etc, in order to upgrade binaries in a container, I don't see as a real problem to solve.

If a deployment was using native binaries, they would use native binaries exclusively.  They would still hit the problem mentioned here around the libraries.  But we have never documented how to get a new system working using the binaries anyways, let along an upgrade.

I'm thinking what we should do is back off some of the native binary language in the upgrade doc so that we don't give the false impression that we document native binary install/upgrade instructions.;;;","27/Feb/18 1:03 PM;denyeart;Since we don't document/support this scenario, I will go ahead to change to Medium, but leave it open for others to comment.;;;","27/Feb/18 1:15 PM;jyellick;+1 for those doing native deployments, this is not at all the sort of pain they would face.;;;","27/Feb/18 4:58 PM;mastersingh24;They should not hit the problem mentioned above at all.
We ship the binaries produced by the `make release` command.
This will build static binaries with the nopkcs11 tag.

So the real scenario here is to run
`make release` with release branch (or pull down the binaries via the bootstrap script)
then
`make release` with master and replace the binaries created from v1.0.x;;;","27/Feb/18 9:31 PM;ChristopherFerris;the use case is completely unrealistic. The test should be abandoned or redesigned such that the image is replaced, not the binaries within.;;;","28/Feb/18 5:38 AM;denyeart;Discussed with testers, removing test case, closing defect.;;;",,,,,,,,,,,,,,
Embed CredentialManager into IdentityManager,FAB-8526,28013,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,26/Feb/18 12:19 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 2:55 PM,,,,,,,,,,,0,,,,,,"IdentityManager now embeds the Credentialmanager interface. Behind the scene, the CredentialManager implementation is merged into implementation of the IdentityManager.

This is a part of a bigger refactoring. CredentialManager interface will be dropped in favour of IdentityManager.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyywn:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Make peer endorsement logic pluggable,FAB-8530,28019,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,mastersingh24,mastersingh24,26/Feb/18 9:15 PM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,17/May/18 4:37 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Fabric currently has the concept of ESCC and theoretically one can associate different ESCCs with chaincode on a per channel basis.

In practice, this is not the case as the endorsement ""flow"" is actually ""hard-wired"" and there is really no definition / interface defined for implementing ""custom"" ESCC.

Ideally we should be able to easily add built-in ESCCs to Fabric and also allow ESCC to be built as plugins.",,C0rWin,CarlitoIBM,luomin,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9860,,,FAB-8533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8729,,,,,,,,,"1|hzwsvr:",,,,Unset,,May2018 - NextGen Endorsement,,,,Unset,,,,,,,,,,,C0rWin,CarlitoIBM,luomin,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document architecture and design,FAB-8531,28020,28019,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,mastersingh24,mastersingh24,26/Feb/18 9:18 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 5:06 PM,,,,v1.2.0,,,,,,,0,,,,,,Need to document the overall design and architecture for supporting pluggable endorsement logic,,indirajith,mastersingh24,MichaelWang,smartheye,Vishal3152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwt13:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,indirajith,mastersingh24,MichaelWang,smartheye,Vishal3152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move existing ESCC to new architecture,FAB-8532,28021,28019,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,yacovm,mastersingh24,mastersingh24,26/Feb/18 9:20 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/May/18 2:42 PM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,Refactor / re-implement existing one signature endorsement flow using the architecture and design from FAB-8531,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwt1b:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/May/18 6:51 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/21085/;;;",,,,,,,,,,,,,,,,,,,,,,
Make peer validation logic pluggable,FAB-8533,28022,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,mastersingh24,mastersingh24,26/Feb/18 9:21 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,18/May/18 12:19 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Fabric currently has the concept of VSCC and theoretically one can associate different VSCCs with chaincode on a per channel basis.

In practice, this is not the case as the validation ""flow"" is actually ""hard-wired"" and there is really no definition / interface defined for implementing ""custom"" VSCC.

Ideally we should be able to easily add built-in VSCCs to Fabric and also allow VSCC to be built as plugins.",,C0rWin,luomin,mastersingh24,SjirNijssen,smartheye,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8530,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8729,,,,,,,,,"1|hzwsvz:",,,,Unset,,May2018 - NextGen Endorsement,,,,Unset,,,,,,,,,,,C0rWin,luomin,mastersingh24,SjirNijssen,smartheye,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document architecture and design,FAB-8534,28023,28022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,mastersingh24,mastersingh24,26/Feb/18 9:21 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/May/18 5:07 PM,,,,v1.2.0,,,,,,,0,,,,,,Need to document the overall design and architecture for supporting pluggable endorsement logic,,mastersingh24,smartheye,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyxr:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,mastersingh24,smartheye,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/May/18 5:07 PM;yacovm;done in FAB-8531;;;",,,,,,,,,,,,,,,,,,,,,,
Move existing VSCC to new architecture,FAB-8535,28024,28022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,yacovm,mastersingh24,mastersingh24,26/Feb/18 9:21 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/May/18 5:24 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,Refactor / re-implement existing one signature endorsement flow using the architecture and design from FAB-8531,,luomin,mastersingh24,MichaelWang,smartheye,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8534,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyxz:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,luomin,mastersingh24,MichaelWang,smartheye,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/May/18 4:22 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/21085/;;;",,,,,,,,,,,,,,,,,,,,,,
Hpyperledger-Fabric :: composer-sample-applications ,FAB-8536,28026,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,admin,d8bhatta,d8bhatta,26/Feb/18 10:29 PM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,,,,,,,,,,,0,,,,,,"Hello,

I am following [https://github.com/hyperledger/composer-sample-applications/blob/master/packages/digitalproperty-app/README.md] to try composer sample. I have run fabric but when I run the command *{{$ npm run deployNetwork}}*  {{Which is at the end of page, I get following output:}}

 npm run deployNetwork

 

> digitalproperty-app@0.0.6 deployNetwork /Users/deepak/fabric-tools/composer-sample-applications/packages/digitalproperty-app

> composer archive create --sourceName digitalproperty-network --sourceType module --archiveFile digitalPropertyNetwork.bna && composer network deploy --archiveFile ./digitalPropertyNetwork.bna --card PeerAdmin@hlfv1 -A admin -S adminpw -l INFO && composer card import --file ./admin@digitalproperty-network.card && composer network list --card admin@digitalproperty-network

 

*Creating Business Network Archive*

 

 

*Looking for package.json of Business Network Definition*

 Input directory: /Users/deepak/fabric-tools/composer-sample-applications/packages/digitalproperty-app/node_modules/digitalproperty-network

 

*Found:*

 Description: Digital Property Network

 Name: digitalproperty-network

 Identifier: digitalproperty-network@0.1.13

 

*Written Business Network Definition Archive file to* 

 Output file: digitalPropertyNetwork.bna

 

Command succeeded

 

*Deploying business network from archive:* ./digitalPropertyNetwork.bna

*Business network definition:*

 Identifier: digitalproperty-network

 Description: Digital Property Network

 

✖ Installing runtime for business network undefined. This may take a minute...

Error: No connection type provided, probably because the connection profile has no 'x-type' property defined.

Command failed

 

npm ERR! code ELIFECYCLE

npm ERR! errno 1

npm ERR! digitalproperty-app@0.0.6 deployNetwork: `composer archive create --sourceName digitalproperty-network --sourceType module --archiveFile digitalPropertyNetwork.bna && composer network deploy --archiveFile ./digitalPropertyNetwork.bna --card PeerAdmin@hlfv1 -A admin -S adminpw -l INFO && composer card import --file ./admin@digitalproperty-network.card && composer network list --card admin@digitalproperty-network`

npm ERR! Exit status 1

npm ERR!

npm ERR! Failed at the digitalproperty-app@0.0.6 deployNetwork script.

npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

 

npm ERR! A complete log of this run can be found in:

npm ERR!     /Users/user/.npm/_logs/2018-02-26T13_27_47_943Z-debug.log

 

Can you please kindly suggest the possible solution.

Thanks",,d8bhatta,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyyf:",,,,,,,,,,,,,,,,,,,,,d8bhatta,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/18 12:30 AM;jyellick;This is not the correct venue for hyperledger composer issues.  Please look at filing an issue here: https://github.com/hyperledger/composer/issues;;;",,,,,,,,,,,,,,,,,,,,,,
Make event hub and deliver client opts consistent,FAB-8537,28027,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,26/Feb/18 10:40 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 1:56 AM,,,,,,,,,,,0,,,,,,"- Remove NewFiltered from EventHubClient
- Remove unnecessary private functions in DeliverClient
",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyyn:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Not able to Start Network - when using 1.1 samples against earlier binaries,FAB-8539,28030,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,parivesh.kurmi,parivesh.kurmi,26/Feb/18 11:34 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 5:25 PM,,,,v1.1.1,,,fabric-samples,,,,0,must-fix,,,,,"When i am trying to run the first network in *fabric-samples/first-network* using 

*./byfn -m up*. I am getting error on start of orderer.

Need help on that.",,davidkhala,jyellick,parivesh.kurmi,Ratnakar,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8502,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 12:21 AM;parivesh.kurmi;generate.JPG;https://jira.hyperledger.org/secure/attachment/14683/generate.JPG","26/Feb/18 11:33 PM;parivesh.kurmi;issue.JPG;https://jira.hyperledger.org/secure/attachment/14682/issue.JPG","27/Feb/18 12:41 AM;parivesh.kurmi;orderer_logs.txt;https://jira.hyperledger.org/secure/attachment/14684/orderer_logs.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyz3:",,,,,,,,,,,,,,,,,,,,,davidkhala,jyellick,parivesh.kurmi,Ratnakar,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Feb/18 11:35 PM;parivesh.kurmi;I have attached the Screenshot for the issue i am getting on running ./byfn -m generate.

Please look into it.;;;","26/Feb/18 11:44 PM;parivesh.kurmi;Just for the information i am using Docker Toolbox on windows.;;;","26/Feb/18 11:58 PM;rohitadivi;Hi Parivesh,
Could you share your *orderer logs* and the log message for *./byfn -m generate* with me ? you can dm me on rocket chat or you can share them here. 
My rocket chat id is rohitadivi 
;;;","27/Feb/18 12:19 AM;parivesh.kurmi;Hi Rohit ,

I am very new to this. not sure how to get orderer logs seperatley . The error message i am getting i have already attached in issue.JPG;;;","27/Feb/18 12:20 AM;parivesh.kurmi;okk i got it wait just sending you the screenshot for that;;;","27/Feb/18 12:22 AM;parivesh.kurmi;I have attached the logs for *./byfn -m generate. (generate.JPG)*;;;","27/Feb/18 12:34 AM;rohitadivi;Thanks for sharing the logs of ./byfn -m generate could you also share the orderer logs?
You can use the command below to write the orderer logs to a text file and attach it here
{code}
docker logs orderer.example.com >& orderer_logs.txt
{code};;;","27/Feb/18 12:41 AM;parivesh.kurmi;I have attached the logs.;;;","27/Feb/18 1:07 AM;rohitadivi;Thanks for the logs

I could see orderer crashed from the logs 

here is the gist of logs
{code}[35m2018-02-26 14:24:49.760 UTC [orderer/multichain] newLedgerResources -> CRIT 066[0m Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities
panic: Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities

goroutine 1 [running]:
panic(0xb31bc0, 0xc420336eb0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201b45d0, 0xc71091, 0x30, 0xc420336df0, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newLedgerResources(0xc4203029b0, 0xc420335320, 0xc420335320)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:164 +0x393
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x122a2a0, 0xc4201d8260, 0xc420334e40, 0x1226ea0, 0x126ee88, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:114 +0x23b
main.initializeMultiChainManager(0xc4201b0d80, 0x1226ea0, 0x126ee88, 0xc420185d70, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:219 +0x27a
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:75 +0x392
{code}

This indicates that you are using capabilities feature on fabric 1.0.x images.
I did further investigation and reproduced the same error on my machine using fabric 1.0.6 images on the master branch.
 
Please confirm whether you're using fabric 1.0.x images.;;;","27/Feb/18 1:12 AM;rohitadivi;Also if you want to continue using fabric 1.0.x images, please switch to release branch on fabric samples repo.

If you want to use fabric 1.1.0 alpha images then please follow the instruction mentioned in the [getting stated page|http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#hyperledger-fabric-samples]

{code}
 git clone -b master https://github.com/hyperledger/fabric-samples.git
cd fabric-samples
git checkout v1.1.0-alpha
cd fabric-samples
curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0-alpha
echo y | ./byfn.sh up
{code};;;","27/Feb/18 2:27 AM;rohitadivi;To prevent other users from running into similar problem it would be good to update the script to run with a specific version of the images and throw out an error if there is a mismatch between the version of the script and version of the images. This means the script should be looking for a specific image tag like v1.1.0 alpha rather than the images with latest tag. [~scottz] [~bmos299] [~nileshdeotale] [~denyeart] [~Ratnakar];;;","27/Feb/18 9:45 AM;parivesh.kurmi;[~rohitadivi] : Thanks for the quick reply. 

I have few Queries:

As curl command was not working so i have downloaded the hyperledger-fabric-windows-amd64-1.1.0-alpha/bin/(all images) manually. Will that work with what you are suggesting? 

I have downloaded the images from below link:

[https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/windows-amd64-1.1.0-alpha/hyperledger-fabric-windows-amd64-1.1.0-alpha.tar.gz|https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/windows-amd64-1.1.0-alpha/hyperledger-fabric-windows-amd64-1.1.0-alpha.tar.gz.]

Please suggest if this is not the right one which one i have to download?
git clone -b master https://github.com/hyperledger/fabric-samples.gitcd fabric-samples
git checkout v1.1.0-alpha
cd fabric-samples
 hyperledger-fabric-windows-amd64-1.1.0-alpha/bin/(all images) // curl command not working
echo y | ./byfn.sh up;;;","27/Feb/18 10:42 AM;Ratnakar;[~parivesh.kurmi]

As [~rohitadivi] addressed in earlier comments, Orderer logs indicates that you are running the network with *Fabric version* *1.0.0*
{code:java}
2018-02-26 14:24:48.189 UTC [orderer/main] main -> INFO 001[0m Starting orderer:
Version: 1.0.0
Go version: go1.7.5
OS/Arch: linux/amd64
2018-02-26 14:24:48.196 UTC [orderer/main] initializeSecureServerConfig -> INFO 002[0m Starting orderer with TLS enabled{code}
what error do you see when execute curl command  on windows machine ? Did you used Gitbash or any other tools?

If you still see the problem an alternative way is to download this [bootstrap.sh|https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh] script .
 add executable permission and run the script with tag from Gitbash
{code:java}
./bootstrap.sh 1.1.0-alpha
{code};;;","27/Feb/18 1:39 PM;jyellick;I've put together a CR which adds some basic version checking into byfn.

[https://gerrit.hyperledger.org/r/c/18455/]

[~rohitadivi]do you think this satisfies this bug, or did you have something else in mind?;;;","28/Feb/18 12:02 AM;rohitadivi;[~jyellick] This is what I had in my mind, I am currently checking this fix on various image versions and binaries. I will update my comments on the CR once am done testing.;;;","28/Feb/18 1:49 AM;rohitadivi;The CR works well with all the test cases. Below is the summary of the test cases I worked on:

 
||Case||Fabric binaries||Fabric images||Result||Comments||
|1|1.0.6|1.0.6|Fails as expected|Configtxgen is at older version|
|2|1.1.0-beta-snapshot|1.0.6|Fails as expected|Due to version mismatch|
|3|1.1.0-alpha|1.1.0-alpha|Fails as expected|1.1.0 alpha version is not supported|
|4|1.1.0-beta-snapshot|1.1.0-alpha|Fails as expected|Due to version mismatch|
|5|1.1.0-alpha|1.1.0-beta-snapshot|Fails as expected|Due to version mismatch|
|6|1.1.0-beta-snapshot|1.1.0-beta-snapshot|*Passed* successfully|Supported version|;;;","01/Mar/18 4:37 PM;davidkhala;I saw similar error when I tried to test node-sdk locally

`$ gulp test`

`$ docker logs orderer.example.com`

 2018-03-01 07:31:29.616 UTC [orderer/multichain] newLedgerResources -> CRIT 068 Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities
panic: Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities

goroutine 1 [running]:
panic(0xb44a80, 0xc4204070f0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc420209f50, 0xc860ec, 0x30, 0xc420407030, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newLedgerResources(0xc4203f6640, 0xc4203d7350, 0xc4203d7350)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:153 +0x393
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x1246880, 0xc42040c120, 0xc4203d6e70, 0x1243480, 0x128b4a8, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:103 +0x23b
main.initializeMultiChainManager(0xc420257440, 0x1243480, 0x128b4a8, 0xc420288960, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:220 +0x27a
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:75 +0x392
;;;",,,,,,
byfn.sh must support persisting the ledgers on image change to support upgrade,FAB-8540,28031,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Feb/18 11:42 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,28/Feb/18 7:37 AM,,,,v1.0.6,v1.1.0,,fabric-samples,,,,0,must-fix,,,,,"byfns.sh stores the ledgers directly in the container.  Since upgrading the image requires destroying the container, there is no way to simulate a realistic ledger upgrade.  This issue is to add a '-p' flag and compose file which causes the ledgers to persist.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyyzb:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Feb/18 10:59 PM;denyeart;release branch: [https://gerrit.hyperledger.org/r/#/c/18435|https://gerrit.hyperledger.org/r/#/c/18435/]

master branch: [https://gerrit.hyperledger.org/r/#/c/18411]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
[basic-network] peer0.org1.example.com service must wait for couchdb service,FAB-8541,28033,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,thejibz,thejibz,27/Feb/18 1:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 2:50 AM,v1.0.4,,,,,,fabric-samples,,,,0,basic-network,couchdb,docker-compose,,,"Hello,

When spinning up the docker-compose file located at ""fabric-samples/basic-network/docker-compose.yml"", the  ""peer0.org1.example.com"" container must wait for couchdb container to be responding on the port 5984 but it isn't currently.

It's not enough to set the depend_on property in this case (because it is merely waiting for the container to boot but not for the couchdb process to be alive and responding). Two solutions I see:
 * Make the peer0.org1.example.com service fault tolerant by making it retry X times to connect on the couchdb before giving up.
 * Use a kind of ""wait-for-it"" script for the command of the peer0.org1.example.com (cf. [https://github.com/vishnubob/wait-for-it)] that wait on the couchdb to be available.

Regards,

JB","VM: CentOS Linux release 7.4.1708 (Core)


Python: 2.7.5


NPM: 3.10.10


NodeJs: v6.12.3",denyeart,thejibz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyyzj:",,,,,,,,,,,,,,,,,,,,,denyeart,thejibz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 2:49 AM;denyeart;When peer starts up, it uses the retry strategy as mentioned in your first bullet.

This is configurable here:

[https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L571-L572]

Also implemented in 1.0.x release branch.

The time between each retry is doubled, to ensure a fast startup for most scenarios, but ability to wait increasingly longer times if couchdb doesn't respond quickly.

In your peer logs, you can often see that it takes one or two retries before the peer resumes startup.

Marking as Done.;;;","27/Feb/18 5:54 PM;thejibz;Ok thank you, I was following the tutorial and used some ""startFabric.sh"" script that exit with error if the container don't start fast enough.;;;",,,,,,,,,,,,,,,,,,,,,
Test scenario: verify that Chaincode installation+instantion via fabric node SDK is able to create CouchDB indexes ,FAB-8543,28037,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,27/Feb/18 5:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Mar/18 6:07 AM,,,,,,,,,,,0,,,,,,"This is to verify that the fix for FAB-8345 is working, both for golang and node chaincode. Currently, blocked due to the fact that NPM package is yet to be published with the latest fix.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz0f:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pre-reqs are not giving accurate and typical Go configuration,FAB-8544,28038,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bmos299,bmos299,bmos299,27/Feb/18 5:39 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 4:21 AM,,,,,,,fabric-docs,,,,0,Documentation,,,,,The golang section is not giving typical $GOPATH information and the note: has bug in it where it is missing a : and not showing up in the .rst. ,,bmos299,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx05b:",,,,,,,,,,,,,,,,,,,,,bmos299,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 6:34 AM;bmos299;Change submitted via https://gerrit.hyperledger.org/r/#/c/18445/;;;","01/Mar/18 4:21 AM;denyeart;Abandoned.;;;",,,,,,,,,,,,,,,,,,,,,
peer node start doc should not include --orderer flag,FAB-8545,28039,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,27/Feb/18 6:09 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Feb/18 7:05 AM,,,,v1.1.0,v1.1.1,,fabric-docs,,,,0,,,,,,"""peer node start"" doc should not include --orderer flag.  This flag does nothing on ""peer node"" command.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx073:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Feb/18 6:11 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18441/;;;",,,,,,,,,,,,,,,,,,,,,,
Improve validation of peer CLI flags,FAB-8549,28044,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,27/Feb/18 11:02 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,Future,,,fabric-peer,,,,0,stale-item,,,,,"""peer node start"" does not utilize --orderer flag, but no validation error is returned if the flag is passed.  There are likely many more validation improvements that can be made once we take a close inspection.",,denyeart,haibbo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx07b:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,haibbo,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Some binaries inside docker images do not report correct version,FAB-8551,28046,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,jyellick,jyellick,27/Feb/18 1:09 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,12/Apr/18 9:59 PM,,,,v1.2.0,,,fabric-tools,,,,0,,,,,,"The build process for {{configtxgen}} {{configtxlator}} and {{cryptogen}} all produce local binaries with sane output for the Version like: {{1.1.0-beta-snapshot-b0f284a58}}

However, inside of the fabric-tools docker image, even from the same build, these binaries output the unhelpful {{development build}} as the Version.

Note, this does not appear to affect the {{peer}} or {{orderer}} binaries which likewise output a sane version from within the image.

Marking as a fix version of v1.1 in case this is an easy fix.  Otherwise, it is probably fine for deferral.",,denyeart,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz1j:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Feb/18 1:11 PM;denyeart;[~rameshthoomu] Could you take a look?;;;","08/Apr/18 8:46 PM;mastersingh24;https://gerrit.hyperledger.org/r/20303;;;",,,,,,,,,,,,,,,,,,,,,
[CI] - removed unused CI jobs,FAB-8552,28048,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Feb/18 1:34 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 3:23 AM,,,,,,,fabric-ci,,,,0,,,,,,"remove unsused CI jobs, marcos and shell scripts.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz1z:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 10:59 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18457/;;;",,,,,,,,,,,,,,,,,,,,,,
Drop CredentialManager interface,FAB-8553,28049,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,27/Feb/18 2:57 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 11:49 AM,,,,,,,,,,,0,,,,,,"The only method, GetSigningIdentity, will be a part of IdentityManager",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz27:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
validation execution timeout kill the peer,FAB-8554,28051,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Brucepark,Brucepark,27/Feb/18 4:28 PM,04/Jul/19 12:59 AM,28/Oct/23 3:02 AM,22/May/18 3:46 AM,Unverifiable,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"In an environment with two Orgs and four peers (each org has 2 peers), 4 kafkas, 3 zookeepers and 2 orderers (no couchdb).

During the test, four peers died at the same time.

The error messages are all the same.

 
{code:java}
2018-02-27 02:37:35.590 UTC [gossip/state] commitBlock -> ERRO f8a4bf Got error while committing(Invoke VSCC failed for transaction txid=72d936d31215731f58bf0b71b85cb9b7db544eceaa51246d1df1483c39833697, error error executing chaincode: failed to execute transaction: timeout expired while executing transaction

Validation failed

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock

/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:778

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads

/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561

runtime.goexit

/opt/go/src/runtime/asm_amd64.s:2337)

2018-02-27 02:37:35.631 UTC [gossip/state] deliverPayloads -> CRIT f8a55e Cannot commit block to the ledger due to Invoke VSCC failed for transaction txid=72d936d31215731f58bf0b71b85cb9b7db544eceaa51246d1df1483c39833697, error error executing chaincode: failed to execute transaction: timeout expired while executing transaction

Validation failed

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads

/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:562

runtime.goexit

/opt/go/src/runtime/asm_amd64.s:2337

panic: Cannot commit block to the ledger due to Invoke VSCC failed for transaction txid=72d936d31215731f58bf0b71b85cb9b7db544eceaa51246d1df1483c39833697, error error executing chaincode: failed to execute transaction: timeout expired while executing transaction

Validation failed

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads

/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:562

runtime.goexit

/opt/go/src/runtime/asm_amd64.s:2337



goroutine 220 [running]:

github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201bbc50, 0xebf885, 0x2c, 0xc4228be1a0, 0x1, 0x1)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x134

github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc4200d1d00)

/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:562 +0x4c7

created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider

/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:252 +0x6d3{code}
 

Not only peer but also all dev-peers were dead.
 All nodes seem to have died at similar times,
 The last log of the dev-peer is:

 
{code:java}
```
======== Invoke 1 mspid: Org1MSP <nil>===========
ex02 Invoke version2
======== Invoke 1 mspid: Org1MSP <nil>===========
ex02 Invoke version2
2018-02-27 02:37:35.863 UTC [shim] func1 -> ERRO 003 Received error from server, ending chaincode stream: rpc error: code = Unavailable desc = transport is closing
Error starting Simple chaincode: rpc error: code = Unavailable desc = transport is closing{code}
 

chaincode:

 
{code:java}
func (t *SimpleChaincode) get(stub shim.ChaincodeStubInterface, name string) pb.Response {
  valbytes, err := stub.GetState(name)
  if err != nil {
    return shim.Error(""Fail to get State:"" + name)
  }

  return shim.Success(valbytes)
}


func (t *SimpleChaincode) inc(stub shim.ChaincodeStubInterface, name string) pb.Response {
  valbytes, err := stub.GetState(name)
  if err != nil {
    return shim.Error(""Fail to get State"")
  }

  val, _ := strconv.Atoi(string(valbytes))
  valbytes = []byte(strconv.Itoa(val+1))

  err = stub.PutState(name, valbytes)

  if err != nil {
    return shim.Error(err.Error())
  }

  return shim.Success(nil)
}

{code}
 

test client (node)
{code:javascript}

//IBM-Blockchain-marbles
var fcw = require('./src/fabric/fc_wrangler/index.js')({ block_delay: 60 * 1000 }, logger);

const query_chaincode_async = promisify(fcw.query_chaincode);
const invoke_chaincode_async = promisify(fcw.invoke_chaincode);

async function intervalFunc() {
	let state_store = await getKeyValueStore()
	let user_context = await getUserContext(state_store)

	var idx = 0;

	var MAX = 10
	// for(var i =0; i < MAX; i++) {
	// 	let name = 'key' + i.toString();
	// 	await incValue(name);
	// 	logger.info('done initialize', name);
	// }



	if (user_context != null) {
		while (true) {
			
			var successCount = 0;
			var errorCount = 0;

			var startedAt = Date.now();
			logger.warn('start');

			for(var tryCount =0 ; tryCount < MAX; tryCount++) {
				let idx2 = idx;
				idx++;

				let name = uuid.v4();
				logger.info('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', tryCount, successCount, errorCount);
				try {
					logger.info(idx2, '###### before ######', name);
					if (isModeA()) {
						incValue(name).then(async () =>{
							successCount++;
							logger.info(idx2, '###### Success IncA ###### ', name);
						}).catch((exception) => {
							errorCount++;
							logger.error(idx2, '###### exception ######', name);
							logger.error(exception);
						});
						
					} else {
						incValue(name).then(async () =>{
							successCount++;
							logger.info(idx2, '###### Success IncB ###### ');
						}).catch((exception) => {
							errorCount++;
							logger.error(idx2, '###### exception ######', name);
							logger.error(exception);
						});
					}
					// logger.info('###### after ######', await getValue('a'), await getValue('b'), await getValue('c'));
				} catch(exception) {
					errorCount++;
					logger.error(idx2, ""unexpected exception"", name);
					logger.error(exception);
				}
			}


			while (tryCount > (successCount + errorCount)) {
				let info = await channel.queryInfo();
				logger.info('==== waiting ======= ', tryCount, successCount, errorCount, info.height);

				await sleep(100);
			}

			var endAt = Date.now();
			logger.warn('end ', MAX, Math.floor((tryCount * 1000) / (endAt - startedAt)));
			let info = await channel.queryInfo();
			logger.warn(info.height);
			MAX += 10;
			await sleep(5000);
		}
	} else {
		console.error(""user "" + config.userId + "" not found"");
	}
}

function incValue(name) {
	let func = """"  
	let args = []
	if (name == ""a"") {
		func = ""incA"";
	} else if (name == ""b"") {
		func = ""incB"";
	} else {
		func = ""inc"";
		args = [name];
	}

	var opts = {
		chaincode_id: chaincode_id,
		cc_function: func,
		cc_args: args,
		peer_urls: config.peer_urls ,
		/* target_event_url: , */
		event_urls: config.peer_event_urls, 
		peer_tls_opts: peer_tls_opts,
		endorsed_hook: function(error, res) {},
		ordered_hook: function(error, res) {}
	};

	return invoke_chaincode_async({ client: fabric_client, channel: channel}, opts)
}

function getValue(name) {
	let func = """"
	let args = []
	if (name == ""a"") {
		func = ""getA"";
	} else if (name == ""b"") {
		func = ""getB"";
	} else if (name == ""c"") {
		func = ""getC"";
	} else {
		func = ""get"";
		args = [name];
	}

	var opts = {
		chaincode_id: chaincode_id,
		cc_function: func,
		cc_args: args,
		peer_urls: config.peer_urls,
		peer_tls_opts: peer_tls_opts
	};

	return query_chaincode_async({ channel: channel}, opts).then((x) => { return x.parsed })
}

intervalFunc()

{code}",,Brucepark,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz2f:",,,,,,,,,,,,,,,,,,,,,Brucepark,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 5:16 PM;yacovm;can you please attach the peer logs too?;;;","27/Feb/18 5:18 PM;yacovm;also - what is the output of:
{code}dmesg{code}
{code}df -h{code}
?;;;","12/Apr/18 9:04 PM;C0rWin;@종석 박 Do you have any news? ;;;",,,,,,,,,,,,,,,,,,,,
Membership conceptual doc - need to address final review comments,FAB-8555,28056,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,denyeart,denyeart,27/Feb/18 8:17 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 5:55 PM,,,,v1.1.1,,,fabric-docs,,,,0,,,,,,"Address review comments from Membership conceptual doc here:

https://gerrit.hyperledger.org/r/#/c/17505/16/docs/source/membership/membership.md",,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx07j:",,,,,,,,,,,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 5:04 PM;elli-androulaki;CR: [https://gerrit.hyperledger.org/r/#/c/18513/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
Block index/getTransactionId() should store/return all duplicated occurrences of the same txnId in the ledger,FAB-8557,28063,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,minollo,minollo,28/Feb/18 1:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,17/Jun/18 11:04 PM,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,"I asked this question originally on #fabric-orderer and then on #fabric-ledger, and I was asked to summarize it here. The original question was: 

{quote}
""Is there ever a situation where I may end up with duplicates of the same txnId in the same or even different blocks - maybe as the result of submitting the same transaction twice through the same OSN, or at the same time through multiple OSNs?""
{quote}

 [~kchristidis] replies that 

{quote}
""yes, that's indeed possible, and only the first validated instance of the same txnId would have a chance of being valid, the others would be marked as invalid"" 
{quote}

(which I personally find a bit odd, but, OK). The follow up question I asked [~kchristidis] and [~manish-sethi] was

{quote}
 ""then, how does the block index behave? What does getTransactionById(txnId) return if txnId was submitted multiple times""
{quote}

[~manish-sethi] confirmed that subsequent submissions of the same txnId would be marked as invalid, but he was not sure about the behavior of the block index/getTransactionById() in that scenario; maybe it returns the last submission of the same txnId? (which I would think is the worst of all possible scenarios).

My personal opinion is that duplicate txnIds should never occur in the ledger.",,denyeart,kchristidis,luomin,manish-sethi,minollo,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10680,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu2f:",,,,,,Next Items- Ledger,,,,,,,,,,,,,,,denyeart,kchristidis,luomin,manish-sethi,minollo,rickr,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 2:23 AM;manish-sethi;I confirmed in the code - the current behavior of the API `{color:#000000}GetTransactionByID` would return the latest transaction with the txid. This would mean that the transaction which is marked as invalid with the code `{color}{color:#000000}TxValidationCode_DUPLICATE_TXID`.{color}

{color:#000000}Not sure what option of the following makes sense in this scenario {color}

{color:#000000}1) Keep the current behavior{color}

{color:#000000}2) Return the first transaction with the given `txid` (could be valid or invalid for some other reason){color}

{color:#000000}3) {color}Return all the transactions with the given `txid`.

I personally would favor the third option because, this API returns the invalid transactions as well otherwise.;;;","28/Feb/18 5:30 AM;kchristidis;In for the third option as well. I think [~elli-androulaki] is on the same boat.;;;","28/Feb/18 6:29 AM;manish-sethi;[~kchristidis] - only concern with the third option I have is that it would change the API for the function `{color:#000000}GetTransactionByID{color}` so that it returns an array now - so, it may have an impact on clients/SDKs. Better to take opinions of [~rickr] and [~mastersingh24]. Please feel free to tag other folks that may think could have an impact;;;","28/Feb/18 7:28 AM;rickr;Currentl would we just pick one at random now ?  I would hope we would pick the valid one.  Hopefully there would only be one of those.  If we want more (ALL) to come back we should now have a *new API* something like  _{color:#000000}GetAllTransactionsByID{color}_;;;","28/Feb/18 8:34 AM;denyeart;I think we must fix the existing API, and should also add a new API, as follows:

GetTransactionById - Fix it to return the first transaction (since that is the only one that could potentially be valid).

GetTransactionsById - New API to return all the transactions for the given txid.;;;","28/Feb/18 8:36 AM;denyeart;Have we ruled out having ordering service filter out the dups before they get into blocks?;;;","28/Feb/18 8:54 AM;rickr;I think this is about what I suggested.  Only for me GetTransactionById and GetTransactionsById are too visually close for my liking :);;;","28/Feb/18 10:36 AM;kchristidis;{quote}Have we ruled out having ordering service filter out the dups before they get into blocks?{quote}

Consider the case where txid {{foo}} is submitted to OSN1 and during the same round (i.e. before a block is cut containing txid {{foo}} and thus updating the list of txid's on the orderers), the same txid is submitted to OSN2.

OSN2 has no way of knowing that OSN1 saw a txid of {{foo}} already, because this transaction hasn't been communicated in a voting round (think Raft or BFT). And the leader now has to deal with two identical txids for the same block. Which one do they go for?

Also: presumably the submitter to OSN1 got an ACK upon submitting {{foo}}. Same for the submitter to OSN2. If we drop, as you suggest, only one of them sees their transaction in the ledger. This may be fair game for the BFT ordering service where dropping transactions is par for the course, but in the CFT mode (think Raft) it is not.

So having the ordering service do filtering of duplicate transactions and not letting them in is tricky because it messes up your guarantees.;;;","05/May/18 12:38 AM;kchristidis;Seeing how the Priority of this one has been elevated —

What is the approach that we'll be implementing?;;;","11/May/18 1:09 AM;denyeart;The v1.2 fix would be to fix GetTransactionById to return the first transaction (since that is the only one that could potentially be valid).  So the fix will actually be on the commit side where the valid/invalid index is built, to not override prior tx status.;;;","11/May/18 1:13 AM;minollo;Isn't that going to be extremely confusing for an app? Say the app submits a txn with a txnid overlapping a previously (successfully) committed one; then it calls GetTransactionById() and it gets a response indicating that the txn was committed as valid... that seems to be just wrong.;;;","11/May/18 7:13 AM;denyeart;Right, that's why I say we need both a fix for the immediate issue, and a new API to provide the full clarity:
{quote}I think we must fix the existing API, and should also add a new API, as follows:

GetTransactionById - Fix it to return the first transaction (since that is the only one that could potentially be valid).

GetTransactionsById - New API to return all the transactions for the given txid.{quote};;;","11/May/18 8:42 AM;minollo;I keep thinking that the suggested new behavior of GetTransactionById (singular) would be just plain wrong, and not any better than the current one. Either it should just be impossible to have multiple transactions sharing the same txnid (which, again, as a user is what I would expect); or, if we don't want to go there, then I would probably expect GetTransactionById (singular) to return an error if multiple transactions share that same txnId. Anything else is just going to cause confusion and unexpected behaviors, IMHO.;;;","11/May/18 7:21 PM;denyeart;The first time we see a txid and it gets marked valid is the 'legitimate' transaction.  A later 'illegitimate' transaction should not usurp the valid status of the original txid.  GetTransactionById should return the original 'legitimate' transaction.  If you ask for GetTransactionById today and get one response, and then ask for GetTransactionById tomorrow and get a different response (different status or error), that is a broken scenario that is being fixed here.

Furthermore, if a state update has been applied, the transaction that changed it will be fovever marked in the history for the key.  Again, we wouldn't want GetTransactionById to return a different result than the history of a key.  History revision shall not be tolerated.

GetTransaction*s*ById will disambiguate the results for clients.;;;","09/Jun/18 1:30 AM;manish-sethi;https://gerrit.hyperledger.org/r/#/c/22887/;;;","17/Jun/18 11:13 PM;denyeart;Fix for GetTransactionById merged in v1.2 and will include release notes in v1.2.

FAB-10680 opened to add GetTransactionsById in the future.;;;",,,,,,,
Peer container does use its own namespace or tag look for ccenv image,FAB-8559,28065,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,tongliofcary,tongliofcary,28/Feb/18 1:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Jun/18 9:04 PM,,,,v1.2.0,,,fabric-docs,,,,0,chaincode,,,,,"We recently have to test the latest code for some performance/stress test. We had to use a private docker repo. The private docker repo saves snapshot build peer and chaincode images, however, the images always get labeled with stable and snapshot tag. When use the stable tag to set things up for test, peer image gets pulled successfully, but when it is time to create chaincode containers, peer container looks for the chaincode image with tag hardcoded (snapshot tag), the problem is that peer container has no way to authenticate with the private repo, thus even if the snapshot tagged ccenv container exists in the private repo, peer container just can not get it, thus the chaincode container creation fails. I think peer container really needs to use its own namespace and tag finding ccenv image for chaincode creation, currently it seems it is not doing that. even with core.yaml configuration, this still is an issue since peer does not know how to authenticate with private docker repo. I am changing this to a bug now and higher the priority. Thanks for your attention.


The following were original description of the problem.

See comment thread, below.

 

peer container image can be retrieved from multiple sources, and it can use any tag, for example, nexus3.hyperledger.org:10001/hyperledger/fabric-peer:latest, when peer try to instantiate chaincode container, it always try to retrieve the chaincode from docker hub since it assume this hyperledger/fabric-ccenv, so there are two problems.

1. peer does not care where it was retrieved
 2. peer does not use its own tag to find the ccenv tag, seems that the ccenv tag peer uses is some where hardcoded. for example, when peer image was built, it may carry a tag like this x86_64-1.1.0-beta-snapshot-0a81773, then that image may get tagged as ""latest"", now when the image is pulled down, it will bear the tag of ""latest"", one would assume that peer will instantiate the ccenv:latest, but the peer instead simply uses the snapshot tag.

I think these are pretty serious issues. Need to be fixed very soon.","the steps to reproduce the problem.

1. retrieve peer image from non docker hub repo using a tagged snapshot image
2. try to instantiate a chaincode.",ChristopherFerris,denyeart,mastersingh24,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz3b:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 2:13 AM;ChristopherFerris;Not sure that this is critical for 1.1. IIUC you are saying, if I start a peer from nexus:hyperledger/fabric-peer:latest, that when spinning up a chaincode, it should use the nexus:hyperledger/fabric-ccenv:latest image not the hub.docker.com/hyperledger/fabric-ccenv:latest;;;","28/Feb/18 2:18 AM;tongliofcary;that is right Chris, because hub.docker.com may not have that image. the current behavior also create problem in this case, when you have the ccenv image already pulled form nexus, when chaincode is instantiated, the peer container would still try to get ccenv from docker hub, in any case, I think the code should be changed to extract the image from the same origin or take a configuration parameter, but the default behavior should simply take the default origin.;;;","28/Feb/18 9:50 PM;denyeart;Discussed with a few maintainers - we concluded this could be deferred to 1.2 as a Medium.

[~greg.haskins] Can you provide your opinion?;;;","01/Mar/18 12:46 AM;tongliofcary;[~denyeart]thanks david for addressing this issue. Thinking the solution should be hard to do. Totally ok with deferring to 1.2, but can you guys make this a bit higher priority? This really impact the automation tools, the tool will have to pull, then retag to make things work especially now through out the dev process we save the images on nexus, and we use these images for testing on a daily basis, it will be really nice to get this done asap if it is possible. Thanks for confirming the issue though.;;;","12/Mar/18 6:22 PM;mastersingh24;[~tongliofcary] - I don't think this is a bug

You can always override the location / name / image for the chaincode builders and environment(s) in core.yaml or environment variable

 
{code:java}
chaincode.golang.runtime | CORE_CHAINCODE_GOLANG_RUNTIME

chaincode.car.runtime | CORE_CHAINCODE_CAR_RUNTIME

chaincode.java.runtime | CORE_CHAINCODE_JAVA_RUNTIME

chaincode.node.runtime | CORE_CHAINCODE_NODE_RUNTIME
{code}
 ;;;","12/Mar/18 11:29 PM;tongliofcary;[~mastersingh24] Gari, what I found is that my peer image may be pulled from a repository which is not docker hub but the peer container is always thinking that the chaincode image should be from docker hub (because it is default to), are you saying using the four parameters you have above , one can indicate where the chaincode image should be pulled by peer container? These 4 parameters do not look like you can use to specify where the chaincode container should come from. Do you really mean the following instead?

id:
        path:
        name:

Thanks.;;;","09/Apr/18 1:50 AM;mastersingh24;Take a look at core.yaml  ... that is how you tell the peer which images to use to build chaincode as well as the base image to use for the actual chaincode container.  You do not specify this when you install chaincode ... it's part of the actual peer configuration.;;;","09/Apr/18 10:26 PM;tongliofcary;[~mastersingh24]Gari, are you saying using piece of code like this in the core.yml file.

chaincode:

    # The id is used by the Chaincode stub to register the executing Chaincode
    # ID with the Peer and is generally supplied through ENV variables
    # the `path` form of ID is provided when installing the chaincode.
    # The `name` is used for all other requests and can be any string.
    id:
        path:
        name:


    builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)

So that one can replace DOCKER_NS to switch to a different docker repo to get right image?
Please confirm and I can close this.;;;","12/Apr/18 7:59 AM;mastersingh24;correct;;;","12/Apr/18 9:44 PM;tongliofcary;I think that this needs to be addressed in the document.;;;","11/May/18 12:13 AM;tongliofcary;Recently we found this problem causing headache again. The issue is that even when we use chaincode section in core.yaml to configure the namespace for ccenv image, when the site is secured , peer has no idea how to do authentication, it still fails. The other problem is that it seems that when peer container gets built, it hard coded the chaincode tag somewhere, when chaincode container needs to be created at runtime, it will use that tag regardless what its own tag is. For example, a peer gets built with a snapshot tag, but the image gets posted to a repo labled as stable, when this image gets pulled from repo, and it is time to instantiate a chaincode container, it will try to use the snapshot tag, rather than the stable tag to look for the chaincode container, this has very significant issue with test env. Peer container should really use its own tag and namespace to instantiate chaincode container.  ;;;","14/May/18 7:58 PM;mastersingh24;[~tongliofcary]  - I think I must be missing something here.  Here's the output of peer version:
{code:java}
peer:
 Version: 1.2.0-snapshot-f57277ab8
 Go version: go1.10.1
 OS/Arch: darwin/amd64
 Experimental features: true
 Chaincode:
  Base Image Version: 0.4.8
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger
{code}

Based on the default config (which is {{builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)}}), the peer will use a ccenv image with a tag created as follows:


{code:java}
func ParseDockerfileTemplate(template string) string {
	r := strings.NewReplacer(
		""$(ARCH)"", runtime.GOARCH,
		""$(PROJECT_VERSION)"", metadata.Version,
		""$(BASE_VERSION)"", metadata.BaseVersion,
		""$(DOCKER_NS)"", metadata.DockerNamespace,
		""$(BASE_DOCKER_NS)"", metadata.BaseDockerNamespace)

	return r.Replace(template)
}
{code}

All of the above code results in the ccenv tag matching the build parameters for the peer itself.  I still do not understand what you are trying to do here.
;;;","14/May/18 10:16 PM;tongliofcary;[~mastersingh24]Glad that you went this far to see the issue. say that your peer container has also been taged as stable, so you will have a image like this

hyperledger/fabric-peer:stable, 

when this peer trying to create a chaincode container, it will be still looking for the ccenv:1.2.0-snapshot-f57277ab8, that image never existed on the server which only pulled hyperledger/fabric-peer:stable, hyperledger/fabric-ccenv:stable. though the hypereldger/fabric-ccenv:stable maybe exactly the same as fabric-ccenv:1.2.0-snapshot-f57277ab8, but peer container does not care,  peer actually will still look for 1.2.0-snapshot-f57277ab8 from the repo, but repo is secured, and peer has no way to authenticate, then it  fails. 

Think about how we do this at the CI, a script can not really be developed using the snapshot tag, it has to be able to use tag like stable, dev or daily-stable. when an image gets tagged with multiple labels, this fails. I think peer container should really use its own tag to look for ccenv image.;;;","13/Jun/18 1:37 AM;ChristopherFerris;[~tongliofcary] the ccenv image is defined by the string in the core.yaml, which by default is defined as Gari indicated. You can override that by setting n environment variable, or modifying the file to pull whatever version you like. Now, I get the point you are on, and frankly, I think that we should tease apart the metadata.Version into its constituent parts: version and build sha. That way, the value is always correct and if we decide to publish a build as stable or to dockerhub, we don't need the 'IS_RELEASE' nonsense to build the images we publish.;;;","13/Jun/18 5:02 AM;ChristopherFerris;[https://gerrit.hyperledger.org/r/22993] is really for FAB-9641, but a side-effect is that it addresses this defect (to the extent it is a defect that has no workaround).;;;","18/Jun/18 9:04 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/22993/] is merged now, marking as Done.

  [~tongliofcary] Please re-open if there is still an issue.;;;",,,,,,,
PTE testcases: simplify input json files,FAB-8560,28067,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,28/Feb/18 4:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,04/May/18 5:25 AM,,,,,,,fabric-quality,,,,0,,,,,,PTE can join/install/instantiate per channel basis.  Some scenarios were written before PTE has this capability.  Now we want to simplify files by using this PTE capability.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzyz3j:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,,,true,"02/Mar/18 4:51 AM;dongming;CR submitted for

7204-4i, 7204-4q, 7246-4i, 7334-4i, 7627-16i, 7627-16q

https://gerrit.hyperledger.org/r/#/c/18639/;;;","06/Mar/18 7:10 AM;dongming;Merged.

Leave it open for check-in other scenarios.;;;","15/Mar/18 3:22 AM;dongming;CR submmited for 

FAB-7647-1i, FAB-7647-1i, FAB-7929-8i, FAB-7929-8q, FAB-8192-4i, FAB-8199-4q, FAB-8200-4q, FAB-8201-4q, FAB-8414-4i, marbles02-4q

https://gerrit.hyperledger.org/r/#/c/19177/;;;","18/Apr/18 10:55 PM;dongming;CR submitted for

FAB-7329, FAB-7331, FAB-7332, FAB-7333

https://gerrit.hyperledger.org/r/#/c/20723/;;;","20/Apr/18 5:12 AM;dongming;merged

leave it open for check-in other scenarios;;;",,,,,,,,,,,,,,,,,,
wrong link is pointed in the fabric-samples README on release branch,FAB-8561,28068,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,28/Feb/18 5:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 4:45 AM,,,,,,,fabric-samples,,,,0,fabric-samples,quality,,,," README file on fabric-samples repo release branch is pointing to [latest|http://hyperledger-fabric.readthedocs.io/en/latest/getting_started.html] getting_started readthedocs instead of [release|http://hyperledger-fabric.readthedocs.io/en/release/getting_started.html] version.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz3r:",,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 5:19 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/18489/;;;",,,,,,,,,,,,,,,,,,,,,,
Identity concept doc not in TOC,FAB-8562,28072,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,28/Feb/18 5:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 5:57 AM,v1.1.0,,,v1.1.0,,,fabric-docs,,,,0,,,,,,Merging the conceptual doc on Membership removed the Identity doc from the TOC (index.rst should have been updated before merging).,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz53:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 5:48 AM;denyeart;This can go to 1.1, but in general we are not tagging doc improvements as must-fix.;;;",,,,,,,,,,,,,,,,,,,,,,
add debug output to first-network,FAB-8564,28076,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,28/Feb/18 8:35 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,01/Mar/18 1:36 PM,v1.1.0-alpha,,,v1.1.0,,,fabric-samples,,,,0,,,,,,It would help in debugging (and understanding) the byfn tutorial better if the various commands were echo'ed to the output. add debug output to first-network/byfn.sh and first-network/scripts/script.sh and first-network/scripts/utils.sh,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyz5j:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 10:25 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/18499/;;;",,,,,,,,,,,,,,,,,,,,,,
Load CA Registrar key/cert from configuration,FAB-8566,28079,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,28/Feb/18 11:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Feb/18 10:15 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Currently, CA Registrar (key/cert) can be loaded only from the user store. This change allows embedding the CA registrar keys and cert in configuration. The registrar user name is taken from the CA configuration.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz5z:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
CR https://gerrit.hyperledger.org/r/#/c/18411/ does not work in vagrant env,FAB-8567,28080,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,manish-sethi,manish-sethi,28/Feb/18 1:14 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 10:37 AM,,,,v1.1.0,,,fabric-samples,,,,0,must-fix,,,,,The CR [https://gerrit.hyperledger.org/r/#/c/18411/] has an issue when executing the byfn script with -p flag. It does not allow docker containers to start because of filesystem mount issue in the vagrant folder.,,denyeart,jyellick,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz67:",,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Feb/18 1:19 PM;jyellick;A solution is available in review, but requires patching both master and release.

https://gerrit.hyperledger.org/r/18507 [FAB-8567] Remove explicit persistence path (r)
https://gerrit.hyperledger.org/r/18509 [FAB-8567] Remove explicit persistence path (m)

Thanks to [~sanchezl] for the bulk of this solution from his comment on https://gerrit.hyperledger.org/r/c/18411/;;;","28/Feb/18 5:03 PM;denyeart;Adding to must-fix list, as we don't want to be changing our persistence approach across releases.

Let's review under master branch CR [https://gerrit.hyperledger.org/r/18509] , and then do the same for release branch.;;;","01/Mar/18 4:38 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/18535/] Alternative approach (release branch)

[https://gerrit.hyperledger.org/r/#/c/18539/] Alternative approach (master branch);;;",,,,,,,,,,,,,,,,,,,,
BYFN - new image flag (-i) does not work with (-s couchdb) flag,FAB-8568,28081,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,28/Feb/18 5:39 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 1:06 AM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"As of 1.1 alpha timeframe, 3rd party images do not follow the same docker IMAGE_TAG versioning as the other Fabric docker images.

Need to remove IMAGE_TAG from couchdb images, and default to latest couchdb image, which is how it worked prior to the -i introduction.

This change needs to be made in master branch but not release branch, since the IMAGE_TAGs are aligned in 1.0.x release.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz6f:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Make block buffers depend on memory size and not only on message size,FAB-8569,28082,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yacovm,yacovm,28/Feb/18 6:24 PM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,fabric-gossip,,,,0,,,,,,"Currently, gossip stores blocks in several places: 
* Message store, to know if a message was received before, or not, and also to be used by the pull mechanism to provide blocks to other peers that request them
* Payload buffer (in the state module) to reorder blocks that are received.

This poses a problem when blocks are huge. i.e 10MB blocks might sum up to 1GB of memory.



[~C0rWin]",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyz6n:",,,,Unset,,,,,,Unset,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
Reduce log severity of adding payload which was already added before,FAB-8570,28083,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Feb/18 8:47 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,01/Mar/18 12:16 AM,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,"Gossip enqueues blocks into the payload buffer via different mechanisms:
- State transfer anti-entropy
- Pull
- Push

Whenever an attempt to add a block to the payload buffer which was already added before by some other pathway - a warning is logged.

I think we should make that warning a debug, since it's not something that users should be worried about. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyz6v:",,,,Unset,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Sunset ""Procedure for Upgrade"" from docs",FAB-8572,28086,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,28/Feb/18 11:28 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 8:39 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Material covered in ""Procedure for Upgraded to 1.1"" doc now covered by other documentation. Propose to remove it from the TOC.",,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz73:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 8:39 AM;denyeart;Shortened the topic instead:
https://gerrit.hyperledger.org/r/#/c/18563/;;;",,,,,,,,,,,,,,,,,,,,,,
TOC needs correct channel update doc,FAB-8573,28088,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,01/Mar/18 12:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 2:18 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"The doc ""Adding an Org to a Channel"" had its named changed as part of some changes. Another merge reverted the TOC to link to the old doc.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz7b:",,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Nil check missing in VSCCValidateTx,FAB-8575,28090,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,01/Mar/18 2:23 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 11:28 PM,,,,v1.0.7,v1.1.0,,fabric-peer,,,,0,,,,,,"If the ChaincodeId of the header extension from the header, is missing in the transaction - the peer crashes:

{code]
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x18 pc=0x100b42a]

goroutine 377 [running]:
github.com/hyperledger/fabric/core/committer/txvalidator.(*vsccValidatorImpl).VSCCValidateTx(0xc422d62510, 0xc42015e700, 0xc4231f3c00, 0xb01, 0xb01, 0xc4203caf60, 0x0, 0x0, 0xc400000000)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:699 +0x84a
github.com/hyperledger/fabric/core/committer/txvalidator.validateTx(0xc421895f68, 0xc4203c8120)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:350 +0x13b9
github.com/hyperledger/fabric/core/committer/txvalidator.(*txValidator).Validate.func1.1(0xc422d687a0, 0xc4231f3c00, 0xb01, 0xb01, 0xc42015e640, 0x3, 0xc4203c8120)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:180 +0xd6
created by github.com/hyperledger/fabric/core/committer/txvalidator.(*txValidator).Validate.func1
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:177 +0x12c

{code}",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyz7j:",,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Mar/18 2:34 AM;yacovm;Added 2 fixes, 1 for [master|https://gerrit.hyperledger.org/r/#/c/18527/] and 1 for [release|https://gerrit.hyperledger.org/r/#/c/18529/]

Since the peer can only crash, it will not cause a state fork. 
;;;","01/Mar/18 6:01 AM;denyeart;Merged in master branch (1.1).

Changing Fix Version to v1.0.7 for release branch CR (actually to v1.0.6 since v1.0.7 doesn't exist yet).  And lowering to Medium.;;;","07/Mar/18 4:44 PM;denyeart;[~rameshthoomu] This one is failing e2e CI in release branch.  Can you take a look?;;;",,,,,,,,,,,,,,,,,,,,
Fix relative links in Identity and Membership concept docs,FAB-8576,28091,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,01/Mar/18 2:32 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,01/Mar/18 3:22 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Links in Identity and Membership documentation worked, but needed to use more resilient links that use the correct relative paths.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyz7r:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Add Fabric-CA link to Upgrading Network Tutorial,FAB-8577,28092,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,01/Mar/18 3:23 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,01/Mar/18 4:45 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,Upgrading Your Network Components was merged without a link to the Fabric-CA material on that topic. Need this link now that the CA doc has been merged.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyz7z:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Move IdentityManager interface out of fab package,FAB-8583,28105,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,01/Mar/18 5:09 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 11:40 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"IdentityManager interface is not Fabric specific. Default implementation is Fabric CA specific, so it stays under fab.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzan:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
kafka2 shutdown and 2 orderers panic,FAB-8584,28106,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,dongming,dongming,01/Mar/18 5:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 1:19 AM,v1.1.0-alpha,,,v1.1.0,,,fabric-orderer,,,,0,must-fix,,,,,"test scenarios: using PTE to execute -FAB-8208- with 32 threads sending 2 tx per sec on a network of 64 peers, 3 orderers, 4 kafkas, 3 zookeepers, on a vLaunch with 8G RAm 400G harddriver.  After about 30 min, kafka2 and two orderers (orderer0 and orderer1) went down.  Logs are attached.

Fabric code tested: ebe5a68827f8033da5873163aab72dbce12b4d80 from master branch dated Feb 28.",,denyeart,dongming,kchristidis,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8208,,,,,,,,FAB-8626,,,,,,,,,,,,,,,,,"01/Mar/18 5:11 AM;dongming;8208-kafka2-log.txt;https://jira.hyperledger.org/secure/attachment/14706/8208-kafka2-log.txt","01/Mar/18 5:11 AM;dongming;8208-orderer0-log.txt;https://jira.hyperledger.org/secure/attachment/14705/8208-orderer0-log.txt","01/Mar/18 5:11 AM;dongming;8208-orderer1-log.txt;https://jira.hyperledger.org/secure/attachment/14704/8208-orderer1-log.txt","01/Mar/18 5:39 AM;dongming;kafka0-log.txt;https://jira.hyperledger.org/secure/attachment/14707/kafka0-log.txt","01/Mar/18 5:39 AM;dongming;kafka1-log.txt;https://jira.hyperledger.org/secure/attachment/14708/kafka1-log.txt","01/Mar/18 8:08 AM;suryalnvs;multihost_instantiate_8channels.tar.gz.txt;https://jira.hyperledger.org/secure/attachment/14713/multihost_instantiate_8channels.tar.gz.txt","01/Mar/18 5:39 AM;dongming;orderer2-log.txt;https://jira.hyperledger.org/secure/attachment/14709/orderer2-log.txt","01/Mar/18 5:39 AM;dongming;zookeeper0-log.txt;https://jira.hyperledger.org/secure/attachment/14710/zookeeper0-log.txt","01/Mar/18 5:39 AM;dongming;zookeeper1-log.txt;https://jira.hyperledger.org/secure/attachment/14711/zookeeper1-log.txt","01/Mar/18 5:39 AM;dongming;zookeeper2-log.txt;https://jira.hyperledger.org/secure/attachment/14712/zookeeper2-log.txt",,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzav:",,,,,,,,,,,,,,,,,,,,,denyeart,dongming,kchristidis,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Mar/18 6:03 AM;scottz;Observations: only 2 of 3 orderers panicked, about 40 secs after kafka2 went down, after seeing a few SERVICE_UNAVAILALBE logs. RAM Memory was low. Plenty of free disk space on hard drive.

We will try to reproduce with orderer log level set to DEBUG instead of ERROR.

This is the panic log in the orderer:
{code:java}
2018-02-28 18:38:06.763 UTC [common/deliver] deliverBlocks -> ERRO 040 [channel: testorgschannel8] Error reading from channel, cause was: SERVICE_UNAVAILABLE panic: interface conversion: ledger.QueryResult is nil, not *common.Block{code};;;","01/Mar/18 7:49 AM;Clayton Sims;[~denyeart]  I removed 'must-fix' tag from this per Kostas and Barry.;;;","01/Mar/18 8:17 AM;suryalnvs;Attached multihost_instantiate_8channels.tar.gz.txt file with logs for 3 orderers, 5 kafkas, 3 zookeepers, and 1 peer with debug logs.

Environment: Total 8 machines with 16gb ram, 160 gb disk space.

5 kafkas are distributed across 5 machines,

3 zookeepers across 3 machines,

3 orderers across 3 machines,

64 peers distributed across 8 machines with 8 peers on each.

we have one orderer, one zookeeper and one kafka on wfabric001, wfabric002, wfabric003 machines.
{code:java}
ubuntu@wfabric001:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            7.9G     0  7.9G   0% /dev
tmpfs           1.6G   26M  1.6G   2% /run
/dev/vda1       156G  5.7G  150G   4% /
tmpfs           7.9G  1.1M  7.9G   1% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
tmpfs           1.6G     0  1.6G   0% /run/user/1000
ubuntu@wfabric001:~$ free -m
              total        used        free      shared  buff/cache   available
Mem:          16046        1331        9244          26        5471       14310
Swap:             0           0           0
{code}
{code:java}
 ubuntu@wfabric002:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            7.9G     0  7.9G   0% /dev
tmpfs           1.6G   26M  1.6G   2% /run
/dev/vda1       156G  5.6G  150G   4% /
tmpfs           7.9G  992K  7.9G   1% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
tmpfs           1.6G     0  1.6G   0% /run/user/1000
ubuntu@wfabric002:~$ free -m
              total        used        free      shared  buff/cache   available
Mem:          16046        1775        8871          26        5399       13868
Swap:             0           0           0

{code}
{code:java}
 ubuntu@wfabric003:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            7.9G     0  7.9G   0% /dev
tmpfs           1.6G   26M  1.6G   2% /run
/dev/vda1       156G  5.6G  150G   4% /
tmpfs           7.9G 1012K  7.9G   1% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
tmpfs           1.6G     0  1.6G   0% /run/user/1000
ubuntu@wfabric003:~$ free -m
              total        used        free      shared  buff/cache   available
Mem:          16046        1351        9270          26        5425       14292
Swap:             0           0           0

{code}
 

 ;;;","01/Mar/18 8:23 AM;scottz;Surya is attaching logs. We reproduced the error, using a different scenario (instantiating a chaincode in 4 channels simultaneously). This time we are sure there was no memory problem. But, like last time, we ran several docker containers on a single host (this time, each host has something like 8 peers and an orderer and/or kafka and/or a zookeeper). So, [~kchristidis] 's theory still makes sense - about the root cause of the trouble on the zookeeper stemming from the fact the i/o contention. (Refer to https://community.hortonworks.com/articles/105059/zookeeper-health-checks.html .) And we realize that good production environments should set up ZKs on their own host; that is an existing ZK recommendation.

But we would still like to make sure the orderer handles the situation better than panicking because of a null pointer.;;;","01/Mar/18 8:51 AM;denyeart;[~kchristidis] What's your opinion on the null pointer?;;;","01/Mar/18 11:47 AM;kchristidis;[~scottz], [~suryalnvs]:
 # How many channels are there total? (Scott talks about 4 channels, the log attached by Surya talks about 8 channels.) What are their names? (UPDATE: Based on what I see in the logs: {{firstchannel}}, and {{testorgschannel1-8}}?)
 # How many blocks have your client(s) received on each?
 # Please list the contents of the {{/var/hyperledger/production/orderer}} directory on each of the orderers. (Include the contents of subdirectories.);;;","01/Mar/18 11:53 AM;suryalnvs;We had created 8 channels in total, but separated out the instantiation into two. We did instantiation on first 4 channels and seen the issue. The channel names are testorgschannel1, testorgschannel2 through testorgschannel8. I am not sure about the blocks.;;;","01/Mar/18 12:04 PM;kchristidis;Surya, thanks for the follow-up.

I will need the info about the blocks when you have it handy.

Can you please also provide me with a play-by-play of every step exercised by your test?

You have given me the hardware setup above (wfabric001 to 003), but what exactly happens in the test is a bit fuzzier than it should be (note: I did read FAB-8208). Something along these lines will help:
 # 8 channels are created: foo, bar, baz, ...
 # The same chaincode is instantiated on channels foo, bar, ...
 # 32 threads start invoking these chaincodes at a rate of 2tps. (How are the requests spread out across channels?)
 # How about delivery? (etc., etc.);;;","01/Mar/18 12:08 PM;kchristidis;While I'm looking at this tomorrow, I'd like to ask that we spend some cycles on the following - let's attempt to find the minimum possible configuration that gives this error. For example: can we reproduce with just 1 channel? Please keep the DEBUG level for Fabric logs, but feel free to turn down the verbosity for the sarama logger. This doesn't seem to be part of the problem.;;;","01/Mar/18 1:09 PM;denyeart;[~kchristidis] I think Scott's concern isn't so much that kafka/zookeeper had a problem, but how orderer handled the problem.  Specifically when the iterator exited prematurely and a nil result comes out, the nil is attempted to be converted into a block:

[https://github.com/hyperledger/fabric/blob/master/common/ledger/blockledger/file/impl.go#L73]

I think a nil check needs to be added there and handled gracefully.

[~manish-sethi] can speak more to the iterator contract, if that is needed. 

 ;;;","01/Mar/18 1:27 PM;kchristidis;Been studying the logs and the iterator code in detail after the original post and yes, you're right -- I'm at the same spot.;;;","01/Mar/18 1:28 PM;kchristidis;Will have this fixed tomorrow.;;;","01/Mar/18 2:20 PM;kchristidis;So building on what Dave reported, here's the play-by-play of how the bug comes to be:
 # The Deliver handler has spawned a goroutine that waits for the next block from the ledger: [https://github.com/hyperledger/fabric/blob/v1.1.0-alpha/common/deliver/deliver.go#L304]
 # The Deliver handler is also listening on the local cancel channel for anything that may go wrong in the orderer-to-Kafka connection: [https://github.com/hyperledger/fabric/blob/v1.1.0-alpha/common/deliver/deliver.go#L312]
 # The cancel channel closes because the orderer-to-Kafka connection breaks.
 # The Deliver handler closes the iterator and is then about to return an error message to the invoker but...
 # That closing of the iterator means that the iterator returns a {{nil}} block and a {{nil}} error (as they should): [https://github.com/hyperledger/fabric/blob/v1.1.0-alpha/common/deliver/deliver.go#L77]
 # This {{nil, nil}} combo is not expected by the goroutine (see step 1) which tries to convert the first return value into a block, thinking that it's business as usual: [https://github.com/hyperledger/fabric/blob/v1.1.0-alpha/common/ledger/blockledger/file/impl.go#L73]

On a sidenote, I suspect that the problem stems from a misunderstanding from our side of what the {{Next}} method of the {{Iterator}} interface is supposed to do. It _is_ the case that ""Next blocks until there is a new block available, or returns an error if the next block is no longer retrievable"" for the JSON and RAM ledgers, but this is no longer the case for the file ledger (which wraps the block ledger) because now Next can also block until Close is called. (I will leave the comment on that interface intact for now, but this is a good cue for us to remove the RAM/JSON implementations.)

Anyway, non-fancy patch pushed here: [https://gerrit.hyperledger.org/r/c/18585/];;;","02/Mar/18 4:11 AM;dongming;Retest with the fix,  the orderer logs show the same ""SERVICE_UNAVAILBLE"" message in deliverBlocks, but orderer panic does not occur when kafkas go down..

2018-03-01 17:54:18.872 UTC [common/deliver] deliverBlocks -> ERRO 2c7 [channel: testorgschannel3] Error reading from channel, cause was: SERVICE_UNAVAILABLE
2018-03-01 17:54:18.862 UTC [common/deliver] deliverBlocks -> ERRO 2c6 [channel: testorgschannel3] Error reading from channel, cause was: SERVICE_UNAVAILABLE

 ;;;","02/Mar/18 6:28 AM;kchristidis;Great. That is the expected behavior. Thanks for the update.

The overall problem that you're seeing with this test is most likely due to ZK having to contend for disk access with other process. The article that Scott linked to above is a good introduction into the problem: https://community.hortonworks.com/articles/105059/zookeeper-health-checks.html;;;",,,,,,,,
Small fixes to Upgrade doc,FAB-8586,28108,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,01/Mar/18 5:14 AM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,01/Mar/18 6:07 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Need to add in a few loose ends from the ""Procedure for Upgrading from 1.0.x"" doc that were not in tutorial to ensure that ""Procedure"" doc can be slimmed down and made entirely high level.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzbb:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Slim down ""Procedure for Upgrade"" doc",FAB-8588,28114,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,01/Mar/18 5:48 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,01/Mar/18 8:33 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"Want to keep some ops guide doc for upgrade, but something short and high level that points to the Upgrading Your Network Components tutorial and the doc on Capability Requirements.",,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzbz:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Confusion around having 'Latest' and 'Master' version of the docs,FAB-8589,28115,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pandrejko,pandrejko,01/Mar/18 6:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,05/Mar/18 10:15 AM,,,,v1.1.0,,,fabric-docs,,,,0,fabric,quality,,,,"There's been confusion about why we provide both a 'Latest' and 'Master' version of the docs:

[https://hyperledger-fabric.readthedocs.io/en/master/]

[https://hyperledger-fabric.readthedocs.io/en/latest/]

Our understanding is that they are identical and that the 'Latest' version of the docs simply points to the 'master' version. Is there a business need to have both versions? If not could we remove one of them?",,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8629,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzc7:",,,,,,,,,,,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Mar/18 10:15 AM;denyeart;Agreed, this is being actively discussed in FAB-8629 and we will likely refactor readthedocs after 1.1 release to include 3 releases only:
 * release-1.0
 * release-1.1
 * master (aka latest)

Let's continue the discussion in FAB-8629.  I'll return this one as dup.;;;",,,,,,,,,,,,,,,,,,,,,,
Fix upgrade documentation to align with samples change,FAB-8590,28116,28080,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,01/Mar/18 6:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 10:37 AM,,,,,,,fabric-docs,,,,0,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzcf:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Error message misleading to users: error validating ReadSet: readset expected key [Group]  /Channel/Application at version 0, but got version 1",FAB-8591,28117,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,pandrejko,pandrejko,01/Mar/18 7:05 AM,09/May/19 9:09 AM,28/Oct/23 3:02 AM,15/Mar/19 7:21 PM,,,,v1.4.1,v2.0.0,,fabric-orderer,,,,0,fabric,quality,,,,"*Error: got unexpected status: BAD_REQUEST -- error authorizing update: error validating ReadSet: readset expected key [Group]  /Channel/Application at version 0, but got version 1*

 

I'm running BYFN and found that when I run the command 

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

it fails with the error listed above.

 

After spending alot of time debugging this we found out that the problem was that the command was failing because the channel already existed (since it had been already created by the docker-compose-cli.yaml script). We need to improve the error message

 

Can we change the text of this error message to be more specific. Something that includes the text like the 'Channel already exists'?

 

 

 ",,denyeart,jyellick,mastersingh24,pandrejko,qizhang87,Sambhav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzhj:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,mastersingh24,pandrejko,qizhang87,Sambhav,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/18 2:41 AM;mastersingh24;While I agree with possibly improving this, it's not a bug.  Generally, we should not be revealing this much info, but at least it's very obscure.  In some circles, revealing that the channel exists is actually a security vulnerability.  I'm marking this for consideration as an improvement and pushing to v1.3.

 

[~kchristidis]  [~jyellick] - what do you think?;;;","16/Jun/18 3:42 AM;jyellick;Under the covers, channel creation is actually applying a config update to an ephemeral channel configuration.  If it's successful, the channel is created, if it's unsuccessful, the channel creation fails.  The reason we chose to approach it this way, was so that we could have a single, well vetted path for authorizing changes to configuration (as at channel creation time, the channel creator may or may not have authority to modify different fields -- for instance, a channel creation could set anchor peers for its the submitting org, but we would not want it to set anchor peers for another org).

We waffled on whether unauthorized access should be returned as 'unauthorized', or, whether we should obfuscate it with something like 'not found' but ultimately decided to return unauthorized.  In this case however, the submitter does have authority to submit transactions to this channel, otherwise the error would have been an immediate unauthorized.  but because the channel exists, it is treating the channel creation transaction as a config update against the real (non-ephemeral) configuration for the channel. 

We could probably tweak the returned message to be a little more clear.  Something like:

BAD_REQUEST – channel <channel_id> will not be updated: error authorizing update: error validating ReadSet: readset expected key [Group]  /Channel/Application at version 0, but got version 1;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:20 PM;denyeart;Multiple people in the community have been struggling with this error, let's resolve at part of the v1.4 serviceability initiative.;;;","20/Dec/18 2:43 PM;qizhang87;I got the same error msg from the orderer log, and followed by a peer connection reset which results in the client failed to connect to the peer by grpc. The error msg is confusing and not easy to figure out where to look at.;;;","20/Dec/18 7:48 PM;denyeart;I've continued to get pinged by multiple people who cannot figure out this error message and are stuck.

The error message needs to make sense to a user and be actionable.  If the user has enough privilege to create a channel, they should have enough privilege to get an error message that says the channel they are trying to create has already been created.

As this is causing many users problems, I'm switching back to bug so that it can be fixed in v2.0.0 and v1.4.1.  [~jyellick] [~kchristidis];;;","06/Jan/19 1:03 AM;denyeart;Additional users have pinged me upon hitting this error message for config updates, and having no idea what it means. The latest example was when attempting to update anchor peers:
{code:java}
WARN 076 [channel: mainchannel] Rejecting broadcast of config message from 172.25.0.23:39260 because of error: error authorizing update: error validating ReadSet: readset expected key [Group] /Channel/Application at version 1, but got version 3{code}
I've made the issue title more generic, as the message needs to be improved for any config update failure.;;;","06/Mar/19 11:53 AM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/29867/;;;",,,,,,,,,,,,,,,
Fix broken doc link,FAB-8593,28121,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,denyeart,denyeart,01/Mar/18 8:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 10:35 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"The first link on this page is broken:

[http://hyperledger-fabric.readthedocs.io/en/master/config_update.html]

It should link to channel_update_tutorial instead of channel_config_tutorial.

Joe, could you do a final check for bad links on the topics that have been updated recently?",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx07r:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Code box missing from Upgrade doc,FAB-8594,28122,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,01/Mar/18 8:55 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,01/Mar/18 10:38 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,Missing code block.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzcv:",,,,Unset,,,,,,Unset,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Cannot run peer because error when setting up MSP of type bccsp from directory /etc/hyperledger/msp: signing identity expired 2623h16m32.675625837s ago,FAB-8595,28123,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,doowb,doowb,01/Mar/18 9:27 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Mar/18 5:35 AM,,,,,,,fabric-samples,,,,0,,,,,,"Hi,

I had run the `chaincode-docker-devmode` sample using version x86_64-1.0.6 of the docker images. When I updated to using version x86_64-1.1.0-alpha of the docker images, I get the following error when running: `docker-compose -f docker-compose-sample.yaml up`:

> Cannot run peer because error when setting up MSP of type bccsp from directory /etc/hyperledger/msp: signing identity expired 2623h16m32.675625837s ago

I'm not really sure where else to ask this since I recently started using hyperledger technologies and I'm not exactly sure how to debug an error like this. My main goal was to use version 1.1.0-alpha so I could write chaincode in node.js.

Thanks,
Brian",,denyeart,doowb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzd3:",,,,,,,,,,,,,,,,,,,,,denyeart,doowb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 5:35 AM;denyeart;Two thoughts:
 * Restart your docker environment, I've seen my docker environment get the wrong timestamp before, and restarting it fixed it.
 * Move to 1.1.0-rc1 (Release Candidate 1).  Expiring certificates have been updated between alpha1 and rc1.

As others are having success on 1.1.0-rc1, I will close this issue.;;;",,,,,,,,,,,,,,,,,,,,,,
Simplify Enroll and Reenroll,FAB-8597,28125,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,01/Mar/18 11:40 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 11:54 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,"IdentityManager's Enroll and Reenroll functions now return the private key and the enrollment cert generated during the enrollment/reenrollment process. This was necessary before recent changes, to allow the application to manage certs and keys in a custom manner. This is no longer required, as the SDK performs this management in the SDK stores. Application can obtain user's key and cert by calling IdentityManager.GetSigningIdentity(). So we don't need Enroll and Reenroll to return the key and the cert any more.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzdj:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are failing in s390x build,FAB-8598,28126,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,rameshthoomu,rameshthoomu,01/Mar/18 1:19 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,01/Mar/18 11:19 PM,,,,v1.1.0,,,fabric-build,,,,0,must-fix,,,,,"observed fabric unit-tests are failing consistently in s390x build. Below is the error log
{code:java}
00:06:33.846 unit-tests_1  | VMCBuildImage-waiting for response
00:06:33.850 unit-tests_1  | 2018-03-01 04:02:21.486 UTC [dockercontroller] deployImage -> ERRO 001 Error building images: no matching manifest for linux/s390x in the manifest list entries
00:06:33.852 unit-tests_1  | 2018-03-01 04:02:21.486 UTC [dockercontroller] deployImage -> ERRO 002 Image Output:
00:06:33.853 unit-tests_1  | ********************
00:06:33.854 unit-tests_1  | Step 1/2 : FROM busybox:latest
00:06:33.854 unit-tests_1  | Pulling from library/busybox
00:06:33.855 unit-tests_1  | 
00:06:33.856 unit-tests_1  | ********************
00:06:33.857 unit-tests_1  | VMCStartContainer-waiting for response
00:06:33.860 unit-tests_1  | 2018-03-01 04:02:21.490 UTC [dockercontroller] Start -> ERRO 003 start-could not find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because of no such image
00:06:33.862 unit-tests_1  | VMCStartContainer-waiting for response
00:06:33.863 unit-tests_1  | 2018-03-01 04:02:21.498 UTC [dockercontroller] Start -> ERRO 004 start-could not find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because of no such image
00:06:33.864 unit-tests_1  | --- FAIL: TestVMCCreateAndStartContainer (0.01s)
00:06:33.865 unit-tests_1  |     controller_test.go:223: docker error starting container: no such image
00:06:33.868 unit-tests_1  | 2018-03-01 04:02:21.505 UTC [dockercontroller] Start -> ERRO 005 start-could not find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because of no such image
00:06:33.870 unit-tests_1  | VMCStopContainer-waiting for response{code}
https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-s390x/59/consoleFull",,denyeart,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzdr:",,,,,,,,,,,,,,,,,,,,,denyeart,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 1:47 PM;denyeart;[~greg.haskins] [~muralisr] [~mastersingh24] It's having trouble building a chaincode image, any ideas?;;;","01/Mar/18 1:50 PM;rameshthoomu;FYI: Working as expected in x86_64 but failing in s390x;;;","01/Mar/18 4:52 PM;harsha544;The issue seems to be busybox not available for ppc64le and s390x, a quick check yields this :-

root@p006vm24:~# ./manifest-tool-linux-ppc64le inspect busybox
Name:   busybox (Type: application/vnd.docker.distribution.manifest.list.v2+json)
Digest: sha256:aaeec02cd3efc3207685f79fcb46d5b3e692981382d0964897ed6494b4f58b76
 * Contains 2 manifest references:
1    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
1       Digest: sha256:c7b0a24019b0e6eda714ec0fa137ad42bc44a754d9cea17d14fba3a80ccc1ee4
1  Mfst Length: 527
1     Platform:
1           -      OS: linux
1           - OS Vers: 
1           - OS Feat: []
1           -    Arch: *amd64*
1           - Variant: 
1           - Feature: 
1     # Layers: 1
         layer 1: digest = sha256:d070b8ef96fc4f2d92ff520a4fe55594e362b4e1076a32bbfeb261dc03322910

2    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
2       Digest: sha256:9c93aab6daa52513bf4b3b36df84a64939b664a6d4fa606d74e070a77264e0da
2  Mfst Length: 527
2     Platform:
2           -      OS: linux
2           - OS Vers: 
2           - OS Feat: []
2           -    Arch: arm
2           - Variant: v6
2           - Feature: 
2     # Layers: 1
         layer 1: digest = sha256:0ef9af8fd5fa0b376fd814fef0cf3646b20e8c3d98adb17c008d26d8d59ce098
root@p006vm24:~# 

Seems to be known problem [https://github.com/docker-library/official-images/issues/3835] 

However *docker pull ppc64le/busybox* & *docker pull s390x/busybox* pulls the relevant docker image 

root@p006vm24:~# *docker pull ppc64le/busybox*
Using default tag: latest
latest: Pulling from ppc64le/busybox
ed2cbc89fa7d: Pull complete 
Digest: sha256:3c5b08ce23cf8610f44b841e34254ee0922295222180c79637230be5717efb80
Status: Downloaded newer image for ppc64le/busybox:latest
root@p006vm24:~# *docker pull s390x/busybox*
Using default tag: latest
latest: Pulling from s390x/busybox
da98aa9087af: Pull complete 
Digest: sha256:6ba746ef4d4e309daaf44780a368f82121d63b7d5640829916d9417c6c97b37b
Status: Downloaded newer image for s390x/busybox:latest
root@p006vm24:~# 

Seems to be a problem where-in manifest isn't doing it's job.;;;","01/Mar/18 9:28 PM;harsha544;The issue seems to be manifests not working since yesterday, hence *docker pull busybox* on s390x/ppc64le was leading to error 
00:06:33.850 unit-tests_1  | 2018-03-01 04:02:21.486 UTC [dockercontroller] deployImage -> ERRO 001 Error building images: no matching manifest for linux/s390x in the manifest list entries
This could be confirmed via *manifest-tool-linux-$ARCH* binary :-

root@p006vm24:~# ./manifest-tool-linux-ppc64le inspect busybox
 Name:   busybox (Type: application/vnd.docker.distribution.manifest.list.v2+json)
 Digest: sha256:aaeec02cd3efc3207685f79fcb46d5b3e692981382d0964897ed6494b4f58b76
  * Contains 2 manifest references:
 1    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
 1       Digest: sha256:c7b0a24019b0e6eda714ec0fa137ad42bc44a754d9cea17d14fba3a80ccc1ee4
 1  Mfst Length: 527
 1     Platform:
 1           -      OS: linux
 1           - OS Vers: 
 1           - OS Feat: []
 1           -    Arch: *amd64*
 1           - Variant: 
 1           - Feature: 
 1     # Layers: 1
          layer 1: digest = sha256:d070b8ef96fc4f2d92ff520a4fe55594e362b4e1076a32bbfeb261dc03322910

2    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
 2       Digest: sha256:9c93aab6daa52513bf4b3b36df84a64939b664a6d4fa606d74e070a77264e0da
 2  Mfst Length: 527
 2     Platform:
 2           -      OS: linux
 2           - OS Vers: 
 2           - OS Feat: []
 2           -    Arch: *arm*
 2           - Variant: v6
 2           - Feature: 
 2     # Layers: 1
          layer 1: digest = sha256:0ef9af8fd5fa0b376fd814fef0cf3646b20e8c3d98adb17c008d26d8d59ce098
 root@p006vm24:~#

The issues seems to be fixed now i.e 

{color:#dd1144}root@p006vm24:/opt/gopath/src/github.com/hyperledger#{color} {color:#dd1144}/root/manifest-tool-linux-ppc64le{color} {color:#dd1144}inspect{color} {color:#dd1144}busybox{color}
{color:#333333}Name:{color} {color:#dd1144}busybox{color} {color:#dd1144}(Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.list.v2+json){color}
{color:#333333}Digest:{color} {color:#333333}sha256:2107a35b58593c58ec5f4e8f2c4a70d195321078aebfadfbfb223a2ff4a4ed21{color}
 {color:#dd1144}*{color} {color:#dd1144}Contains{color} {color:#008080}8{color} {color:#dd1144}manifest{color} {color:#333333}references:{color}
{color:#008080}1{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}1{color} {color:#333333}Digest:{color} {color:#333333}sha256:c7b0a24019b0e6eda714ec0fa137ad42bc44a754d9cea17d14fba3a80ccc1ee4{color}
{color:#008080}1{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}1{color} {color:#333333}Platform:{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}1{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}amd64{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}1{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:d070b8ef96fc4f2d92ff520a4fe55594e362b4e1076a32bbfeb261dc03322910{color}

{color:#008080}2{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}2{color} {color:#333333}Digest:{color} {color:#333333}sha256:a4822cb5d974f375f84c0a534cd6fdbc983ffefba1eeab16d09ccb12028b928c{color}
{color:#008080}2{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}2{color} {color:#333333}Platform:{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}2{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v5{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}2{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:eb54de698b0f6b036c95c527d40572cb58f6c33b9e418b820db3c2bb16f6b895{color}

{color:#008080}3{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}3{color} {color:#333333}Digest:{color} {color:#333333}sha256:9c93aab6daa52513bf4b3b36df84a64939b664a6d4fa606d74e070a77264e0da{color}
{color:#008080}3{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}3{color} {color:#333333}Platform:{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}3{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v6{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}3{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:0ef9af8fd5fa0b376fd814fef0cf3646b20e8c3d98adb17c008d26d8d59ce098{color}

{color:#008080}4{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}4{color} {color:#333333}Digest:{color} {color:#333333}sha256:883b6e95daad4c7ad5f86a0124de945bacc613da3ee0ca17bed6a2e9b848ce27{color}
{color:#008080}4{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}4{color} {color:#333333}Platform:{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}4{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v7{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}4{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:f6c10ed8a46ab25c7a75b857e1c3d5407d0a7dabd1d87f3d54602b5b78c61984{color}

{color:#008080}5{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}5{color} {color:#333333}Digest:{color} {color:#333333}sha256:08c10dde83399a3ff83e21feb679b3942dbe8aa652d49c144e8e544696558d7f{color}
{color:#008080}5{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}5{color} {color:#333333}Platform:{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}5{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm64{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v8{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}5{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:8996f62fa48d6c62cd90205319ded54ed1cfc6bb4b16f2beb405df21279d8d6e{color}

{color:#008080}6{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}6{color} {color:#333333}Digest:{color} {color:#333333}sha256:60282b56cd5b4bcf3c160e124782b740bcde374a667a1f5f9164b243ae05753c{color}
{color:#008080}6{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}6{color} {color:#333333}Platform:{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}6{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#008080}386{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}6{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:ce6583360771ffe85f55f57363c5b614a2308c40c1f092412395f576498c48ee{color}

{color:#008080}7{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}7{color} {color:#333333}Digest:{color} {color:#333333}sha256:d7133b3486ffbca5c7cb148909c5870be1b92ff3b7278c1a2173a6744559c823{color}
{color:#008080}7{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}528{color}
{color:#008080}7{color} {color:#333333}Platform:{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}7{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}ppc64le{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}7{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:8bcf05d0d38f745dc25a783b447393f3491672b5ba264cfe273726e6f8e1cd16{color}

{color:#008080}8{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}8{color} {color:#333333}Digest:{color} {color:#333333}sha256:1812deac047ecc0e4640c412c103c4c10ab64df972b98a8f8080b3b0dc5fab15{color}
{color:#008080}8{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}528{color}
{color:#008080}8{color} {color:#333333}Platform:{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}8{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}s390x{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}8{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:87eb32991dd283847b756651dafc581ea1c10dd14fdc852fe53bf6d8021b60d8{color}

{color:#dd1144}root@p006vm24:/opt/gopath/src/github.com/hyperledger#


{color:#333333}Request [~rameshthoomu] {color}{color}to trigger one more build on s390x.;;;","01/Mar/18 11:18 PM;rameshthoomu;Thanks [~harsha544] for looking into this. It's working now. https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-s390x/61/console;;;",,,,,,,,,,,,,,,,,,
[fabric-samples] byfn.sh delete my own running containers,FAB-8600,28138,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,alexliu,Revolution1,Revolution1,01/Mar/18 7:09 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,28/Mar/18 4:03 AM,,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"The function clearContainers() in byfn.sh delete all containers on the computer when ""byfn.sh -m down""

This function is useless, docker-compose can handle things well. Better just delete it.",,alexliu,jyellick,Revolution1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzgf:",,,,,,,,,,,,,,,,,,,,,alexliu,jyellick,Revolution1,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Mar/18 1:11 PM;alexliu;[https://gerrit.hyperledger.org/r/#/c/19583/]

Sure I can use docker-compose to complete this. But I think this function is not useless, maybe it will be used for another function, not just 'networkDown', removing it makes me feel too tight.;;;","22/Mar/18 1:23 PM;alexliu;https://gerrit.hyperledger.org/r/#/c/19583/;;;","24/Mar/18 12:02 AM;jyellick;I agree with [~alexliu]. The docker-compose down can miss chaincode containers which are running.  It's a bug that should be fixed, but I think it needs to be done via something like awk as implemented in the CR.;;;",,,,,,,,,,,,,,,,,,,,
"'when', 'then' are undefined names in ./bddtests/steps/endorser_impl.py",FAB-8601,28139,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,cclauss,cclauss,01/Mar/18 7:13 PM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,21/Apr/18 7:06 AM,,,,,,,fabric-quality,,,,0,quality,,,,,"*when* and *then* are undefined names in the file *./bddtests/steps/endorser_impl.py*

 

Undefined names can raise *NameError* at runtime.

 

A fix is proposed in https://github.com/hyperledger/fabric/pull/111",,cclauss,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzgn:",,,,,,,,,,,,,,,,,,,,,cclauss,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 11:26 AM;luomin;https://gerrit.hyperledger.org/r/#/c/18671/;;;","16/Mar/18 8:55 AM;cclauss;PEP8 is clear that [wildcard imports should be avoided|https://www.python.org/dev/peps/pep-0008/#imports] so *from behave import when, then* would be a better approach than *from behave import \**;;;","16/Mar/18 11:12 AM;luomin;[~cclauss] Appreciate very much for the comments. I modified it accordingly. Thanks for a review.;;;",,,,,,,,,,,,,,,,,,,,
E2E docker-compose does not have volumes,FAB-8602,28140,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,vramaiitkgp,vramaiitkgp,01/Mar/18 8:03 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 1:31 AM,,,,,,,fabric-samples,,,,0,must-fix,,,,,"In 'first-network', running 'docker-compose -f docker-compose-e2e.yaml up' throws errors as the YAML file doesn't have the following base volumes defined (which are referenced in 'base/docker-compose-base.yaml', on which the 'e2e' YAML depends):
-  orderer.example.com:
-  peer0.org1.example.com:
-  peer1.org1.example.com:
-  peer0.org2.example.com:
-  peer1.org2.example.com:

 

This can be fixed by the applying the change in [https://github.com/hyperledger/fabric-samples/commit/5271be875e5eda8c2813fa7ccec9c06865bab4ae#diff-28af33799b19de744da20eb15214ea11] to the file 'first-network/docker-compose-e2e-template.yaml'.",,eragnoli,jyellick,vramaiitkgp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzgv:",,,,,,,,,,,,,,,,,,,,,eragnoli,jyellick,vramaiitkgp,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Mar/18 10:49 PM;jyellick;I'm not sure where to find the script which is actually executing this, but I suspect that it may need a change as well.

In particular – please add:

{noformat}
 docker-compose -f docker-compose-e2e.yaml down --volumes --remove-orphans
{noformat}

prior to executing the {{docker compose -f docker-compose-e2e.yaml up}}

Or you are likely to experience failures.

CR for fixing up the template pushed:  https://gerrit.hyperledger.org/r/18591;;;","02/Mar/18 1:47 AM;jyellick;[~vramaiitkgp] For my own edification... how is this compose file being used? It is not used by the {{byfn.sh}} script, and does not appear to be being used by the CI.;;;","02/Mar/18 6:39 PM;vramaiitkgp;[~jyellick] We are using this compose file in conjunction with our performance benchmarking test harness (based on the `fabric-node-js` SDK). Folks in MRL (Australia) and ICBI (Singapore) built a wrapper around the SDK to simplify network- and application-launching operations, initially targeted at our use case, but built to be more generic. Here are links to these projects:
 * [https://github.ibm.com/icbi/fabric-client-wrapper]
 * [https://github.ibm.com/hlfperf/hfbench-harness-nodejs]

I know the `byfn.sh` script doesn't depend on the e2e compose file, as it runs and tests a network using CLI. But the e2e compose is very useful for those of us who want to create a ""real"" application from scratch.;;;",,,,,,,,,,,,,,,,,,,,
Add ability to construct channel config outside configtxgen,FAB-8603,28143,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,d.zhvakin,d.zhvakin,01/Mar/18 8:24 PM,08/Aug/19 6:15 PM,28/Oct/23 3:02 AM,,,,,,,,fabric-modules,fabric-tools,,,0,,,,,,"As a developer I want to construct channel config block outside of *configtxgen* tool.

My proposal is making MSPConfig to interface, which allows to construct your own configs",,d.zhvakin,TiantianGao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzhb:",,,,Unset,,,,,,Unset,,,,,,,,,,,d.zhvakin,TiantianGao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing Warning/Error with Mixed OUEnabled network,FAB-8605,28145,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,adc,latitiah,latitiah,01/Mar/18 9:07 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 12:09 AM,v1.1.0,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,"When setting the crypto.yaml's `EnableNodeOUs` flag to true for 1 organization and false for a separate organization, the transactions continue to complete successfully. I would expect that there would be a warning or error when this is done.
{code}PeerOrgs:
  - Name: Org1ExampleCom
    Domain: org1.example.com
    EnableNodeOUs: true
    Template:
      Count: 2
    Users:
      Count: 2

  - Name: Org2ExampleCom
    Domain: org2.example.com
    EnableNodeOUs: false
    Template:
      Count: 2
    Users:
      Count: 2{code}

Certificate details:
peer0.org1.example.com:
{code}Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            7d:24:f4:00:bb:03:e6:53:a9:e8:9a:93:d0:27:2c:7b
    Signature Algorithm: ecdsa-with-SHA256
        Issuer: C=US, ST=California, L=San Francisco, O=org1.example.com, CN=ca.org1.example.com
        Validity
            Not Before: Mar  1 11:08:19 2018 GMT
            Not After : Feb 27 11:08:19 2028 GMT
        Subject: C=US, ST=California, L=San Francisco, OU=peer, CN=peer0.org1.example.com
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub: 
                    04:75:47:31:d6:91:cb:3d:49:e6:09:bf:81:4d:61:
                    f9:69:48:d8:96:83:31:1d:96:c4:7f:61:c6:76:ba:
                    8d:34:1d:4d:65:65:c5:dd:5f:77:e3:1b:27:90:e6:
                    01:1f:07:a9:55:0c:80:05:01:a2:e2:ac:e5:c1:e8:
                    76:8a:b5:35:73
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Authority Key Identifier: 
                keyid:66:AE:4E:4E:A3:B3:B1:4C:6C:62:41:C5:B9:6D:36:79:B2:05:0C:CC:05:28:3B:68:63:F6:3F:A7:3E:6C:FA:9D

    Signature Algorithm: ecdsa-with-SHA256
         30:44:02:20:32:c1:27:83:8e:7b:d8:37:37:24:5c:16:aa:cc:
         87:3c:5b:21:6c:4e:4c:09:cf:63:aa:bd:6e:5e:36:28:df:4f:
         02:20:1b:6c:73:89:38:e8:9d:93:fa:9b:46:a0:c6:b7:d1:f5:
         3e:d0:cf:6e:f6:c2:5b:23:e3:3e:70:b9:d6:cb:62:b2{code}
peer0.org2.example.com:
{code}Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            68:0c:be:52:ac:c9:d8:25:89:d0:84:df:d4:6c:4a:b7
    Signature Algorithm: ecdsa-with-SHA256
        Issuer: C=US, ST=California, L=San Francisco, O=org2.example.com, CN=ca.org2.example.com
        Validity
            Not Before: Mar  1 11:08:19 2018 GMT
            Not After : Feb 27 11:08:19 2028 GMT
        Subject: C=US, ST=California, L=San Francisco, CN=peer0.org2.example.com
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub: 
                    04:61:36:bb:5e:1a:b7:3b:83:29:93:af:63:91:b8:
                    59:ca:2b:e1:d9:fa:bf:c0:b5:2c:bc:9f:8f:98:ac:
                    42:65:df:87:9c:fb:f4:3a:9c:de:f5:76:e8:04:d7:
                    74:8a:56:2b:10:81:05:6d:26:56:f6:e7:87:19:65:
                    cd:6f:08:09:94
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Authority Key Identifier: 
                keyid:98:FA:FB:3F:5B:CB:FA:17:71:96:2A:FD:84:97:05:A5:66:66:27:80:C1:3D:D0:C0:8F:B0:48:14:5F:33:90:7E

    Signature Algorithm: ecdsa-with-SHA256
         30:45:02:21:00:e8:d4:9e:2e:9d:f8:cd:a3:28:d5:08:7b:1a:
         92:dc:05:76:3c:cb:cd:ed:06:f8:6a:ea:7c:40:d2:24:ad:ee:
         82:02:20:5c:05:ee:c5:94:27:d7:f9:44:29:83:72:7b:47:20:
         52:99:00:18:38:96:40:0e:98:8a:dc:7b:32:6d:58:6a:40{code}

Note: Org2 OU field is missing from the certificate subject

You can reproduce this issue by using e2e. Modify the crypto-config.yaml setting the flags as stated above.",,angelo.decaro,denyeart,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 9:06 PM;latitiah;orderer.example.com.log;https://jira.hyperledger.org/secure/attachment/14716/orderer.example.com.log","01/Mar/18 9:07 PM;latitiah;peer0.org1.example.com.log;https://jira.hyperledger.org/secure/attachment/14715/peer0.org1.example.com.log","01/Mar/18 9:07 PM;latitiah;peer0.org2.example.com.log;https://jira.hyperledger.org/secure/attachment/14714/peer0.org2.example.com.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzhz:",,,,,,,,,,,,,,,,,,,,,angelo.decaro,denyeart,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 10:33 PM;denyeart;[~latitiah] [~scottz]

I believe e2e only sends invokes to peer0.org1.example.com, which does have the `peer` role, and therefore these transactions will indeed continue to pass endorsement validation and succeed.

If you change Org1 to be:
EnableNodeOUs: false
then I expect it would fail endorsement validation.  Please try that.;;;","01/Mar/18 10:47 PM;angelo.decaro;Actually, on my machine, the transaction fails validation. -^At beginning, I thought this was strange as you said [~denyeart]. But then I checked how the policies are evaluated and found that even in an OR clause, all the children are evaluated. Therefore the failure, because Org2's MSP does not recognise '.peer'. Btw, this behaviour avoids forking. ^-

Still investigating.;;;","01/Mar/18 11:58 PM;angelo.decaro;So, after having cleaned up my machine. I got the transactions validated as [~latitiah] reports. I checked also the second scenario by [~denyeart] and the transactions fails validation there.

This is not a bug. This is the expected behaviour.;;;","02/Mar/18 12:09 AM;denyeart;Ok great, thanks for trying both the validation scenario and invalidation scenario.  I agree this is expected behavior, and will close.;;;","02/Mar/18 12:14 AM;latitiah;Yes, I agree. I received the following error in the logs ""VSCC error: endorsement policy failure, err: signature set did not satisfy policy"";;;",,,,,,,,,,,,,,,,,,
"Could we have the ""Command Reference"" section in readTheDocs better orgainized?",FAB-8608,28152,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,Nishi,Nishi,01/Mar/18 11:22 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-docs,,,,0,stale-item,,,,,"In fabric read-the-docs under section ""Command Reference"" we have ""peer command"" which is followed by actual commands like:

peer channel

peer logging

....

[http://hyperledger-fabric.readthedocs.io/en/latest/commands/peercommand.html]

For better organizing could we have ""peer command"" in Bold something like ""Peer Command(s)"" and have the actual commands to be collapsible or in italics or something to give the user an indication these are the set of command that make up ""Peer Command(s)"" ",,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzjb:",,,,Unset,,,,,,Unset,,,,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Move User out of the pkg/fab package,FAB-8609,28153,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,01/Mar/18 11:53 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 7:24 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"Move the User interface out of pkg/fab.

Hide implementation behind IdentityManager, so only IdentityManager can instantiate a User instance.

Cleanup the interface
 * remove setter
 * remove non-utilized functions",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzjj:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Integrate with latest Client Context,FAB-8610,28154,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,02/Mar/18 12:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 7:47 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"- Integrate with the latest context.Client which includes the InfraProvider and DiscoveryProvider
- Remove RegisterConnectionEvent from the EventClient interface since this is an option when creating an events client
",,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzjr:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Channel update (EYFN) tutorial should mention setting log level for CLI container when running manual steps,FAB-8611,28155,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,02/Mar/18 12:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 2:12 AM,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"The channel update tutorial currently only mentions setting the log level to debug for the Org3CLI container, when the tutorial actually shows debug output for the original CLI container as well. The doc should be updated to state that both CLI containers should have their log level set to debug when running the steps manually to ensure the log output noted in the tutorial matches that output the user will see.. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzjz:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 12:42 AM;wlahti;https://gerrit.hyperledger.org/r/c/18597;;;",,,,,,,,,,,,,,,,,,,,,,
Fix cleanup logic in byfn.sh/eyfn.sh for volumes,FAB-8612,28157,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Mar/18 12:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/May/18 1:47 AM,v1.1.0,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"There is some goofy cleanup of volumes going on in fabric-samples/first-network.

In particular, the compose is being downed removing volumes (but having no affect on the volumes), then other cleanup, then downed again remove the volumes

Most likely, we can fix all of this in eyfn.sh by including a --remove-orphans.

We likewise can probably cleanup the down process in byfn.sh by doing the same.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzkf:",,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 5:48 AM;jyellick;In review via:  https://gerrit.hyperledger.org/r/22085;;;",,,,,,,,,,,,,,,,,,,,,,
Create release jobs for fabric-sdk-node & fabric-chaincode-node.,FAB-8613,28158,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,02/Mar/18 1:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Mar/18 2:14 AM,,,,v1.2.0,,,fabric-ci,,,,0,fabric-ci,,,,,"We publish npm modules from fabric-sdk-node-merge_x86_64 and fabric-chaincode-node-merge-x86_64 CI jobs after verify the release version from the package.json. We follow below approach to release npm modules
 * publish as unstable if the release is a unstable version
 * publish as stable if it is a release version (non snapshot)

Merge job fails when a patch is merged on a released version (say from release branch, when we merge a patch on already published release version 1.0.4, Jenkins don't overwrite the existing published versions).. That's the issue we are observing now.

The proposed flow fix this issue, will publish stable npm modules for every release and snapshots on every merge.",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzkn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 4:32 AM;rameshthoomu;[~harrisob@us.ibm.com] [~jimthematrix] thoughts ??;;;","14/Mar/18 12:30 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18903/;;;",,,,,,,,,,,,,,,,,,,,,
"Update e2e and byfn to compute anchor peer updates, rather than rely on configtxgen",FAB-8614,28160,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,02/Mar/18 1:12 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,Future,,,fabric-peer,fabric-samples,,,0,stale-item,,,,,"The e2e and byfn scripts rely on the output of {{configtxgen}} to update anchor peers.  This has always been a bit of a dirty hack, as the output of {{configtxgen}} assumes an untouched network.  For instance, changing anchor peers a second time will always fail.  If other changes have been made, such as modifications to the MSP, setting anchor peers will also fail.

Really, anchor peer updates should be done like any other config update, such as adding a capability or org, and our examples/tests should be fixed to do so.",,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzkv:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
add submodule command to pull the latest commits,FAB-8618,28164,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,rameshthoomu,rameshthoomu,02/Mar/18 2:56 AM,24/Apr/19 11:53 PM,28/Oct/23 3:02 AM,24/Apr/19 11:53 PM,,,,,,,fabric-quality,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzlr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"24/Apr/19 11:53 PM;rameshthoomu;Work has been done and merged in fabric-test repository. https://github.com/hyperledger/fabric-test/blob/master/Makefile#L66;;;",,,,,,,,,,,,,,,,,,,,,,
Marbles example index json files contain reference to data wrapper,FAB-8621,28167,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,02/Mar/18 3:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 5:02 AM,,,,,,,fabric-samples,,,,0,,,,,,"Fabric 1.1 removes the need for a ""data"" wrapper for CouchDB data.  The sample index json files still contains the data wrapper.",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzmf:",,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 4:04 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/18635/;;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB: Reduce exclusive lock holding time on database during the final state update to database,FAB-8622,28168,34310,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Senthil1,Senthil1,Senthil1,02/Mar/18 4:15 AM,23/Jan/20 7:31 AM,28/Oct/23 3:02 AM,23/Jan/20 7:31 AM,,,,v1.4.0,,,fabric-ledger,,,,0,Ledger,stale-item,,,,"Currently, ledger transaction manager acquires an exclusive lock on the database before calling ApplyUpdates(). Within this locking period only, we fetch revision number of missing keys and check whether the document is either JSON or attachment, and add certain metadata filed to the document. As this exclusive lock affects the time taken to simulate a transaction, it would be better to remove certain operation such as loading missing keys revisions, checking json struct, and wrapping the doc with metadata out of the lock holding period and acquire the lock only during the final bulk update REST API call to couchDB.  ",,denyeart,manish-sethi,Senthil1,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzxj:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,manish-sethi,Senthil1,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/18 4:18 AM;Senthil1;[~denyeart] [~manish-sethi] [~chris.elder]  Is my observation correct?;;;","02/Mar/18 4:50 AM;manish-sethi;[~Senthil1] - I don't think that your observation is correct. The function  `{color:#000000}ValidateAndPrepareBatch{color}` is expected to do any data loading and actual validation. [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L93.]The basic intention of this function had been to perform everything but apply updates in this function and `ApplyUpdates` is supposed to just apply updates so we hold the lock for as small duration as possible.

May be revision numbers are getting added (not loaded) to the batch in the ApplyUpdates. I think that part of these confusions stem from the fact that the state couchdb code needs a refactoring to be more readable. I think that you had expressed interest once to do that but if you do not mind, I can take a shot on this to refactor and during the refactoring I can think moving the adding the revision numbers also under the function `{color:#000000}ValidateAndPrepareBatch{color}`.

If you observed something else, which I have missed, please point it out here and I think that we should fix that.;;;","02/Mar/18 5:09 AM;Senthil1;[~manish-sethi] For blind writes, we do not load revision numbers during validation phase. Further, couch documents (checking whether the JSON is formed correctly, adding wrappers) are created during the lock period only. My proposal was to move these two items out of the lock period. Yes, you can do the necessary refactoring of statecouchdb.go but I still feel that my observation is correct. ;;;","02/Mar/18 5:23 AM;manish-sethi;[~Senthil1]  Thanks for the clarification. Indeed, I think that I misinterpreted your comment if it was limited to blind writes - because, you did not explicitly mentioned the blind writes earlier and I could not relate your 'missing key' term with the blind writes. But I think that blind writes is quite a corner case in practice and majority of the workload would not require to load anything during `ApplyUpdates`.

The other processing, such as JSON validity etc. should not be as expensive as loading the data but yes, it's better to move maximum processing under the function `{color:#000000}ValidateAndPrepareBatch` as that is the basic purpose of this function.{color};;;","02/Mar/18 5:31 AM;Senthil1;[~manish-sethi] Based on a survey that [~balaji.viswanathan] did with the solution teams, certain classes of applications just perform blind writes without even querying the database (mainly provenance use-cases) – just logging the events (without any state machine check). Anyway, it is debatable and leave it to you guys to decide whether such optimizations are required. I agree that spending time on optimizing for corner cases are not that useful. ;;;","02/Mar/18 5:44 AM;manish-sethi;[~Senthil1] - I think this time you misinterpreted me :). I am indeed in the favor of moving maximum processing in the function `{color:#000000}ValidateAndPrepareBatch` - as I explicitly stressed before that this indeed was the `sole` purpose to have two separate functions.{color};;;","02/Mar/18 5:58 AM;Senthil1;Ha ha :) ;;;","12/Mar/18 3:59 PM;denyeart;Removing v1.2 tag, this item will be prioritized alongside others in the fabric-ledger backlog.;;;","13/Mar/18 6:29 AM;manish-sethi;when we want to take this up - following is one potential strategy to achieve this.

Change the statedb.VersionedDB interface such that there are three functions instead of one function `ApplyUpdate`. Each function carrying out the corresponding stage from the three stages listed below. The write lock is needed only for the stage 2.

Stage 1 - `PrepareForUpdates` - db transforms the given batch in the form of underlying db and keep it in memory
Stage 2 - `ApplyUpdates` - push the changes to the DB
Stage 3 - ProcessPostUpdates - flush and record savepoint.



While refactoring couch statedb impl for FAB-7692, I have refactored the code keeping the above scheme in mind (https://gerrit.hyperledger.org/r/#/c/19093/1/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go@298)

So, it should be straight forward to make this change once the above CR gets merged.;;;","13/Mar/18 9:50 PM;Senthil1;Yes, Manish. That makes sense. 

So the usage of above functions would be like, In Commit() in lockbased_txmgr.go, first, we would call PrepareForUpdates() (for levelDB, it returns simply), then ApplyPrivacyAwareUpdates() with a RWLock, and finally calls ProcessPostUpdates(). Do you have any suggestion on this? I can take a short at it. ;;;","13/Mar/18 11:08 PM;manish-sethi;[~Senthil1] - Even for the leveldb, `PrepareForUpdates()` can prepare the goleveldb batch and `ProcessPostUpdates` can be used for fsyc (not sure whether in the code, fsync is separable).

But, I guess that better if we take this up after merging the couch refactoring CR, else that would run into conflict - unless you want to do on top of that CR.;;;","24/Jul/18 10:46 PM;Senthil1;[~manish-sethi] I ran LTE with and without the optimization. I observed a minor improvement due to this optimization. 
*with optimization* https://gerrit.hyperledger.org/r/#/c/21855/

# DataDir, NumChains, NumParallelTxPerChain, NumKeysInEachTx, BatchSize, NumKVs, KVSize, *Time_Spent(s)*, Size_chains(mb), Size_index(mb), Size_stateLeveldb(mb), Size_historyLeveldb(mb)
/tmp/fabric/test/tools/LTE/data, 1, 500, 4, 500, 40000, 200, *15.53*, 11.71, 0.28, , 1.80
/tmp/fabric/test/tools/LTE/data, 1, 1000, 4, 500, 40000, 200, *21.99*, 11.71, 0.28, , 1.79
/tmp/fabric/test/tools/LTE/data, 1, 1500, 4, 500, 40000, 200, *23.68*, 11.87, 0.29, , 1.79
/tmp/fabric/test/tools/LTE/data, 1, 2000, 4, 500, 40000, 200, *23.35*, 11.71, 0.27, , 1.79

*without optimization* https://gerrit.hyperledger.org/r/#/c/21855/
# DataDir, NumChains, NumParallelTxPerChain, NumKeysInEachTx, BatchSize, NumKVs, KVSize, *Time_Spent(s)*, Size_chains(mb), Size_index(mb), Size_stateLeveldb(mb), Size_historyLeveldb(mb)
/tmp/fabric/test/tools/LTE/data, 1, 500, 4, 500, 40000, 200, *15.63*, 11.70, 0.28, , 1.80
/tmp/fabric/test/tools/LTE/data, 1, 1000, 4, 500, 40000, 200, *22.24*, 11.71, 0.28, , 1.79
/tmp/fabric/test/tools/LTE/data, 1, 1500, 4, 500, 40000, 200, *23.86*, 11.88, 0.29, , 1.79
/tmp/fabric/test/tools/LTE/data, 1, 2000, 4, 500, 40000, 200, *24.11*, 11.70, 0.27, , 1.79

If LTE support JSON docs instead of binary, I expect the performance to improve a bit with this optimization. ;;;","23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,
fix dependencies in build when releasing,FAB-8623,28169,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,ChristopherFerris,ChristopherFerris,02/Mar/18 4:30 AM,27/Jul/18 3:43 PM,28/Oct/23 3:02 AM,27/Jul/18 3:43 PM,v1.0.0-rc1,,,v1.3.0,,,fabric-build,fabric-ci,,,0,,,,,,"We have an issue in that the build process takes a dependency on a previous ""release"" when looking for images from other repositories (e.g. fabric-ca looking for ""previous"" release version of fabric-orderer. When this is a release build, there isn't going to BE a previous release image published until the fabric repo is tagged.",,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/18 6:19 AM;rameshthoomu;Release_Process(1)(1).jpg;https://jira.hyperledger.org/secure/attachment/15216/Release_Process%281%29%281%29.jpg",,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10068,,,,,,,,,"1|hzyzmn:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/18 11:55 AM;rameshthoomu;Docker multiarch should fix this issue. The work what I did here [https://gerrit.hyperledger.org/r/#/c/18467/] will resolve this issue. [~ChristopherFerris] [~mastersingh24] Do you suggest any other approach to fix this issue?

Once the docker multiarch is ready, I will give 1.1-latest in fabric-ca docker-compose file, which always pull the latest tag of 1.1 release.;;;","14/Mar/18 10:17 AM;denyeart;Docker multiarchitecture is targeted for v1.2, moving this out as well.;;;","30/Mar/18 9:22 AM;ChristopherFerris;As noted in the Release retrospective, I really want to move us past the process we currently have. I would like to get to a place where we have:

A) nightly builds that publish images and binaries to Nexus

B) integration and SVT tests run against a matched set of images and binaries - maybe we tag with a specific tag for our testing (e.g. tag ""candidate"" or something).

C) when we are happy with the results, we can retag with a release identifier and publish the lot to the respective homes (docker hub, maven etc)

D) lather, rinse and repeat;;;","16/Apr/18 12:53 AM;rameshthoomu;[~sambhavdutt] [~jtclark] Existing Verify jobs publish docker images and binaries for every patchset and we have a daily jobs which publishes docker images with ""latest"" tag to nexus repository. We are trying to implement the same in merge jobs and publish every image & binary with ""candidate"" tag to pull them in downstream jobs.
 # fabric-test-daily cron job should pull these ""candidate"" images & binaries to test.
 # Every SDK (fabric-sdk-node, fabric-sdk-java, fabric-samples) jobs should pull these images & binaries instead of building them.

Few pain points here:

We can not publish binaries with the same tag. In this case, we can only publish ""candidate"" tag only once through Jenkins maven:deploy-file plugin. We should identify a way to publish unique binaries to nexus2 repo.;;;","06/May/18 7:17 AM;ChristopherFerris;Changed this to improvement... it really isn't a defect. We do need to prioritize this work.;;;","03/Jul/18 6:22 AM;rameshthoomu;fabric-ca-* image dependency from fabric has been removed with [https://gerrit.hyperledger.org/r/#/c/23749/..]

[~ChristopherFerris] Below is the release process diagram explains the release process.. Please add your comments how this  needs to be modified in 1.3 release.

 

!Release_Process(1)(1).jpg!;;;",,,,,,,,,,,,,,,,,
Validate multiple blocks in parallel in VSCC validation phase,FAB-8624,28170,34310,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Senthil1,Senthil1,02/Mar/18 4:53 AM,23/Jan/20 7:31 AM,28/Oct/23 3:02 AM,23/Jan/20 7:31 AM,,,,Future,,,fabric-peer,,,,0,stale-item,,,,,"Currently, VSCC validation phase is inactive during MVCC validation and state update. Though the MVCC and state update takes a few milliseconds, it would be better to utilize CPU during this period for VSCC validation. To do that, we need to validate multiple blocks in VSCC validation phase (special cases during config block). An initial implementation is available with v1.0 (not v1.1) – [https://github.com/thakkarparth007/fabric/commits/msp_opt_AND_parVSCC_AND_pipelineVSCC_Commit_AND_couchBatching] 

After an initial performance evaluation, we will update the performance number here. This approach is especially useful when the block size is lower than the number of vCPU cores allocated for the peer and there is only one channel in the network. ",,C0rWin,denyeart,grapebaba,inatatsu,Senthil1,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12221,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzmv:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,denyeart,grapebaba,inatatsu,Senthil1,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/19 11:48 PM;denyeart;I assume this will be handled as part of FAB-12221.;;;","23/Jan/20 7:31 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
Deliver handler panics on closed iterator,FAB-8626,28172,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,02/Mar/18 6:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 7:02 AM,,,,,,,fabric-orderer,,,,0,,,,,,"_This is a backport of FAB-8584 for the 1.0.x branch._

The file-based ledger implementation of the iterator does not account for the case where another thread may close the iterator.

This operation will return a (nil, nil) block/error pair to the handler.


The handler then will attempt to process this nil block and panic.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyznb:",,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
code coverage report not showing all the packages,FAB-8628,28174,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,02/Mar/18 6:53 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 1:45 AM,,,,v1.1.0,,,fabric-build,,,,0,,,,,,"Code coverage report is not showing for all the packages in profile.cov or report.xml

Steps to reproduce:

on latest fabric commit, run `make profile` and see the profile.cov or report.xml",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyznr:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Mar/18 1:45 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18685/;;;",,,,,,,,,,,,,,,,,,,,,,
fabric doc and branch versioning strategy,FAB-8629,28176,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,02/Mar/18 6:56 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,30/Mar/18 7:49 AM,v1.1.0,,,,,,fabric-build,fabric-docs,,,1,,,,,,"Right now, we have quite a collection of RTD builds for Fabric:
[latest|http://hyperledger-fabric.readthedocs.io/en/latest/] [v1.1.0-rc1|http://hyperledger-fabric.readthedocs.io/en/v1.1.0-rc1/] [v1.0.6|http://hyperledger-fabric.readthedocs.io/en/v1.0.6/]  *[release|http://hyperledger-fabric.readthedocs.io/en/release/] [master|http://hyperledger-fabric.readthedocs.io/en/master/]*This actually is somewhat redundant, because 'latest' and 'master' are equivalent. 'v1.0.6' and 'release' are also equivalent.

Now, we have also talked about reworking the branch strategy for post 1.1 so that we have a release branch for every major.minor release. What I would propose is that so that we can avoid having to constantly change references, that we adopt a strategy of publishing two doc versions for master branch (current development):

latest == HEAD of masterstable == most recent preliminary release (preview, alpha, beta, rcx) 

and that we publish one doc version for each major.minor release we have published:

release-1.0 == v1.0.xrelease-1.1 == v1.1.x

I would also propose that we adopt a similar naming convention for the release branches
(e.g. release-1.0 and release-1.1) and that we then publish a series of tags against that for each patch release (e.g. v1.0.0...v1.0.6, etc).",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8589,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzo7:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[fabric-samples] byfn tests are failing intermittently in CI when couchdb is used,FAB-8630,28178,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,skarim,rameshthoomu,rameshthoomu,02/Mar/18 7:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 7:47 AM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"byfn tests are failing intermittently in CI when couchdb is used
{code:java}
00:05:45.646 + peer channel join -b couchdbtest.block*00:05:48.775* + set +x*00:05:48.775* Error: Error getting endorser client channel: endorser client failed to connect to peer0.org1.example.com:7051: failed to create new connection: context deadline exceeded*00:05:48.775* Usage:00:05:48.775 peer channel join [flags]00:05:48.775
{code}
 

-------

00:05:48.777 ===================== peer0.org1 joined on the channel ""couchdbtest"" =====================
 {{above error causes failure in query}}
\{\{}}
{code:java}
00:07:21.229 Error: Error endorsing query: rpc error: code = Unknown desc = access denied: channel [couchdbtest] creator org [Org1MSP] - <nil>
00:07:21.229 Usage:
00:07:21.229   peer chaincode query [flags]
00:07:21.229 
00:07:21.229 Flags:
00:07:21.229   -C, --channelID string   The channel on which this command should be executed
00:07:21.229   -c, --ctor string        Constructor message for the chaincode in JSON format (default ""{}"")
00:07:21.229   -x, --hex                If true, output the query value byte array in hexadecimal. Incompatible with --raw
00:07:21.229   -n, --name string        Name of the chaincode
00:07:21.229   -r, --raw                If true, output the query value as raw bytes, otherwise format as a printable string
00:07:21.229   -t, --tid string         Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
00:07:21.229 
00:07:21.229 Global Flags:
00:07:21.229       --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint{code}
Jenkins log:

[https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-x86_64/28/]

 ",,denyeart,rameshthoomu,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzon:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Mar/18 1:10 AM;rameshthoomu;[~jyellick] [~denyeart] this test is failing frequently in CI.. [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-x86_64/29/]

any workaround or fix planned to prevent this issue?;;;","05/Mar/18 10:07 AM;denyeart;I tried five times:

{color:#333333}./byfn.{color}{color:#333333}sh{color}{color:#333333} -{color}{color:#333333}m{color} {color:#333333}up{color}{color:#333333} -{color}{color:#333333}c{color}{color:#333333} couchdbtest -s couchdb -t {color}{color:#008080}60{color}

I had 100% success rate.  Can anybody reproduce the problem locally?;;;","07/Mar/18 5:56 AM;rameshthoomu;[~denyeart] finally captured the docker container logs https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-byfn-verify-x86_64/340/;;;","07/Mar/18 3:54 PM;denyeart;[~rameshthoomu] Thanks for the debug logs... I see the problem now...

After spinning up the network, it takes peer0 8 seconds to establish connection to the couchdb container and finish startup.

The attempt to join peer0 to the channel takes place 2 seconds after spinning up the network.  peer0 is not available yet when the join command comes in.  The join channel fails, and then the subsequent channel query will of course fail since the channel is unknown on the peer.

e2e test does not detect the join channel failure:

 
{code:java}
20:43:13 + peer channel join -b custom-channel-couch.block

20:43:16 + set +x

20:43:16 Error: Error getting endorser client channel: endorser client failed to connect to peer0.org1.example.com:7051: failed to create new connection: context deadline exceeded
 ...
 20:43:16 ===================== peer0.org1 joined on the channel ""custom-channel-couch"" =====================
{code}
 

The e2e test should be improved in two ways:

1) detect join channel failure condition (actually, all steps should detect failure)

2) retry join channel several times, to account for the longer peer startup time when depending on couchdb container.

 

Who could make these updates?;;;","08/Mar/18 11:00 AM;rameshthoomu;Marking this as highest bug. This has to fix ASAP, I see 85% of fabric-samples and 100% of e2e-daily builds are failing. Not sure who has bandwidth to fix this..;;;","08/Mar/18 1:01 PM;denyeart;I took a look and actually utils.sh joinChannelWithRetry is already setup to retry 5 times with 3 seconds delay each retry.  It just needs a small improvement to look for ""Error"" in the *peer channel join* result as part of the retry logic.;;;","09/Mar/18 1:54 AM;skarim;https://gerrit.hyperledger.org/r/#/c/18885/;;;",,,,,,,,,,,,,,,,
Fix install_behave script,FAB-8631,28180,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,02/Mar/18 8:27 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/Apr/18 2:49 AM,,,,,,,,,,,0,,,,,,"Fix install_behave script to give more useful info for failures and remove the Java package until it is ready to be used. (That is, we are not testing using the Java SDK yet, so we can hold off adding this package, which causes some errors.)",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzov:",,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Remove IdentityManager.GetSigningIdentity(),FAB-8632,28181,27714,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,02/Mar/18 8:36 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 1:15 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,"This method is not longer needed, as IdentityManager.GetUser() covers its functionality.",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzp3:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca samples are not working on rc1 images,FAB-8633,28182,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,rameshthoomu,rameshthoomu,02/Mar/18 8:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,02/Mar/18 11:26 PM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"Observed below error on 1.1.0-rc1 images
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = access denied: channel [mychannel] creator org [org1MSP] - <nil>
Usag
{code}
 ",,denyeart,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzpb:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 8:56 AM;rameshthoomu;{code:java}
##### 2018-03-01 18:50:32 Waiting for the 'setup' container to finish registering identities, creating the genesis block and other artifacts ....
##### 2018-03-01 18:50:33 Waiting for the docker 'run' container to start ...............
##### 2018-03-01 23:50:54 The docker 'run' container has started
##### 2018-03-01 23:50:54 Creating channel 'mychannel' on orderer1-org0 ...
##### 2018-03-01 23:50:54 Peer peer1-org1 is attempting to join channel 'mychannel' (attempt #1) ...
##### 2018-03-01 23:50:54 Peer peer1-org1 successfully joined channel 'mychannel'
##### 2018-03-01 23:50:54 Peer peer2-org1 is attempting to join channel 'mychannel' (attempt #1) ...
##### 2018-03-01 23:50:55 Peer peer2-org1 successfully joined channel 'mychannel'
##### 2018-03-01 23:50:55 Peer peer1-org2 is attempting to join channel 'mychannel' (attempt #1) ...
##### 2018-03-01 23:50:55 Peer peer1-org2 successfully joined channel 'mychannel'
##### 2018-03-01 23:50:55 Peer peer2-org2 is attempting to join channel 'mychannel' (attempt #1) ...
##### 2018-03-01 23:50:55 Peer peer2-org2 successfully joined channel 'mychannel'
##### 2018-03-01 23:50:55 Updating anchor peers for peer1-org1 ...
##### 2018-03-01 23:50:55 Updating anchor peers for peer1-org2 ...
##### 2018-03-01 23:50:56 Installing chaincode on peer1-org1 ...
##### 2018-03-01 23:50:59 Installing chaincode on peer1-org2 ...
##### 2018-03-01 23:51:02 Instantiating chaincode on peer1-org2 ...
##### 2018-03-01 23:51:15 Querying chaincode in the channel 'mychannel' on the peer 'peer1-org1' ...
##### 2018-03-01 23:51:30 Query of channel 'mychannel' on peer 'peer1-org1' was successful
##### 2018-03-01 23:51:30 Sending invoke transaction to peer1-org1 ...
##### 2018-03-01 23:51:31 Installing chaincode on peer2-org2 ...
##### 2018-03-01 23:51:44 Querying chaincode in the channel 'mychannel' on the peer 'peer2-org2' ...
##### 2018-03-01 23:51:59 Query of channel 'mychannel' on peer 'peer2-org2' was successful
##### 2018-03-01 23:51:59 Revoking the user 'user-org1' of the organization 'org1' with Fabric CA Client home directory set to /data/orgs/org1/admin and generating CRL ...
##### 2018-03-01 23:51:59 Fetching the configuration block of the channel 'mychannel'
##### 2018-03-01 23:51:59 Creating config update payload with the generated CRL for the organization 'org1'
##### 2018-03-01 23:51:59 Sleeping 5 seconds for configtxlator to start...
##### 2018-03-01 23:52:04 Updating the configuration block of the channel 'mychannel'
##### 2018-03-01 23:52:05 Querying the chaincode in the channel 'mychannel' on the peer 'peer1-org1' as revoked user 'user-org1' ...
2018-03-01 23:52:20.203 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-03-01 23:52:20.203 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-03-01 23:52:20.203 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-03-01 23:52:20.203 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-03-01 23:52:20.203 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode disabled
2018-03-01 23:52:20.204 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AF9080A6608031A0B08B4A4E2D40510...6D7963631A0A0A0571756572790A0161 
2018-03-01 23:52:20.204 UTC [msp/identity] Sign -> DEBU 007 Sign: digest: D5D9F171A19BC58A7C5327CCD2227D841DE213C467DB07A18F75BC90AAA0A13E 
Error: Error endorsing query: rpc error: code = Unknown desc = access denied: channel [mychannel] creator org [org1MSP] - <nil>
Usage:
  peer chaincode query [flags]

Flags:
  -C, --channelID string   The channel on which this command should be executed
  -c, --ctor string        Constructor message for the chaincode in JSON format (default ""{}"")
  -x, --hex                If true, output the query value byte array in hexadecimal. Incompatible with --raw
  -n, --name string        Name of the chaincode
  -r, --raw                If true, output the query value as raw bytes, otherwise format as a printable string
  -t, --tid string         Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint
      --clientauth                          Use mutual TLS when communicating with the orderer endpoint
      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint
      --logging-level string                Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
      --tls                                 Use TLS when communicating with the orderer endpoint
      --transient string                    Transient map of arguments in JSON encoding
  -v, --version                             Display current version of fabric peer server

##### 2018-03-01 23:52:20 Tests did not complete successfully; see data/logs/run.log for more details
(hyp) rameshs-mbp:fabric-ca thoomu@us.ibm.com$ docker images | grep 1.1.0-rc1
hyperledger/fabric-ca-tools                                                                x86_64-1.1.0-rc1                      d427e25d50ec        3 hours ago          1.55GB
hyperledger/fabric-ca-peer                                                                 x86_64-1.1.0-rc1                      9a5a4eea6cb0        3 hours ago          270MB
hyperledger/fabric-ca-orderer                                                              x86_64-1.1.0-rc1                      8862de47d06c        3 hours ago          264MB
hyperledger/fabric-ca                                                                      x86_64-1.1.0-rc1                      8a6c8c2e2ebf        3 hours ago          283MB
hyperledger/fabric-tools                                                                   x86_64-1.1.0-rc1                      006c689ec08e        4 hours ago          1.46GB
hyperledger/fabric-orderer                                                                 x86_64-1.1.0-rc1                      10afc128d402        4 hours ago          180MB
hyperledger/fabric-peer                                                                    x86_64-1.1.0-rc1                      6b44b1d021cb        4 hours ago          187MB
hyperledger/fabric-javaenv                                                                 x86_64-1.1.0-rc1                      ea263125afb1        4 hours ago          1.52GB
hyperledger/fabric-ccenv                                                                   x86_64-1.1.0-rc1                      65c951b9681f        4 hours ago          1.39GB{code};;;","02/Mar/18 11:13 AM;denyeart;[~aambati] Could you take a look?;;;","02/Mar/18 1:50 PM;smithbk;https://gerrit.hyperledger.org/r/18673;;;","02/Mar/18 11:27 PM;denyeart;fabric-samples has been retagged with v1.1.0-rc1 to include this fix.;;;","02/Mar/18 11:52 PM;rameshthoomu;tested this test case after retag the v1.1.0-rc1 and it's working as expected. Thanks [~smithbk] for the quick fix.;;;",,,,,,,,,,,,,,,,,,
embedded invokeChaincode support,FAB-8634,28183,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,muralisr,zhaochy,zhaochy,02/Mar/18 4:01 PM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,v1.1.0,,,Future,,,fabric-peer,,,,0,,,,,,"let the symbol *""=>""* stands for *invokeChaincode*
current fabric-peer only supports cc1 => cc2 and get response

but sometimes we may meet the following scenario:

1.  cc1 => cc2 => cc3 (no circle)
2.  cc1 => cc2 => cc1 (with circle)

for scenario 1, cc2 => cc3 does not work
for scenario 2, cc2 => cc1 does not work

It seems current fabric-peer does not support embedded cross-chaincode invoke, this feature should be added.",,kchristidis,mastersingh24,muralisr,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtd3:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,mastersingh24,muralisr,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/18 6:47 PM;mastersingh24;[~muralisr] - Can you have a look at this?;;;","03/Mar/18 11:24 PM;muralisr;[~mastersingh24] Sure can, this has come up before once or twice. ;;;","29/Mar/18 2:24 PM;zhaochy;hello [~muralisr] any update for this ?;;;","18/May/18 1:51 AM;kchristidis;Bumping this up. Is this something that we're targeting for 1.2, or do we defer? (I say the latter.);;;","08/Jun/18 10:38 AM;zhaochy;[~mastersingh24] [~kchristidis] We got a lot of bug reports by this, can we fix this at 1.2?;;;","08/Jun/18 10:04 PM;muralisr;[~zhaochy] We have to distinguish between a new transaction with the same transaction ID and a recursion and if the later need to think about level of nesting to prevent a call going rogue. I'll take a look at this over the the next few days to study what this means.

[~kchristidis] [~mastersingh24] there is definitely an element of risk to doing this late (even if well understood). Would you consider this is late for 1.2 ?;;;","08/Jun/18 10:16 PM;kchristidis;Thanks Murali. This does seem late for 1.2, hence the ""Future"" ""Fix Version"".

Once you assess the amount of work involved, post here, and we can hopefully contain this in 1.3.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,
V1.1.0-alpha Orderer checking timestamp of SDK,FAB-8635,28185,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,zerppen,zerppen,02/Mar/18 5:45 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,v1.1.0-alpha,,,Future,,,fabric-orderer,,,,0,stale-item,,,,,"Question: SDK local time is different from fabric orderer's,when SDK connects to fabric network will get error message:

""org.hyperledger.fabric.sdk.exception.TransactionException: Bad newest block expected status 200  got  400, Channel x""

It's not friendly.Because I can't find real problem by the error message.

Advice:Orderer's error messages should return to SDK so that we can know real problem.

Env: v1.1.0-alpha,when checking timestamp of SDK and server time.

 ",,denyeart,sykesm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzpj:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,sykesm,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:08 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
wrong release reference in tutorial,FAB-8636,28188,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,02/Mar/18 10:42 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,03/Mar/18 1:54 AM,v1.1.0,,,v1.1.0,,,fabric-docs,,,,0,,,,,,"indira.kalagara {color:#a0a0a0}1:48 AM{color}
On Fabric v1.1 document page -
[http://hyperledger-fabric.readthedocs.io/en/v1.1.0-rc1/upgrading_your_network_tutorial.html]

Checout is referring v1.1.0 and the cmd 
git checkout v1.1.0 gives below error:
error: pathspec 'v1.1.0' did not match any file(s) known to git.

I think it should be v1.1.0-rc1 as below is working. 
The below works
git checkout v1.1.0-rc1

Let me know if its correct.",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzpz:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Mar/18 10:57 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/18679;;;",,,,,,,,,,,,,,,,,,,,,,
Failed to enroll admin :Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054],FAB-8637,28189,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,parivesh.kurmi,parivesh.kurmi,02/Mar/18 10:48 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Mar/18 4:40 PM,v1.0.6,,,,,,fabric-samples,,,,0,,,,,,"Hi,

I have started the notwork using *./startFabric.sh inside /fabric-samples/fabcar/*

but when i am trying to *enrollAdmin.js* its failing with below error.

*Failed to enroll admin :Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]*

Please find attached for screenshot as well.

I am using *platform lib of 1.0.6 version* and branch is *release*.

 ",,denyeart,parivesh.kurmi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/18 10:48 PM;parivesh.kurmi;Enroll_Admin_Failed.JPG;https://jira.hyperledger.org/secure/attachment/14717/Enroll_Admin_Failed.JPG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzq7:",,,,,,,,,,,,,,,,,,,,,denyeart,parivesh.kurmi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 4:40 PM;denyeart;Hi, many other people are having success with this sample on 1.0.6.

This is the error you get if the docker containers are not available.

As there is no indication of a Fabric bug here, let's close this JIRA and I will refer you to rocket.chat #fabric-questions channel for help on your environment:  [https://chat.hyperledger.org/] .;;;",,,,,,,,,,,,,,,,,,,,,,
exterminate 1.0.0 version referernces in 1.1 docs,FAB-8638,28191,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,03/Mar/18 12:18 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,17/Mar/18 11:36 PM,v1.1.0,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,,,,,,"{color:#444444}cbf$ grep -r '1.0.0' .{color}
{color:#444444}./source/{color}fabric-sdks.rst:SDKs{color:#444444}. We hope to provide Python and Go SDKs soon after the 1.0.0 release.{color}
{color:#444444}./source/getting_{color}started.rst:SDKs{color:#444444}. We hope to provide Python and Go SDKs soon after the 1.0.0 release.{color}
{color:#444444}./source/write_first_app.rst:``CAR999`` -- 1,000 cars in all, assuming every key has been tagged properly{color}
{color:#444444}./source/upgrading_your_network_tutorial.rst:Note that enabling capability requirements on a channel which a v1.0.0 peer is joined to{color}
{color:#444444}./source/upgrading_your_network_tutorial.rst:.. note:: We require configtxlator v1.0.0 or higher for this next step.{color}
{color:#444444}./source/upgrading_your_network_tutorial.rst: which a v1.0.0 peer is joined to will result in a crash of the peer.{color}
{color:#444444}./source/upgrading_your_network_tutorial.rst:sample Kafka docker images containing Kafka version v1.0.0.{color}
{color:#444444}./source/Fabric-FAQ.rst:Q. As part of the v1.0.0 release, what are the highlight differences between v0.6 and v1.0?{color}
{color:#444444}./source/couchdb_as_state_database.rst: queryLimit: 10000{color}
{color:#444444}./source/CONTRIBUTING.rst: too. If you send a 1,000 or 2,000 LOC change, how long do you think{color}
{color:#444444}Binary file ./source/images/AddSSH1.png matches{color}
{color:#444444}./source/peer-commands.rst: 2017-11-30 12:07:51.323 UTC [msp/identity] Sign -> DEBU 004 Sign: plaintext: 0A8A070A5C08031A0C0897E9FFD00510...631A0D0A0B4765744368616E6E656C73{color}
{color:#444444}./source/peer-commands.rst: 2017-11-30 17:02:56.240 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0AC9060A1B08021A0608C0F380D10522...DC7F80E9BEE612080A020A0012020A00{color}
{color:#444444}./source/peer-commands.rst: 2017-11-30 17:08:12.042 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0AC9060A1B08021A0608FCF580D10522...B092120C0A041A02081012041A020810{color}
{color:#444444}./source/dev-setup/devenv.rst:Prior to the v1.0.0 release, the development environment utilized Vagrant{color}
{color:#444444}./source/releases.rst:`v1.0.0 <{color}[https://github.com/hyperledger/fabric/releases/tag/v1.0.0]{color:#444444}>`__ - July 11, 2017{color}
{color:#444444}./source/releases.rst:`v1.0.0-rc1 <{color}[https://github.com/hyperledger/fabric/releases/tag/v1.0.0-rc1]{color:#444444}>`__ - June 23, 2017{color}
{color:#444444}./source/releases.rst:`v1.0.0-beta <{color}[https://github.com/hyperledger/fabric/releases/tag/v1.0.0-beta]{color:#444444}>`__ - June 8, 2017{color}
{color:#444444}./source/releases.rst:Java Chaincode support has been disabled until post 1.0.0 as it is not yet fully mature. It may be re-enabled for experimentation by cloning the hyperledger/fabric repository, reversing {color}{color:#444444}`{color}{color:#444444}{{this commit <https://github.com/hyperledger/fabric/commit/29e0c40>}}{color}{color:#444444}`{color}{color:#444444}__ and building your own fork.{color}
{color:#444444}./source/releases.rst:`v1.0.0-alpha2 <{color}[https://github.com/hyperledger/fabric/releases/tag/v1.0.0-alpha2]{color:#444444}>`__{color}
{color:#444444}./source/releases.rst:The second alpha release of the v1.0.0 Hyperledger Fabric. The code is{color}
{color:#444444}./source/releases.rst:now feature complete. From now until the v1.0.0 release, the community is{color}
{color:#444444}./source/releases.rst:`v1.0.0-alpha <{color}[https://github.com/hyperledger/fabric/releases/tag/v1.0.0-alpha]{color:#444444}>`__ - March 16, 2017{color}
{color:#444444}./source/{color}releases.rst:The{color:#444444} first alpha release of the v1.0.0 Hyperledger Fabric. The code is{color}
{color:#444444}./source/build_network.rst: 2017-05-16 17:08:01.366 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AB1070A6708031A0C08F1E3ECC80510...6D7963631A0A0A0571756572790A0161{color}
{color:#444444}./source/build_network.rst: Make sure you are running your network against the ""1.0.0"" images that have{color}
{color:#444444}./source/chaincode4ade.rst: hyperledger/fabric-tools x86_64-1.0.0 e09f38f8928d 4 hours ago 1.32 GB{color}
{color:#444444}./source/chaincode4ade.rst: hyperledger/fabric-orderer x86_64-1.0.0 0df93ba35a25 4 hours ago 179 MB{color}
{color:#444444}./source/chaincode4ade.rst: hyperledger/fabric-peer x86_64-1.0.0 533aec3f5a01 4 hours ago 182 MB{color}
{color:#444444}./source/chaincode4ade.rst: hyperledger/fabric-ccenv x86_64-1.0.0 4b70698a71d3 4 hours ago 1.29 GB{color}
{color:#444444}./source/MAINTAINERS.rst:| Binh Nguyen | binhn | binhn | binhn | {color}[binh1010010110@gmail.com|mailto:binh1010010110@gmail.com]{color:#444444} |{color}
{color:#444444}cbf$ {color}",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzqn:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 8:30 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/19271/;;;","16/Mar/18 8:30 AM;ChristopherFerris;needs cherry-pick for 1.1.x;;;","17/Mar/18 2:48 AM;ChristopherFerris;cherry-pick https://gerrit.hyperledger.org/r/19301;;;",,,,,,,,,,,,,,,,,,,,
network launcher supports orderer logging level setting,FAB-8640,28194,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,03/Mar/18 1:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 5:56 AM,,,,,,,fabric-quality,,,,0,,,,,,"network launcher supports orderer logging level setting

add option ""-q"" for orderer logging level, default is ""error""",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzyzrb:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"03/Mar/18 1:34 AM;dongming;https://gerrit.hyperledger.org/r/#/c/18693/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE support timeout configuration,FAB-8641,28195,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,03/Mar/18 2:51 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Mar/18 5:47 AM,,,,,,,fabric-quality,,,,0,,,,,,"PTE supports user configuration for timeouts:

instantiate chaincode and request (proposal and transaction)",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyzrj:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"06/Mar/18 5:59 AM;dongming;[https://gerrit.hyperledger.org/r/#/c/18747/];;;",,,,,,,,,,,,,,,,,,,,,,
Improve logging for channel updates to quote channel names,FAB-8642,28200,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wlahti,jyellick,jyellick,03/Mar/18 1:21 PM,07/Nov/18 11:02 PM,28/Oct/23 3:02 AM,07/Nov/18 11:02 PM,,,,v1.4.0,,,fabric-orderer,,,,0,,,,,,"The channel update code will return an error message like:

{noformat}
Update not for correct channel: foo for bar
{noformat}

Which is fairly easy to understand if both channel IDs are set, but in particular if 'foo' is empty, the error message reads very oddly.

In addition to the quoting, making the error message a little more verbose like:

""ConfigUpdate for channel 'foo' but envelope for channel 'bar'.

would be helpful.",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzrz:",,,,Unset,,,,,,Unset,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/18 3:29 AM;wlahti;https://gerrit.hyperledger.org/r/c/27315/;;;",,,,,,,,,,,,,,,,,,,,,,
Implement an orderer service plugin based on tendermint ,FAB-8643,28201,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,grapebaba,grapebaba,grapebaba,03/Mar/18 3:02 PM,25/Aug/19 11:40 PM,28/Oct/23 3:02 AM,25/Aug/19 11:40 PM,,,,Future,,,fabric-orderer,,,30/Apr/18 12:00 AM,1,consensus,,,,,"Utilize tendermint to make fabric orderer service support bft.  Naive design [draft|https://docs.google.com/document/d/1dJ1ifMmts1JKHl-QrI--jIkhwK2uu2a7qsj24Y4stN0/edit?usp=sharing] here.  [~jyellick] [~kchristidis] [~mastersingh24] [~yacovm] [~C0rWin] hope you guys could review and feedback. ",,daijianw,grapebaba,guoger,lafenicecc,mastersingh24,Othman.Darwish,qiang0723,wutongtree,yacovm,,,,,,,,,,,,,,,,,,,,,1152000,1152000,,0%,1152000,1152000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Tendermint as a fabric orderer service,To Do,,,Unset,,,,"1|hzyzs7:",,,,Unset,Unset,,,,,,,,,,,,,,,,daijianw,grapebaba,guoger,lafenicecc,mastersingh24,Othman.Darwish,qiang0723,wutongtree,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/19 11:40 PM;mastersingh24;While some early prototype work was done here, nothing has been done in quite a while.  Marking this as won't do for now until someone decides to take this on.  From a core contributor/maintainer perspective, this item is not going to happen;;;",,,,,,,,,,,,,,,,,,,,,,
Build proper amcl/FP256BN package,FAB-8644,28202,24431,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,03/Mar/18 8:58 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 5:52 AM,,,,v1.0.0,,,fabric-amcl,,,,0,,,,,,"The  github.com/milagro-crypto/amcl library used by idemix does not follow standard Go packaging and therefore does not work with dep.

The issue is that you actually need to download the code and then build specific packages for the curves you want to use.  dep actually makes checks against the Git repos and fails because the generated packages do not live in the repo.
",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzsf:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/18 9:04 PM;mastersingh24;https://gerrit.hyperledger.org/r/18701;;;",,,,,,,,,,,,,,,,,,,,,,
Remove //import comments from go files,FAB-8645,28203,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,03/Mar/18 10:19 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,03/Mar/18 11:44 PM,,,,v1.0.0,,,fabric-amcl,,,,0,,,,,,"//import statements can be taken as directives ... and dep does this.
So need to remove these extraneous comments from the Go source files in order for dep to work.

Tested this with a clone of the repo",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzsn:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update gossip documentation with leader election details,FAB-8646,28206,27885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,04/Mar/18 10:10 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,05/Mar/18 12:01 PM,,,,,,,fabric-gossip,,,,0,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyztb:",,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Mar/18 10:17 PM;C0rWin;https://gerrit.hyperledger.org/r/18709;;;",,,,,,,,,,,,,,,,,,,,,,
Update channel update tutorial with configuration limitation,FAB-8647,28207,27885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,04/Mar/18 10:14 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 12:42 AM,,,,,,,fabric-gossip,,,,0,,,,,,"Currently channel update tutorial, the section which covers addition of new organization into channel doesn't cover the limitation, where new organization peer need to be configured as a leaders to be able to pull block from ordering service. This due to the fact that peers joins with genesis block, which lacks information about member of new organization within the channel.",,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyztj:",,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Mar/18 10:53 PM;C0rWin;https://gerrit.hyperledger.org/r/18709;;;","05/Mar/18 12:03 PM;denyeart;Gossip topic updates in : [https://gerrit.hyperledger.org/r/18709]

Tutorial updates in : [https://gerrit.hyperledger.org/r/#/c/18711/]

 ;;;",,,,,,,,,,,,,,,,,,,,,
ACL test - acl_happy_path has been failing in fabric-test-daily-x86_64 from last 4 builds due to permissioning error.,FAB-8648,28208,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,04/Mar/18 11:09 PM,19/Mar/19 8:13 PM,28/Oct/23 3:02 AM,17/Mar/18 2:48 AM,,,,v1.2.0,,,fabric-quality,,,,0,ci-failure,,,,,"The following errors are failing the ACL tests,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest) 


{code:java}
CalledProcessError: Command '['./start.sh']' returned non-zero exit status 1

{code}


{code:java}
self = <acl_happy_path.ACL testMethod=test_FAB6490_Using_FCA_With_ACL_Permissioning>

    def test_FAB6490_Using_FCA_With_ACL_Permissioning(self):
        '''
             In this ACL test, we execute the fabric-ca sample that
             is located in the fabric-sample repository. This sample executes a
             ""happy path"" scenario to ensure that the when a user is given limited
             access, that the ACL rule is followed as expected.
    
             Passing criteria: The sample executes with a congratulatory message.
            '''
        self.assertTrue(os.path.exists(fca_sample_directory), msg=""The fabric-ca chaincode test does not exist in this directory setup"")
>       output = subprocess.check_output([""./start.sh""], shell=True, cwd=fca_sample_directory)

acl_happy_path.py:25: 
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/277/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/",,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyztr:",,,,,,,,,,,,,,,,,,,,,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"15/Mar/18 3:46 AM;sambhavdutt;[~smithbk] 
The ACL tests have been failing consistent due to the Permissioning error from 7 builds now. Can you look into this.

*Console Output*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/287/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/;;;","15/Mar/18 4:53 AM;latitiah;The git submodule for fabric-samples in fabric-test needs to be updated to reflect the related commit.

[https://gerrit.hyperledger.org/r/#/c/18673/]

fabric-samples commit with the fix was retagged to include this fix.

 ;;;","15/Mar/18 4:59 AM;latitiah;https://gerrit.hyperledger.org/r/19189;;;","15/Mar/18 10:33 PM;sambhavdutt;[~latitiah] [~scottz][~rameshthoomu][~smithbk]
Thank you Latitia, The ACL test has passed in the last build after this patch. ;;;",,,,,,,,,,,,,,,,,,,
TLS connection between orderer and kafka,FAB-8649,28209,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,QuincyWu,QuincyWu,05/Mar/18 1:50 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Mar/18 12:47 AM,v1.1.0,,,Not a Bug,,,fabric-orderer,,,,0,orderer,,,,,"in fabric-v1.1.0-rc1, in fabric/orderer/consensus/kafka/config.go, the method  is 

newBrokerConfig, 

keyPair, err := tls.X509KeyPair([]byte(tlsConfig.Certificate), []byte(tlsConfig.PrivateKey)) , tlsConfig.Certificate and tlsConfig.PrivateKey are file address ,not file . it's bug.",,denyeart,guoger,kchristidis,QuincyWu,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyztz:",,,,,,,,,,,,,,,,,,,,,denyeart,guoger,kchristidis,QuincyWu,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Mar/18 11:25 PM;denyeart;[~kchristidis] [~sanchezl] What's your opinion of the impact?;;;","06/Mar/18 12:03 AM;sanchezl;{{tlsConfig.Certificate}} and {{tlsConfig.PrivateKey}} are byte strings containing the certificate and private key.

I did not quite understand description of the problem. 

The values are described in the the {{orderer.yaml:}}
{code:none}
Kafka:
  TLS:
    # PrivateKey: PEM-encoded private key the orderer will use for
    # authentication.
    PrivateKey:
      # As an alternative to specifying the PrivateKey here, uncomment the
      # following ""File"" key and specify the file name from which to load the
      # value of PrivateKey.
      # File: path/to/PrivateKey
    # Certificate: PEM-encoded signed public key certificate the orderer will
    # use for authentication.
    Certificate:
      # As an alternative to specifying the Certificate here, uncomment the
      # following ""File"" key and specify the file name from which to load the
      # value of Certificate.
      #File: path/to/Certificate
{code}
If you are trying to use environment variables with pem text:
 * {{*ORDERER_KAFKA_TLS_PRIVATEKEY*=""---- BEGIN PRIVATE KEY---- ...""}}
 * {{*ORDERER_KAFKA_TLS_CERTIFICATE*=""---- BEGIN CERTIFICATE---- ...""}}

If you are trying to use environment variables with pem files:
 * {{*ORDERER_KAFKA_TLS_PRIVATEKEY_FILE*=server.key}}
 * {{*ORDERER_KAFKA_TLS_CERTIFICATE_FILE*=server.crt}}

 ;;;","06/Mar/18 12:47 AM;kchristidis;What Luis said above. There is no bug here.;;;",,,,,,,,,,,,,,,,,,,,
Move to Gradle 4.4.1,FAB-8654,28215,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sheehan,sheehan,sheehan,05/Mar/18 11:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Mar/18 10:07 PM,,,,v1.2.0,,,,,,,0,,,,,,"Fabric Java Chaincode moved to Gradle 4.4.1 in FAB-7626. The Java environment docker image and dev environment should also be moved to Gradle 4.4.1. Currently they are using Gradle 2.12.

 

At least in my environment, with Java 1.8.0_152, the Java platform chaincode unit tests in the Fabric project are failing. Upgrading to Gradle 4.4.1 resolves the failures.",,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-221,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzuv:",,,,,,,,,,,,,,,,,,,,,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
ChaincodeByName on txvalidator.Support is unused,FAB-8655,28216,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,05/Mar/18 11:46 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Mar/18 3:25 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,txvaliator.Support#ChaincodeByName is unused. It should be removed from the interface.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzv3:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Mar/18 11:52 PM;sykesm;https://gerrit.hyperledger.org/r/18727;;;",,,,,,,,,,,,,,,,,,,,,,
Remove deprecated methods for orderer,FAB-8657,28221,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,biljana.lukovic,biljana.lukovic,biljana.lukovic,06/Mar/18 2:18 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,06/Mar/18 4:15 AM,,,,,,,,,,,0,,,,,,,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzw7:",,,,Unset,,,,,,Unset,,,,,,,,,,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Extract mock related functions from production peer code,FAB-8658,28222,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,06/Mar/18 4:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 7:11 AM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzwf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Mar/18 4:05 AM;sykesm;https://gerrit.hyperledger.org/r/18735;;;",,,,,,,,,,,,,,,,,,,,,,
Remove deprecated methods for peer and channel,FAB-8659,28223,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,biljana.lukovic,biljana.lukovic,06/Mar/18 4:14 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,,,,,0,stale-item,,,,,,,biljana.lukovic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzjj:",,,,Unset,,,,,,Unset,,,,,,,,,,,biljana.lukovic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Create peer instance from peer package level functions,FAB-8660,28224,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,06/Mar/18 4:14 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Mar/18 5:54 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Much of what is in fabric/core/peer are functions that rely on package level state that effectively becomes a singleton. This prevents explicit configuration and instantiation of peer as a dependency of other objects in the system.

The first step to addressing this is to create an interface that represents Peer and create an implementation that delegates to the existing package level functions. This instance will then be wired in to satisfy external component dependencies. When the wiring is complete. the peer will be refactored to support configuration, instantiation, and test without the use of package level variables.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzwn:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Mar/18 4:48 AM;sykesm;https://gerrit.hyperledger.org/r/18743;;;",,,,,,,,,,,,,,,,,,,,,,
Peer should detect and react when its org has been removed from the network,FAB-8664,28229,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,jyellick,jyellick,06/Mar/18 5:14 AM,03/Dec/19 5:51 AM,28/Oct/23 3:02 AM,,,,,Future,,,fabric-peer,,,,2,,,,,,"By default, a majority of orgs may eject any other org from the network.

Once this is done, the majority of orgs could maliciously re-add the old member back into the network, with an MSP definition containing additional CA or Admin certs.

The behavior of a v1.1/v1.0 peer would be to briefly lose connectivity while the config transition was in place, then, resume receiving blocks and adopt the new corrupted MSP config.

At this point, things like endorsement policies could be effectively circumvented by signing with certs issued by the extra CA cert.

This is a relatively low severity problem, because it requires a significant conspiracy of network admins, but it should probably be addressed.

The most obvious way to fix this is to make a peer which sees its org ejected via a config update simply stop processing further on the offending channel.

This poses a bit of a problem if the org is legitimately added back, which could be solved by simply re-joining the peer with the more recent config block.  But, we currently lack this ability in the peer.",,baohua,ChristopherFerris,denyeart,jyellick,mastersingh24,seokm0,sykesm,yacovm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzxj:",,,,Unset,,,,,,Unset,,,,,,,,,,,baohua,ChristopherFerris,denyeart,jyellick,mastersingh24,seokm0,sykesm,yacovm,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Mar/18 5:21 AM;mastersingh24;It would be better to think about what types of actually ""alerting"" mechanisms we should be providing as well.
;;;","09/Jun/18 8:06 AM;mastersingh24;We are not going to do this for v1.2 at this point.  Will defer to the 1.3 list;;;","21/Jun/18 3:58 AM;ChristopherFerris;to be reported in release notes for 1.2.0-rc1;;;","08/Sep/18 2:04 AM;sykesm;Discussed briefly with [~jyellick] and this is predicated on at least a couple of enhancements:

- the ability for a peer to leave a channel
- the ability for a peer to join a channel from a block that is not the genesis block
- possible alerting of the condition

Rewording the title to help capture the intent. (was: Peer does not detect his own org ejection);;;","03/Dec/19 5:47 AM;denyeart;Note that as of v2.0, it is possible to 'pause' a channel so that peer doesn't request blocks for a channel or process requests on the channel.;;;",,,,,,,,,,,,,,,,,,
Support golang plugin architecture for pluggable state databases,FAB-8665,28230,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ChanderGovindarajan,denyeart,denyeart,06/Mar/18 5:49 AM,05/Oct/19 1:25 AM,28/Oct/23 3:02 AM,05/Oct/19 1:25 AM,,,,Future,,,fabric-ledger,,,,1,,,,,,"State databases (e.g. goleveldb, CouchDB) currently implement the VersionedDB interface.  However this requires compiling state database implementations into Fabric itself.

It would be more clean to use the new go plugin architecture to support truly pluggable state databases that do not need to be compiled into Fabric.  This will make it easier to implement and support additional state databases, outside of the Fabric build.

Please see the design doc:
https://docs.google.com/document/d/1ZdxPWdxUwEDwRAKY8tewgjqh2qTZCm6RZ6tU9ccm4dM/edit?usp=sharing",,Berith,binhn,daijianw,denyeart,harsha544,luomin,magpie73,manxiaqu,mastersingh24,minollo,Senthil1,wutongtree,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16406,,,FAB-6263,,,,,,,,,,,FAB-60,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,,,,,,,"1|hzwton:",,,,Unset,,,,,,Unset,,,,,,,,,,,Berith,binhn,daijianw,denyeart,harsha544,luomin,magpie73,manxiaqu,mastersingh24,minollo,Senthil1,wutongtree,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/18 5:27 PM;Senthil1;[~denyeart] Chander has been working on this item for two weeks now. An initial prototype is ready. He will share the design docs and create sub-tasks. Once the design is approved, he can start uploading the code or make necessary changes as needed.;;;","26/Aug/18 5:10 AM;binhn;We could make CouchDB the first plugin and run all the existing tests against it. If all pass, a good sign. Or the other way around if we think CouchDB should be the default. I don't really have an opinion 1 way or the other, just that we shouldn't have 2 DBs in the base code.;;;","26/Aug/18 5:13 AM;binhn;I am also interested in revisiting RockDB as Facebook has changed the license to Apache v2 https://github.com/facebook/rocksdb/blob/master/LICENSE.Apache;;;","27/Aug/18 3:27 PM;Senthil1;[~binhn] Most solutions are already using CouchDB as the StateDB. Hence, i am not sure whether it is good to make it as a plugin now. We anyway need a simple embedded KV store (irrespective of the stateDB) to keep metadata info (like purge entries, history index etc...).;;;","26/Aug/19 8:39 AM;magpie73;It has been passed since your last comment. Is there any changes for this issue?

I wanna use mongodb as statedb because of the poor performance of couchdb - especially on write action.

In my lab, I changed statedb to mongodb plugin( with official mongodb driver) and I can get almost almost same TPS with goleveldb.

  ;;;","26/Aug/19 8:43 PM;mastersingh24;Go plugins have proven to be very problematic  ... we are moving away from Go plugins as external plug points.
We could consider using a plugin architecture assuming we actually build the plugins with the Fabric tree as part of a release.  But building and maintaining them outside the tree is no longer the direction we are going.

;;;","27/Aug/19 9:52 AM;magpie73;Thank you for your prompt comment.

Could you tell me how extra statedb support would be?

Would  FAB-6263 ( or  FAB-16406 ) be accepted? 

 

Thanks again.;;;","11/Sep/19 7:56 AM;magpie73;If this is official decision, I think issue should be closed as 'rejected'. ;;;","05/Oct/19 1:25 AM;denyeart;Go plugins are not a strategic direction for Fabric, closing...;;;",,,,,,,,,,,,,,
fabric docs TOC refactor,FAB-8666,28232,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,06/Mar/18 5:56 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,11/Mar/18 2:21 AM,v1.1.0,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,,,,,,The Fabric docs TOC was a mile long and that makes it difficult to navigate. A refactor to only list top-level content makes it much more accessible.,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyzxz:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Mar/18 9:53 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/18749/;;;","11/Mar/18 2:22 AM;denyeart;cherry picked and merged in release-1.1 : https://gerrit.hyperledger.org/r/#/c/18975/;;;",,,,,,,,,,,,,,,,,,,,,
"container.VMProcess should return valid, concrete type",FAB-8668,28234,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,06/Mar/18 6:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Mar/18 5:54 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,VMProcess returns a response as an empty interface which is then type asserted as a VMResp. This is a bit obtuse and is easy to fix.,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzyf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Mar/18 8:00 AM;sykesm;https://gerrit.hyperledger.org/r/18759;;;",,,,,,,,,,,,,,,,,,,,,,
IdentityManager refactoring,FAB-8670,28237,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,06/Mar/18 10:31 AM,21/Jul/18 3:47 AM,28/Oct/23 3:02 AM,20/Mar/18 5:55 AM,,,,,,,fabric-sdk-go,,,,0,,,,,,"* Cleanup separation between API and implementation
 * Move out of pkg/core",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwt8f:",,,,Unset,,,,,,Unset,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
capture docker logs in byfn tests,FAB-8671,28239,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Mar/18 12:02 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 12:39 AM,,,,v1.1.0,,,fabric-ci,,,,0,fabric-ci,,,,,"pipeout the docker logs of byfn and eyfn containers in fabric-samples tests and archive them in build artifacts

docker-compose-cli.yaml

base/peer-base.yaml",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyzz3:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Mar/18 12:31 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18767/;;;",,,,,,,,,,,,,,,,,,,,,,
Relax hardcoded limitation on CA endpoint,FAB-8673,28244,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid,,andybrucenet,andybrucenet,06/Mar/18 11:15 PM,01/May/19 3:34 AM,28/Oct/23 3:02 AM,01/May/19 3:34 AM,,,,,,,fabric-samples,,,,0,fabcar,,,,,"Underneath fabcar, enrollAdmin.js uses:
{quote}{{fabric_ca_client = new Fabric_CA_Client('http://localhost:7054', tlsOptions , 'ca.example.com', crypto_suite);}}
{quote}
In my case (Docker / Mac OSX), this loses because the CA is actually bound to all host IP addresses but *not* to localhost. The error I receive:
{quote}lbambprox300:fabcar l.abruce$ node enrollAdmin.js
 Store path:/work/hfc-key-store
 Error: Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]
 at ClientRequest.<anonymous> (/work/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:711:12)
 at ClientRequest.emit (events.js:127:13)
 at Socket.socketErrorListener (_http_client.js:394:9)
 at Socket.emit (events.js:127:13)
 at emitErrorNT (internal/streams/destroy.js:64:8)
 at process._tickCallback (internal/process/next_tick.js:114:19)
 Failed to enroll admin: Error: Failed to enroll admin
{quote}
The CA log ({{docker logs -f ca.example.com}}) shows:
{quote}2018/03/06 13:32:11 [DEBUG] CA initialization successful
 2018/03/06 13:32:11 [INFO] Home directory for default CA: /etc/hyperledger/fabric-ca-server
 2018/03/06 13:32:11 [DEBUG] 1 CA instance(s) running on server
 2018/03/06 13:32:11 [INFO] Listening on [http://0.0.0.0:7054|http://0.0.0.0:7054/]
{quote}
 On my Mac host, I can see the listening port:
{quote}lbambprox300:fabcar l.abruce$ netstat -an | grep 7054
 tcp6 0 0 ::1.7054 *.* LISTEN
 tcp4 0 0 *.7054 *.* LISTEN
{quote}
I can run a curl command (yup, I have iputils installed on the Mac via brew). 
{quote}lbambprox300:fabcar l.abruce$ the_first_host_ip=$(ip a | grep 'inet ' | grep -v 127.0.0.1 | head -n 1 | awk '\{print $2}' | awk -F'/' '\{print $1}')
 lbambprox300:fabcar l.abruce$ curl -v $the_first_host_ip:7054
 * Rebuilt URL to: 192.168.98.100:7054/
 * Trying 192.168.98.100...
 * TCP_NODELAY set
 * Connected to 192.168.98.100 (192.168.98.100) port 7054 (#0)
 > GET / HTTP/1.1
 > Host: 192.168.98.100:7054
 > User-Agent: curl/7.54.0
 > Accept: */*
 >
 < HTTP/1.1 404 Not Found
 < Content-Type: text/plain; charset=utf-8
 < X-Content-Type-Options: nosniff
 < Date: Tue, 06 Mar 2018 14:05:54 GMT
 < Content-Length: 19
 <
 404 page not found
 * Connection #0 to host 192.168.98.100 left intact{quote}
 

The fix is super-simple. In enrollAdmin.js:
{quote}{{fabric_ca_client = new Fabric_CA_Client(process.env.FABRIC_CA_ENDPOINT ? process.env.FABRIC_CA_ENDPOINT : 'http://localhost:7054', tlsOptions , 'ca.example.com', crypto_suite);}}
{quote}
{{When calling, just specify the environment:}}
 {{lbambprox300:fabcar l.abruce$ FABRIC_CA_ENDPOINT=""http://$the_first_host_ip:7054"" node enrollAdmin.js}}
 \{\{ Store path:/work/hfc-key-store}}
 \{\{ Successfully enrolled admin user ""admin""}}
 \{\{ Assigned the admin user to the fabric client ::(\{""name"":""admin"",""mspid"":""Org1MSP"",""roles"":null,""affiliation"":"""",""enrollmentSecret"":"""",""enrollment"":(\{""signingIdentity"":""eee5a725bf663eb3828e8a0f9b0e7611259b7ac64c8ff394f2c61ebd683ae87d"",""identity"":\{""certificate"":""-----BEGIN CERTIFICATE-----\nMIIB8DCCAZegAwIBAgIUbmu+4TT32rq0ZTak7+c7i/wnzbMwCgYIKoZIzj0EAwIw\nczELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT\nE2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwMzA2MTQwNTAwWhcNMTkwMzA2MTQw\nNTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\nBFIUZ01LZ7n1nshh6/wP/ZZuWrec7VhuYlBGP44v6UC6Mmb41ezfOcvo7MAvU9Jz\nY9QQiddweGR9jfnHw9E5A6WjbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E\nAjAAMB0GA1UdDgQWBBQd88pJq5KsndCur9ERBJuhXqzw5jArBgNVHSMEJDAigCBC\nOaoNzXba7ri6DNpwGFHRRQTTGq0bLd3brGpXNl5JfDAKBggqhkjOPQQDAgNHADBE\nAiAVNzJarP//sllQu7GuqBohU6vSpvQoJYXUY/BCbhIvPAIgQtosRWEeHNLSYmJu\nPTJJzPwobk4oK/1VD0WskTIePek=\n-----END CERTIFICATE-----\n""}}}}}

Woo. Hoo.

The same logic applies to the other node.js files. I've attached my edits to each.

The final invocation sequence looks like:

{{
the_first_host_ip=$(ip a | grep 'inet ' | grep -v 127.0.0.1 | head -n 1 | awk '\{print $2}' | awk -F'/' '\{print $1}')
 export FABRIC_CA_ENDPOINT=""http://$the_first_host_ip:7054""
 export FABRIC_PEER0_ENDPOINT=""grpc://$the_first_host_ip:7051""
 export FABRIC_PEER1_ENDPOINT=""grpc://$the_first_host_ip:7053""
 export FABRIC_ORDERER_ENDPOINT=""grpc://$the_first_host_ip:7050""
 node enrollAdmin.js
 node registerUser.js
 node query.js
 node invoke.js
 }}

 ",,andybrucenet,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Mar/18 11:15 PM;andybrucenet;enrollAdmin.js;https://jira.hyperledger.org/secure/attachment/14726/enrollAdmin.js","07/Mar/18 12:16 AM;andybrucenet;invoke.js;https://jira.hyperledger.org/secure/attachment/14727/invoke.js","07/Mar/18 12:16 AM;andybrucenet;query.js;https://jira.hyperledger.org/secure/attachment/14728/query.js","07/Mar/18 12:16 AM;andybrucenet;registerUser.js;https://jira.hyperledger.org/secure/attachment/14729/registerUser.js",,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz007:",,,,Unset,,,,,,Unset,,,,,,,,,,,andybrucenet,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/18 3:29 PM;davidkhala;fabcar is just a use case of fabric, it is not designed to be generic. I think hard code is OK for that.;;;",,,,,,,,,,,,,,,,,,,,,,
Refactor chain code access control to separate authentication from cert generation,FAB-8674,28245,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,07/Mar/18 12:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Mar/18 5:55 AM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"There are two aspects to the authentication layer used by chaincode support. The first is the generation of certificates for the handshakes from the chain code to the peer and the second is client authentication via certificates when the support server is accessed. The current factoring combines the two.

A different factoring would be to present a certificate generator to the chaincode support layer that could be used to create and propagate certificates to the launched chain code and middleware style authentication layer that wraps (instead of embedding) the chain code server for access control.

In general, we should try to adopt the middleware pattern where possible.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz00f:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Mar/18 12:28 AM;sykesm;https://gerrit.hyperledger.org/r/18779;;;",,,,,,,,,,,,,,,,,,,,,,
System Behave Framework: Verify full filename,FAB-8675,28247,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nagap,latitiah,latitiah,07/Mar/18 1:04 AM,30/Jul/19 10:48 AM,28/Oct/23 3:02 AM,30/Jul/19 10:48 AM,,,,,,,fabric-quality,,,,0,,,,,,"The behave statement
{code} Then the block file is fetched from peer ""peer0.org1.example.com"" at location "".""{code}
does not look for the complete filename with extension. This needs to be fixed and clarified.

The file should be <channelID>.block.

For example, given the channel ID ""mychannel"", the block file that gets fetched should be named ""mychannel.block"".",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz00n:",,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:48 AM;mastersingh24;Behave is no longer strategic;;;",,,,,,,,,,,,,,,,,,,,,,
System Behave Framework: Printing Debug statements,FAB-8676,28248,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,karmicway,latitiah,latitiah,07/Mar/18 2:10 AM,30/Jul/19 11:40 AM,28/Oct/23 3:02 AM,30/Jul/19 11:40 AM,,,,,,,fabric-quality,,,,0,,,,,,"Whenever there are errors in a behave test scenario, the print statements show some debug information containing the output of the command that was executed. The output that is printed should show the output from all of the peers when executing on multiple peers.

Note the ""output"" variable is a dictionary with the keys being the containers that the command is executed on.
",,AdnanChoudhury,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz00v:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:40 AM;mastersingh24;been open over a year with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,
fabric-samples permit fabric-ca sample to omit intermediate CAs,FAB-8679,28251,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,rennman,rennman,07/Mar/18 3:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,07/Mar/18 3:58 PM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"Obviously the intention of the environment variable

{{USE_INTERMEDIATE_CA=true}}

is to allow the user to selectively use intermediate CAs or exclusively root CAs.

However, there are two instances where intermediate CA certificates are referenced unconditionally:

{{export ORDERER_GENERAL_TLS_ROOTCAS=[$INT_CA_CHAINFILE]}}
{{export CORE_PEER_TLS_ROOTCERT_FILE=$INT_CA_CHAINFILE}}

These should be changed to:
{{export ORDERER_GENERAL_TLS_ROOTCAS=[$CA_CHAINFILE]}}
{{export CORE_PEER_TLS_ROOTCERT_FILE=$CA_CHAINFILE}}
respectively.



Moreover, the check
{{if $USE_INTERMEDIATE_CA; then}}

should read:
{{if test ""$USE_INTERMEDIATE_CA"" = ""true""; then}}
...",,denyeart,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz01b:",,,,,,,,,,,,,,,,,,,,,denyeart,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Mar/18 4:06 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18785/;;;","07/Mar/18 3:58 PM;denyeart;Merged.

[~rennman] [~aambati] please re-test latest fabric-samples.;;;",,,,,,,,,,,,,,,,,,,,,
Usability: The process for updating the endorsement policy for the chaincode is tedious,FAB-8680,28252,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,07/Mar/18 4:18 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,24/Apr/18 1:03 AM,v1.1.0,,,v1.3.0,,,fabric-peer,,,,0,,,,,,"The process for updating the policy on a channel for a chaincode requires that one reinstalls the chaincode for that channel (even though the software necessarily does not change). One must install chaincode changing the version, even though it's the exact same chaincode as the previous version. So if one wants to change the endorsement policy from ""OR"" to ""AND"", the following must be done when using CLI commands:
{code}
$ peer chaincode install --name mycc --version 1 --channelID behavesystest --tls true --cafile tlsca.example.com-cert.pem --orderer orderer.example.com:7050 --path github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 --lang GOLANG

$ peer chaincode upgrade --name mycc --version 1 --channelID behavesystest --tls true --cafile tlsca.example.com-cert.pem --orderer orderer.example.com:7050 --policy ""AND ('org1.example.com.client','org2.example.com.client')""
{code}
Changing the policy seems similar to changing a software's configuration. Some organizations will change the version, others may not. A fresh deployment of the same software is not needed in either situation and should not be necessary here. There should be a way to reference an existing chaincode path when changing the policy. I can see the argument for both sides when deciding whether or not to force the incrementing of the version.",,denyeart,jyellick,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzz01r:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,jyellick,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 5:23 AM;denyeart;Changing to Improvement for consideration as part of the lifecycle improvements in 1.2.;;;","10/Mar/18 4:19 AM;latitiah;I should also highlight that you must send args to the upgrade command when using the CLI. Otherwise it uses the default value of {} and returns the following error. Depending on the chaincode, this forces the upgrade to possibly change values during an upgrade. 

{code}Error: Empty JSON chaincode parameters must contain the following keys: 'Args' or 'Function' and 'Args'
      Usage:
        peer chaincode upgrade [flags]
      
      Flags:
        -C, --channelID string   The channel on which this command should be executed
        -c, --ctor string        Constructor message for the chaincode in JSON format (default ""{}""){code}

Either something should be documented to make sure that chaincode writers know that they must have a no-op function that can be used during upgrades or this command should be changed to allow for the absence of args as an input parameter.

;;;","10/Mar/18 12:50 PM;denyeart;I'm adding this item to the Lifecycle Improvements epic, so that this can be considered as part of the overall lifecycle design. [~jyellick];;;","24/Apr/18 1:03 AM;jyellick;This has been taken into account via the design for the new lifecycle, closing as a duplicate to reduce noise.;;;",,,,,,,,,,,,,,,,,,,
artifact docker container logs in nexus log server,FAB-8682,28254,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Mar/18 7:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 7:22 AM,,,,,,,fabric-ci,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz027:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/18 7:22 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18897/;;;",,,,,,,,,,,,,,,,,,,,,,
Split IdentityManager and CA Client interfaces,FAB-8683,28256,28237,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,07/Mar/18 12:48 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 8:19 AM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz02n:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Split IdentityManager and CA Client implementation,FAB-8684,28257,28237,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,07/Mar/18 12:50 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 1:15 PM,,,,,,,,,,,0,,,,,,"To use it for only enroll/reenroll, that is, the use cases that don't require the CA registrar identity",,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz02v:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Remove JSON and RAM ledger implementations,FAB-8685,28259,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,kchristidis,kchristidis,07/Mar/18 1:16 PM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,v1.1.0,,,,,,fabric-orderer,,,,0,help-wanted,,,,,"These two alternative, non-production ledger implementations have outlived their usefulness and should be removed from the code base. This should also allow us to remove the {{LedgerType}} setting from {{orderer.yaml}}.",,guoger,isaackbchain,jyellick,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz03b:",,,,Unset,,,,,,Unset,,,,,,,,,,,guoger,isaackbchain,jyellick,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/18 12:19 AM;jyellick;I can certainly see removing the option from {{orderer.yaml}} but are we sure there's no value in leaving at least the RAM ledger implementation around? In particular, for doing things like integration tests with multiple logical orderer processes, it still seems like a handy thing to keep around. Are we actively encountering problems maintaining them? Are we trying to change the ledger interface or similar?;;;","08/Mar/18 12:37 AM;kchristidis;I see these benefits that the RAM ledger in particular gives us ([~guoger] also mentioned benchmarks where we want to eliminate I/O as a throughput bottleneck), but I maintain that they are quite small and this doesn't justify their place in the master tree.

For instance, it is trivial to set {{Fileledger.Location}} to a temp path and defer-remove it at the end of the test. And I suspect the orderer is not the only component that writes to disk and then deletes those artifacts during testing.

FWIW, there _are_ also minor interface issues. Consider the fact that the {{Next}} method blocks until there is a new block available _or until {{Close}} is called_, which _is_ the case for the file ledger implementation, but is _not_ the case from RAM/JSON. (Can we fix that? Yeah. But we shouldn't have to carry that baggage along to begin with.);;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,
configtxgen should support a config argument,FAB-8686,28260,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wlahti,kchristidis,kchristidis,07/Mar/18 1:18 PM,08/Dec/18 4:51 AM,28/Oct/23 3:02 AM,08/May/18 12:01 PM,v1.1.0,,,v1.2.0,,,fabric-orderer,,,,0,help-wanted,,,,,"Similar to how {{cryptogen}} does it, {{configtxgen}} should support a {{config}} option:

{{configtxgen -config=./foo/configtx.yaml ...}}

When this is set, the usual config mechanism that looks for the {{FABRIC_CFG_PATH}} environment variable, and then the CWD, etc. is overriden.",,bjwswang,kchristidis,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3248,,FAB-3248,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz03j:",,,,Unset,,,,,,Unset,,,,,,,,,,,bjwswang,kchristidis,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Mar/18 3:38 AM;sykesm;[~bjwswang] - It looks like you've picked up this issue. Are you actively working it?

Thanks.;;;","03/Apr/18 6:20 PM;bjwswang;[~sykesm] I have finished  most of the code. But need to check the main_test.go code... will commit this part after our Chinese holiday.. Thanks!;;;","10/Apr/18 5:09 PM;bjwswang;[~sykesm] Already committed .Please review... ;;;","03/May/18 5:05 AM;wlahti;https://gerrit.hyperledger.org/r/c/21337/;;;",,,,,,,,,,,,,,,,,,,
fabric anchor peer consumes all memory and dies,FAB-8688,28262,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,john.d.sheehan,john.d.sheehan,07/Mar/18 8:19 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 11:01 PM,v1.1.0-preview,,,v1.0.7,v1.1.0,v1.2.0,fabric-gossip,,,,0,gossip,,,,,"I have the following (simplified) configuration, 5vms

vm0: orderer (solo)

vm1: peer0.org0 (anchor peer)

vm2: peer1.org0

vm3: peer0.org1 (anchor peer)

vm4: peer1.org1

 

After I create/fetch, join, update, install, and instantiate a chaincode, the anchor peers slowly consume all the memory on their vms. They also exhaust all the file descriptors.

 

10:49 AM ~/pkg-cli0    
: fabric@mem0-peer0Org0 0 %; sudo lsof -i -P |grep fabric
[sudo] password for fabric: 
sshd       8333 fabric    3u  IPv4 305300      0t0  TCP 59.27.089f.ip4.static.sl-reverse.com:22->gbibp9ph1--blueice3n1.emea.ibm.com:50174 (ESTABLISHED)
peer       8371 fabric   26u  IPv6 297874      0t0  TCP *:7051 (LISTEN)
peer       8371 fabric   27u  IPv6 297875      0t0  TCP *:7053 (LISTEN)
peer       8371 fabric   28u  IPv4 297876      0t0  TCP peer0.org0.example.com:7052 (LISTEN)
peer       8371 fabric   29u  IPv6 293829      0t0  TCP *:6060 (LISTEN)
peer       8371 fabric   30u  IPv4 300279      0t0  TCP peer0.org0.example.com:39694->orderer0.example.com:7050 (ESTABLISHED)
peer       8371 fabric   32u  IPv4 303776      0t0  TCP peer0.org0.example.com:37976->peer0.org1.example.com:7051 (ESTABLISHED)
peer       8371 fabric   37u  IPv4 300296      0t0  TCP peer0.org0.example.com:7052->peer0.org0.example.com:60316 (ESTABLISHED)
peer       8371 fabric   38u  IPv6 306403      0t0  TCP peer0.org0.example.com:7051->peer0.org1.example.com:49664 (ESTABLISHED)
peer       8371 fabric   39u  IPv6 303785      0t0  TCP peer0.org0.example.com:7051->peer0.org1.example.com:49638 (ESTABLISHED)
peer       8371 fabric   40u  IPv4 301705      0t0  TCP peer0.org0.example.com:37982->peer0.org1.example.com:7051 (ESTABLISHED)
peer       8371 fabric   41u  IPv4 303791      0t0  TCP peer0.org0.example.com:37984->peer0.org1.example.com:7051 (ESTABLISHED)
peer       8371 fabric   42u  IPv6 303793      0t0  TCP peer0.org0.example.com:7051->peer0.org1.example.com:49646 (ESTABLISHED)
peer       8371 fabric   43u  IPv6 303795      0t0  TCP peer0.org0.example.com:7051->peer0.org1.example.com:49648 (ESTABLISHED)
peer       8371 fabric   44u  IPv6 303798      0t0  TCP peer0.org0.example.com:7051->peer0.org1.example.com:49650 (ESTABLISHED)
peer       8371 fabric   45u  IPv6 303801      0t0  TCP pe ....

 

After about an hour,

: fabric@mem0-peer0Org0 0 %; sudo lsof -i -P |grep fabric |wc -l
1563

 

The logs from the peers are populated with the following,

createConnection to peer0.org0.example.com:7051
createConnection to peer0.org0.example.com:7051
createConnection success to  peer0.org0.example.com:7051
auth failure, remote endpoint  peer0.org0.example.com:7051 claims to be a different peer, expected [249 210 188 90 154 10 219 131 93 163 0 179 80 44 135 146 114 130 247 120 98 96 25 183 81 84 152 173 122 24 168 40] but got [158 223 71 133 65 188 150 122 216 109 203 141 72 228 30 37 164 247 117 59 199 140 85 142 236 105 225 76 205 115 251 234]
createConnection to peer0.org0.example.com:7051
auth failure, remote endpoint  peer0.org0.example.com:7051 claims to be a different peer, expected [249 210 188 90 154 10 219 131 93 163 0 179 80 44 135 146 114 130 247 120 98 96 25 183 81 84 152 173 122 24 168 40] but got [158 223 71 133 65 188 150 122 216 109 203 141 72 228 30 37 164 247 117 59 199 140 85 142 236 105 225 76 205 115 251 234]
createConnection to peer0.org0.example.com:7051
createConnection success to  peer0.org0.example.com:7051
createConnection to peer0.org0.example.com:7051

This comes from `fabric/gossip/comm/comm_impl.go:createConnection`

 

I'm not sure it is a configuration issue (firewall, /etc/hosts, core.yaml, configtx.yaml, crypto-config.yaml, orderer.yaml, etc) on my end, since both invoke and query seem to work as expected

 ",,denyeart,eragnoli,john.d.sheehan,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/18 12:54 AM;john.d.sheehan;peer0org0-3hr.png;https://jira.hyperledger.org/secure/attachment/14737/peer0org0-3hr.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz03z:",,,,,,,,,,,,,,,,,,,,,denyeart,eragnoli,john.d.sheehan,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Mar/18 12:21 AM;denyeart;[~john.d.sheehan] Are you suggesting that non-anchors in your network do not demonstrate this problem?

[~yacovm] What other information would help narrow down the problem?;;;","08/Mar/18 12:36 AM;yacovm;give me a stack trace of all goroutines please, on both ends of the connection after half the time they die. ;;;","08/Mar/18 12:36 AM;yacovm;you can do that by killing the peer with a SIGABRT signal;;;","08/Mar/18 12:39 AM;john.d.sheehan;[~denyeart] it appears non-anchors are not effected, currently,

: fabric@mem0-peer0Org0 0 %; sudo lsof -i -P |grep fabric |wc -l
9985

: fabric@mem0-peer1Org0 0 %; sudo lsof -i -P |grep fabric |wc -l
8

: fabric@mem1-peer0Org1 0 %; sudo lsof -i -P |grep fabric |wc -l
9995

: fabric@mem1-peer1Org1 0 %; sudo lsof -i -P |grep fabric |wc -l
7

 

and

: fabric@mem0-peer0Org0 0 %; free -m
              total        used        free      shared  buff/cache   available
Mem:           3999        1725         173          40        2100        2121
Swap:          2047           0        2047



: fabric@mem0-peer1Org0 0 %; free -m
              total        used        free      shared  buff/cache   available
Mem:           3999         165        1894          40        1938        3714
Swap:          2047           0        2047



: fabric@mem1-peer0Org1 0 %; free -m
              total        used        free      shared  buff/cache   available
Mem:           3999        1492         403          25        2103        2370
Swap:          2047           0        2047



: fabric@mem1-peer1Org1 0 %; free -m
              total        used        free      shared  buff/cache   available
Mem:           3999         143        1919          40        1936        3736
Swap:          2047           0        2047;;;","08/Mar/18 12:48 AM;yacovm;Do you have a load balancer somewhere?;;;","08/Mar/18 12:55 AM;john.d.sheehan;While the stack trace is still pasting, I grabbed this earlier,

go tool pprof  --nodecount=1000 --nodefraction=0.00001  -png http://localhost:6060/debug/pprof/heap > peer0org0-3hr.png !peer0org0-3hr.png!;;;","08/Mar/18 12:58 AM;yacovm;i think i found the bug... will upload a change set in a few minutes;;;","08/Mar/18 12:58 AM;john.d.sheehan;[~yacovm] re:loadbalancer, well the vms are in a datacenter, but they are all on the same subnet, so I don't know. I didn't add one.;;;","08/Mar/18 1:01 AM;john.d.sheehan;[~yacovm] you found the bug quicker than it takes to copy and paste the stack trace into a terminal :);;;","08/Mar/18 1:02 AM;yacovm;I think this should fix it https://gerrit.hyperledger.org/r/#/c/18819/;;;","08/Mar/18 1:21 AM;john.d.sheehan;still showing these auth failures,

createConnection to peer0.org1.example.com:7051
createConnection success to  peer0.org1.example.com:7051
createConnection to peer0.org1.example.com:7051
auth failure, remote endpoint  peer0.org1.example.com:7051 claims to be a different peer, expected [28 168 154 200 135 17 141 147 116 30 254 241 114 34 94 42 19 98 57 55 96 91 159 124 26 242 173 168 199 223 113 60] but got [199 247 88 142 244 39 77 203 186 217 71 34 65 75 216 156 48 90 254 79 57 228 122 225 87 162 62 240 251 29 12 86]
Probe
Probe
createConnection to peer0.org1.example.com:7051
createConnection to peer0.org1.example.com:7051
auth failure, remote endpoint  peer0.org1.example.com:7051 claims to be a different peer, expected [28 168 154 200 135 17 141 147 116 30 254 241 114 34 94 42 19 98 57 55 96 91 159 124 26 242 173 168 199 223 113 60] but got [199 247 88 142 244 39 77 203 186 217 71 34 65 75 216 156 48 90 254 79 57 228 122 225 87 162 62 240 251 29 12 86]
createConnection success to  peer0.org1.example.com:7051

 

but the open file descriptor count seems stable,

: fabric@mem0-peer0Org0 0 %; sudo lsof -i -P |grep fabric 
peer      30017 fabric   26u  IPv6 411410      0t0  TCP *:7051 (LISTEN)
peer      30017 fabric   27u  IPv6 411411      0t0  TCP *:7053 (LISTEN)
peer      30017 fabric   28u  IPv4 411412      0t0  TCP peer0.org0.example.com:7052 (LISTEN)
peer      30017 fabric   29u  IPv6 413102      0t0  TCP *:6060 (LISTEN)
peer      30017 fabric   30u  IPv4 413948      0t0  TCP peer0.org0.example.com:60114->orderer0.example.com:7050 (ESTABLISHED)
peer      30017 fabric   37u  IPv4 415937      0t0  TCP peer0.org0.example.com:7052->peer0.org0.example.com:52504 (ESTABLISHED)
peer      30017 fabric   38u  IPv6 413991      0t0  TCP peer0.org0.example.com:7051->peer1.org0.example.com:36562 (ESTABLISHED)
peer      30017 fabric   39u  IPv4 414307      0t0  TCP peer0.org0.example.com:58806->peer0.org1.example.com:7051 (ESTABLISHED);;;","08/Mar/18 1:49 AM;yacovm;yep, this was supposed to fix the file descriptor issue, not the auth failures.

Could you please tell me if the memory consumption is still increasing ?;;;","08/Mar/18 1:55 AM;john.d.sheehan;[~yacovm] memory consumption seems stable. I'll let it run overnight and update then.;;;","08/Mar/18 5:54 AM;denyeart;Merged in 1.1 and 1.2 (master).  Awaiting unrelated CI fix in 1.0.x branch.;;;","08/Mar/18 5:30 PM;john.d.sheehan;[~yacovm] memory consumption seems stable,

: fabric@mem0-peer0Org0 0 %; while [ 1 ] ; do echo $(date); free -m; echo ""--""; sleep 3600; done
Wed Mar 7 18:02:37 UTC 2018
              total        used        free      shared  buff/cache   available
Mem:           3999         172        1657          40        2169        3700
Swap:          2047           0        2047
--
Wed Mar 7 19:02:37 UTC 2018
              total        used        free      shared  buff/cache   available
Mem:           3999         176        1652          40        2169        3696
Swap:          2047           0        2047
--

...

Thu Mar 8 07:02:37 UTC 2018
              total        used        free      shared  buff/cache   available
Mem:           3999         233        1582          40        2183        3638
Swap:          2047           0        2047
--
Thu Mar 8 08:02:37 UTC 2018
              total        used        free      shared  buff/cache   available
Mem:           3999         238        1576          40        2184        3633
Swap:          2047           0        2047



 

And the other anchor peer shows something similar;;;","08/Mar/18 5:42 PM;yacovm;Happy to hear that. Thanks for the catch, that bug has been there for around a year and no one noticed.
This one https://gerrit.hyperledger.org/r/#/c/18823/ is still waiting to be merged to v1.0, [~mastersingh24] - can we override the CI and merge it?

[~john.d.sheehan] - as for the ""claims to be a different peer"" - it's most likely a configuration issue, as this is by design.
Please contact me via rocket chat and we'll solve your configuration issue. ;;;","08/Mar/18 8:42 PM;john.d.sheehan;The auth failure message was due to a misconfiguration of the CORE_PEER_GOSSIP_EXTERNALENDPOINT and CORE_PEER_GOSSIP_BOOTSTRAP variables by me.
With patch 18823, everything is working as expected.;;;",,,,,,
Enhance Ledger Concept topic,FAB-8689,28263,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,odowdaibm,odowdaibm,07/Mar/18 8:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,06/Apr/18 11:59 PM,,,,v1.2.0,,,fabric-docs,,,,1,Documentation,,,,,Add conceptual diagrams and examples to existing Ledger Concept topic to help user understanding.  Existing topic [https://hyperledger-fabric.readthedocs.io/en/latest/ledger.html],,luomin,odowdaibm,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwtxr:",,,,,,,,,,,,,,,,,,,,,luomin,odowdaibm,pandrejko,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Mar/18 11:42 PM;odowdaibm;The changes for this JIRA are contained in patchset [https://gerrit.hyperledger.org/r/c/18813/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
peer --version description inaccurate,FAB-8691,28267,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,luomin,sanchezl,sanchezl,07/Mar/18 11:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 9:41 AM,v1.1.0,,,v1.2.0,,,fabric-peer,,,,0,help-wanted,,,,,"The {{peer}} executable help contains the following output:

{{  -v, --version  Display current version of fabric peer server}}

When using the {{peer}} executable as a client of a peer server it outputs the version of the {{peer}} executable itself, not that of the remote peer server.

At minimun, the description should not say _server_.

 ",,luomin,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz04n:",,,,,,,,,,,,,,,,,,,,,luomin,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Mar/18 1:06 PM;luomin;https://gerrit.hyperledger.org/r/#/c/18913/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE testcase: 1 million invokes (marbles02) with indexing,FAB-8694,28271,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,AdnanChoudhury,AdnanChoudhury,08/Mar/18 12:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Mar/18 9:58 PM,,,,,,,fabric-quality,,,,0,,,,,,"Test name: Performance test: 1M invokes, 2 channels
 Component: Performance test
 Description: performance events per channel with couchDB with indexing
     chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
     transactions: 4 threads, each thread sends 250000 invokes concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Event:
          service: Filtered Block
          listener: block
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself",,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzz05j:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"23/Mar/18 5:25 AM;dongming;https://gerrit.hyperledger.org/r/#/c/19627/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE testcase: 1 million rich query (marbles) with indexing for 2-field selector,FAB-8695,28272,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,AdnanChoudhury,AdnanChoudhury,08/Mar/18 1:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/May/18 1:22 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"Test name: Performance test: 1M  richqueries, 2 channels
Component: Performance test
Description: performance events per channel with couchDB with 2-field indexing
    chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
    transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 250000

         thread 1 sends to org1 peer1 on channel 1
         thread 2 sends to org2 peer1 on channel 1
         thread 3 sends to org1 peer1 on channel 2
         thread 4 sends to org2 peer1 on channel 2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Client Driver: PTE

Pre-requisite: in order to query the transactions exist in the DB, --FAB-8694-- needs to be executed first. Without execution of --FAB-8694--, the queries will return invalid since the transactions do not exist in the DB.

Results:
The test passes if
    the execution completes without error",,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8239,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzz05r:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,true,"15/May/18 10:46 PM;dongming;https://gerrit.hyperledger.org/r/#/c/21811/;;;",,,,,,,,,,,,,,,,,,,,,,
PTE testcase: 1 million rich query (marbles) with indexing for 4-field selector,FAB-8696,28273,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,AdnanChoudhury,AdnanChoudhury,08/Mar/18 1:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,18/May/18 1:22 AM,,,,v1.1.1,,,fabric-quality,,,,0,,,,,,"Test name: Performance test: 1M  richqueries, 2 channels
Component: Performance test
Description: performance events per channel with couchDB with 4-field indexing
    chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
    transactions: 4 threads, each thread sends 250000 queries concurrently with tx id from 1 to 250000

         thread 1 sends to org1 peer1 on channel 1
         thread 2 sends to org2 peer1 on channel 1
         thread 3 sends to org1 peer1 on channel 2
         thread 4 sends to org2 peer1 on channel 2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Client Driver: PTE

Pre-requisite: in order to query the transactions exist in the DB, --FAB-8694-- needs to be executed first. Without execution of --FAB-8694--, the queries will return invalid since the transactions do not exist in the DB.

Results:
The test passes if
    the execution completes without error",,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8089,,,,,,,,,"1|hzz05z:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"15/May/18 10:46 PM;dongming;https://gerrit.hyperledger.org/r/#/c/21811/;;;",,,,,,,,,,,,,,,,,,,,,,
HYGIENE: Gossip unit tests take too long to complete,FAB-8697,28274,,Task,Backlog,FAB,Fabric,software,denyeart,,,Highest,,,sykesm,sykesm,08/Mar/18 1:40 AM,03/Dec/19 5:30 AM,28/Oct/23 3:02 AM,,v1.2.0,,,,,,fabric-gossip,,,,0,ci,hygiene,,,,"Gossip unit tests take nearly 8 minutes to run vs 3 minutes for the rest of the fabric code base. This is unnecessarily elongating the build process performed in each commit.

Example:
{quote}
Attaching to couchdb, unittest_unit-tests_1
couchdb       | WARNING: no logs are available with the 'none' log driver
unit-tests_1  | experimental
unit-tests_1  | ok  	github.com/hyperledger/fabric/bccsp	0.035s	coverage: 100.0% of statements
...
unit-tests_1  | ok  	github.com/hyperledger/fabric/protos/utils	0.406s	coverage: 85.7% of statements
unit-tests_1  | 
unit-tests_1  | real	2m56.011s
unit-tests_1  | user	6m31.110s
unit-tests_1  | sys	2m57.420s
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/api	0.039s	coverage: 100.0% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/comm	18.118s	coverage: 89.0% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/comm/mock	0.042s	coverage: 83.3% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/common	0.007s	coverage: 87.5% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/discovery	28.087s	coverage: 83.5% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/election	9.280s	coverage: 93.8% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/filter	0.041s	coverage: 96.9% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip	69.855s	coverage: 85.6% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/algo	4.560s	coverage: 97.1% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/channel	18.720s	coverage: 93.8% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/msgstore	8.043s	coverage: 100.0% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/pull	4.390s	coverage: 91.8% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/identity	12.047s	coverage: 100.0% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/integration	0.114s	coverage: 78.6% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/privdata	17.742s	coverage: 87.9% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/service	125.806s	coverage: 81.2% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state	88.259s	coverage: 79.2% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state/mocks	0.038s	coverage: 71.4% of statements
unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/util	4.095s	coverage: 80.5% of statements
unit-tests_1  | experimental pluginsenabled
unit-tests_1  | 
unit-tests_1  | real	7m50.811s
unit-tests_1  | user	1m20.850s
unit-tests_1  | sys	1m21.050s
{quote}

* Where timeouts and polling in the production code are causing the delays, a mechanism should be introduced to prevent the the delays in unit tests. This could include things like fake clocks, mocked dependencies, or explicit configuration of very short timeouts.
* Tests that take longer than a second should, ideally, be enabled for parallel execution.
* Tests that take longer than 5 seconds should be skipped when the -short flag is used when testing
",,C0rWin,ronenschafferibm,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14772,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jan/19 12:14 AM;sykesm;gossip.log;https://jira.hyperledger.org/secure/attachment/16506/gossip.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz067:",,,,,,,,,,,,,,,,,,,,,C0rWin,ronenschafferibm,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/May/18 1:11 AM;sykesm;[~C0rWin] has someone been identified to work on this issue? These tests are consuming 417s (almost 7 minutes) of the 16m41s of test execution.
{code:java}
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/gossip	92.796s	coverage: 85.1% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/gossip/algo	5.620s	coverage: 97.1% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/gossip/channel	16.021s	coverage: 90.7% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/gossip/msgstore	8.015s	coverage: 100.0% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/gossip/pull	4.353s	coverage: 91.8% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/identity	12.017s	coverage: 100.0% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/privdata	8.846s	coverage: 84.7% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/service	177.343s	coverage: 81.4% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/state	32.088s	coverage: 80.3% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/state/mocks	0.014s	coverage: 58.8% of statements
unit-tests_1  | ok  github.com/hyperledger/fabric/gossip/util	4.043s	coverage: 78.2% of statements
unit-tests_1  | 
unit-tests_1  | real	16m41.004s
unit-tests_1  | user	10m38.180s
unit-tests_1  | sys	5m4.060s
unit-tests_1  | experimental pluginsenabled
unit-tests_1  | ok  github.com/hyperledger/fabric/core/scc	17.988s	coverage: 86.5% of statements{code};;;","31/May/18 3:41 AM;C0rWin;[~sykesm] we do have plans to refactor our tests, however this would be handled within v1.3 time frame.;;;","05/Jan/19 12:14 AM;sykesm;Running  on master just after the release of 1.4, here's the output of the tests. There are still a large number that take a significant amount of time.

 [^gossip.log] 

I'll highlight a few in future updates...;;;","05/Jan/19 6:33 AM;sykesm;{code}
---  PASS:  TestMsgStoreExpirationWithMembershipMessages                 75.01s
---  PASS:  TestMsgStoreExpiration                                       66.03s
---  PASS:  TestLeaderElectionWithRealGossip                             46.05s
---  PASS:  TestLeaderYield                                              42.02s
---  PASS:  TestWithStaticDeliverClientBothStaticAndLeaderElection       32.02s
---  PASS:  TestMembershipConvergence                                    29.05s
---  PASS:  TestConnectToAnchorPeers                                     25.05s
---  PASS:  TestLargeBlockGap                                            20.88s
---  PASS:  TestEndedGoroutines                                          20.02s
---  PASS:  TestAck                                                      16.09s
---  PASS:  TestCertExpiration                                           16.02s
---  PASS:  TestChannelBlockExpiration                                   16.01s
---  PASS:  TestPull                                                     15.01s
---  PASS:  TestPullerRetries                                            15.01s
---  PASS:  TestNewGossipStateProvider_SendingManyMessages               14.15s
---  PASS:  TestLeaderElectionWithDeliverClient                          14.04s
---  PASS:  TestDataLeakage                                              14.03s
---  PASS:  TestIdentityExpiration                                       14.02s
---  PASS:  TestSendByCriteria                                           14.01s
---  PASS:  TestInitiateSync                                             13.51s
---  PASS:  TestHandshake                                                13.07s
---  PASS:  TestAccessControl                                            12.13s
---  PASS:  TestNewGossipStateProvider_BatchingOfStateRequest            11.71s
---  PASS:  TestMembershipRequestSpoofing                                10.04s
---  PASS:  TestCloseConn                                                10.01s
---  PASS:  TestPullerPeerNotEligible                                    10.01s
---  PASS:  TestTransferOfPvtDataBetweenPeers                            10.01s
---  PASS:  TestLedgerHeightFromProperties                               10.00s
---  PASS:  TestDissemination                                            9.54s
---  PASS:  TestConfidentiality                                          9.06s
---  PASS:  TestDisclosurePolicyWithPull                                 9.02s
---  PASS:  TestListInvalidIdentities                                    9.01s
---  PASS:  TestGetFullMembership                                        8.53s
---  PASS:  TestMembership                                               8.03s
---  PASS:  TestExpiration                                               8.01s
---  PASS:  TestConvergence                                              7.52s
---  PASS:  TestCertRevocation                                           7.19s
---  PASS:  TestNoMessagesSelfLoop                                       7.03s
---  PASS:  TestAnchorPeer                                               6.03s
---  PASS:  TestExpiration                                               6.02s
---  PASS:  TestMultipleOrgEndpointLeakage                               6.02s
---  PASS:  TestLeaveChannel                                             6.01s
---  PASS:  TestValidation                                               6.01s
---  PASS:  TestBlockingEnqueue                                          5.48s
---  PASS:  TestConnectUnexpectedPeer                                    5.03s
---  PASS:  TestExpirationConcurrency                                    5.01s
---  PASS:  TestConnectUnexpectedPeer/Unexpected_organization            5.00s
---  PASS:  TestPullerDataNotAvailable                                   5.00s
---  PASS:  TestLeadershipTakeover                                       4.76s
---  PASS:  TestGossipStateProvider_TestStateMessages                    4.71s
---  PASS:  TestChannelPulledBadBlocks                                   4.62s
---  PASS:  TestYieldSinglePeer                                          4.55s
---  PASS:  TestPullEngineAll2AllWithIncrementalSpawning                 4.53s
---  PASS:  TestProbe                                                    4.25s
---  PASS:  TestChannelMsgStoreEviction                                  4.17s
---  PASS:  TestNewPubsub                                                4.02s
---  PASS:  TestChannelPullAccessControl                                 4.01s
---  PASS:  TestPullerNoPeersKnown                                       4.01s
---  PASS:  TestWithStaticDeliverClientLeader                            4.01s
---  PASS:  TestWithStaticDeliverClientNotLeader                         4.01s
---  PASS:  TestChannelPeerNotInChannel                                  4.00s
---  PASS:  TestLeaveChannel                                             4.00s
---  PASS:  TestStop                                                     4.00s
---  PASS:  TestYieldAllPeers                                            3.63s
---  PASS:  TestStop                                                     3.61s
---  PASS:  TestConvergence                                              3.41s
---  PASS:  TestPartition                                                3.41s
---  PASS:  TestAddAndRemove                                             3.36s
---  PASS:  TestYield                                                    3.12s
---  PASS:  TestChannelStop                                              3.01s
---  PASS:  TestConnect                                                  3.01s
---  PASS:  TestInitPeersStartAtIntervals                                3.01s
---  PASS:  TestProceedWithoutPrivateData                                3.01s
---  PASS:  TestConcurrency                                              3.00s
---  PASS:  TestExpiration                                               3.00s
---  PASS:  TestGossipDiscoverySkipConnectingToLocalhostBootstrap        3.00s
---  PASS:  TestMemRespDisclosurePol                                     3.00s
---  PASS:  TestBatchingEmitterCounter                                   2.41s
---  PASS:  TestReConnections                                            2.07s
---  PASS:  TestBootstrapPeerMisConfiguration                            2.02s
---  PASS:  TestInitGossipService                                        2.02s
---  PASS:  TestNonResponsivePing                                        2.01s
---  PASS:  TestPayloadsBufferImpl_Interleave                            2.01s
---  PASS:  TestBiDiUpdates                                              2.00s
---  PASS:  TestFilter                                                   2.00s
---  PASS:  TestLatePeers                                                2.00s
---  PASS:  TestMsgStoreNotExpire                                        2.00s
---  PASS:  TestMultipleInitiators                                       2.00s
---  PASS:  TestPullEngineSelectiveUpdates                               2.00s
---  PASS:  TestSpread                                                   2.00s
---  PASS:  TestPullEngine_Stop                                          1.61s
---  PASS:  TestUpdate                                                   1.51s
---  PASS:  TestValidation/membership_request                            1.50s
---  PASS:  TestValidation/membership_response                           1.50s
---  PASS:  TestOnDemandGossip                                           1.40s
---  PASS:  TestCertStoreBadSignature                                    1.16s
---  PASS:  TestCertStoreMismatchedIdentity                              1.16s
---  PASS:  TestCertStoreShouldSucceed                                   1.16s
---  PASS:  TestChannelPull                                              1.16s
---  PASS:  TestChannelPullWithDigestsFilter                             1.15s
---  PASS:  TestBatchingEmitterStop                                      1.11s
---  PASS:  TestCertificateExtraction                                    1.02s
---  PASS:  TestChannelStateInfoSnapshot                                 1.01s
---  PASS:  TestGossipDiscoveryStopping                                  1.01s
---  PASS:  TestAdapterImpl_Gossip                                       1.00s
---  PASS:  TestBasic                                                    1.00s
---  PASS:  TestByzantineResponder                                       1.00s
---  PASS:  TestChannelAddToMessageStore                                 1.00s
---  PASS:  TestChannelReconfigureChannel                                1.00s
---  PASS:  TestHaltChainProcessing                                      1.00s
---  PASS:  TestInitPeersAtSameTime                                      1.00s
---  PASS:  TestInterceptAcks                                            1.00s
---  PASS:  TestJoinChannelConfig                                        1.00s
---  PASS:  TestProdConstructor                                          1.00s
{code};;;","23/May/19 3:26 PM;ronenschafferibm;[~sykesm]
I'd like to know if you still have the script that created the sorted by time list of tests;;;","24/May/19 12:41 AM;sykesm;{quote}I'd like to know if you still have the script that created the sorted by time list of tests{quote}
No, but this one liner seems to work:

{code}
go test -v ./... | grep '^--- PASS:' | sed 's/[()]//g' | sort -gr -k 4
{code}

generated this output this morning:

{code}
--- PASS: TestMsgStoreExpirationWithMembershipMessages 75.01s
--- PASS: TestMsgStoreExpiration 67.53s
--- PASS: TestLeaderElectionWithRealGossip 32.06s
--- PASS: TestLargeBlockGap 20.70s
--- PASS: TestMembershipConvergence 20.30s
--- PASS: TestNewGossipStateProvider_SendingManyMessages 16.86s
--- PASS: TestAck 16.06s
--- PASS: TestCertExpiration 16.01s
--- PASS: TestChannelBlockExpiration 16.00s
--- PASS: TestAccessControl 14.87s
--- PASS: TestInitiateSync 13.52s
--- PASS: TestMembershipMetrics 13.10s
--- PASS: TestHandshake 13.05s
--- PASS: TestWithStaticDeliverClientLeader 12.01s
--- PASS: TestNewGossipStateProvider_BatchingOfStateRequest 12.00s
--- PASS: TestPull 10.13s
--- PASS: TestSendByCriteria 10.12s
--- PASS: TestLeaderElectionWithDeliverClient 10.05s
--- PASS: TestPullerPeerNotEligible 10.01s
--- PASS: TestCloseConn 10.01s
--- PASS: TestTransferOfPvtDataBetweenPeers 10.00s
--- PASS: TestLedgerHeightFromProperties 10.00s
--- PASS: TestListInvalidIdentities 9.00s
--- PASS: TestGetFullMembership 8.53s
--- PASS: TestLeaderYield 8.52s
--- PASS: TestMembershipRequestSpoofing 8.04s
--- PASS: TestExpiration 8.00s
--- PASS: TestConvergence 7.53s
--- PASS: TestValidation 7.52s
--- PASS: TestDisclosurePolicyWithPull 7.52s
--- PASS: TestCertRevocation 7.17s
--- PASS: TestConfidentiality 7.06s
--- PASS: TestIdentityExpiration 6.20s
--- PASS: TestBlockingEnqueue 5.40s
--- PASS: TestDataLeakage 5.07s
--- PASS: TestConnectUnexpectedPeer 5.03s
--- PASS: TestAnchorPeer 5.03s
--- PASS: TestNoMessagesSelfLoop 5.01s
--- PASS: TestPullerDataNotAvailable 5.00s
--- PASS: TestExpirationConcurrency 5.00s
--- PASS: TestLeadershipTakeover 4.77s
--- PASS: TestChannelPulledBadBlocks 4.61s
--- PASS: TestYieldSinglePeer 4.54s
--- PASS: TestPullEngineAll2AllWithIncrementalSpawning 4.52s
--- PASS: TestExpiration 4.51s
--- PASS: TestMetrics 4.48s
--- PASS: TestProbe 4.24s
--- PASS: TestChannelMsgStoreEviction 4.17s
--- PASS: TestNewPubsub 4.03s
--- PASS: TestWithStaticDeliverClientNotLeader 4.01s
--- PASS: TestWithStaticDeliverClientBothStaticAndLeaderElection 4.01s
--- PASS: TestChannelPeerNotInChannel 4.01s
--- PASS: TestStop 4.00s
--- PASS: TestPullerNoPeersKnown 4.00s
--- PASS: TestLeaveChannel 4.00s
--- PASS: TestChannelPullAccessControl 4.00s
--- PASS: TestMembership 3.66s
--- PASS: TestStop 3.61s
--- PASS: TestDissemination 3.52s
--- PASS: TestPartition 3.41s
--- PASS: TestConvergence 3.41s
--- PASS: TestConnectToAnchorPeers 3.12s
--- PASS: TestYield 3.11s
--- PASS: TestYieldAllPeers 3.03s
--- PASS: TestConnect 3.02s
--- PASS: TestProceedWithoutPrivateData 3.01s
--- PASS: TestMemRespDisclosurePol 3.01s
--- PASS: TestInitPeersStartAtIntervals 3.01s
--- PASS: TestConcurrency 3.01s
--- PASS: TestGossipDiscoverySkipConnectingToLocalhostBootstrap 3.00s
--- PASS: TestExpiration 3.00s
--- PASS: TestChannelStop 3.00s
--- PASS: TestBatchingEmitterCounter 2.40s
--- PASS: TestAddAndRemove 2.12s
--- PASS: TestLeaveChannel 2.02s
--- PASS: TestBootstrapPeerMisConfiguration 2.02s
--- PASS: TestPayloadsBufferImpl_Interleave 2.01s
--- PASS: TestSpread 2.00s
--- PASS: TestPullEngineSelectiveUpdates 2.00s
--- PASS: TestMultipleInitiators 2.00s
--- PASS: TestMsgStoreNotExpire 2.00s
--- PASS: TestLatePeers 2.00s
--- PASS: TestInitGossipService 2.00s
--- PASS: TestFilter 2.00s
--- PASS: TestBiDiUpdates 2.00s
--- PASS: TestMultipleOrgEndpointLeakage 1.69s
--- PASS: TestPullEngine_Stop 1.61s
--- PASS: TestUpdate 1.52s
--- PASS: TestOnDemandGossip 1.40s
--- PASS: TestCertStoreMismatchedIdentity 1.16s
--- PASS: TestCertStoreBadSignature 1.16s
--- PASS: TestChannelPullWithDigestsFilter 1.15s
--- PASS: TestChannelPull 1.15s
--- PASS: TestCertStoreShouldSucceed 1.15s
--- PASS: TestBatchingEmitterStop 1.11s
--- PASS: TestHaltChainProcessing 1.01s
--- PASS: TestGossipDiscoveryStopping 1.01s
--- PASS: TestCertificateExtraction 1.01s
--- PASS: TestProdConstructor 1.00s
--- PASS: TestJoinChannelConfig 1.00s
--- PASS: TestInterceptAcks 1.00s
--- PASS: TestInitPeersAtSameTime 1.00s
--- PASS: TestChannelStateInfoSnapshot 1.00s
--- PASS: TestChannelReconfigureChannel 1.00s
--- PASS: TestChannelAddToMessageStore 1.00s
--- PASS: TestByzantineResponder 1.00s
--- PASS: TestBasic 1.00s
--- PASS: TestAdapterImpl_Gossip 1.00s
{code}

;;;",,,,,,,,,,,,,,,,,
Broken Link in Capabilities Doc,FAB-8698,28275,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nickgaski,nickgaski,nickgaski,08/Mar/18 2:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Mar/18 6:01 AM,v1.1.0,v1.2.0,,v1.1.0,v1.2.0,,fabric-docs,,,,0,Documentation,,,,,minor fix for a broken link which arose due to naming alterations. ,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz06f:",,,,,,,,,,,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Clarify channel update gossip leader election section,FAB-8700,28277,27885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,08/Mar/18 2:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 4:18 AM,,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,,,,,,The gossip leader election section of the channel update tutorial is vague about whether any settings need to be changed or what setting org3's peers are using for EYFN. This task will clarify that the settings are already set for EYFN in the docker-compose file. ,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz06v:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Mar/18 5:07 AM;wlahti;master branch- https://gerrit.hyperledger.org/r/c/18833/
release-1.1 branch - [https://gerrit.hyperledger.org/r/c/18895/];;;",,,,,,,,,,,,,,,,,,,,,,
CouchDB bulk retrieve is not retrieving full batches for blind writes,FAB-8701,28278,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,Senthil1,denyeart,denyeart,08/Mar/18 2:58 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,19/Apr/18 10:41 PM,,,,,,,fabric-ledger,,,,0,,,,,,See review comments in : [https://gerrit.hyperledger.org/r/#/c/17541/] .,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx00v:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/18 7:57 PM;Senthil1;[~denyeart] Can we close this item as [~manish-sethi] CR resolved this issue? https://gerrit.hyperledger.org/r/#/c/19093/5/;;;","19/Apr/18 10:41 PM;denyeart;Sure, closing.;;;",,,,,,,,,,,,,,,,,,,,,
Enable scc plugin tests on Darwin,FAB-8703,28280,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,08/Mar/18 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,09/Mar/18 6:32 AM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"Since MacOS supports go plugins and it's one of the primary development platforms, enable the scc plugin tests for Darwin.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz07b:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Mar/18 3:44 AM;sykesm; https://gerrit.hyperledger.org/r/18837;;;",,,,,,,,,,,,,,,,,,,,,,
Remove samplesyscc package from scc,FAB-8705,28282,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,08/Mar/18 4:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,16/Mar/18 4:52 AM,v1.2.0,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"The sample chaincode only appears to be used by tests in the core/chaincode package. Given that's the only user, move the code over to there.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwsrz:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Mar/18 4:19 AM;sykesm;https://gerrit.hyperledger.org/r/18839;;;",,,,,,,,,,,,,,,,,,,,,,
Evaluate users of the common/metadata package and reduce the scope,FAB-8706,28283,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wlahti,sykesm,sykesm,08/Mar/18 4:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/Mar/18 3:33 AM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"Link flags are used to set the following values in fabric/common/metadata/metadata.go:

// Variables defined by the Makefile and passed in with ldflags
var Version string
var BaseVersion string
var BaseDockerLabel string
var DockerNamespace string
var BaseDockerNamespace string
var Experimental string

Various bits of code then reference those values to use them in various ways...

Instead of *getting* these values, the code that needs them should explicitly be *told* what to use via injection - either as fields on a struct or via a configuration pattern for the code.

The values should then be moved to variables on the appropriate mains and the build process updated to set the values on main instead of metadata.

We know we're done when the metadata package no longer exists and the link flags only update values on the main package.",,ChristopherFerris,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwss7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 9:38 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/19255/;;;",,,,,,,,,,,,,,,,,,,,,,
Remove deprecated code from channel,FAB-8707,28284,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,biljana.lukovic,biljana.lukovic,08/Mar/18 5:11 AM,26/Aug/19 6:34 PM,28/Oct/23 3:02 AM,26/Aug/19 6:34 PM,,,,,,,,,,,0,,,,,,,,biljana.lukovic,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz07r:",,,,Unset,,,,,,Unset,,,,,,,,,,,biljana.lukovic,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Aug/19 6:34 PM;mastersingh24;No details and no activity for over a year;;;",,,,,,,,,,,,,,,,,,,,,,
Finalize Side DB - Channel Private Data (promote experimental feature to production feature),FAB-8718,28296,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,manish-sethi,denyeart,denyeart,08/Mar/18 9:08 PM,23/Jan/20 7:33 AM,28/Oct/23 3:02 AM,23/Jan/20 7:33 AM,,,,v1.2.0,,,fabric-gossip,fabric-ledger,,,0,sdk,stale-item,,,,"Complete the private data work started in --FAB-1151-- and promote from a experimental feature to a production-ready feature.

See slides attached to -FAB-1151- for high level design.

See demonstration: https://www.youtube.com/watch?v=qyjDi93URJE&feature=youtu.be",,atakada,denyeart,fredbi,hamza113,manish-sethi,MichaelWang,nhrishi,nissshh,SjirNijssen,stanliberman,sykesm,troyronda,vdods,vvnick,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,FAB-5108,FABJ-267,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-3,,Finalize Side DB - Private Data,To Do,,,Unset,,,,"1|hzx6iv:",,,,Unset,Unset,,,,,,,,,,,,,,,,atakada,denyeart,fredbi,hamza113,manish-sethi,MichaelWang,nhrishi,nissshh,SjirNijssen,stanliberman,sykesm,troyronda,vdods,vvnick,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/18 4:41 AM;Clayton Sims;Is there a SDK impact?;;;","24/Apr/18 4:54 AM;manish-sethi;There is no direct impact on SDK. However, the client has to be aware of the collection configurations which is more of a indirect dependency of a client on the discovery feature.;;;","25/Apr/18 11:57 PM;denyeart;[~Clayton Sims] [~manish-sethi] There is actually one small direct SDK impact.  Upon chaincode instantiation client will need to pass collection config as an additional instantiation parameter.  I've given [~harrisob@us.ibm.com] and [~rickr] a heads up and created sub-items FAB-9679 and FAB-9680 for them.

Also SDKs will need to ensure that subdirectories under META-INF/statedb/couchdb can be passed, for couchdb index definitions per FAB-7779.;;;","23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,
Circular invoking of chaincode doesn't work,FAB-8720,28298,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,daanporon,daanporon,08/Mar/18 11:27 PM,15/Oct/18 12:27 PM,28/Oct/23 3:02 AM,15/Oct/18 12:27 PM,v1.1.0-preview,,,,,,fabric-peer,,,,0,,,,,,"When one chaincode invokes another and that other chaincode invokes a function on the first chaincode again you’ll create a circular reference and the first chaincode will think that the call from the second chaincode is actually a response to the first invoke.

SO: chaincodeA.fn1 invokes chaincodeB.fn1 invokes chaincodeA.fn2 when receiving the second invoke chaincodeA thinks this is a RESPONSE to his question ...

We don’t know if this was an issue with the Node.js implementation or just a design issue. Any ideas on how to solve this?",,daanporon,denyeart,kchristidis,muralisr,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0an:",,,,,,,,,,,,,,,,,,,,,daanporon,denyeart,kchristidis,muralisr,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/18 6:20 AM;kchristidis;[~muralisr] Can you comment on the expected behavior here? ;;;","06/Jun/18 11:07 PM;muralisr;[~daanporon] Currently calling in the same chaincode in the same channel should not even work as the second call to should be detected and stopped with error.  The peer log will have the error.  If that's not happening, can you attach debug level peer logs (and/or sample chaincodes to recreate). 

Also I notice this JIRA is tagged 1.1.0-preview. Is that correct ? I doubt something would have changed but in future lets try with release or master please.;;;","06/Jun/18 11:25 PM;daanporon;at the time i logged this error we where using the preview because we wanted to use node.js as chaincode and this wasn't released yet. We where calling the same chaincode but another chaincode function. 

Right now it's not possible to easily recreate this, as we have written our chaincode in such a way to work around this issue :(;;;","08/Jun/18 10:40 AM;zhaochy;[~daanporon] Current fabric-peer does not support embedded invoke-chaincode, we already have a issue here https://jira.hyperledger.org/browse/FAB-8634;;;","15/Oct/18 12:27 PM;denyeart;No update for months, closing.;;;",,,,,,,,,,,,,,,,,,
Error when creating a new couchdb instance in 1.1.0-rc1,FAB-8722,28300,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,chris.elder,aatkddny,aatkddny,09/Mar/18 12:43 AM,28/Feb/19 4:36 AM,28/Oct/23 3:02 AM,28/Feb/19 4:36 AM,v1.1.0,,,v2.0.0,,,fabric-ledger,,,,0,,,,,,"When I start a fresh instance of a couchdb database using the containers downloaded by the standard 1.1.0-rc1 install script the couchdb container throws continual errors. 

 

 

Startup script was the normal fabric samples byfn, fired off using:

./byfn.sh -m up -s couchdb -i 1.1.0-rc1

 

If you check the container logs for the couchdb instances you can see that the errors don't stop. 

This is a change in behavior from that seen in -alpha, which didn't have this issue.",,aatkddny,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 12:36 AM;aatkddny;Screen Shot 2018-03-08 at 9.04.40 AM.png;https://jira.hyperledger.org/secure/attachment/14744/Screen+Shot+2018-03-08+at+9.04.40+AM.png","09/Mar/18 12:37 AM;aatkddny;Screen Shot 2018-03-08 at 9.34.47 AM.png;https://jira.hyperledger.org/secure/attachment/14742/Screen+Shot+2018-03-08+at+9.34.47+AM.png","09/Mar/18 12:36 AM;aatkddny;Screen Shot 2018-03-08 at 9.43.10 AM.png;https://jira.hyperledger.org/secure/attachment/14743/Screen+Shot+2018-03-08+at+9.43.10+AM.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzyv:",,,,,,Next Items- Ledger,,,,,,,,,,,,,,,aatkddny,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 12:59 AM;denyeart;I attempted to reproduce:

{noformat}
./byfn.sh -m up -s couchdb
docker logs couchdb0
{noformat}

Here's what I see coming out of couchdb:

{code:java}
[info] 2018-03-08T15:54:11.446649Z nonode@nohost <0.7.0> -------- Application couch_log started on node nonode@nohost
[info] 2018-03-08T15:54:11.464606Z nonode@nohost <0.7.0> -------- Application folsom started on node nonode@nohost
[info] 2018-03-08T15:54:11.557156Z nonode@nohost <0.7.0> -------- Application couch_stats started on node nonode@nohost
[info] 2018-03-08T15:54:11.558611Z nonode@nohost <0.7.0> -------- Application khash started on node nonode@nohost
[info] 2018-03-08T15:54:11.585281Z nonode@nohost <0.7.0> -------- Application couch_event started on node nonode@nohost
[info] 2018-03-08T15:54:11.601483Z nonode@nohost <0.7.0> -------- Application ibrowse started on node nonode@nohost
[info] 2018-03-08T15:54:11.621243Z nonode@nohost <0.7.0> -------- Application ioq started on node nonode@nohost
[info] 2018-03-08T15:54:11.621401Z nonode@nohost <0.7.0> -------- Application mochiweb started on node nonode@nohost
[info] 2018-03-08T15:54:11.663924Z nonode@nohost <0.195.0> -------- Apache CouchDB 2.1.1 is starting.

[info] 2018-03-08T15:54:11.664111Z nonode@nohost <0.196.0> -------- Starting couch_sup
[notice] 2018-03-08T15:54:11.865533Z nonode@nohost <0.83.0> -------- config: [couchdb] uuid set to b0f9d9a384e4e5d8a1589efb6aa392c9 for reason nil
[info] 2018-03-08T15:54:11.978964Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _users
[info] 2018-03-08T15:54:12.172161Z nonode@nohost <0.195.0> -------- Apache CouchDB has started. Time to relax.

[info] 2018-03-08T15:54:12.172378Z nonode@nohost <0.195.0> -------- Apache CouchDB has started on http://127.0.0.1:5986/
[info] 2018-03-08T15:54:12.178951Z nonode@nohost <0.7.0> -------- Application couch started on node nonode@nohost
[info] 2018-03-08T15:54:12.179390Z nonode@nohost <0.7.0> -------- Application ets_lru started on node nonode@nohost
[info] 2018-03-08T15:54:12.247877Z nonode@nohost <0.7.0> -------- Application rexi started on node nonode@nohost
[info] 2018-03-08T15:54:12.297653Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _nodes
[warning] 2018-03-08T15:54:12.297794Z nonode@nohost <0.269.0> -------- creating missing database: _nodes
[info] 2018-03-08T15:54:12.437017Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _dbs
[warning] 2018-03-08T15:54:12.437077Z nonode@nohost <0.282.0> -------- creating missing database: _dbs
[warning] 2018-03-08T15:54:12.437119Z nonode@nohost <0.281.0> -------- creating missing database: _dbs
[info] 2018-03-08T15:54:12.533762Z nonode@nohost <0.7.0> -------- Application mem3 started on node nonode@nohost
[info] 2018-03-08T15:54:12.534123Z nonode@nohost <0.7.0> -------- Application fabric started on node nonode@nohost
[info] 2018-03-08T15:54:12.591668Z nonode@nohost <0.7.0> -------- Application chttpd started on node nonode@nohost
[notice] 2018-03-08T15:54:12.617438Z nonode@nohost <0.318.0> -------- chttpd_auth_cache changes listener died database_does_not_exist at mem3_shards:load_shards_from_db/6(line:403) <= mem3_shards:load_shards_from_disk/1(line:378) <= mem3_shards:load_shards_from_disk/2(line:407) <= mem3_shards:for_docid/3(line:91) <= fabric_doc_open:go/3(line:38) <= chttpd_auth_cache:ensure_auth_ddoc_exists/2(line:187) <= chttpd_auth_cache:listen_for_changes/1(line:134)
[error] 2018-03-08T15:54:12.617508Z nonode@nohost emulator -------- Error in process <0.319.0> with exit value:
{database_does_not_exist,[{mem3_shards,load_shards_from_db,""_users"",[{file,""src/mem3_shards.erl""},{line,403}]},{mem3_shards,load_shards_from_disk,1,[{file,""src/mem3_shards.erl""},{line,378}]},{mem3_shards,load_shards_from_disk,2,[{file,""src/mem3_shards.erl""},{line,407}]},{mem3_shards,for_docid,3,[{file,""src/mem3_shards.erl""},{line,91}]},{fabric_doc_open,go,3,[{file,""src/fabric_doc_open.erl""},{line,38}]},{chttpd_auth_cache,ensure_auth_ddoc_exists,2,[{file,""src/chttpd_auth_cache.erl""},{line,187}]},{chttpd_auth_cache,listen_for_changes,1,[{file,""src/chttpd_auth_cache.erl""},{line,134}]}]}

[info] 2018-03-08T15:54:12.621338Z nonode@nohost <0.7.0> -------- Application couch_index started on node nonode@nohost
[info] 2018-03-08T15:54:12.621398Z nonode@nohost <0.7.0> -------- Application couch_mrview started on node nonode@nohost
[info] 2018-03-08T15:54:12.621474Z nonode@nohost <0.7.0> -------- Application couch_plugins started on node nonode@nohost
[notice] 2018-03-08T15:54:12.712837Z nonode@nohost <0.83.0> -------- config: [features] scheduler set to true for reason nil
[info] 2018-03-08T15:54:12.770848Z nonode@nohost <0.201.0> -------- open_result error {not_found,no_db_file} for _replicator
[notice] 2018-03-08T15:54:12.880830Z nonode@nohost <0.335.0> -------- creating replicator ddoc <<""_replicator"">>
[info] 2018-03-08T15:54:12.908466Z nonode@nohost <0.7.0> -------- Application couch_replicator started on node nonode@nohost
[info] 2018-03-08T15:54:12.939000Z nonode@nohost <0.7.0> -------- Application couch_peruser started on node nonode@nohost
[notice] 2018-03-08T15:54:12.956259Z nonode@nohost <0.302.0> 682da737da couchdb0:5984 172.19.0.10 undefined GET / 200 ok 236
[notice] 2018-03-08T15:54:12.970178Z nonode@nohost <0.302.0> 9601219ecf couchdb0:5984 172.19.0.10 undefined GET /_users 404 ok 14
[info] 2018-03-08T15:54:12.976500Z nonode@nohost <0.7.0> -------- Application ddoc_cache started on node nonode@nohost
[info] 2018-03-08T15:54:13.046053Z nonode@nohost <0.7.0> -------- Application global_changes started on node nonode@nohost
[info] 2018-03-08T15:54:13.046189Z nonode@nohost <0.7.0> -------- Application jiffy started on node nonode@nohost
[notice] 2018-03-08T15:54:13.272981Z nonode@nohost <0.302.0> 9c1578cc8c couchdb0:5984 172.19.0.10 undefined PUT /_users 201 ok 302
[notice] 2018-03-08T15:54:13.275300Z nonode@nohost <0.302.0> 72cea8e6f9 couchdb0:5984 172.19.0.10 undefined GET /_replicator 404 ok 1
[info] 2018-03-08T15:54:13.466077Z nonode@nohost <0.7.0> -------- Application mango started on node nonode@nohost
[notice] 2018-03-08T15:54:13.525338Z nonode@nohost <0.302.0> 901159b3e3 couchdb0:5984 172.19.0.10 undefined PUT /_replicator 201 ok 245
[notice] 2018-03-08T15:54:13.527463Z nonode@nohost <0.302.0> f9de942488 couchdb0:5984 172.19.0.10 undefined GET /_global_changes 404 ok 1
[info] 2018-03-08T15:54:13.722971Z nonode@nohost <0.7.0> -------- Application setup started on node nonode@nohost
[info] 2018-03-08T15:54:13.723139Z nonode@nohost <0.7.0> -------- Application snappy started on node nonode@nohost
[notice] 2018-03-08T15:54:13.723971Z nonode@nohost <0.302.0> 0f4bb79924 couchdb0:5984 172.19.0.10 undefined PUT /_global_changes 201 ok 196
[notice] 2018-03-08T15:54:15.260012Z nonode@nohost <0.302.0> 29a554098a couchdb0:5984 172.19.0.10 undefined GET /mychannel_ 404 ok 2
[notice] 2018-03-08T15:54:15.381715Z nonode@nohost <0.302.0> 7a03d8205d couchdb0:5984 172.19.0.10 undefined PUT /mychannel_ 201 ok 121
[notice] 2018-03-08T15:54:15.508671Z nonode@nohost <0.302.0> 082015a127 couchdb0:5984 172.19.0.10 undefined GET /mychannel_ 200 ok 18
[notice] 2018-03-08T15:54:15.534554Z nonode@nohost <0.302.0> b237356e6a couchdb0:5984 172.19.0.10 undefined POST /mychannel_/_all_docs?include_docs=true 200 ok 25
[notice] 2018-03-08T15:54:15.550028Z nonode@nohost <0.302.0> 4df2cb5042 couchdb0:5984 172.19.0.10 undefined POST /mychannel_/_bulk_docs 201 ok 14
[notice] 2018-03-08T15:54:15.551001Z nonode@nohost <0.302.0> 4bb1960bec couchdb0:5984 172.19.0.10 undefined POST /mychannel_/_ensure_full_commit 201 ok 1
[notice] 2018-03-08T15:54:15.552558Z nonode@nohost <0.302.0> 748fed91a7 couchdb0:5984 172.19.0.10 undefined GET /mychannel_/statedb_savepoint?attachments=true 404 ok 1
[notice] 2018-03-08T15:54:15.554499Z nonode@nohost <0.302.0> 8f2b0db784 couchdb0:5984 172.19.0.10 undefined PUT /mychannel_/statedb_savepoint 201 ok 2
[notice] 2018-03-08T15:54:15.611058Z nonode@nohost <0.302.0> a3aa95d740 couchdb0:5984 172.19.0.10 undefined GET /mychannel_/resourcesconfigtx.CHANNEL_CONFIG_KEY?attachments=true 200 ok 8
[notice] 2018-03-08T15:54:15.621935Z nonode@nohost <0.533.0> dcdd01d82a couchdb0:5984 172.19.0.10 undefined GET /mychannel_/_index/ 200 ok 70
[notice] 2018-03-08T15:54:17.645564Z nonode@nohost <0.339.0> -------- couch_replicator_clustering : cluster stable
[notice] 2018-03-08T15:54:17.654792Z nonode@nohost <0.356.0> -------- Started replicator db changes listener <0.746.0>
[notice] 2018-03-08T15:54:17.742097Z nonode@nohost <0.746.0> -------- creating replicator ddoc <<""shards/80000000-9fffffff/_replicator.1520524453"">>
[notice] 2018-03-08T15:54:27.247843Z nonode@nohost <0.262.0> -------- rexi_buffer : cluster stable
[notice] 2018-03-08T15:54:27.248104Z nonode@nohost <0.259.0> -------- rexi_server : cluster stable
{code}
;;;","09/Mar/18 1:02 AM;denyeart;Analysis of couchdb log from above:

couchdb starts at 2018-03-08T15:54:11.
couchdb cant find _users system database and reports error at 2018-03-08T15:54:12.
peer starts and creates _users system database at 2018-03-08T15:54:13.
_users system database created, no more errors.

The same behavior existed between alpha and rc1. The thing that changed is couchdb logs are now directed to stderr so that they show up in `docker logs`.;;;","09/Mar/18 1:18 AM;aatkddny;I just went back and double checked - the problem is when you start from a new instance (as in remove all the files previously created) in your /opt/couchdb/data directory.

The biggest problem is that the errors don't stop. So your logs end up flooded. 

The fixes outlined here - [http://docs.couchdb.org/en/2.1.1/install/setup.html?highlight=users] - stop the errors coming out although you do see this after the _users call, which is quite alarming 

 
{code:java}
   | [error] 2018-03-08T16:04:03.485861Z nonode@nohost <0.208.0> -------- CRASH REPORT Process couch_index_server (<0.208.0>) with 0 neighbors exited with reason: {'EXIT',{{'EXIT',{database_does_not_exist,[{mem3_shards,load_shards_from_db,""_replicator"",[{file,""src/mem3_shards.erl""},{line,403}]},{mem3_shards,load_shards_from_disk,1,[{file,""src/mem3_shards.erl""},{line,378}]},{mem3_shards,for_db,2,[{file,""src/mem3_shards.erl""},{line,54}]},{mem3_shards,local,1,[{file,""src/mem3_shards.erl""},{line,156}]},{couch_index_server,handle_db_event,3,[{file,""src/couch_index_server.erl""},{line,281}]},{couch_event_listener_mfa,handle_event,3,[{file,""src/couch_event_...""},...]},...]}},...}} at couch_event_listener:do_event/3(line:150) at gen_server:terminate/7(line:826) <= proc_lib:init_p_do_apply/3(line:240); initial_call: {couch_index_server,init,['Argument__1']}, ancestors: [couch_secondary_services,couch_sup,<0.195.0>], messages: [], links: [<0.204.0>], dictionary: [], trap_exit: true, status: running, heap_size: 2586, stack_size: 27, reductions: 5636
{code}
Of course these commands only work if you are in party mode - you need to add the user/password you set up in the script for non-trivial implementations. 

 ;;;","09/Mar/18 1:45 AM;denyeart;Spamming the logs every 5 seconds until the system databases are created is a open couchdb issue:
https://issues.apache.org/jira/browse/COUCHDB-3163

As a workaround, let's use this work item to investigate if the system databases can be pre-created in the fabric-couchdb images.;;;","14/Mar/18 7:43 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/19151/;;;","22/May/18 4:16 AM;kchristidis;[~chris.elder]: I see that the CR has been abandoned. What is the plan of attack here?;;;","06/Jun/18 1:06 AM;chris.elder;Added a new changeset for the changes.

https://gerrit.hyperledger.org/r/#/c/21467/;;;","18/Jun/18 8:46 PM;denyeart;On further thought, I don't think the system database can be pre-created in the image. Typically users will mount a directory on the host system to the CouchDB /data volume. Therefore we cannot pre-create databases within the images /data volume.

The peer will continue to create the system databases upon first peer start.;;;","28/Feb/19 4:35 AM;denyeart;I've created a CouchDB issue to resolve the issue from CouchDB side:

https://github.com/apache/couchdb/issues/1949;;;",,,,,,,,,,,,,,
Finalize Fabric access control (ACL) mechanism (formerly known as resource tree or RSCC),FAB-8727,28305,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,09/Mar/18 2:43 AM,20/Aug/19 12:59 PM,28/Oct/23 3:02 AM,20/Aug/19 12:59 PM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"There is an experimental feature in fabric v1.1 done under FAB-3621 which creates ACLs and a new 'resouces tree'.

This resources tree was originally intended to hold other ACLs, like user chaincode ones, as well as handle chaincode lifecycle, define DB indices, etc.  However, because these other features were rejected and abandoned, the value of maintaining a separate resources tree for basic fabric ACLs is questionable.

Instead, the ACLs defined in the resources tree should be moved into the channel config.  Rather than defining each resources as a separate config value, the entire list of ACLs may be defined in a single config value, managed by the standard channel application admins policy.

Migration for customers using the experimental resources tree in v1.1 should be fairly painless.  When they enable the v1.2 application capability, they can include their ACL list as part of the the config update.",,Hangyu_FJH,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Finalize Fabric access control (ACL) mechanism,,,,Unset,,,,"1|hzyctj:",,,,Unset,Unset,,,,,,,,,,,,,,,,Hangyu_FJH,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in peerchannel.md,FAB-8728,28310,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,09/Mar/18 3:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Mar/18 11:34 PM,v1.1.0,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,Documentation,,,,,"I found repeating ""be"" in /docs/source/commands/peerchannel.md
Maybe it is a typo.",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0bz:",,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Mar/18 4:07 AM;nnao;https://gerrit.hyperledger.org/r/#/c/18893/;;;",,,,,,,,,,,,,,,,,,,,,,
Pluggable endorsement and validation,FAB-8729,28311,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,09/Mar/18 3:56 AM,22/Jan/19 11:45 PM,28/Oct/23 3:02 AM,23/May/18 4:47 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Fabric currently has the concept of ESCC and VSCC and theoretically one can associate different ESCCs/VSCCs with chaincode on a per channel basis.

In practice, this is not the case as the validation ""flow"" is actually ""hard-wired"" and there is really no definition / interface defined for implementing ""custom"" ESCC/VSCC.

Ideally we should be able to easily add built-in ESCCs/VSCCs to Fabric and also allow ESCC/VSCC to be built as plugins.

A design document can be found [here|https://docs.google.com/document/d/1YmWCdPOJAJU6kxO56vYoS6Ev_La32mx4PG-3pCUri6g/edit?usp=sharing].

Slides of the public design review call that took place on 26/3/2018 are attached below
 [^pluggableEndorsementAndValidation.pdf]

 ",,C0rWin,denyeart,guoger,harrisob@us.ibm.com,inatatsu,luomin,nagap,nhrishi,SjirNijssen,wutongtree,xixuejia,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/18 6:58 PM;yacovm;pluggableEndorsementAndValidation.pdf;https://jira.hyperledger.org/secure/attachment/14829/pluggableEndorsementAndValidation.pdf",,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-5,,Pluggable endorsement and validation,To Do,,,Unset,,,,"1|hzycsf:",,,,Unset,Unset,,,,,,,,,,,,,,,,C0rWin,denyeart,guoger,harrisob@us.ibm.com,inatatsu,luomin,nagap,nhrishi,SjirNijssen,wutongtree,xixuejia,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Apr/18 11:40 AM;guoger;just wonder if this public design review call recorded and available somewhere? thx;;;","10/Apr/18 4:29 PM;yacovm;it has been recorded, [~Clayton Sims] should upload it to youtube.
You can contact me and i'll send you out of band the recording file;;;","24/Apr/18 4:41 AM;harrisob@us.ibm.com;Is there a SDK impact for this item ?;;;","24/Apr/18 5:19 AM;yacovm;Not in v1.2

in v1.3 we might add a few functions to LSCC, like install, etc.

But it's a very small impact.;;;",,,,,,,,,,,,,,,,,,,
CA sample in fabric-samples does not work with hyphens in orderer,FAB-8730,28313,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rennman,rennman,09/Mar/18 3:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/May/18 4:15 AM,,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"The jq script which performs the config update in scripts/run-fabric.sh fails if the orderer name contains a hyphen:
  jq: error: union/0 is not defined at <top-level>, line 1:

It requires adding an escaped set of double quotes:
{{.channel_group.groups.Application.groups.'""$\{ORG}""'.values.MSP.value.config.revocation_list}}
{{channel_group.groups.Application.groups.'""\""$\{ORG}\""""'.values.MSP.value.config.revocation_list}}",,denyeart,rennman,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0c7:",,,,,,,,,,,,,,,,,,,,,denyeart,rennman,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Mar/18 4:20 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18891/;;;","09/Mar/18 11:16 PM;denyeart;[~smithbk] Do you want to target this fix for fabric-samples 1.1?  I'm ok with that if you think risk is low.;;;","13/Mar/18 12:04 AM;smithbk;Since this only happens when customizing the sample in a particular way, I don't think it is needed for v1.1.  And also want to make sure that other customizations don't issues also.;;;",,,,,,,,,,,,,,,,,,,,
Usability: `peer chaincode install` behaves differently/unexpectedly for Node chaincode ,FAB-8731,28316,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,AdnanChoudhury,AdnanChoudhury,09/Mar/18 5:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 8:00 AM,,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,Quality,,,,,"*Observation*:
 While doing
{code:java}
peer chaincode install{code}
 through the CLI container, The \{path} flag behavior is different for node chaincode vs. golang chaincode.

*to reproduce:*
 In the CLI container, the location 
{code:java}
/opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/marbles02{code}
has two folders `go` and `node` and they have a golang chaincode and node chaincode correspondingly.
 To install the golang cc, this works:

 
{code:java}
peer chaincode install --name mycc1 --lang GOLANG --version 0 --path github.com/hyperledger/fabric-samples/chaincode/marbles02/go 
{code}
 But the corresponding command for Node cc fails. i.e. if the following command is tried,

 
{code:java}
peer chaincode install --name mycc1 --lang NODE --version 0 --path github.com/hyperledger/fabric-samples/chaincode/marbles02/node {code}
 

It fails with the message:
{code:java}
Error: Error getting chaincode code chaincode: path to chaincode does not exist: github.com/hyperledger/fabric-samples/chaincode/marbles02/node{code}
*Expectation*:
 The node chaincode install should pass.

*Note*: 
 The node cc install passes if relative path is used i.e. 

 
{code:java}
--path ../..fabric-samples/chaincode/marbles02/node
{code}",,AdnanChoudhury,denyeart,luomin,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0cf:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,luomin,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Mar/18 9:59 PM;denyeart;The difference is that with go chaincode the GOPATH is used, whereas with node chaincode, an absolute or relative path is used.

This is working as designed, but we need to document it more clearly at:
http://hyperledger-fabric.readthedocs.io/en/v1.1.0-rc1/commands/peerchaincode.html#install-flags

[~wlahti] Can you help to improve that doc in *release-1.0* and *master* branches?

Also, the peer command line help should similarly be improved, but let's do that in *master* branch only, since we are in code freeze for *release-1.0* branch.;;;","09/Mar/18 11:01 PM;wlahti;CR pushed to gerrit for review.

master branch - [https://gerrit.hyperledger.org/r/c/18927/]

release-1.1 - https://gerrit.hyperledger.org/r/c/18971;;;",,,,,,,,,,,,,,,,,,,,,
Negative Test for Peer,FAB-8732,28317,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,biljana.lukovic,biljana.lukovic,09/Mar/18 5:33 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,,,,,0,stale-item,,,,,,,biljana.lukovic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0cn:",,,,Unset,,,,,,Unset,,,,,,,,,,,biljana.lukovic,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
"Publish stable fabric-client, fabric-ca-client npm modules from a release job. Dont publish from merge jobs.",FAB-8733,28320,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,09/Mar/18 6:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,22/Mar/18 11:41 PM,,,,,,,fabric-ci,,,,0,ci,,,,,Stable npm modules for fabric-client and fabric-ca-client are published to NPM after merge is successful in fabric-sdk-node and fabric-chaincode node. This change is to publish just the `snapshot` modules from merge jobs. The stable versions are published to NPM from fabric-chaincode-node-npm-release-x86_64 and fabric-sdk-node-npm-release-x86_64,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0cv:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test-issue,FAB-8737,28330,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Yogendrasri,Yogendrasri,Yogendrasri,09/Mar/18 4:13 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,22/Mar/18 6:46 AM,,,,,,,fabric-docs,,,,0,,,,,,Yogendra's test jira,,odowdaibm,Yogendrasri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0dj:",,,,Unset,,,,,,Unset,,,,,,,,,,,odowdaibm,Yogendrasri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 4:16 PM;Yogendrasri;yogendra's test jira;;;",,,,,,,,,,,,,,,,,,,,,,
Document Reserved Field Names in CouchDB,FAB-8738,28331,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ynamiki,ynamiki,ynamiki,09/Mar/18 4:41 PM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,10/Mar/18 12:37 AM,v1.1.0,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,,,,,,"By FAB-7969, some field names are reserved in a JSON document to be put a CouchDB state database. This topic should be documented.",,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0dr:",,,,Unset,,,,,,Unset,,,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Fabric - UT Failure,FAB-8739,28333,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,harsha544,harsha544,09/Mar/18 6:40 PM,01/May/19 2:21 AM,28/Oct/23 3:02 AM,01/May/19 2:21 AM,,,,Future,,,fabric-build,,,,0,,,,,,"One of fabric UT irregularly fails at :- 



[33munit-tests_1 |[0m panic: runtime error: invalid memory address or nil pointer dereference [33munit-tests_1 |[0m panic: runtime error: invalid memory address or nil pointer dereference [33munit-tests_1 |[0m [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x10bd6e34] [33munit-tests_1 |[0m [33munit-tests_1 |[0m goroutine 7596 [running]: [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1.1(0xc424aa0400, 0xc424481260, 0xc424701ed8) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1266 +0x64 [33munit-tests_1 |[0m panic(0x10ce9980, 0x112d0ff0) [33munit-tests_1 |[0m /opt/go/src/runtime/panic.go:491 +0x244 [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).cleanupQueryContext(0xc424aa0400, 0xc42365d320, 0xc422407260, 0x24) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:232 +0x9c [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1.2(0xc4244ace00, 0x72, 0x80, 0x112eaa40, 0xc42368de00, 0x10e224e2, 0x26, 0xc4245222b0, 0x1, 0x1) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1278 +0x1c0 [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1(0xc424aa0400, 0xc424481260) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1320 +0x688 [33munit-tests_1 |[0m created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1249 +0x54 [33munit-tests_1 |*[0m FAIL github.com/hyperledger/fabric/core/chaincode 373.600s*

OS :- Ubuntu 1604,
Go Version :- 1.9.2

Arch:- ppc64le

Git Commit a409d1fd15037ebab96f3b5de6bf628e25785178


Enclosed the complete logs, for further analysis.","OS :- Ubuntu 1604,

Go Version :- 1.10,

Arch:- ppc64le

Git Commit 370f56fe7ed9a29ba0fc361c56d15c1296877fdc",ChristopherFerris,denyeart,harsha544,mastersingh24,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 6:39 PM;harsha544;log.txt;https://jira.hyperledger.org/secure/attachment/14750/log.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0dz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harsha544,mastersingh24,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 10:16 AM;denyeart;[~muralisr] [~Senthil1] Any ideas?;;;","14/Mar/18 11:38 PM;Senthil1;[~denyeart] Do we run our build on power8 (ppc64le)? As far as I know, our unit tests are deterministic on zOS and x86. Not sure why it is non-deterministic in ppc64le. As per the log, GetHistoryForKey() at ledger is returning an error. [~manish-sethi] Would it be something related to block store on ppc64le. Anyway, unless we can reproduce the error, we may not be able to debug the issue efficiently. ;;;","06/Apr/18 5:35 AM;ChristopherFerris;Need someone from Power to work this one. Lowered priority.;;;","06/Apr/18 1:17 PM;harsha544;[~Senthil1] I have enclosed error logs for the UT, in-case you would need access to a Power server I can help you with that.;;;","24/Apr/18 6:57 PM;harsha544;FWIW, I see this issue to be cropping up with go1.10 and on master branch, when on git commit  370f56fe7ed9a29ba0fc361c56d15c1296877fdc , however in next immediate git commit 64c38b0a72b1371f9e022048f7cbcb1c49147234  the package is excluded github.com/hyperledger/fabric/core/chaincode to be run in Unit-Test.;;;","01/May/19 2:21 AM;mastersingh24;Not going to run UT on all platforms.  Not sure if this is still an issue, but not going to worry about it;;;",,,,,,,,,,,,,,,,,
Document pagination,FAB-8740,28334,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,denyeart,denyeart,09/Mar/18 10:49 PM,17/Sep/18 2:52 PM,28/Oct/23 3:02 AM,17/Sep/18 2:52 PM,v1.3.0,,,v1.3.0,,,fabric-docs,,,,0,Documentation,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2809,,,,,,,,,"1|hzwtf3:",,,,,,,,,,,,,,,,,,,,,denyeart,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/May/18 12:26 AM;pandrejko;Update
 * CouchDB documentation [http://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html]
 * CouchDB Tutorial (maybe?) [https://gerrit.hyperledger.org/r/#/c/20469/]  currently WIP;;;","11/Sep/18 11:22 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/26197/;;;",,,,,,,,,,,,,,,,,,,,,
Update peer CLI chaincode install help to clarify path for node chaincodes,FAB-8741,28335,28316,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,09/Mar/18 11:03 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,27/Apr/18 3:40 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0e7:",,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete read-only release branches from Github,FAB-8742,28336,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,09/Mar/18 11:09 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 12:06 AM,,,,,,,,,,,0,,,,,,"We have decided to go with the following naming conventions for branches:

*release-M.M*

Previously, we were using the *release* branch for v1.0.x releases",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0ef:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete the release branch from Fabric github repository,FAB-8744,28338,28336,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,mastersingh24,mastersingh24,09/Mar/18 11:11 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 12:00 AM,,,,,,,fabric-build,,,,0,,,,,,"The *release* branch has been deleted from the Fabric Gerrit repo and replaced with *release-1.0*

We need to delete the *release* branch from the Github mirror and set the default branch to *release-1.0* instead",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8745,FAB-8747,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0ev:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete the release branch from Fabric CA github repository,FAB-8745,28339,28336,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,mastersingh24,mastersingh24,09/Mar/18 11:12 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 12:06 AM,,,,,,,fabric-build,fabric-ca,fabric-ca-build,,0,,,,,,"The *release* branch has been deleted from the fabric-ca Gerrit repo and replaced with *release-1.0*

We need to delete the *release* branch from the Github mirror and set the default branch to *release-1.0* instead",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8744,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0f3:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete the release branch from Fabric Node SDK github repository,FAB-8747,28341,28336,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,mastersingh24,mastersingh24,09/Mar/18 11:22 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 12:03 AM,,,,,,,fabric-build,fabric-sdk-node,,,0,,,,,,"The *release* branch has been deleted from the fabric-sdk-node Gerrit repo and replaced with *release-1.0*

We need to delete the *release* branch from the Github mirror and set the default branch to *release-1.0* instead",,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8744,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0fj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
include fabric-ca-client binary in bootstrap.sh script,FAB-8748,28342,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,09/Mar/18 11:34 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Mar/18 10:19 PM,,,,v1.1.0,v1.2.0,,fabric-build,,,,0,fabric-build,,,,,"from the #fabric-release channel conversation

sstone1 3:43 AM
@rameshthoomu the fabric-ca-client binary is good for me - how can we get it added to the one line installer? i mean whatever runs when this command is executed: `curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0-rc1",,denyeart,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0fr:",,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Mar/18 7:22 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18947/;;;","11/Mar/18 1:52 PM;denyeart;Cherry picked to release-1.1: https://gerrit.hyperledger.org/r/#/c/19033/;;;",,,,,,,,,,,,,,,,,,,,,
Unit test cleanup,FAB-8755,28357,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bstasyszyn,bstasyszyn,10/Mar/18 2:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 7:47 AM,,,,,,,,,,,0,,,,,,Enhancements to unit tests and general cleanup.,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0hj:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Remove Event Hub,FAB-8756,28358,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bstasyszyn,bstasyszyn,10/Mar/18 2:27 AM,02/Jan/19 4:33 PM,28/Oct/23 3:02 AM,11/Mar/18 12:02 AM,,,,,,,,,,,0,,,,,,The EventService should be used in place of EventHub.,,baohua,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0hr:",,,,,,,,,,,,,,,,,,,,,baohua,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
peer/chaincode certificate missing Issuer/Subject,FAB-8757,28370,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,10/Mar/18 3:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Mar/18 11:52 PM,,,,v1.1.1,v1.2.0,,fabric-crypto,,,,0,,,,,,"The self-signed certificates generated for the peer/chaincode connection do not contain the required fields of {{Issuer}} and {{Subject}} (see [RFC 5280 §4.1.2.2|https://tools.ietf.org/html/rfc5280#section-4.1.2.4] ). This causes problems in Java chaincode as the JDK libraries validate that certificates contain all required fields.",,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5406,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0if:",,,,,,,,,,,,,,,,,,,,,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Mar/18 5:06 AM;sanchezl;https://gerrit.hyperledger.org/r/c/18965/;;;","11/Mar/18 2:23 PM;denyeart;And master CR (1.2) is https://gerrit.hyperledger.org/r/#/c/18963/ .;;;",,,,,,,,,,,,,,,,,,,,,
Add an option to only close if there are no outstanding registrations,FAB-8758,28376,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bstasyszyn,bstasyszyn,10/Mar/18 4:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,10/Mar/18 7:48 AM,,,,,,,,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0jz:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"System Test Case: When upgrading chaincode, what happens when querying both versions",FAB-8759,28377,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,10/Mar/18 4:11 AM,23/Jan/19 11:48 PM,28/Oct/23 3:02 AM,23/Jan/19 11:48 PM,,,,,,,fabric-quality,,,,0,,,,,,"* +Test Name+: Querying a peer with two different versions of chaincode
* +Component+:  Peer
* +Description+: When querying a peer with upgraded chaincode, if the args are updated, the data is changed; if the args are not updated, the same values should be returned.
* +Artifact Locations+:  fabric-test/features
* +Network Topology+:  kafka orderers with TLS
* +Client Driver+:  behave
* +Input+:  behave -n ""Querying a peer with two different versions of chaincode""
* +Output+: 2 scenarios passed, 0 failed 

",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,No,,,,,,"1|hzz0k7:",,,,Unset,,,,,,Unset,,,,,,Pass,,Integration Test,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Error while trying to join Channel using different orderer,FAB-8760,28378,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,edluizl,edluizl,10/Mar/18 4:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,08/Jun/18 10:28 PM,v1.0.6,,,v1.1.0,,,fabric-peer,,,,0,,,,,,"I'm trying to make a Peer join two channels each with its own Orderer, so I have the following scenario:

- A channel named solochannel with an orderer Solo, using the port 7050
- A channel named kafkachannel with an orderer Kafka, using the port 8050

1- I create the chanels using the command
{code:java}
peer channel create -o orderer:8050 -c solochannel -f ./channel-artifacts/channelSolo.tx
peer channel create -o ordererKafka:8050 -c kafkachannel -f ./channel-artifacts/channelKafka.tx{code}

2- After creating both channels, I start a peer to join them in both channels
{code:java}
peer channel join -b solochannel.block
peer channel join -b kafkachannel.block{code}


This step shows a message saying that the Peer was able to join both channels,
and if I try to list all channels using 'Peer channel list', it shows that the
Peer joined both channels successfully.

3- I open the Log for the Peer and the peer is trying to send information of the
last Channel it joined to the orderer of the First channel.

So for example:
If I join the solochannel first, It tries to send information of the kafkachannel to the ordererKafka:8050 and fails with the message Got error &\{NOT_FOUND}
If I join the kafkachannel first, It tries to send information of the solochannel to the ordererSolo:7050 and fails with the message Got error &\{NOT_FOUND}

This is the Log from the Peer
{code:java}
2018-03-07 16:58:06.071 UTC [deliveryClient] StartDeliverForChannel -> DEBU 6d0 This peer will pass blocks from orderer service to other peers for channel kafkachannel
2018-03-07 16:58:06.074 UTC [deliveryClient] connect -> DEBU 6d1 Connected to ordererSolo:7050
2018-03-07 16:58:06.074 UTC [deliveryClient] connect -> DEBU 6d2 Establishing gRPC stream with ordererSolo:7050 ...
2018-03-07 16:58:06.077 UTC [deliveryClient] afterConnect -> DEBU 6d3 Entering
2018-03-07 16:58:06.078 UTC [deliveryClient] RequestBlocks -> DEBU 6d4 Starting deliver with block [1] for channel kafkachannel
2018-03-07 16:58:06.082 UTC [deliveryClient] afterConnect -> DEBU 6d5 Exiting
2018-03-07 16:58:06.084 UTC [blocksProvider] DeliverBlocks -> WARN 6d6 [kafkachannel] Got error &{NOT_FOUND}{code}

This is the Log from the ordererSolo:7050
{code:java}
2018-03-07 16:58:06.076 UTC [orderer/main] Deliver -> DEBU 1f5 Starting new Deliver handler
2018-03-07 16:58:06.076 UTC [orderer/common/deliver] Handle -> DEBU 1f6 Starting new deliver loop
2018-03-07 16:58:06.076 UTC [orderer/common/deliver] Handle -> DEBU 1f7 Attempting to read seek info message
2018-03-07 16:58:06.082 UTC [orderer/common/deliver] Handle -> DEBU 1f8 Rejecting deliver because channel kafkachannel not found
2018-03-07 16:58:06.082 UTC [orderer/main] func1 -> DEBU 1f9 Closing Deliver stream{code}

This keeps happening forever.

While I keep having this error, I cannot instantiate or upgrade a chaincode on the second channel


I'm having this error for both versions 1.0.5 and 1.0.6.

 ",,edluizl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0kf:",,,,,,,,,,,,,,,,,,,,,edluizl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/18 8:59 PM;edluizl;I have tried this same approach using the version 1.1.0-rc1 and couldn't replicate de behaviour, it seems as if this was already fix for the new version;;;",,,,,,,,,,,,,,,,,,,,,,
PTE exits after the last transaction timeout,FAB-8761,28379,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,10/Mar/18 5:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,14/Mar/18 12:51 AM,,,,,,,fabric-quality,,,,0,,,,,,PTE exits after the last transaction timeout,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzz0kn:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,,,,,,,true,"12/Mar/18 11:47 PM;dongming;https://gerrit.hyperledger.org/r/#/c/19077/;;;",,,,,,,,,,,,,,,,,,,,,,
Enable mutual tls for rc1 test,FAB-8762,28380,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,firas.qutishat,firas.qutishat,10/Mar/18 6:10 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,,,,,0,stale-item,,,,,,,firas.qutishat,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0kv:",,,,Unset,,,,,,Unset,,,,,,,,,,,firas.qutishat,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Peer CLI chaincode package command doc path clarification,FAB-8763,28381,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,10/Mar/18 7:07 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,10/Mar/18 6:21 PM,,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,,,,,,The peer chaincode package command should be updated similarly to FAB-8731. ,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0l3:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Mar/18 8:02 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/18987/ - master

https://gerrit.hyperledger.org/r/#/c/18993/ - release-1.1

;;;",,,,,,,,,,,,,,,,,,,,,,
Move identitymgr interfaces to pkg/context/api/msp,FAB-8765,28385,28237,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,10/Mar/18 12:24 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 1:15 PM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0lz:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Move identitymgr implementation to pkg/msp,FAB-8766,28387,28237,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,10/Mar/18 9:08 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,15/Mar/18 1:15 PM,,,,,,,,,,,0,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0mf:",,,,,,,,,,,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Add option in InfraProvider to use Block Events,FAB-8768,28389,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bstasyszyn,bstasyszyn,11/Mar/18 1:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,11/Mar/18 6:41 AM,,,,,,,,,,,0,,,,,,InfraProvider currently creates an event client that registers for filtered block events by default. There should be a way to pass in the WithBlockEvents() option to the SDK which will propagate down to the event client.,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0mv:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Remove all remnants of EventHub,FAB-8769,28390,26168,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bstasyszyn,bstasyszyn,11/Mar/18 1:01 AM,02/Jan/19 4:33 PM,28/Oct/23 3:02 AM,11/Mar/18 6:57 AM,,,,,,,,,,,0,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0n3:",,,,,,,,,,,,,,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Test pagination,FAB-8774,28396,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,11/Mar/18 2:43 PM,11/Sep/18 11:20 PM,28/Oct/23 3:02 AM,11/Sep/18 11:20 PM,,,,v1.3.0,,,,,,,0,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2809,,,No,,,,,,"1|hzz0of:",,,,,,,,,,,,,,,,Unset,,Integration Test,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/18 11:19 PM;denyeart;Chaincode integration tests done in FAB-11455.;;;",,,,,,,,,,,,,,,,,,,,,,
[CI] -Optimze fabric-ca release jobs,FAB-8775,28397,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Mar/18 5:01 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Mar/18 8:36 AM,,,,,,,fabric-ci,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0on:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/18 10:32 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/19037/;;;",,,,,,,,,,,,,,,,,,,,,,
Service Discovery in Hyperledger Fabric,FAB-8779,28401,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,12/Mar/18 3:44 AM,13/Nov/19 5:30 AM,28/Oct/23 3:02 AM,25/Jul/18 3:47 AM,,,,v1.2.0,,,fabric-gossip,,,,0,sdk,,,,,"Currently, the SDK needs to know beforehand the endpoints of the endorsers it uses in its chaincode invocation.

Additionally, it needs to know beforehand that the required chaincode has been installed on the peers.

On top of that, if the peers that the SDK interacts with fail or become unreachable - it cannot use Fabric at all.

The [following proposal|https://docs.google.com/document/d/1zP04PKay4FN0tKYjHUSanyfK9b94rtYvC9MDSKGeSSE/edit] describes a service discovery capability that if introduced to Hyperledger Fabric - would remove the above restrictions.

 Below is a document on how the SDKs should implement the client side support for the application.

 

[^Consuming the discovery service by the SDK.pdf]

 ",,baohua,C0rWin,denyeart,dongming,knagware9,scottz,troyronda,wutongtree,xixuejia,yacovm,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10857,FAB-11374,,,,,,,,,,,,,,,,"19/May/18 4:39 AM;yacovm;Consuming the discovery service by the SDK.pdf;https://jira.hyperledger.org/secure/attachment/14989/Consuming+the+discovery+service+by+the+SDK.pdf",,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-7,,Service Discovery,To Do,,,Unset,,,,"1|hzyct3:",,,,Unset,Unset,,,,,,,,,,,,,,,,baohua,C0rWin,denyeart,dongming,knagware9,scottz,troyronda,wutongtree,xixuejia,yacovm,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/18 4:18 AM;troyronda;[~yacovm] [~manish-sethi]

To enable dynamic collection configs (without synchronized distribution of config), we will also need to the ability to discover collection policy & height. This will allow clients to have up-to-the-date knowledge on their configuration freshness and also the policy, itself.;;;","27/Mar/18 4:26 AM;yacovm;[~troyronda] , if the collection policy is a signature policy envelope (the same policy representation as endorsement policies) then it's technicall doable to extend service discovery with that, as I can just add a field to the chaincode query to make it target a specific collection, and maybe do something like take the endorsement policy tree representation, and prune the leaves that have MSP IDs that don't belong to the collection policy.
However - I suggest you bring this up tomorrow in the design review of the dynamic collection config. ;;;","10/Apr/18 12:36 AM;scottz;This is a very desirable feature. I notice it includes tasks for SDK development, but there were no designs yet for them discussed in the playback. Before this epic is approved, I hope we can finish the designs and resolve some more questions about the SDK and client APIs and expectations of responsibilities.
 # Is the Service Discovery algorithm deterministic? For a given chaincode and channel, would every sdk and client receive the same set of peers to use? If so, then everyone might use the same peer in each org for endorsements. That inhibits load balancing.
 # How often is the list of endorsement peers updated? Does that happen automatically, or would that only happen when the client invokes an API function for the Service Discovery feature to request an updated list of peers to use?
 # Is the client expected to request an updated peer list before each transaction? Or could the SDK handle that automatically whenever a peer does not respond to an endorsement proposal, or maybe when a grpc connection to a peer drops erroneously or when one cannot be established?
 # Without using Service Discovery, a client today can send proposals to multiple peers in an org; duplication provides robustness - in case one peer is unreachable. This logic seems unnecessary with Service Discovery, and message bandwidth will be saved, which is a very good thing. However, in a noisy/unreliable network, there will be extended outage periods. Suppose one peer becomes unreachable. It will take time (how much?) for gossip to notice unreachable peers and adjust the recommended endorser set. And it will take more time (how much?) for the SDK and Clients to obtain that new peer endorser set before they can begin rerouting their proposals to alternative peers. In the meantime, all transactions for all clients using that chaincode will fail, with no hope of succeeding even though other peers may be available. We must ensure the designs of the feature, including the SDK and client, limit or eliminate the length of outage periods.;;;","10/Apr/18 1:25 AM;yacovm;{quote} I notice it includes tasks for SDK development, but there were no designs yet for them discussed in the playback{quote}
That's because it is an architectural review of the feature and the implementation details of the client side is not in the scope of this feature. 
Especially since we already have an SDK that uses service discovery (Go SDK). 

{quote}Before this epic is approved
{quote}
It is.
{quote}Is the Service Discovery algorithm deterministic? For a given chaincode and channel, would every sdk and client receive the same set of peers to use? If so, then everyone might use the same peer in each org for endorsements. That inhibits load balancing.
{quote}
The discovery service returns a descriptor, it is up to the SDK to compute a random answer based on that descriptor. 
The descriptor, should be computed the same way for 2 queries given the membership of the peer and the channel state hasn't changed between the 2 subsequent queries.
{quote}How often is the list of endorsement peers updated? Does that happen automatically, or would that only happen when the client invokes an API function for the Service Discovery feature to request an updated list of peers to use?
{quote}
The peer doesn't update the client. It needs to query again if it suspects the peer list changed.

 
{quote}Is the client expected to request an updated peer list before each transaction?
{quote}
No. I guess a heuristic of a obtaining the endorsement descriptor every now and then would make sense. Since the app already subscribes to the event service - it can know when it *should* in any case re-query the discovery service.

{quote}
Or could the SDK handle that automatically whenever a peer does not respond to an endorsement proposal, or maybe when a grpc connection to a peer drops erroneously or when one cannot be established?{quote}
I expect the SDK to maintain a black-list of peers that are unreachable, and re-analyze the descriptor obtained from last time and pick other peers.

{quote} Suppose one peer becomes unreachable. It will take time (how much?) for gossip to notice unreachable peers and adjust the recommended endorser set. And it will take more time (how much?) for the SDK and Clients to obtain that new peer endorser set before they can begin rerouting their proposals to alternative peers.{quote}
Assuming we have enough peers alive to satisfy the endorsement policy - the SDK doesn't need to query the discovery service again. It just needs to pick a new random set, based on the descriptor given to it before. 
 

 

 

 ;;;","19/May/18 12:31 AM;scottz;There have been some discussions in email threads. In order to capture further decisions, I attached the document ""Consuming the discovery service by the SDK"" (provided by Yacov) to this feature epic, per request from release manager. And I have a couple questions:
 # Are all the SDKs going to implement the same APIs to use this feature in the same ways? Where can we find that agreement and API specification? 
It would be desirable, from many perspectives, e.g test conformity, and user expectations and discussions based on common functionalities. And even though they are developed separately, they are all part of the open-source community, so I would hope the maintainers could guide the SDK development to be consistent. (This question acually applies for all features with SDK impact.)
 # Assuming Service Discovery is configured and enabled in the fabric, will an individual client application be able to choose to use the Service Discovery feature for one transaction, and to choose NOT to use it for another transaction? 
We can discuss usecases, if necessary. For example: (A) An auditor or tester wants to query every peer in a channel to be sure they all received a list of transactions. (B) Or a client may use a nearby reliable peer for most of its traffic, and if failures occur because the node goes down then fallback to the mode of using the service discovery model so the SDK can find another peer to use.;;;","22/Jun/18 11:40 PM;baohua;It will be also useful if the SDK can discover how many channels already exist in the network from the orderer.;;;",,,,,,,,,,,,,,,,,
Panic in BYFN bringup,FAB-8784,28407,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid: Works as Expected,,vijayendrabvs,vijayendrabvs,12/Mar/18 10:28 AM,01/Dec/18 8:32 PM,28/Oct/23 3:02 AM,01/Dec/18 8:32 PM,,,,,,,fabric-samples,,,,0,,,,,,"When running byfn.sh -m up, I'm seeing this panic (this is on Ubuntu 16.04) -

 

```

2018-03-12 01:13:07.546 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP [112/1843]
2018-03-12 01:13:07.546 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity
2018-03-12 01:13:07.546 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AD9060A1508021A0608A3A897D50522...7F6D75BC6B78BA22490E8316272B0D6F
2018-03-12 01:13:07.546 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: E530B27446AF8FD063CB74962335A678F2D9358BD98BEFFF5DB2B16CB2EAB66B
fatal error: unexpected signal during runtime execution
[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7fefc1e8e259]

runtime stack:
runtime.throw(0xf11319, 0x2a)
/opt/go/src/runtime/panic.go:605 +0x95
runtime.sigpanic()
/opt/go/src/runtime/signal_unix.go:351 +0x2b8

goroutine 16 [syscall, locked to thread]:
runtime.cgocall(0xbf38d0, 0xc420032de8, 0xf0fae1)
/opt/go/src/runtime/cgocall.go:132 +0xe4 fp=0xc420032da8 sp=0xc420032d68 pc=0x4023b4
net._C2func_getaddrinfo(0x7fefb80008c0, 0x0, 0xc4204b8f90, 0xc4201be150, 0x0, 0x0, 0x0)
net/_obj/_cgo_gotypes.go:86 +0x5f fp=0xc420032de8 sp=0xc420032da8 pc=0x5f893f
net.cgoLookupIPCNAME.func2(0x7fefb80008c0, 0x0, 0xc4204b8f90, 0xc4201be150, 0xc4201db5c0, 0x7ffdc438ba83, 0x13)
/opt/go/src/net/cgo_unix.go:151 +0x13f fp=0xc420032e40 sp=0xc420032de8 pc=0x5ffedf
net.cgoLookupIPCNAME(0x7ffdc438ba83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
/opt/go/src/net/cgo_unix.go:151 +0x175 fp=0xc420032f38 sp=0xc420032e40 pc=0x5fa195
net.cgoIPLookup(0xc4201db740, 0x7ffdc438ba83, 0x13)
/opt/go/src/net/cgo_unix.go:203 +0x4d fp=0xc420032fc8 sp=0xc420032f38 pc=0x5fa8dd
runtime.goexit()
/opt/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc420032fd0 sp=0xc420032fc8 pc=0x45e391
created by net.cgoLookupIP
/opt/go/src/net/cgo_unix.go:213 +0xaf

goroutine 1 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7fefc2210d40, 0xc4201db500, 0x7ffdc438ba83, 0x18, 0xc420431820, 0x4, 0x4, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:422 +0x532
github.com/hyperledger/fabric/core/comm.(*grpcClient).NewConnection(0xc4204be780, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/core/comm/client.go:217 +0x389
github.com/hyperledger/fabric/peer/common.(*OrdererClient).Broadcast(0xc4204b8e10, 0x0, 0x0, 0xc420499b10, 0xbc3909)
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:50 +0x6c
github.com/hyperledger/fabric/peer/common.GetBroadcastClient(0x380, 0xc42033a120, 0x112, 0x112)
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/broadcastclient.go:41 +0x3e
github.com/hyperledger/fabric/peer/channel.InitCmdFactory.func1(0xc4201fc360, 0xc4204b89f0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:136 +0x29
github.com/hyperledger/fabric/peer/channel.sendCreateChainTransaction(0xc42035f630, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:164 +0xa7
github.com/hyperledger/fabric/peer/channel.executeCreate(0xc42035f630, 0xc42035f630, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:178 +0x2f
github.com/hyperledger/fabric/peer/channel.create(0xc4202e46c0, 0xc420388780, 0x1, 0xa, 0x0, 0xd5b080, 0x16705c0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x40
github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc4202e46c0, 0xc420388780, 0x1, 0xa, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202e46c0, 0xc420388640, 0xa, 0xa, 0xc4202e46c0, 0xc420388640)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x164d4e0, 0x11, 0xc420314390, 0x5)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x164d4e0, 0x7d, 0xc420014035)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x5e1

goroutine 36 [syscall]:
os/signal.signal_recv(0x0)
/opt/go/src/runtime/sigqueue.go:131 +0xa6
os/signal.loop()
/opt/go/src/os/signal/signal_unix.go:22 +0x22

created by os/signal.init.0
/opt/go/src/os/signal/signal_unix.go:28 +0x41

goroutine 8 [IO wait]:
internal/poll.runtime_pollWait(0x7fefc2a89f70, 0x72, 0x0)
/opt/go/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc42012fd98, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0)
/opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc42012fd98, 0xc420288c00, 0x400, 0x400)
/opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc42012fd80, 0xc420288c00, 0x400, 0x400, 0x0, 0x0, 0x0)
/opt/go/src/internal/poll/fd_unix.go:126 +0x18a
net.(*netFD).Read(0xc42012fd80, 0xc420288c00, 0x400, 0x400, 0xc42046a380, 0x0, 0x412436)
/opt/go/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc420126518, 0xc420288c00, 0x400, 0x400, 0x0, 0x0, 0x0)
/opt/go/src/net/net.go:176 +0x6d
crypto/tls.(*block).readFromUntil(0xc42043ac90, 0x7fefc2210e00, 0xc420126518, 0x5, 0xc420126518, 0x0)
/opt/go/src/crypto/tls/conn.go:488 +0x95
crypto/tls.(*Conn).readRecord(0xc420219500, 0xf35617, 0xc420219620, 0xc4204b0c48)
/opt/go/src/crypto/tls/conn.go:590 +0xe0
crypto/tls.(*Conn).Read(0xc420219500, 0xc42045a000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
/opt/go/src/crypto/tls/conn.go:1134 +0x110
bufio.(*Reader).Read(0xc42044c600, 0xc4204a8038, 0x9, 0x9, 0x18, 0xe52c20, 0x0)
/opt/go/src/bufio/bufio.go:213 +0x30b
io.ReadAtLeast(0x1656c00, 0xc42044c600, 0xc4204a8038, 0x9, 0x9, 0x9, 0x0, 0x412436, 0xc4204b0da0)
/opt/go/src/io/io.go:309 +0x86
io.ReadFull(0x1656c00, 0xc42044c600, 0xc4204a8038, 0x9, 0x9, 0xc4204a8028, 0x0, 0x4)
/opt/go/src/io/io.go:327 +0x58
github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4204a8038, 0x9, 0x9, 0x1656c00, 0xc42044c600, 0x0, 0x0, 0xc4204b8030, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b
github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4204a8000, 0x165fd00, 0xc4204b8030, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4201ef560, 0xc4204b8030, 0xc4204b8030, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc42007e820)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8

goroutine 9 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc42007e820)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e

goroutine 10 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc42007e820)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2

goroutine 11 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc42028e380)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a

goroutine 13 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x166c200, 0xc42007e820, 0xc42028e1c0, 0xc4200ae9a0, 0xc42011a800)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23

goroutine 14 [select]:
net.(*Resolver).LookupIPAddr(0x169d370, 0x1667b40, 0xc4201db5c0, 0x7ffdc438ba83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)
/opt/go/src/net/lookup.go:196 +0x52b
net.(*Resolver).internetAddrList(0x169d370, 0x1667b40, 0xc4201db5c0, 0xee76f6, 0x3, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x0, ...)
/opt/go/src/net/ipsock.go:293 +0x644
net.(*Resolver).resolveAddrList(0x169d370, 0x1667b40, 0xc4201db5c0, 0xee7c00, 0x4, 0xee76f6, 0x3, 0x7ffdc438ba83, 0x18, 0x0, ...)
/opt/go/src/net/dial.go:193 +0x594
net.(*Dialer).DialContext(0xc420485458, 0x1667b40, 0xc4201db5c0, 0xee76f6, 0x3, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x0, ...)
/opt/go/src/net/dial.go:375 +0x248
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1667b40, 0xc4201db5c0, 0xee76f6, 0x3, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0xc4201ac500, 0xc42012f380)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:38 +0xb3
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7fefc2210d40, 0xc4201db5c0, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x16571c0, 0xc420124ca0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:329 +0x86
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7fefc2210d40, 0xc4201db5c0, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:121 +0x137
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7fefc2210d40, 0xc4201db5c0, 0xc420321930, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:119 +0x5a
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7fefc2210d40, 0xc4201db5c0, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0xeef571, 0xd, 0x0, 0x0, ...)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:157 +0xa7
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7fefc2210d40, 0xc4201db5c0, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0xeef571, 0xd, 0x0, 0x0, ...)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:505 +0xae
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc42028e700, 0xc4204b8e00, 0xc42028e720, 0xc4201e0528)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:929 +0x4b4
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc42028e000, 0x7ffdc438ba83, 0x18, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:702 +0x340
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc4201db560, 0xc42028e000, 0x1669a40, 0xc4201be140, 0x7ffdc438ba83, 0x18)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:417 +0x223
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:386 +0x441

goroutine 15 [select]:
net.cgoLookupIP(0x1667b40, 0xc4201db5c0, 0x7ffdc438ba83, 0x13, 0xc4204ae480, 0x1656c00, 0xc42044c600, 0xc4204a8038, 0x9, 0x9)
/opt/go/src/net/cgo_unix.go:214 +0x1b0
net.(*Resolver).lookupIP(0x169d370, 0x1667b40, 0xc4201db5c0, 0x7ffdc438ba83, 0x13, 0x1656c00, 0xc42044c600, 0x0, 0x0, 0x0)
/opt/go/src/net/lookup_unix.go:95 +0x12d
net.(*Resolver).(net.lookupIP)-fm(0x1667b40, 0xc4201db5c0, 0x7ffdc438ba83, 0x13, 0x3, 0xc4201e5b00, 0xc420060540, 0x0, 0xc420020000)
/opt/go/src/net/lookup.go:187 +0x56
net.glob..func10(0x1667b40, 0xc4201db5c0, 0xc4203219d0, 0x7ffdc438ba83, 0x13, 0x42ad09, 0xc400000008, 0xc420060540, 0xc4204a8000, 0x8db329)
/opt/go/src/net/hook.go:19 +0x52
net.(*Resolver).LookupIPAddr.func1(0x18, 0x0, 0x0, 0x1)
/opt/go/src/net/lookup.go:193 +0x5c
internal/singleflight.(*Group).doCall(0x169d360, 0xc4204bea00, 0x7ffdc438ba83, 0x13, 0xc4204b8f00)
/opt/go/src/internal/singleflight/singleflight.go:93 +0x2e
created by internal/singleflight.(*Group).DoChan
/opt/go/src/internal/singleflight/singleflight.go:86 +0x31f
!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
========= ERROR !!! FAILED to execute End-2-End Scenario ===========

```

 

Here is the docker image listing -

 

```

===> List out hyperledger docker images
hyperledger/fabric-ca latest 8a6c8c2e2ebf 10 days ago 283MB
hyperledger/fabric-ca x86_64-1.1.0-rc1 8a6c8c2e2ebf 10 days ago 283MB
hyperledger/fabric-tools latest 006c689ec08e 10 days ago 1.46GB
hyperledger/fabric-tools x86_64-1.1.0-rc1 006c689ec08e 10 days ago 1.46GB
hyperledger/fabric-orderer latest 10afc128d402 10 days ago 180MB
hyperledger/fabric-orderer x86_64-1.1.0-rc1 10afc128d402 10 days ago 180MB
hyperledger/fabric-peer latest 6b44b1d021cb 10 days ago 187MB
hyperledger/fabric-peer x86_64-1.1.0-rc1 6b44b1d021cb 10 days ago 187MB
hyperledger/fabric-javaenv latest ea263125afb1 10 days ago 1.52GB
hyperledger/fabric-javaenv x86_64-1.1.0-rc1 ea263125afb1 10 days ago 1.52GB
hyperledger/fabric-ccenv latest 65c951b9681f 10 days ago 1.39GB
hyperledger/fabric-ccenv x86_64-1.1.0-rc1 65c951b9681f 10 days ago 1.39GB
hyperledger/fabric-zookeeper latest 92cbb952b6f8 3 weeks ago 1.39GB
hyperledger/fabric-zookeeper x86_64-0.4.6 92cbb952b6f8 3 weeks ago 1.39GB
hyperledger/fabric-kafka latest 554c591b86a8 3 weeks ago 1.4GB
hyperledger/fabric-kafka x86_64-0.4.6 554c591b86a8 3 weeks ago 1.4GB
hyperledger/fabric-couchdb latest 7e73c828fc5b 3 weeks ago 1.56GB
hyperledger/fabric-couchdb x86_64-0.4.6 7e73c828fc5b 3 weeks ago 1.56GB
hyperledger/sawtooth-tp_xo_python 0.8 a0922deeaef6 3 months ago 176MB
hyperledger/sawtooth-validator 0.8 9a5de658200c 3 months ago 180MB
hyperledger/sawtooth-all 0.8 9743e987285f 3 months ago 193MB
hyperledger/sawtooth-tp_settings 0.8 9fe41c26c4f2 3 months ago 172MB
hyperledger/sawtooth-rest_api 0.8 ca6439f7b4cc 3 months ago 177MB
hyperledger/sawtooth-tp_intkey_python 0.8 b9889db3ae41 3 months ago 172MB

```

 ",Ubuntu 16.04.,denyeart,mastersingh24,vijayendrabvs,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0qf:",,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,vijayendrabvs,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/18 6:13 PM;mastersingh24;[~vijayendrabvs] - Are you running in a cloud environment or on a local workstation / server?

Looks like this is a DNS resolver issue  .... you can try setting the following environment variable for each of the entries in the docker-compose file:  {{GODEBUG=netdns=go}};;;","12/Mar/18 6:15 PM;mastersingh24;Possible duplicate ... symptoms seem to be the same;;;","01/Dec/18 8:32 PM;denyeart;Unable to reproduce, closing.;;;",,,,,,,,,,,,,,,,,,,,
[CI] - Optimize fabric CI release Jobs,FAB-8785,28408,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Mar/18 10:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Mar/18 8:36 AM,,,,,,,fabric-ci,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0qn:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Optimize fabric-baseimage CI release jobs,FAB-8786,28409,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Mar/18 10:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,31/Mar/18 8:36 AM,,,,,,,fabric-ci,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0qv:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Design for chaincode lifecycle improvements,FAB-8787,28410,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,denyeart,denyeart,12/Mar/18 12:04 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,21/Mar/18 2:13 AM,,,,v1.3.0,,,,,,,0,,,,,,Detailed proposal: https://docs.google.com/document/d/124lsuwTS6kIds52-nbYrcHf47V6Z2eyMEJ8L3WI3n6o/edit#,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11237,,,,,,,,,"1|hzz01j:",,,,,,Sprint 6 - Lifecycle & Config,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Design for channel-based access control (ACL),FAB-8788,28411,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,denyeart,denyeart,12/Mar/18 1:19 PM,31/Oct/18 3:15 PM,28/Oct/23 3:02 AM,30/Mar/18 11:21 PM,,,,v1.2.0,,,,,,,2,,,,,,"v1.1 of Fabric introduced an experimental feature for specifying ACLs. Users who wished to use ACLs would edit their channel creation transaction using {{configtxlator}} and add some entries into the {{isolated_data}} which defined these policy references. This would cause the peer to create a 'resources tree' which included these ACL definitions and policies.

The 'resources' tree is a bit heavyweight, and comes with a lot of code to support it in the peer. The original idea was that other operations like chaincode lifecycle would be handled through this mechanism, but, since that proposal has been abandoned, we're left with a significant maintenance burden with not a lot of benefit. Because the semantics are (purposefully) nearly identical to the channel config, a natural choice is to move these ACLs out of the 'resources tree' and into the standard 'channel config tree'. Rather doing ""PEER_RESOURCE_UPDATE"" transactions (which, to my knowledge have only been used in dev, never in the wild), updates could be made via standard ""CHANNEL_UPDATE"" messages.

Since editing channel creation transactions by hand is tedious and error prone, `configtxgen` can be enhanced to create them with the appropriate entries.

Consider a new config value defined at the application level:
{noformat}
message PeerACLs {
    map<string>PeerACL acls = 1;
}

message PeerACL {
    string policy_ref = 1;
}
{noformat}
In JSON, this would look like:
{noformat}
{
  ""CSCC.GetConfigBlock"":{""policy_ref"":""/Channel/Application/Readers""},
  ...
  ""QSCC.GetBlockByNumber"":{""policy_ref"":""/Channel/Application/Readers""}
}
{noformat}
We can enhance {{configtxgen}} to make specifying these possible as part of channel creation, and users may of course use standard channel reconfiguration tools to modify or add them later.
{noformat}
  Application:
    ACLs:
      CSCC.GetConfigBlock: /Channel/Application/Readers
      ...
      QSCC.GetBlockByNumber: /Channel/Application/Readers
{noformat}
Adding the specification into {{configtx.yaml}} is noticeably less useful if users cannot specify channel config policies there as well. So, we can extend {{configtx.yaml}} to specify them as well:

Each element (Such as Channel, Application, Orderer, and Org) can be enhanced to support a {{Policies}} sub-element. Like:
{noformat}
  Application:
    Policies:
      Foo:
        Type: Signature
        Rule: ""Org1.Peer AND Org2.Peer""
      Bar:
        Type: ImplicitMeta
        Rule: ""MAJORITY Readers""
{noformat}
For an existing user to migrate, they would simply need to define the new config element in their channel update transaction when they enable the v1.2 capability. This would provide a seamless transition between the experimental and v1.2 feature.

Finally, the ACL section could reference these by name, like: /Channel/Application/Foo and /Channel/Application/Bar",,baohua,C0rWin,denyeart,harrisob@us.ibm.com,jyellick,minollo,muralisr,nagap,oracleeabiodun,toddinpal,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8727,,,,,,,,,"1|hzz0r3:",,,,,,Next Items- Lifecycle & Config,,,,,,,,,,,,,,,baohua,C0rWin,denyeart,harrisob@us.ibm.com,jyellick,minollo,muralisr,nagap,oracleeabiodun,toddinpal,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:45 AM;muralisr;[~jyellick] This is essentially going back to the first iteration as defined by FAB-3621 correct (from a data model pov - not implementation via RSCC etc) ? Can you add some sentences on what the differences from that model are please ? As I see it the difference is not in the model itself but in the supporting tooling (which we did not have before).;;;","24/Mar/18 12:00 AM;jyellick;I've added some additional sentences around this.  I do think it is fairly close to the first iteration as defined by FAB-3621 (though there's a lot of churn and discussion in that issue, it's a bit hard to pin down exact differences).;;;","24/Mar/18 1:25 AM;muralisr;Thanks [~jyellick], just wanted to make sure to understand the proposal correctly.

As an aside, true, a lot of the churn in FAB-3621 was just trying to understand the problem (what the ACLs actually were, how they were currently used, the realization of the tie-ins with ChannelReaders and ChannelWriters)...it took all that discussion (which you know of intimately :))  to get to settle down to Name to Policy mapping scheme.

 ;;;","30/Mar/18 11:21 PM;jyellick;Per the playback on 03/28/2018 as documented https://wiki.hyperledger.org/projects/fabric/playbacks this design has been accepted, and will begin being implementing.;;;","24/Apr/18 5:18 AM;harrisob@us.ibm.com;Do you see any SDK impact ?;;;",,,,,,,,,,,,,,,,,,
Parallelize gossip state transfer UT,FAB-8790,28413,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,12/Mar/18 5:29 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,14/Mar/18 6:59 PM,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,"Currently test in gossip/state package executed serially, parallel execution was not possible since there was a dependency on the ledger package, however after CR for FAB-8064 state transfer tests could be easily parallelized.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0rj:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Mar/18 5:34 PM;C0rWin;https://gerrit.hyperledger.org/r/19049;;;",,,,,,,,,,,,,,,,,,,,,,
Refactor MSP structures and interfaces to allow for more intuitive and extensible policy evaluation,FAB-8792,28417,,Epic,To Do,FAB,Fabric,software,denyeart,,,Medium,,ales,elli-androulaki,elli-androulaki,12/Mar/18 10:16 PM,15/Oct/19 7:39 PM,28/Oct/23 3:02 AM,,v1.4.0,,,Future,,,fabric-crypto,,,,0,hygiene,Security,,,,"This epic aims at the refactoring of MSP interfaces and structures to allow for a more intuitive policy evaluation flow, as well as an easily extensible policy types. 

 

In the context of this refactoring, we aim also to allow the definition of ""orderer"" type (in addition to ""peer"" and ""client"" that is already supported), as well as the consideration of an expiration time at policy evaluation. 

 

Our proposed changes refer to the interfaces of  MSP, Identity, MSPPrincipal proto structures and Policy evaluation mechanisms. More details on the recommended changes can be found here:
[https://docs.google.com/document/d/1FyvjMlBFasdFlOpjcaurNG8jYipHE8ENXfdbY122mdA/edit?usp=sharing]",,denyeart,elli-androulaki,leofantast,qsmen,SjirNijssen,ssaddem,ymlbright,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8794,FAB-11602,FAB-12221,,,,FAB-6684,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Available,,Unset,ghx-label-9,,MSP refactoring,To Do,,,Unset,,,,"1|hzx6kn:",,,,Unset,Unset,,,,,,,,,,,,,,,,denyeart,elli-androulaki,leofantast,qsmen,SjirNijssen,ssaddem,ymlbright,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 12:03 PM;denyeart;Removing v1.2 tag - not a top priority per maintainer v1.2 planning meeting.  The refactoring is a good idea, and could be done once the top v.1.2 priorities are achieved.;;;",,,,,,,,,,,,,,,,,,,,,,
Idemix - Doc improvements and BCCSP integration,FAB-8793,28418,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,dubovitskaya,dubovitskaya,12/Mar/18 10:24 PM,24/Jan/19 4:06 AM,28/Oct/23 3:02 AM,27/Nov/18 4:17 PM,v1.3.0,,,v1.4.0,,,fabric-crypto,,,,0,idemix,,,,,"The goals of this epic are the following:
 # Improve idemix code documentation and set guidelines on how to configure network topology;
 # Integrate Idemix in the BCCSP flow by providing an Idemix-based BCCSP implementation;",,denyeart,dubovitskaya,latitiah,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done,,Not Required,,Required,ghx-label-2,,Idemix - Doc improvements and BCCSP integration (v1.4),To Do,,,Not Required,,,,"1|hzz0rz:",,,,No,Not Required,,,,,,,,,,,,,,,,denyeart,dubovitskaya,latitiah,ymlbright,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 1:26 PM;denyeart;For initial planning purposes, let's assume v1.3 timeframe, given all the other Idemix work for v1.2.;;;","31/Oct/18 10:20 PM;latitiah;As we spoke in chat, I thought I'd also add the sample/template that I sent to you here as a comment.
{code}
Functional Tests:
 - FAB-XXX1: Make sure config is accepted and turns on feature (Integration) - PersonA
 - FAB-XXX2: What happens when config is set wrong (unit) - PersonA
 - FAB-XXX3: When FeatureX is turned on in both ComponentA and ComponentB (End-to-end) - PersonB
 - FAB-XXX4: When FeatureX is turned on in ComponentA and not ComponentB (End-to-end) - PersonA

System Tests:
 - FAB-XXX5: How is performace impacted when sending 5 packets per second for 3 hours? - PersonC
   * Be sure to set the following config values on ComponentA as such:
     - FEATUREX=true
     - FEATURE_PATH=/some/path/for/my/feature
   * Be sure to send the messages using the foo SDK
 - FAB-XXX6: Is the feature and component stable when executing 10 packets per second for 1 week? - PersonC
   * Be sure to set the following config values on ComponentA as such:
     - FEATUREX=true
     - FEATURE_PATH=/some/path/for/my/feature
{code};;;",,,,,,,,,,,,,,,,,,,,,
Chaincode attribute-based access control using channel MSPs,FAB-8794,28419,,Epic,To Do,FAB,Fabric,software,denyeart,,,Medium,,elli-androulaki,elli-androulaki,elli-androulaki,12/Mar/18 10:37 PM,13/May/19 3:02 PM,28/Oct/23 3:02 AM,,,,,Future,,,fabric-crypto,,,,1,Security,,,,,"Being able to perform access control on the chaincode side on transaction creator's or other identities is needed in many cases. However it is frequently tedious for the chaincode developer to parse a serialised identity (e.g., the transaction creator's) and to check whether this identity fulfils certain properties. In fact, very often the developer would need to manually extract certain identity's properties, e.g., OU, O field of the certificate, ending up repeating the logic of MSP identity deserialisation and field extractor. At the same time, the developer cannot leverage MSP announcements on CRL updates that take place on the same channel. 

 

This epic aims at offering to a Fabric chaincode the ability to perform (attribute-based) access policy evaluation using the respective channel's MSPs. It also aims at enhancing the existing MSP principal definition to support definition of ""attributes"", and of the MSPs implementation to account for the new type of principal. The proposed work aims at enhancing the 1.1 capabilities on attribute based authentication in that channel MSPs are used for deserialising serialised identities, and performing the actual policy evaluation (be it attribute-based or OU-based). This gives the advantage that i) chaincodes can directly leverage any MSP reconfiguration on that channel (e.g., peer/client OU, admin OU etc), ii) no code deduplication is required (we would only use the policy manager of the channel, no need to manually perform parts of the policy evaluation on the chaincode side), iii) can allow for attribute-verification where the issuer is not the same as the identity provider (e.g., msp CA).

 

Preliminary design is listed [here|https://docs.google.com/document/d/1ETeoqfUHMK3sisF0k0IIACLEh3E8eVzMiOWagTAQXio/edit?usp=sharing], but we aim to break this task down to two pieces:
  - Performing attribute-based attestation w.r.t. a single MSP's context (e.g., on MSP certifiable attributes) => **1.2**
  - Performing attribute-based attestation considering cross-MSP issuers => **post 1.2**

 ",,denyeart,elli-androulaki,luckydogchina,qsmen,SjirNijssen,ssaddem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8792,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-4,,Chaincode attribute-based access control using channel MSPs,To Do,,,Done,,,,"1|hzyctr:",,,,Unset,Unset,,,,,,,,,,,,,,,,denyeart,elli-androulaki,luckydogchina,qsmen,SjirNijssen,ssaddem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 11:50 AM;denyeart;[~elli-androulaki] In the Description, please describe how this differs from the attribute-based access control that was added to v1.1 chaincode under FAB-5346 and FAB-6089 (chaincode APIs for attribute-based attestation).  Will this Epic enhance/extend the v1.1 APIs?  Or a completely different set of use cases and APIs?;;;","13/Mar/18 8:50 PM;elli-androulaki;[~denyeart] let me know if the added content above answers your question.;;;",,,,,,,,,,,,,,,,,,,,,
 Improve TransactionIdentifier processing logic,FAB-8795,28420,,Bug,To Do,FAB,Fabric,software,denyeart,,,Medium,,,elli-androulaki,elli-androulaki,12/Mar/18 10:47 PM,23/Nov/20 11:50 PM,28/Oct/23 3:02 AM,,,,,Future,,,fabric-crypto,fabric-ledger,,,0,hygiene,Ledger,Security,,,"h1. 1. Background

Transaction identifiers are used as a way to detect duplicates of transactions and not include them to the ledger.

*Transaction identifiers construction.* Transaction identifiers derive by the combination of the transaction’s creator, and a randomly generated nonce inserted in the transaction header.

*Security guarantees of Transaction id.* There can be no two well formed transactions with the same transaction identifier, under the assumption that the nonce is properly (randomly) generated at transaction creator side. In particular, it is the case that as long as the transaction creator is honest, no two transactions of its have the same txid: if two transactions of his have the same id, these two transactions are identical.

This means that two different transactions can have the same transaction identifier if
 * The user is intentionally causing it, i.e., creating two transactions with the same identity and nonce,
 * The user does not have a properly operating random number generator

Well formed transaction (from orderer’s perspective): A transaction where its creator matches the transaction’s signature.

*Use of Transaction IDs.* Transaction identifiers are used as replay attack counter-measure on the committing peer side. More specifically, at validation time transactions are passed to a database that rejects transactions with the same transaction identifier.

Transactions are referenced using their transaction identifier in the database to allow for queries that request the state of a certain transaction. That is to accommodate a GetTransactionByID call. This function would return *exactly one transaction* with matching transaction identifier.
h1. 2. Problem

Transaction validation is not considered when the database where transactions are stored reserve a specific transaction identifier.

This means that a transaction with a signature matching the transaction’s creator identity, but whose transaction identifier is not consistent to the creator’s identity, would be invalidated at the committing peer side, but its (invalid) transaction identifier would be reserved. Subsequent (otherwise) valid transaction that carries the same transaction identifier, with matching creator and nonce, would be rejected for having the same identifier with the invalid one that was preceded.

This opens the door to denial of service attacks as follows:
 * Alice prepares a transaction with transaction identifier txidA correctly computed.
 * Bob who has seen Alice’s transaction and wants to forbid it from being validated, creates a transaction that he knows in advance would be rejected with the same transaction identifier txidA. Clearly txidA matches Alice’s identity and would not match Bob’s transaction’s details.
 * Bob manages to have his transaction enter the chain first.
 * Committing peers process Bob’s transaction and reject it, but reserve txidA.
 * Alice’s transaction passes the validation phase, and is rejected when the results are to be committed to the peer as duplicate of Bob’s transaction.

h1. 3. Solution

Adding an additional check at the orderers side for validity of transaction identifier would prevent attacks as the ones presented above. That is orderers currently perform some pre filtering of transactions by validating the client (creator) signature on the transaction. Given this, if they computed the expected transaction identifier and checked that it matches the one included in the transaction, Bob would not be able to submit a transaction with an identifier that matches Alice’s.

However, even in this case we suffer from malicious clients input. A malicious client could try to create two different transactions with the same identifier. One of the two transactions will fail due to duplication of transaction identifier, and the other one would succeed. However the status of the second transaction would never appear in the GetTransactionByID query, which violates the semantics of this  function.
h1.  

4. Other things to consider

*Other (extreme) attacks.* A malicious user may attempt to find ways of having a txid that is generated using Cer1, and nonce nonce1, match his identity Cert2, and another nonce nonce2. This scenario is described in FAB-7547 and although this is very difficult to spawn (to the level of impossible) we can enhance the code to avoid such a case altogether.

*Attacker model - malicious transaction creator.*  The solution proposed above works satisfactorily in the assumption that the creator of the transaction is not malicious, not trying to DoS the system. However, we would like to enhance the system with resistance to this type of adversaries. Notice that there are no clear semantics on the responses of ledger queries for GetTransactionByID when two transactions have the same identifier. This could cause issues to an application relying on this to make decisions on next steps.

*Impact to sideDB.* Side effects of two transactions with the same transaction identifier on tempDB entries need to be investigated/discussed with the sideDB team.

 

This item was discussed already with [~ales], [~angelo.decaro], [~jyellick], [~denyeart].

 

 

 ",,adc,ales,ChristopherFerris,denyeart,elli-androulaki,jyellick,kchristidis,mastersingh24,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,adc,ales,ChristopherFerris,jyellick,kchristidis,manish-sethi,mastersingh24,,,,,Unset,Unset,Unset,,,,,,,Unset,,,,"1|i01h7v:i",,,,Unset,Unset,,,,,Unset,,,,,,,,,,,adc,ales,ChristopherFerris,denyeart,elli-androulaki,jyellick,kchristidis,mastersingh24,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 11:56 AM;denyeart;Removing v1.2 tag - not a top priority per maintainer v1.2 planning meeting.;;;","22/May/18 4:29 PM;elli-androulaki;This needs to be considered/addressed in 1.3.;;;","03/Oct/18 12:53 AM;elli-androulaki;Adding ordering service/ledger people [~jyellick], [~kchristidis], [~denyeart], [~manish-sethi] to expand on this.;;;",,,,,,,,,,,,,,,,,,,,
New issue to show off JIRA on Hyperledger Fabric,FAB-8796,28422,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,odowdaibm,odowdaibm,12/Mar/18 11:25 PM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,22/Mar/18 10:40 PM,,,,v1.2.0,,,fabric-docs,,,,0,,,,,,This is a sample JIRA to get you comfortable with JIRA and contributing to Hyperledger Fabric,,Bertilvb,cmgabriel,Machtelt,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0sf:",,,,Unset,,,,,,Unset,,,,,,,,,,,Bertilvb,cmgabriel,Machtelt,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/18 11:26 PM;odowdaibm;Anthony's comment

 ;;;","12/Mar/18 11:27 PM;cmgabriel;Chris has left a practice comment here.;;;","12/Mar/18 11:27 PM;Bertilvb;This is a very helpful comment.;;;","12/Mar/18 11:32 PM;Machtelt;I have found it;;;",,,,,,,,,,,,,,,,,,,
Update Fabric Ledger Documentation Topic,FAB-8797,28423,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,cmgabriel,cmgabriel,12/Mar/18 11:30 PM,26/Aug/19 6:08 PM,28/Oct/23 3:02 AM,26/Aug/19 6:08 PM,,,,,,,fabric-docs,,,,1,Documentation,,,,,Add graphics.,,Bertilvb,cmgabriel,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu27:",,,,,,,,,,,,,,,,,,,,,Bertilvb,cmgabriel,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/18 11:30 PM;odowdaibm;Nice one Chris!;;;","12/Mar/18 11:31 PM;Bertilvb;Really getting the hang of this now!;;;",,,,,,,,,,,,,,,,,,,,,
"Fabric docs showing multiple TOC, titles very small",FAB-8798,28424,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,joe-alewine,joe-alewine,12/Mar/18 11:47 PM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,30/Mar/18 3:51 AM,,,,v1.2.0,,,fabric-docs,,,,0,,,,,,"http://hyperledger-fabric.readthedocs.io/en/latest/index.html

The new reconfiguration of the docs is confusing and hard to read. The left nav now shows up twice, and the titles of docs are small enough to be hard to read.",,denyeart,joe-alewine,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwtsn:",,,,,,,,,,,,,,,,,,,,,denyeart,joe-alewine,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 9:43 PM;denyeart;I think the recent refactor of the top level TOC does improve navigation, but the fact that the TOC appears twice is problematic.  Any ideas on that [~joe-alewine] [~odowdaibm] [~ChristopherFerris] ?;;;","13/Mar/18 10:44 PM;joe-alewine;[~markparz];;;","14/Mar/18 1:17 AM;markparz;Agree, the duplication is problematic. The formatting is also bad as the words shrink more and more, getting to a point of being hard to read. ;;;","30/Mar/18 3:51 AM;joe-alewine;Fixed in master branch.;;;",,,,,,,,,,,,,,,,,,,
Remove comment on Kafka's revalidation checks,FAB-8799,28425,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,13/Mar/18 12:17 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,07/Apr/18 12:15 AM,v1.1.0,,,v1.2.0,,,fabric-orderer,,,,0,kafka,,,,,"This comment on the {{Chain}} interface is no longer accurate:

//NOTE: The kafka consenter has not been updated to perform the revalidation
// checks conditionally.  For now, Order/Configure are essentially Enqueue as before.
// This does not cause data inconsistency, but it wastes cycles and will be required
// to properly support the ConfigUpdate concept once introduced
// Once this is done, the MsgClassification logic in msgprocessor should return error
// for non ConfigUpdate/Normal msg types",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0sn:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Mar/18 12:30 AM;kchristidis;https://gerrit.hyperledger.org/r/c/19081/;;;",,,,,,,,,,,,,,,,,,,,,,
SDK service discovery design for fabric-SDK-java,FAB-8800,28426,28462,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,13/Mar/18 12:23 AM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,16/Jun/18 1:57 AM,,,,,,,fabric-sdk-java,,,,0,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfj:9",,,,,,To Do,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK service discovery design for fabric-SDK-node,FAB-8801,28427,28461,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,yacovm,yacovm,13/Mar/18 12:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,23/May/18 5:01 AM,,,,,,,fabric-sdk-node,,,,0,,,,,,,,harrisob@us.ibm.com,n-horiguchi,tallharish,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0t3:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,harrisob@us.ibm.com,n-horiguchi,tallharish,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 5:01 AM;harrisob@us.ibm.com;Discovery Service NodeSDK:
 - add new role to connection profile channel peers attributes to indicate a 'discovery' peer
      -- by default a peer added to the channel will be a discovery peer allowing for non connection profile based configurations
 - add an internal method to discover channel configuration, members, and chaincode endorsement selection plans. (low level internal API)
      -- the method will be to convert grpc to NodeSDK usable objects and references.
 - update the channel 'initialize()' method to take a parameters to indicate the target peer and whether to use discovery
      -- default will be to use discover along with the peer's query for instantiated chaincodes (I assume this is not a admin only call ) to get a picture of this channel
      -- if no target is specified the first discovery peer assigned to the channel will be used
      -- save the msp, peers, orderers, and chaincode endorsement selection plans.
 - update the sendTransactionProposal to allow for a plugin to select the targets and sending
 - create discovery endorsement handling plugin
      -- determine the target list as suggested by  Yacov
             -- allow for application to provide good and bad lists (passed as send request attributes)
             -- pick random to complete (give priority to higher ledger counts)
  
  ** no new API's;;;",,,,,,,,,,,,,,,,,,,,,,
Remove comment on Kafka's revalidation checks,FAB-8803,28429,28425,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,13/Mar/18 12:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Mar/18 12:32 AM,v1.1.0,,,v1.2.0,,,fabric-orderer,,,,0,kafka,,,,,For the {{master}} branch.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0tr:",,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove comment on Kafka's revalidation checks,FAB-8804,28430,28425,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,13/Mar/18 12:27 AM,20/Jul/18 11:15 PM,28/Oct/23 3:02 AM,13/Mar/18 12:32 AM,v1.1.0,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,For the {{release-1.1}} branch.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0tz:",,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK service discovery implementation for fabric-SDK-java,FAB-8805,28431,28462,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,13/Mar/18 12:27 AM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,11/Jul/18 3:41 AM,,,,v1.2.0,,,fabric-sdk-java,,,,0,,,,,,gerrit https://gerrit.hyperledger.org/r/#/c/21583/,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfj:a",,,,,,To Do,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
SDK service discovery implementation for fabric-SDK-node,FAB-8806,28432,28461,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,yacovm,yacovm,13/Mar/18 12:27 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,07/Jun/18 8:57 PM,,,,,,,,,,,0,fabric-sdk-node,,,,,,,harrisob@us.ibm.com,n-horiguchi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0uf:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,harrisob@us.ibm.com,n-horiguchi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Jun/18 8:57 PM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/22801/] - part 3
[https://gerrit.hyperledger.org/r/#/c/22679/] - part 2
[https://gerrit.hyperledger.org/r/#/c/21795/] - part 1;;;",,,,,,,,,,,,,,,,,,,,,,
SDK service discovery integration into fabric-SDK-java,FAB-8807,28433,28462,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,13/Mar/18 12:27 AM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,16/Jun/18 1:57 AM,,,,,,,fabric-sdk-java,,,,0,,,,,,,,denyeart,rickr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwqfj:b",,,,,,To Do,,,,,,,,,,,,,,,denyeart,rickr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 1:57 AM;denyeart;Delivered with FAB-8805.;;;",,,,,,,,,,,,,,,,,,,,,,
SDK service discovery integration into fabric-SDK-node,FAB-8808,28434,28461,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,13/Mar/18 12:28 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Jun/18 10:28 PM,,,,,,,fabric-sdk-node,,,,0,,,,,,,,denyeart,fredbi,n-horiguchi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz0uv:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,denyeart,fredbi,n-horiguchi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 10:28 PM;denyeart;Done as part of FAB-8806.;;;",,,,,,,,,,,,,,,,,,,,,,
Remove redundant test in localconfig,FAB-8809,28435,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,13/Mar/18 12:34 AM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,07/Apr/18 6:06 PM,v1.1.0,,,v1.2.0,,,fabric-orderer,,,,0,,,,,,Testing for default config values is already performed in {{TestSystemChannel}}. {{TestProfileConfig}} is there to increase test coverage but it is redundant. It should be removed.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz0v3:",,,,Unset,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Mar/18 12:36 AM;kchristidis;https://gerrit.hyperledger.org/r/c/19083;;;",,,,,,,,,,,,,,,,,,,,,,
Idemix MSP (Go) to support Enrollment ID and Revocation ID as attributes in Idemix Enrollment Certificate,FAB-8810,28438,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,13/Mar/18 2:19 AM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,02/May/18 5:03 PM,,,,v1.2.0,,,fabric-crypto,,,16/Mar/18 12:00 AM,0,idemix,,,,,,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,FABJ-279,,,,,,,,,,,,,,FABC-592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzwqfj:c",,,,,,To Do,,,,,,,,,,,,,,,dubovitskaya,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Mar/18 5:22 AM;mdr;https://gerrit.hyperledger.org/r/#/c/19939/;;;",,,,,,,,,,,,,,,,,,,,,,
State-based Endorsement,FAB-8812,28443,,Epic,In Progress,FAB,Fabric,software,denyeart,,,High,,ales,ales,ales,13/Mar/18 4:40 AM,19/Jun/19 7:07 PM,28/Oct/23 3:02 AM,,,,,v1.3.0,,,,,,,3,,,,,,"Enable support for finer grained endorsement policies through state-based endorsement.

State-based endorsement uses additional metadata on the ledger for key-level validation.",,ales,baohua,C0rWin,ChanderGovindarajan,denyeart,eugenluft,geahaad,Hangyu_FJH,harrisob@us.ibm.com,MichaelWang,mne,pandrejko,SjirNijssen,spipes,ssaddem,StevenXu,troyronda,vvnick,wutongtree,yxuco,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11141,,,,,,,,FAB-8820,,,,,,,,,,,,,,,,,"13/Apr/18 10:29 PM;denyeart;CollectionTypesAndStateBasedEndorsement.pptx;https://jira.hyperledger.org/secure/attachment/14891/CollectionTypesAndStateBasedEndorsement.pptx","25/Jul/18 3:23 AM;ales;state-based_endorsement_review.pdf;https://jira.hyperledger.org/secure/attachment/15368/state-based_endorsement_review.pdf",,,,,,,,,,,,,,,,,,Done. Sample in review FAB-11951.,"Link to the high-level design document:
https://docs.google.com/document/d/1RRtjfTSPO8vdfwep-QpfMckSYdnA-k24WmqsgSIEbOA/edit#",Reviewed,,Done,,,State-based Endorsement,,,,Done,,,,"1|hzycsn:",,,,No,Required,,,,,,,,,,"See FAB-8825 for test plan.

SVT Prime: Adnan Choudhury
FAB-11614
FAB-11615
FAB-11616",,,,,,ales,baohua,C0rWin,ChanderGovindarajan,denyeart,eugenluft,geahaad,Hangyu_FJH,harrisob@us.ibm.com,MichaelWang,mne,pandrejko,SjirNijssen,spipes,ssaddem,StevenXu,troyronda,vvnick,wutongtree,yxuco,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.2,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Apr/18 4:54 AM;harrisob@us.ibm.com;I would like to know how the user will use this to understand the API's the SDK's will have to implement or impact to current API's.;;;","27/Apr/18 10:40 PM;denyeart;[~ales] With latest design I don't think there is any SDK impact for the normal (public) ownable state, right?  I believe all the ownable state logic would all be embedded in chaincode.  [~harrisob@us.ibm.com] was asking...;;;","30/Apr/18 7:31 PM;mne;[~harrisob@us.ibm.com] the current, public ownable state targeted for V1.2 there is no SDK impact. SDK support would just be needed for the future, privacy-preserving versions.;;;","17/May/18 6:58 PM;denyeart;Added v1.3 to the short name to eliminate confusion when looking at v1.2 dashboards.;;;","25/Jul/18 12:05 AM;denyeart;No SDK impact for the core state-based endorsement feature, however there will likely be an impact to Service Discovery that will therefore impact SDK (this part is deferred for v1.3, and will be tracked separately).;;;",,,,,,,,,,,,,,,,,,
Ownable state on-ledger data structure,FAB-8814,28445,33221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,13/Mar/18 4:57 AM,26/Aug/18 12:43 AM,28/Oct/23 3:02 AM,26/Mar/18 5:24 PM,,,,v1.2.0,,,,,,,0,,,,,,"Define ledger KVS data structures (naming convention + structs) to:
 * store ownable state data
 * store ownable state endorsement policies
 * store ownable state owners",,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz11z:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode shim convenience layer interface for state-based endorsement,FAB-8815,28446,33224,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,13/Mar/18 4:59 AM,09/Sep/18 5:11 AM,28/Oct/23 3:02 AM,09/Sep/18 5:11 AM,,,,v1.3.0,,,,,,,0,,,,,,"Define the (shim) interface for an KVS entry with state-based endorsement.

It should support the following operations:
 * Changing ownership
 * Modifying state data",,ales,angelo.decaro,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwt5r:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,angelo.decaro,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/May/18 6:27 PM;mne;https://gerrit.hyperledger.org/r/21487;;;","02/Aug/18 6:49 PM;angelo.decaro;Is there an example of how to use it?

 ;;;","02/Aug/18 6:53 PM;mne;Yes, in FAB-8824;;;",,,,,,,,,,,,,,,,,,,,
Key management for privacy-preserving ownable state,FAB-8817,28448,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,13/Mar/18 6:01 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,Future,,,,,,,0,stale-item,,,,,"Owners of an ownable state endorse changes to it by signing transactions with some keys. This key may be the long term signing identity of the peer or a different kind of key. Key management should be in place to capture all possibilities.

Design/Implement a proper key manager/signer factory (especially for privacy-preserving OS).",,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8820,,,,,,,,,"1|hzz12f:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
ESCC for privacy-preserving key-level validation,FAB-8818,28449,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ales,ales,13/Mar/18 6:58 AM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,Future,,,,,,,0,stale-item,,,,,A custom ESCC is required to endorse changes to ownable state. This ESCC makes use of the ownable state endorsement interface for signing.,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8820,,,,,,,,,"1|hzwtdr:",,,,Unset,,,,,,Unset,,,,,,,,,,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
"As a chaincode participant, I want transaction validation logic to include state-based endorsement validations",FAB-8819,28450,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,13/Mar/18 6:59 AM,24/Sep/18 9:23 PM,28/Oct/23 3:02 AM,24/Sep/18 9:23 PM,,,,v1.3.0,,,,,,,0,,,,,,Extend the VSCC to handle per-key endorsement policies stored in the key metadata.,,ales,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8812,,,,,,,,,"1|hzwsdb:",,,,Unset,,Sprint 6 - NextGen Endorseme 2,,,,Unset,,,,,,,,,,,ales,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Privacy-preserving state-based endorsement,FAB-8820,28451,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,13/Mar/18 7:01 AM,23/Jan/20 7:33 AM,28/Oct/23 3:02 AM,23/Jan/20 7:33 AM,,,,Future,,,,,,,1,stale-item,,,,,"The endorsement policy of ownable state must not refer to long-lived credentials or keypairs, otherwise it leaks the owners of ownable state.",,ales,denyeart,MichaelWang,SjirNijssen,sykesm,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8812,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Privacy-preserving state-based endorsement,,,,Unset,,,,"1|hzycsv:",,,,Unset,Unset,,,,,,,,,,,,,,,,ales,denyeart,MichaelWang,SjirNijssen,sykesm,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/18 1:49 AM;denyeart;With state-based endorsement targeted for v1.3, let's target privacy-preserving state-based endorsement for Future.;;;","23/Jan/20 7:33 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,
State-based endorsement documentation,FAB-8823,28454,,Documentation,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,denyeart,denyeart,13/Mar/18 7:53 AM,31/Dec/18 12:15 AM,28/Oct/23 3:02 AM,31/Dec/18 12:15 AM,,,,v1.3.0,,,fabric-docs,,,,0,Documentation,,,,,See: https://jira.hyperledger.org/browse/FAB-8812,,denyeart,knagware9,mne,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8812,,,,,,,,,"1|hzwscv:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,denyeart,knagware9,mne,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Aug/18 6:16 PM;mne;https://gerrit.hyperledger.org/r/#/c/25595/;;;",,,,,,,,,,,,,,,,,,,,,,
Chaincode sample for key-level validation,FAB-8824,28455,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mne,denyeart,denyeart,13/Mar/18 7:53 AM,08/Sep/18 8:27 PM,28/Oct/23 3:02 AM,08/Sep/18 8:27 PM,,,,v1.3.0,,,fabric-samples,,,,0,,,,,,A sample chaincode that makes use of key-level validation.,,denyeart,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11613,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8812,,,,,,,,,"1|hzwsd3:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,denyeart,mne,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/May/18 10:55 PM;mne;https://gerrit.hyperledger.org/r/#/c/22127/;;;","26/Aug/18 1:08 AM;denyeart;The sample should go into fabric-samples repository instead of fabric /examples.;;;",,,,,,,,,,,,,,,,,,,,,
TEST PLAN: key-level validation,FAB-8825,28456,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,denyeart,denyeart,13/Mar/18 7:54 AM,12/Sep/18 4:15 PM,28/Oct/23 3:02 AM,12/Sep/18 4:15 PM,,,,v1.3.0,,,fabric-quality,,,,0,test-plan,,,,,"Before closing this testplan task, coverage must be reviewed and approved (via upvote or comment) by the epic feature owner and the test leads identified below.

+*Location / Description of*+ docs, APIs, config vars, system configuration (fabric, SDKs, fabric-samples) :
 * [Google Doc|https://docs.google.com/document/d/1RRtjfTSPO8vdfwep-QpfMckSYdnA-k24WmqsgSIEbOA/edit#heading=h.blytbnfrd23h]

 

+*Unit Test (UT) leader*+: [~ales] / [~mne]
 * core/chaincode coverage: 97.4% of statements
 * core/common/validation/statebased coverage: 83.7% of statements 
 * core/chaincode/shim/ext/statebased coverage: 74.0% of statements

Automated unit tests are merged in repo, as go tests or otherwise part of build/verify jenkins jobs.
 Code coverage tracked in Jenkins: [https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-coverage-daily-master-x86_64/]

 

+*Function Test (FVT) leader*+: [~ales] / [~mne]
 A.  Expand unit testcases beyond traditional UT coverage, for the following integration scenarios that otherwise might be done using the ginko framework) - we consider the following extended unit tests:
 * The ledger support for the validation parameter retrieval is mocked for the unit tests.
 * Policy evaluation for the key-level validation is mocked for the unit tests. Consider using full cauthdsl policies in addition.

B.  E2E testcases scenarios (FAB-11607). The E2E testcases are stacked on top of one another. They use the CLI as there is no specific SDK support for state-based endorsement. The scenario consists of a setup with two orgs A and B and a sample chaincode (FAB-8824) for state-based endorsement.
 # Setting an endorsement policy: A invokes a chaincode function that
 ## creates a KVS key ""x"" and sets an endorsement policy that requires org A.
 ## creates a KVS key ""y""
 # Reading an endorsement policy: A invokes a chaincode function that
 ## reads the endorsement policy for ""x""
 ## reads the endorsement policy for ""y"" (which does not exist)
 ## reads the endorsement policy for ""z"" (key does not exist)
 # Modify a key's value:
 ## A invokes a chaincode function that modifies the value of ""x"" and succeeds
 ## B invokes a chaincode function that tries to modify the value of ""x"" and fails because the EP is not satisified

C.  Other functional testing required: N/A

 

+*System Verification Test (SVT) leader*+: [~AdnanChoudhury]
 State-based endorsement is a change to fabric that affects validation and chaincode. We suggest to perform SVT tests that involve these components with a chaincode that sets up key-level validation parameters in a network setup with at least two orgs, preferably more. 
FAB-11614
FAB-11615
FAB-11616
",,AdnanChoudhury,denyeart,MichaelWang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8812,,,,,,,,,"1|hzwscn:",,,,,,Sprint 6 - NextGen Endorseme 2,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,MichaelWang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/18 8:36 PM;yacovm;With regard to system tests - IMO a useful thing to have is transactions that:
 * Modify the endorsement policy of a key.
 * Modify the value of the key who's endorsement policy was modified.

Such that the transactions end up in the same block.

 

Also - it might be good if the chaincode invocations will be cross-chaincode (chaincode to chaincode) [~ales] wdyt?

 ;;;","12/Sep/18 12:35 AM;Clayton Sims;What is remaining to close this out?

 ;;;","12/Sep/18 4:40 AM;AdnanChoudhury;FVT looks good to me. I think we are ready to close this one and track with the system test jiras [~ales] [~mne];;;",,,,,,,,,,,,,,,,,,,,
Service Discovery - Node.js SDK,FAB-8830,28461,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,13/Mar/18 10:51 AM,28/Jul/18 1:39 AM,28/Oct/23 3:02 AM,28/Jul/18 1:39 AM,,,,v1.2.0,,,fabric-sdk-node,,,,0,,,,,,,,denyeart,fredbi,n-horiguchi,scottz,tallharish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8779,,,,,,,,,"1|hzwse7:",,,,Unset,,Sprint 6 - NextGen Endorseme 2,,,,Unset,,,,,,,,,,,denyeart,fredbi,n-horiguchi,scottz,tallharish,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jun/18 10:28 PM;denyeart;[~harrisob@us.ibm.com] I added a sub-task for doc/sample.;;;","28/Jul/18 1:28 AM;denyeart;[~harrisob@us.ibm.com] I moved the two remaining subtasks to be under the new Epic FAB-11374 which is a bucket for remaining Service Discovery items.
FABN-840 and FABN-841.;;;",,,,,,,,,,,,,,,,,,,,,
Service Discovery - Java SDK,FAB-8831,28462,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,denyeart,denyeart,13/Mar/18 10:52 AM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,18/Jul/18 9:07 PM,,,,Future,,,fabric-sdk-java,,,,0,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8779,,,,,,,,,"1|hzwqfj:d",,,,Unset,,To Do,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/18 1:57 AM;denyeart;Sub-task is still In Review...;;;","16/Jun/18 10:31 PM;denyeart;[~rickr] I added a sub-task for doc/sample.;;;",,,,,,,,,,,,,,,,,,,,,
Service Discovery documentation,FAB-8832,28463,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,denyeart,denyeart,13/Mar/18 10:58 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,09/May/18 11:20 PM,,,,v1.2.0,,,fabric-docs,,,,0,Documentation,,,,,,,denyeart,joe-alewine,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-8779,,,,,,,,,"1|hzwsvj:",,,,Unset,,May2018 - NextGen Endorsement,,,,Unset,,,,,,,,,,,denyeart,joe-alewine,SjirNijssen,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/May/18 9:56 PM;joe-alewine;https://gerrit.hyperledger.org/r/c/20859/;;;",,,,,,,,,,,,,,,,,,,,,,
TEST PLAN: Service Discovery,FAB-8833,28464,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,13/Mar/18 10:59 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,03/Jul/18 5:52 AM,,,,v1.2.0,,,,,,,0,test-plan,,,,,"Before closing this testplan task, coverage must be reviewed and approved (via upvote or comment) by the epic feature owner and the test leads identified below.

+*Location / Description of*+ docs, APIs, config vars, system configuration (fabric, SDKs, fabric-samples) :

 

 

+*Unit Test (UT) leader*+: Yacov

~Automated unit tests are merged in repo, as go tests or otherwise part of build/verify jenkins jobs.~
 ~Code coverage tracked in Jenkins: [https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-coverage-daily-master-x86_64/]~

The latest code coverage report (after the last CR will be merged) for the packages that were introduced is the following:
{code:java}
16:16:31 unit-tests_1  | ok      github.com/hyperledger/fabric/common/graph    0.579s    coverage: 100.0% of statements
16:16:57 unit-tests_1  | ok      github.com/hyperledger/fabric/common/policies/inquire    0.135s    coverage: 99.1% of statements
16:17:07 unit-tests_1  | ok      github.com/hyperledger/fabric/core/cclifecycle    0.063s    coverage: 99.4% of statements
16:19:13 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery    0.027s    coverage: 100.0% of statements
16:19:18 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery/client    3.412s    coverage: 92.0% of statements
16:19:18 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery/endorsement    0.075s    coverage: 98.2% of statements
16:19:18 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery/support/acl    0.067s    coverage: 100.0% of statements
16:19:18 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery/support/chaincode    0.062s    coverage: 100.0% of statements
16:19:18 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery/support/config    0.443s    coverage: 87.7% of statements
16:19:19 unit-tests_1  | ok      github.com/hyperledger/fabric/discovery/support/gossip    0.048s    coverage: 100.0% of statements{code}
A non-weighted (without taking into account lines of code per package) average of all packages above is *97.5%*

The breakdown for functionality per package is, roughly speaking:
 * *github.com/hyperledger/fabric/common/graph* - contains analysis of endorsement policy trees in raw form of graphs.
 * *github.com/hyperledger/fabric/common/policies/inquire* - contains principal set combination analysis, intersections and merging of principal sets.
 * *github.com/hyperledger/fabric/core/cclifecycle* - updates the gossip layer for chaincode installation/instantiation, and also serves as a retriever for chaincode endorsement policies and collection configuration.
 * *github.com/hyperledger/fabric/discovery* - contains the service (request processing and dispatch, access control checks) and the authentication cache for the service
 * *github.com/hyperledger/fabric/discovery/client* - contains a client implementation used by the go-SDK and also for the (work in progress) discovery CLI
 * *github.com/hyperledger/fabric/discovery/support/acl* - links the access control checks to the MSP
 * *github.com/hyperledger/fabric/discovery/support/chaincode* - links the cclifecycle to the discovery service
 * *github.com/hyperledger/fabric/discovery/support/config* - contains processing of config blocks to discovery proto representation
 * *github.com/hyperledger/fabric/discovery/support/gossip* - links gossip with the discovery service.
 The *87%* for the *discovery/support/config* is because the code parses a config block, which has a complex structure.

+*Function Test (FVT) leader*+: Yacov

A. Extended Unit Test - ---FAB-10172---
 # A unit test that spawns an instance of a discovery service, with partially mocked support:
 The endorsement policy analysis, and chaincode lifecycle object would be using production implementations. 
 The gossip layer would be mocked, as the functionality for that hasn't changed since v1.0 
 The ledger layer would be mocked, but the data returned from it would be production implementations (i.e, production representation of endorsement policies, collection configuration).
 The config block retrieval would be mocked, but the data returned from it would be a production configuration block.
 The MSP would be mocked, but the data returned from it would be real MSP identities (which are, basically just x509 certificates decorated with strings of MSP IDs...)
 The test would spawn a production implementation of a client, with TLS and it would:
 ** Have the client query the discovery service for all possible queries, and the output of the endorser query (the most complex one) would be inspected.
 ** The endorsement policy would be something complex like an AND of ORs and ORs of ANDs, as well as trivial ones as ANDs and ORs.
 ** Issue a config update that would revoke subsequent access of the client to the service.
 ** The client is expected to try to query again, and it would be rejected.

B.  E2E testcases scenario ( FAB-9524 ):

Create a network with a single channel and 3 organizations - Org1, Org2, Org3 with 2 peers per organization \{p0, p1}, and a chaincode with endorsement policy of ""3 choose 2""
 # 
 ## Use the discovery CLI (To be implemented in FAB-10110) to query all discovery queries, and expect:
 ### Peers to be in the membership view, config query should also work, but endorsement queries would return that the chaincode cannot be found since it's not instantiated.
 ## Install the chaincode on p0.Org1 and instantiate it.
 ## Use the discovery CLI to query all discovery queries, and expect:
 ### The membership query would now have a chaincode installed on p0.Org1
 ### The endorser query would return that the endorsement policy cannot be satisfied
 ## Install and instantiate the chaincode on every p0 but not on p1 for Org2 and Org3.
 ## Use the discovery CLI to query all discovery queries, and verify the results:
 ### The membership query should contain now that all peers p0's have the chaincode but not the p1's.
 ### The endorser query should convey 3 different layouts (A, B) , (A, C) and (B, C) and with 1 peer each.
 ## Install another chaincode and instantiate it on all peers. Its endorsement policy would be ""3 choose 3"" (1 signature from every org).
 ## Use the discovery CLI to query a chaincode to chaincode endorsement query and verify the results:
 ### There should be only 1 layout with all organizations in it.
 ## upgrade the first chaincode and add a collection definition with a collection policy of (A, C).
 ## Use the discovery CLI to query a collection query for the collection, in the context of the first chaincode, and verify the results:
 ### There should be only a single layout corresponding to (A, C).
 ## Issue a config update and change the channel reader policy to Org1 OR Org2 (in other words - remove Org3 from the channel readers)
 ### Use the discovery CLI to query a peer query and ensure that ""access denied"" is returned.

 

C.  Other functional testing required:
 No other tests needed

 

+*System Verification Test (SVT) leader*+: [~dongming]
 V1.2 System Test Plan (Epic) FAB-????
 Covers stress, load, performance, full system integration, resiliency, recover, etc.

Considering this feature, what scenarios are of particular interest and concern:
 # Scenario Description X
 # Scenario Description Y
 # Scenario Description Z

 

*Yacov:* I guess it can be useful to measure the performance of service discovery queries, particularly if they are repeated one after the other with the same query.
 The reason is that the service has an access control cache that caches previous access control checks to reduce the CPU load on the peer and leverage mutual TLS authentication.
 So, if you do a query that its payload is Foo twice or thrice, the 2nd and 3rd times should be processed faster than the first one - especially if the chaincode is installed on the peer itself, because then the results would be fetched from yet another in-memory cache and it doesn't go all the way to the stateDB.

Ideally, since the client already connects to some peer for events - you can reuse the same TLS connection and use it for service discovery queries, and this means you can do a discovery query in which no side (no client, nor server) had done any signature signing or any signature verification to authorize the request.

 ",,bmos299,denyeart,dongming,latitiah,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8779,,,,,,,,,"1|hzwswf:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,bmos299,denyeart,dongming,latitiah,scottz,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/18 1:18 PM;latitiah;[~yacovm] Can you open up task issues for each item in your test plan that need to be done? We need to be able to track what tests are being done and when they are complete. If these are manual tests, please tag the issue as ""manual-test"".

[~dongming] Please review what Yacov has here and make sure that it makes sense to you and whether or not there are any further testing that need to take place.

Thanks!;;;","17/May/18 7:23 PM;yacovm;[~latitiah] done.;;;","18/May/18 5:36 AM;dongming;[~yacovm] We will test thru PTE (Performance Traffic Engine) which uses Node SDK. I will add service discovery support to PTE once SDK is ready.  PTE does not support mutual TLS.

It will be useful to know the performance impact of service discovery.  Are you suggesting that every transaction needs service discovery? We run a number of transactions sending to the same peers continuously for the performance measurement. If every transaction requires service discovery, then there will be performance impact.  An alternative is to run service discovery for the first transaction and when there is a problem, such as the peer goes down.;;;","18/May/18 6:10 AM;yacovm;{quote}I will add service discovery support to PTE once SDK is ready
{quote}
Great! Looking forward seeing the node SDK discovery support materialize!

 
{quote}PTE does not support mutual TLS.
{quote}
That's really easy to add. You just pass another PEM byte Buffer object to the createSsl command in the node SDK. I can show you where, but I'm sure that Bret also knows and he's in closer proximity than me ;) 

Since you're testing, you can just have a self-signed certificate and use it always for PTE. it would work.
{quote}It will be useful to know the performance impact of service discovery.
{quote}
I agree.
{quote}Are you suggesting that every transaction needs service discovery?
{quote}
No.
{quote} We run a number of transactions sending to the same peers continuously for the performance measurement.
{quote}
I think the idea of system testing of service discovery is only to test service discovery.

Not to send transactions while also testing service discovery. Maybe I have the wrong idea what the system test is supposed to do?

What I'd do, had I been a system tester - is to setup a test that sends (in isolation, without sending transactions at the same time...) a trillion discovery queries according to some parametric layout, i.e - *Q* queries per second, over time of *T*, every *t* seconds and measure the mean response time, the error count, and if you want to go wild then also the distribution, i.e standard deviation.

Also it would be nice to see the CPU usage at the test, and memory usage, etc.

Also you'd want to use TLS while doing it, because - that's what customers are expected to do.

 ;;;","19/May/18 2:32 AM;dongming;[~yacovm] Thanks for explaining the detail.  Then PTE will not be able to run the test since PTE has no control on SDK to execute service discovery.;;;","24/May/18 4:43 AM;bmos299;[~dongming] [~yacovm] [~harrisob@us.ibm.com] [~latitiah]

In the Node SDK Brett is going to modify the Channel initialize() method to now use the service discovery API queries.

 The discovery service provides 3 types of queries: 
• Peer membership query – either channel scoped, or non-channel scoped (AKA “local”) 
• Config query 
• Endorsers query  

It seems like the most complicated is the Endorser query which contains the Layouts and Groups.   The SDK will be the 'brains' behind this work, via a default plug-in module which we will use. 


I think in system testing we can:

1.  Drive the initialize() call in a loop to force all the queries, i.e. service discovery code.   Bret and I had some discussion that after the initialize() it may be better to have a method called refresh() to not confuse the developers.
	- this can include multiple PTE drivers issuing the same initialize() as well as a single PTE driver issuing initialize() on different channels on the peer.

2.  In our multi-host setup with multiple orgs, we can insert some chaos by taking peers up and down and create scenarios we expect the transaction to fail, and then through retry logic (still being determined if this is in the sdk or application) the transaction succeeds again.

Thoughts?;;;","24/May/18 5:10 AM;yacovm;1 seems sort of OK to me, as long as you:
 * Use TLS, because that's what is used for production
 * Don't re-open the connection each time, but reuse the connection with the peer

2 doesn't have anything to do with discovery, you can take peers up and down and throw in chaos, sugar, spice, and everything nice, but it won't be in the context of the discovery.;;;","24/May/18 5:20 AM;dongming;I will create a PTE testcase for item 1 once channel initialization() and/or refresh() is supported.;;;","24/May/18 5:39 AM;denyeart;[~yacovm] The intent of #2 was to ensure Service Discovery can tolerate chaos, sugar, spice, and everything nice. e.g. if the peer you are calling goes down and up, the client calls fail gracefully and then resume, and if another peer goes down and up, it falls out of the Service Discovery response list and then comes back into the Service Discovery response list.  Sounds like a good test to me.;;;","24/May/18 6:18 AM;bmos299;Thanks for the comments [~yacovm].  As [~denyeart] test #2 is just ensuring service discovery is part of the real-world system test we hope to accomplish with system/solution testing.  We will continue to discuss with you guys.   ;;;","01/Jun/18 4:34 AM;dongming;I have reviewed the test plan and agreed with what Barry suggested.;;;",,,,,,,,,,,,
remove fsm code from core package,FAB-8834,28467,19423,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,13/Mar/18 6:03 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,13/Mar/18 8:02 PM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"Now that FSM has been removed from the peer and chaincode shim, we can remove the fsm code in the core package",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz14f:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Mar/18 6:27 PM;mastersingh24;https://gerrit.hyperledger.org/r/19109;;;",,,,,,,,,,,,,,,,,,,,,,
Make command failed in couchdb2.0.0 due to  the url not exists,FAB-8835,28468,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bjwswang,bjwswang,bjwswang,13/Mar/18 7:08 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,13/Mar/18 7:10 PM,,,,,,,fabric-build,,,,0,,,,,,"I tried to run ""make all"" command in fabric 1.1-rc1 . But failed in making couchdb image .The tar file not exist  in this url ""https://dist.apache.org/repos/dist/release/couchdb/source/2.0.0"". Only couchdb2.1.1 and couchdb1.7.1 in there.  ",,bjwswang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz14n:",,,,,,,,,,,,,,,,,,,,,bjwswang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 7:10 PM;bjwswang;Modify the Dockerfile in [https://github.com/hyperledger/fabric/blob/release-1.0/images/couchdb/Dockerfile.in] . Change COUCHDB_VERSION from 2.0.0 to 2.1.1 would work. ;;;",,,,,,,,,,,,,,,,,,,,,,
Extend the MSPPrincipal definition to account for attribute-based principals,FAB-8836,28469,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,13/Mar/18 8:54 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-crypto,,,,0,stale-item,,,,,"Attestation of ownership of certain attributes can be performed within an MSP. That is, there are cases where the authorised attribute issuer is the same as the identity issuer, in which case attributes can be included in the identities issued for users.

 

To verify that a certain identity (and, thus, its owner) is in possession of a certain attribute in this case, MSP interface can be leveraged. In particular one can leverage the following function of MSP, and an enhanced version of MSPPrincipal.

```
{code:java}
SatisfiesPrincipal(id msp.Identity, principal *msp.MSPPrincipal) error{code}
```

More specifically, MSPPrincipal can be extended to cover for attribute definition and attribute combinations.

 

MSPPrincipal is currently defined as indicated in [MSPRefactoring|https://docs.google.com/document/d/1FyvjMlBFasdFlOpjcaurNG8jYipHE8ENXfdbY122mdA/edit?usp=sharing] document:

```
{code:java}
message MSPPrincipal {
 
  enum Classification {
      ROLE = 0;  // Represents the one of the dedicated MSP roles, the
      // one of a member of MSP network, and the one of an
      // administrator of an MSP network
      PROPERTY = 1; // Denotes a finer grained (property-based)
      // groupping of entities, per MSP affiliation
      // E.g., this can well be represented by an MSP's
      // Organization unit
      IDENTITY  = 2;    // Denotes a principal that consists of a single
      // identity
      COMBINED  = 3;    // Denotes a combination of principals
  }
 
  // Classification describes the way that one should process
  // Principal. An Classification value of ""ByOrganizationUnit"" reflects
  // that ""Principal"" contains the name of an organization this MSP
  // handles. A Classification value ""ByIdentity"" means that
  // ""Principal"" contains a specific identity. Default value
  // denotes that Principal contains one of the groups by
  // default supported by all MSPs (""admin"" or ""member"").
  Classification principal_classification = 1;
 
  // Principal completes the policy principal definition. For the default
  // principal types, Principal can be either ""Admin"" or ""Member"".
  // For the ByOrganizationUnit/ByIdentity values of Classification,
  // PolicyPrincipal acquires its value from an organization unit or
  // identity, respectively.
  bytes principal = 2;
}
{code}
 

 

MSPPrincipal can be enhanced to accommodate attribute ownership as follows:

 

 
{code:java}
message AppMSPPrincipal {
 
  enum Classification {
      ROLE = 0;  // Represents the one of the dedicated MSP roles, the
      // one of a member of MSP network, and the one of an
      // administrator of an MSP network
      PROPERTY = 1; // Denotes a finer grained (property-based)
      // groupping of entities, per MSP affiliation
      // E.g., this can well be represented by an MSP's
      // Organization unit
      ATTRIBUTE = 2; // Denotes an attribute
      IDENTITY  = 3;    // Denotes a principal that consists of a single
      // identity
      COMBINED  = 4;    // Denotes a combination of principals
  }
 
  // Classification describes the way that one should process
  // Principal. An Classification value of ""ByProperty"" reflects
  // that ""Principal"" contains the name of a property this MSP
  // handles. A Classification value ""ByIdentity"" means that
  // ""Principal"" contains a specific identity. Default value
  // denotes that Principal contains one of the groups by
  // default supported by all MSPs (""admin"" or ""member"").
  Classification principal_classification = 1;
 
  // Principal completes the policy principal definition. For the default
  // principal types, Principal can be either ""Admin"" or ""Member"".
  // For the ByOrganizationUnit/ByIdentity values of Classification,
  // PolicyPrincipal acquires its value from an organization unit or
  // identity, respectively.
  bytes principal = 2;
}
{code}
 

 

Clearly existing MSP implementations would need to be modified to be able to process SatisfiesPrincipal calls with the extended MSPPrincipal definition. ",,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8794,,,,,,,,,"1|hzwrvz:",,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Enhance the ValidatedIdentity interface with the ability to update its state with secrets,FAB-8837,28470,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,13/Mar/18 9:08 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-crypto,,,,0,stale-item,,,,,"This is mostly relevant for identities that include encrypted information, e.g., identity mixer identities. For such identities to be certified that are in possession of certain attributes, or roles, information needs to be passed to it beyond the corresponding msp principal definition. 

In this issue we aim at extending the interface of such MSPs to allow a ValidatedIdentity to update its state with the passed input, to enable the latter to decide whether it satisfies certain principals.

Exact design of this is TBD.",,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8794,,,,,,,,,"1|hzwrw7:",,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Define a policy evaluation system chaincode leveraging channel MSPs to perform the policy evaluation,FAB-8838,28471,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,13/Mar/18 9:15 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,,,,,0,stale-item,,,,,"This issue aims at defining a component (in terms of interfaces) that would be exposed to a chaincode allowing the latter to perform policy evaluation using channel MSPs. In the following we assume the following terminology:
 * _Identity Issuer_: Entity authorised to grant a certain type of attributes to users. It can be represented by an msp.IdentityIdentifier, or msp.OwnerIdentifier (see, [here|https://docs.google.com/document/d/1FyvjMlBFasdFlOpjcaurNG8jYipHE8ENXfdbY122mdA/edit?usp=sharing] for more details on these fields).
 * _User_: Entity that owns one or more identities (e.g., during identity renewal), and may be granted one or more attributes.
 * _Attribute Issuer_: Entity authorised to grant attributes to users. It can be represented by an msp.IdentityIdentifier or msp.OwnerIdentifier.
 * _Attribute_: A property that a user may own, can be sufficiently well be represented by a pair:  <attribute type, attribute value>
 * _Verifier_: An entity that wishes to know if a certain identity is in possession of a specific attribute, i.e., combination of <Attribute, Attribute Issuer>

TBD after discussion in this JIRA if this component makes sense to be exposed via the chiancode SHIM or via a system chaincode available to all peers of a channel. Current approaches move towards the implementation of a system chaincode that exposes the attribute attestation component interface as well as basic channel msp identities validation functions. 

 ----------

We define an attribute to consist of an issuing authority  and a key-value pair.

 
{code:java}
 
message Attribute {
 
  // identity or reference to an identity responsible for granting attributes
  AttributeEntity issuerRef = 1;
 
  // actual attribute's content
  AttributeContent content = 2;
}
{code}
 

Attribute authority is represented in the interface as AttributeEntity, and as such contains a type and value. In case of an MSP-based issuer (i.e., where the MSP itself certifies the attribute possession only to its issuers), the value field contains the MSP identifier.  
{code:java}
message AttributeEntity {
  // can be by identity-, or by long-term owner identifier, or mspid?
  int32 type = 1;
  // actual issuer representation (depending on type)
  bytes value = 2;
}
{code}
 

Attribute is represented by AttributeContent structure. Here, key would denote the attribute type, and the attribute value the actual content of the attribute. E.g., an attribute key-value could be \{“age”, “30”}. Definition of the issuing authority can be either identity-based (i.e., IdentityIdentifier) or owner-based (i.e., OwnerIdentifier). 
{code:java}
message AttributeContent {
  // identifier of the attribute type
  bytes type = 1;
  // value of the attribute
  bytes value = 2;
}
{code}
 

 

Attribute Attestation exposes functions to validate the possession of an attribute by a specific (validated) identity. More specifically the component is set up by a set of MSP objects that can represent the MSPs residing in a certain channel.
{code:java}
type AttributeAttestation interface {
Setup (msps []MSP) error
ValidateAttributePossession(sid SerializedIdentity, attributes []Attribute, proof [][]byte, opts []byte ) error
}
{code}
 

Attribute attestation component would expose a function to validate attribute possession by the provided identity. Attributes are passed to the function in the form of an array of attributes indicating the attribute-issuer authority each time.Proof of attribute possession in its simplest form would consist of two parts:
 * A serialised identity that is (afterwards deserialized and validated) and its ValidatedIdentity version aims to be consistent to the respective attribute’s issuing authority identifier
 * A list of attributes that are to be verified to be possessed by an entity in the system
 * Proofs of possession of attributes by the serialised identity
 * Optional information passed to the identity prior to performing the policy evaluation

 

An simple way to implement proof object is the following one:
{code:java}
message SimpleAttributeProof {
  // reference to the attribute-owner (can be identity-based, or user-based)
  AttributeEntity owner = 1;
  // attribute ownership claim
  Attribute attribute = 2;
  // attestor identity
  SerialisedIdentity attestor = 2;
  // signature by the attestor on the rest of the fields of SimpleAttributeProof
  bytes signature = 2;
}
 
{code}
Here our simple proof includes an identifier to the claimed owner of the attribute, the actual attribute (or a short commitment to it), the identity of the attestor of the proof, and a signature on all the above fields generated by the secret key matching attestor’s identity.

 

Now let a call to:
{code:java}
ValidateAttributePossession(sid SerializedIdentity, attributes []Attribute, proofs [][]byte, opts []byte ) error{code}
 

Checks that are to take place here iterate across all attributes in the input, and ensure that for each of them there is a proof in proofs, such that
 * proof.attribute equals the attribute
 * proof.owner is consistent to sid
 * proof.signature matches the proof.Attribute
 * proof.attestor matches proof.Attribute.issuer

 

Additional secret information can be passed on to the attribute possession function via opts.

 ",,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8794,,,,,,,,,"1|hzz3cv:",,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Fabric should be able fetch/verify vendored dependencies when the chaincode image is built,FAB-8841,28490,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,pd93,pd93,13/Mar/18 11:44 PM,03/Dec/19 6:36 AM,28/Oct/23 3:02 AM,03/Dec/19 6:36 AM,v1.0.6,v1.1.0,,,,,fabric-peer,,,,1,chaincode,Golang,,,,"*###Scenario*

A user has a chaincode written in golang with several external dependencies. They would like to use the `dep` tool to vendor these dependencies and the shim (as is advised in the latest build), but they don't want to commit a large number of files to what is otherwise a small repository.

 

*Current Behaviour*

Users are forced to commit their `vendor` directory along with their chaincode in order to include the dependencies in their chaincode container.

 

*Suggested Behaviour*

When the chaincode is built, we should search for `Gopkg.toml` and `Gopkg.lock` files. If they are present, then we should run `dep ensure`. This will fetch the dependencies from their respective upstreams and build them into the dependency tree without the user having to commit them to their repository.

 

It's also worth noting that.. If a user _wants_ to commit their vendor directory to their repository, this will still work - and has the added benefit of running `dep ensure` - which will make sure that the committed dependency tree is valid.

 ",,denyeart,MichaelWang,pd93,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz15j:",,,,Unset,,,,,,Unset,,,,,,,,,,,denyeart,MichaelWang,pd93,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 1:18 AM;pd93;{color:#444444}My initial thought was that the best way to do this would be to add a step to the generated {color}{color:#444444}`{color}{color:#444444}{{Dockerfile}}{color}{color:#444444}`{color}{color:#444444} which will run the {color}{color:#444444}`{color}{color:#444444}{{dep ensure}}{color}{color:#444444}`{color}{color:#444444} command.{color}
[~muralisrini] has previous stated on RC {color:#444444}that this would only effect the CLI, as the SDKs have their own methods for packaging the chaincode. An alternative method would have to be implemented for them.{color}

{color:#444444}I managed to get down to the {color}[Golang Platform Dockerfile|https://github.com/hyperledger/fabric/blob/master/core/chaincode/platforms/golang/platform.go]{color:#444444}, but I can't find where the chaincode files are copied in - obviously we need to run this command {color}{color:#444444}*{color}*after*{color:#444444}*{color}{color:#444444} the files are copied in.{color}

{color:#444444}There is also the added complexity that we don't want to run {color}{color:#444444}`{color}{color:#444444}{{dep ensure}}{color}{color:#444444}`{color}{color:#444444} if there are no {color}{color:#444444}`{color}{color:#444444}{{Gopkg.lock}}{color}{color:#444444}`{color}{color:#444444} or {color}{color:#444444}`{color}{color:#444444}{{Gopkg.toml}}{color}{color:#444444}`{color}{color:#444444} files. We'll need to test for the presence of these files and make a decision as to whether or not we need to add the {color}{color:#444444}`{color}{color:#444444}{{dep ensure}}{color}{color:#444444}`{color}{color:#444444} command to the {color}{color:#444444}`{color}{color:#444444}{{Dockerfile}}{color}{color:#444444}`{color}{color:#444444}.{color};;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","05/Jun/18 10:56 PM;pd93;I'd really like to see this completed for v1.3/v2.0. It's a shame that it won't make it into v1.2, as I feel its a relatively simple feature to add. Most of the complexity for this comes from the fact that it must be implemented in the SDKs *and* CLI.

Other than that, it's just simply running a single command (dep ensure) during the chaincode installation (if the .toml/.lock files are present).

It also occurs to me that now that Fabric is supporting Node.js chaincode, there may be a similar problem with the node_modules folder? Though I haven't experimented with this myself. Golang and Node chaincodes should probably work the same way with regards to 'vendoring' or 'installing' dependencies.;;;","06/Jun/18 9:14 PM;pd93;In addition to the above, I've been reading about the developments in vgo lately, now that its proposal has been accepted and it will replace dep (around end Jan 19 for Go v1.12). Here are some additional thoughts:
 * 'vgo' does not use Gopkg.lock and Gopkg.toml files. It uses a single go.mod file instead.
 * 'vgo' is not a separate tool like 'dep', it is a drop-in replacement for the existing 'go' command.
 * 'vgo build' will build the chaincode as 'go build' does now, but it will also complete the dependency checks at the same time - This effectively, completes this CR for us!

I'd really like to see some of these changes made for Fabric v2. Especially as we can expect a preview of vgo to be included in the Go v1.11 release around the end of July 18.;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:17 PM;denyeart;Chaincode refactoring is planned for 2.0.;;;","10/Oct/18 5:45 PM;pd93;This CR can be fundamentally changed now that vgo is a thing. It works pretty well as an experiment in v1.11 and I expect v1.12 will be around the corner, if not released, by the time Fabric v2 is being planned. In Go v1.12 , 'vgo' will be the standard way of building code and no changes will really be required to make this work. When the chaincode is packaged up, go build will be run and all the dependencies will be downloaded at build time. This will cease the requirement to vendor dependencies during development (Though this is still possible if desired).;;;","16/Jan/19 6:47 AM;denyeart;[~sykesm] Assigning to you so that you can comment and/or factor into your other go chaincode work items.;;;","16/Jan/19 7:41 AM;sykesm;Unfortunately, this does not align with our current direction for chaincode.  Our goal is to extract the responsibility for building chaincode from the peer core as well as the docker requirement. Basically, the peer can't be good at building chaincode in all of the various permutations that are available and, frankly, that really isn't its job.

In terms of module support, while we're transitioning to go 1.12, we are likely to use the presence of a go.mod to indicate that the build should unset the GOPATH.

I will eventually withdraw this story with a reference to the epic(s) that are to be created in 2.x.;;;","09/Apr/19 2:54 PM;MichaelWang;With this item(https://jira.hyperledger.org/browse/FAB-13582)++

The chaincode will be built outside of the peer and all the dependencies could be managed well. This issue will be gone.;;;","03/Dec/19 6:35 AM;denyeart;FAB-15732 was implemented for v2.0 and users are now expected to vendor their own chaincode prior to deployment, therefore this work item is no longer applicable.;;;",,,,,,,,,,,,
Gossip unit consistently fail out of make unit-tests,FAB-8843,28494,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nirro,sykesm,sykesm,14/Mar/18 1:30 AM,19/Mar/19 7:57 PM,28/Oct/23 3:02 AM,23/May/18 7:15 PM,v1.2.0,,,v1.2.0,,,fabric-gossip,,,,0,ci-flake,,,,,"-FAB-8067- made some changes related to port allocation. As part of that work, gossip packages were removed from the ""serial_packages"" collection in unit-test/run.sh. Since then, the unit tests have failed 3 out of 4 times when run via `make unit-test` on a local workstation.

Example:
{code:java}
unit-tests_1  | --- FAIL: TestDissemination (185.44s)

unit-tests_1  |       gossip_test.go:702: Membership establishment took 3.0046563s

        Error Trace:    sertions.go:221:

        Error:          Didn't stop within a timely manner

unit-tests_1  |               

        Error Trace:    gossip_test.go:1564

                        gossip_test.go:709

        Error:          Timeout expired!

unit-tests_1  |               

unit-tests_1  |       gossip_test.go:710: Block dissemination took 3m0.0086017s

unit-tests_1  |       gossip_test.go:713: Metadata dissemination took 1.7075ms

        Error Trace:    gossip_test.go:716

        Error:          Not equal: 10 (expected)

unit-tests_1  |                               != 4 (actual)

unit-tests_1  |               

unit-tests_1  |       gossip_test.go:742: Leadership message dissemination took 404.2449ms

unit-tests_1  |       gossip_test.go:748: Stopping peers

unit-tests_1  |       gossip_test.go:756: Stop took 2.0080214s

unit-tests_1  |       gossip_test.go:757: Took 3m5.4371263s

unit-tests_1  | FAIL
{code}
accompanied by thousands of lines of additional noise.",,C0rWin,jyellick,kchristidis,nirro,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8067,,,,,,,,FAB-9100,FAB-10105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz15z:",,,,,,,,,,,,,,,,,,,,,C0rWin,jyellick,kchristidis,nirro,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/18 1:41 AM;sykesm;Another example:
{code:java}
unit-tests_1  | 2018-03-13 16:39:29.323 UTC [gossip/gossip#p8] handleMessage -> WARN 348 Message GossipMessage: tag:EMPTY alive_msg:<membership:<endpoint:""1.2.3.4:28620"" pki_id:""localhost:28620"" > timestamp:<inc_num:1520959158287783600 seq_num:21 > > , Envelope: 52 bytes, Signature: 52 bytes Secret payload: 17 bytes, Secret Signature: 17 bytes isn't valid

unit-tests_1  | --- FAIL: TestConfidentiality (0.00s)

unit-tests_1  | panic: listen tcp :42610: bind: address already in use [recovered]

unit-tests_1  |       panic: listen tcp :42610: bind: address already in use

unit-tests_1  |

unit-tests_1  | goroutine 273 [running]:

unit-tests_1  | testing.tRunner.func1(0xc4201f51d0)

unit-tests_1  |       /opt/go/src/testing/testing.go:711 +0x2d2

unit-tests_1  | panic(0xde11c0, 0xc422866b40)

unit-tests_1  |       /opt/go/src/runtime/panic.go:491 +0x283

unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.createGRPCLayer(0xa672, 0xec2458, 0xc4202fb618, 0xc4202fb608, 0x815cbe, 0xc42657b940)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:683 +0x767

unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.NewCommInstanceWithServer(0xa672, 0x143eb00, 0xc42657b920, 0xc426b0a7e0, 0xf, 0x10, 0x0, 0x0, 0x0, 0x0, ...)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:63 +0xb00

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.createCommWithServer(0xa672, 0x143eb00, 0xc42657b920, 0xc426b0a7e0, 0xf, 0x10, 0x0, 0xc42657b920, 0x87328b, 0xc422e69a80, ...)

unit-tests_1  |       github.com/hyperledger/fabric/gossip/gossip/_test/_obj_test/gossip_impl.go:184 +0xa5

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.NewGossipService(0xc4222eafd0, 0x0, 0x1430700, 0xc4256f2ba8, 0x143e9e0, 0xc4256f2ba8, 0xc426b0a7e0, 0xf, 0x10, 0x0, ...)

unit-tests_1  |       github.com/hyperledger/fabric/gossip/gossip/_test/_obj_test/gossip_impl.go:94 +0x113f

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.NewGossipServiceWithServer(0xc4222eafd0, 0x1430700, 0xc4256f2ba8, 0x143e9e0, 0xc4256f2ba8, 0xc426b0a7e0, 0xf, 0x10, 0x0, 0xc421352630, ...)

unit-tests_1  |       github.com/hyperledger/fabric/gossip/gossip/_test/_obj_test/gossip_impl.go:178 +0xa7

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.newGossipInstanceWithExternalEndpoint(0xa672, 0x0, 0xc4256f2ba8, 0xc426b0a7b0, 0xf, 0x0, 0x0, 0x0, 0x518f2a70205edb94, 0x4c1538aacec57a38)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:116 +0x3ae

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.TestConfidentiality(0xc4201f51d0)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:335 +0x650

unit-tests_1  | testing.tRunner(0xc4201f51d0, 0xec0d20)

unit-tests_1  |       /opt/go/src/testing/testing.go:746 +0xd0

unit-tests_1  | created by testing.(*T).Run

unit-tests_1  |       /opt/go/src/testing/testing.go:789 +0x2de

unit-tests_1  | FAIL  github.com/hyperledger/fabric/gossip/gossip     41.750s{code};;;","14/Mar/18 1:46 AM;sykesm;Another example:
{code:java}
unit-tests_1  | 2018-03-13 16:45:43.232 UTC [gossip/discovery#localhost:12611] expireDeadMembers -> WARN 148 Exiting

unit-tests_1  | --- FAIL: TestMsgStoreExpiration (38.13s)

        Error Trace:    discovery_test.go:1303

                        discovery_test.go:936

        Error:          Received unexpected error ""context deadline exceeded""

        Messages:       Timeout expired!{code};;;","14/Mar/18 1:46 AM;sykesm;Another example:
{code:java}
unit-tests_1  | 2018-03-13 16:46:01.739 UTC [gossip/gossip#p1] UpdateLedgerHeight -> WARN 013 No such channel [99 104 97 110 66]

unit-tests_1  | panic: listen tcp :32611: bind: address already in use

unit-tests_1  |

unit-tests_1  | goroutine 402 [running]:

unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.createGRPCLayer(0x7f63, 0x100c170, 0xc420514948, 0xc420514938, 0x8a0f0e, 0xc42039a680)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:683 +0x767

unit-tests_1  | github.com/hyperledger/fabric/gossip/comm.NewCommInstanceWithServer(0x7f63, 0x15e9b80, 0xc42039a660, 0xc420372280, 0xf, 0x10, 0x0, 0x0, 0x0, 0x0, ...)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:63 +0xb00

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.createCommWithServer(0x7f63, 0x15e9b80, 0xc42039a660, 0xc420372280, 0xf, 0x10, 0x0, 0xc42039a660, 0x8ff92b, 0xc4201ea040, ...)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:174 +0x9b

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.NewGossipService(0xc42036e160, 0x0, 0x15da040, 0x163bd38, 0x15e9be0, 0x163bd38, 0xc420372280, 0xf, 0x10, 0x0, ...)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:97 +0x10c9

unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.NewGossipServiceWithServer(0xc42036e160, 0x15da040, 0x163bd38, 0x15e9be0, 0x163bd38, 0xc420372280, 0xf, 0x10, 0x0, 0x0, ...)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:169 +0x9d

unit-tests_1  | github.com/hyperledger/fabric/gossip/service.newGossipInstance(0x7f63, 0x0, 0x64, 0xc420337770, 0x6, 0x6, 0xc4201460c0, 0x20070328)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:656 +0x4c5

unit-tests_1  | github.com/hyperledger/fabric/gossip/service.startPeers.func1(0xc42000c2e0, 0x2, 0x2, 0x7f63, 0xc420372190, 0x0)

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:625 +0x83

unit-tests_1  | created by github.com/hyperledger/fabric/gossip/service.startPeers

unit-tests_1  |       /opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:623 +0xed

unit-tests_1  | FAIL  github.com/hyperledger/fabric/gossip/service    8.112s{code};;;","02/May/18 1:17 AM;jyellick;Seems like another
{noformat}
16:03:16 unit-tests_1  | <<<TestConnectToAnchorPeers>>>
16:03:16 unit-tests_1  | --- FAIL: TestConnectToAnchorPeers (220.05s)
16:03:16 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	gossip_test.go:1515
16:03:16 unit-tests_1  | 		
	            	
			asm_amd64.s:2361
16:03:16 unit-tests_1  | 		
	Error:      	Didn't stop within a timely manner
16:03:16 unit-tests_1  | 		
	Test:       	TestConnectToAnchorPeers
16:03:16 unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	gossip_test.go:1575
16:03:16 unit-tests_1  | 		
	            	
			gossip_test.go:474
16:03:16 unit-tests_1  | 		
	Error:      	Timeout expired!
16:03:16 unit-tests_1  | 		
	Test:       	TestConnectToAnchorPeers
16:03:16 unit-tests_1  | 2018-05-01 16:03:11.690 UTC [gossip/comm#8610] sendToEndpoint -> WARN b3e Failed obtaining connection for localhost:8613, PKIid:[108 111 99 97 108 104 111 115 116 58 56 54 49 51] reason: ConnStore is closing
{noformat};;;","02/May/18 3:07 AM;C0rWin;[~nirro] Can you please take a look on this one?;;;","02/May/18 4:28 PM;nirro;[~C0rWin] sure, will take a look today;;;","22/May/18 4:14 AM;kchristidis;[~nirro]: Update?;;;","22/May/18 6:08 AM;nirro;hi [~kchristidis],
half of the issues mentioned in this item are fixed.
the others are a bit harder since they happen once every 50 runs approximately, so it's harder to debug those.

hope to finish the item this week.;;;","22/May/18 9:59 PM;nirro;all tests mentioned in this issue except for TestMsgStoreExpiration are fixed in the following JIRA issues:
[FAB-9100] Inconsistent ""bind: address already in use"" in TestConfidentiality unit-test
[FAB-10105] Flaky TestConnectToAnchorPeers (fixed also the probelm in TestDissemination)

working on a fix for TestMsgStoreExpiration ;;;","23/May/18 7:14 PM;nirro;tried to reproduce TestMsgStoreExpiration failure as mentioned in one of the comments above.
for doing that, I ran the test in a loop 1000 times and haven't seen a single failure.

marking this JIRA items as Done, as TestMsgStoreExpiration is not reproducible and all others were fixed in the linked JIRA items.;;;",,,,,,,,,,,,,
"After chaincode restart,invoking parallel transactions on the same peer throws an error",FAB-8844,28495,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,susmita,susmita,14/Mar/18 1:39 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,15/Mar/18 4:10 AM,,,,v1.1.0,v1.2.0,,fabric-peer,,,,1,,,,,,"According to the conversation on rocket chat:

[https://chat.hyperledger.org/channel/fabric?msg=KWSrF8nRMuXNMbEoq]

Follow the steps as in:
 [http://hyperledger-fabric.readthedocs.io/en/latest/understand_fabcar_network.html?highlight=fabcar]
 Run npm install ,node enrollAdmin.js and node registerUser.js
 Run node query.js
 It will execute successfully
 Now stop chain code container (docker stop dev-peer0.org1.example.com-fabcar-1.0)
 Run twice node query.js  parallel at a time
 It is displaying as expected :First query will execute and the second query will fail as it waiting to fetch the chain code.
 Again if you run twice parallel node query.js at at time  it will execute without any errors.

 

 

 

 ",,bmos299,davidkhala,denyeart,Exci,inatatsu,moriohara,muralisr,susmita,tkueda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz167:",,,,,,,,,,,,,,,,,,,,,bmos299,davidkhala,denyeart,Exci,inatatsu,moriohara,muralisr,susmita,tkueda,yoheiueda,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Mar/18 5:26 AM;susmita;Please let me know your comments .[~tkueda], [~yoheiueda] , [~Exci] ,[~muralisr]  .;;;","14/Mar/18 9:41 AM;davidkhala;So which part of this story you think is problematic?;;;","14/Mar/18 12:15 PM;yoheiueda;[~davidkhala]

The problem is that every time we submit a invoke/query transaction, the chaincode cointainer is recreated.  If we submit a second transaction while the chaincode cointainer is being recreated, we see error messages like ""error: premature execution - chaincode (mycc:v0) is being launched""

 

I tried the balance-transfer example 10 times, I observed the symptom 3 times.  This issue significantly affects the performance.

 ;;;","14/Mar/18 12:46 PM;yoheiueda;I wrote down the description of my environment and instructions to reproduce the issue using balance-transfer. I saw the symptom 3 times while I tried the instructions 10 times.

{{$ lscpu}}
{{Architecture:          x86_64}}
{{CPU op-mode(s):        32-bit, 64-bit}}
{{Byte Order:            Little Endian}}
{{CPU(s):                32}}
{{On-line CPU(s) list:   0-31}}
{{Thread(s) per core:    2}}
{{Core(s) per socket:    8}}
{{Socket(s):             2}}
{{NUMA node(s):          2}}
{{Vendor ID:             GenuineIntel}}
{{CPU family:            6}}
{{Model:                 45}}
{{Model name:            Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz}}
{{Stepping:              7}}
{{CPU MHz:               1237.371}}
{{CPU max MHz:           3800.0000}}
{{CPU min MHz:           1200.0000}}
{{BogoMIPS:              5801.60}}
{{Virtualization:        VT-x}}
{{L1d cache:             32K}}
{{L1i cache:             32K}}
{{L2 cache:              256K}}
{{L3 cache:              20480K}}
{{NUMA node0 CPU(s):     0-7,16-23}}
{{NUMA node1 CPU(s):     8-15,24-31}}
{{Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb retpoline kaiser tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm arat pln pts}}

{{$ docker version}}
{{Client:}}
{{ Version:    17.12.1-ce}}
{{ API version:    1.35}}
{{ Go version:    go1.9.4}}
{{ Git commit:    7390fc6}}
{{ Built:    Tue Feb 27 22:17:40 2018}}
{{ OS/Arch:    linux/amd64}}

{{Server:}}
{{ Engine:}}
{{  Version:    17.12.1-ce}}
{{  API version:    1.35 (minimum version 1.12)}}
{{  Go version:    go1.9.4}}
{{  Git commit:    7390fc6}}
{{  Built:    Tue Feb 27 22:16:13 2018}}
{{  OS/Arch:    linux/amd64}}
{{  Experimental:    false}}

{{$ node --version}}
{{v8.10.0}}

{{$ lsb_release --all}}
{{No LSB modules are available.}}
{{Distributor ID:    Ubuntu}}
{{Description:    Ubuntu 16.04.4 LTS}}
{{Release:    16.04}}
{{Codename:    xenial}}

{{$ uname -a}}
{{Linux fx1 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux}}

{{$ for i in hyperledger/fabric-tools hyperledger/fabric-orderer hyperledger/fabric-peer  hyperledger/fabric-ccenv hyperledger/fabric-ca; do docker pull $i:x86_64-1.1.0-rc1; docker tag $i:x86_64-1.1.0-rc1 latest; done}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-tools}}
{{Digest: sha256:e80b049473792fe82c18418f2b06541b84ed7b0ccf90d24f61872773ecff4a72}}
{{Status: Image is up to date for hyperledger/fabric-tools:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-orderer}}
{{Digest: sha256:fd5549b24c1ebd1b69ac9863aafe36220d9c554066ba48f49dc4bbb6cb8d7bdb}}
{{Status: Image is up to date for hyperledger/fabric-orderer:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-peer}}
{{Digest: sha256:2cd593c5821b7b30997eebd87284d766501c1c98ba0838c6478fe45bb4ae9552}}
{{Status: Image is up to date for hyperledger/fabric-peer:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-ccenv}}
{{Digest: sha256:62a9a37d3bb00fc945b9284eaf018d8a2f99eb6c80c400ac012a7d0f8b6cda92}}
{{Status: Image is up to date for hyperledger/fabric-ccenv:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-ca}}
{{Digest: sha256:fb458b405ea1aaf7570a10cc1f914de2ca5ddb683f13138e380c00d180683afc}}
{{Status: Image is up to date for hyperledger/fabric-ca:x86_64-1.1.0-rc1}}

{{$ git clone -b v1.1.0-rc1 https://github.com/hyperledger/fabric-samples.git}}
{{Cloning into 'fabric-samples'...}}
{{remote: Counting objects: 1348, done.}}
{{remote: Compressing objects: 100% (10/10), done.}}
{{remote: Total 1348 (delta 2), reused 10 (delta 1), pack-reused 1337}}
{{Receiving objects: 100% (1348/1348), 509.34 KiB | 164.00 KiB/s, done.}}
{{Resolving deltas: 100% (604/604), done.}}
{{Checking connectivity... done.}}
{{Note: checking out '9f9fc7e5aca48b6920b19512a26be8d79ac51886'.}}

{{You are in 'detached HEAD' state. You can look around, make experimental}}
{{changes and commit them, and you can discard any commits you make in this}}
{{state without impacting any branches by performing another checkout.}}

{{If you want to create a new branch to retain commits you create, you may}}
{{do so (now or later) by using -b with the checkout command again. Example:}}

{{  git checkout -b <new-branch-name>}}

{{$ cd fabric-samples/balance-transfer/}}
{{$ ./runApp.sh}}

{{In another terminal}}

{{$ ./testAPIs.sh}}
{{$ token=$(curl -s -X POST http://localhost:4000/users -H ""content-type: application/x-www-form-urlencoded"" -d 'username=Jim&orgName=Org1' | jq -r '.token')}}
{{$ curl -s -X GET ""http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.org1.example.com&fcn=query&args=%5B%22a%22%5D"" -H ""authorization: Bearer $token"" -H ""content-type: application/json"" & curl -s -X GET ""http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.org1.example.com&fcn=query&args=%5B%22a%22%5D"" -H ""authorization: Bearer $token"" -H ""content-type: application/json""}}
{{[1] 10229}}
{{a now has {color:#ff0000}Error: error executing chaincode: premature execution - chaincode (mycc:v0) is being launched{color} after the move}}
{{a now has 90 after the move}}
{{$ docker logs peer0.org1.example.com 2>&1 | grep -a 'ERRO '}}
{{2018-03-14 01:37:34.529 UTC [chaincode] processStream -> ERRO 537 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:38:00.926 UTC [chaincode] processStream -> ERRO 697 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:38:42.106 UTC [chaincode] processStream -> ERRO 901 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:38:53.318 UTC [chaincode] processStream -> ERRO 9c4 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:42:20.174 UTC [chaincode] ExecuteChaincode -> ERRO abf {color:#ff0000}premature execution - chaincode (mycc:v0) is being launched{color}}}
{{2018-03-14 01:42:20.175 UTC [endorser] simulateProposal -> ERRO ac1 [mychannel][9ad42641] {color:#ff0000}failed to invoke chaincode name:""mycc"" , error: premature execution - chaincode (mycc:v0) is being launched{color}}}
{{2018-03-14 01:42:20.218 UTC [chaincode] processStream -> ERRO ac5 Error handling chaincode {color:#ff0000}support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:42:59.738 UTC [chaincode] processStream -> ERRO b88 Error handling chaincode {color:#ff0000}support stream: rpc error: code = Canceled desc = context canceled{color}}};;;","14/Mar/18 3:49 PM;muralisr;The problem started with FAB-5591 where there's a path where deregister occurs without corresponding chaincode removal. The problem is that the error maybe benign and chaincode not removed thus leaving the system in an inconsitent state where it believes there's no chaincode registered (and running) when it actually is. This causes subsequent invoke to attempt to restart. Eventually it does settle down.

The fix would be to always leave the deregister to be handled consistent error handling path. ;;;","14/Mar/18 4:08 PM;muralisr;In master - https://gerrit.hyperledger.org/r/#/c/19147/ . This should be backported to 1.1 and better even 1.0.;;;","14/Mar/18 9:23 PM;yoheiueda;I applied the patch to the RC1 code, and tried the steps I described above.  I repeated 100 times, but I never see the symptom any more.

I think the patch fixed the issue. Thank you very much!;;;","14/Mar/18 10:15 PM;muralisr;[~yoheiueda] thank you for testing and verifying!;;;","14/Mar/18 11:26 PM;bmos299;[~muralisr] [~yoheiueda] Thanks!  [~denyeart] [~simsc] will this be ported to the release-1.0 and the release-1.1 branches? ;;;","15/Mar/18 12:23 AM;muralisr;Should correct this statement in my earlier comment

_The problem started with FAB-5591 ..._

That's incorrect. It predates that and in fact FAB-5591 helps in fixing this in a cleaner manner by allowing the error  to be handled (or disregarded) cleanly. ;;;","15/Mar/18 1:13 AM;denyeart;Fix cherry picked to release-1.1: https://gerrit.hyperledger.org/r/#/c/19157/;;;","15/Mar/18 4:11 AM;denyeart;Merged to release-1.1 and master.  There was not a clean cherry pick to release-1.0, deferring that for now.  We can re-visit if needed.;;;","16/Mar/18 10:19 AM;tkueda;Also, confirmed the x86_64-1.1.0 images published a few hours ago in Docker Hub have fixed this issue. Thank you so much!;;;","16/Mar/18 9:35 PM;Exci;Can confirm that the issue is fixed for me with the 1.1.0 images. Thank you!;;;","16/Mar/18 10:06 PM;muralisr;thanks [~tkueda] [~Exci] [~yoheiueda] for testing and confirming. Much appreciated!;;;",,,,,,,,
Improve key and cert management,FAB-8846,28497,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,aleksandar.likic,aleksandar.likic,14/Mar/18 3:35 AM,30/Jul/19 12:04 PM,28/Oct/23 3:02 AM,30/Jul/19 12:04 PM,,,,,,,fabric-sdk-go,,,,0,,,,,,Enable configuring the SDK with custom key and cert stores.,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz16f:",,,,Unset,,,,,,Unset,,,,,,,,,,,aleksandar.likic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
segmentation fault out of deRegisterTxid in chaincode handler,FAB-8848,28500,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,muralisr,sykesm,sykesm,14/Mar/18 5:45 AM,19/Mar/19 7:57 PM,28/Oct/23 3:02 AM,20/Jul/18 11:05 PM,v1.2.0,,,Future,,,fabric-peer,,,,0,ci-flake,,,,,"When `deregisterTxid` gets called with a nil `serialSendMsg`, it panics while logging:
{code:java}
unit-tests_1  |       panic: runtime error: invalid memory address or nil pointer dereference

unit-tests_1  | [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x107dcd4]

unit-tests_1  |

unit-tests_1  | goroutine 499 [running]:

unit-tests_1  | github.com/hyperledger/fabric/core/chaincode.(*Handler).deRegisterTxid(0xc423634000, 0xc42377efc0, 0x0, 0xc42376ba00)

unit-tests_1  |       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:624 +0x1a4

unit-tests_1  | github.com/hyperledger/fabric/core/chaincode.(*Handler).handleModState.func1.1(0xc423634000, 0xc42377efc0, 0xc42376bd68)

unit-tests_1  |       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1282 +0x51

unit-tests_1  | panic(0x1176600, 0xc4236f4d50)

unit-tests_1  |       /opt/go/src/runtime/panic.go:491 +0x283{code}
This line
{code:java}
chaincodeLogger.Debugf(""[%s]send %s(serial-%t)"", shorttxid(serialSendMsg.Txid), serialSendMsg.Type, serial)
{code}
dereferences the nil message.

This seems to happen occasionally out of the chaincode unit tests after the recent refactors.",,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz16v:",,,,,,,,,,,,,,,,,,,,,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 6:02 AM;muralisr;[~sykesm] I tried to recreate this a few times but couldn't. It seems good to add a ""check for nil"" regardless but also would like to know what causes the nil message in the first place. Can you attach logs next time you see it (will keep retrying too) ?;;;","18/May/18 6:13 AM;sykesm;I haven't seen this in a very long time so I don't believe this is an issue any longer.;;;",,,,,,,,,,,,,,,,,,,,,
Include fabric-ca-samples tests in fabric-samples CI job,FAB-8850,28502,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,14/Mar/18 6:21 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 11:15 PM,,,,v1.1.0,,,fabric-ci,,,,0,fabric-ci,,,,,Include fabric-ca-samples tests in fabric-samples CI jobs (verify and merge),,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz17b:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot Start the Network,FAB-8853,28505,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,Ravi.Bodkai,Ravi.Bodkai,14/Mar/18 1:09 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,06/May/18 3:10 AM,v1.0.6,,,v1.0.7,,,fabric-samples,,,,0,,,,,,"Was working on SampleAsset Go Chaincode Dev & Test in Dev Mode. Followed the instructions to start the network with the docker-compose as below. 

""docker-compose -f docker-compose-simple.yaml up""

Initially I got issues as latest version were not updated. So I got updated to the latest version (x86_64-1.1.0-rc1) by change the image instruction in the .yaml file and reruning it. (hyperledger/fabric-orderer, hyperledger/fabric-peer, hyperledger/fabric-ccenv, hyperledger/fabric-tools)

Then encountered the following error: Not sure how to resolve this: Please help.

ravi@ravi-HP-Pavilion-g6-Notebook-PC:~/Ravi_LD/Hyperledger/Fabric/fabric-samples/chaincode-docker-devmode$ docker-compose -f docker-compose-simple.yaml up
Starting orderer ... 
Starting orderer ... done
Starting peer ... 
Starting peer ... done
Starting chaincode ... 
Starting cli ... 
Starting chaincode
Starting chaincode ... done
Attaching to orderer, peer, cli, chaincode
orderer | 2018-03-14 03:18:47.728 UTC [bccsp_sw] openKeyStore -> DEBU 001 KeyStore opened at [/etc/hyperledger/msp/keystore]...done
orderer | 2018-03-14 03:18:47.729 UTC [bccsp] initBCCSP -> DEBU 002 Initialize BCCSP [SW]
peer | 2018-03-14 03:18:50.306 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP of type bccsp from directory /etc/hyperledger/msp: signing identity expired 2938h11m50.209522208s ago
orderer | 2018-03-14 03:18:47.744 UTC [msp] getPemMaterialFromDir -> DEBU 003 Reading directory /etc/hyperledger/msp/signcerts
orderer | 2018-03-14 03:18:47.744 UTC [msp] getPemMaterialFromDir -> DEBU 004 Inspecting file /etc/hyperledger/msp/signcerts/peer.pem
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 005 Reading directory /etc/hyperledger/msp/cacerts
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 006 Inspecting file /etc/hyperledger/msp/cacerts/cacert.pem
peer exited with code 1
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 007 Reading directory /etc/hyperledger/msp/admincerts
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 008 Inspecting file /etc/hyperledger/msp/admincerts/admincert.pem
orderer | 2018-03-14 03:18:47.758 UTC [msp] getPemMaterialFromDir -> DEBU 009 Reading directory /etc/hyperledger/msp/intermediatecerts
orderer | 2018-03-14 03:18:47.758 UTC [msp] getMspConfig -> DEBU 00a Intermediate certs folder not found at [/etc/hyperledger/msp/intermediatecerts]. Skipping. [stat /etc/hyperledger/msp/intermediatecerts: no such file or directory]
orderer | 2018-03-14 03:18:47.758 UTC [msp] getPemMaterialFromDir -> DEBU 00b Reading directory /etc/hyperledger/msp/tlscacerts
orderer | 2018-03-14 03:18:47.758 UTC [msp] getMspConfig -> DEBU 00c TLS CA certs folder not found at [/etc/hyperledger/msp/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /etc/hyperledger/msp/tlscacerts: no such file or directory]
orderer | 2018-03-14 03:18:47.758 UTC [msp] getPemMaterialFromDir -> DEBU 00d Reading directory /etc/hyperledger/msp/crls
orderer | 2018-03-14 03:18:47.758 UTC [msp] getMspConfig -> DEBU 00e crls folder not found at [/etc/hyperledger/msp/crls]. Skipping. [stat /etc/hyperledger/msp/crls: no such file or directory]
orderer | 2018-03-14 03:18:47.758 UTC [msp] newBccspMsp -> DEBU 00f Creating BCCSP-based MSP instance
orderer | 2018-03-14 03:18:47.758 UTC [msp] New -> DEBU 010 Creating Cache-MSP instance
orderer | 2018-03-14 03:18:47.770 UTC [msp] GetLocalMSP -> DEBU 011 Created new local MSP
orderer | 2018-03-14 03:18:47.770 UTC [msp] Setup -> DEBU 012 Setting up MSP instance DEFAULT
orderer | 2018-03-14 03:18:47.772 UTC [msp/identity] newIdentity -> DEBU 013 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICYjCCAgmgAwIBAgIUB3CTDOU47sUC5K4kn/Caqnh114YwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMDEyMTkzMTAw
orderer | WhcNMjExMDExMTkzMTAwWjB/MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZv
orderer | cm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEfMB0GA1UEChMWSW50ZXJuZXQg
orderer | V2lkZ2V0cywgSW5jLjEMMAoGA1UECxMDV1dXMRQwEgYDVQQDEwtleGFtcGxlLmNv
orderer | bTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKIH5b2JaSmqiQXHyqC+cmknICcF
orderer | i5AddVjsQizDV6uZ4v6s+PWiJyzfA/rTtMvYAPq/yeEHpBUB1j053mxnpMujYzBh
orderer | MA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQXZ0I9
orderer | qp6CP8TFHZ9bw5nRtZxIEDAfBgNVHSMEGDAWgBQXZ0I9qp6CP8TFHZ9bw5nRtZxI
orderer | EDAKBggqhkjOPQQDAgNHADBEAiAHp5Rbp9Em1G/UmKn8WsCbqDfWecVbZPQj3RK4
orderer | oG5kQQIgQAe4OOKYhJdh3f7URaKfGTf492/nmRmtK+ySKjpHSrU=
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.772 UTC [msp/identity] newIdentity -> DEBU 014 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICjDCCAjKgAwIBAgIUBEVwsSx0TmqdbzNwleNBBzoIT0wwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMTExMTcwNzAw
orderer | WhcNMTcxMTExMTcwNzAwWjBjMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGgg
orderer | Q2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVpZ2gxGzAZBgNVBAoTEkh5cGVybGVkZ2Vy
orderer | IEZhYnJpYzEMMAoGA1UECxMDQ09QMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
orderer | HBuKsAO43hs4JGpFfiGMkB/xsILTsOvmN2WmwpsPHZNL6w8HWe3xCPQtdG/XJJvZ
orderer | +C756KEsUBM3yw5PTfku8qOBpzCBpDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw
orderer | FAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOFC
orderer | dcUZ4es3ltiCgAVDoyLfVpPIMB8GA1UdIwQYMBaAFBdnQj2qnoI/xMUdn1vDmdG1
orderer | nEgQMCUGA1UdEQQeMByCCm15aG9zdC5jb22CDnd3dy5teWhvc3QuY29tMAoGCCqG
orderer | SM49BAMCA0gAMEUCIDf9Hbl4xn3z4EwNKmilM9lX2Fq4jWpAaRVB97OmVEeyAiEA
orderer | 25aDPQHGGq2AvhKT0wvt08cX1GTGCIbfmuLpMwKQj38=
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.839 UTC [msp/identity] newIdentity -> DEBU 015 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICjDCCAjKgAwIBAgIUBEVwsSx0TmqdbzNwleNBBzoIT0wwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMTExMTcwNzAw
orderer | WhcNMTcxMTExMTcwNzAwWjBjMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGgg
orderer | Q2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVpZ2gxGzAZBgNVBAoTEkh5cGVybGVkZ2Vy
orderer | IEZhYnJpYzEMMAoGA1UECxMDQ09QMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
orderer | HBuKsAO43hs4JGpFfiGMkB/xsILTsOvmN2WmwpsPHZNL6w8HWe3xCPQtdG/XJJvZ
orderer | +C756KEsUBM3yw5PTfku8qOBpzCBpDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw
orderer | FAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOFC
orderer | dcUZ4es3ltiCgAVDoyLfVpPIMB8GA1UdIwQYMBaAFBdnQj2qnoI/xMUdn1vDmdG1
orderer | nEgQMCUGA1UdEQQeMByCCm15aG9zdC5jb22CDnd3dy5teWhvc3QuY29tMAoGCCqG
orderer | SM49BAMCA0gAMEUCIDf9Hbl4xn3z4EwNKmilM9lX2Fq4jWpAaRVB97OmVEeyAiEA
orderer | 25aDPQHGGq2AvhKT0wvt08cX1GTGCIbfmuLpMwKQj38=
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.847 UTC [msp/identity] newIdentity -> DEBU 016 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICizCCAjKgAwIBAgIUBEVwsSx0TmqdbzNwleNBBzoIT0wwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMTExMTcwNzAw
orderer | WhcNMTcxMTExMTcwNzAwWjBjMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGgg
orderer | Q2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVpZ2gxGzAZBgNVBAoTEkh5cGVybGVkZ2Vy
orderer | IEZhYnJpYzEMMAoGA1UECxMDQ09QMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
orderer | HBuKsAO43hs4JGpFfiGMkB/xsILTsOvmN2WmwpsPHZNL6w8HWe3xCPQtdG/XJJvZ
orderer | +C756KEsUBM3yw5PTfku8qOBpzCBpDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw
orderer | FAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOFC
orderer | dcUZ4es3ltiCgAVDoyLfVpPIMB8GA1UdIwQYMBaAFBdnQj2qnoI/xMUdn1vDmdG1
orderer | nEgQMCUGA1UdEQQeMByCCm15aG9zdC5jb22CDnd3dy5teWhvc3QuY29tMAoGCCqG
orderer | SM49BAMCA0cAMEQCIDf9Hbl4xn3z4EwNKmilM9lX2Fq4jWpAaRVB97OmVEeyAiAk
orderer | aXzB/jnlU39B7Wws9BIr9c8mSOEPF6VY1uGP+dKV0g==
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.847 UTC [orderer/common/server] initializeLocalMsp -> CRIT 017 Failed to initialize local MSP: signing identity expired 2938h11m47.847389517s ago
orderer exited with code 1
cli | 8-03-14 03:18:54.263 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP of type bccsp from directory /etc/hyperledger/msp: signing identity expired 2938h11m54.212816025s ago

 

 ",,ChristopherFerris,denyeart,mastersingh24,Ravi.Bodkai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz17z:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,Ravi.Bodkai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/18 9:42 PM;mastersingh24;[~Ravi.Bodkai]  - Sorry for the delay getting to this.  The issue is that the certificates that go along with the v1.0.x samples are expired.   The current (and default) branch / version of the samples are up to date.

You can either clone the fabric-samples again or try

 
{code:java}
git fetch --all
git pull
git checkout v1.1.0
{code}
 ;;;","07/Apr/18 9:53 PM;mastersingh24;[~denyeart] [~ChristopherFerris] - should we update the v1.0.x samples?;;;","08/Apr/18 10:25 AM;ChristopherFerris;yeah, seems like a good idea;;;","09/Apr/18 9:06 PM;denyeart;[~adc] Fixed up the expirations prior to v1.1.  [~adc] could you maybe work your magic in fabric-samples in the release-1.0 branch?;;;","05/May/18 6:14 PM;mastersingh24;https://gerrit.hyperledger.org/r/21455;;;",,,,,,,,,,,,,,,,,,
Broken links in doc page for fabric ca commands,FAB-8854,28506,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,skarim,denyeart,denyeart,14/Mar/18 1:44 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,15/Mar/18 8:29 AM,,,,v1.1.0,v1.2.0,,fabric-docs,,,,0,,,,,,"Links at
http://hyperledger-fabric.readthedocs.io/en/latest/commands/fabric-ca-commands.html
point to fabric-ca rtd *release-1.1.x*, which will not exist.  The final version in rtd to link to is *release-1.1*.  
Note that we could also link to *latest*, although since there is intent to move all docs to a common repository in 1.2 timeframe, I think using *release-1.1* is the better solution for now.

Needs to be addressed in fabric branches *release-1.1* and *master*.
",,denyeart,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzz3:",,,,,,,,,,,,,,,,,,,,,denyeart,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Mar/18 1:41 AM;skarim;https://gerrit.hyperledger.org/r/#/c/19159/;;;","15/Mar/18 2:01 AM;denyeart;release-1.1: https://gerrit.hyperledger.org/r/#/c/19161/;;;",,,,,,,,,,,,,,,,,,,,,
NetworkLauncher should support generating config json file for PTE automatically,FAB-8855,28509,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,bjwswang,bjwswang,14/Mar/18 4:08 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-build,,,,0,stale-item,,,,,"NetworkLauncher is a great tool to help generate dynamic networks,but it will take lots of time to construct scfile for PTE which will easily cause manual mistakes.. So I recommend NL could generate scfile automatically for PTE.",,bjwswang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz18n:",,,,Unset,,,,,,Unset,,,,,,,,,,,bjwswang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Develop a mechanism for UT to dynamicaly allocate non-conflicting random ports,FAB-8857,28512,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,C0rWin,C0rWin,14/Mar/18 7:55 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-peer,,,,0,stale-item,,,,,"Currently within many Fabric unit tests which requires to establish networking the ports are assigned statically and hard coded in many places. This raise a problem where developer which writes new UT has to be aware of ports already in use to avoid collisions, since we would like to be able to parallelize our unit tests.

There is a need to develop a mechanism/utility which will allow to dynamically allocate random ports to be used in the unit tests, thus reducing a burden or need to manually track ports which are currently in use.",,C0rWin,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz18v:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Allow peer CLI to collect endorsements from multiple peers,FAB-8863,28524,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,15/Mar/18 1:55 AM,23/Jul/19 12:01 AM,28/Oct/23 3:02 AM,17/May/18 12:29 AM,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,"The peer CLI has always had a serious shortcoming, in that it can only collect an endorsement from a single peer when submitting a transaction.

This is a serious problem for doing any sort of meaningful testing or examples with the CLI, as an endorsement policy of ""1 out of ..."" is really not a good example for a system with distributed trust.

Because chaincode lifecycle will require by default endorsements from a 'majority' of organizations, for all but single-organization networks, deploying a chaincode will require obtaining a signature from at least two peers.

The design of this feature's implementation is deliberately left as an open question, to be decided with a design sub-task.",,jyellick,lmars,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8998,FAB-11237,,,,,FAB-6894,,,,,FAB-16046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz2an:",,,,Unset,,May2018 - Lifecycle & Config,,,,Unset,,,,,,,,,,,jyellick,lmars,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Provide a channel-scoped, peer local data store",FAB-8864,28525,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manish-sethi,jyellick,jyellick,15/Mar/18 2:13 AM,07/Jan/19 12:18 PM,28/Oct/23 3:02 AM,07/Jan/19 12:18 PM,,,,v2.0.0,,,fabric-ledger,,,,0,,,,,,"Today, there are some local peer scoped operations, such as deploying chaincode which equate to installing files onto the filesystem.  This is an inflexible mechanism, and as more use cases arise, different peer components may need to store peer specific (non-configuration) data in a consistent way.

The most obvious way to accomplish this, is to provide per peer channel scoped, local storage within some partitioning of the state database.

This local storage must be manipulable in a safe way relative to channel ordering.  Specifically, there are two cases which must be supported:

# Reading/Writing to this storage space in a concurrency safe way during a chaincode invocation.  e.g. {{LSCC.InstallMetadata}}
# Reading/Writing to this storage space in a concurrency safe way during the block commit phase e.g. during the commit of an {{LSCC.Define}} transaction

These properties are necessary to address the following case:

An Administrator attempts to install a chaincode metadata package for a chaincode.  Simultaneously, a chaincode definition is committing to the ledger.  The commit needs to check if the chaincode metadata exists in the peer local data, and if so, mark it as 'active'.  The chaincode metadata install also needs to check if the chaincode is already defined in the LSCC (non-local-data) table to see if the chaincode should be set as active.",,ales,fredbi,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8988,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzz1af:",,,,Unset,,Next Items- Lifecycle & Config,,,,Unset,,,,,,,,,,,ales,fredbi,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Apr/18 12:26 AM;ales;I think we should turn this into a first class ledger citizen. By doing so, we would solve once and for all the problem of agreement in fabric. Here's a strawman:
 * assume for each organization we have a special ledger namespace (let's call it the voting namespace for lack of a better word) with
 ** name = the org
 ** endorsement policy = the org
 * the chaincode can decide to issue PutState calls into its own voting namespace after checking that the creator of that transactor has certain properties (e.g. an admin of the same org)
 * clients of an org can signal to peers of that org their agreement with something by asking the chaincode to do a PutState(voting_namespace, agreement_id, agreement_terms)
 * the peer of an org will endorse a particular agreement by first looking at the voting namespace to see if it received instructions from clients of its org to endorse it

This way, you can solve the problem of cc lifecycle AND the more general problem of application-level agreements on fabric. For instance if Alice and Bob want to exchange an apple for an orange, each can vote on the terms of the agreement first and then their peer will endorse the transaction.

I think this should become a proper ledger citizen, with data stored on the ledger and read dependencies introduced. There's an issue with read dependencies (because peers of different org will attempt to read the same key from their respective, different voting namespace, and so the read-write set should be the same - [~manish-sethi] seemed to think that this was feasible).

 

Thoughts [~jyellick], [~manish-sethi], [~denyeart]?;;;","07/Jan/19 12:18 PM;jyellick;This is no longer necessary.;;;",,,,,,,,,,,,,,,,,,,,,
Refactor the core/comm package,FAB-8869,28535,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,15/Mar/18 6:08 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,11/Apr/18 5:37 PM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"There are a few bad practices which should be addressed:

1) returning concrete types from constructors

2) using dynamic port assignment for listener tests

3) Needlessly hiding fields

 

There are also things in the package which should be removed and moved closer to the point of usage.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1bb:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return concrete types from constructors,FAB-8870,28536,28535,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,15/Mar/18 6:36 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,15/Mar/18 6:37 PM,,,,v1.2.0,,,,,,,0,hygiene,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1br:",,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Mar/18 7:54 AM;mastersingh24;https://gerrit.hyperledger.org/r/19201;;;",,,,,,,,,,,,,,,,,,,,,,
Create fabric end-to-end daily job to run on release-1.1 branch,FAB-8871,28537,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,15/Mar/18 6:41 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,21/Mar/18 11:38 PM,,,,v1.2.0,,,fabric-ci,,,,0,fabric-ci,,,,,Create a new daily job for fabric-end-to-end tests to run the e2e tests on the release-1.1 branch.,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1bz:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/18 11:38 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/19417/;;;",,,,,,,,,,,,,,,,,,,,,,
update submodules to latest commits in fabric-test,FAB-8873,28539,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,rameshthoomu,rameshthoomu,15/Mar/18 1:00 PM,24/Apr/19 11:54 PM,28/Oct/23 3:02 AM,24/Apr/19 11:54 PM,,,,,,,fabric-quality,,,,0,,,,,,"existing sub modules commits are little old in fabric-test repository now.. Observed couple of the fixes went in recently in fabric-samples. To make our fabric-test daily suite working with latest commits, better to update the sub modules to latest commits.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzzb:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/19 11:54 PM;rameshthoomu;This is a continuation process. User has to update submodules based on the need. Closing this now.;;;",,,,,,,,,,,,,,,,,,,,,,
Reserved Field Names in CouchDB (simulation-time support) ,FAB-8877,28543,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,ynamiki,ynamiki,15/Mar/18 3:40 PM,25/Jul/18 9:46 AM,28/Oct/23 3:02 AM,25/Jul/18 9:46 AM,,,,v1.1.2,v1.2.0,,fabric-docs,fabric-ledger,,,0,,,,,,"By -FAB-7969-, chaincode data is now saved at the top-level in a CouchDB document . This introduces possible conflict in a field name with internally used field.

In the current implementation, Fabric report an error for such names: `_id`, `_rev`, `~version` and `_deleted`.

Do we need to ""reserve"" more names? Is it enough to reserve only the 4 names?

CouchDB document says a name stats with `_` is reserved (not only `_id`, `_rev` and `_delete`) for internal use. And Fabric seems to reserve names that starts with `~` (currently `~version` only, but we may add other fields in future versions.) We can let Fabric reject names more widely, like `_*` and `~*`.
{quote}Note that any top-level fields within a JSON document containing a name that starts with a _ prefix are reserved for use by CouchDB itself.
[https://wiki.apache.org/couchdb/HTTP_Document_API#Special_Fields].
{quote}
 

Any disallowed CouchDB content that gets passed past simulation and validation will cause block not to be processed, a situation that panics peer as it cannot move forward.  Therefore it is critical to validate against all disallowed CouchDB content prior to commit.",,chris.elder,denyeart,manish-sethi,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8006,FAB-10617,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu5r:",,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,manish-sethi,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Mar/18 3:46 PM;ynamiki;[~denyeart], [~manish-sethi], I would appreciate if you could give a comment.;;;","15/Mar/18 10:55 PM;manish-sethi;[~ynamiki] yes, the four fields that you mentioned above are reserved for the internal use by couch/fabric. Here is the link to the doc - [http://hyperledger-fabric.readthedocs.io/en/release-1.1/couchdb_as_state_database.html]. On your query on adding checks for more fields starting reserved for couch usage - yes, seems reasonable to me.  [~chris.elder] - what do you think?;;;","13/Jun/18 12:52 PM;manish-sethi;[~chris.elder] - As we discussed, though a fix is submitted for documenting this restriction as a solution to FAB-10571 but I feel that only documenting this is not enough and we should add a check during simulation. In the absence of check during simulation, this causes a panic during commit. You can use this existing JIRA for adding these checks at the time of simulation for submitting a fix for both master and 1.1 branches.

You may like to explore a bit more on this what all is reserved of couch internal use. Is it only an underscore or something else as well? Also, does spaces in the beginning matter... e.g., is `_myfield` invalid but `  _myfield` valid?
;;;","14/Jun/18 10:21 PM;chris.elder;Release 1.2

[https://gerrit.hyperledger.org/r/#/c/23059/]

 

Release 1.1

https://gerrit.hyperledger.org/r/#/c/23063/;;;","17/Jun/18 11:03 PM;denyeart;Merged in master (v1.2), but not yet merged in release-1.1.;;;","20/Jun/18 12:19 AM;denyeart;Sub-task must also be completed in v1.2 and v1.1.2. Tagging as 'must-fix'.;;;","21/Jun/18 4:44 AM;denyeart;Sub-task also merged in master (v1.2).  I will remove 'must-fix' tag, but leave open for the v1.1.2 CR.;;;","25/Jul/18 6:46 AM;denyeart;This and its subtask have been merged in release-1.1 branch for v1.1.2, can now be closed.;;;",,,,,,,,,,,,,,,
Cut v1.1.0 release,FAB-8881,28549,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,28/Apr/18 7:27 AM,v1.1.0-preview,,,v1.2.0,,,fabric-release,,,,0,,,,,,"Prepare and publish v1.1.0 release of Hyperledger Fabric. The tasks are listed in execution order and I have indicated any dependencies in the description of each.

 

Note that until we address, the repositories must be tagged and published serially: fabric, fabric-ca, fabric-sdk-node, others.",,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10748,,FAB-8278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1dz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - verify release jobs to support 1.1.0 release,FAB-8882,28550,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 1:19 AM,,,,v1.1.0,,,fabric-ci,fabric-release,,,0,fabric-ci,,,,,Make sure all the release jobs are ready for release.,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1e7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 1:21 AM;rameshthoomu;all release jobs are ready to support release 1.1.0;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for 1.1.0 release,FAB-8883,28551,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 6:34 AM,,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

*----------*

{{git checkout master {color:#d04437}(actually used release-1.1 since release branch already exists){color}}}

{{git pull}}

_*checkout the CR from Gerrit - be sure you have latest!!!*_ 

{{git checkout -b <newbranch>}}

{{git rebase master {color:#d04437}(actually used release-1.1 since release branch already exists){color}}}

git commit --amend

*_make a tweak to commit message_*

git review

 

Check for clean CI passes

merge

----------------------

Changes

----------------------------

Update bootstrap.sh for latest baseimage:

export THIRDPARTY_IMAGE_VERSION=0.4.6

 

Update Makefile

{{BASE_VERSION = 1.1.0}}
 {{PREV_VERSION = 1.1.0-rc1}}
 {{IS_RELEASE = true}}

EXPERIMENTAL ?= false

 
 Update docs/source/samples.rst for  1.1.0

e.g. 
 curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.1.0
  
 {{release_notes/v1.1.0.txt should be created}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}

./scripts/changelog.sh v1.1.0-rc1 v1.1.0",,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1ef:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 3:08 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/19233/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for next release,FAB-8884,28552,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 9:10 AM,,,,v1.1.0,,,fabric-release,,,,0,,,,,,"Note that this change must be stacked on the previous CR to prepare for the v1.1 release.

Update Makefile

BASE_VERSION = 1.1.1

PREV_VERSION = 1.1.0

IS_RELEASE = false

EXPERIMENTAL ?= true

 

Note: Release should be tagged prior to merging this ""prepare for next CR"".",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1en:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 3:18 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/19237/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.1.0 release,FAB-8885,28553,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 8:54 AM,,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.1.0}}
 {{PREV_VERSION = 1.1.0-rc1}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 
 ./scripts/changelog.sh v1.1.0-rc1 v1.1.0

update release_notes/v1.1.0.txt

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1ev:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 2:55 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/19235/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for next release,FAB-8886,28554,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,18/Mar/18 2:08 AM,,,,v1.2.0,,,fabric-release,,,,0,,,,,,"Note that this change must be stacked on the previous CR to prepare for the v1.1 release.

Update Makefile

{{BASE_VERSION = 1.1.1}}
 {{PREV_VERSION = 1.1.0}}
 {{IS_RELEASE = false}}

 
Note: Release should be tagged prior to merging this ""prepare for next CR"".

 ",,aambati,ChristopherFerris,denyeart,rennman,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1f3:",,,,,,,,,,,,,,,,,,,,,aambati,ChristopherFerris,denyeart,rennman,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 9:01 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/19273;;;","16/Mar/18 1:50 PM;denyeart;[~smithbk] [~aambati] [~rennman] Any ideas on the CI failure?;;;","17/Mar/18 1:13 AM;aambati;[~denyeart] [~rennman]  

I see a lot of errors, some of them are auth errors when calling CA API endpoints, like this one. Not much to go by from the log. Is there a way to access CA server logs?

 

{{03:22:26 ],""messages"":[],""success"":false} }}
{{03:22:26 2018-03-16 03:22:26,549 main ERROR HFCAClient:1184 - DELETE request to https://localhost:8054 failed request body . Response: \{""result"":"""",""errors"":[\{""code"":20,""message"":""Authorization failure""}}}
{{03:22:26 ],""messages"":[],""success"":false}}}
{{03:22:26 2018-03-16 03:22:26,550 main ERROR HFCAAffiliation:388 - [Code: 401] - Error while deleting affiliation 'org6' from url 'https://localhost:8054/api/v1/affiliations/org6?force=false': DELETE request to https://localhost:8054 failed request body . Response: \{""result"":"""",""errors"":[\{""code"":20,""message"":""Authorization failure""}}}
{{03:22:26 ],""messages"":[],""success"":false}}}

 

and this one:

{{03:22:31 2018-03-16 03:22:31,174 main ERROR HFCAClient:1184 - POST request to https://localhost:7054 failed request body \{""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIHVMH4CAQAwHDEaMBgGA1UEAwwRdXNlcjE1MjExNzA1MTFfMTQwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAAR64rw6WVuQU70OOjUuUa1KwMsdtS+k3yG1HmjKlpHC\ncIcAF0+zVn23xPrB4mCHculMiCpHhgUlTcu6XDb7ii9GoAAwCgYIKoZIzj0EAwID\nRwAwRAIgdSX+I0RNIpGbPWpt5C8SA+vN1geruEltj//BV8eWeEkCIC3ZXd/Ob1ak\nGr+Em+zuPabJ8rLpEVhRzPWSfMljZ9jh\n-----END CERTIFICATE REQUEST-----\n""}. Response: \{""result"":"""",""errors"":[\{""code"":20,""message"":""Authorization failure""}}}
{{03:22:31 ],""messages"":[],""success"":false}}}
{{03:22:31 2018-03-16 03:22:31,175 main ERROR HFCAClient:587 - POST request to https://localhost:7054 failed request body \{""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIHVMH4CAQAwHDEaMBgGA1UEAwwRdXNlcjE1MjExNzA1MTFfMTQwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAAR64rw6WVuQU70OOjUuUa1KwMsdtS+k3yG1HmjKlpHC\ncIcAF0+zVn23xPrB4mCHculMiCpHhgUlTcu6XDb7ii9GoAAwCgYIKoZIzj0EAwID\nRwAwRAIgdSX+I0RNIpGbPWpt5C8SA+vN1geruEltj//BV8eWeEkCIC3ZXd/Ob1ak\nGr+Em+zuPabJ8rLpEVhRzPWSfMljZ9jh\n-----END CERTIFICATE REQUEST-----\n""}. Response: \{""result"":"""",""errors"":[\{""code"":20,""message"":""Authorization failure""}}}
{{03:22:31 ],""messages"":[],""success"":false}}}
{{03:22:31 org.hyperledger.fabric_ca.sdk.exception.HTTPException: POST request to https://localhost:7054 failed request body \{""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIHVMH4CAQAwHDEaMBgGA1UEAwwRdXNlcjE1MjExNzA1MTFfMTQwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAAR64rw6WVuQU70OOjUuUa1KwMsdtS+k3yG1HmjKlpHC\ncIcAF0+zVn23xPrB4mCHculMiCpHhgUlTcu6XDb7ii9GoAAwCgYIKoZIzj0EAwID\nRwAwRAIgdSX+I0RNIpGbPWpt5C8SA+vN1geruEltj//BV8eWeEkCIC3ZXd/Ob1ak\nGr+Em+zuPabJ8rLpEVhRzPWSfMljZ9jh\n-----END CERTIFICATE REQUEST-----\n""}. Response: \{""result"":"""",""errors"":[\{""code"":20,""message"":""Authorization failure""}}}

----------

{{03:22:25 2018-03-16 03:22:25,870 main ERROR HFCAClient:445 - If certificate signing request is supplied the key pair needs to be supplied too.}}
{{03:22:25 org.hyperledger.fabric_ca.sdk.exception.InvalidArgumentException: If certificate signing request is supplied the key pair needs to be supplied too.}};;;","17/Mar/18 2:31 AM;rennman;There's always a bunch of negative tests that look like failures, but aren't.

I compared this with a good run and apparently, it's only one java test that's failing, but I'm not sure what it's testing. Perhaps [~rickr] might have some ideas?

*Good*
{code:java}
00:40:19 Tests run: 44, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 437.607 sec - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
{code}
*Bad*
{code:java}
00:29:13 Tests run: 44, Failures: 1, Errors: 0, Skipped: 2, Time elapsed: 529.25 sec <<< FAILURE! - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
00:29:13 testGetInfo(org.hyperledger.fabric_ca.sdkintegration.HFCAClientIT)  Time elapsed: 0.173 sec  <<< FAILURE!
00:29:13 java.lang.AssertionError
00:29:13 	at org.hyperledger.fabric_ca.sdkintegration.HFCAClientIT.testGetInfo(HFCAClientIT.java:1095)
00:29:13 
00:29:14 
00:29:14 Results :
00:29:14 
00:29:14 Failed tests: 
00:29:14   HFCAClientIT.testGetInfo:1095
{code};;;","17/Mar/18 3:31 AM;rennman;FYI, this is what is failing in ./src/test/java/org/hyperledger/fabric_ca/sdkintegration/HFCAClientIT.java
assertTrue(info.getVersion().contains(""1.1.0""));;;","17/Mar/18 8:32 PM;rickr;https://gerrit.hyperledger.org/r/#/c/19315;;;",,,,,,,,,,,,,,,,,
Tag repositories for 1.1.0,FAB-8887,28555,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 9:52 PM,,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*NOTE:* depends on preceding related CRs being merged.

*NOTE* may need to create v1.1 branch

Tag each repository local clone with the release_notes/v1.1.0-alpha.txt as the tag comment

{{% git tag -a v1.1.0 -F release_notes/v1.1.0.txt}}

{{% git push origin v1.1.0 HEAD:refs/heads/master {color:#d04437}(or in our case, release-1.1){color}}}

Tag each of fabric, fabric-ca, fabric-chaincode-node, fabric-sdk-node, and fabric-samples (use v1.1.0).

For fabric-samples, first create release-1.1 branch, pin samples to node.js versions ""~1.1.0"", and then tag as ""v1.1.0"":

{{% git tag -a v1.1.0 -m ""Aligned with Hyperledger Fabric v1.1.0""}}

{{% git push origin v1.1.0 HEAD:refs/heads/release-1.1}}

 
----
Note, that one can also tag the repo at a specific commit-level.

NOTE *e4b4704 should be updated with latest commit sha*

E.g., to add the {color:#f79232}*v1.1.0*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.1.0{color} {color:#205081}e4b4704{color}* -F release_notes/v1.1.0.txt}}

 

 ",,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1fb:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 1:46 PM;denyeart;fabric, fabric-ca, fabric-sdk-node, and fabric-chaincode-node all tagged.

release-1.1 branch created for fabric-sdk-node and fabric-chaincode-node (all four have release-1.1 branch now).

I will tag and branch fabric-samples Friday... would like to carefully consider all the node versions referenced in the samples prior to tagging and branching.;;;","16/Mar/18 9:52 PM;denyeart;Created fabric-samples release-1.1, pinned fabric-samples to ""~1.1.0"" in FAB-8920, and tagged.;;;",,,,,,,,,,,,,,,,,,,,,
"Verify fabric, fabric-ca docker images are published with 1.1.0 tag to hyperledger dockerhub account",FAB-8888,28556,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 12:21 PM,,,,v1.1.0,,,fabric-ci,fabric-release,,,0,,,,,,"Verify fabric, fabric-ca docker images are published to hyperledger docker-hub account and make sure fabric-binaries are published to nexus repository.",,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1fj:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test download of v1.1.0 release artifacts and samples across all platforms,FAB-8889,28557,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,17/Mar/18 1:48 AM,,,,v1.2.0,,,fabric-release,,,,0,,,,,,test download of release artifacts and samples across all platforms,,ChristopherFerris,denyeart,harrijk,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 9:11 PM;denyeart;dave_byfn_peer0.org2.example.com.txt;https://jira.hyperledger.org/secure/attachment/14788/dave_byfn_peer0.org2.example.com.txt","16/Mar/18 2:12 PM;rameshthoomu;peer0.org1.example.com-after-upgrade;https://jira.hyperledger.org/secure/attachment/14783/peer0.org1.example.com-after-upgrade","16/Mar/18 2:14 PM;rameshthoomu;upgrade_cli_log;https://jira.hyperledger.org/secure/attachment/14784/upgrade_cli_log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1fr:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrijk,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 2:17 PM;rameshthoomu;++Below are the test results on release *v1.1.0:*

1) byfn, efyn with default channel, custom channel, couchdb and node chaincode on x86_64, s390x and ppc64le platforms – PASSED

2) fabcar, fab-ca samples and balance transfer on x86_64 and mac - PASSED

3) upgrade network from 1.0.6 to 1.1.0 - TBD - Tests says passed, but some one has to look into the peer logs. Attached are the peer logs. [~yacovm] Could you please check the attached logs.
{code:java}
2018-03-16 04:45:45.485 UTC [gossip/gossip] func1 -> WARN 028 Deep probe of peer0.org1.example.com:7051 failed: x509: certificate signed by unknown authority
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).learnAnchorPeers.func1
    /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:249
github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).Connect.func1
    /opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:152
runtime.goexit
    /opt/go/src/runtime/asm_amd64.s:2337
2018-03-16 04:45:45.485 UTC [gossip/discovery] func1 -> WARN 029 Could not connect to {peer0.org1.example.com:7051 [] [] peer0.org1.example.com:7051 <nil>} : x509: certificate signed by unknown authority
2{code}
4) Verified version checks in fabric and fabric-ca binaries, all are pointing to 1.1.0 , go1.9.2 and baseimage 0.4.6 - PASSED

5) v1.1.0 is now pointed to release-1.1 branch in RTD. Applies to both fabric and fabric-ca repos – PASSED

6) Verified npm version on fabric-sdk-node and fabric-chaincode node modules - PASSED
{code:java}
(hyp) Rameshs-MacBook-Pro:fabric-sdk-node thoomu@us.ibm.com$ npm dist-tags ls fabric-client
latest: 1.1.0
unstable: 1.1.0-snapshot.103
(hyp) Rameshs-MacBook-Pro:fabric-sdk-node thoomu@us.ibm.com$ npm dist-tags ls fabric-ca-client
latest: 1.1.0
unstable: 1.1.0-snapshot.101
(hyp) Rameshs-MacBook-Pro:fabric-sdk-node thoomu@us.ibm.com$ npm dist-tags ls fabric-shim
latest: 1.1.0
unstable: 1.1.0-snapshot.13
(hyp) Rameshs-MacBook-Pro:fabric-sdk-node thoomu@us.ibm.com$ npm dist-tags ls fabric-shim-crypto
latest: 1.1.0
unstable: 1.1.0-snapshot.5{code}
 

 ;;;","16/Mar/18 5:24 PM;yacovm;The peer log says that you have mis-configured the network. 
""Remote endpoint claims to be a different peer"" usually happens if you have your external endpoint different than what it should be.

As for what you quoted - that means that the peer's MSP doesn't know the CA that issued the certificate which the other peer provided.;;;","16/Mar/18 8:22 PM;denyeart;[~rameshthoomu] Did you get those errors on the v1.0.6 byfn, or the v1.1.0 byfn?  I recall [~yacovm] helped us fix up the gossip config in v1.1.0 byfn: [https://gerrit.hyperledger.org/r/#/c/18107/] , so hopefully that is resolved now...;;;","16/Mar/18 8:32 PM;yacovm;The fix you mention is unrelated to what his peers experience.;;;","16/Mar/18 9:13 PM;denyeart;I also receive some gossip errors in byfn v1.1.0.  I believe I have seen these before and ignored them since they don't block byfn success.  But would still like [~yacovm] to take a look.  Full log attached as dave_byfn_peer0.org2.example.com.txt.
{noformat}
2018-03-16T12:02:27.584757702Z 2018-03-16 12:02:27.584 UTC [gossip/service] updateEndpoints -> WARN 03a Failed to update ordering service endpoints, due to Channel with mychannel id was not found
2018-03-16T12:02:27.775357520Z 2018-03-16 12:02:27.775 UTC [kvledger] CommitWithPvtData -> INFO 03b Channel [mychannel]: Committed block [1] with 1 transaction(s)
2018-03-16T12:02:27.892330743Z 2018-03-16 12:02:27.892 UTC [gossip/service] updateEndpoints -> WARN 03c Failed to update ordering service endpoints, due to Channel with mychannel id was not found
2018-03-16T12:02:28.104011688Z 2018-03-16 12:02:28.103 UTC [kvledger] CommitWithPvtData -> INFO 03d Channel [mychannel]: Committed block [2] with 1 transaction(s)
2018-03-16T12:02:29.917857020Z 2018-03-16 12:02:29.917 UTC [gossip/comm] authenticateRemotePeer -> WARN 03e Failed reading messge from 172.18.0.10:48680, reason: Timed out waiting for connection message from 172.18.0.10:48680
2018-03-16T12:02:29.917900712Z 2018-03-16 12:02:29.917 UTC [gossip/comm] GossipStream -> ERRO 03f Authentication failed: Timed out waiting for connection message from 172.18.0.10:48680{noformat};;;","16/Mar/18 10:43 PM;yacovm;So I think that the ""Failed to update ordering service endpoints"" is due to the peer not being a leader and then receiving a command to update endpoints of the deliver client in the peer.
[~C0rWin] will probably know for sure and could confirm the assumption.

As for the communication errors... they happen at bootstrapping of the network because things are still shaky. If they don't repeat themselves, things are fine. ;;;",,,,,,,,,,,,,,,,,
Verify doc build status on v1.1.0 release tag in ReadTheDocs,FAB-8890,28558,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,rameshthoomu,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,16/Mar/18 10:21 PM,,,,v1.1.0,,,fabric-ci,fabric-docs,fabric-release,,0,,,,,,Verify readthedocs version release-1.1 gets built and published from release-1.1 branch edits.,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1fz:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Send email to hyperledger-fabric mailing list,FAB-8891,28559,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,denyeart,16/Mar/18 12:44 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,17/Mar/18 1:48 AM,,,,v1.2.0,,,fabric-release,,,,0,,,,,,send email announcing the release to hyperledger-fabric@lists.hyperledger.org mailing list.,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1g7:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for 1.1.0 release,FAB-8892,28560,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,ChristopherFerris,denyeart,16/Mar/18 12:50 AM,11/Oct/18 1:26 AM,28/Oct/23 3:02 AM,16/Mar/18 12:20 PM,,,,v1.1.0,,,fabric-release,,,,0,,,,,,"*MUST BE REBASED JUST PRIOR TO MERGING*

generate CHANGELOG.md just *after rebasing* to pick up last minute merged CRs

./scripts/changelog.sh v1.1.0-rc1 v1.1.0

update release_notes/v1.1.0.txt

update package.json files with the release identifier

./package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0"",

./fabric-ca-client/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0"",

./fabric-client/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0"",

 ",,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12408,,FAB-7784,FAB-8434,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1gf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 7:15 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/19261/;;;",,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for next release,FAB-8893,28561,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,ChristopherFerris,denyeart,16/Mar/18 12:51 AM,11/Oct/18 1:27 AM,28/Oct/23 3:02 AM,16/Mar/18 1:53 PM,,,,v1.1.0,,,fabric-release,,,,0,,,,,,"update package.json files with the SNAPSHOT release identifier

  ./package.json

  fabric-client/package.json

  fabric-ca-client/package.json",,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12409,,FAB-7787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1gn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 1:02 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/19279/;;;",,,,,,,,,,,,,,,,,,,,,,
Java SDK v1.1.0,FAB-8895,28563,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,denyeart,16/Mar/18 12:58 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,15/May/18 1:49 AM,,,,v1.2.0,,,fabric-sdk-java,,,,0,,,,,,"Create v1.1-alpha release.

Branch created in github [https://github.com/hyperledger/fabric-sdk-java/releases]

Present in Maven [https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java]

!image-2018-01-30-15-20-05-573.png!",,denyeart,huy.tranibm,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1h3:",,,,,,,,,,,,,,,,,,,,,denyeart,huy.tranibm,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make CCContext a fmt.Stringer,FAB-8904,28572,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,16/Mar/18 5:02 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,21/Mar/18 5:13 PM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"When the context is logged, it tends to be done as formatted fields. By implementing a stringer, it can format itself.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwssf:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
fabric-daily jobs must run on the Master branch and the Release branches too.,FAB-8905,28573,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,16/Mar/18 5:04 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,05/May/18 9:41 AM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,"As of now the daily cron jobs(fabric-test-daily, fabric-smoke test,..) just run on the Master branch. 

Create new jobs to run these daily tests on the multiple release branches too, and not just on the Master branch.

Daily jobs for Release branch can be created for the release-1.0 and release-1.1 branches now. ",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1j3:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pass canonical name and version to ccLauncherImpl instead of context,FAB-8906,28574,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,16/Mar/18 5:12 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 3:26 AM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,,,ChristopherFerris,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwssn:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 9:34 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/19259/;;;",,,,,,,,,,,,,,,,,,,,,,
Publish the build logs (e.g. docker logs) to nexus log server,FAB-8907,28575,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,16/Mar/18 5:14 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,20/Jul/18 7:16 AM,,,,,,,fabric-ci,,,,0,CI_Adhoc_Req,,,,,"For any build job, the build logs for CI jobs cannot be accessed after 7 days as they are deleted. Publish the build logs, docker logs to Nexus so that the logs can be accessed anytime, to view the build status at a later date.",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzz1jb:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: several dead/404 links,FAB-8908,28576,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,AdnanChoudhury,AdnanChoudhury,16/Mar/18 5:39 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 10:20 PM,,,,v1.1.1,v1.2.0,,fabric-docs,,,,0,,,,,,"From the Fabric readme page ([http://hyperledger-fabric.readthedocs.io/)] there are several links that land in 404 pages. Testing with a dead link checking tool finds 167 dead links, and about 12 (or more) of them are in the actual doc content.

The results from the link-checker tool ([https://www.deadlinkchecker.com/website-dead-link-checker.asp)] are attached, the file contains necessary details to find the dead-link areas.",,AdnanChoudhury,ChristopherFerris,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 5:39 AM;AdnanChoudhury;dead link checker.pdf;https://jira.hyperledger.org/secure/attachment/14782/dead+link+checker.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1jj:",,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,ChristopherFerris,denyeart,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.1,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 9:57 PM;joe-alewine;[~denyeart] [~ChristopherFerris]{{}}

{{Looks like the release-1.0 tag is broken – that's the main source of broken links here. Thoughts?}};;;","17/Mar/18 12:42 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/19293;;;","21/Mar/18 3:49 AM;denyeart;[~ChristopherFerris] This should also go to release-1.1 docs right?  I've cherry picked to release-1.1 using  [https://gerrit.hyperledger.org/r/#/c/19491/] .;;;",,,,,,,,,,,,,,,,,,,,
allow bootstrap.sh to forgo download of docker images,FAB-8909,28577,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,16/Mar/18 5:52 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,30/Mar/18 9:07 AM,v1.1.0,,,,,,fabric-build,,,,0,,,,,,bypassdownload of docker images if not installed - leaving just the function of downloading the appropriate tarball for platform-specific binaries.,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1jr:",,,,Unset,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Mar/18 6:15 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/19251;;;",,,,,,,,,,,,,,,,,,,,,,
CI Failure: Accessing the default test channel instead of specified,FAB-8911,28580,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,16/Mar/18 7:12 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,18/Apr/18 2:48 AM,v1.1.0,,,v1.2.0,,,fabric-quality,,,,0,,,,,,"The following failed in CI:

[https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/288/consoleFull]
Assertion Failed: Expected response to be of length 1048576; received length 88; Result: Error: 2 UNKNOWN: access denied: channel [behavesystest] creator org [org1.example.com]",,davidkhala,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1kf:",,,,,,,,,,,,,,,,,,,,,davidkhala,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,,,,,true,"21/Mar/18 5:14 PM;davidkhala;I saw similar error;;;",,,,,,,,,,,,,,,,,,,,,,
Test feature,FAB-8913,28585,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,odowdaibm,odowdaibm,odowdaibm,16/Mar/18 3:21 PM,21/Jul/18 3:50 AM,28/Oct/23 3:02 AM,22/Mar/18 6:45 AM,,,,,,,fabric-docs,,,,0,,,,,,Sample JIRA for DWG am call,,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1lb:",,,,Unset,,,,,,Unset,,,,,,,,,,,odowdaibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Orderer Concept topic to documentation,FAB-8914,28586,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,odowdaibm,odowdaibm,odowdaibm,16/Mar/18 4:02 PM,26/Aug/19 6:05 PM,28/Oct/23 3:02 AM,26/Aug/19 6:05 PM,,,,,,,fabric-docs,,,,2,,,,,,"A new topic for the subject of Orderers.

 ",,eramitg,fredbi,isaacwch,luomin,odowdaibm,pdina,SjirNijssen,tausifbadu,Yogendrasri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu1r:",,,,,,,,,,,,,,,,,,,,,eramitg,fredbi,isaacwch,luomin,odowdaibm,pdina,SjirNijssen,tausifbadu,Yogendrasri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 4:04 PM;odowdaibm;[~luomin] [~Yogendrasri] [~eramitg] Let's start working the Orderer topic

 ;;;","16/Mar/18 4:05 PM;eramitg;test;;;","16/Mar/18 4:05 PM;luomin;Thanks, willing to watch and review ;;;","16/Mar/18 4:05 PM;odowdaibm;It would be very helpful if you could outline the sections of this topic you'd like to see!

 ;;;","16/Mar/18 4:07 PM;Yogendrasri;I will be interested to work on this;;;","16/Mar/18 4:07 PM;odowdaibm;Should include a discussion on consensus.

Today Kafka is used

Outline how BFT might be used.;;;","16/Mar/18 4:09 PM;odowdaibm;Please also read this new topic to get ideas!

http://hyperledger-fabric.readthedocs.io/en/release-1.1/peers/peers.html;;;","16/Mar/18 4:09 PM;tausifbadu;test comment from Tausif;;;","16/Mar/18 8:54 PM;SjirNijssen;I propose that we describe in crystal clear language what the function of the Orderer is; thereafter describe which variables are used by the orderer to determine the strict order, and give a rich semantic definition of the variables. Thereafter let us illustrate with a clarifying example.;;;","09/Apr/18 11:23 AM;luomin;Found a recent issue somehow related to the document needs here.

https://jira.hyperledger.org/browse/FAB-9245

especially the question no.2 & no.3  

- no.2 How to judge on what basis an orderer organization should be created?

- no.3 What parameters needs to be kept in mind when hosting an Orderer organization? [Trust issues, although an orderer does not see data, but there is no bound that a malicious orderer cannot;;;",,,,,,,,,,,,,
issue test,FAB-8915,28587,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,eramitg,eramitg,16/Mar/18 4:04 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,22/Mar/18 2:36 AM,,,,,,,,,,,0,,,,,,,,eramitg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1lj:",,,,,,,,,,,,,,,,,,,,,eramitg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create fabric end-to-end daily job to run on release-1.1 branch and release-1.0 branch.,FAB-8916,28588,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,16/Mar/18 4:37 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,22/Mar/18 11:24 PM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,Currently the fabric-end-to-end-daily job just runs on the fabric Master branch. Create two new daily jobs to run the end-to-end-daily tests on fabric Release-1.0 and fabric Release 1.1 branches.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1lr:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/18 11:24 PM;sambhavdutt;The E2E daily tests have been created and are executing fine for fabric release-1.0 & release-1.1 branches.;;;",,,,,,,,,,,,,,,,,,,,,,
Application development topic: connecting to the ledger ,FAB-8917,28589,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,odowdaibm,odowdaibm,odowdaibm,16/Mar/18 4:51 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-docs,,,,1,Documentation,stale-item,,,,"A short topic on connecting to the ledger from mobile app to REST server, fabric application, chaincode.",,odowdaibm,SjirNijssen,sykesm,varun-raj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtzb:",,,,Unset,,,,,,Unset,,,,,,,,,,,odowdaibm,SjirNijssen,sykesm,varun-raj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 4:53 PM;odowdaibm;Varun Raj – it would be great if you can add some thoughts here:;;;","16/Mar/18 4:56 PM;odowdaibm;This was raised based on this discussion [https://chat.hyperledger.org/channel/fabric-documentation?msg=5Ap97qek58TMLyisE]

[~odowdaibm] and [~varun-raj]

Please add your thoughts

 ;;;","16/Mar/18 5:15 PM;varun-raj;Thanks for creating a topic for this [~odowdaibm] .

There are a lot of ways to write a client application with help for [Fabric NodeSDK|https://github.com/hyperledger/fabric-sdk-node] and I'd like to share the one that we followed which also helps you build role-based authentication and multi-user capabilities. 

*The Approach*
 * **We created a simple ExpressJS server to build a RESTFul server for our web app and mobile application.
 * We've used fabric ca client to generate users and also their certificates. thus when a user is created we'll be generating the certs and private key and zip into a card format and will email them the same without storing anything on the nodejs server.
 * When they log in, they upload the card to validate their account, we then extract the certs and private key and move it to the crypto store, validate the username with fabric ca. Once it's validated, we create a JWT token with the user enrollment id and timeout. 
 * And we use this token for future authentication as the key are present in the crypto store. 
 * When they logout we'll be deleting the keys, leaving no traces of the user's keys, by which we can create more security to the nodejs.

*For Role-Based Approach*
 * When we create the user, we define the roles in the attributes and then when we access the network, we check the role of the attributes in the chain code and validate the transaction flow accordingly.
 * If we want to promote or depromote the user, we issue the new enrolment certificate and revoke the current one. Thus the chain code remains unchanged.;;;","16/Mar/18 9:01 PM;SjirNijssen;I like to propose to add a business requirements set and illustrate these requirements with visual examples;;;","18/Mar/18 6:47 PM;SjirNijssen;Hi Varun,

I read your paper Hyperledger Fabric Architecture: Explained in detail (version CET 2018-03-1045-1045)
I believe the diagram is useful as it shows clearly that peers have to be contributed by an organization to the HLF network and that a CA is under the control of an organzation.

I believe we may have some misunderstanding on the orderers. In my opinio, it is a two-dimensional problem. Orderers are not under the command of a single organization, but an orderer must be contributed to the HLF network by an organization. I believe a diagram that would represent these two dimensions would be helpful. Could you agree or do I miss something?

Regards ;;;","19/Mar/18 3:35 PM;varun-raj;Hi Sjir,

Actually, even in my article, it says that the orderer is under a domain and will be common for all the organizations. Also, you can have multiple orderers with help of kafka. ;;;","23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,
Save viper lookup variable when obtaining reference to local MSP,FAB-8918,28590,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,yacovm,yacovm,16/Mar/18 5:34 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,22/Mar/18 11:09 PM,,,,,,,fabric-crypto,fabric-peer,,,0,,,,,,"The [viper lookup|https://github.com/hyperledger/fabric/blob/master/msp/mgmt/mgmt.go#L159] below takes about hundred micro-seconds to complete.

{code}
		mspType := viper.GetString(""peer.localMspType"")
		if mspType == """" {
			mspType = msp.ProviderTypeToString(msp.FABRIC)
}
{code}

This is invoked each time the local MSP reference is fetched for the sake of other services in the peer such as gossip.


An alternative way of removing the viper lookup from the critical path, is to move the lookup into the block that is protected by the lock, so that it is only performed once.
",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1lz:",,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Pin fabric-samples to node.js ""~1.1.0""",FAB-8920,28592,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,16/Mar/18 9:19 PM,08/Aug/18 9:03 PM,28/Oct/23 3:02 AM,16/Mar/18 9:39 PM,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,"After creating release-1.1 branch, pin the fabric samples to use version ""~1.1.0"" of node sdk and node chaincode.  This will forever align fabric samples in release-1.1 branch with the 1.1.x node.js releases. 

fabric-samples master branch continues to use ""unstable"" to pick up the latest and greatest node.js releases.

After this is merged in release-1.1 branch, then tag fabric-samples with ""v1.1.0"".",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11515,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1m7:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/18 9:22 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/19283/;;;",,,,,,,,,,,,,,,,,,,,,,
Use .build as the default build staging directory to prevent `go test` evaluation,FAB-8922,28596,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,sykesm,sykesm,sykesm,16/Mar/18 9:48 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,30/Mar/18 6:32 AM,,,,v1.2.0,,,fabric-build,,,,0,hygiene,,,,,"The current build process places a number of golang files into the build directory. These files prevent successful execution of tests directly from the fabric source tree via `go test ./...`.

By naming the directory with a period prefix, the directory is ignored by the build tooling. (A hidden _build directory would also work.)",,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwzwf:",,,,,,Sprint 7 - Hygiene,,,,,,,,,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Mar/18 10:53 PM;wlahti;https://gerrit.hyperledger.org/r/c/19285/;;;","30/Mar/18 9:01 PM;wlahti;Updated the summary and description to make it obvious that we went with "".build"" and not ""_build"" in the merged CR. ;;;",,,,,,,,,,,,,,,,,,,,,
Prevent examples from impacting go test execution using a local workflow without containers,FAB-8923,28598,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,16/Mar/18 9:56 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 3:30 AM,,,,v1.2.0,,,fabric-build,,,,0,hygiene,,,,,"As part of correcting some compilation issues, the chaincode implementations were separated from the main package(s). The main package for the impacted samples now live under a cmd folder in the example.

Since some of the examples were actually used as test fixtures, some of the users needed updates to reflect the new location of the main.

Given the need to update callers anyway, we removed chaincode_ prefix from the directory names and the _exampleXX suffix chaincode source files as they were redundant. (The examples were already located in examples/chaincode/.../exampleXX folders.)",,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwssv:",,,,,,,,,,,,,,,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Mar/18 10:50 PM;wlahti;Fix compilation of examples - [https://gerrit.hyperledger.org/r/c/19441/]

Fix compilation of examples/ccchecker - [https://gerrit.hyperledger.org/r/c/19433/]

Remove dead chaintool example - https://gerrit.hyperledger.org/r/c/19429/;;;",,,,,,,,,,,,,,,,,,,,,,
Idemix (Go) to support non-revocation proof generation and verification,FAB-8925,28600,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,mdr,dubovitskaya,dubovitskaya,16/Mar/18 10:07 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,10/Dec/18 7:01 PM,,,,,,,fabric-crypto,,,,0,idemix,,,,,"Modify Idemix Go crypto librarty (and implicitely the Idemix MSP implementation) to support non-revocation proof generation:

This is done by extending the SigningIdentity to contain a non-revocation proof. The idemix signature generation algorithm (idemix.Sign()) will be extended to accept pkRA and CRI as additional parameters and generate the non-revocation proof accordingly.

 

Modify Idemix Go crypto librarty (and implicitely the Idemix MSP implementation) to support non-revocation proof verification:

This is done by extending the Identity.Validate() implementation to verify the non-revocation proof. The idemix signature verification algorithm (called from Identity.Validate()) will be extended to accept pkRA and epoch as additional parameters and verify the ZKP accordingly.",,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-588,,,,,,,,,"1|hzwqfj:e",,,,,,May2018 - Security,To Do,,,,,,,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/18 8:29 PM;dubovitskaya;https://gerrit.hyperledger.org/r/#/c/21161/;;;",,,,,,,,,,,,,,,,,,,,,,
Add support for disclosing attributes in a commitment (in Go),FAB-8926,28602,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dubovitskaya,dubovitskaya,16/Mar/18 10:37 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,v1.4.0,,,Future,,,fabric-crypto,,,,0,idemix,stale-item,,,,"Add support for diclosing attributes via a commitment with the opening and the attribute values provided in the transient data filed of the transaction (available only to the chaincode and not added to the ledger)
",,dubovitskaya,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12759,,,,,,,,,"1|hzwrxj:",,,,,,,,,,,,,,,,,,,,,dubovitskaya,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Idemix BCCSP Integration,FAB-8930,28611,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,angelo.decaro,dubovitskaya,dubovitskaya,16/Mar/18 10:56 PM,12/Jun/20 12:30 AM,28/Oct/23 3:02 AM,27/Nov/18 4:01 PM,v1.3.0,,,v1.4.0,,,fabric-crypto,,,,0,hygiene,idemix,Security,,,"This FAB consists of the following steps:
 # Introduce the Idemix options to support the various cryptographic operations
 # Provide a new BCCSP interface implementation to support the Idemix options
 # Refactor the Idemix-based MSP to use the Idemix BCCSP

After this, it will be easier to refactor the idemix package and introduce new functionalities.",,dubovitskaya,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9224,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,FAB-8793,,,,,,,,,"1|hzwqfj:f",,,,No,,May2018 - Security,To Do,,,No,,,,,,,,,,,dubovitskaya,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Oct/18 12:34 AM;elli-androulaki;Moving this to ""In Progress"" as there is one item that is listed here as ""todo"". [~angelo.decaro] please change back if you think this is not the case.;;;",,,,,,,,,,,,,,,,,,,,,,
Add readme.md for fabric-amcl,FAB-8932,28613,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,davidkhala,davidkhala,davidkhala,17/Mar/18 12:27 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,17/Mar/18 1:56 AM,v1.2.0,,,v1.2.0,,,fabric-amcl,,,,0,doc,fabric-amcl,,,,Add a brief introduction.,,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1s7:",,,,Unset,,,,,,Unset,,,,,,,,,,,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/18 12:40 AM;davidkhala;https://gerrit.hyperledger.org/r/#/c/19291/;;;",,,,,,,,,,,,,,,,,,,,,,
Remove dead (unnamed) function from chaincode exec transaction test,FAB-8933,28614,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,17/Mar/18 12:35 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 3:28 AM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,Unnamed functions (by definition) cannot be called.,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwst3:",,,,,,,,,,,,,,,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Mar/18 10:50 PM;wlahti;https://gerrit.hyperledger.org/r/c/19435/;;;",,,,,,,,,,,,,,,,,,,,,,
Change tests to use proper temporary directory instead of assuming /var is writable,FAB-8934,28615,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,17/Mar/18 1:47 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 3:31 AM,,,,v1.2.0,,,,,,,0,hygiene,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwstb:",,,,,,,,,,,,,,,,,,,,,sykesm,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Mar/18 10:56 PM;wlahti;qscc tests - [https://gerrit.hyperledger.org/r/c/19437/]

peer tests - https://gerrit.hyperledger.org/r/c/19439/;;;",,,,,,,,,,,,,,,,,,,,,,
moment needs upgraded due to CVE,FAB-8947,28634,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,ryjones,ryjones,18/Mar/18 1:21 PM,07/Sep/19 4:08 AM,28/Oct/23 3:02 AM,13/Jun/18 12:25 AM,,,,v1.1.1,v1.2.0,,fabric-samples,,,,0,,,,,,"https://github.com/hyperledger/fabric-samples/network/dependencies

We found a potential security vulnerability in one of your dependencies.

A dependency defined in balance-transfer/package-lock.json has known security vulnerabilities and should be updated.

Known vulnerability found
CVE-2017-18214
Moderate severity

The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date str...
package-lock.json update suggested:
moment ~> 2.19.3

Always verify the validity and compatibility of suggestions with your codebase.
",,ChristopherFerris,denyeart,harrisob@us.ibm.com,ryjones,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1wf:",,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,harrisob@us.ibm.com,ryjones,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Mar/18 1:43 PM;denyeart;[~harrisob@us.ibm.com] Could you update this in release-1.1 and master branches?;;;","21/Mar/18 4:38 AM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/19469/] — v1.2

[https://gerrit.hyperledger.org/r/#/c/19473/] — v1.1;;;","13/Jun/18 12:26 AM;harrisob@us.ibm.com;moment is now above the issue at 2.22.1;;;",,,,,,,,,,,,,,,,,,,,
Discovery and selection services should implement Close(),FAB-8949,28637,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,divyank,divyank,19/Mar/18 12:37 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,,,,,,,,0,,,,,,,,divyank,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1wv:",,,,,,,,,,,,,,,,,,,,,divyank,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
Remove env variable from txVSCCValidator interface,FAB-8950,28639,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,19/Mar/18 8:26 AM,21/Jul/18 3:49 AM,28/Oct/23 3:02 AM,04/Apr/18 10:57 PM,,,,,,,fabric-peer,,,,0,hygiene,,,,,"vsccValidator interface introduces VSCCVAlidate function which accepts payload, marshaled and unmarshaled transaction envelop. 

{code}
type vsccValidator interface {
	VSCCValidateTx(payload *common.Payload, envBytes []byte, env *common.Envelope) (error, peer.TxValidationCode)
}
{code}

While there is no functional use of unmarshaled Envelop except for using in debug message. This commit removes this parameter from declaration due its redundancy.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1xb:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Mar/18 8:46 AM;C0rWin; https://gerrit.hyperledger.org/r/19357;;;",,,,,,,,,,,,,,,,,,,,,,
Move vsccValidator into separate file,FAB-8951,28640,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,19/Mar/18 8:37 AM,21/Jul/18 3:48 AM,28/Oct/23 3:02 AM,20/Mar/18 10:04 PM,,,,v1.2.0,,,fabric-peer,,,,0,hygiene,,,,,"The interface for vscc validator has been defined in \{\{validator.go}}, to keep the code clean and make it possible to handle refactoring later, it's better to have this interface and its implementation separated.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1xj:",,,,Unset,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Mar/18 8:47 AM;C0rWin;https://gerrit.hyperledger.org/r/19359;;;",,,,,,,,,,,,,,,,,,,,,,
Cache refresh intevals reference wrong config section,FAB-8956,28645,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,19/Mar/18 11:23 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,19/Mar/18 1:08 PM,,,,,,,,,,,0,,,,,,,,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1yn:",,,,,,,,,,,,,,,,,,,,,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
"Environment clean up commands need to be specified in ""Adding an org to a channel""",FAB-8958,28647,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,salmanbaset,salmanbaset,salmanbaset,19/Mar/18 12:42 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,22/May/18 4:14 AM,v1.1.0,,,v1.2.0,,,fabric-samples,,,,0,,,,,,"When running the sample ""Adding an Org to a Channel"", then upon clean up, ./eyfn.sh -m down script must be run before ./byfn.sh -m down; otherwise, org3 containers and volumes and containers do not get cleaned properly.",,mastersingh24,salmanbaset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwtzj:",,,,,,,,,,,,,,,,,,,,,mastersingh24,salmanbaset,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/18 11:46 PM;mastersingh24;[~salmanbaset] - Can you provide more detail(s) on the actual issue here?;;;","24/Mar/18 12:30 AM;salmanbaset;[~mastersingh24] the issue seems to be that when running the sample of ""Adding a New Node"" multiple times (on a Mac OS X (Sierra) or Ubuntu Trusty), volumes get created. When running `./byfn -m down`, these volumes do not always get deleted. Hence explicit cleaning of orphans is needed.

Arguably, a clean fix is to put the volume clean up commands in byfn.sh -f down. I can submit a patch there.;;;","26/Mar/18 11:23 PM;salmanbaset;[~mastersingh24] here is the new patch for fabric-samples.
https://gerrit.hyperledger.org/r/#/c/19757/;;;",,,,,,,,,,,,,,,,,,,,
Update default version in bootstrap.sh to v1.1.0,FAB-8959,28648,28549,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,19/Mar/18 1:03 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,31/Mar/18 8:36 PM,,,,v1.1.0,v1.2.0,,fabric-release,,,,0,,,,,,Update default version in bootstrap.sh to v1.1.0,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz1z3:",,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Mar/18 1:14 PM;denyeart;master: [https://gerrit.hyperledger.org/r/#/c/19371/]

release-1.1: [https://gerrit.hyperledger.org/r/#/c/19373/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
Shall Network Launcher and PTE support goprofile? ,FAB-8960,28650,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,bjwswang,bjwswang,19/Mar/18 6:07 PM,23/Jan/20 7:32 AM,28/Oct/23 3:02 AM,23/Jan/20 7:32 AM,,,,,,,fabric-build,,,,0,stale-item,,,,,"Since goprofile is very useful in finding bottle necks in golang applications, I recommend NL and PTE should make some changes to support goprofile.",,bjwswang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzz1zj:",,,,Unset,,,,,,Unset,,,,,,,,,,,bjwswang,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:32 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,
Document the CI process for hyperledger fabric repositories.,FAB-8962,28654,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,sambhavdutt,sambhavdutt,sambhavdutt,20/Mar/18 12:34 AM,20/Jul/18 11:17 PM,28/Oct/23 3:02 AM,20/Jul/18 11:06 PM,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,Document the steps and validations performed by CI Jenkins process to verify the developers patchset and output the results for the fabric repositories.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz20f:",,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log warning instead of panic when GRPC closing fails,FAB-8964,28657,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,biljana.lukovic,biljana.lukovic,20/Mar/18 1:55 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,20/Mar/18 8:58 PM,,,,,,,,,,,0,,,,,,,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz213:",,,,,,,,,,,,,,,,,,,,,biljana.lukovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
PTE supports global orderer admin cert,FAB-8967,28660,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,20/Mar/18 2:55 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,22/Mar/18 6:07 AM,,,,,,,fabric-quality,,,,0,,,,,,PTE supports global orderer amin path or admin_cert ,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzz21r:",,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,true,"20/Mar/18 3:31 AM;dongming;PTE will access orderer admin in following order: 1. global admin_cert, 2. local admin_cert, 3. global adminPath, 4. local adminPath

 

https://gerrit.hyperledger.org/r/#/c/19405/;;;",,,,,,,,,,,,,,,,,,,,,,
Extract orderer sample clients into a separate package to be used by samples and tests,FAB-8970,28664,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,sykesm,sykesm,20/Mar/18 5:43 AM,30/Jul/19 11:59 AM,28/Oct/23 3:02 AM,30/Jul/19 11:59 AM,,,,Future,,,fabric-orderer,,,,0,hygiene,,,,,"While working on the Raft-based orderer integration tests, we had to recreate the same assets that were defined in the sample clients. If these assets were exported we could have avoided that.",,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,FAB-9032,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyizz:",,,,,,,,,,,,,,,,,,,,,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,
Update documentation to reflect usage of dep instead of govendor,FAB-8971,28666,24431,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sheehan,sheehan,sheehan,20/Mar/18 7:06 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,21/Mar/18 12:52 AM,,,,v1.2.0,,,,,,,0,Documentation,,,,,The documentation at /Style-guides/go-style.html still references govendor. This needs to be updated to reflect that Fabric now uses dep.,,davidkhala,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz22n:",,,,,,,,,,,,,,,,,,,,,davidkhala,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Mar/18 3:26 PM;davidkhala;[https://gerrit.hyperledger.org/r/#/c/19419/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,
reST format mistake in channel_update_tutorial.rst,FAB-8972,28667,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,20/Mar/18 9:02 AM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,06/Apr/18 2:46 AM,v1.1.0,,,v1.1.1,,,fabric-docs,,,,0,Documentation,,,,,"I found that a reST format is broken in /docs/source/commands/channel_update_tutorial.rst
 
{code:java}
.. note:: This configuration must be the same for all new peers added to the
channel.
{code}

Maybe it needs to be formatted like the below.

{code:java}
.. note:: This configuration must be the same for all new peers added to the
          channel.
{code}",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz22v:",,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Mar/18 10:48 AM;nnao;https://gerrit.hyperledger.org/r/#/c/19421/;;;",,,,,,,,,,,,,,,,,,,,,,
Exclude test fixtures from linting and copyright header validation,FAB-8975,28673,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,20/Mar/18 9:19 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 3:31 AM,,,,v1.2.0,,,fabric-build,,,,0,hygiene,,,,,"Assets that live in 'testdata' folders are test fixtures. While these fixtures can sometimes contain code, they can also include fixed format files like pem encoded certificates, invalid json, invalid xml, or code that simply doesn't compile.

Given the nature of these files, linting and copyright validation is not strictly necessary.",,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwstj:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
Move chaincode test fixtures out of examples and into testdata directories at the test site,FAB-8976,28674,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sykesm,sykesm,sykesm,20/Mar/18 9:24 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,24/Mar/18 3:28 AM,,,,v1.2.0,,,,,,,0,hygiene,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwstr:",,,,,,,,,,,,,,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,
[CI] - keep maven artifact in nexus2 repo,FAB-8978,28677,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,20/Mar/18 10:29 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,21/Mar/18 10:46 PM,,,,v1.2.0,,,fabric-build,fabric-ci,,,0,fabric-build,fabric-ci,,,,"In many instances, builds are failed to download the maven artifacts from apache.org site. It could be network latency issue caused this problem. Below proposed change may solve this problem.

Keep `apache-maven-3.3.9-bin.tar.gz` in nexus2 repository to download while building javaenv docker image. Below is the failed log while downloading from apache site.
*00:01:51.225* Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL 
[http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz]
     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn*00:01:51.301*  ---> Running in 08b9cf371045*00:01:53.304* {color:#ff0000}curl: (18) transfer c{color}{color:#ff0000}los{color}{color:#ff0000}e{color}{color:#ff0000}d {color}{color:#ff0000}w{color}{color:#ff0000}it{color}{color:#ff0000}h{color}{color:#ff0000} 5{color}{color:#ff0000}1{color}{color:#ff0000}99{color}{color:#ff0000}4{color}{color:#ff0000}13{color} {color:#ff0000}b{color}{color:#ff0000}yt{color}{color:#ff0000}e{color}{color:#ff0000}s {color}{color:#ff0000}r{color}{color:#ff0000}e{color}{color:#ff0000}ma{color}{color:#ff0000}i{color}{color:#ff0000}ni{color}{color:#ff0000}n{color}{color:#ff0000}g {color}{color:#ff0000}t{color}{color:#ff0000}o{color} {color:#ff0000}r{color}{color:#ff0000}e{color}{color:#ff0000}a{color}{color:#ff0000}d*00:01:53.304* {color}{color:#ff0000}*00:01:53.304* gzip: {color}{color:#ff0000}stdin: unexpected end of file*00:01:53.305* {color}{color:#ff0000}tar: Unexpected EOF in archive{color}{color:#ff0000}*00:01:53.306* {color}{color:#ff0000}tar: Unexpected EOF in archive{color}{color:#ff0000}*00:01:53.307* {color}{color:#ff0000}tar: {color}{color:#ff0000}Error is not recoverable: exiting now{color}",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9026,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzz247:",,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/18 10:46 PM;rameshthoomu;Maven 3.3.9 binary artifact is already available in nexus2 repository.;;;",,,,,,,,,,,,,,,,,,,,,,
PTE supports global orderer tls_cert,FAB-8980,28679,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,20/Mar/18 10:47 PM,20/Jul/18 11:16 PM,28/Oct/23 3:02 AM,27/Mar/18 6:26 AM,,,,,,,fabric-quality,,,,0,,,,,,"PTE reads the global orderer tls_cert if it is defined in the config json, otherwise read from each orderer section.  This is for the support of starter plan.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzz24n:",,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,,,true,"23/Mar/18 3:43 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/19453]

 ;;;","27/Mar/18 6:01 AM;dongming;https://gerrit.hyperledger.org/r/#/c/19785/;;;",,,,,,,,,,,,,,,,,,,,,
