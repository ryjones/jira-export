Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Include fabric-sdk-node as git submodule,FAB-6051,20644,20613,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,06/Sep/17 11:44 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 11:29 PM,,,,,,,,,,,,,,0,,,,,,,"While updating package.json with the correct versions can be used for use in the PTE, the work is not complete and needs a specific library that is included in the repo per [~dongming] and needs to be included.

This will allow others to use the tool, while this specific dependency is being fixed.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfhj:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"06/Sep/17 11:49 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/13193/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specify filter during the retrieval from the transient store,FAB-6053,20646,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,07/Sep/17 1:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,07/Sep/17 6:46 PM,,,,,,,,,,,,,,0,,,,,,,Enhance the API `{color:#000000}GetTxPvtRWSetByTxid{color}` in the transient store so that it takes a filter as an additional parameter in order to trim each of the results such that each item in the result contains only namespace/collection specified in the filter.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfhz:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add end-to-end ledger test with pvtdata,FAB-6054,20647,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,manish-sethi,manish-sethi,07/Sep/17 2:05 AM,30/Jul/19 10:16 AM,28/Oct/23 3:00 AM,30/Jul/19 10:16 AM,,,,,,,,,,,,,,0,,,,,,,,,manish-sethi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfi7:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:16 AM;mastersingh24;included in end to end integration tests plus in some system tests as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
createEnvelopeForMsg() has two return statements,FAB-6055,20648,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Invalid: Works as Expected,cclauss,cclauss,cclauss,07/Sep/17 5:59 AM,01/Aug/19 11:32 AM,28/Oct/23 3:00 AM,01/Aug/19 11:32 AM,v1.0.5,,,,,,Future,,,fabric-quality,,,,0,quality,,,,,,"This issue is a simple one and I would like to make it my first PR to the project if someone would be willing to mentor me thru the process...

[https://github.com/hyperledger/fabric/blob/release/bddtests/steps/bootstrap_util.py#L737-L739]

return envelope
return configEnvelope

Which one do we actually want to return?  The other should be removed as it is superfluous and confusing.",,cclauss,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfif:",,,,,,,,,,,,,,,,,,,,,,cclauss,denyeart,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Oct/17 5:36 AM;denyeart;[~latitiah] Can you provide some guidance for Christian?;;;","26/Jan/18 3:17 AM;sanchezl;Remove:

 {{return configEnvelope}};;;","06/Jul/18 3:12 PM;cclauss;I believe this issue can be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in variable name: namepart instead of namePart,FAB-6056,20649,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,cbl,cclauss,cclauss,07/Sep/17 6:09 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,21/Sep/17 3:04 PM,v1.0.2,,,,,,v1.1.0,,,fabric-release,,,,0,,,,,,,namepart on https://github.com/hyperledger/fabric/blob/release/bddtests/environment.py#L66 should be namePart (capital P).,,cbl,cclauss,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfin:",,,,,,,,,,,,,,,,,,,,,,cbl,cclauss,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 5:01 PM;cbl;https://gerrit.hyperledger.org/r/#/c/13417/;;;","01/Oct/17 7:06 PM;mastersingh24;not going to backport;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in variable name: block instead of blocks[0],FAB-6057,20650,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sanchezl,cclauss,cclauss,07/Sep/17 6:43 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Jan/18 9:55 PM,v1.0.5,,,,,,v1.0.6,v1.1.0,,fabric-quality,,,,0,,,,,,,In https://github.com/hyperledger/fabric/blob/release/bddtests/steps/bootstrap_util.py#L1235 the `block.data.data` at the end of the line should be `blocks[0].data.data` instead.  `block` (singular) is an undefined name in this context but `blocks[0]` (plural) is used earlier on this same line.,,cclauss,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfiv:",,,,,,,,,,,,,,,,,,,,,,cclauss,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 5:48 AM;denyeart;[~jeffgarratt] Feel free to re-assign if somebody else is looking after this now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in variable name: ordererContext instead of context,FAB-6058,20651,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,cclauss,cclauss,07/Sep/17 6:56 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Jan/18 9:57 PM,v1.0.5,v1.1.0,,,,,v1.0.6,v1.1.0,,fabric-quality,,,,0,,,,,,,https://github.com/hyperledger/fabric/blob/release/bddtests/steps/orderer_util.py#L255 is the only instance of the text ordererContext in the entire repo and is an undefined name in this context.  Should this be context?,,cclauss,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfj3:",,,,,,,,,,,,,,,,,,,,,,cclauss,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 5:49 AM;denyeart;[~jeffgarratt] Feel free to reassign if somebody else is looking after this now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Undefined name ""containers"" can raise NameError at runtime",FAB-6059,20652,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lhaskins,cclauss,cclauss,07/Sep/17 7:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Feb/18 12:33 AM,,,,,,,Future,,,fabric-quality,,,,0,,,,,,,"In the context of https://github.com/hyperledger/fabric/blob/release/test/feature/environment.py#L53 containers is an undefined name and can raise a NameError at runtime in the statement getLogFiles(containers, fileSuffix)",,cclauss,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfjb:",,,,,,,,,,,,,,,,,,,,,,cclauss,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 12:33 AM;latitiah;This code has been moved and fixed in a separate repository. See fix at [https://github.com/hyperledger/fabric-test/blob/master/feature/environment.py#L42]

This said, I would like to remove this code, since it is no longer being supported in the fabric repo, but in fabric-test instead.

 ;;;","16/Feb/18 1:03 AM;latitiah;https://jira.hyperledger.org/browse/FAB-7721 has already been open to clean up the code in this repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a troubleshooting in the BYFN,FAB-6060,20653,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wl6g11li,wl6g11li,wl6g11li,07/Sep/17 11:55 AM,21/Jul/18 3:51 AM,28/Oct/23 3:00 AM,22/Apr/18 8:48 PM,,,,,,,v1.2.0,,,fabric-docs,,,,0,,,,,,,"When the *byfn.sh* is been executed, a problem which is similar to the following may occurs.
{code:none}
/bin/bash: ./scripts/script.sh: /bin/bash^M: bad interpreter: No such file or directory
{code}
This is usually caused by the *wrong formate of the shell file*.

A troubleshooting may be needed to add in the BYFN tutorial in order to describe the problem and provide a probably solution.",,ChristopherFerris,pandrejko,wl6g11li,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfjj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,pandrejko,wl6g11li,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Mar/18 12:21 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/13225/;;;","04/Apr/18 3:41 AM;pandrejko;[http://hyperledger-fabric.readthedocs.io/en/release-1.1/build_network.html#troubleshooting]

 

Can this be closed or is it a catch all for additional issues as they surface?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make peers ignore peers that left the channel,FAB-6063,20658,20487,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,07/Sep/17 7:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 12:36 PM,,,,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,,"In gossip, we only increment the logical timestamp of stateInfo messages (channel metadata broadcast) when a change occurs (i.e ledger height increased).

Because of this - we cannot expire (on a timely basis) a StateInfo message of another peer as long as it's in the membership view, else if the channel doesn't have any activity - all peers would expire all other peer's channel metadata and no peer would recognize other peers as being in the channel.

To implement a leave channel capability, we need to add a flag that makes the peer actively ignore the given StateInfo message. 


[~C0rWin]",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfk7:",,,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jun/18 7:40 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/13241/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update examples scripts,FAB-6064,20659,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,kaichiasjtu,Vladislav-Zolotaryov,Vladislav-Zolotaryov,07/Sep/17 8:57 PM,23/Jan/20 7:04 AM,28/Oct/23 3:00 AM,23/Jan/20 7:04 AM,v1.0.3,,,,,,Future,,,fabric-samples,,,,0,quality,stale-item,,,,,"I propose changing the default version of the fabric images in download-dockerimages.sh scripts from 1.0.0-beta to the current release 1.0.2

As well as adding a failure message to the generateArtifacts.sh script, on configtxgen build step, since without it you have a broken script pipeline with a mysterious error in the end if be chance you forgot to add GOPATH variable or place the fabric sources in it.

Something like:
{code:java}
make -C $FABRIC_ROOT release || { echo 'Could not build cryptogen' ; exit 1; }{code}",,kaichiasjtu,sykesm,Vladislav-Zolotaryov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfkf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kaichiasjtu,sykesm,Vladislav-Zolotaryov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 10:46 PM;kaichiasjtu;The Docker images of fabric are up to 1.1.0, I change it from 1.0.0-beta to 1.1.0-preview?;;;","23/Jan/20 7:04 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSDK Channel service for events,FAB-6066,20666,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,07/Sep/17 11:29 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,11/Jan/18 6:05 AM,v1.1.0,,,,,,v1.1.0,,,fabric-sdk-java,,,,1,,,,,,,"See parent for now.

https://gerrit.hyperledger.org/r/#/c/16117/",,osesov,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-181,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyflz:",,,,,,,,,,,,,,,,,,,,,,osesov,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ledger regression tests are failing in daily CI build,FAB-6067,20669,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,rameshthoomu,rameshthoomu,07/Sep/17 11:45 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,20/Sep/17 12:26 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,"Observed ledger regression tests are failing in daily CI build.. Below is the log and build output

[https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/79/console]
{code:java}
../chainmgmt/chains.go:112: c.PeerLedger.Commit undefined (type ""github.com/hyperledger/fabric/core/ledger"".PeerLedger has no field or method Commit){code}",,AdnanChoudhury,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6171,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfmf:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 5:50 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/13485/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capabilities package to common,FAB-6069,20671,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,07/Sep/17 11:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,29/Sep/17 6:35 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfmv:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capabilities package to orderer,FAB-6070,20672,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,07/Sep/17 11:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,29/Sep/17 6:38 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfn3:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capabilities package to peer,FAB-6071,20673,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,07/Sep/17 11:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,29/Sep/17 6:36 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfnb:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Panic on incompatibilities,FAB-6072,20674,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Sep/17 12:52 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 8:18 PM,,,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfnj:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update shim errors to new errors package,FAB-6073,20675,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,08/Sep/17 1:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,15/Sep/17 3:43 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfnr:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 12:36 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13247/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove 'endorserid' parameter from transient store APIs,FAB-6074,20676,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,manish-sethi,manish-sethi,08/Sep/17 1:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 6:48 PM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,"1) Remove `endorserid` parameter from `{color:#000000}Persist{color}` function in the transient store interface.

2) In the implementation, change the existing function

`{color:#000000}Persist(txid {color}{color:#0000ff}string{color}{color:#000000}, endorserid {color}{color:#0000ff}string{color}{color:#000000},{color} {color:#000000}endorsementBlkHt {color}{color:#0000ff}uint64{color}{color:#000000}, privateSimulationResults {color}{color:#000000}*{color}{color:#000000}rwset.TxPvtReadWriteSet){color}` to
 `p{color:#000000}ersist(txid {color}{color:#0000ff}string{color}{color:#000000}, uuid {color}{color:#0000ff}string{color}{color:#000000}, {color}{color:#000000}endorsementBlkHt {color}{color:#0000ff}uint64{color}{color:#000000}, privateSimulationResults {color}{color:#000000}*{color}{color:#000000}rwset.TxPvtReadWriteSet){color}`

3) In the implementation, implement new function (in point 1 above) such that it computes a uuid and invokes the function specified in point 2 above
  
 4) remove `{color:#000000}EndorserID` from `{color}EndorserPvtSimulationResults{color:#000000}`{color}",,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfnz:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Sep/17 1:41 AM;manish-sethi;[~yacovm], [~C0rWin], [~denyeart] - FYI;;;","11/Sep/17 2:02 PM;Senthil1;[~manish-sethi] If transientstore generates UUID and remove endorserId from Persist, coordinator cannot use GetSelfSimulatedTxPvtRWSetByTxid(). Anyway, current gossip's privateDataDistributor does not differentiate between selfendorsed RWSet and received RWSet. Hence, I assume that coordinator will use GetTxPvtRWSetByTxid() to get the private write set instead of GetSelfSimulatedTxPvtRWSetByTxid().;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add timestamp and timewindow to event registration,FAB-6075,20677,18136,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,08/Sep/17 2:26 AM,21/Feb/19 6:19 AM,28/Oct/23 3:00 AM,20/Oct/17 2:47 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"- change to the Event proto message to include a timestamp
- enhancement of peer to check the timestamp field (with version dependency)
- enhancement of the peer setup configuration with a time-window, assuming the peer is to be considering requests within time-window < |peer-local-time - event-timestamp|",,denyeart,dhuseby,elli-androulaki,muralisr,troyronda,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfo7:",,,,,,,,,,,,,,,,,,,,,,denyeart,dhuseby,elli-androulaki,muralisr,troyronda,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Sep/17 2:57 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13257/;;;","27/Sep/17 11:03 PM;wlahti;A few concerns with this approach have been raised. It doesn't seem to add much in the way of security and only makes it more difficult for legitimate users that might be experiencing network latency. Maybe it would be best to continue with a complete fix that adds information about the recipient of the event registration and avoids timestamps altogether? [~muralisr] Anything to add? [~elli-androulaki] Any thoughts?;;;","28/Sep/17 9:25 PM;muralisr;[~wlahti]   Right, if I understood it right, if the timestamp is too small it could block legit users, if its large (like it is now - 1 min) it could allow malicious users to get in anyway. I was not sure how much timestamp buys... so with the complete fix, this would be just extra code to maintain for little return ? 

On the other hand if we are targeting a larger window (hours, days, etc) to block revoked users, maybe its worth it but the question of whether we really need this is still valid I think.

but can easily defer to [~elli-androulaki] on this :-);;;","29/Sep/17 9:56 PM;elli-androulaki;Hi @muralisr, 
Here are my 2c :)

 
{noformat}
 I understood it right, if the timestamp is too small it could block legit users{noformat}
Correct
{noformat}
if its large (like it is now - 1 min) it could allow malicious users to get in anyway{noformat}
If it is ""too"" large, this is indeed the case. But there is a middle ground. I would not expect that peers get compromised always within the hour of users registering to them :) So I would say it still give us some security guarantees, i.e., against an adversary that compromises the peer after the time window the registration request is valid closes.
{noformat}
so with the complete fix, this would be just extra code to maintain for little return{noformat}
True, but it seems to me natural to have timestamps attached to event registration requests. It also allows for an easy check even before do a signature verification if the request has expired. 
This would allow someone to avoid (accidental) replays of the registration request to the same peer (though admittedly not so easy for the same request to be replayed), etc... 



 ;;;","30/Sep/17 12:09 AM;muralisr;[~elli-androulaki]  makes sense to me. As long as we don't block legit users and cause more of a problem than otherwise, I suppose we could argue that this does provide another layer of protection.

(and thank you for the detailed response!);;;","30/Sep/17 12:15 AM;wlahti;So what should the plan be here? What time window value seems reasonable?;;;","30/Sep/17 12:51 AM;elli-androulaki;[~muralisr], sure!

[~wlahti], shall we start with half an hour or so? What do you think?;;;","04/Oct/17 12:59 AM;wlahti;[~elli-androulaki] I went with 15 minutes to each side of the peer's time for a total time window of 30 minutes. ;;;","06/Oct/17 4:05 AM;yacovm;Not sure why this is any good if we are going to include the certificate of the peer anyway? Then the signed event becomes none-relayable to anyone but the peer itself.;;;","11/Oct/17 5:07 AM;elli-androulaki;Agreed, but it seems to me natural to have timestamps attached to event registration requests. It also allows for an easy check even before do a signature verification if the request has expired (so signature validation would not be needed even). ;;;","21/Feb/19 6:19 AM;denyeart;Confirmed that this works in the wild... a user has reported error:
{code:java}
[common.deliver] deliverBlocks -> WARN 07f Rejecting deliver for 172.20.0.1:42306 due to envelope validation error: envelope timestamp 2019-02-20 19:40:45.995 +0000 UTC is more than 15m0s apart from current server time 2019-02-19 15:03:37.2216412 +0000 UTC m=+64547.591463801{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typo in log message for implicit policies,FAB-6076,20678,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Sep/17 2:45 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Sep/17 12:40 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfof:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
networkLauncher setting: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE,FAB-6077,20679,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,08/Sep/17 4:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Sep/17 4:55 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,networkLauncher detects current working directory for dynamic setting of CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE ,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfon:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance cryptogen utility to persist a static Root CA configuration,FAB-6078,20680,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tongliofcary,nickgaski,nickgaski,08/Sep/17 5:38 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,01/Apr/18 4:50 AM,,,,,,,DUPLICATE,,,fabric-tools,,,,0,MembershipServices,,,,,,"There is currently a debilitating limitation with the cryptogen utility as it assumes the identity of a unique root CA with each use.  The outputted organizational CA root certs (`e.g. ca.org1.example.com-cert.pem`) are truly intermediate root certs.  As a result it is unfeasible to run the tool a second time to create certs and keys that are capable of interacting with an already bootstrapped fabric network

A simple objective is to use a basic crypto-config.yaml configuration to produce a set of crypto material for an orderer org and two peer orgs, and then bootstrap a network.  (The BYFN scenario).  Then use cryptogen a second time to produce crypto material for a third peer org and submit configuration updates to the ordering service to join this org (and by extension its peer(s)) to a channel and add the peer organization to the consortium definition at the system level. 

There should also be accompanying documentation specifying 1. what the various certs and keys are used for 2. which certs exist within the orderer configuration block and channel configuration blocks.  Among the community, there is still a big gap of knowledge regarding Fabric's MSP implementation and the accompanying hierarchy.",,denyeart,fredbi,mastersingh24,nickgaski,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7368,,,,,,,,,,,"21/Sep/17 8:24 AM;mastersingh24;crypto-config1.yaml;https://jira.hyperledger.org/secure/attachment/12132/crypto-config1.yaml","21/Sep/17 8:24 AM;mastersingh24;crypto-config2.yaml;https://jira.hyperledger.org/secure/attachment/12133/crypto-config2.yaml",,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfov:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,fredbi,mastersingh24,nickgaski,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Sep/17 1:08 AM;jimthematrix;Looking at this a bit more, it seems the ca cert generated by cryptogen is self-signed and as such is the root of the trust chain. so in theory you should be able to run cryptogen again to add more orgs, and as long as the new ca root certs get placed in the cacerts folder of an MSP configuration, they should take effect as expected. [~nickgaski] I think you mentioned this did not work as expected. can you describe the problem you saw?;;;","21/Sep/17 8:25 AM;mastersingh24;You can definitely create new orgs and and them into the mix.  The attached files show how you can start with the orderer org, org1 and org2 and then add org3 and org4 into the mix.;;;","21/Sep/17 10:00 PM;tongliofcary;[~mastersingh24], it is true that you can run crypto-gen again with another file which contains brand new orgs and their peers and orderers, the issue is after you generate a set of certs (say using crypto-config1.yml), then you set up your network using that set of certs, you run your network for a month or so, then you have new orgs want to join, when you create a new set of the certs, these certs have nothing to do with the orignal set of the certs, how will the new orgs joining in the existing network. I think that is really the issue, it is not that crypto-gen can not create a new set of certs. The current crypto-gen create self-signed root ca certs, they are not intermediate root ca certs. I have tried to run the tool and also studied the tool, I am pretty sure that it does not use a real root ca to create intermediate cas for each org. Thanks.

 ;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","01/Apr/18 4:50 AM;mastersingh24;This was actually already implemented in v1.1 via https://jira.hyperledger.org/browse/FAB-7368;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel mod_policy not set correctly for new channels,FAB-6080,20684,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Sep/17 11:32 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,05/Oct/17 8:32 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,configuration,,,,,,"For all channels created by the v1.0.x orderer, the Channel group's {{mod_policy}} was left unset.  Although the channel is functional, it is not possible to add config elements to the channel level.

Although it would be nice to simply change this behavior in v1.1, unfortunately, because the v1.0 orderers validate that the config computed for the new channel is correct, based on this flawed generation scheme, v1.1 orderers would accept the config as correct, but v1.0 would not.  This could allow the same channel name when referenced on different orderers to have different backing blockchains and is not acceptable.

Therefore, this fix must be gated behind a capability flag.  It is a simple change and so is a good candidate for first user of capabilities flags.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfpj:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch off `Resubmission` in Orderer for backwards compatibility,FAB-6081,20685,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,guoger,guoger,08/Sep/17 12:16 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Sep/17 8:12 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"we must NOT resubmit it if we still have v1.0.x orderer in the cluster, as they couldn't differentiate the resubmission and original tx. Therefore, we should add a switch {{Compatibility.Resubmission}} to turn on/off resubmission. Upgrade path should be:
- Partial OSNs are upgraded to v1.1, {{Resubmission}} is off be default
- v1.1 OSNs behave exactly the same as v1.0.x (still double-validate every tx, and no resubmission)
- Upgrade remaining v1.0.x OSNs to v1.1
- Re-configure the channel to turn on {{Resubmission}}

The switch {{Resubmission}} is added as part of {{channelconfig.Orderer}} interface and used in Kafka orderer. However, it's *hardcoded* to return {{false}} at the moment, and this story is to capture the remaining work, which is to have it return *real* value parsed.",,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfpr:",,,,,,,,,,,,,,,,,,,,,,guoger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 8:12 PM;guoger;Close the issue in favor of FAB-5720;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix spelling error in custom_tx_processor.go,FAB-6082,20686,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,cbl,Jing.Cao,Jing.Cao,08/Sep/17 2:44 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,22/Sep/17 10:33 AM,v1.0.2,,,,,,v1.1.0,,,,,,,0,,,,,,,"Fix spelling error in core/ledger/customtx/custom_tx_processor.go at line 26,modify 'comaptibility' to 'compatibility'.",,cbl,Jing.Cao,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfpz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,cbl,Jing.Cao,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Sep/17 3:54 PM;cbl;Will also fix other misspelling in custom_tx_processor.go;;;","15/Sep/17 5:00 PM;cbl;https://gerrit.hyperledger.org/r/#/c/13409/;;;","01/Oct/17 7:04 PM;mastersingh24;Not going to backport;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not recognising platform specific tar ball package,FAB-6083,20687,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,sdcho,sdcho,08/Sep/17 4:05 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Dec/17 8:52 PM,,,,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,,"After cloning the fabric-sample, and try downloading a platform specific binaries by executing the following command from PowerShell

{color:#205081}*curl -sSL [https://goo.gl/Gci9ZX] |* {color}{color:#205081}*bash*{color}

This command does not download the tar ball on windows 10, which also has CygWin installed.

This is due to the script expecting *mingw64_nt.** in the string returned by *uname -s* on line 9.

This needs to be changed to as follows for the machine with *CygWin(x64)* installed.

{color:#d04437}*Before:*{color} export ARCH=$(echo ""$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's/*mingw64_nt.**/windows/')$(uname -m | sed 's/x86_64/amd64/g')"" | awk '\{print tolower($0)}')
 *{color:#205081}After:{color}* export ARCH=$(echo ""$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's/*cygwin_nt-10.0*/windows/')$(uname -m | sed 's/x86_64/amd64/g')"" | awk '\{print tolower($0)}')

 ",,denyeart,lehors,sdcho,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfq7:",,,,,,,,,,,,,,,,,,,,,,denyeart,lehors,sdcho,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 1:04 PM;sdcho;For windows 10 with powershell, the mingw64 above need to be changed to mingw32 instead.

{color:#d04437}*Before:*{color} export ARCH=$(echo ""$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's/*mingw64_nt.**/windows/')$(uname -m | sed 's/x86_64/amd64/g')"" | awk '\{print tolower($0)}')
 *{color:#205081}After:{color}* export ARCH=$(echo ""$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's/*{color:#ff0000}mingw32_nt{color}.**/windows/')$(uname -m | sed 's/x86_64/amd64/g')"" | awk '\{print tolower($0)}');;;","27/Nov/17 1:35 PM;denyeart;[~lehors] Do you have advice on this one?;;;","27/Nov/17 2:34 PM;sdcho;Please refer to the latest comment.

It looks like the PowerShell on Windows 10 (64bit) still identified as *{color:#d04437}MINGW32_NT-6.2{color}*

{color:#333333}So the script should be changed to reflect that as in the above comment made by me on 28/Sep/2017.
{color};;;","27/Nov/17 9:48 PM;lehors;[~sdcho] could you please describe your environment a bit more? I'm confused as to how you make use of Cygwin if you're using Windows PowerShell. You're not using Cygwin's bash? If not, have you tried using it?

And you could you please give us the output of uname -a?

Thanks.;;;","27/Nov/17 10:36 PM;sdcho;Sorry for the confusion.

Please ignore about the comment using Cygwin.

Initially I tried use Cygwin and succeeded the downloading by changing as described earlier.

But further investigation shows Windows 10 PowerShell returns *{color:#d04437}MINGW32_NT-6.2{color}*{color:#333333}.{color}

{color:#333333}So I think it should be better using Windows 10's native environment rather than the Cygwin's emulated environment.{color}

{color:#d04437}*So please disregard the comment about using Cygwin shell.{color:#205081} Instead using PowerShell.{color}*{color};;;","27/Nov/17 11:14 PM;sdcho;Output of uname -a in PowerShell:

MINGW32_NT-6.2 MYHOMEPC 1.0.12(0.46/3/2) 2012-07-05 14:56 i686 unknown;;;","27/Nov/17 11:28 PM;lehors;Where does your uname command come from?

And which version of the PowerShell are you running? 32 or 64?

Thanks.

 ;;;","28/Nov/17 12:13 AM;sdcho;The uname I am using is from the GIT installation {color:#d04437}*C:/Program Files (x86)/Git/bin/uname.exe*{color:#333333}, w{color}{color}{color:#d04437}{color:#333333}hich is 32 bit.{color}{color}

{color:#d04437}{color:#333333}This may explain why my system returns the *{color:#d04437}MINGW32_NT-6.2{color}* regardless of the PowerShell version whether 32 bit or 64 bit.{color}{color}

 

 ;;;","28/Nov/17 12:20 AM;sdcho;I installed 64 bit version of Git (v2.15.0) just now and rerun the uname -a command from the git bash terminal and got following result for {color:#205081}*uname -a*{color} command:

{color:#14892c}*MINGW64_NT-10.0 MyHomePC 2.9.0(0.318/5/3) 2017-10-05 15:05 x86_64 Msys*{color}

{color:#333333}So the original script is correct but need to be indicated that there is another requirement to get the correct System properties such as the result of the {color:#205081}*uname -a*{color} command.{color};;;","28/Nov/17 12:32 AM;lehors;Ok, that makes sense. There are so many possible setups on Windows that it's a bit tricky to get the script do the right thing for all cases. That's why I wanted to understand exactly your setup before changing anything.

Thanks.

 ;;;","28/Nov/17 1:21 AM;lehors;I just submitted a change to the doc to clarify:

https://gerrit.hyperledger.org/r/#/c/15727/

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add configtxgen support for capabilities,FAB-6087,20705,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,09/Sep/17 3:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,09/Jan/18 1:17 AM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfuf:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capability flag for v1.1 peer,FAB-6088,20706,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,09/Sep/17 3:31 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Oct/17 5:23 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,This flag will gate the new chaincode lifecycle management.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfun:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API to retrieve info of submitter of the transaction ,FAB-6089,20707,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,aambati,aambati,09/Sep/17 4:06 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,18/Oct/17 11:33 PM,,,,,,,v1.1.0-preview,,,fabric-peer,,,,1,Release-planning-1.1,,,,,,"Currently chaincode developers have no easy way of retrieving information about the invoker/submitter of a transaction. The stub that is passed to the chaincode Invoke function has GetCreator function that return bytes representing the invoker. The chaincode needs to Unmarshal the bytes, read the cert and extract info from it. 

The goal is to provide a chaincode API which allows chaincode to implement access control.  We want to make these APIs as independent of MSP type as possible, while still allowing value-add for certain types of MSPs.

{code}
	// GetID returns the ID associated with the invoking identity.  This ID
	// is guaranteed to be unique within the MSP.
        // Supported for all MSP types.
	GetID() (string, error)

	// Return the MSP ID of the client
        // Supported for all MSP types.
	GetMSPID() (string, error)

	// GetAttributeValue returns the value of the client's attribute named `attrName`.
	// If the client possesses the attribute, `found` is true and `value` equals the
	// value of the attribute.
	// If the client does not possess the attribute, `found` is false and `value`
	// equals """".
        // Supported for all MSP types, though only fabric CA will likely issue certificates with the attributes extension.
	GetAttributeValue(attrName string) (value string, found bool, err error)

	// AssertAttributeValue verifies that the client has the attribute named `attrName`
	// with a value of `attrValue`; otherwise, an error is returned.
        // Supported for all MSP types, though only fabric CA will likely issue certificates with the attributes extension.
	AssertAttributeValue(attrName, attrValue string) error

	// GetX509Certificate returns the X509 certificate associated with the client,
	// or nil if it was not identified by an X509 certificate.
        // Supported for only the default MSP type, which is based on X509.
	GetX509Certificate() (*x509.Certificate, error)
{code}

For more info, pls see https://docs.google.com/document/d/1GP5tcN0oK9Zewed9h5pLiM2BowWPhtgFUGXEDKjeGGo/edit#",,aambati,nitingaur,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-539,FAB-6441,FAB-6753,,,,,,,,,,,,,FAB-6537,FAB-9081,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfuv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,aambati,nitingaur,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Sep/17 4:08 AM;aambati;https://gerrit.hyperledger.org/r/c/13265/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: Behave framework---Update bootstrap peers,FAB-6090,20713,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,09/Sep/17 2:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 11:31 PM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"In the docker compose files in Behave, current Bootstrap peer setup needs to be updated so that each peer points to the other peer as bootsrtap, this way if the original bootstrap goes down and comes back up, it will come to know about other peers.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfw7:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build with Go 1.9 by default,FAB-6091,20714,19479,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,10/Sep/17 7:41 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:39 AM,,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,"The final step is moving to Go 1.9 is to actually build with Go 1.9.  In order to do this, we just need to move to a baseimage which uses Go 1.9",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfwf:",,,,,,,,,,1.0,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Sep/17 7:53 PM;mastersingh24;https://gerrit.hyperledger.org/r/13303;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip error: PKIID wasn't found,FAB-6092,20715,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,smithbk,smithbk,11/Sep/17 4:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 6:30 AM,,,,,,,WON'T FIX,,,fabric-gossip,,,,0,,,,,,,"I am writing a fabric-ca sample and seeing the following errors and I can't figure out what I may be doing wrong.  Please help.

{code}
^[[33m2017-09-08 20:44:35.630 UTC [gossip/gossip] handleMessage -> WARN 418^[[0m Message GossipMessage: tag:EMPTY alive_msg:<membership:<endpoint:""peer2-org1:7051"" pki_id:""\010\222'\367\354\207\273tSK\370\377\260\245a(?\327+rK\370\000X&\213\227x~Hb\357"" > timestamp:<inc_num:1504903455606434130 seq_num:16 > > , Envelope: 71 bytes, Signature: 71 bytes isn't valid
^[[36m2017-09-08 20:44:38.807 UTC [gossip/channel] handleStateInfSnapshot -> DEBU 419^[[0m Channel mychannel : Couldn't find org identity of peer Äí?Ä^O^T<8a>lÃ¿à<9f>x<96>g^K¶Ëê^C^HL1^B<84>UU¤¨ø<88>^Z message sent from ÔqFîÞ¡9=^OQS¡ýùµ^G<8c>Pï     yå?3Ä¡6^[èÏÊú
^[[33m2017-09-08 20:44:40.380 UTC [gossip/gossip] handleMessage -> WARN 41a^[[0m Message GossipMessage: tag:EMPTY alive_msg:<membership:<endpoint:""peer1-org2:7051"" pki_id:""\304\355?\304\017\024\212l\303\277\340\237x\226g\013\266\313\352\003\010L1\002\204UU\244\250\370\210\032"" > timestamp:<inc_num:1504903455361523350 seq_num:22 > > , Envelope: 71 bytes, Signature: 70 bytes isn't valid
{code}

To reproduce, you have to deal with 3 repos (fabric, fabric-ca, and fabric-samples) as shown below.
{code}
1) Build *fabric* docker images from master if not already done.
     # cd $GOPATH/src/github.com/hyperledger/fabric
     # make docker

2) Build *fabric-ca* docker images
    # git clone github.com/hyperledger/fabric-ca and cd to fabric-ca
    # checkout https://gerrit.hyperledger.org/r/#/c/13195/
    # export USE_FABRIC_LATEST=true
    # make docker

3) Run the sample from fabric-samples repo:
   # Checkout https://gerrit.hyperledger.org/r/#/c/13213/ to your fabric-samples repo
   # cd to fabric-samples/fabric-ca
   # Run the ""start.sh"" script
{code}

After running the start script, it will eventually hang (and finally timeout) when trying to instantiate chaincode on peer2-org2.  The output will look similar to the following:
{code}
##### 2017-09-10 18:12:54 Instantiating chaincode on peer2-org2 ... #####
^[[36m2017-09-10 18:12:54.660 UTC [msp] GetLocalMSP -> DEBU 001^[[0m Returning existing local MSP
^[[36m2017-09-10 18:12:54.660 UTC [msp] GetDefaultSigningIdentity -> DEBU 002^[[0m Obtaining default signing identity
2017-09-10 18:12:54.666 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003^[[0m Using default escc
2017-09-10 18:12:54.666 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004^[[0m Using default vscc
^[[36m2017-09-10 18:12:54.668 UTC [msp/identity] Sign -> DEBU 005^[[0m Sign: plaintext: 0A8B080A6708031A0C08A681D6CD0510...324D53500A04657363630A0476736363
^[[36m2017-09-10 18:12:54.668 UTC [msp/identity] Sign -> DEBU 006^[[0m Sign: digest: 51ECE4574479C70F1C00AC65B0A71B7DD092CC51B5D042A5A4FE58049916B637
{code}

You can control-C out of this and then cd to the *data/logs* where you will see the logs from all of the containers.  The logs will contain the environment variables that were set when starting the peer.  For example, in data/logs/peer2-org2.log, you'll see the following, which is also the log file that contains the gossip errors mentioned previously.
{code}
##### 2017-09-10 18:12:46 Starting peer 'peer2-org2' with MSP at '/opt/gopath/src/github.com/hyperledger/fabric/peer/msp' #####
CORE_PEER_TLS_ROOTCERT_FILE=/data/org2-ca-chain.pem
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/tls/server.key
CORE_PEER_GOSSIP_ORGLEADER=false
CORE_PEER_PROFILE_ENABLED=true
CORE_PEER_LOCALMSPID=org2MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/msp
CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=net_fabric-ca
CORE_PEER_ID=peer2-org2
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2-org2:7051
CORE_PEER_ADDRESS=peer2-org2:7051
CORE_PEER_GOSSIP_USELEADERELECTION=true
CORE_PEER_GOSSIP_BOOTSTRAP=peer2-org2:7051
{code}

Note: In this sample, org0 is the orderer's org, and org1 and org2 are peer orgs.

I also added an attachment data.zip which contains my resulting data directory.
You may be able to tell from just looking at the logs.
The data directory also contains the configtx.yaml and other artifacts.",,n-horiguchi,smithbk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 4:33 AM;smithbk;data.zip;https://jira.hyperledger.org/secure/attachment/12050/data.zip",,,,,,,,,,,,,,,,,,,,,,"1|hzyfwn:",,,,,,,,,,,,,,,,,,,,,,n-horiguchi,smithbk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 4:00 PM;yacovm;{quote}Created docker-compose.yml
Creating docker containers
Pulling setup (hyperledger/fabric-ca-tools:latest)...
Pulling repository docker.io/hyperledger/fabric-ca-tools
ERROR: Error: image hyperledger/fabric-ca-tools:latest not found
{quote};;;","11/Sep/17 4:22 PM;yacovm;When I run the e2e_cli I get these errors too:
{code}2017-09-11 07:12:21.319 UTC [gossip/gossip] handleMessage -> WARN 3ba Message GossipMessage: tag:EMPTY alive_msg:<membership:<endpoint:""peer1.org1.example.com:7051"" pki_id:""L\t2\256x\n\252\n\034\027wC\3468\336\236\031\223\022B^G%hX\324\207\325\350\177\271\345"" > timestamp:<inc_num:1505113916294937712 seq_num:20 > > , Envelope: 83 bytes, Signature: 70 bytes isn't valid
2017-09-11 07:12:23.693 UTC [gossip/gossip] validateMsg -> WARN 45e StateInfo message GossipMessage: tag:CHAN_OR_ORG state_info:<metadata:""\000\000\000\000\000\000\000\002"" timestamp:<inc_num:11651379494838206464 seq_num:1505113943180744558 > pki_id:""L\t2\256x\n\252\n\034\027wC\3468\336\236\031\223\022B^G%hX\324\207\325\350\177\271\345"" channel_MAC:""\321'\021w>\341{\362\227\272\254\376\017\376=\326\3469\003\0340\260\277\006n\033\335\013+\322\022-"" > , Envelope: 105 bytes, Signature: 71 bytes is found invalid: PKIID wasn't found
2017-09-11 07:12:23.693 UTC [gossip/gossip] handleMessage -> WARN 45f Message GossipMessage: tag:CHAN_OR_ORG state_info:<metadata:""\000\000\000\000\000\000\000\002"" timestamp:<inc_num:11651379494838206464 seq_num:1505113943180744558 > pki_id:""L\t2\256x\n\252\n\034\027wC\3468\336\236\031\223\022B^G%hX\324\207\325\350\177\271\345"" channel_MAC:""\321'\021w>\341{\362\227\272\254\376\017\376=\326\3469\003\0340\260\277\006n\033\335\013+\322\022-"" > , Envelope: 105 bytes, Signature: 71 bytes isn't valid
2017-09-11 07:12:23.693 UTC [gossip/gossip] validateMsg -> WARN 460 StateInfo message GossipMessage: tag:CHAN_OR_ORG state_info:<metadata:""\000\000\000\000\000\000\000\002"" timestamp:<inc_num:11651379494838206464 seq_num:1505113943180744558 > pki_id:""L\t2\256x\n\252\n\034\027wC\3468\336\236\031\223\022B^G%hX\324\207\325\350\177\271\345"" channel_MAC:""\321'\021w>\341{\362\227\272\254\376\017\376=\326\3469\003\0340\260\277\006n\033\335\013+\322\022-"" > , Envelope: 105 bytes, Signature: 71 bytes is found invalid: PKIID wasn't found
2017-09-11 07:12:23.693 UTC [gossip/gossip] handleMessage -> WARN 461 Message GossipMessage: tag:CHAN_OR_ORG state_info:<metadata:""\000\000\000\000\000\000\000\002"" timestamp:<inc_num:11651379494838206464 seq_num:1505113943180744558 > pki_id:""L\t2\256x\n\252\n\034\027wC\3468\336\236\031\223\022B^G%hX\324\207\325\350\177\271\345"" channel_MAC:""\321'\021w>\341{\362\227\272\254\376\017\376=\326\3469\003\0340\260\277\006n\033\335\013+\322\022-"" > , Envelope: 105 bytes, Signature: 71 bytes isn't valid
{code}

However, they only appear once and they don't appear periodically.
It's expected because identity replication in gossip is asynchronous and takes time.
If a peer receives a message signed by a peer it doesn't know about (yet) it can't verify the message and prints this warning. 

Do these errors appear constantly in your setup (once in a while) or just once? If it's constantly - we have a problem. ;;;","11/Sep/17 4:26 PM;smithbk;Hmm ... step #2 in the instructions should build that image.  After doing the following, what does ""docker images"" show?

{code}
2) Build *fabric-ca* docker images
    # git clone github.com/hyperledger/fabric-ca and cd to fabric-ca
    # checkout https://gerrit.hyperledger.org/r/#/c/13195/
    # export USE_FABRIC_LATEST=true
    # make docker
{code};;;","11/Sep/17 4:38 PM;smithbk;The real problem I'm trying to solve is that chaincode instantiation fails and these are the only errors I see other than an eventual timeout.  I assumed the timeout was due to these gossip errors, but maybe I'm wrong.  See the timeout at the end.

{code}
^[[33m2017-09-10 18:13:41.223 UTC [gossip/gossip] handleMessage -> WARN 436^[[0m Message GossipMessage: tag:EMPTY alive_msg:<membership:<endpoint:""peer2-org1:7051"" pki_id:""\242\355\225\366\321\177\354\275&E\351\210\255*w\343\205\373/t#>\333&2\242H\n\313\227\232\\"" > timestamp:<inc_num:1505067166173445180 seq_num:49 > > , Envelope: 71 bytes, Signature: 70 bytes isn't valid
^[[36m2017-09-10 18:13:41.714 UTC [gossip/channel] handleStateInfSnapshot -> DEBU 437^[[0m Channel mychannel : Couldn't find org identity of peer ¢í<95>öÑ^?ì½&Eé<88>­*wã<85>û/t#>Û&2¢H
Ë<97><9a>\ message sent from m<80>*^G<8d>³c¸5Ö5¤j;ô^U³m9<89>^W<88><84>^_c@ãí<8d>Ö¡4
^[[36m2017-09-10 18:13:41.716 UTC [gossip/channel] handleStateInfSnapshot -> DEBU 438^[[0m Channel mychannel : Couldn't find org identity of peer ¢í<95>öÑ^?ì½&Eé<88>­*wã<85>û/t#>Û&2¢H
Ë<97><9a>\ message sent from èÌ@MtÕÛ¡üõKrÜ'ïBíæjT«)kN<88>7Ú£w.Zv
^[[33m2017-09-10 18:13:43.760 UTC [gossip/state] handleStateResponse -> WARN 439^[[0m Payload with sequence number 2 was received earlier
^[[36m2017-09-10 18:13:45.715 UTC [gossip/channel] handleStateInfSnapshot -> DEBU 43a^[[0m Channel mychannel : Couldn't find org identity of peer ¢í<95>öÑ^?ì½&Eé<88>­*wã<85>û/t#>Û&2¢H
Ë<97><9a>\ message sent from m<80>*^G<8d>³c¸5Ö5¤j;ô^U³m9<89>^W<88><84>^_c@ãí<8d>Ö¡4
^[[36m2017-09-10 18:13:45.718 UTC [gossip/channel] handleStateInfSnapshot -> DEBU 43b^[[0m Channel mychannel : Couldn't find org identity of peer ¢í<95>öÑ^?ì½&Eé<88>­*wã<85>û/t#>Û&2¢H
Ë<97><9a>\ message sent from èÌ@MtÕÛ¡üõKrÜ'ïBíæjT«)kN<88>7Ú£w.Zv
^[[33m2017-09-10 18:13:53.767 UTC [gossip/state] handleStateResponse -> WARN 43c^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:14:03.773 UTC [gossip/state] handleStateResponse -> WARN 43d^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:14:13.782 UTC [gossip/state] handleStateResponse -> WARN 43e^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:14:23.789 UTC [gossip/state] handleStateResponse -> WARN 43f^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:14:33.797 UTC [gossip/state] handleStateResponse -> WARN 440^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:14:43.804 UTC [gossip/state] handleStateResponse -> WARN 441^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:14:53.812 UTC [gossip/state] handleStateResponse -> WARN 442^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:15:03.818 UTC [gossip/state] handleStateResponse -> WARN 443^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:15:13.824 UTC [gossip/state] handleStateResponse -> WARN 444^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:15:23.832 UTC [gossip/state] handleStateResponse -> WARN 445^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:15:33.839 UTC [gossip/state] handleStateResponse -> WARN 446^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:15:43.338 UTC [gossip/state] handleStateResponse -> WARN 447^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:15:53.344 UTC [gossip/state] handleStateResponse -> WARN 448^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:16:03.349 UTC [gossip/state] handleStateResponse -> WARN 449^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:16:13.355 UTC [gossip/state] handleStateResponse -> WARN 44a^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:16:23.365 UTC [gossip/state] handleStateResponse -> WARN 44b^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:16:33.372 UTC [gossip/state] handleStateResponse -> WARN 44c^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:16:43.376 UTC [gossip/state] handleStateResponse -> WARN 44d^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:16:53.383 UTC [gossip/state] handleStateResponse -> WARN 44e^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:17:03.390 UTC [gossip/state] handleStateResponse -> WARN 44f^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:17:13.396 UTC [gossip/state] handleStateResponse -> WARN 450^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:17:23.403 UTC [gossip/state] handleStateResponse -> WARN 451^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:17:33.411 UTC [gossip/state] handleStateResponse -> WARN 452^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:17:43.417 UTC [gossip/state] handleStateResponse -> WARN 453^[[0m Payload with sequence number 2 was received earlier
^[[33m2017-09-10 18:17:53.422 UTC [gossip/state] handleStateResponse -> WARN 454^[[0m Payload with sequence number 2 was received earlier
^[[36m2017-09-10 18:17:54.894 UTC [chaincode] launchAndWaitForRegister -> DEBU 455^[[0m stopping due to error while launching Timeout expired while starting chaincode mycc:1.0(networkid:dev,peerid:peer2-org2,tx:c6de4530ae1216b0661f066cfc24916adf4b092038d1e49e8f203ed625a5f4dd)
{code};;;","11/Sep/17 4:42 PM;smithbk;And I see the following errors later in logs:
{code}
^[[33m2017-09-10 18:32:25.359 UTC [gossip/comm] sendToEndpoint -> WARN 514^[[0m Failed obtaining connection for peer2-org1:7051, PKIid:[162 237 149 246 209 127 236 189 38 69 233 136 173 42 119 227 133 251 47 116 35 62 219 38 50 162 72 10 203 151 154 92] reason: context deadline exceeded
^[[33m2017-09-10 18:32:25.359 UTC [gossip/discovery] expireDeadMembers -> WARN 515^[[0m Entering [[162 237 149 246 209 127 236 189 38 69 233 136 173 42 119 227 133 251 47 116 35 62 219 38 50 162 72 10 203 151 154 92]]
^[[33m2017-09-10 18:32:25.359 UTC [gossip/discovery] expireDeadMembers -> WARN 516^[[0m Closing connection to Endpoint: peer2-org1:7051, InternalEndpoint: , PKI-ID: [162 237 149 246 209 127 236 189 38 69 233 136 173 42 119 227 133 251 47 116 35 62 219 38 50 162 72 10 203 151 154 92], Metadata: []
^[[33m2017-09-10 18:32:25.359 UTC [gossip/discovery] expireDeadMembers -> WARN 517^[[0m Exiting
^[[33m2017-09-10 18:32:28.360 UTC [gossip/comm] sendToEndpoint -> WARN 518^[[0m Failed obtaining connection for peer2-org1:7051, PKIid:[162 237 149 246 209 127 236 189 38 69 233 136 173 42 119 227 133 251 47 116 35 62 219 38 50 162 72 10 203 151 154 92] reason: context deadline exceeded
^[[33m2017-09-10 18:32:31.361 UTC [gossip/comm] sendToEndpoint -> WARN 519^[[0m Failed obtaining connection for peer2-org1:7051, PKIid:[162 237 149 246 209 127 236 189 38 69 233 136 173 42 119 227 133 251 47 116 35 62 219 38 50 162 72 10 203 151 154 92] reason: context deadline exceeded
^[[33m2017-09-10 18:32:34.361 UTC [gossip/comm] sendToEndpoint -> WARN 51a^[[0m Failed obtaining connection for peer2-org1:7051, PKIid:[162 237 149 246 209 127 236 189 38 69 233 136 173 42 119 227 133 251 47 116 35 62 219 38 50 162 72 10 203 151 154 92] reason: context deadline exceeded
^[[33m2017-09-10 19:18:34.457 UTC [gossip/discovery] getDeadMembers -> WARN 51b^[[0m Haven't heard from [109 128 42 7 141 179 99 184 53 214 53 164 106 59 244 21 179 109 57 137 23 136 132 31 99 64 227 237 141 214 161 52] for 1m29.871687032s
^[[33m2017-09-10 19:18:34.458 UTC [gossip/discovery] getDeadMembers -> WARN 51c^[[0m Haven't heard from [232 204 64 77 116 213 219 161 252 245 75 114 220 39 239 66 237 230 106 84 171 41 107 78 136 55 218 163 119 46 90 118] for 1m29.869761927s
^[[33m2017-09-10 19:18:34.458 UTC [gossip/discovery] expireDeadMembers -> WARN 51d^[[0m Entering [[109 128 42 7 141 179 99 184 53 214 53 164 106 59 244 21 179 109 57 137 23 136 132 31 99 64 227 237 141 214 161 52] [232 204 64 77 116 213 219 161 252 245 75 114 220 39 239 66 237 230 106 84 171 41 107 78 136 55 218 163 119 46 90 118]]
^[[33m2017-09-10 19:18:34.458 UTC [gossip/discovery] expireDeadMembers -> WARN 51e^[[0m Closing connection to Endpoint: peer1-org1:7051, InternalEndpoint: , PKI-ID: [109 128 42 7 141 179 99 184 53 214 53 164 106 59 244 21 179 109 57 137 23 136 132 31 99 64 227 237 141 214 161 52], Metadata: []
^[[33m2017-09-10 19:18:34.458 UTC [gossip/discovery] expireDeadMembers -> WARN 51f^[[0m Closing connection to Endpoint: peer1-org2:7051, InternalEndpoint: peer1-org2:7051, PKI-ID: [232 204 64 77 116 213 219 161 252 245 75 114 220 39 239 66 237 230 106 84 171 41 107 78 136 55 218 163 119 46 90 118], Metadata: []
^[[33m2017-09-10 19:18:34.458 UTC [gossip/discovery] expireDeadMembers -> WARN 520^[[0m Exiting
{code};;;","11/Sep/17 6:29 PM;yacovm;It seems your setup isn't good:
{code}
docker logs peer2-org1 2>&1 | less -R
{code}
Searching for WARN I get:
{code}
2017-09-11 08:36:08.608 UTC [gossip/discovery] func1 -> WARN 19c Could not connect to {peer1-org1:7051 [] [] peer1-org1:7051} : x509: certificate signed by unknown authority
{code}

It seems there is an error in the setup. Also I didn't see any environment variables when I did docker inspect other than:
{code}
            ""Env"": [
                ""PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"",
                ""FABRIC_CFG_PATH=/etc/hyperledger/fabric""
            ],
{code}

What about the localMspId and mspConfigPath ?;;;","12/Sep/17 5:34 AM;smithbk;The env vars are set in a script but I also display them so they appear in the logs.
For example, see the following in data/logs/peer2-org1.log:
{code}
##### 2017-09-10 18:12:45 Starting peer 'peer2-org1' with MSP at '/opt/gopath/src/github.com/hyperledger/fabric/peer/msp' #####
CORE_PEER_TLS_ROOTCERT_FILE=/data/org1-ca-chain.pem
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/tls/server.key
CORE_PEER_GOSSIP_ORGLEADER=false
CORE_PEER_PROFILE_ENABLED=true
CORE_PEER_LOCALMSPID=org1MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/msp
CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=net_fabric-ca
CORE_PEER_ID=peer2-org1
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2-org1:7051
CORE_PEER_ADDRESS=peer2-org1:7051
CORE_PEER_GOSSIP_USELEADERELECTION=true
CORE_PEER_GOSSIP_BOOTSTRAP=peer1-org1:7051
{code}

So when a non-anchor peer tries to connect to it's anchor peer (which is what appears to be happening above), where does the non-anchor peer get the TLS trusted certificate to use for the client side of the TLS connection?  I assume this is from the local MSP's tlscacerts and tlsintermediatecerts directories.  And if you could point me to the code that does that, it would be helpful.  I assume it will handle tlsintermediatecerts.;;;","12/Sep/17 3:01 PM;yacovm;{quote}So when a non-anchor peer tries to connect to it's anchor peer (which is what appears to be happening above), where does the non-anchor peer get the TLS trusted certificate to use for the client side of the TLS connection?{quote}

If the the 2 peers are from different orgs, then it uses the channel's genesis block.
Else - they are in the same org, and then it uses the local MSP's cacerts.

However from what I recall - this happens at the beginning so it's not an anchor peer, but a bootstrap peer (the code path that connects to both of them is the same).
This implies that the local MSPs aren't setup right. ;;;","12/Sep/17 7:16 PM;smithbk;I assume you meant it uses the ""local MSP's tlscacerts and tlsintermediatecerts"" and not the ""local MSP's cacerts"" to connect to a bootstrap peer.  Is this correct?;;;","12/Sep/17 7:20 PM;yacovm;yeah. ;;;","14/Sep/17 10:36 AM;smithbk;The previous issue is fixed but now hitting this.  Look familiar or any ideas?  Where exactly does the PKIID value originate and what does that indicate may be wrong from a configuration perspective?

{code}
^[[33m2017-09-14 00:29:19.768 UTC [gossip/gossip] validateMsg -> WARN 417^[[0m StateInfo message GossipMessage: tag:CHAN_OR_ORG state_info:<metadata:""\000\000\000\000\000\000\000\002"" timestamp:<inc_num:11651379494838206464 seq_num:1505348957740534144 > pki_id:""\206\264\344\343\037\357\007\rZ\261\313\020y\221D\034\331\205g\265\303\233L\341\357\351*{\001C\275@"" channel_MAC:""\263\017u\206=\330\340\022]\005K\261O\241\""M\377\233\360\345\212\025\351\020\r*\260\251Q\177tv"" > , Envelope: 105 bytes, Signature: 70 bytes is found invalid: PKIID wasn't found
github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Get
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:149
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateStateInfoMsg
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1167
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateMsg
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:413
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).handleMessage
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:335
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).acceptMessages
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:316
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:2086
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateStateInfoMsg
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1169
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateMsg
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:413
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).handleMessage
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:335
github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).acceptMessages
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:316
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:2086
{code};;;","14/Sep/17 9:28 PM;yacovm;{quote}The previous issue is fixed but now hitting this. Look familiar or any ideas? Where exactly does the PKIID value originate and what does that indicate may be wrong from a configuration perspective?{quote}

the PKI-ID is a representation of the certificate and MSP-ID in a minimized form (hashed). 

This warning happens when you get a message that is signed by someone who's certificate you don't have yet. ;;;","14/Sep/17 10:31 PM;yacovm;I compiled your TLS fix and ran the stuff locally:
*docker logs peer1-org1 2>&1 | grep handleMessage | grep ""state_info_pull_req"" | less -R*
{code}
2017-09-14 13:27:34.663 UTC [gossip/gossip] handleMessage -> DEBU 71f9 Entering, 172.20.0.11:35466 [120 251 148 194 77 163 134 253 185 23 78 199 102 2 202 1 248 30 195 137 210 198 244 248 202 9 191 61 42 70 108 146] sent us GossipMessage: tag:CHAN_OR_ORG state_info_pull_req:<channel_MAC:""J\340\375\223\333e\207jj~7.d\212\356\016\003\230\316\026*\240\201\246\320o\364\313_@\200\223"" > , Envelope: 39 bytes, Signature: 0 bytes
2017-09-14 13:27:38.049 UTC [gossip/gossip] handleMessage -> DEBU 739d Entering, 172.20.0.13:7051 [155 246 100 223 180 182 74 172 98 195 198 117 236 235 67 209 36 103 16 222 152 173 185 103 30 205 166 181 133 247 103 94] sent us GossipMessage: tag:CHAN_OR_ORG state_info_pull_req:<channel_MAC:""\235\231\273\03306#&\203_\375\036R\002Z\245\270w\232\363\333\2033\033\310\006\273v\240\223\253!"" > , Envelope: 39 bytes, Signature: 0 bytes
2017-09-14 13:27:38.357 UTC [gossip/gossip] handleMessage -> DEBU 73a0 Entering, 172.20.0.10:7051 [63 220 180 239 242 247 96 167 177 230 60 77 182 78 73 248 10 213 125 184 62 207 163 224 192 154 29 190 13 131 9 21] sent us GossipMessage: tag:CHAN_OR_ORG state_info_pull_req:<channel_MAC:""\332\353\366\210z\342\006\246\313G\336\263i\330gBL\002\246B\0207\336\254\223\203{|:\346K\320"" > , Envelope: 39 bytes, Signature: 0 bytes
{code}

A similar output is in *peer2-org1* and in for org2. 

So it looks like the certificate replication works as expected, because if the peer sent ""us"" a request it means it verified our certificate. ;;;","14/Sep/17 10:34 PM;yacovm;The instantiate doesn't work because:

{code}
2017-09-14 13:33:39.282 UTC [shim] userChaincodeStreamGetter -> ERRO 001 Error trying to connect to local peer: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""rca-org2-admin"")
Error starting Simple chaincode: Error trying to connect to local peer: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""rca-org2-admin"")

{code}
;;;","05/Oct/17 1:19 AM;yacovm;[~smithbk]  I believe we can close this, right?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Kafka documentation,FAB-6093,20716,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,11/Sep/17 4:58 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,27/Sep/17 2:23 AM,v1.0.2,,,,,,v1.1.0,,,fabric-docs,,,,0,kafka,Release-planning-1.1,,,,,"There's a couple of issues with the existing Kafka documentation.
 # Every mention of Fabric is actually a mention of Hyperledger Fabric. This always felt wrong, and I'm glad to find out that it is actually redundant. See the first paragraph here: [https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-September/001086.html]
 # Most importantly, the formatting is way off, and for the life of me I cannot figure out the right way to get indentations and proper list numbering. (""reStructuredText is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser system."" Riiiight.)",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfwv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/17 4:58 AM;kchristidis;I'll take a stab at it, but for point 2 I'll need [~nickgaski]'s help.;;;","11/Sep/17 5:46 AM;kchristidis;Took some trial & error but I think I got it: https://gerrit.hyperledger.org/r/c/13305/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Insert default Kafka version in config,FAB-6094,20717,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,11/Sep/17 5:55 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,13/Sep/17 10:20 PM,v1.0.2,,,,,,v1.1.0,,,fabric-orderer,,,,0,Release-planning-1.1,,,,,,"# In accordance to what we do for all other default values, the default Kafka version should be filled out in the orderer.yaml config files.
 # The default value for Kafka was actually set to 0.10.1 even though our images use 0.10.2. We should change this to 0.10.2.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfx3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/17 6:05 AM;kchristidis;https://gerrit.hyperledger.org/r/c/13307/;;;","13/Sep/17 10:20 PM;Clayton Sims;CR merged.   marking done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce additional Kafka profiles,FAB-6095,20718,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,11/Sep/17 6:08 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,14/Sep/17 1:09 AM,v1.0.2,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,Release-planning-1.1,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfxb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/17 6:27 AM;kchristidis;https://gerrit.hyperledger.org/r/c/13309/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify benchmark test code for Kafka case,FAB-6096,20719,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,11/Sep/17 6:31 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,17/Sep/17 2:17 AM,v1.0.2,,,,,,v1.1.0,,,fabric-orderer,,,,0,Release-planning-1.1,,,,,,"# Move to using profiles for all tests, instead of relying on just setting the CONFIGTX_ORDERER_ORDERERTYPE ENV var
 # Switch to 3-broker default for Kafka tests
 # Add sarama verbosity flag in envvars map for easier debugging
 # Fix comments and log statements",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfxj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Sep/17 7:04 AM;kchristidis;https://gerrit.hyperledger.org/r/c/13311/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for experimental build tag,FAB-6099,20724,20590,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,11/Sep/17 6:34 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 6:28 AM,,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,"Will do the following:

- add an environmental variable to the Makefile
- if set, build / install with ""-tags experimental""
- add ""Experimental features:  [true/false]"" to output of the version command(s)",,harsha544,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfyn:",,,,,,,,,,,,,,,,,,,,,,harsha544,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 6:28 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13317/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend CollectionCriteria with namespace information.,FAB-6100,20725,18792,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,11/Sep/17 9:09 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Sep/17 5:38 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"There is a need to extend collection criteria data structure to encompass the information about chaincode namespace, e.g.:

 

Currently structure presented as following:

{code}

message CollectionCriteria {
    string channel = 1;
    string tx_id = 2;
    string collection = 3;
}

{code}

 

which need to be extended to 

{code}
message CollectionCriteria {
    string channel = 1;
    string tx_id = 2;
    string collection = 3;
    string namespace = 4;
}
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfyv:",,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Sep/17 3:43 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/13347/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup old files,FAB-6102,20730,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Sep/17 12:20 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Oct/17 4:23 AM,,,,,,,,,,,,,,0,,,,,,,"There are files that are not needed when executing tests. These files should be removed.
This includes the fabric/test directory, once these are all ported over to the fabric-test repository.",,latitiah,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyfzr:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,latitiah,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"13/Sep/17 11:32 PM;latitiah;First CR: https://gerrit.hyperledger.org/r/#/c/13323/ - Done;;;","22/Sep/17 10:02 PM;Ratnakar;Second CR / Part2 : https://gerrit.hyperledger.org/r/#/c/13709/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow configtxgen to simply print org definition,FAB-6103,20732,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Sep/17 12:33 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,14/Oct/17 10:33 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,Release-planning-1.1,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6136,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyfzz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] update fabric-sdk-node e2e ci scripts,FAB-6106,20741,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Sep/17 1:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 9:22 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,Update node sdk e2e CI scripts to to install npm versions and add node path to global path in CI.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg1r:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 9:22 PM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
readset validation - Add private data unit test for bulk loading of cache from couchdb,FAB-6107,20742,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,12/Sep/17 1:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,28/Sep/17 11:34 PM,,,,,,,,,,,,,,0,,,,,,,"As discussed in [https://gerrit.hyperledger.org/r/#/c/13149/,] need a unit test to ensure cache is loaded correctly during validation phase when using private data.",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg1z:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Sep/17 12:40 AM;Senthil1; 

We need to test the following three components:
 # preLoadCommittedVersionOfRSet() defined in state_based_validator.go [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L34]
 # LoadCommittedVersions() defined in common_storage_db,go [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/privacyenabledstate/common_storage_db.go#L80]
 # LoadCommittedVersions() defined in  statecouchdb.go [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go#L456]

The bug that got fixed in CR 13149 was occurred due to the fact the hashedKey was constructed incorrectly by component (2). However, during validation, validateKVReadHash() in state_based_validator.go constructed correct hashedKey. As a result, nil version wasn't returned by the GetVersion() instead returned correct version from statedb. 

Hence, to test the correctness of all three components, we might need GetCachedVersion().;;;","15/Sep/17 3:17 AM;Clayton Sims;Manish - is there an eta for this?

 ;;;","15/Sep/17 7:27 AM;denyeart;I think Clayton intended to ask Senthil for an estimated timeframe for a CR...;;;","15/Sep/17 12:12 PM;Senthil1;It will be done by today. ;;;","25/Sep/17 10:30 PM;Clayton Sims;CR merged now.  moving to done;;;","26/Sep/17 2:04 AM;denyeart;[~Clayton Sims] This one is not merged - [https://gerrit.hyperledger.org/r/#/c/13519/.|https://gerrit.hyperledger.org/r/#/c/13519/]

Moving back to In Review... [~manish-sethi] and I will prioritize a review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make logging package names consistent as well as test logging initialization,FAB-6108,20743,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,jyellick,jyellick,12/Sep/17 2:12 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,13/Sep/17 5:58 PM,v1.0.2,,,,,,v1.1.0,,,fabric-orderer,,,,0,Release-planning-1.1,,,,,,"The packages in the orderer have been re-arranged multiple times, In the process, many of the logging names have not been updated to reflect the new package names.

Consider for instance {{fabric/orderer/common/server}}.  This package logs as {{fabric/server/main}} and debugging is turned on for all components of the system, not just that package.  This occurs via:

{noformat}
func init() {
        logging.SetLevel(logging.DEBUG, """")
}
{noformat}

All of the ordering (and common) packages should be fixed to define a constant which is the logging package name, which should correspond to the package name in the filesystem relative to the {{fabric}} dir.

For example: {{fabric/orderer/consensus/solo}} should have a logging package name of {{orderer/consensus/solo}}.

Additionally, all of the {{logging.SetLevel}} calls should be modified to set the logging for this package constant, and not for {{""""}}.

",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6109,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg27:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Sep/17 5:38 AM;kchristidis;https://gerrit.hyperledger.org/r/c/13345/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent global log level setting in tests,FAB-6109,20744,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,12/Sep/17 2:13 AM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,13/Sep/17 11:45 AM,v1.0.2,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"Benchmark tests get littered with debug-level log output from other modules (msp, viperutil), because of the global setting in server_test.go. This is not right and should be fixed.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6108,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg2f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NL uses fabric-test as default directory,FAB-6110,20745,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,12/Sep/17 2:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,13/Sep/17 6:16 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"NL uses fabric-test as default directory.

Fix local and source MSP directories.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg2n:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer should launch node chaincode using npm start,FAB-6112,20748,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,zhaochy,davidkel,davidkel,12/Sep/17 3:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 9:44 PM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,chaincode,Endorser,,,,,"Currently the peer launches node chaincode as follows
{code:java}
    case pb.ChaincodeSpec_NODE:
        args = []string\{""/bin/sh"", ""-c"", fmt.Sprintf(""cd /usr/local/src; node chaincode.js --peer.address %s"", chaincodeSupport.peerAddress)}
{code}
but this is very restrictive and it would make much more sense to launch chaincode using npm start, for example
{code:java}
npm start -- --peer.address=....
{code}
This allows for people to define the name of the script that bootstraps their chaincode implementation.

A *package.json* should be found at the root of node.js chaincode path",,davidkel,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg3b:",,,,,,,,,,,,,,,,,,,,,,davidkel,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetStringArgs() returns function name which is unexpected behavior,FAB-6113,20749,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,dshuffma,dshuffma,12/Sep/17 4:09 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,23/Nov/17 7:48 AM,v1.1.0,,,,,,Not a Bug,,,fabric-peer,,,,0,Documentation,HSBN,Usability,,,,"The shim function GetStringArgs's [documentation |https://github.com/hyperledger/fabric/blob/d9c320297bd2a4eff2eb253ce84dc431ef860972/core/chaincode/shim/interfaces.go#L50] + name implies that I will get the arguments passed to the function.  However when you use this function you also get the function name as the first parameter. 

This is fine, but unexpected.  Either the comments near this function should be updated, or the function name should not be returned.

Tested with fabric 1.1 on HSBN service using fabric-client SDK 1.1

Used this chaincode snippet:
{code:javascript}
        fmt.Println(""Marbles Is Starting Up"")

	funky, args := stub.GetFunctionAndParameters()
	fmt.Println(""Init() GetFunctionAndParameters funky:"", funky)
	fmt.Println(""Init() GetFunctionAndParameters args count:"", len(args))
	fmt.Println(""Init() GetFunctionAndParameters args found:"", args)

	test := stub.GetStringArgs()
	fmt.Println(""Init() GetStringArgs args count:"", len(test))
	fmt.Println(""Init() GetStringArgs args found:"", test)
{code}

instantiated with these settings:
{code:javascript}
fcn: 'init',
args: '346',
{code}

console results:
{code:javascript}
Marbles Is Starting Up
Init() GetFunctionAndParameters funky: init
Init() GetFunctionAndParameters args count: 1
Init() GetFunctionAndParameters args found: [346]
Init() GetStringArgs args count: 2
Init() GetStringArgs args found: [init 346]     //the ""init"" part is unexpected
{code}

^^ I was not expecting ""init, ""346"".  only ""346""",,dshuffma,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg3j:",,,,,,,,,,,,,,,,,,,,,,dshuffma,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 7:47 AM;mastersingh24;While I definitely understand what [~dshuffma] is saying, the doc for the function

{quote}// GetStringArgs returns the arguments intended for the chaincode Init and
// Invoke as a string array. Only use GetStringArgs if the client passes
// arguments intended to be used as strings.{quote}

does actually state that it is the argument which are passed to Init and Invoke and in the case of Invoke you are typically passing in the function name;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serviceability - Peer - system chaincodes,FAB-6114,20750,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,wlahti,wlahti,12/Sep/17 4:33 AM,12/Jan/19 1:02 AM,28/Oct/23 3:00 AM,12/Jan/19 1:02 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg3r:",,,,,,,,,,,,,,,,,,,,,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/19 1:02 AM;denyeart;Will create new Jira items for any remaining work.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serviceability - Peer - Endorser,FAB-6115,20751,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,12/Sep/17 4:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,15/Sep/17 11:05 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg3z:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serviceability - Peer - Committer,FAB-6116,20752,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,12/Sep/17 4:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Feb/18 5:48 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg47:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Oct/17 3:42 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14665/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When a peer is restarted or when an orderer is taken down, ensure orgLeader peer reconnects to random orderer",FAB-6118,20755,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,Nishi,Nishi,12/Sep/17 5:22 AM,30/Jul/19 10:18 AM,28/Oct/23 3:00 AM,30/Jul/19 10:18 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"Scenario 1:
{code:java}
In here in docker-compose-kafka.yml - CORE_PEER_GOSSIP_ORGLEADER=true && CORE_PEER_GOSSIP_USELEADERELECTION=false on each peer.{code}
{code:java}
1. Bring up a kafka network using behave(102-bringdown-non-leader-peer.feature ). Restart all peers. Make sure every peer is connected to an orderer after restart.{code}
 

 Scenario 2:
{code:java}
To ensure peers are connected to orderer when CORE_PEER_GOSSIP_ORGLEADER=false && CORE_PEER_GOSSIP_USELEADERELECTION=true.

{code}
{code:java}
2 A) 
* Bring up a kafka network using behave(103-bringdown-leader-peer.feature). 
* Bring down a leader peer from say org1. 
* Make sure other peer from org1 is elected as leader and now connected to an orderer.

* After the network is up and join-channel happened, run ""docker exec -it  <orderer> bash"" on each of the orderer containers.
* Then from inside orderer container ""apt-get update && apt-get install -y net-tools""
* Inside container run ""netstat -ntp"" to determine which peers are connected to which orderer.
* Once the leader peers is restarted then run ""netstat -ntp"" on each orderer and verify leader peer is contained to another orderer, from inside orderer container using ""netstat -ntp"".{code}
{code:java}
2 B) 

* Bring up a kafka network using behave( 104-bringdown-orderer.feature ). 
* Bring down an orderer that is connected to a leader peer. 
* Make sure now leader peer is now connected to other orderer.

* After the network is up and join-channel happened, run ""docker exec -it  <orderer> bash"" on each of the orderer containers.
* Then from inside orderer container ""apt-get update && apt-get install -y net-tools""
* Inside container run ""netstat -ntp"" to determine which peers are connected to which orderer.
* Once the orderer is brought down (that is connected to a leader peer), verify that leader peer is now connected to another   orderer, from inside orderer container using ""netstat -ntp""{code}
 ",,mastersingh24,Nishi,tanyana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 7:32 AM;Nishi;102-bringdown-non-leader-peer.feature;https://jira.hyperledger.org/secure/attachment/12079/102-bringdown-non-leader-peer.feature","12/Sep/17 7:32 AM;Nishi;103-bringdown-leader-peer.feature;https://jira.hyperledger.org/secure/attachment/12078/103-bringdown-leader-peer.feature","12/Sep/17 7:35 AM;Nishi;104-bringdown-orderer.feature;https://jira.hyperledger.org/secure/attachment/12080/104-bringdown-orderer.feature",,,,,,,,,,,,,,,,,,,,"1|hzyg4n:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,Nishi,tanyana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:18 AM;mastersingh24;BDD replaced by integration tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-java-verify-jsdk1.0.0-fabric_latest-x86_64 CI job is failing,FAB-6119,20756,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,12/Sep/17 9:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Sep/17 9:54 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,Observed fabric-sdk-java-verify-jsdk1.0.0-fabric_latest-x86_64 CI job is failing..,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg4v:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 9:54 PM;rameshthoomu;fix has been submitted and it's working now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
data persistence,FAB-6120,20757,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain,asaningmaxchain,12/Sep/17 3:17 PM,23/Jan/20 7:05 AM,28/Oct/23 3:00 AM,23/Jan/20 7:05 AM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,stale-item,,,,,,"the following is my step,

i use the fabric master branch to start the fabric network,as you know,in the example/e2e_cli folder,it provide the kafka consensus and then i map the data to the host,

for each zk:

volumes:
 - /var/hyperledger/zk\{number}/data:/data
 - /var/hyperledger/zk\{number}/datalog:/datalog

for each kafka:

volumes:
 - /var/hyperledger/kafka\{number}:/tmp/kafka-logs

for each peer:

volumes:
 - /var/hyperledger/peer\{number}/org\{number}:/var/hyperledger/production

i ues the couchdb to store the data,so i map the data to the host also

volumes:
 - /var/hyperledger/couchdb\{number}:/opt/couchdb/data

i start the cli,it work fine,and make tx,and then i restart the fabric network,it seems the kafka consensus error

   ",,asaningmaxchain,JackLee,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg53:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,JackLee,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/18 5:24 PM;JackLee;I met the same issue.

After persistent the data of orderer and peers，restart the network nodes (including peers, orderers, kafkas, zookeepers, ca), then can't invoke chaincode anymore. Find the same errors in the log. ;;;","17/May/18 10:57 PM;JackLee;My issue is fixed. My case is I forgot to persistent the kafka logs.

After I add the following configuration, everything went ok.
 
volumes:
- ../../data/kafka0:/tmp/kafka-logs;;;","23/Jan/20 7:05 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer channel getinfo command,FAB-6121,20758,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,Hangyu_FJH,Hangyu_FJH,12/Sep/17 6:12 PM,21/Jul/18 3:47 AM,28/Oct/23 3:00 AM,17/Oct/17 8:48 AM,,,,,,,Future,,,fabric-tools,,,,0,Release-planning-1.1,,,,,,"Add new command
{code:java}
peer channel getinfo -c channelName{code}
to get the blockchain information of specified channel peer joined.

 ",,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg5b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Hangyu_FJH,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric 1.1 Upgrade and Compatibility,FAB-6122,20759,,Epic,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jyellick,denyeart,denyeart,12/Sep/17 6:28 PM,04/Oct/18 8:54 PM,28/Oct/23 3:00 AM,26/Jan/18 10:10 PM,,,,,,,v1.1.0,,,fabric-release,,,,0,Release-planning-1.1-PostAlpha,review-needed,,,,,ensure the ability for the Fabric to be upgraded-in-place from a prior 1.0.x release.,,ChristopherFerris,denyeart,kchristidis,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6446,FAB-7116,FAB-7175,,,,,,,,,,,,,FAB-6544,,,,,,,,,,,,,,Unset,,Unset,ghx-label-8,,Fabric 1.1 Upgrade and Compatibility,To Do,,,Unset,,,,"1|hzyg5j:",,,,Unset,Unset,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,kchristidis,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 11:47 PM;ChristopherFerris;This needs corresponding system tests to be linked and documentation changes (if any) also need to be incorporated. [~denyeart] [~jyellick];;;","18/Oct/17 11:58 PM;denyeart;[~ChristopherFerris] Right, we have added system tests and doc items for all the 1.1 alpha items, but not yet for the rest of the 1.1 items. Will be done in bulk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric Upgrade - As a participant in a Fabric network, I want to upgrade my version of Fabric based on documented steps.  The upgraded Fabric should be backwards compatible (work with prior version ledger data, configuration, clients)",FAB-6123,20760,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jeffgarratt,denyeart,denyeart,12/Sep/17 6:32 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,11/Jan/18 6:38 AM,,,,,,,v1.1.0,,,fabric-release,,,,1,,,,,,,"Includes upgrade of Fabric binaries and docker images for peer, orderer, kafka, couchdb.

Includes documentation and test.",,AshishkumarLakshmanan,C0rWin,denyeart,jeffgarratt,kchristidis,sanchezl,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7330,FAB-7399,,,,,,,,,FAB-6446,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6122,,,,,,,,,"1|hzyg5r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,AshishkumarLakshmanan,C0rWin,denyeart,jeffgarratt,kchristidis,sanchezl,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/17 4:06 AM;jeffgarratt;Discussions with [~scottz] and [~suryalnvs] wrt to internal component dependencies.

 

Kafka: (possible config interaction wrt to orderer ORDERER_KAFKA_VERSION?)
 * {{Version: 0.9.0.1}}
 * {{Version: 0.10.0.0}}
 * {{Version: 0.10.0.1}}
 * {{Version: 0.10.1.0}}
 * {{Version: 0.10.2.0}}

{{Zookeeper:}}
 * {{Version: 3.4.9 had issues downloading, need to investigate.}}
 * {{Version: 3.4.10}}

 

{{CouchDB:  Did we support in 1.0.X???}}

 ;;;","30/Nov/17 4:08 AM;jeffgarratt;See [https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature] for process.  Does NOT currently incorporate upgrades of Kafka and Zookeeper.;;;","30/Nov/17 4:38 AM;kchristidis;Including [~sanchezl] here for the Kafka/ZK bit in case there are questions.;;;","02/Dec/17 10:30 AM;jeffgarratt;See [https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature] for process. Now includes Kafka upgrade.  Does NOT currently incorporate upgrade of Zookeeper.;;;","05/Dec/17 3:16 AM;jeffgarratt;See [https://github.com/jeffgarratt/fabric-prototype]  for process. Now includes all fabric supported components (e.g. peer, orderer, kafka, zookeeper).  Working on a couple of issues, both seem to only manifest when upgrading a kafka based network.
 # With [~kchristidis], I am discussing possible issues with setup regarding 'consenter error' after orderer upgrade.
 # In addition, seems there is a possible gossip issue near the end after upgrade attempting to verify common block height.  Not sure if this is related to timing or not.  Will notify [~yacovm] and [~C0rWin].  If I restart the peers in the affected organization, seems to remedy.;;;","05/Dec/17 5:27 AM;C0rWin;[~jeffgarratt] can you be more specific, probably adding an error/warning message? btw, what do you mean by verify common block height?;;;","05/Dec/17 5:41 AM;jeffgarratt;[~C0rWin] I check the block height across all peers in the network after a wait time.  I boosted the wait time and it appears heights are correct.  [~kchristidis] is currently investigating a possible issue with the orderer having a consenter failure intermittently.  

 

I have enabled gossip debug and will update if I can reproduce the issue I have seen.;;;","05/Dec/17 5:43 AM;jeffgarratt;[~scottz] [https://github.com/jeffgarratt/fabric-prototype] latest master represents the current understanding of upgrade for the kafka based fabric system.;;;","06/Dec/17 3:14 AM;denyeart;[~jeffgarratt] Yes CouchDB may be configured for 1.0 peer.  The 1.0.0 fabric-couchdb image uses CouchDB 2.0.0.  We still use CouchDB 2.0.0, but may upgrade to CouchDB 2.1.1 for the 1.1 GA docker images (no compatibility issues though).  Are you proposing that the Fabric images version and dependency image versions be kept in sync?  That is, fabric-peer 1.1 must use fabric-couchdb 1.1?   (Not technically required in this instance, but may be a good general policy).;;;","06/Dec/17 7:43 AM;kchristidis;Added FAB-7330 as a blocking subtask. It contains my findings regarding the consenter failures that Jeff bumped into yesterday.;;;","09/Dec/17 2:31 AM;jeffgarratt;Latest master now adds step of peer admins removing existing docker chaincode images post upgrade to allow for successful chaincode invocation...

[https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature#L676-L693]

 

If this is not done, will find a chaincode TLS cert failure in the chaincode logs on invocation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric CA Upgrade - As a participant in a Fabric network, I want to upgrade my version of Fabric CA based on documented steps.  The upgraded Fabric CA should be backwards compatible (work with prior version clients)",FAB-6124,20761,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,smithbk,denyeart,denyeart,12/Sep/17 6:39 PM,21/Jul/18 3:50 AM,28/Oct/23 3:00 AM,10/Jan/18 5:15 AM,,,,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,"Added documentation to https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30
See the ""Upgrading Fabric CA"" section.",,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6122,,,,,,,,,"1|hzyg5z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric SDK Upgrade - As a Fabric SDK-based application author, I want to upgrade my version of the SDK based on documented steps. The upgraded SDK should be backwards compatible (no impact to existing application)",FAB-6125,20762,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,harrisob@us.ibm.com,denyeart,denyeart,12/Sep/17 6:41 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,25/Jan/18 4:28 AM,,,,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6122,,,,,,,,,"1|hzyg67:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 7:54 AM;harrisob@us.ibm.com;added the following to https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit#
h3. [Upgrade the Hyperledger Fabric clients for Node.js|https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature#L596-L604]

 

When your application is written using a Node.js server the following may be used to upgrade the Hyperledger Fabric clients for Node.js NPM packages. Run the following commands in the root of where your application is located.

 

  npm install fabric-client@1.1

  npm install fabric-ca-client@1.1

 

This will install the new version of both clients and update your “package.json” with the version that is install.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DUPLICATE - Fabric Chaincode Shim Upgrade - As a Fabric participant, I want my Fabric chaincode docker images to be deleted and rebuilt upon Fabric peer upgrade, to ensure that the peer and the shim are always in sync",FAB-6126,20763,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,denyeart,denyeart,12/Sep/17 6:44 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,12/Sep/17 6:47 PM,,,,,,,v1.1.0,,,fabric-release,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5676,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg6f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Fabric v1.0.2 Behave BDD Tests] 'module' object has no attribute 'ssl_channel_credentials',FAB-6127,20764,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dragon82,dragon82,12/Sep/17 9:07 PM,01/Dec/18 8:37 PM,28/Oct/23 3:00 AM,01/Dec/18 8:37 PM,v1.0.2,,,,,,WON'T FIX,,,fabric-quality,,,,0,,,,,,,"The Behave BDD Test was conducted in vagrant box ubuntu/xenial64 (virtualbox, 20170830.1.1) development environment and yet it generate the following error:

 

""orderer0""                                                                                                                                                                  # steps/bootstrap_impl.py:271 0.002s
      Traceback (most recent call last):
        File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1456, in run
          match.run(runner.context)
        File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1903, in run
          self.func(context, *args, **kwargs)
        File ""steps/bootstrap_impl.py"", line 276, in step_impl
          user.connectToDeliverFunction(context, composeService, nodeAdminTuple=user.tags[certAlias])
        File ""/opt/gopath/src/github.com/hyperledger/fabric/bddtests/steps/orderer_util.py"", line 198, in connectToDeliverFunction
          composeService=composeService),
        File ""/opt/gopath/src/github.com/hyperledger/fabric/bddtests/steps/orderer_util.py"", line 231, in getABStubForComposeService
          channel = bdd_grpc_util.getGRPCChannel(ipAddress=ipAddress, port=port, root_certificates=root_certificates, ssl_target_name_override=composeService)
        File ""/opt/gopath/src/github.com/hyperledger/fabric/bddtests/steps/bdd_grpc_util.py"", line 22, in getGRPCChannel
          creds = grpc.ssl_channel_credentials(root_certificates=root_certificates)
      AttributeError: 'module' object has no attribute 'ssl_channel_credentials'
      
      Captured stdout:
      Will copy gensisiBlock over at this point

    And user ""configAdminOrdererOrg0"" retrieves the latest config update ""latestOrdererConfig"" from orderer ""orderer0"" for channel ""\{ordererSystemChannelId}""","ubuntu/xenial64 (virtualbox, 20170830.1.1)

asn1crypto (0.22.0)
 b3j0f.aop (0.8.4)
 b3j0f.utils (1.4.4)
 beautifulsoup4 (4.6.0)
 behave (1.2.5)
 cffi (1.10.0)
 CouchDB (1.0)
 cryptography (2.0.3)
 ecdsa (0.13)
 enum34 (1.1.6)
 Flask (0.10.1)
 Flask-Cors (2.0.1)
 futures (3.1.1)
 gevent (1.2.2)
 google (1.9.3)
 greenlet (0.4.12)
 grpcio (0.13.1)
 gyp (0.1)
 idna (2.6)
 ipaddress (1.0.18)
 itsdangerous (0.24)
 Jinja2 (2.9.6)
 kazoo (2.4.0)
 MarkupSafe (1.0)
 nose (1.3.7)
 ordereddict (1.1)
 parse (1.8.2)
 parse-type (0.3.4)
 pip (9.0.1)
 protobuf (3.4.0)
 pycparser (2.18)
 pykafka (2.6.0)
 pyOpenSSL (16.2.0)
 pysha3 (1.0b1)
 python-dateutil (2.2)
 python-slugify (1.2.4)
 pytz (2014.3)
 PyYAML (3.10)
 requests (2.4.3)
 setuptools (36.4.0)
 six (1.10.0)
 tabulate (0.7.7)
 Unidecode (0.4.21)
 Werkzeug (0.12.2)
 wheel (0.29.0)

 

 ",ChristopherFerris,dragon82,luomin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 8:57 PM;dragon82;hyperledger-fabric_behave.txt;https://jira.hyperledger.org/secure/attachment/12081/hyperledger-fabric_behave.txt",,,,,,,,,,,,,FAB-1141,,,,,,,,,"1|hzyg6n:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dragon82,luomin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/18 7:20 PM;luomin;Hi, [~dragon82] , I got the same issue, have you already got the reason of this ? Thank you in advance for your reply;;;","09/Apr/18 2:09 AM;mastersingh24;This is pretty old and for v1.0.x.  We don't even run or maintain the BDD tests and they are not used for testing fixpacks.

I'm marking as WON'T FIX.

I put it on hold pending decision by [~ChristopherFerris] and [~denyeart];;;","09/Apr/18 8:30 AM;ChristopherFerris;[~mastersingh24] I tend to agree. [~dragon82] and [~luomin] is this still important to you?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change the client key and certs to files via docker upload API,FAB-6128,20778,17616,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,12/Sep/17 11:25 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Nov/17 4:22 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,the mutual TLS feature introduced in the v1.1 stream currently passes the client key and cert as launch command arguments. should use files instead. the files should be uploaded to the container instance after it's created but before it's started,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg7j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 4:22 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/13451/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change peer ca certs to be uploaded to container instance,FAB-6129,20780,17616,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jimthematrix,jimthematrix,12/Sep/17 11:27 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,11/Dec/17 7:09 AM,,,,,,,Future,,,fabric-peer,,,,0,,,,,,,The peer server ca certs are currently statically burnt in the chaincode image. should change to upload the file to the container instance after it's created but before it's started.,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg7r:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/17 7:09 AM;yacovm;We can close this, since I did it in https://jira.hyperledger.org/browse/FAB-6974;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: (Behave framework) The deploy should not do join/create channel,FAB-6131,20785,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,13/Sep/17 12:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Sep/17 12:32 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"The deploy functionality should not handle join/create channel functionality, it is already handled by the setting up a channel or creating and joining a channel.  ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyg9b:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"14/Sep/17 12:34 AM;AdnanChoudhury;[https://gerrit.hyperledger.org/r/#/c/13367/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide kafka environment for orderer/kafka benchmarks,FAB-6132,20786,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,13/Sep/17 3:44 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,29/Sep/17 12:20 AM,v1.0.2,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,Release-planning-1.1,,,,,"Provide a docker-compose environment that brings up a Kafaka + Zookeeper environment for use by the Orderer benchmarks found in {{orderer/server/benchmark_test.go}}.

 ",,gbolo,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg9j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,gbolo,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Sep/17 1:03 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/13325/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Profile name typo in sample documentation - visible usability problem,FAB-6133,20787,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,pvrbharg,pvrbharg,13/Sep/17 8:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,30/Sep/17 6:27 AM,v1.0.2,,,,,,v1.0.3,v1.1.0,,fabric-samples,,,,0,Documentation,,,,,,"The following should read ""SampleDevModeSolo"" - a letter ""e"" missing in the profile name

Add an organization / reconfig_membership example tutorial

 

[https://github.com/hyperledger/fabric/tree/release/examples/configtxupdate]

!image-2017-09-12-19-32-28-701.png!",,mastersingh24,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 8:32 AM;pvrbharg;image-2017-09-12-19-32-28-701.png;https://jira.hyperledger.org/secure/attachment/12085/image-2017-09-12-19-32-28-701.png",,,,,,,,,,,,,,,,,,,,,,"1|hzyg9r:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/17 8:45 PM;mastersingh24;https://gerrit.hyperledger.org/r/13543;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve statement on permissionless networks on identity and PoW. ,FAB-6134,20788,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,dileban,dileban,dileban,13/Sep/17 10:35 AM,23/Jan/20 7:05 AM,28/Oct/23 3:00 AM,23/Jan/20 7:05 AM,v1.0.2,,,,,,,,,fabric-docs,,,20/Sep/17 12:00 AM,0,Documentation,stale-item,,,,,"The following statement in the documentation on intro to Blockchain isn't all that clear:

""Rather than the “proof of work” some blockchain networks use to verify identity (allowing anyone who meets those criteria to join the network), the members of a Hyperledger Fabric network enroll through a *membership services provider*.""

Link: https://hyperledger-fabric.readthedocs.io/en/latest/blockchain.html",,dileban,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyg9z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,dileban,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Sep/17 1:41 PM;dileban;Change: https://gerrit.hyperledger.org/r/#/c/13391/;;;","23/Jan/20 7:05 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Raft Consensus (etcd/raft),FAB-6135,20789,,Epic,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,kchristidis,kchristidis,kchristidis,13/Sep/17 12:01 PM,04/Feb/20 11:25 PM,28/Oct/23 3:00 AM,04/Feb/20 11:25 PM,v1.1.0,,,,,,v1.4.2,v2.0.0,,fabric-orderer,,,,8,raft,,,,,,"If this were titled as a story it would be:
{quote}As a Fabric ordering service operator/deployer, I wish to decrease my dependency on third-party binaries.
{quote}
We propose to achieve this via an ordering service based on etcd/raft.

Raft still keeps us in CFT-land and as such, it is still not the optimal solution (BFT is, and that's also coming), but –
 # It allows us to have an ordering service without Kafka/ZK depedencies, and
 # It helps with the BFT development as well, since it gives us a chance to hook into Fabric [a leader-based consensus protocol|https://chat.hyperledger.org/channel/fabric-maintainers?msg=N4qC8n6gKhF9C94B7] and carry those lessons over when writing the BFT plugin.

The [design document|https://docs.google.com/document/d/138Brlx2BiYJm5bzFk_B0csuEUKYdXXr7Za9V7C76dwo/edit] goes over everything we'll need to do in order to make Raft a consensus option for Fabric. [The spreadsheet|https://docs.google.com/spreadsheets/d/1R02-xjdl4hNw90kN4NZ1kX0f4QoIYn51_1UHlwy-GQs/edit?usp=drive_web&ouid=102678938362176098972] goes over the rough plan of how we will be breaking this epic into stories. The last sheet on that spreadsheet includes a list of recommended resources and reference material.",,alexvicegrab,baohua,bryangross,C0rWin,cagdast,ChristopherFerris,daijianw,denyeart,GingerMoon,grapebaba,guoger,Hangyu_FJH,harsha544,Henni,httran88,huikang,inatatsu,IngoRammer,isaacwch,itsme24543,joe-alewine,jorgego,karelg,KartikChauhan,kchristidis,latitiah,mastersingh24,MichaelWang,osmola,Othman.Darwish,pdina,qiang0723,scottz,seokm0,siddjain,SjirNijssen,TiantianGao,toddinpal,wutongtree,xixuejia,yingmsky,ymlbright,yoheiueda,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14841,,,FAB-33,FAB-13538,FAB-14821,,,,,,,,,,Delivered in v1.4.1. Kafka to raft migration completed in v1.4.2 and v2.0.,,Reviewed,,Done,ghx-label-5,,Raft Consensus (etcd/raft),To Do,,,Done,,,,"1|hzyga7:",The ordering service now supports an additional consensus mechanism that uses the Raft protocol. Please refer to the documentation for configuration instructions.,,,No,Done,,,,,,,,,,,"High level system test plan:
- Week 1: All basic crash/restart variations in latency/constant mode. Dynamic onboarding.
- Week 2: Spillover from week 1, plus TLS certificate rotation tests, maybe more onboarding scenarios. Kickoff long-running test and monitor for leaks.
- Week 3: Spillover from week 2, plus performance testing. Cert rotation/onboarding with fat chains. Begin migration testing (code might not be merged: we'll work with images on Docker Hub if need be).
- Week 4: Performance + migration.",,,,,,alexvicegrab,baohua,bryangross,C0rWin,cagdast,ChristopherFerris,daijianw,denyeart,GingerMoon,grapebaba,guoger,Hangyu_FJH,harsha544,Henni,httran88,huikang,inatatsu,IngoRammer,isaacwch,itsme24543,joe-alewine,jorgego,karelg,KartikChauhan,kchristidis,latitiah,mastersingh24,MichaelWang,osmola,Othman.Darwish,pdina,qiang0723,scottz,seokm0,siddjain,SjirNijssen,TiantianGao,toddinpal,wutongtree,xixuejia,yingmsky,ymlbright,yoheiueda,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 12:02 PM;kchristidis;etcd/raft seems to be the implementation to use: [https://news.ycombinator.com/item?id=13081407] (I know it's a comment on a forum, but I'm sold on the arguments presented therein);;;","02/Oct/17 2:15 AM;mastersingh24;Agree that we should start with etcd/raft;;;","30/Oct/17 4:07 PM;grapebaba;[~kchristidis]any design for this task or already in progress in private repo?;;;","30/Oct/17 6:17 PM;kchristidis;Testing things out in a private repo; still in the early stages.

Once it's a bit more stable, I'll make it public along with a design doc and CRs.

Working on this in-between tasks though (it's lower-priority given the 1.2 target), so it may be a while before we get there.;;;","26/Jan/18 9:22 AM;kchristidis;FWIW, I've been at this full-time for a bit more than a week now. It is an uneventful trip so far, spent studying the internals of [etcd/raft|https://github.com/coreos/etcd/tree/master/raft] and [raftexample|https://github.com/coreos/etcd/tree/master/contrib/raftexample] -- [Delve|https://github.com/derekparker/delve] in hand. According to my investigations, Docker's {{swarmkit}} Raft implementation seems quite close to what I think we should be aiming for; that'll come next. Will post here again with an update, but the TL;DR is that I'm in study/osmosis mode.;;;","07/Feb/18 5:08 AM;kchristidis;Removing the {{review-needed}} tag. Will be posting this as a proposal to the mailing list to invite reviews.;;;","13/Feb/18 10:40 AM;baohua;By bringing etcd/raft, will the entire consensus workflow still be execute-orderer-commit?

Will it be a separate etcd cluster from the orderer nodes? Or etcd inside orderer nodes?

Look forward to seeing more information.

Thanks!;;;","14/Feb/18 2:00 PM;kchristidis;{quote}By bringing etcd/raft, will the entire consensus workflow still be execute-orderer-commit?
{quote}
Yes.
{quote}Will it be a separate etcd cluster from the orderer nodes? Or etcd inside orderer nodes?
{quote}
The latter.

Feel free to ask more questions as they come up.;;;","21/Feb/18 12:23 PM;inatatsu;How about the plan for BFT? Will it integrate the BFT-SMaRt as an ordering service or newly embed BFT into the orderer node?;;;","22/Feb/18 4:32 AM;kchristidis;{quote}How about the plan for BFT?
{quote}
This is already answered in the JIRA description (emphasis mine): ""...it is still not the optimal solution (*BFT is, and that's also coming*)...""
{quote}Will it integrate the BFT-SMaRt as an ordering service or newly embed BFT into the orderer node?
{quote}
It will not use BFT-SMaRt. Its basis will be our own sbft code.;;;","23/Feb/18 12:44 AM;grapebaba;does it mean it's a raft consensus support bft?;;;","23/Feb/18 12:47 AM;kchristidis;{quote}does it mean it's a raft consensus support bft?{quote}

Raft is CFT. When this JIRA is done, we'll have a Raft-based ordering service.;;;","06/Apr/18 3:43 AM;kchristidis;Becoming increasingly skeptical of the idea of a Raft cluster per channel. (This sounds a bit silly in the CFT domain, but could be of use in BFT land, since each channel would be assigned with a potentially different leader OSN.)

Back to raft, if the cluster per channel concept is implemented naively, you're looking at a non-negligible amount of overhead per channel. [This was the motivation|https://www.cockroachlabs.com/blog/scaling-raft/] behind CockroachDB's {{multiraft}}.

Unfortunately, {{multiraft}} [was dismantled a few months after its introduction|https://github.com/cockroachdb/cockroach/blob/098a7292a69292be01558457464079f87657393b/docs/RFCS/20151213_dismantle_multiraft.md] due to tight coupling with the project's storage engine.

I see two options going forward:

# Have all channels managed by one cluster (i.e. one raft leader) to begin with, and _then_ move on to a cluster per channel using {{multiraft}}-like improvements.
# Do a cluster per channel in a non-optimized way (goroutines galore!), then move on with {{multiraft}}-like improvements.

Cluster isolation will be provided by the transport package (in our case: gRPC). This is also how {{etcdserver}} handles it, with their own {{transport}} package. Remember to tag the WAL metadata accordingly as well.

(This is a mostly note to self. This will be captured in the design doc.);;;","10/Apr/18 12:51 AM;kchristidis;As things stand today, a consensus plugin author does not have access to the replica set node information via the provided interfaces, and as a result, the Raft cluster cannot be bootstrapped.

FAB-9428 describes a way to achieve that in an extensible manner. FAB-9429 is the sub-task that's related to our work here.;;;","21/Jul/18 1:02 AM;denyeart;[~kchristidis] Although work is underway, I believe the expectation is that this will get delivered in v1.4 rather than v1.3.  I've updated the Fix Version, let me know if you disagree.;;;","30/Nov/18 1:44 AM;kchristidis;Just a note to not add any more child _stories_ (or tasks) under this Epic.

Anything related to this Epic should be added as a sub-task of an existing story.;;;","07/Dec/18 1:29 AM;kchristidis;Other than:
 # The tasks that are currently in progress or in review
 # The Kafka migration work (FAB-12777)

I've captured the set of items that we'll need to complete before the end of month under the {{raft-must}} label: [https://jira.hyperledger.org/issues/?jql=labels%20%3D%20raft-must]

Post in #fabric-orderer-dev in RocketChat if you feel something is missing from that list.

/cc [~simsc];;;","28/Feb/19 7:32 AM;alexvicegrab;Speaking of BFT, any plans of using/adapting/collaborating with the work of BFT SMaRt?

https://github.com/bft-smart;;;","28/Feb/19 11:14 AM;kchristidis;There is already a BFT-SMaRt plugin for Fabric, linked in the same repo. Whether that becomes the ""adopted"" BFT solution or not (in the sense that it's the one merged into the Fabric project), is something that the community will settle on when we tackle FAB-33.;;;","04/Feb/20 11:21 PM;ChristopherFerris;Shouldn't this be closed as 'Done'?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup channel config generation code,FAB-6136,20790,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:13 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,02/Nov/17 11:24 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"There is quite a bit of historical context, but originally, channel config was supposed to be specified by some non-existent tool, and so the components were developed under the assumption that this tool would exist.  As the tool did not materialize, these components started hacking more and more pieces together for testing without the tool.  Finally, when it became apparent that there was no tool inbound, {{configtxgen}} was created in its stead, by cobbling together the assorted pieces of testing code from different packages to form a coherent configuration generation binary.

Unfortunately, this evolution of the configtxgen tool means that much of this code is spread throughout the fabric codebase, and in packages which really have nothing to do with bootstrapping or generating new configuration.  Additionally, the underlying configuration structures have changed so much since much of the code was written, that there are unneeded and unhelpful abstractions (like the configuration template concept) which serve only to obfuscate the way configuration is generated.

This story should encompass moving the bits of code from other packages like {{configtx}} and {{channelconfig}} under the  {{configtxgen}} package.  Additionally, the {{provisional}} package should be rewritten to mirror the more recent configuration parsing code, which directly operates on config groups.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygaf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add simple config value util functions,FAB-6137,20791,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:15 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Nov/17 11:23 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"In the earlier days of configuration, it was not entirely clear what
configuration would look like, so the notion of configuration templates
was invented.  This worked well to abstract the underlying
implementation away from the consumers, but now that the configuration
form has settled down, it provides an unnecessary complication that
serves to obfuscate and make understanding of the configuration more
challenging.

This CR adds a util function for directly generating the proto material
necessary to construct a *cb.ConfigValue.  There are currently no
consumers, but new ones will be added later in the change series.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygan:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add simple config policy util functions,FAB-6138,20792,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:16 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Nov/17 11:24 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"This CR mirrors the functionality added in FAB-6137, but for policies
instead of config values.  There are currently no consumers of these new
util functions, but new users will be added later in the series.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygav:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add new channel config encoder package,FAB-6139,20793,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:16 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Nov/17 11:24 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"configtxgen currently depends on the 'provisional' package for encoding
the information contained in configtx.yaml into the fabric native proto
format.  The provisional package was originally developed as part of th
orderer testing framework, and was never designed to work as it does
today.

This CR introduces a new encoder which more directly translates between
the viper config struct and the native proto format.  It relies on much
less indirection and should be easier for users to understand, easier t
hack on, and already has significantly better test coverage.

In addition, the new encoder allows for encoding of a subset of the
configuration, which is very useful for tests and tools.  There are man
places in fabric codebase which use the provisional package to generate
a genesis block, then unpack the the block, unpack the envelope, unpack
the config envelope, and finally access the config inside, and the new
package allows producing the config directly without these intermediate
steps.

This CR simply introduces the new encoder and tests.  It utilizes the
new simple util functions from the channelconfig and policies packages.

In subsequent CRs, the old provisional package will be removed, as will
the assorted old 'Template<...>' methods it depended upon.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygb3:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the provisional config encoder,FAB-6140,20794,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Oct/17 10:37 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"With the introduction of FAB-6139 a new more readable and flexible
config encoder is available.  This means all existing usage of the old
deprecated provisional encoder should be removed.  This CR does that.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygbb:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add more flexible channel create helper,FAB-6141,20795,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Oct/17 10:37 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"The original channel creation tx generation code assumes that no
modifications have been made to the organization definitions in the
ordering system channel.  For longer running systems this assumption may
not hold.

Consequently, a new function which accepts the ordering system channel's
config is required so that it can set the correct versions for the
organization's in the channel creation transaction.  This CR adds this
new function.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygbj:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move MakeChainCreationTransaction,FAB-6142,20796,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Oct/17 10:34 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,"Presently, MakeChainCreationTransaction is a function of the
channelconfig package.  Although it does seem related to the
channelconfig and references many of the constants defined there, it is
actually unneeded during the runtime for either the orderer or peer
binaries, and is only used by CLI and tests.

Therefore, it is a better fit in the configtxgen/encoder package.

This CR also renames this method to MakeChannelCreationTransaction and
switches it to use the newer underlying config group generation
introduced earlier in this series.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygbr:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup dead code,FAB-6143,20797,20790,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,13/Sep/17 2:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,14/Oct/17 10:33 PM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,All of the config templating related code should be effectively dead now.  It should be removed so that no longer needs to be maintained.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygbz:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - fabric release process,FAB-6144,20798,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,rameshthoomu,rameshthoomu,rameshthoomu,13/Sep/17 8:57 PM,27/Jul/18 3:43 PM,28/Oct/23 3:00 AM,27/Jul/18 3:43 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"fabric-release process:

*Current Release Process from CI:*
In the current release process from CI, we follow the steps mentioned in the below document

https://github.com/hyperledger/ci-management/blob/master/docs/Release_Process.md

but CI team has to manually trigger the release (tests) job to verify the published docker images, binaries and npm modules. If the tests are failed, it's not easy to revert the
release tag from all the repositories (fabric, fabric-ca, fabric-sdk-java and fabric-sdk-node). To fix these issues,

*proposing* below release process to overcome above mentioned issues..

1) Decide what release tests have to include in fabric-release job.
2) If release tests are based on fabric and fabric-ca tests, then commit merge fabric-ca release commit (don't create tag) then fabric release commit (don't create tag). Once release commits are merged, CI triggers release-tests job based on the IS_RELEASE=TRUE condition.
3) if the release tests are based on fabric-sdk-node and fabric-sdk-java, then commit fabric-sdk-node, fabric-sdk-java, fabric-ca and fabric release commits. Once the release commits are merged, trigger release job to kick off release tests which assumes and pull release commits and trigger all the release tests.

Once the release tests are successfully executed, Release Engineer has to create a release tag and which triggers release jobs to publish docker images, binaries, java jar and npm modules. Once the build artifacts are published, trigger Post QA release job which pull all released docker images, binaries, npm and java jar files and execute tests.",,mastersingh24,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/17 4:20 AM;rameshthoomu;Proposed_release_Process_CI;https://jira.hyperledger.org/secure/attachment/12117/Proposed_release_Process_CI","16/Sep/17 4:20 AM;rameshthoomu;Proposed_release_Process_CI.png;https://jira.hyperledger.org/secure/attachment/12118/Proposed_release_Process_CI.png",,,,,,,,,,,,FAB-10068,,,,,,,,,"1|hzygc7:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 6:17 PM;mastersingh24;[~rameshthoomu] This sounds about right to me.  Definitely need to decide which tests to run for the IS_RELEASE=true but this makes sense to me.;;;","14/Nov/17 10:54 PM;rameshthoomu;[~scottz] Could you please let me know what tests we have run on IS_RELEASE = TRUE condition.

FYI:

In the current fabric-ci process, we run below tests on every patch set submitted to fabric repository
 * smoke tests (fabric-test repository)
 * unit-tests (fabric)
 * behave tests
 * e2e tests which covers (fabric-sdk-node e2e tests, fabric e2e cli tests, fabric-sdk-java e2e tests)

And we run fabric-daily job every day on latest fabric and fabric-ca commits. Based on what we run on every patch set on fabric repository, let's plan what tests we have to run before ""Release Engineer"" create a release tag.

Also, we can leverage the existing release tests (verifies peer, orderer, etc.. binary version and pull recent published docker images (fabric, fabric-ca), run e2e tests from fabric CLI, byfn tests (default channel, custom channel and couchdb) and make targets (make native, make release-all, make docker etc..) also runs fabric-test smoke tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE uses fabric-test as default directory,FAB-6145,20800,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Sep/17 10:19 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Sep/17 12:17 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,Change PTE SC files and user input files to use fabric-test as default directory.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzygcf:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document policies,FAB-6151,20811,24754,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pandrejko,markparz,markparz,14/Sep/17 2:55 AM,24/Aug/19 5:32 AM,28/Oct/23 3:00 AM,23/Aug/19 8:48 PM,v1.1.0,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,,"I need to understand what policies are, and what they do at the different levels, System level governance policies, Channel policies and Chaincode level.

I also need more, clear information on how to create them and changing them, including the hierarchy of policies, in case I need to override a global default policy at a certain level.",,joe-alewine,markparz,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwtxb:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,markparz,pandrejko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Oct/17 11:39 PM;joe-alewine; 

 ;;;","10/Feb/18 3:31 AM;joe-alewine;[~rohitadivi];;;","15/Mar/19 9:16 AM;pandrejko;https://gerrit.hyperledger.org/r/30110;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improved documentation on adding peers,FAB-6152,20813,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,markparz,markparz,14/Sep/17 2:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,27/Jan/18 12:41 AM,v1.1.0,,,,,,v1.1.0,,,fabric-docs,,,,0,Documentation,release-planning-1.1,,,,,"There are a lot of questions on how to add additional organizations and peers to an existing organization, especially to the BYFN (which would be more difficult since there is some predone cert work already). So we need an example / clarity on how to add peers to an existing organization.

This should feed off a doc, potentially the same doc as adding an additional organization to a running fabric network.",,jinsong,joe-alewine,luomin,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygdj:",,,,,,,,,,,,,,,,,,,,,,jinsong,joe-alewine,luomin,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 12:41 AM;joe-alewine;""Reconfiguring Your First Network"" in docs here:

http://hyperledger-fabric.readthedocs.io/en/latest/channel_update.html;;;","15/May/18 8:32 PM;jinsong;I can't visit this url, is it invalid? [http://hyperledger-fabric.readthedocs.io/en/latest/channel_update.html];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add continuous integration section to fabric-test README,FAB-6153,20814,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Sep/17 3:27 AM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,18/Sep/17 11:06 PM,v1.0.2,,,,,,,,,,,,,0,Documentation,,,,,,Add continuous integration section to fabric-test README.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygdr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"14/Sep/17 11:55 PM;rameshthoomu;Patch has been submitted https://gerrit.hyperledger.org/r/#/c/13433/;;;","18/Sep/17 11:06 PM;rameshthoomu;Patch has been merged now..;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update generated proto files after upgrade to Go 1.9,FAB-6154,20815,19479,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,14/Sep/17 3:51 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Sep/17 11:24 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"It appears the upgrade to Go 1.9 necessitates updating every generated proto file of Fabric. 

Running ""make protos"" results in the following git status:
{code:java}
modified:   common/tools/protolator/testprotos/sample.pb.go
modified:   core/comm/testdata/grpc/test.pb.go
modified:   examples/chaincode/go/utxo/util/dah.pb.go
modified:   idemix/idemix.pb.go
modified:   protos/common/common.pb.go
modified:   protos/common/configtx.pb.go
modified:   protos/common/configuration.pb.go
modified:   protos/common/ledger.pb.go
modified:   protos/common/policies.pb.go
modified:   protos/gossip/message.pb.go
modified:   protos/ledger/queryresult/kv_query_result.pb.go
modified:   protos/ledger/rwset/kvrwset/kv_rwset.pb.go
modified:   protos/ledger/rwset/rwset.pb.go
modified:   protos/msp/identities.pb.go
modified:   protos/msp/msp_config.pb.go
modified:   protos/msp/msp_principal.pb.go
modified:   protos/orderer/ab.pb.go
modified:   protos/orderer/configuration.pb.go
modified:   protos/orderer/kafka.pb.go
modified:   protos/peer/admin.pb.go
modified:   protos/peer/chaincode.pb.go
modified:   protos/peer/chaincode_event.pb.go
modified:   protos/peer/chaincode_shim.pb.go
modified:   protos/peer/configuration.pb.go
modified:   protos/peer/events.pb.go
modified:   protos/peer/peer.pb.go
modified:   protos/peer/proposal.pb.go
modified:   protos/peer/proposal_response.pb.go
modified:   protos/peer/query.pb.go
modified:   protos/peer/resources.pb.go
modified:   protos/peer/signed_cc_dep_spec.pb.go
modified:   protos/peer/transaction.pb.go{code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygdz:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/17 4:16 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13435/;;;","18/Sep/17 11:22 PM;wlahti;https://jira.hyperledger.org/browse/FAB-6169 was merged for the same fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client peer TLS credentials include only a single cert rather than a chain,FAB-6155,20817,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,smithbk,smithbk,14/Sep/17 9:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,02/Nov/17 12:16 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The GetPeerCredentials function in fabric/core/comm adds only a single certificate to the pool, but it should add multiple in order to handle certificates issued by an intermediate CA.",,jeffgarratt,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyge7:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Sep/17 10:23 AM;smithbk;https://gerrit.hyperledger.org/r/13447;;;","27/Oct/17 4:36 AM;jeffgarratt;[~smithbk]I assume we can close this now due to https://gerrit.hyperledger.org/r/#/c/13447/ being merged?;;;","01/Nov/17 11:45 PM;jeffgarratt;Gonna close this one [~smithbk].. Assume it is good with the merge.  Please reopen if still an issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Go chaincode examples comments of chaincode id are out-of-date,FAB-6156,20818,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,cbl,cbl,cbl,14/Sep/17 11:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,18/Oct/17 5:53 AM,,,,,,,,,,,,,,0,,,,,,,"Since we are using chaincode name in the ""install"" and ""instantiate"" phase, we should remove the old comments ""// WARNING - this chaincode's ID is hard-coded in chaincode_example04..."" from the following go chaincode examples:

[https://github.com/hyperledger/fabric/blob/release/examples/chaincode/go/chaincode_example02/chaincode_example02.go#L19]

[https://github.com/hyperledger/fabric/blob/release/examples/e2e_cli/examples/chaincode/go/chaincode_example02/chaincode_example02.go#L19]

[https://github.com/hyperledger/fabric/blob/release/examples/chaincode/go/eventsender/eventsender.go#L19]

[https://github.com/hyperledger/fabric/blob/release/examples/chaincode/go/invokereturnsvalue/invokereturnsvalue.go#L19]

 ",,cbl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygef:",,,,,,,,,,,,,,,,,,,,,,cbl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 5:02 PM;cbl;https://gerrit.hyperledger.org/r/#/c/13449/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How to upgrade a chaincode without losing its storage?,FAB-6158,20821,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,crazyquark,crazyquark,14/Sep/17 6:04 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,01/Oct/17 10:16 PM,,,,,,,Not a Bug,,,fabric-ledger,,,,0,,,,,,,"Hello,

 

Is there a way to re-deploy a chaincode and keep access to all its data on the ledger?

Right now, every time a chaincode is deployed, even if it uses the same keys for accessing the ledger the data is tabula rasa.",,crazyquark,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygev:",,,,,,,,,,,,,,,,,,,,,,crazyquark,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Sep/17 5:20 PM;mastersingh24;You can perform a chaincode upgrade transaction:   http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4noah.html?highlight=upgrade#upgrade;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow pluggable Endorser Filters,FAB-6159,20824,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,14/Sep/17 10:54 PM,21/Jul/18 3:48 AM,28/Oct/23 3:00 AM,07/Oct/17 6:00 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,docs-needed,,,,,,"FAB-4207 added endorser filters to the peer to allow preprocessing of a transaction. The utility of these filters is limited by the fact that the peer must be recompiled with changes to the source code to add a custom filter.

We propose to extend this functionality by allowing a deployer to dynamically link an authentication or decoration filter at runtime. This will be done using plugins that are available since Go 1.8.

In addition to loading filters as plugins, this change set will also allow for chaining of static and dynamic authentication filters. ",,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6719,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygf3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Oct/17 10:36 PM;divyank;I'm working on documenting endorser filters;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reevaluate event ACL after config/RSCC update,FAB-6160,20825,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,wlahti,wlahti,14/Sep/17 10:55 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,12/Jan/18 5:15 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Whenever there is a config or RSCC policy update, event ACL should be reevaluated. 

To facilitate this, we must store the signature, creator, and the signed message in handler.",,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygfb:",,,,,,,,,,,,,,,,,,,,,,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/18 6:40 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/16677/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
pkcs11 and an official community build of fabric docker images,FAB-6161,20826,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,gbolo,gbolo,14/Sep/17 11:14 PM,20/Aug/20 2:01 AM,28/Oct/23 3:00 AM,04/Dec/17 2:02 AM,v1.0.2,,,,,,,,,fabric-ca,fabric-orderer,fabric-peer,,0,,,,,,,"Following up on a previously closed ticket ---FAB-3196--- (won't ix)

Let's start the discussion about the usefulness of a static binary that is unable to provide pkcs11 functionality due to linking issues (see ticket).

I understand that pkcs11 is not a popular feature, however, it is almost a requirement for enterprise grade deployments. Ideally, one can take the fabric images and layer on top their own pkcs11 libraries needed for their HSM integration.

I guess I am having a hard time understanding why the docker images are the targets of the statically linked binary? Considering that docker is a *PERFECT* candidate for dynamic linking (since its a container, and its libraries are isolated from the host). 

 

What are your thoughts?

 

Current Behaviour when trying to use pkcs11:

{{[peer0.org1.example.com|http://peer0.org1.example.com/] | fatal error: unexpected signal during runtime execution}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | [signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x0]}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] |}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | runtime stack:}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | runtime.throw(0xe16822, 0x2a)}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | /opt/go/src/runtime/panic.go:566 +0x95}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | runtime.sigpanic()}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | /opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] |}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | goroutine 1 [syscall, locked to thread]:}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | runtime.cgocall(0xb49dc0, 0xc42017d440, 0xc400000000)}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | /opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc42017d410 sp=0xc42017d3d0}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | [github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11._Cfunc_New(0x2939be0|http://github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11._Cfunc_New(0x2939be0], 0x0)}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | ??:0 +0x4a fp=0xc42017d440 sp=0xc42017d410}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | [github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11.New(0xc420231290|http://github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11.New(0xc420231290], 0x30, 0x0)}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | /opt/gopath/src/[github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11/pkcs11.go:763|http://github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11/pkcs11.go:763] +0xc4 fp=0xc42017d480 sp=0xc42017d440}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | [github.com/hyperledger/fabric/bccsp/pkcs11.loadLib(0xc420231290|http://github.com/hyperledger/fabric/bccsp/pkcs11.loadLib(0xc420231290], 0x30, 0xc42020d780, 0x8, 0xc42020d770, 0x9, 0xc420295560, 0x0, 0x0, 0x0, ...)}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | /opt/gopath/src/[github.com/hyperledger/fabric/bccsp/pkcs11/pkcs11.go:39|http://github.com/hyperledger/fabric/bccsp/pkcs11/pkcs11.go:39] +0x13d fp=0xc42017d720 sp=0xc42017d480}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | [github.com/hyperledger/fabric/bccsp/pkcs11.New(0x100|http://github.com/hyperledger/fabric/bccsp/pkcs11.New(0x100], 0xc42020d7e8, 0x4, 0x0, 0xc420298fe0, 0x0, 0xc420231290, 0x30, 0xc42020d770, 0x9, ...)}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | /opt/gopath/src/[github.com/hyperledger/fabric/bccsp/pkcs11/impl.go:64|http://github.com/hyperledger/fabric/bccsp/pkcs11/impl.go:64] +0x259 fp=0xc42017d870 sp=0xc42017d720}}
 {{[peer0.org1.example.com|http://peer0.org1.example.com/] | [github.com/hyperledger/fabric/bccsp/factory.(*PKCS11Factory).Get(0x14c2fa8|http://github.com/hyperledger/fabric/bccsp/factory.(*PKCS11Factory).Get(0x14c2fa8], 0xc42025fb80, 0xc42017d9a8, 0xc42017d998, 0x1, 0x1)}}",,aleksandar.likic,divyank,gbolo,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18176,,,,,,,,,,,,,,,,,,,,,,FAB-6317,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygfj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,divyank,gbolo,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/17 8:40 PM;mastersingh24;This is not a bug given the fact that the static flag is intentionally being used and this is known / expected behavior.
I do think that we can likely move away from the static build if we use the multi-stage build capabilities of Docker 17.06+

Of course we can also make it a a settable flag within the Makefile as well;;;","17/Sep/17 3:35 AM;gbolo;Hi [~mastersingh24]

Thanks for your time and thoughts on this issue. I highly recommend moving to multi-stage docker builds as that should also clean up some of the unnecessary complexity of the Makefile. In terms of the issue itself, I guess the official recommendation would be to create your own images if you intend to use pkcs11. While this works for me, since I already maintain my own images with fabric-ca-client popped in and my own entrypoint logic (I have been using the fabric basically since it's inception), it seems a bit unfortunate for those who are new to the fabric and may not know this. My final question would be, is the goal of these images simply for unit testing and development deployments, or are they intended to be used in a production capacity?

Thanks again Gari.;;;","18/Sep/17 11:07 PM;troyronda;Hi [~mastersingh24]

IMHO, there should be some supported path to using PKCS11 that doesn't involve changing the project (inc. Makefile). As well, I think it would be advisable to have a tagged build that includes PKCS11 capability.

(since my understanding is that PKCS11 is supported by Fabric).

Thoughts?;;;","18/Sep/17 11:16 PM;troyronda;[~mastersingh24] - also, out of curiosity, what's the connection between multi-stage builds and static?

e.g., are you thinking it will be an issue to maintain the same libraries across the images?;;;","18/Sep/17 11:39 PM;aleksandar.likic;[~mastersingh24] We tried to configure the official fabric image with PKCS11 (softhsm2, what BCCSP has been tested with) and it failed - hence the bug.

Fabric is currently not tested with PKCS11. It is only BCCSP (which should be regarded as a 3rd party library) that is tested independently. Until PKCS11 is tested in Fabric and there is a tagged build/image it is not fair to say that Fabric supports PKCS11.;;;","21/Sep/17 3:32 AM;divyank;Hi [~mastersingh24], you mentioned that the static flag is intentionally being used. Can you help us understand the reasoning behind this?

Based on chat conversations and previous commit messages, I came across the following concerns:
 * *Image Size:* It appears that motivation for statically linking C dependencies to the peer and orderer was to keep runtime image sizes small while placing all dependencies in the large builder image. 
This does not make sense to me as the footprint of our C dependencies is extremely small. 
For non-static builds, we only need to ensure that the same version of the dependencies are available at build and run time. This is easy to do because the builder image (baseimage) inherits the runtime image (basos). Even if we moved from ubuntu to something like alpine base images in the future (to further optimize the runtime image size), we can ensure that consistent versions of the dependencies are used across images.
 * *Deterministic Builds:* Another reason was that statically linking ensures all peers link to the same dependencies at build time. This guarantees that we do not end up with two peers in a network that have linked to different versions of the C libraries at runtime.
The current fabric build and distribution process prevents this from happening. We distribute docker images and explicitly control what’s available to the peer at runtime.

In addition to this, if the additional management of dependencies required by dynamic builds is a concern, I’d like to point out that we are already doing this for glibc which (due to weak linking) expects the shared libraries from the version used for static linking to be present at runtime. ;;;","21/Sep/17 10:32 AM;troyronda;I reviewed Divyank's comments above and the benefits listed in the commit description of [https://gerrit.hyperledger.org/r/#/c/13369/]. The benefits are useful for our team. 

Aleks has also made good points regarding the configurable point raised in the - 2 review  what does the CI use - what is published as the images? Aleks is correct that a nostatic flag that isn't supported by CI nor included in published images doesn't fully accomplish the goal.

The out-of-the-box binaries & images should be able to support pluggable modules such as PKCS11 (and hopefully future Fabric extensions too).

From Divyank's writeup, the concerns seem addressable without this flag... If nothing is missing from this analysis, then I am curious why this flag is being set?;;;","23/Sep/17 4:47 AM;divyank;Just a summary of what we're trying to do in case it isn't clear:

 - Pull official fabric peer images from docker hub: [https://hub.docker.com/r/hyperledger/fabric-peer/]
  - Enable BCCSP PKCS11 option
  - Mount .so files using docker volumes. These .so files can be HSM libraries or Go plugins.
  - Run container
  - In both cases (initializing PKCS11 or Go plugins), we see segfaults due to the unsupported -static build

*EDIT:* [~gbolo] informed me that HSM integration involves things other than the .so library (like a fabric-ca client to do enrolment). So step 3 should read:
 Use Official image as base Image (FROM line) with additional layers added to it for HSM libraries, binaries, dependencies and functionality.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave tests are failing in production CI,FAB-6162,20827,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Sep/17 11:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Sep/17 4:17 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"Observed *`behave`* tests are failing with CI configuration error. Below is the error
{code:java}
00:11:00.194     from OpenSSL import rand
00:11:00.194 ImportError: cannot import name rand{code}
[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-behave-x86_64/10774/console]

on pyOpenSSL version 17.3.0.. This worked earlier on pyOpenSSL version 17.2.0..",,bsmita,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygfr:",,,,,,,,,,,,,,,,,,,,,,bsmita,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/17 4:17 AM;rameshthoomu;Patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ability to register for only certain event types,FAB-6163,20828,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,14/Sep/17 11:48 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,08/Dec/17 1:05 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygfz:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only update logging modules that begin with the supplied name at peer start,FAB-6164,20829,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,15/Sep/17 12:34 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,20/Sep/17 7:02 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"The setlevel regular expression currently updates the level for all logging modules that contain the supplied name. It should really only match loggers that start with the name. 

For example, setting the level for ""gossip"" currently updates not only the expected gossip modules but also ""peer/gossip/mcs"" and ""peer/gossip/sa"". ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygg7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[MSP] identity serialization does not encode PEM type,FAB-6166,20832,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bur,bur,bur,15/Sep/17 1:32 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,19/Oct/17 12:48 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,msp,,,,,,"Currently a serialzed identity includes the MSPID and the PEM encoded cert. However, the PEM type is missing.

This looks like the following example:

 
{code:java}
peer-1�-----BEGIN -----
MIICKTCCAdCgAwIBAgIBAjAKBggqhkjOPQQDAjAvMQ8wDQYDVQQKDAZwZWVyLTEx
DzANBgNVBAsMBnBlZXItMTELMAkGA1UEAwwCQ0EwHhcNMTcwOTA1MTE0NTExWhcN
MzcwODMxMTE0NTExWjA8MQ8wDQYDVQQKDAZwZWVyLTExDzANBgNVBAsMBnBlZXIt
MTELMAkGA1UECwwCZ3cxCzAJBgNVBAMMAmd3MFkwEwYHKoZIzj0CAQYIKoZIzj0D
AQcDQgAEtUKUTDH2bUiL8iD6PmVHpMTghazjTI0YsCo+rbYTb3/xQX4CnMsedtlP
ntb6viBhgefib7zxH7I8KZb9Y2Hll6OBzzCBzDAJBgNVHRMEAjAAMBEGCWCGSAGG
+EIBAQQEAwIFoDAzBglghkgBhvhCAQ0EJhYkT3BlblNTTCBHZW5lcmF0ZWQgQ2xp
ZW50IENlcnRpZmljYXRlMB0GA1UdDgQWBBSPcil0OSyq4vkJACDUMpIyvtKrWjAf
BgNVHSMEGDAWgBS0CqebsJhPowEy+sQ9Uks5jocH4jAOBgNVHQ8BAf8EBAMCBeAw
JwYDVR0lBCAwHgYIKwYBBQUHAwIGCCsGAQUFBwMEBggrBgEFBQcDATAKBggqhkjO
PQQDAgNHADBEAiBQCD6vx4RflFdtZjPE9q5nUwe7lcWBKW3WSDMPjjsy2wIgdq3y
0C5XXDXvWz7y/lKdaAXvSwAYGuY61FdPwFTgThs=
-----END -----{code}
 

Attached, you can find a block retrieved from QSCC which shows that some cert PEMs do not have a type.

 

Here is a fix:

 
{code:java}
// Serialize returns a byte array representation of this identity
func (id *identity) Serialize() ([]byte, error) {
 // mspIdentityLogger.Infof(""Serializing identity %s"", id.id)
pb := &pem.Block{Type: ""CERTIFICATE"", Bytes: id.cert.Raw}
 pemBytes := pem.EncodeToMemory(pb)
 if pemBytes == nil {
 return nil, fmt.Errorf(""Encoding of identitiy failed"")
 }
// We serialize identities by prepending the MSPID and appending the ASN.1 DER content of the cert
 sId := &msp.SerializedIdentity{Mspid: id.id.Mspid, IdBytes: pemBytes}
 idBytes, err := proto.Marshal(sId)
 if err != nil {
 return nil, fmt.Errorf(""Could not marshal a SerializedIdentity structure for identity %s, err %s"", id.id, err)
 }
return idBytes, nil
}
{code}
 

 ",,bur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 1:23 AM;bur;mychannel-block0;https://jira.hyperledger.org/secure/attachment/12115/mychannel-block0",,,,,,,,,,,,,,,,,,,,,,"1|hzyggn:",,,,,,,,,,,,,,,,,,,,,,bur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/17 3:17 AM;bur;https://gerrit.hyperledger.org/r/#/c/13473/;;;","19/Oct/17 12:47 AM;bur;Fixed with [https://gerrit.hyperledger.org/r/#/c/13265/|https://gerrit.hyperledger.org/r/#/c/13265/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use go-logging for sarama logging,FAB-6167,20833,18071,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,15/Sep/17 2:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,15/Sep/17 11:15 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,,The sarama Kafka client library logs to system out when logging is enabled via the {{Kafka.Verbose}} configuration field. Make sarama log to a logger with an id of {{orderer/consensus/kafka/sarama}}.,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyggv:",,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 2:55 AM;sanchezl;As part of the work for FAB-4768, I need to install a special logger for sarama to use. This splits out the initial introduction of a custom logger for sarama from the more specialized final logger implementation to be provided in a followup changeset.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update protoc compiled files ,FAB-6169,20836,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,15/Sep/17 4:44 AM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,17/Sep/17 2:14 AM,,,,,,,,,,,,,,0,,,,,,,After upgrade to 1.9 {{make proto}} command will update all proto files as new golang version cause to update message descriptors. In order to reduce conflicts files need to be updated.,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyghb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 4:49 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/13483/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update logging document on readthedocs,FAB-6170,20837,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,wlahti,wlahti,15/Sep/17 5:08 AM,02/Nov/18 3:08 AM,28/Oct/23 3:00 AM,02/Nov/18 3:08 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"There have been a number of changes/enhancements to Fabric's logging package that should be reflected in the documentation to ensure the doc is still usable and easy to follow.

[http://hyperledger-fabric.readthedocs.io/en/latest/logging-control.html]",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12657,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyghj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/18 3:08 AM;wlahti;Closing since this was addressed via FAB-12657.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LTE tool: update to reflect changes in Ledger interface ,FAB-6171,20838,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,15/Sep/17 6:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,31/Oct/17 1:06 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,Changes in the ledger interface (`core/peer/ledger/ledger_interface.go`) need to be reflected in the LTE tool.,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyghr:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/17 1:06 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/13485/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable the ability to specify orderer benchmark parameters on command line,FAB-6172,20839,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,sanchezl,sanchezl,15/Sep/17 12:54 PM,23/Jan/20 7:05 AM,28/Oct/23 3:00 AM,23/Jan/20 7:05 AM,v1.0.2,,,,,,,,,fabric-orderer,,,,0,kafka,stale-item,,,,,The orderer benchmark permutations are hard-coded. Provide a way of running the benchmarks with arbitrary parameters.,,kchristidis,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyghz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,sanchezl,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 11:48 PM;Clayton Sims;what is ETA?;;;","02/Oct/17 8:51 PM;kchristidis;Low priority improvement, hence the ""Future"" assignment for fix version.;;;","12/Oct/17 5:01 AM;Clayton Sims;So the recommendation is to defer post v1.1?

 ;;;","12/Oct/17 5:03 AM;kchristidis;Correct. ;;;","23/Jan/20 7:05 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misspelling in Jira navigation document,FAB-6173,20840,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,cbl,cbl,cbl,15/Sep/17 4:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,22/Sep/17 11:40 AM,v1.0.2,,,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,"Gerritt in [https://github.com/hyperledger/fabric/blame/release/docs/source/jira_navigation.rst#L51] should be Gerrit

 ",,cbl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygi7:",,,,,,,,,,,,,,,,,,,,,,cbl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Sep/17 4:58 PM;cbl;https://gerrit.hyperledger.org/r/13495;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REJECTED - CouchDB index management via resource config tree,FAB-6174,20844,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,15/Sep/17 8:59 PM,21/Jul/18 3:49 AM,28/Oct/23 3:00 AM,04/Dec/17 8:43 PM,,,,,,,,,,fabric-ledger,,,,1,,,,,,,"*SEE FAB-3067 FOR LATEST DESIGN.*

 

*Background/Motivation*

CouchDB rich queries require indexes to perform well.  Additionally, queries with a sort require an index.  Fabric supports CouchDB declarative JSON queries in chaincode as defined at [http://docs.couchdb.org/en/2.0.0/api/database/find.html]. This work item proposes to add support for indexes as defined at the same CouchDB doc page, as well as management lifecycle to create and drop indexes for peers on a channel.

*Index Management*

CouchDB queries are defined in chaincode and executed from chaincode, therefore the index management lifecycle should mirror the chaincode management lifecycle.  Upon implementation of FAB-6042, chaincode definition will be provided in a resource configuration tree in a config transaction, and upon processing the config transaction all peers will ‘deploy’ the chaincode on the channel.
 Similarly, index definition will be provided in the same resource configuration tree under the chaincode definition, and upon processing the config transaction all peers will ‘deploy’ the index to their couchdb state database (if their state database is in fact configured to be couchdb).

The index definition may be in the same config transaction as the chaincode definition, or in a later config transaction. This is useful since new indexes for a chaincode may be identified after chaincode install/instantiate time, especially if the chaincode allowed arbitrary queries to be passed through. The index definition under the chaincode may also be removed with a config transaction, in which case all peers would drop the index. The index change against state database must succeed for the block with the config transaction to be considered committed, just like regular state database changes must succeed for blocks with normal transactions to be considered committed.

The index definition will be included in the resource configuration tree in a new StateDatabaseImpl group under the chaincode resource definition, which can include state database specific metadata.  For example if a peer’s state database is CouchDB, there will be a resource configuration transaction processor listener that will look for a CouchDB group under the chaincode’s StateDatabaseImpl group, and process any new index creations or drops:
{noformat}
<Resources>
    <Chaincodes>
        <Chaincode1>
            (ID) : {
                CodeHash
                InstalledVersion
            }
            (EndorsementPolicy) : {
                PolicyReference
            }
            <StateDatabaseImpl>
                 <CouchDB>
                      <Indexes>
                           (IndexName):{
                                 IndexDefinition
                           }
        ...
{noformat}
If the peer's state database is LevelDB, the CouchDB group is ignored. In this way, database specific artifacts supporting a chaincode can be managed. (Note - If relational database support is added in the future, the DDL for the relational schema supporting the chaincode could be managed using the same mechanism.)

*Implementation Details*

Currently there is one CouchDB database per channel, matching the commit granularity for blocks (channel level).  However, logically chaincode key/value data is scoped per chaincode within the channel.  That is, key/value data can only be accessed or queried by the chaincode that created the data. Similarly, indexes should only apply to data from the corresponding chaincode  (it would not make sense to apply an index from cc1 to documents from cc2).  Since CouchDB indexes apply to all documents within a CouchDB database, the granularity of CouchDB databases will have to change from one db per channel, to one db per channel/chaincode.  This also aligns with chaincode lifecycle which is defined at the channel/chaincode level in the resource configuration tree.  That is, different channels may have different versions of a chaincode ‘deployed’ at any point in time, with corresponding indexes specific to that chaincode version also 'deployed' to the state database.

Implementation implications:
 - CouchDB database name will be based on <channel_chaincode>. See subtask FAB-7130 for more details.
 - VersionedDB for the CouchDB state database impl will logically remain at channel level (since commits are applied at channel level), however there will be N channel_chaincode databases, rather than a single database defined for the VersionedDB.
 - Data will be committed to each chaincode-specific database upon block commit.  Failure to commit to any chaincode-specific database will result in block commit failure, and will be fully recoverable using existing state database recovery logic (idempotent retries).
 - Performance has been evaluated and there is no material difference between bulk writing to one CouchDB database or bulk writing to N CouchDB databases in parallel during block commit processing (actually, parallel bulk updates is the most performant method of writing to CouchDB).
 - State database recovery logic will continue to utilize a channel scoped savepoint document that is written upon commit of all chaincode data in the block. Since the CouchDB database will no longer be channel scoped, the savepoint document per channel will be saved to a new CouchDB database to store state database metadata.
 - For environments upgrading from 1.0 with existing channel-scoped databases, upon peer 1.1 start the channel_chaincode scoped databases will not be found and will be created and populated from the chain data following existing recovery process. In release notes we can recommend that CouchDB data be dropped when upgrading from 1.0 to 1.1, but even if this is not done there is no functional problem, there will simply be a set of orphaned data in the database (orphaned 1.0 channel-scoped databases, as well as newly created 1.1 channel/chaincode-scoped databases). The orphaned 1.0 channel-scoped databases can be dropped anytime, it's just easier to drop all the CouchDB data prior to the 1.1 upgrade.

*Future Work*

In the future, there may also be a need to create/drop an index for a specific peer. For example suppose an auditor organization performs additional queries against their peers, which are never executed on other peers. Additional indexes may be required on these auditor peers only. As such a peer API to manage indexes on that peer only may be needed in the future. This is not in the scope of this work item. However this work item is designed in such a way that it could be added in the future (for example additional indexes may exist in state database over and above the indexes that are defined in the resource configuration tree).

 

 

 

 

 ",,chris.elder,denyeart,jyellick,manish-sethi,mastersingh24,ptippett,rhegde,rickr,varadatibm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2877,,FAB-3067,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygin:",,,,Unset,,,,,,,Unset,,,,,,,,,,,chris.elder,denyeart,jyellick,manish-sethi,mastersingh24,ptippett,rhegde,rickr,varadatibm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 1:31 AM;rickr;[~denyeart] [~chris.elder]  Can you please provide an additional section in the Description on SDK impact?  What specific APIs  (protobuf)  are being altered or added for the SDK to implement ?  Some brief usage scenarios on those APIs ?;;;","29/Nov/17 1:37 AM;rickr;Is the only impact here is when we deploy new CC we need to have the user supply some indices ? 
```
<StateDatabaseImpl>
                 <CouchDB>
                      <Indexes>
                           (IndexName):\{
                                 IndexDefinition
                           }
```;;;","29/Nov/17 6:33 AM;jyellick;-1 for the implementation as it stands, although I might be convinced to rescind it.

First, why do we think this is a good candidate for inclusion in the resources tree? I understand that it is scoped per chaincode, but for instance, why could the indices not be specified as part of chaincode installation?  Do we see cases where the indices would differ per channel?  If not, then a channel scoped configuration tree seems like the wrong place to me.

Second, why create 3 additional levels of nesting in groups? In general, groups should be created when there is an obvious change in the scope of management.  For instance, two orgs clearly have different administration requirements, as could two chaincodes, but why would one index be managed separately from another?

If we are convinced the resource tree is the right place for this information (which, I am not at present), I would have simply expected a single config value named {{StateDatabase}} which encodes a proto message with whatever information is required.;;;","29/Nov/17 10:14 AM;denyeart;Thanks [~jyellick].

In most cases the queries and corresponding indexes will be known at chaincode authoring time, in which case it would make sense to define the index as part of the chaincode installation (would need to figure out a way to package the index definitions with the chaincode, and a way to access these indexes and deploy them upon channel/chaincode define or instantiation steps).  However in some cases chaincodes will expose an open ended query function where clients (or other chaincodes) can pass in their own queries, which require new indexes to be created after chaincode installation time. Even without this pass-through query function pattern, new indexes that help with performance of known chaincode queries may be found after chaincode installation time.  In these cases there needs to be a way to create new indexes after a chaincode is in production, potentially on a channel by channel basis (but that would not be typical).  Given we now have a channel/chaincode configuration in the resource tree and a corresponding config transaction processor pattern, I thought ability to specify indexes under the channel/chaincode level would be the most flexible way to create indexes, either at chaincode definition/instantiation time, OR later times. 

I am open to other ideas however. For example we could require chaincode upgrade each time a new index is required, in which case the indexes could be defined at chaincode installation time (again, would need to figure out a way to package the index definitions with the chaincode, and a way to access these indexes and deploy them upon channel/chaincode define or instantiation steps). 

Considering the config groups, the CouchDB layer is there because there may be various state database types which each have different ‘metadata’ requirements (schemas, indexes, etc) that need to be managed during the chaincode lifecycle.  CouchDB indexes is just the first example but there may be other examples in the future (e.g. if we support relational data models, table DDL would need to be defined and managed during the lifecycle). 
And under CouchDB group there may be N different indexes that get added at different points in time (per the first paragraph). This being said, I am not an expert on the config tree and if you see simpler ways to achieve these objectives I’d like to understand the options.;;;","30/Nov/17 1:10 AM;yacovm;I don't think the place to store the indices should be in the config/resource tree(s). 

# CouchDB indices are a specific to the peer and not to all peers in the channel, so it doesn't make sense to me that it is managed by the channel. 
In the channel state we want to manage things that are common to all peers in the channel, and that relate to business logic metadata like chaincode, and not to infrastructure metadata.
# A config transaction poses an overhead. Not sure why we would want to do that? What about organizations that don't have couchDB? They might need to participate in signing and this only makes the process more cumbersome. 
# What prevents the peer to manage its indices autonomously? Do we really need human intervention for this? The ledger ""sees"" all the queries, so can't it somehow ask couchDB for metadata/statistics and order it to build indices according to that?;;;","30/Nov/17 3:07 AM;denyeart;[~yacovm] [~jyellick] I think both patterns are valuable and eventually we will want to support both:
1) Lifecycle driven automatic deployment of indexes to all channel members, since the most typical pattern is having well-defined indexes corresponding to a certain chaincode that gets invoked on all peers.
2) Ability to deploy indexes to individual peers - to support other scenarios such as queries that only get executed on a subset of peers.

After discussions with [~mastersingh24] and [~ptippett] about what most Fabric hosting services would want to do, the conclusion was that it was most important to have the channel-wide automatic deployment of indexes that could support the chaincode queries on all the peers, rather than having to individually manage indexes on each of the peers (and individually catch up new peers that join the channel in the future with the same indexes).  Option #2 was considered to be a large maintenance issue.  Therefore I wrote up the Jira assuming the lifecycle driven approach as first priority, and indicated that peer managed indexes could be a future work item.  Given that there is dissent, I think we'll want to solicit more feedback from [~mastersingh24] and [~ptippett] and others in the community on the relative priority of each approach.

The config tree driven approach has the benefit of no additional maintenance when the indexes are defined along with the chaincode (expected to be the most typical scenario), as well as the ability to add new indexes at a later point in time with a subsequent config transaction (with additional maintenance required on signing the config transaction as [~yacovm] mentions, but still automatic management across the peers).;;;","30/Nov/17 12:10 PM;jyellick;To my understanding, it seems like including indices in the resources tree chaincode definition is largely a matter of convenience, rather than correctness.  If there were a different mechanism for bulk peer administration, this proposal very well might have been against this other mechanism.

The resources tree is generally the right place for information if:

# The configuration is needed by all peers
# The configuration may be jointly administered
# The configuration is channel scoped
# The configuration requires total order relative to other transactions

I don't think that db indices really tick any of those boxes.

That being said, I'm not sure where else this information would go, and the resources tree was introduced specifically to provide the same sort of function offered by the channel config tree, but without the overhead associated with it.  Assuming that the indices are typically known when the chaincode is defined for the channel, or at least change infrequently, it seems like this would not be much of a burden, especially if the design were revised to use a single config value, rather than groups nested in groups nested in groups.

One question: You mentioned that including the indices as part of a chaincode install could be possible, and this seemed like the obvious choice to me.  However, it seems that any peer without the chaincode installed would not benefit from the indices?  If the indices are actually only useful to peers with the chaincode, not even to all peers with Couch, then install seems like an even more natural place.

Although already solicited, I'd very much like to hear from [~mastersingh24] and or [~ptippett] to make sure that we're all understanding the needs and intent here.;;;","01/Dec/17 2:15 AM;ptippett;After talking this over a bit with [~denyeart] my strongest opinion is we should not leave it up to the user to install both the chaincode and the index on their peer because the risk and pain of forgetting to install the index is a big problem.  Any queries would either perform very slowly on that peer or fail altogether.

Given that, I agree that installing the index for them during chaincode instantiation is mainly a matter of convenience, but would be OK with that approach.  I think the main risk here is that a customer will get upset that something was installed on their peer without their consent/knowledge...which is why I believe we moved away from installing chaincode for them on instantiate.  However, I think this is a much lower concern when installing an index since we could choose to not install it if the peer wasn't using couch and it has no real impact, other than a bit of disk space on the peer, until the user installs the chaincode.  Which is still in their control.

Per the last question from  [~jyellick], would the flow here be that the index would not be installed until the user installed the appropriate chaincode on their peer, but would then be done automatically?  If so, this also seems ideal to me since it both gives them full control over when the index gets installed on the peer but also doesn't require them to perform a separate operation.  This would require that we're able to map the index/indices to the appropriate chaincode/version, but I expect we have to do that anyway.;;;","01/Dec/17 2:48 AM;jyellick;[~ptippett] 

{quote}
After talking this over a bit with David Enyeart my strongest opinion is we should not leave it up to the user to install both the chaincode and the index on their peer because the risk and pain of forgetting to install the index is a big problem. 
{quote}

So my proposal, would be that we make state-database parameters a part of the chaincode package.  In this way, by virtue of installing the chaincode, the peer would also create the DB indices for that chaincode.  No two steps required, and no possibility of forgetting to include them, as they are part of the chaincode package.

The primary drawback here is that:

# The indices must be known at chaincode install time
# The indices must be the same for all channels

If we can live with that, it seems like the superior solution to me.;;;","01/Dec/17 3:54 AM;varadatibm;The nice thing with packaging the index with chaincode, is all users should/would use the same package and get the same index that matches the chaincode.


But if they forget to add index (or update index), would the user need to install and update the new chaincode on all affected channels? Is there any benefit in adding capability to update the index after the install/instantiate step so that the user doesn't have to go through the install/instantiate|update step on affected channels?;;;","02/Dec/17 12:32 AM;denyeart;Let’s split the CouchDB indexes into two categories:
- Default indexes required to support chaincode queries (known at chaincode dev time, relevant for all channels and all endorsing peers)
- Additional indexes to support free form queries or to further optimize performance (potentially peer-specific).

The first priority is the default indexes, but ultimately we’ll need both.

The default index use case checks off most of the criteria that Jason mentioned for resource tree configuration - all peers in the channel should automatically attempt to deploy the default indexes upon chaincode definition/instantiation (Jason’s criteria 1-3),  and any peer without CouchDB will skip the index deployment. Peers not expected to be endorsers generally would not have the chaincode installed and would not utilize CouchDB, therefore this approach would ensure indexes are automatically deployed to all peers intended to be CouchDB endorsing peers (even if the chaincode is not yet installed).  This approach would also enable creation of new indexes for a chaincode at later points in time.

The resource tree configuration is not a perfect fit however, the total order criteria does not fit the index use case, and in fact would be awkward for peers joining the channel later, as there is no need to replay all the index create and index drop events in the ordered sequence. Additionally, there would be no ability to specify peer-specific indexes in the future.

The chaincode install approach is also not a perfect fit. Take for example a peer that did not have the chaincode installed upon chaincode definition/instantiation on the channels.  Say you want to install the chaincode at a later point in time.  The install admin action is channel-less however, and therefore upon install you’d be left in a state where the peer should now be an endorser on the channels but doesn’t have the channel_chaincode database indexes in place to support endorsements.  We could have the install step automatically iterate through all the peer’s channels and create the database indexes on any channel where the chaincode is already defined, but this would be a fundamental change to the scope/intent of chaincode install admin action.  Additionally, there would be no ability to create new channel-wide indexes at a later point in time, and no ability to specify peer-specific indexes in the future.

While I was trying to avoid injecting a new manual lifecycle step at the channel/chaincode/peer level in 1.1 timeframe, it appears that we will in fact need one.  Let me propose this approach:

*For Default indexes required to support known chaincode queries*

Define default indexes in chaincode source directory (e.g. a couchdb_<index_name>.index file per required index). These get packaged up into chaincode installation package.
After chaincode is both defined on channel and installed on peer, you can deploy the indexes to the peer's channel_chaincode state database with the command:
{noformat}
   peer statedb deploy-chaincode-indexes -C <channel> -n <chaincode>
{noformat}

The same indexes may be included in subsequent chaincode version packages. If there are no new indexes, deploy-chaincode-indexes will not have to be re-run for each chaincode version (since state database spans chaincode versions), although re-execution would cause no harm, it would simply be a noop.

If indexes have been added in subsequent chaincode version packages, running deploy-chaincode-indexes for the new chaincode version will ensure new indexes are deployed. Indexes will not be automatically dropped, as peer-specific indexes may have been added and may still be required, but they may be dropped individually (see next section).

*For Additional indexes to support free form queries, or to further optimize performance after chaincode installation time (potentially peer-specific).*

Create a new index on peer’s channel_chaincode state database:
{noformat}
   peer statedb create-index -C <channel> -n <chaincode> <index_definition>
{noformat}

Drop an index from peer’s channel_chaincode state database:
{noformat}
   peer statedb drop-index -C <channel> -n <chaincode> <index_name>
{noformat};;;","02/Dec/17 1:48 AM;manish-sethi;I would go even a step further to say that we should think of some general approach to let the admins use the operations on couchdb directly.

Index creation is just one operation. Bulk of monitoring and performance tuning operations that couchdb offers may be needed from time to time and it could be overwhelming to think of supporting all of couch management functionality via peer commands. Equally would be confusing in the future to allow a few of the things via peer command and for others we would need them to access couchdb directly.

Also, if we start supporting another db (and versions of those..), it's hard to imagine we catching up providing all the management operations for those via peer commands.

I like the idea of bundling the default index definition within chaincode package. But based on my above views, I would limit the peer command to let the admin get the access to the idex-definition file and then let them use the couchdb management interface.

Off course, for letting the admins access the couchdb management, we will need to provide them a secure proxy or access via local machine only.;;;","02/Dec/17 7:37 PM;mastersingh24;[~denyeart]  I don't understand what you mean by ""peer specific"".  If you mean allowing people who want to *directly* query CouchDB (or any other state database) without going through the peer, then I agree with [~manish-sethi] that in those cases users should just operate directly against CouchDB.

The main issue we are trying to solve is ensuring that indexes which are required for any state data access via chaincode are ""installed"" across all peers without the admin for each individual peer needing to do this themselves - meaning we must have a distribution mechanism for this.  

If we assume that for *production* deployment of chaincode that one knows all of the required indexes (derived via testing and knowing the queries embedded in the chaincode) and that the only reason to add/remove indexes would be when chaincode is updated, then essentially including ""ddl"" in the chaincode package itself seems sensible.  Further, I see no reason to do anything else at this point - at least for v1.1 (meaning we *must not* implement any of the ""peer statedb ..."" stuff.

P.S.   FWIW, I actually do believe that indexes are actually a good fit for the resource config because to me indexes are not another type of policy that needs to be distributed and attached to chaincode.  But if the packaging mechanism is the preferred method, then so be it.;;;","03/Dec/17 1:04 AM;denyeart;[~mastersingh24] By “peer specific” I mean indexes could be managed on individual peers.  For example if there is an auditor peer and audit queries are only ever performed on this peer, then the corresponding indexes to support audit queries (either via direct couchdb queries or via queries passed through chaincode) could be deployed on that peer only.  The “peer statedb” proposed commands create-index and drop-index are peer specific to handle these types of situations.

Similarly, the “peer statedb” deploy-chaincode-indexes command would be a peer specific command to deploy the indexes on a peer’s channel_chaincode database, for those scenarios where automatic index management is not desired.  This command would be called for each channel immediately after the “peer chaincode install” command, which has provided the peer with the chaincode installation package that includes the default index definitions for that chaincode.

The “peer statedb” proposed commands give each peer’s administrator full control of the index management.  But like [~manish-sethi] has said, we’ll want administrators to have a way to manage indexes directly against CouchDB regardless, rather than through peer commands.  And like [~mastersingh24] has said we’ll want an option for the default chaincode indexes to automatically be deployed.   This can be achieved through a peer (core.yaml) config setting like *peer.ledger.state.couchDBConfig.autoDeployChaincodeIndexes*.  

With *peer.ledger.state.couchDBConfig.autoDeployChaincodeIndexes* set to true:

- If chaincode is already defined on peer’s channels at the time of chaincode install, the install step would iterate through the peer’s CouchDB channel_chaincode databases and automatically deploy the default chaincode indexes that are included in the chaincode installation package.  This complicates the install step (e.g. chaincode installation may succeed but create indexes may fail, which is why I was suggesting the “peer statedb” commands as a way to fix the indexes as needed).
- If chaincode gets defined (or upgraded) on the resource config tree for one of the peer’s channels after the time of chaincode install, the channel_chaincode database indexes would be automatically deployed upon processing the chaincode config transaction.  Note that this would be the same trigger for creating the channel_chaincode database.  That is, the statedb database resources would be setup automatically as soon as the chaincode resources are defined on a channel, in preparation for subsequent instantiation(Init) and Invokes.

This approach preserves an option to manage indexes completely manually in CouchDB, as [~manish-sethi] has suggested. This would likely be even more important for other types of state databases, for example if support is added for relational databases, most peer administrators would likely want table and index DDL to be executed manually by a DBA rather than automatically.  But for CouchDB indexes I think automatic deployment would be an acceptable (and preferred) default in most scenarios.

The “peer statedb” command line options can be deferred from 1.1 as [~mastersingh24] suggests, assuming hosting services have a way to fix chaincode indexes (and create new indexes on behalf of consumers) directly against CouchDB.  I think any hosting service will need a way to service/manage CouchDB directly regardless, so this should not be a new requirement. [~ptippett] [~varadatibm].;;;","03/Dec/17 6:56 AM;mastersingh24;Thanks for the detailed response [~denyeart].

WRT the  *“peer statedb” command line options*, I think this is actually two features / requirements:
1) the peer needs to expose an API for managing chaincode indexes
2) optionally add the ability to call this command from the ""peer cli""

I think trying to do 1) if possible makes sense.  I don't think we should necessarily do 2) as we simply need to stop adding things to the ""peer cli"" and rather we need to actually create a proper ""fabcli"" post 1.1.

;;;","04/Dec/17 8:25 PM;denyeart;Ok, I have written up the review comments in a cleaned up Description in FAB-3067. We'll use FAB-3067 for any remaining design comments as well as for implementation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add index management to couchdb layer,FAB-6175,20845,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,15/Sep/17 9:00 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,20/Dec/17 6:45 AM,,,,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,,"Add the ability to create/update, delete and list indexes to the couchdb layer.",,AdnanChoudhury,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygiv:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 10:03 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/13497/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add couchdb index management to state database layer,FAB-6176,20846,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,15/Sep/17 9:02 PM,20/Jul/18 11:14 PM,28/Oct/23 3:00 AM,16/Jan/18 7:30 AM,,,,,,,,,,fabric-ledger,,,,0,Release-planning-1.1,,,,,,Add couchdb index management capabilities to the state database layer.,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygj3:",,,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/17 2:02 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/16183/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
There is no byfn.tar.gz on nexus,FAB-6182,20856,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,16/Sep/17 4:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Sep/17 2:55 PM,v1.0.1,,,,,,v1.1.0,,,fabric-samples,fabric-tools,,,0,,,,,,,"I got an error as follows:

{code:java}
ubuntu@ubuntu-xenial:~/bin$ sh get-byfn.sh
===> Downloading Build Your First Network sample application
get-byfn.sh: 13: get-byfn.sh: VERSION: not found
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   995    0   995    0     0   1816      0 --:--:-- --:--:-- --:--:--  1815

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
{code}

There is no examples directory.

{code:java}
Index of /repositories/releases/org/hyperledger/fabric
 
Name    Last Modified    Size        Description
Parent Directory
fabric-binary/    Mon Aug 28 13:48:39 UTC 2017               
hyperledger-fabric/        Thu Sep 07 01:30:01 UTC 2017
{code}

Is get-byfn.sh needed?",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygk7:",,,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Makefile to fabric-test,FAB-6183,20857,19622,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,latitiah,latitiah,16/Sep/17 4:10 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 5:38 AM,,,,,,,,,,,,,,0,,,,,,,"The Makefile should allow CI to perform a set task that is capable of executing different targets. For example, ""make checks"" should be executed consistently, while what is done under this target can be modified as needed.",,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygkf:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/17 11:00 PM;rameshthoomu;[~sambhavdutt] please create a Makefile which should execute fabric-test ""smoke"", ""daily"" and ""release"" tests. As discussed, create multiple targets in Makefile which should clone fabric, fabric-ca etc.. repositories then build docker images and binaries before execute fabric smoke, release and daily tests from fabric-test repository. This approach gives more flexibility to install/update packages or tests as per developer wish in fabric-test repository. CI team, just execute ""make ci-smoke"" or ""make ci-daily"" etc.. from Jenkins job. Let me know if you have any concerns or any questions.;;;","12/Oct/17 7:44 AM;sambhavdutt;Makefile created and pushed to Gerrit fabric-test. Made the necessary amendments as requested, added another target daily-test. ;;;","07/Nov/17 5:38 AM;rameshthoomu;patch has been merged and Makefile is now available in fabric-test repository;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP cache should not use read lock operations,FAB-6186,20861,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,16/Sep/17 1:23 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Sep/17 2:15 AM,v1.1.0,,,,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,,"The MSP cache has RW locks and uses RLock when doing cache lookup, and WLock when doing cache updates.

This may result in the following error if done concurrently while the cache has more than 1 item and only cache lookups are performed, because the cache lookup operation shifts and moves items in the internal list of the cache (that specifies eviction order, since its an LRU cache): 

{code}
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x538863]

goroutine 1198 [running]:
container/list.(*List).remove(...)
	/home/yacovm/OBC/go/src/container/list/list.go:110
container/list.(*List).MoveToFront(0xc420085a70, 0xc420085bf0)
	/home/yacovm/OBC/go/src/container/list/list.go:169 +0x53
github.com/hyperledger/fabric/vendor/github.com/golang/groupcache/lru.(*Cache).Get(0xc420124d20, 0x75bc40, 0xc4203afeb8, 0x3, 0xc4203afe50, 0x3)
	/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/groupcache/lru/lru.go:79 +0x97
github.com/hyperledger/fabric/msp/cache.(*cachedMSP).DeserializeIdentity(0xc4200f0b60, 0xc42008ccfc, 0x3, 0x3, 0x0, 0x0, 0x0, 0x0)
	/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/msp/cache/cache.go:64 +0xfb
github.com/hyperledger/fabric/msp/cache.TestDeserializeIdentity.func1(0xc420124d80, 0xc42008e1a8, 0xc42008cda0, 0xc42008cd98, 0xc42008cd30, 0x3, 0x3, 0xc4200908c0, 0xbd70e0, 0xc4200f0b60, ...)
	/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/msp/cache/cache_test.go:143 +0x107
created by github.com/hyperledger/fabric/msp/cache.TestDeserializeIdentity
	/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/msp/cache/cache_test.go:135 +0x658
{code}

or, in production:
{code}
goroutine 223839 [running]:
container/list.(*List).remove(...)
	/opt/go/src/container/list/list.go:111
container/list.(*List).MoveToFront(0xc42027bc20, 0xc421cdbf50)
	/opt/go/src/container/list/list.go:169 +0x75
github.com/hyperledger/fabric/vendor/github.com/golang/groupcache/lru.(*Cache).Get(0xc42032bcc0, 0xcd8ee0, 0xc421a70d40, 0x31e, 0xc4309a0700, 0x31e)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/groupcache/lru/lru.go:79 +0x97
github.com/hyperledger/fabric/msp/cache.(*cachedMSP).DeserializeIdentity(0xc4200cacb0, 0xc4309a0000, 0x31e, 0x31e, 0x0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/msp/cache/cache.go:64 +0xfb
github.com/hyperledger/fabric/msp.(*mspManagerImpl).DeserializeIdentity(0xc420278660, 0xc4309a0000, 0x31e, 0x31e, 0x3, 0x3, 0xc42001f300, 0x7f6fb8068330)
	/opt/gopath/src/github.com/hyperledger/fabric/msp/mspmgrimpl.go:98 +0x1e1
github.com/hyperledger/fabric/common/cauthdsl.compile.func2(0xc4250bd838, 0x1, 0x1, 0xc423518498, 0x1, 0x1, 0xc421934600)
	/opt/gopath/src/github.com/hyperledger/fabric/common/cauthdsl/cauthdsl.go:87 +0x40b
github.com/hyperledger/fabric/common/cauthdsl.compile.func1(0xc4250bd838, 0x1, 0x1, 0xc423518449, 0x1, 0x1, 0x8)
	/opt/gopath/src/github.com/hyperledger/fabric/common/cauthdsl/cauthdsl.go:57 +0x320
github.com/hyperledger/fabric/common/cauthdsl.(*policy).Evaluate(0xc421b36630, 0xc4250bd838, 0x1, 0x1, 0x10, 0xcd8ee0)
	/opt/gopath/src/github.com/hyperledger/fabric/common/cauthdsl/policy.go:73 +0x78
github.com/hyperledger/fabric/common/policies.(*policyLogger).Evaluate(0xc4217ee340, 0xc4250bd838, 0x1, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/common/policies/policy.go:190 +0x29d
github.com/hyperledger/fabric/common/policies.(*implicitMetaPolicy).Evaluate(0xc4225d9740, 0xc4250bd838, 0x1, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/common/policies/implicitmeta.go:91 +0x149
github.com/hyperledger/fabric/common/policies.(*policyLogger).Evaluate(0xc4222c5d40, 0xc4250bd838, 0x1, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/common/policies/policy.go:190 +0x29d
github.com/hyperledger/fabric/core/policy.(*policyChecker).CheckPolicyBySignedData(0xc420330210, 0xc423518470, 0x9, 0xe567c4, 0x1c, 0xc4250bd838, 0x1, 0x1, 0xc421a71568, 0xa6fa0e)
	/opt/gopath/src/github.com/hyperledger/fabric/core/policy/policy.go:180 +0x102
github.com/hyperledger/fabric/core/policy.(*policyChecker).CheckPolicy(0xc420330210, 0xc423518470, 0x9, 0xe567c4, 0x1c, 0xc42aab3aa0, 0x154ec20, 0xc420159180)
	/opt/gopath/src/github.com/hyperledger/fabric/core/policy/policy.go:104 +0x6ac
github.com/hyperledger/fabric/core/endorser.(*Endorser).checkACL(0xc42032a760, 0xc42aab3aa0, 0xc42aab8e10, 0xc42aab3b90, 0xc4222c5d00, 0xc420159180, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:81 +0x69
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal(0xc42032a760, 0x7f6fb82fa6c0, 0xc42aab39b0, 0xc42aab3aa0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:445 +0x1a40
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal(0xc42026f4e0, 0x7f6fb82fa6c0, 0xc42aab39b0, 0xc42aab3aa0, 0xc42026f4e0, 0x42acb9, 0xc42abc2830)
	/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38 +0x51
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler(0xd34940, 0xc42026f4e0, 0x7f6fb82fa6c0, 0xc42aab39b0, 0xc42aab8cd0, 0x0, 0x0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112 +0x276
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC(0xc420012b40, 0x1561d60, 0xc422590420, 0xc4225aff00, 0xc420330ea0, 0x153b310, 0xc42aab3a40, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781 +0xab4
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc420012b40, 0x1561d60, 0xc422590420, 0xc4225aff00, 0xc42aab3a40)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981 +0x1528
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc4230efe00, 0xc420012b40, 0x1561d60, 0xc422590420, 0xc4225aff00)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551 +0x9f
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:549 +0xa1
{code}

The trivial solution would be to protect the cache only with a simple mutex.",,baohua,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygkn:",,,,,,,,,,,,,,,,,,,,,,baohua,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/17 1:32 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/13539/;;;","16/Sep/17 1:40 PM;yacovm;[~adc] ;;;","07/Dec/17 4:01 PM;baohua;I guess this msp cache feature can be safely ported back to the 1.0.x version?

Any suggestion? I would like to offer a hand if no objection.

Thanks!;;;","07/Dec/17 4:43 PM;yacovm;I generally think it might be a good idea but this JIRA is really not the place to ask that. Open a JIRA and tag all maintainers and then we can vote.;;;","07/Dec/17 5:20 PM;baohua;Good idea!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update version in pre-reqs of Docker (17.06+) and Docker Compose (1.14) ,FAB-6188,20864,19980,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,16/Sep/17 10:35 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Sep/17 2:14 AM,,,,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,"Now that the CI environment has been upgrade, we need to update the pre-reqs so we can start to take advantage of the updated feature sets",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygl3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/17 10:46 PM;mastersingh24;https://gerrit.hyperledger.org/r/13549;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement bccsp plugin ,FAB-6189,20865,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,16/Sep/17 10:59 PM,21/Jul/18 3:51 AM,28/Oct/23 3:01 AM,15/Oct/17 5:55 PM,,,,,,,v1.1.0,,,fabric-crypto,fabric-peer,,,0,,,,,,,"Now that we are building with Go 1.9, we can leverage support for Go-based plugins.
Given that BCCSPs are meant to be pluggable, the idea here is to implement a ""plugin"" provider.

The plugin provider will be simple:
- implement the bccsp interface
- config will take a path to a plugin module as well as a raw map[string]interface{} 

The provider will load the plugin and simply call the matching exported methods.

It should be noted that that plugins will only be useful on Linux platforms, but that's fine since we also provide Docker images.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6719,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyglb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Sep/17 11:00 PM;mastersingh24;This will require votes, but I think this is useful to include in 1.1;;;","08/Oct/17 7:39 PM;mastersingh24;https://gerrit.hyperledger.org/r/13553;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve documentation for queries,FAB-6190,20866,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,17/Sep/17 4:32 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,23/Mar/18 7:15 AM,,,,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,Improve documentation for queries.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx09z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Mar/18 7:15 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/13551/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for Go 1.9 to the CI environment,FAB-6191,20867,19479,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,17/Sep/17 5:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Oct/17 7:20 PM,,,,,,,v1.1.0,,,fabric-ci,,,,0,,,,,,,"The CI machines use the version of Go installed on the machines for the e2e and behave tests (as well as for building binaries, etc).

Given we currently build both master and release branches, we'll need to be able to support multiple versions of Go on the host machines and/or make sure nothing uses the version of Go on the host CI machines",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyglj:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 8:28 PM;mastersingh24;I'll take a stab this morning;;;","03/Oct/17 7:24 PM;mastersingh24;This change depends on ci.properties being in the repo branches;;;","03/Oct/17 8:11 PM;mastersingh24;The *fabric-verify-\{arch\}* jobs all use Docker to run the various tests and since the versions of fabric-baseimage they use have the proper version of Go (i.e.  0.3.2 has Go 1.7.5 and 0.4.x images have Go 1.9) nothing special needs to be done for those jobs.

There are a number of other jobs which use the Go binary which is installed on the slave node itself.  Currently those jobs only run on x86_64 as well.  Jenkins supports injecting properties from files in the actual source repository, but you must use a build step in order to do this.  So we'll introduce a builder macro which will read the properties file and then set the appropriate GOROOT and add GOROOT/bin to the PATH.
We'll then add this builder to all of the jobs which at some point call the Go binary on the slave node.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make static builds configurable,FAB-6192,20868,20826,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,mastersingh24,mastersingh24,17/Sep/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Sep/17 11:38 PM,,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,"Currently, Docker images for the peer and orderer are built with statically compiled binaries.
While we can leave this as the default, there is a need to build with non-static binaries in order to support things like PKCS11 and other shared library plugins",,aleksandar.likic,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6346,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyglr:",,,,,,,,,,,,,,,,,,,,,,aleksandar.likic,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Sep/17 6:53 AM;aleksandar.likic;[~mastersingh24] What is the expected outcome of this ticket? Is it a set of officially supported images (peer and orderer that are not built with statically compiled binaries) with the full set of integrations tests running against them?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the dev environment to the latest tools,FAB-6193,20869,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,17/Sep/17 8:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Sep/17 6:57 PM,,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,"Need to make several updates to the devenv:

* Go 1.9
* Docker 17.06.2-ce
* Docker Compose 1.14
* Node.js 8.4  (also need to keep v6.9.5 as well)",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyglz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Sep/17 6:17 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13569/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No need to print statck trace on invalid stateinfo message.,FAB-6194,20870,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,18/Sep/17 5:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 6:56 AM,,,,,,,,,,fabric-gossip,,,,0,active,gossip,,,,,"Currently gossip code which checks for validity of the StateInfoMessage output following stack trace:

{code}
16:52:35 unit-tests_1  | 2017-09-17 16:52:08.768 UTC [gossip/gossip#p4] validateMsg -> WARN 29d StateInfo message GossipMessage: tag:CHAN_OR_ORG state_info:<metadata:""\000\000\000\000\000\000\000\000"" timestamp:<inc_num:11651379494838206464 seq_num:1505667124723990546 > pki_id:""localhost:5613"" channel_MAC:""\253g\353XK\300\331\211\20024?R~z+g\247}\016\363TI\304\337\022\314:x\002\330\020"" properties:<> > , Envelope: 89 bytes, Signature: 89 bytes is found invalid: PKIID wasn't found
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Get
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:149
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateStateInfoMsg
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1194
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateMsg
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:430
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).handleMessage
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:352
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).acceptMessages
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:333
16:52:35 unit-tests_1  | runtime.goexit
16:52:35 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2337
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateStateInfoMsg
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:1196
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).validateMsg
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:430
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).handleMessage
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:352
16:52:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).acceptMessages
16:52:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:333
16:52:35 unit-tests_1  | runtime.goexit
16:52:35 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2337
{code}

which is way too verbose and redundant. Therefore it will be enough to log only relevant information regarding validation w/o stack trace.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzygm7:",,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Sep/17 5:10 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/13567/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Git commits should include Jira issue ID in the one-line commit message,FAB-6195,20871,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,dileban,dileban,dileban,18/Sep/17 9:18 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,30/Sep/17 3:06 AM,,,,,,,,,,fabric-docs,,,18/Sep/17 12:00 AM,0,Documentation,,,,,,The documentation on submitting changes to Gerrit appears to be outdated. The current convention is to include the JIRA issue ID on the one-line commit message for readability in Gerrit.,,dileban,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygmf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,dileban,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add SDK wrapper code for calling fabric APIs,FAB-6197,20877,19362,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,18/Sep/17 11:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 3:01 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6497,,,,,,,,,FAB-536,,,,,,FAB-536,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygo7:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validation of a block needs to return expected private data,FAB-6199,20884,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,19/Sep/17 2:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 1:21 AM,v1.1.0,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,"When a block is committed and has private data - we need to fetch only private data that corresponds to valid transactions.

Therefore, we should change the validator interface so that it returns a list of valid transactions and have the coordinator call the validator, instead of the committer to do that.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygon:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Include OWASP Depency-check in the fabric-sdk-java CI job,FAB-6202,20887,30313,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,ashutosh_kumar,ashutosh_kumar,19/Sep/17 5:16 AM,24/Apr/19 4:55 AM,28/Oct/23 3:01 AM,24/Apr/19 4:54 AM,,,,,,,Future,,,fabric-build,,,,0,CI_Adhoc_Req,,,,,,"To identify security vulnerability in the dependent  java packages , i.e. packages on which Java SDK is dependent on ,  owasp DependencyCheck (https://github.com/jeremylong/DependencyCheck) is vogue in the industry. It is advisable to integrate this into Jenkins CI process.",,ashutosh_kumar,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygp3:",,,,,,,,,,,,,,,,,,,,,,ashutosh_kumar,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 5:39 AM;ashutosh_kumar;This job non-voting under the assumption that it produces false positives. Also , in the event of Security Vulnerability , email should be sent to Fabric SDK team.;;;","21/Sep/17 3:08 AM;rameshthoomu;[~ashutosh_kumar] Do you want me to create a separate non voting job for this task? If yes, what tests you want me to run from this job.

I have submitted this change in fabric-sdk-java verify and integrated OWSP dependency-check plugin.. I see build configuration is failing while executing this job with this change.;;;","21/Sep/17 3:09 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/13653/;;;","21/Sep/17 3:32 AM;ashutosh_kumar;[~rameshthoomu] , yes I want to create separate non voting job for this. No test needed for this job. Once it is integrated to build process , vulnerabilities in the jar lib will be reported , if present.;;;","17/Nov/17 7:07 AM;rameshthoomu;patch has been submitted https://gerrit.hyperledger.org/r/#/c/15551/;;;","22/May/18 10:55 PM;ashutosh_kumar;Once [https://gerrit.hyperledger.org/r/#/c/22075/] is merged , you need to simply run mvn verify every Sunday night and send me email notification. Please abandon your last jobs as those are not required.;;;","24/May/18 4:51 AM;ashutosh_kumar;Once [https://gerrit.hyperledger.org/r/#/c/22219/] is merged , you should run this command :

 mvn -P owasp verify every Sunday night.;;;","24/May/18 5:35 AM;ashutosh_kumar;[~rameshthoomu] , please remove this from Java SDK script 

 
unzip -q dependency-check-3.0.2-release.zip*16:28:14* + ./dependency-check/bin/dependency-check.sh --project Testing -f HTML --out . --scan ./target
It is not required and is conflicting with the change set [https://gerrit.hyperledger.org/r/#/c/22219/];;;","10/Jul/18 9:16 PM;rameshthoomu;This has been removed from sdk-java verify and merge jobs.;;;","23/Apr/19 5:51 AM;rameshthoomu;This has been removed from owasp weekly job. I have asked [~sambhavdutt] to add this back in weekly job.
;;;","23/Apr/19 11:12 AM;sambhavdutt;CR Submitted, 
https://gerrit.hyperledger.org/r/#/c/31053/

Sandbox Reference
https://jenkins.hyperledger.org/sandbox/view/All/job/fabric-sdk-java-owasp-weekly-x86_64/5/jacoco/;;;","24/Apr/19 4:55 AM;rameshthoomu;[~sambhavdutt] We don't need Code coverage report in this job.. We need HTML document on the vulnerable scan https://jenkins.hyperledger.org/sandbox/view/All/job/fabric-sdk-java-owasp-weekly-x86_64/OWSP_20Dependency_20Check_20Results/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports marbles chaincode,FAB-6203,20888,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,19/Sep/17 5:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Sep/17 12:14 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"PTE supports marbles chaincode, see [https://github.com/hyperledger/fabric/tree/master/examples/chaincode/go/marbles02] for marbles chaincode",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzygpb:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"22/Sep/17 12:14 AM;dongming;PTE supports initMarble and readMarble initially.  More invokes and queries commands will be added.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Include NSP (Node Security) in Fabric-node-sdk CI job,FAB-6204,20889,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,ashutosh_kumar,ashutosh_kumar,19/Sep/17 5:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 1:03 AM,,,,,,,v1.1.0,,,fabric-build,fabric-ci,,,0,build-system,,,,,,"To identify Security Vulnerabilities in the node modules that Fabric Node SDK is dependent on , usage of nsp package (https://github.com/nodesecurity/nsp) is vogue in the industry. We should include this in our Node SDK CI job.

 

I did some experimentation using NSP on fabric-sdk-node and result come out clean. I am not sure whether it produces false positives. I would not like this to be a voting job for that reason.

 

In the event of existence of Security Vulnerability(ies) , email notification should be sent to Node SDK team.",,ashutosh_kumar,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygpj:",,,,,,,,,,,,,,,,,,,,,,ashutosh_kumar,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/17 1:03 AM;rameshthoomu;Patch has been submitted and merged. Now we run vulnerability tests for every patch set on fabric-sdk-node repo. If we found vulnerable errors will fail the patch set with -1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP document typos,FAB-6206,20891,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,cbl,cbl,cbl,19/Sep/17 11:25 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,21/Sep/17 7:51 AM,v1.0.2,,,,,,v1.1.0,,,fabric-docs,,,,0,,,,,,,"""overriden"" in [https://github.com/hyperledger/fabric/blame/release/docs/source/msp.rst#L146] should be ""overridden"".

 ",,cbl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygpr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,cbl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Sep/17 12:48 PM;cbl;https://gerrit.hyperledger.org/r/#/c/13597/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failing gossip state transfer test,FAB-6207,20892,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,19/Sep/17 12:47 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 1:39 PM,,,,,,,,,,fabric-gossip,,,,0,active,gossip,,,,,"There is a gossip state transfer test failing after introducing commit for FAB-5084, 


{code}
unit-tests_1  | 2017-09-19 02:33:03.863 UTC [gossip/gossip#p1] NewGossipService -> WARN 286 External endpoint is empty, peer will not be accessible outside of its organization
unit-tests_1  | removing dir = /tmp/tests/ledger/node/ledgersData
unit-tests_1  | panic: runtime error: invalid memory address or nil pointer dereference
unit-tests_1  | [signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0xa6f4c9]
unit-tests_1  |
unit-tests_1  | goroutine 15374 [running]:
unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).privateDataMessage(0xc42246e510, 0x12ce9a0, 0xc4239f9440)
unit-tests_1  |         github.com/hyperledger/fabric/gossip/state/_test/_obj_test/state.go:287 +0x119
unit-tests_1  | created by github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).listen
unit-tests_1  |         github.com/hyperledger/fabric/gossip/state/_test/_obj_test/state.go:265 +0x478
unit-tests_1  | FAIL    github.com/hyperledger/fabric/gossip/state      56.473s
unit-tests_1  | error: exit status 1
unit-tests_1  | panic: EOF
unit-tests_1  |
unit-tests_1  | goroutine 1 [running]:
unit-tests_1  | main.main()
unit-tests_1  |         /opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x14a4
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygpz:",,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Sep/17 1:40 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/13601/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make Docker dependency as optional,FAB-6209,20895,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,wonderfan,ganbold,ganbold,19/Sep/17 9:25 PM,15/Aug/18 7:15 PM,28/Oct/23 3:01 AM,12/Feb/18 10:27 PM,,,,,,,WON'T FIX,,,fabric-build,,,,0,build-system,Documentation,help-wanted,Must,should,Usability,"Is it possible to make fabric-sdk-go and fabric run without docker?

So when I run peer node start --peer-chaincodedev=true and try again to run make in fabric-idk-go, following error appears:

 {{2017-09-18 01:32:15.121 ULAST [chaincode] sendReady -> DEBU 656 handler not found for chaincode e1q81biqy3:v0}}
 {{2017-09-18 01:32:15.121 ULAST [chaincode] Launch -> ERRO 657 sending init failed(handler not found for chaincode e1q81biqy3:v0)}}

 

{{What could the reason of this error?}}

{{thanks,}}

{{Ganbold}}

 ",,ChristopherFerris,ganbold,phillipviana,troyronda,vzbarsky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygrb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,ganbold,phillipviana,troyronda,vzbarsky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 11:40 PM;troyronda;fabric-sdk-go does not require the application importing the SDK to be run within docker.;;;","03/Oct/17 2:10 PM;ganbold;What I meant here is fabric itself does require docker and also it seems chaincode validation requires docker. Would it be possible to make docker optional?

Because docker is not well supported on OS like FreeBSD for instance.;;;","12/Feb/18 10:27 PM;ChristopherFerris;Hyperledger Fabric requires Docker. This is part of the current design/architecture (to run chaincode in Docker containers for isolation).

As Troy noted, you can certainly run the sdk-infused application w/o docker, but there isn't likely to be a change near term to change the chaincode operational characteristics.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add entrypoint cli arg for chaintool package,FAB-6210,20896,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mrkiouak,mrkiouak,mrkiouak,19/Sep/17 10:01 PM,23/Jan/20 7:05 AM,28/Oct/23 3:01 AM,23/Jan/20 7:05 AM,,,,,,,,,,,,,,0,stale-item,,,,,,"Currently chaintool expects <dir of chaintool.yaml>/src/chaincode/*.go as entrypoint

Support for greater nesting under chaincode so that src/chaincode/foo & src/chaincode/bar may be the only entries in src/chaincode, but passing e.g. chaintool package -e src/chaincode/foo would cause src/chaincode/foo to be treated as src/chaincode is currently.

 

Notes on item from ghaskins:
 * 
 I would probably tie it to the :platform tag in the yaml
 * 
 like line 18: [https://github.com/hyperledger/fabric-chaintool/blob/master/examples/example02/app/chaincode.yaml#L17|https://github.com/STTOOA/fabric-chaintool/blob/master/examples/example02/app/chaincode.yaml#L17]
 * 
 Entrypoint: chaincode/ec

 * 
 I __think__ all of this should be contained within src/chaintool/platforms/golang/userspace
 * 
 theres some hard coded assumptions like this one: [https://github.com/hyperledger/fabric-chaintool/blob/master/src/chaintool/platforms/golang/userspace.clj#L210|https://github.com/STTOOA/fabric-chaintool/blob/master/src/chaintool/platforms/golang/userspace.clj#L210]
 * here as well: [https://github.com/hyperledger/fabric-chaintool/blob/master/src/chaintool/platforms/golang/userspace.clj#L281|https://github.com/STTOOA/fabric-chaintool/blob/master/src/chaintool/platforms/golang/userspace.clj#L281]

 * 
 it might just be those two places
 * 
 nope: one more: [https://github.com/hyperledger/fabric-chaintool/blob/master/src/chaintool/platforms/golang/userspace.clj#L295|https://github.com/STTOOA/fabric-chaintool/blob/master/src/chaintool/platforms/golang/userspace.clj#L295]",,mrkiouak,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygrj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mrkiouak,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:05 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: Behave framework---Add support for chaincode languages,FAB-6211,20898,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,19/Sep/17 10:12 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Sep/17 3:25 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"In the Behave frameowrk, added support for chaincode languages (added a flag --lang).

This will help in testing various chaincodes written in other than go language (At the moment it is nodejs)

Also add a smoke test suite to test various chaincodes written in golang and nodejs.

We can add java chaincode aswell, once the support is enabled in fabric.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygrr:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"19/Sep/17 10:50 PM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/13603/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Configure private data collection membership,FAB-6212,20899,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,denyeart,denyeart,19/Sep/17 10:38 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,30/Oct/17 12:15 AM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5082,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzygrz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 12:16 AM;denyeart;Done under Epic FAB-5082.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Evaluate private data collection membership to determine which peers to gossip disseminate private data to (push and pull),FAB-6213,20900,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,denyeart,denyeart,19/Sep/17 10:40 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,30/Oct/17 12:17 AM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5082,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzygs7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 12:17 AM;denyeart;Done under FAB-5082.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
P3 - Coordinator delete of tx private transient data upon successful block commit,FAB-6215,20902,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,19/Sep/17 10:51 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,09/Oct/17 6:50 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzygsn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Oct/17 3:55 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/14031/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] Add s390x fabric-chaincode-node verify and merge jobs in CI,FAB-6216,20903,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Sep/17 10:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,23/Sep/17 3:35 AM,v1.0.2,,,,,,v1.1.0,,,fabric-ci,,,,0,fabric-ci,,,,,,"Add *s390x fabric-chaincode-node verify and merge* jobs in CI. Enable below features on these jobs..

 — Coverage report

 — Don't publish npm modules from s390x

 — Capture log artificats

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygsv:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/17 3:35 AM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Do pull AFTER validation,FAB-6218,20906,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,19/Sep/17 11:56 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,25/Sep/17 9:49 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,Move private data pull to be AFTER tx validation.,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygtb:",,,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Sep/17 11:47 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/13769/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parallelize push to peers,FAB-6219,20907,18792,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,denyeart,denyeart,20/Sep/17 12:03 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Sep/17 3:06 AM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygtj:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to instantiate node.js chaincode,FAB-6220,20908,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,zhaochy,davidkel,davidkel,20/Sep/17 12:24 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Sep/17 5:46 AM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,Docker,peer,,,,,"As part of the new capabilities coming in fabric, support exists for node.js chaincode. I am currently testing this capability and the base image that the node container uses in order to perform the npm install does not have python 2.7 installed (it does have python3 but this version of python cannot be used). When the docker container runs npm install to prepare the node.js chaincode, some npm modules require compilation using node-gyp which in turn uses python 2.7. An example of a failure is this
{noformat}
> grpc@1.6.0 install /chaincode/output/node_modules/grpc
> node-pre-gyp install --fallback-to-build --library=static_library

node-pre-gyp ERR! Tried to download(undefined): https://storage.googleapis.com/grpc-precompiled-binaries/node/grpc/v1.6.0/node-v57-linux-x64.tar.gz
node-pre-gyp ERR! Pre-built binaries not found for grpc@1.6.0 and node@8.4.0 (node-v57 ABI) (falling back to source compile with node-gyp)
gyp ERR! configure error
gyp ERR! stack Error: Can't find Python executable ""python"", you can set the PYTHON env variable.
gyp ERR! stack at PythonFinder.failNoPython (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:483:19)
gyp ERR! stack at PythonFinder.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:397:16)
gyp ERR! stack at F (/usr/local/lib/node_modules/npm/node_modules/which/which.js:68:16)
gyp ERR! stack at E (/usr/local/lib/node_modules/npm/node_modules/which/which.js:80:29)
gyp ERR! stack at /usr/local/lib/node_modules/npm/node_modules/which/which.js:89:16
gyp ERR! stack at /usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/index.js:42:5
gyp ERR! stack at /usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/mode.js:8:5
gyp ERR! stack at FSReqWrap.oncomplete (fs.js:152:21)
gyp ERR! System Linux 3.13.0-129-generic
gyp ERR! command ""/usr/local/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""configure"" ""--fallback-to-build"" ""--library=static_library"" ""--module=/chaincode/output/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64/grpc_node.node"" ""--module_name=grpc_node"" ""--module_path=/chaincode/output/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64""
gyp ERR! cwd /chaincode/output/node_modules/grpc
gyp ERR! node -v v8.4.0
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok
node-pre-gyp ERR! build error
node-pre-gyp ERR! stack Error: Failed to execute '/usr/local/bin/node /usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js configure --fallback-to-build --library=static_library --module=/chaincode/output/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64/grpc_node.node --module_name=grpc_node --module_path=/chaincode/output/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64' (1)
node-pre-gyp ERR! stack at ChildProcess.<anonymous> (/chaincode/output/node_modules/grpc/node_modules/node-pre-gyp/lib/util/compile.js:83:29)
node-pre-gyp ERR! stack at emitTwo (events.js:125:13)
node-pre-gyp ERR! stack at ChildProcess.emit (events.js:213:7)
node-pre-gyp ERR! stack at maybeClose (internal/child_process.js:927:16)
node-pre-gyp ERR! stack at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)
node-pre-gyp ERR! System Linux 3.13.0-129-generic
node-pre-gyp ERR! command ""/usr/local/bin/node"" ""/chaincode/output/node_modules/grpc/node_modules/.bin/node-pre-gyp"" ""install"" ""--fallback-to-build"" ""--library=static_library""
node-pre-gyp ERR! cwd /chaincode/output/node_modules/grpc
node-pre-gyp ERR! node -v v8.4.0
node-pre-gyp ERR! node-pre-gyp -v v0.6.36{noformat}
Although interestingly it should have been able to pull down a pre-built package, the point is at this time it couldn't plus other native modules won't have prebuilt packages. Therefore it is critical that npm install can handle building native modules and that requires python2.7 to be installed and driven by the command `python`. Also basic linux compilation tools such as gcc and make also need to be available.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygtr:",,,,,,,,,,,,,,,,,,,,,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Sep/17 10:02 PM;jimthematrix;what needs to be done is to release a new version of fabric-baseimage that has the python 2.7 installed and linked to the ""python"" executable.

- modify ""fabric-baseimage/config/docker/baseimage/Dockerfile"" to install python 2.7 and link the ""python"" executable to it
- increase the version number by modifying Makefile
- update fabric/.baseimage-release accordingly once the update has been published to docker hub;;;","22/Sep/17 10:13 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/13721/ - update fabric-baseimage with installing python 2.7 and linking the executable to ""python"";;;","01/Dec/17 6:50 PM;dsanchezseco;+*Nevermind. I was using the wrong images due to a mistake with the curl*+

 

 

If found the same error on fabric-ccenv, which i used on chaincode-docker-devmode.

 

I have the images

hyperledger/fabric-ccenv x86_64-1.0.4 856061b1fed7 4 weeks ago 1.28GB
 hyperledger/fabric-baseos x86_64-0.3.2 bbcbb9da2d83 3 months ago 129MB

 

gathered with the latest curl in the docs -> curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.1.0-preview.

 

Could be the wrong version of the images or should i open a ticket?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define peer resource tree config parsing structures,FAB-6223,20911,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Sep/17 4:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Nov/17 10:02 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,Release-planning-1.1,,,,,,"See the tree structure defined in the parent issue.

[~jyellick] plans to handle this work item, so anyone looking to implement this task please coordinate with him to help avoid duplicated work.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygtz:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/17 1:53 AM;return_01;Hi sir,

If you would, kindly allow me and direct me to to the path for the folder (I believe, it is related to {{peer}} folder) and any related task that was done(for inspiration). I will try to make a design document. Thanks. ;;;","16/Nov/17 10:02 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/14601/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define new gRPC interfaces for peer resource tree configuration manipulation,FAB-6224,20912,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,jyellick,jyellick,20/Sep/17 5:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:12 AM,,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,"This task still needs some design, but, the API must minimally expose a way to retrieve the current configuration tree, ideally a merged configuration of both the channel and peer resources.

The API should return a message encapsulating a {{common.Config}} proto structure for the channel config, and one for the peer resources config.  For instance, this message might suffice:

{noformat}
message PeerConfig {
    common.Config channel = 1;
    common.Config resources = 2;
}
{noformat}

This API call must be restricted to members of the channel to avoid leaking channel membership information.

This structure may be operated on via the {{configtxlator}} tool, and this might be the best way to minimize the API surface exposed.  Optionally, the API could also expose some of the {{configtxlator}} APIs, or, it could also contain special purpose helper calls for performing actions like defining a new chaincode.  I lean towards making the API surface smaller and pushing this work to the SDKs, but, it may be more expedient to perform this work in the peer.",,denyeart,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygu7:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 8:50 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/15107/;;;","16/Nov/17 9:50 PM;denyeart;This task is superseded by FAB-6951.;;;","17/Nov/17 6:27 AM;denyeart;Label not needed for subtasks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define new peer configuration transaction types,FAB-6225,20913,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Sep/17 5:09 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:14 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"In order to support config-like updates for the peer, it is necessary to define a new transaction type which is not an endorser transaction.

Most likely, this means defining a new transaction type: {{PEER_CONFIG_UPDATE}} or perhaps {{RESOURCE_CONFIG_UPDATE}} which embeds a {{common.ConfigUpdate}} as its payload data.

The protolator tool should also be extended to support this new type in the CR which adds it.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyguf:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 10:19 PM;denyeart;[~jyellick] Is this a dup of subtask FAB-6873 which defined PEER_RESOURCE_UPDATE?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add custom processor for peer resource config update transactions.,FAB-6227,20915,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,jyellick,jyellick,20/Sep/17 5:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Dec/17 4:35 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The ledger supports plugins for processing non-endorser transactions.  One needs to be added which will trigger the standard config processing path, but for the resource config tree instead of the channel config tree.

The pattern should be similar to the channel config, or the existing resources config (for ACLs) processing.  The config should be parsed into immutable structures of a bundle, the bundle should then be set via an atomic store operation to a bundle container structure.  The components of the system may then get a stable view of the configuration for performing endorsements in particular (config should always be stable in the commit path).

Ideally, the config should be stored as flattened key/values where the key is the canonical name of the element and the value is the config element proto (custom marshaled).  Code will need to be written to translate between the flattened storage values and the proto encoded values.

Alternatively, the config could be stored as a single marshaled blob.  However, this is suboptimal for inclusion in MVCC sets, and will cause different state hashes across different peers.  Still, this could be a low-work required solution for v1.1.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyguv:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/17 4:35 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/15797/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hook chaincode endorsement paths into the new peer resource config structure,FAB-6228,20916,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,jyellick,jyellick,20/Sep/17 5:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Dec/17 1:54 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The chaincode endorsement paths should retrieve a current copy of the peer resource configuration, and use it to determine whether a chaincode exists.  In an ideal world, this operation would also affect the MVCC data by including the chaincode attributes in the MVCC set.  Alternatively, a single MVCC read against the global peer resource configuration sequence could be used.",,ales,elli-androulaki,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygv3:",,,,,,,,,,,,,,,,,,,,,,ales,elli-androulaki,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 7:58 PM;ales;[~jyellick] I'm almost done with this, but there's one point that requires a bit more clarity: instantiation policies. From what I understood:
 * instantiation policies would be artifacts of an installed chaincode, coupled with the installed cc bundle
 * instantiation policies would not be stored as part of the cc resource tree
 * instantiation policies would not be checked when the chaincode has been installed
 * instantiation policies would be checked by a peer upon receipt of a tx proposal, to determine whether that peer is willing to endorse that proposal
 ** in particular, the check would retrieve the instantiation policy from the cc bundle and verify that the config update that deployed/upgraded the chaincode contains a signature set that satisfies the instantiation policy (note that the signature set on that config update would have to satisfy two policies: the mod policy for that branch of the tree *AND* the instantiation policy);
 ** the check could be performed before every endorsement; alternatively, we could attach the check to - say - the Launch function that starts a chaincode

Do we have agreement on this? Can we spot any problems with this approach? Adding [~mne] [~ellaki] [~elli-androulaki] [~angelo.decaro] [~adecaro] [~mastersingh24];;;","03/Nov/17 7:34 PM;ales;A WIP for review https://gerrit.hyperledger.org/r/#/c/15141/;;;","07/Nov/17 1:23 AM;elli-androulaki;As discussed with [~ales], this approach would not work as cc container is per chaincode and not per channel. Variants of this approach that include a per chaincode and channel flag would also incur into more complex code written, and would tax auditability.

Regarding instantiation policies, various approaches and their advantages/shortcomings have been documented [here|[https://docs.google.com/document/d/1VDQT0SXWbH4c5l-4KK1BkRslSI1WX9LP3Ahg38Tzffw/edit?usp=sharing]] 

It would make sense to move the discussion there.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hook chaincode validation paths into the new peer resource config structure,FAB-6229,20917,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,jyellick,jyellick,20/Sep/17 5:21 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Dec/17 1:54 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"Chaincode validation currently works by looking up the endorsement policy for a chaincode as defined by the LSCC.  Instead, this validation needs to look up the current endorsement policy by the reference as defined by the peer resource config structure.  In the future, more pieces of validation may occur here, so it would be peferable for the code to retrieve a full copy of the configuration and use this as a parameter to the validatoin.

Note, especially for replaying the chain, being able to pass the correct validation context is crucial, so some of the peer internal APIs may need to be modified to accommodate this.",,ales,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygvb:",,,,,,,,,,,,,,,,,,,,,,ales,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Nov/17 5:11 PM;ales;As part of that work, we need to remove the now unused GetCCValidationInfoFromLSCC.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement the new style lifecycle chaincode deployment with the peer CLI,FAB-6230,20918,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,jyellick,jyellick,20/Sep/17 5:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Dec/17 11:00 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygvj:",,,,,,,,,,,,,,,,,,,,,,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/17 3:59 AM;yacovm;I am reverting this change due to lifecycle not changing in v1.1 eventually ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document the new peer resources config based chaincode lifecycle management,FAB-6231,20919,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,20/Sep/17 5:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:13 AM,,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygvr:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the fabric-samples and e2e tests to utilize the new peer resources config based chaincode lifecycle management,FAB-6232,20920,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,20/Sep/17 5:23 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:13 AM,,,,,,,WON'T FIX,,,fabric-peer,fabric-samples,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygvz:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determine how to address the possibility of a peer resource config update in the middle of a block,FAB-6233,20921,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,20/Sep/17 5:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:14 AM,,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,"Peer resource config updates are very similar to standard channel config updates, in that they affect how transactions are validated.  Since transactions are validated in general a block at a time, if one transaction affects the way another is validated (aside from MVCC), it's not obvious what the correct behavior should be.

1. State that config updates always affect _subsequent_ blocks only.
  Pros: Very easy to implement
  Cons: Unintuitive to users and auditors

2. Make config updates take affect immediately for subsequent transactions in the block
  Pros: Intuitive to users/auditors
  Cons: Makes doing parallel tx validation much more difficult (blocks must be broken down into parallelizable batches which do not include the config updates)

3. Have the orderer enforce that config updates are always in their own block
  Pros: Easy to implement, intuitive for users
  Cons: Violates separation of concerns for ordering around peer specific behavior.

We need to decide on one of these behaviors.",,denyeart,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygw7:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 7:23 AM;denyeart;Subtasks do not require release planning label. I'm removing the subtask labels and ensuring the label is on the parent items (FAB-6042 in this case).;;;","05/Dec/17 3:04 AM;kchristidis;I propose that we proceed with behavior #3 but in a way that doesn't violate the separation of concerns between the orderer and the peer.

Specifically, I propose that we define a namespace under the configuration tree where we enumerate the ChannelHeader types that will be cut into their own block. I was originally thinking of a Value under /Orderer/, in which case the ""we"" in ""we enumerate"" would be the orderer admins and this configuration would be scoped per ordering service. But following our discussion in Rocket.Chat I agree that /Channel/Application/ makes better sense – in this case, it is the channel admins who set this value and its effect is, obviously, channel-scoped.

The benefit of this proposal is that it maintains the separation of concerns between the orderer and the peer. It also gives us a mechanism to extend the list of message types that should be cut into their own blocks.

As Jason noted when we discussed this, this will require custom logic for the 1.0 to 1.1 upgrade scenario; this type is not defined on 1.0 channel configurations. Even though there is precedent for this (see our fix on the mod_policy), the concern is valid; we should cut down on throwaway code.

I still think however that the benefits outweigh the downsides for this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have configtxgen emit defaults for peer resource config,FAB-6234,20922,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Sep/17 5:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:14 AM,,,,,,,v1.1.0,,,fabric-tools,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygwf:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement the new style lifecycle chaincode deployment in the various SDKs,FAB-6236,20924,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,20/Sep/17 6:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:14 AM,,,,,,,WON'T FIX,,,fabric-sdk-go,fabric-sdk-node,,,0,sdk,,,,,,"This is a placeholder item for the various SDKs to support the new style chaincode deployment approach.  Once the design and implementation stabilize to the point where the SDKs can begin work, this subtask can be promoted to a top level task with its own subtasks, one per SDK.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-145,,,,,"30/Nov/17 11:28 AM;jyellick;example.tar.gz;https://jira.hyperledger.org/secure/attachment/13430/example.tar.gz",,,,,,,,,,,,,,,,,,,,,,"1|hzygwn:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/17 11:33 AM;jyellick;I've uploaded a tar file which contains the following files:

# {{initial.pb}}: A proto encoded common.Config structure
# {{initial.json}}: A JSON decoding of initial.pb
# {{final.pb}}: A proto encoded common.Config structure which adds an additional chaincode
# {{final.json}}: A JSON decoding of final.pb
# {{update.pb}}: A proto encoded common.ConfigUpdate structure
# {{update.json}}: A JSON decoding of update.pb

Essentially, {{initial.pb}} might be an initial resources tree.  {{final.pb}} would be how that resources tree would be modified to add a new chaincode, and {{update.pb}} would be the computed update to transition from {{initial.pb}} to {{final.pb}}.

Note:  The names for the Endorsement and Validation messages may change prior to alpha, as may the name of the proto message which is encoded as the argument to the Validation message.  Since these are name changes only though, this should be very little work if modified.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define upgrade approach for 1.0 chaincodes in LSCC to get deployed as 1.1 configured chaincodes,FAB-6237,20925,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,denyeart,denyeart,20/Sep/17 6:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:15 AM,,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,Need to determine if an automated upgrade is possible or if chaincodes would need to be manually re-deployed after enabling the 1.1 capability for chaincode configuration.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygwv:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misspelling in state_based_validator,FAB-6239,20927,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,cbl,cbl,cbl,20/Sep/17 2:25 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 7:00 PM,v1.0.2,,,,,,v1.1.0,,,,,,,0,,,,,,,"""Comapring"" in [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L182] should be ""Comparing"".

""phatom"" in [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L204] should be ""phantom"".",,cbl,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygx3:",,,,,,,,,,,,,,,,,,,,,,cbl,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Sep/17 11:46 AM;cbl;https://gerrit.hyperledger.org/r/#/c/13639/;;;","01/Oct/17 7:00 PM;mastersingh24;Not going to backport this to the 1.0.x releases;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misspelling function names in testutils.go,FAB-6240,20928,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,cbl,cbl,cbl,20/Sep/17 3:49 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Sep/17 11:41 AM,v1.0.2,,,,,,v1.1.0,,,,,,,0,,,,,,,"""ConstractBytesProposalResponsePayload"" in [https://github.com/hyperledger/fabric/blob/release/protos/testutils/txtestutils.go#L54] should be ""ConstructBytesProposalResponsePayload"".

""ConstructUnsingedTxEnv"" in [https://github.com/hyperledger/fabric/blob/release/protos/testutils/txtestutils.go#L107] should be ""ConstructUnsignedTxEnv"".",,cbl,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygxb:",,,,,,,,,,,,,,,,,,,,,,cbl,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Sep/17 4:44 PM;cbl;https://gerrit.hyperledger.org/r/#/c/13641/;;;","01/Oct/17 7:05 PM;mastersingh24;not going to backport;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add one more TxValidationCode to transaction.proto,FAB-6241,20929,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,cbl,cbl,cbl,20/Sep/17 4:23 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,20/Jul/18 11:05 PM,v1.1.0,,,,,,,,,,,,,0,,,,,,,"Function [validateTx(...)|https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L128] uses TxValidationCode(-1) as return value ([L136|https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L136],  [L143|https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L143],  [L150|https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L150]), which is not a valid one defined in [transaction.proto|https://github.com/hyperledger/fabric/blob/master/protos/peer/transaction.proto#L125] and [transaction.pb.go|https://github.com/hyperledger/fabric/blob/master/protos/peer/transaction.pb.go#L19]. We should add one more TxValidationCode, ""MVCC_READ_ERROR"", to prototransaction.proto and update related go files.",,cbl,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzygxj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,cbl,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 5:23 PM;cbl;[https://gerrit.hyperledger.org/r/#/c/13643/]

Plz help to review it. Thanks.;;;","09/Dec/17 6:37 PM;mastersingh24;[~denyeart] [~manish-sethi] - Can you guys look at this one?  

Here's the CR:   https://gerrit.hyperledger.org/r/13643;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Go SDK support for Channel Service and Filtered Events,FAB-6243,20932,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,20/Sep/17 9:04 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Feb/18 10:44 PM,,,,,,,,,,fabric-sdk-go,,,,0,,,,,,,"This story is no longer required since Channel Service was replaced by Deliver service. See: FAB-7510.

Implement a Channel Event Client that connects to the Channel Service endpoint in Fabric (
 See FAB-5481, FAB-5695).

 

Status: Blocked - waiting for merge of channel event service support into Fabric.

Go SDK Patch Sets: 
 * [https://gerrit.hyperledger.org/r/c/15415/]
 * [https://gerrit.hyperledger.org/r/c/15417/]
 * [https://gerrit.hyperledger.org/r/c/15419/|https://gerrit.hyperledger.org/r/c/15419/2]
 * [https://gerrit.hyperledger.org/r/c/15423/|https://gerrit.hyperledger.org/r/c/15423/2]
 * [https://gerrit.hyperledger.org/r/c/15425/|https://gerrit.hyperledger.org/r/c/15425/2]
 * [https://gerrit.hyperledger.org/r/c/15431/|https://gerrit.hyperledger.org/r/c/15431/2]
 * [https://gerrit.hyperledger.org/r/c/15443/]
 * [https://gerrit.hyperledger.org/r/c/15447/|https://gerrit.hyperledger.org/r/c/15447/1]

 

Based on upcoming fabric version bump:
 * [https://gerrit.hyperledger.org/r/c/14321/|https://gerrit.hyperledger.org/r/c/14321/17]

 

 

 ",,bstasyszyn,holocron,ScottMoynes,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5481,FAB-5695,,,,,,,,,,,,,,,,,,,,,,,,FAB-6911,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0i7:",,,,,,,,,,,,,,,,,,,,,,bstasyszyn,holocron,ScottMoynes,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add SignedEvent based validation support to default ACL provider,FAB-6249,20940,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,21/Sep/17 5:44 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 12:55 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygzr:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 5:59 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13663/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka Orderer crashes when creating a channel,FAB-6250,20941,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,JohnWhitton,JohnWhitton,21/Sep/17 6:46 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Oct/17 9:32 AM,,,,,,,,,,fabric-orderer,,,,0,kafka,,,,,,"When I try to create a channel on a newly deployed network with a Kafka-backed orderer (via peer channel create), the orderer crashes and outputs ""producer/broker/0 state change to [open] on loyyalchannel/0"" and the error ""fatal error: unexpected signal during runtime execution"". 

I started with the example here [https://github.com/hyperledger/fabric/blob/master/test/feature/docker-compose/docker-compose-kafka.yml], and have adapted it to run within our deployment (k8s). Using the x86_64-1.0.2 Docker tag for orderer, peer, kafka, zookeeper; and single replica for zk and kafka for POC.

 

Here's a stack trace:

 
{noformat}
2017-09-20 17:41:45.704 UTC [fsblkstorage] newBlockfileMgr -> DEBU d7d newBlockfileMgr() initializing file-based block storage for ledger: loyyalchannel
2017-09-20 17:41:45.704 UTC [kvledger.util] CreateDirIfMissing -> DEBU d7e CreateDirIfMissing [/var/hyperledger/production/orderer/chains/loyyalchannel/]
2017-09-20 17:41:45.704 UTC [kvledger.util] logDirStatus -> DEBU d7f Before creating dir - [/var/hyperledger/production/orderer/chains/loyyalchannel/] does not exist
2017-09-20 17:41:45.704 UTC [kvledger.util] logDirStatus -> DEBU d80 After creating dir - [/var/hyperledger/production/orderer/chains/loyyalchannel/] exists
2017-09-20 17:41:45.716 UTC [fsblkstorage] syncCPInfoFromFS -> DEBU d81 Starting checkpoint=latestFileChunkSuffixNum=[0], latestFileChunksize=[0], isChainEmpty=[true], lastBlockNumber=[0]
2017-09-20 17:41:45.716 UTC [fsblkstorage] syncCPInfoFromFS -> DEBU d82 status of file [/var/hyperledger/production/orderer/chains/loyyalchannel/blockfile_000000]: exists=[false], size=[0]
2017-09-20 17:41:45.716 UTC [fsblkstorage] newBlockIndex -> DEBU d83 newBlockIndex() - indexItems:[[BlockNum]]
2017-09-20 17:41:45.716 UTC [fsblkstorage] newBlockfileStream -> DEBU d84 newBlockfileStream(): filePath=[/var/hyperledger/production/orderer/chains/loyyalchannel/blockfile_000000], startOffset=[0]
2017-09-20 17:41:45.716 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU d85 Finished reading file number [0]
2017-09-20 17:41:45.716 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU d86 blockbytes [0] read from file [0]
2017-09-20 17:41:45.717 UTC [fsblkstorage] indexBlock -> DEBU d87 Indexing block [blockNum=0, blockHash=[]byte{0x19, 0xf0, 0x98, 0xdb, 0x64, 0x9a, 0x48, 0xa0, 0xa9, 0xa, 0xa7, 0x22, 0xca, 0xfc, 0x3a, 0x8d, 0x5d, 0x3d, 0x63, 0x1c, 0xe3, 0x36, 0xd0, 0x45, 0xba, 0x2f, 0xbd, 0x5, 0x1f, 0x66, 0xea, 0xb3} txOffsets=
txId= locPointer=offset=39, bytesLength=21351
]
2017-09-20 17:41:45.717 UTC [fsblkstorage] updateCheckpoint -> DEBU d88 Broadcasting about update checkpointInfo: latestFileChunkSuffixNum=[0], latestFileChunksize=[21395], isChainEmpty=[false], lastBlockNumber=[0]
2017-09-20 17:41:45.717 UTC [fsblkstorage] retrieveBlockByNumber -> DEBU d89 retrieveBlockByNumber() - blockNum = [0]
2017-09-20 17:41:45.717 UTC [fsblkstorage] newBlockfileStream -> DEBU d8a newBlockfileStream(): filePath=[/var/hyperledger/production/orderer/chains/loyyalchannel/blockfile_000000], startOffset=[0]
2017-09-20 17:41:45.717 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU d8b Remaining bytes=[21395], Going to peek [8] bytes
2017-09-20 17:41:45.717 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU d8c Returning blockbytes - length=[21392], placementInfo={fileNum=[0], startOffset=[0], bytesOffset=[3]}
2017-09-20 17:41:45.717 UTC [orderer/multichain] newChainSupport -> DEBU d8d [channel: loyyalchannel] Retrieved metadata for tip of chain (blockNumber=0, lastConfig=0, lastConfigSeq=1):
2017-09-20 17:41:45.717 UTC [orderer/kafka] newChain -> INFO d8e [channel: loyyalchannel] Starting chain with last persisted offset -3 and last recorded block 0
2017-09-20 17:41:45.717 UTC [orderer/multichain] newChain -> INFO d8f Created and starting new chain loyyalchannel
2017-09-20 17:41:45.717 UTC [orderer/multichain] addBlockSignature -> DEBU d90 &{ledgerResources:0xc4202c4ee0 chain:0xc4203901b0 cutter:0xc420399540 filters:0xc4202c4f40 signer:0x1274e88 lastConfig:0 lastConfigSeq:0}
2017-09-20 17:41:45.717 UTC [orderer/kafka] setupProducerForChannel -> INFO d92 [channel: loyyalchannel] Setting up the producer for this channel...
2017-09-20 17:41:45.717 UTC [orderer/kafka] try -> DEBU d93 [channel: loyyalchannel] Connecting to the Kafka cluster
2017-09-20 17:41:45.717 UTC [orderer/multichain] addBlockSignature -> DEBU d91 &{}
2017-09-20 17:41:45.719 UTC [msp] GetLocalMSP -> DEBU d94 Returning existing local MSP
2017-09-20 17:41:45.719 UTC [msp] GetDefaultSigningIdentity -> DEBU d95 Obtaining default signing identity
2017-09-20 17:41:45.719 UTC [msp] GetLocalMSP -> DEBU d96 Returning existing local MSP
2017-09-20 17:41:45.719 UTC [msp] GetDefaultSigningIdentity -> DEBU d97 Obtaining default signing identity
2017-09-20 17:41:45.719 UTC [msp/identity] Sign -> DEBU d98 Sign: plaintext: 0A9B060A0A4F7264657265724D535012...E76C7DA33F05706BF5E452949E6E9966
2017-09-20 17:41:45.719 UTC [msp/identity] Sign -> DEBU d99 Sign: digest: 39ECFC4D692B833832D851DAE152173E531D5D43D20463AC43AC0B234DE5BE15
2017-09-20 17:41:45.719 UTC [msp] GetLocalMSP -> DEBU d9a Returning existing local MSP
2017-09-20 17:41:45.719 UTC [msp] GetDefaultSigningIdentity -> DEBU d9b Obtaining default signing identity
2017-09-20 17:41:45.719 UTC [orderer/multichain] addLastConfigSignature -> DEBU d9c [channel: testchainid] About to write block, setting its LAST_CONFIG to 0
2017-09-20 17:41:45.719 UTC [msp] GetLocalMSP -> DEBU d9d Returning existing local MSP
2017-09-20 17:41:45.719 UTC [msp] GetDefaultSigningIdentity -> DEBU d9e Obtaining default signing identity
2017-09-20 17:41:45.719 UTC [msp/identity] Sign -> DEBU d9f Sign: plaintext: 0A9B060A0A4F7264657265724D535012...E76C7DA33F05706BF5E452949E6E9966
2017-09-20 17:41:45.719 UTC [msp/identity] Sign -> DEBU da0 Sign: digest: 04989DE93C79F42CBE745270C099CADB19C1B6736FF531EC5E7BCCE57FC6047B
2017-09-20 17:41:45.720 UTC [fsblkstorage] indexBlock -> DEBU da1 Indexing block [blockNum=1, blockHash=[]byte{0xc9, 0xa6, 0xb9, 0x44, 0x2e, 0xf3, 0x66, 0xa9, 0x4e, 0x96, 0xde, 0xc0, 0x93, 0x21, 0x4d, 0x75, 0xac, 0x9e, 0x31, 0xc7, 0xf, 0x55, 0xaf, 0x5b, 0x1d, 0xec, 0x0, 0x32, 0xd7, 0xaf, 0xdb, 0xa3} txOffsets=
txId= locPointer=offset=71, bytesLength=22287
]
2017-09-20 17:41:45.720 UTC [fsblkstorage] updateCheckpoint -> DEBU da2 Broadcasting about update checkpointInfo: latestFileChunkSuffixNum=[0], latestFileChunksize=[42523], isChainEmpty=[false], lastBlockNumber=[1]
2017-09-20 17:41:45.721 UTC [orderer/multichain] WriteBlock -> DEBU da3 [channel: testchainid] Wrote block 1
2017-09-20 17:41:45.721 UTC [orderer/kafka] processRegular -> DEBU da4 [channel: testchainid] Batch filled, just cut block 1 - last persisted offset is now 1
2017-09-20 17:41:45.721 UTC [orderer/kafka] try -> DEBU da5 [channel: loyyalchannel] Error is nil, breaking the retry loop
2017-09-20 17:41:45.721 UTC [orderer/kafka] startThread -> INFO da6 [channel: loyyalchannel] Producer set up successfully
2017-09-20 17:41:45.721 UTC [orderer/kafka] sendConnectMessage -> INFO da7 [channel: loyyalchannel] About to post the CONNECT message...
2017-09-20 17:41:45.721 UTC [orderer/kafka] try -> DEBU da8 [channel: loyyalchannel] Attempting to post the CONNECT message...
[sarama] 2017/09/20 17:41:45.717716 client.go:110: Initializing new client
[sarama] 2017/09/20 17:41:45.717724 config.go:329: ClientID is the default of 'sarama', you should consider setting it to something application-specific.
[sarama] 2017/09/20 17:41:45.717751 config.go:329: ClientID is the default of 'sarama', you should consider setting it to something application-specific.
[sarama] 2017/09/20 17:41:45.717759 client.go:601: client/metadata fetching metadata for all topics from broker fabric-infra-fabric-kafka:9092
[sarama] 2017/09/20 17:41:45.719449 broker.go:146: Connected to broker at fabric-infra-fabric-kafka:9092 (unregistered)
[sarama] 2017/09/20 17:41:45.721733 client.go:397: client/brokers registered new broker #0 at fabric-infra-fabric-kafka-0.fabric-infra-fabric-kafka-headless.loyyal-network.svc.cluster.local:9092
[sarama] 2017/09/20 17:41:45.721752 client.go:154: Successfully initialized new client
[sarama] 2017/09/20 17:41:45.721992 client.go:599: client/metadata fetching metadata for [loyyalchannel] from broker fabric-infra-fabric-kafka:9092
[sarama] 2017/09/20 17:41:45.758622 client.go:610: client/metadata found some partitions to be leaderless
[sarama] 2017/09/20 17:41:45.758639 client.go:590: client/metadata retrying after 250ms... (3 attempts remaining)
2017-09-20 17:41:45.837 UTC [orderer/common/deliver] Handle -> WARN da9 [channel: loyyalchannel] Rejecting deliver request because of consenter error
2017-09-20 17:41:45.837 UTC [orderer/main] func1 -> DEBU daa Closing Deliver stream
2017-09-20 17:41:45.838 UTC [orderer/main] Deliver -> DEBU dab Starting new Deliver handler
2017-09-20 17:41:45.838 UTC [orderer/common/deliver] Handle -> DEBU dac Starting new deliver loop
2017-09-20 17:41:45.838 UTC [orderer/common/deliver] Handle -> DEBU dad Attempting to read seek info message
[sarama] 2017/09/20 17:41:46.008948 client.go:599: client/metadata fetching metadata for [loyyalchannel] from broker fabric-infra-fabric-kafka:9092
[sarama] 2017/09/20 17:41:46.014480 config.go:329: ClientID is the default of 'sarama', you should consider setting it to something application-specific.
fatal error: unexpected signal during runtime execution
[signal SIGSEGV: segmentation violation code=0x1 addr=0x47 pc=0x7f5ec665b259]

runtime stack:
runtime.throw(0xc72896, 0x2a)
/opt/go/src/runtime/panic.go:566 +0x95
runtime.sigpanic()
/opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc

goroutine 212 [syscall, locked to thread]:
runtime.cgocall(0x9f3e50, 0xc420215df8, 0xc400000000)
/opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc420215db0 sp=0xc420215d70
net._C2func_getaddrinfo(0x7f5ec0000a00, 0x0, 0xc4208a6c90, 0xc42010e510, 0x0, 0x0, 0x0)
??:0 +0x68 fp=0xc420215df8 sp=0xc420215db0
net.cgoLookupIPCNAME(0xc420bae0e0, 0x5f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
/opt/go/src/net/cgo_unix.go:146 +0x37c fp=0xc420215f18 sp=0xc420215df8
net.cgoIPLookup(0xc420b96c00, 0xc420bae0e0, 0x5f)
/opt/go/src/net/cgo_unix.go:198 +0x4d fp=0xc420215fa8 sp=0xc420215f18
runtime.goexit()
/opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc420215fb0 sp=0xc420215fa8
created by net.cgoLookupIP
/opt/go/src/net/cgo_unix.go:208 +0xb4{noformat}
 

And the command:

 
{noformat}
export POD_NS=$NAMESPACE
export GENESIS_BLOCK=/etc/crypto-config/crypto-config-dev/loyyal-network/channel-artifacts/loyyal-channel.tx
export POD_ID=`kubectl get pod --namespace=$POD_NS | grep fabric-network-peer0 | cut -f1 -d' '`
kubectl exec $POD_ID --namespace=$POD_NS -it --  bash -c ""CORE_PEER_MSPCONFIGPATH=/etc/crypto-config/crypto-config-dev/loyyal-network/crypto-config/peerOrganizations/$ORG_DOMAIN/users/Admin@$ORG_DOMAIN/msp && CORE_PEER_ADDRESS=0.0.0.0:7051 peer channel create -o $ORDERER_ADDR:7050 -c loyyalchannel -f $GENESIS_BLOCK""
{noformat}","Fabric docker images fabric-orderer, fabric-peer, fabric-kafka, fabric-zookeeper:  x86_64-1.0.2

Kubernetes 1.7.0 in minikube v0.21.0  – manifest:
{noformat}
---
# Source: fabric-infra/templates/fabric-orderer.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: fabric-infra-orderer-pvc
  namespace:
  labels:
    app: fabric-infra-orderer-pvc
spec:
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
# Source: fabric-infra/templates/fabric-zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: fabric-infra-fabric-zookeeper-headless
  namespace: loyyal-network
  labels:
    app: fabric-infra-fabric-zookeeper
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  selector:
    app: fabric-infra-fabric-zookeeper
  clusterIP: None
---
# Source: fabric-infra/templates/fabric-zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: fabric-infra-fabric-zookeeper
  namespace: loyyal-network
  labels:
    app: fabric-infra-fabric-zookeeper
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: fabric-infra-fabric-zookeeper
---
# Source: fabric-infra/templates/fabric-orderer.yaml
apiVersion: v1
kind: Service
metadata:
  name: orderer
  namespace: loyyal-network

spec:
  loadBalancerIP: 192.168.99.100
  externalIPs:
  - 192.168.99.100
  ports:
  - port: 7050
    protocol: TCP
  selector:
    service: fabric-infra-orderer
  type: LoadBalancer
---
# Source: fabric-infra/templates/fabric-kafka.yaml
apiVersion: v1
kind: Service
metadata:
  name: fabric-infra-fabric-kafka-headless
  labels:
    app: fabric-infra-fabric-kafka
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: ""true""
spec:
  ports:
  - name: broker
    port: 9092
  clusterIP: None
  selector:
    app: fabric-infra-fabric-kafka
---
# Source: fabric-infra/templates/fabric-kafka.yaml
apiVersion: v1
kind: Service
metadata:
  name: fabric-infra-fabric-kafka
  labels:
    app: fabric-infra-fabric-kafka
spec:
  ports:
  - name: broker
    port: 9092
  selector:
    app: fabric-infra-fabric-kafka
---
# Source: fabric-infra/templates/fabric-orderer.yaml
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    service: fabric-infra-orderer
  namespace: loyyal-network
  name: fabric-infra-orderer
spec:
  replicas: 1
  selector:
    service: fabric-infra-orderer
  template:
    metadata:
      labels:
        service: fabric-infra-orderer
      namespace: loyyal-network
    spec:
      hostAliases:
      - ip: ""192.168.99.100""
        hostnames:
        - ""orderer.loyyal-mainnet.com""
      containers:
      - command:
        - orderer
        #- cat
        #- /var/hyperledger/orderer/tls/server.key
        image: hyperledger/fabric-orderer:x86_64-1.0.2
        name: fabric-infra-orderer
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        ports:
        - containerPort: 7050
        env:
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value:  /etc/crypto-config/crypto-config-dev/loyyal-network/channel-artifacts/loyyal-genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /etc/crypto-config/crypto-config-dev/loyyal-network/crypto-config/ordererOrganizations/loyyal-mainnet.com/orderers/orderer.loyyal-mainnet.com/msp
        - name: ORDERER_KAFKA_VERBOSE
          value: ""true""
#        - name: ORDERER_KAFKA_VERSION
#          value: ""0.10.1.0""
        volumeMounts:
          - mountPath: /var/run/docker.sock
            name: fabric-infra-docker-sock
          - mountPath: /etc/crypto-config
            name: fabric-infra-crypto-config
            readOnly: true
          - mountPath: /var/hyperledger/production
            name: fabric-infra-fabric-orderer
      volumes:
      - name: fabric-infra-docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: fabric-infra-fabric-orderer
        persistentVolumeClaim:
          claimName: fabric-infra-orderer-pvc
      - name: fabric-infra-crypto-config
        hostPath:
          path: /develop/loyyal
---
# Source: fabric-infra/templates/fabric-zookeeper.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: fabric-infra-fabric-zookeeper
  namespace: loyyal-network
  labels:
    app: fabric-infra-fabric-zookeeper
spec:
  serviceName: fabric-infra-fabric-zookeeper-headless
  replicas: 1
  template:
    metadata:
      namespace: loyyal-network
      labels:
        app: fabric-infra-fabric-zookeeper
    spec:
      containers:
      - name: fabric-zookeeper
        imagePullPolicy: IfNotPresent
        image: hyperledger/fabric-zookeeper:x86_64-1.0.2
#        resources:
#          null

        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOO_MY_ID
          value: ""1""
        - name: ZOO_SERVERS
          value: ""server.1=fabric-infra-fabric-zookeeper-0:2888:3888""
#        readinessProbe:
#          exec:
#            command:
#            - ""zkOk.sh""
#          initialDelaySeconds:
#          timeoutSeconds:
#        livenessProbe:
#          exec:
#            command:
#            - ""zkOk.sh""
#          initialDelaySeconds:
#          timeoutSeconds:
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      #securityContext:
      #  runAsUser: 1000
      #  fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ ""ReadWriteOnce"" ]
      resources:
        requests:
          storage: 8Gi
      storageClassName: standard
#
---
# Source: fabric-infra/templates/fabric-kafka.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: fabric-infra-fabric-kafka
  labels:
    app: fabric-infra-fabric-kafka
spec:
  serviceName: fabric-infra-fabric-kafka-headless
  replicas: 1
  template:
    metadata:
      labels:
        app: fabric-infra-fabric-kafka
    spec:
      containers:
      - name: fabric-infra-fabric-kafka-broker
        image: hyperledger/fabric-kafka:x86_64-1.0.2
        imagePullPolicy: IfNotPresent
#        livenessProbe:
#          exec:
#            command:
#              - bin/kafka-topics.sh
#              - --zookeeper
#              - ""fabric-infra-zookeeper:2181""
#              - --list
#          initialDelaySeconds: 30
#          timeoutSeconds: 5
#        readinessProbe:
#          exec:
#            command:
#              - bin/kafka-topics.sh
#              - --zookeeper
#              - ""fabric-infra-zookeeper:2181""
#              - --list
#          initialDelaySeconds: 30
#          timeoutSeconds: 5
        ports:
        - containerPort: 9092
          name: kafka
        volumeMounts:
        - name: datadir
          mountPath: /opt/kafka/data
        env:
        - name: KAFKA_LOG_RETENTION_MS
          value: ""-1""
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: ""103809024""
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: ""103809024""
        - name: KAFKA_BROKER_ID
          value: ""0""
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: ""fabric-infra-fabric-zookeeper-0.fabric-infra-fabric-zookeeper-headless.loyyal-network.svc.cluster.local:2181""
        - name: KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE
          value: ""false""
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: ""1""
        - name: KAFKA_MIN_INSYNC_REPLICAS
          value: ""1""
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: ""fabric-infra-fabric-kafka""
        - name: KAFKA_ADVERTISED_PORT
          value: ""9092""
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ ""ReadWriteOnce"" ]
      storageClassName: standard
      resources:
        requests:
          storage: 2Gi
---
---
# Source: fabric-network/templates/fabric-peer0.yaml
kind: PersistentVolume
apiVersion: v1
metadata:
  name: loyyal-fabric-network-fabric-peer0-pv
  labels:
    type: local
#  annotations:
#    pv.beta.kubernetes.io/gid: ""999""
spec:
  storageClassName: manual
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
    # fixme this should be more specific... how to replace .Release.Name in yaml values?
  hostPath:
    path: ""/data/loyyal-fabric-network-peer0-disk""
---
# Source: fabric-network/templates/fabric-peer0.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: loyyal-fabric-network-peer0-pvc
  namespace:
  labels:
    app: loyyal-fabric-network-peer0-pvc
#  annotations:
#    volume.alpha.kubernetes.io/storage-class: default

spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
# Source: fabric-network/templates/fabric-peer0.yaml
apiVersion: v1
kind: Service
metadata:
  name: peer0
  namespace:
spec:
  loadBalancerIP: 192.168.99.100
  externalIPs:
  - 192.168.99.100
  ports:
  - name: ""requests""
    port: 7051
    protocol: TCP
  - name: ""events""
    port: 7053
    protocol: TCP
  selector:
    service: loyyal-fabric-network-peer0
  type: LoadBalancer
---
# Source: fabric-network/templates/fabric-peer0.yaml
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    service: loyyal-fabric-network-peer0
  name: loyyal-fabric-network-peer0
  namespace:
spec:
  replicas: 1
  selector:
    service: loyyal-fabric-network-peer0
  template:
    metadata:
      labels:
        service: loyyal-fabric-network-peer0
      namespace:
    spec:
      hostAliases:
      - ip: ""192.168.99.100""
        hostnames:
        - ""orderer.loyyal-mainnet.com""
      containers:
      - command:
        - peer
        - node
        - start
        - --peer-defaultchain=false
        env:
        - name: CORE_VM_ENDPOINT
          value: unix:///var/run/docker.sock
        - name: CORE_LOGGING_LEVEL
          value: DEBUG
        - name: CORE_PEER_ID
          value: peer0.loyyal.loyyal-mainnet.com
        - name: CORE_PEER_ADDRESS
          value: 192.168.99.100:7051  
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: 192.168.99.100:7051
        - name: CORE_PEER_MSPCONFIGPATH
          value: /etc/crypto-config/crypto-config-dev/loyyal-network/crypto-config/peerOrganizations/loyyal.loyyal-mainnet.com/peers/peer0.loyyal.loyyal-mainnet.com/msp
        - name: CORE_PEER_LOCALMSPID
          value: LoyyalMSP

        #- name: CORE_LEDGER_STATE_STATEDATABASE
        #  value: ""CouchDB""
        #- name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
        #  value: ""peer0-couchdb:5984""
        image: hyperledger/fabric-peer:x86_64-1.0.2
        name: loyyal-fabric-network-peer0
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        ports:
        - containerPort: 7051
        - containerPort: 7053
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: loyyal-fabric-network-docker-sock
        - mountPath: /etc/crypto-config
          name: loyyal-fabric-network-crypto-config
          readOnly: true
        - mountPath: /var/hyperledger/production
          name: loyyal-fabric-network-fabric
      volumes:
      - name: loyyal-fabric-network-docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: loyyal-fabric-network-fabric
        persistentVolumeClaim:
          claimName: loyyal-fabric-network-peer0-pvc
      - name: loyyal-fabric-network-crypto-config
        hostPath:
          path: /develop/loyyal{noformat}
 

And the configtx:

 
{noformat}
Profiles:
LoyyalOrdererGenesis:
Orderer:
<<: *OrdererDefaults
Organizations:
- *OrdererOrg
Consortiums:
LoyyalConsortium:
Organizations:
- *Loyyal

LoyyalChannel:
Consortium: LoyyalConsortium
Application:
<<: *ApplicationDefaults
Organizations:
- *Loyyal

################################################################################
#
# Section: Organizations
#
# - This section defines the different organizational identities which will
# be referenced later in the configuration.
#
################################################################################
Organizations:

# SampleOrg defines an MSP using the sampleconfig. It should never be used
# in production but may be used as a template for other definitions
- &OrdererOrg
# DefaultOrg defines the organization which is used in the sampleconfig
# of the fabric.git development environment
Name: OrdererOrg

# ID to load the MSP definition as
ID: OrdererMSP

# MSPDir is the filesystem path which contains the MSP configuration
MSPDir: crypto-config/ordererOrganizations/loyyal-mainnet.com/msp

AdminPrincipal: Role.ADMIN

- &Loyyal
# DefaultOrg defines the organization which is used in the sampleconfig
# of the fabric.git development environment
Name: Loyyal

# ID to load the MSP definition as
ID: LoyyalMSP

MSPDir: crypto-config/peerOrganizations/loyyal.loyyal-mainnet.com/msp

AdminPrincipal: Role.ADMIN

AnchorPeers:
# AnchorPeers defines the location of peers which can be used
# for cross org gossip communication. Note, this value is only
# encoded in the genesis block in the Application section context
- Host: peer0.loyyal.loyyal-mainnet.com
Port: 7051
- Host: peer1.loyyal.loyyal-mainnet.com
Port: 7051

Orderer: &OrdererDefaults

# Orderer Type: The orderer implementation to start
# Available types are ""solo"" and ""kafka""
OrdererType: kafka

Addresses:
- orderer.loyyal-mainnet.com:7050

# Batch Timeout: The amount of time to wait before creating a batch
BatchTimeout: 2s

# Batch Size: Controls the number of messages batched into a block
BatchSize:

# Max Message Count: The maximum number of messages to permit in a batch
MaxMessageCount: 10

# Absolute Max Bytes: The absolute maximum number of bytes allowed for
# the serialized messages in a batch.
AbsoluteMaxBytes: 768 KB

# Preferred Max Bytes: The preferred maximum number of bytes allowed for
# the serialized messages in a batch. A message larger than the preferred
# max bytes will result in a batch larger than preferred max bytes.
PreferredMaxBytes: 512 KB

Kafka:
# Brokers: A list of Kafka brokers to which the orderer connects
# NOTE: Use IP:port notation
Brokers:
- fabric-infra-fabric-kafka:9092

# Organizations is the list of orgs which are defined as participants on
# the orderer side of the network
Organizations:

Application: &ApplicationDefaults

# Organizations is the list of orgs which are defined as participants on
# the application side of the network
Organizations:{noformat}
 

 

 

 

 

 

 ",JohnWhitton,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzygzz:",,,,,,,,,,,,,,,,,,,,,,JohnWhitton,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/17 10:14 PM;mastersingh24;[~JohnWhitton] - Looks like there is an issue with DNS resolution.  I've seen something similar before and a possible solution is to tell Go to use it's own DNS resolver.  You can do this by setting the GODEBUG env variable in your peer config:
{code:java}
env:
- name: GODEBUG
  value: ""netdns=go""
{code}
 ;;;","14/Oct/17 8:58 AM;kchristidis;[~JohnWhitton]: Any update on this? Have you tried Gari's solution?;;;","17/Oct/17 8:02 AM;kchristidis;Just a heads up that I will close this on Oct 23 if there are no updates in the meantime.;;;","17/Oct/17 8:47 AM;JohnWhitton;[~mastersingh24] - [~kchristidis] Thank you for the tip and the follow up.

We were in a workshop last week, but have now tested the proposed approached and it has resolved the issue.

I've included the Go Link as well [https://golang.org/pkg/net/#hdr-Name_Resolution]

This ticket can be marked as closed.;;;","18/Oct/17 12:01 AM;kchristidis;Thanks for the update.

Just for my edification, the `net` pkg documentation states that the pure Go resolved is already used by default. Had you overwritten this somewhere? Is this documented in the artifacts provided here? Is this implied in a K8s setup? Again, this is just me trying to figure out how to detect this again in the future.;;;","20/Oct/17 5:51 AM;JohnWhitton;[~kchristidis] - Here's our feedback

root cause for `net=cgo` enabling per the golang net/resolver documentation, from what I can tell, is

1) our hostname does not end with `.local` but

2) the specific features that trigger cgo resolving are not explicit in the doc, we do search in the `.local` domain;

I've included our files for reference.


doc:

> when /etc/resolv.conf or /etc/nsswitch.conf specify the use of features that the Go resolver does not implement, and when the name being looked up ends in .local or is an mDNS name.


our configs:

 

```
<fx0:/opt/gopath/src/github.com/hyperledger/fabric# cat /etc/resolv.conf
nameserver 10.0.0.10
search loyyal-network.svc.cluster.local svc.cluster.local cluster.local
options ndots:5
<fx0:/opt/gopath/src/github.com/hyperledger/fabric# cat /etc/nsswitch.conf
# /etc/nsswitch.conf
#
# Example configuration of GNU Name Service Switch functionality.
# If you have the `glibc-doc-reference' and `info' packages installed, try:
# `info libc ""Name Service Switch""' for information about this file.

passwd: compat
group: compat
shadow: compat
gshadow: files

hosts: files dns
networks: files

protocols: db files
services: db files
ethers: db files
rpc: db files

netgroup: nis
<fx0:/opt/gopath/src/github.com/hyperledger/fabric#
```;;;","20/Oct/17 6:13 AM;kchristidis;A-ha! That is very helpful. Thank you for following up on this (and satisfying my curiosity). Much appreciated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cryptogen should generate CA certificates which are valid 5 minutes in the past,FAB-6251,20943,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,21/Sep/17 9:15 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Sep/17 12:42 AM,v1.0.0,,,,,,v1.0.3,v1.1.0,,fabric-tools,,,,0,,,,,,,"cryptogen currently generates root CAs for each organization and uses the current time for the not valid before date.  This works fine when you only use cryptogen, but if you then try to use the CA certs with fabric-ca, clients who enroll will have their transactions rejected since their certificate will be valid before the CA which signed it  (fabric-ca sets not valid before to current time - 5 min).",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh07:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Sep/17 9:48 PM;mastersingh24;Marking this as a bug since the original intent for cryptogen was to be able to use the root CA keypair to spin up a fabric-ca;;;","23/Sep/17 10:05 PM;mastersingh24;https://gerrit.hyperledger.org/r/13759

https://gerrit.hyperledger.org/r/13761;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance CSCC with local MSP update capabilities using peer fs access,FAB-6254,20946,14575,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,elli-androulaki,elli-androulaki,21/Sep/17 9:16 PM,26/Oct/18 4:49 PM,28/Oct/23 3:01 AM,22/May/18 9:31 PM,,,,,,,Abandoned,,,fabric-crypto,fabric-peer,,,0,,,,,,,"Here we assume that the peer's administrator has access to the peer's filesystem, and is able to create a new directory filled in with the new configuration of MSP. The peer's administrator would request from the peer to load its local MSP from that directory, by passing the directory's location. 

 

This work item requires the extension of CSCC (configuration system chaincode) with one more function, e.g., ""updateLocalMSP"", that takes as arguments a string indicating the new configuration's location. Implementation of this function, would need to leverage fabric/msp/mgmt.go (mgmt package) with a function similar to GetLocalMSP
{quote}```
 // GetLocalMSP returns the local msp (and creates it if it doesn't exist)
 func GetLocalMSP() msp.MSP \{
    var lclMsp msp.MSP
    var created bool = false
     \{
             m.Lock()
             defer m.Unlock()

            lclMsp = localMsp
             if lclMsp == nil \{
                   var err error
                   created = true

                  bccspMSP, err := msp.NewBccspMsp()
                   if err != nil \{
                         mspLogger.Fatalf(""Failed to initialize local MSP, received err %s"", err)
                   }

                  lclMsp, err = cache.New(bccspMSP)
                   if err != nil \{
                         mspLogger.Fatalf(""Failed to initialize local MSP, received err %s"", err)
                   }
                   localMsp = bccspMSP
             }
       }

      if created \{
             mspLogger.Debugf(""Created new local MSP"")
       } else \{
             mspLogger.Debugf(""Returning existing local MSP"")
       }

      return lclMsp
 }
{quote}
{{```}}",,elli-androulaki,kchristidis,mastersingh24,mathiasb303,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh0f:",,,,Unset,,Sprint 12 - Crypto,Sprint 13 - Crypto,,,,Unset,,,,,,,,,,,elli-androulaki,kchristidis,mastersingh24,mathiasb303,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Oct/17 6:41 PM;mathiasb303;The initial commit allows an admin to ask the peer to reload the local MSP by using the following command:

{{peer chaincode query -n cscc -c '\{""Args"":[""UpdateMSP""]}'}}

In practice, what the admin would have to do to update the local MSP, is:
 # Copy the new local MSP configuration files to the MSP directory in the filesystem of the peer - the MSP directory is the one configured in the peer yaml file. Instead of overwriting the existing files, the MSP directory could be e.g., a symbolic link, and the link destination is simply changed to the directory containing the new files.
 # Run the above ""UpdateMSP"" CSCC function to trigger the updating/reloading of the local MSP in the peer.

The function currently does not take as input a path from where the local MSP configuration should be loaded from. The reason for this is that there is not yet any code that updates the yaml file with the new directory. If the yaml file is not updated, then the next time the peer is restarted, it will read the old configuration. This is sub-optimal.

The next steps for this work item are:
 # Support updating of the yaml file with a new location for the local MSP configuration
 # Support passing of the local MSP configuration in the CSCC function, instead of reading it from the peer's local disk. This would also include writing of the new local MSP configuration information to the disk on the peer, so that it would be loaded the next time the peer is restarted.

Tests are also still missing.;;;","04/Oct/17 6:49 PM;elli-androulaki;Thanks [~mathiasb303]!

Adding [~mastersingh24], [~angelo.decaro], [~ales] to comment on this. 
This aims to be a first step towards supporting local MSP updates without needing to reboot the peer. ;;;","04/Oct/17 6:52 PM;mathiasb303;The CR is here: https://gerrit.hyperledger.org/r/#/c/14179/;;;","02/Dec/17 3:58 AM;yacovm;I see that in the change set - you can also set the keystore and the certificate. 
Is it intended that the peer would dynamically replace its eCert and key in v1.1 ? 

Is there really a need from users to be able to do this? [~mastersingh24] ;;;","06/Dec/17 8:08 PM;mastersingh24;The biggest issue we have today is with the admin certs required by the local MSP.  As we know, admin certs are explicit certificates which are added to the MSP.  We currently don't have the ability to update these.

The second biggest issue (although maybe this is the first biggest for some people) is that the fact that you need to have an admin certificate upfront before starting the peer makes automation a little tricky (although we can resolve this in other ways outside of the peer code (for example we can script this with an env variable in a Docker container).

I do worry that the ability to update the actual private key after the network is running will be an issue for several components ([~yacovm] I believe this will create some serious challenges for gossip based on the PKID code?).
;;;","06/Dec/17 8:28 PM;yacovm;{quote}I do worry that the ability to update the actual private key after the network is running will be an issue for several components ([~yacovm] I believe this will create some serious challenges for gossip based on the PKID code?).
{quote}
 

Precisely.

Gossip caches the peer's identity (and PKI-ID) in numerous places in the code, but the signing uses the [MessageCryptoService|https://github.com/hyperledger/fabric/blob/d9c320297bd2a4eff2eb253ce84dc431ef860972/gossip/api/crypto.go#L28-L59] which [in its construction|https://github.com/hyperledger/fabric/blob/d9c320297bd2a4eff2eb253ce84dc431ef860972/peer/node/start.go#L159] [loads the localMSP|https://github.com/hyperledger/fabric/blob/d9c320297bd2a4eff2eb253ce84dc431ef860972/common/localmsp/signer.go#L62-L74] in every signing invocation.

This would result in peers signing messages with a *new* private key while the *new* public key wasn't disseminated to peers, and would result in all peers suspecting the updated peer(s) and then ceasing communication.

I'm not saying, of course - this can't be solved at all.
 I'm sure we can sort something out and make the new identities be disseminated, but this needs to be planned, coded, and then tested rigorously.

[~C0rWin] FYI ^

 

 ;;;","06/Dec/17 8:33 PM;mastersingh24;Bottom line, after giving this more thought, I think we need to defer this to a future release and not risk doing this in 1.1 at this point.;;;","21/Dec/17 7:06 AM;lehors;Sorry for messing up with the status. Totally accidental, due to some delay in page refresh. If only gerrit had an undo...;;;","21/Apr/18 7:20 AM;kchristidis;[~denyeart]: Agree that this whole epic should have its {{Fix Version}} set to Future?;;;","22/May/18 10:30 PM;elli-androulaki;Hi [~kchristidis],  This one is supposed to refer to a ""Future"" item. The CR that referred to this JIRA was abandoned not to cause confusion with the 1.2 items, but i believe this is something we want to address in subsequent Fabric versions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports more marble chaincode commands,FAB-6255,20948,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,22/Sep/17 1:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Sep/17 6:45 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"PTE supports more Marbles chaincode commands: transferMarble, getMarblesByRange, delete.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyh0n:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: Test marbles for rich queries in couchdb using marbles02 chaincodes in go and node using behave framework,FAB-6256,20949,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,22/Sep/17 3:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Sep/17 11:52 PM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"* Convert marbles chaincode written in golang to nodejs chaincode.
 * Test APIs using goleveldb and couchdb with behave framework.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh0v:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"22/Sep/17 5:08 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/13697/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System channel should discard messages of type other than CONFIG or CONFIG_UPDATE,FAB-6259,20952,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,guoger,guoger,22/Sep/17 8:07 AM,23/Jan/20 7:05 AM,28/Oct/23 3:01 AM,23/Jan/20 7:05 AM,,,,,,,,,,fabric-orderer,,,,0,help-wanted,stale-item,,,,,"For orderer system channel, messages of type other than CONFIG or CONFIG_UPDATE are useless, and should be discarded instead of  being cut into block.

However, this is trickier than it sounds. we cannot do it in {{consenter}}, because it simply does not have knowledge to tell if it's system channel or not. So we need to do that at the entrance of broadcast, which means filtering EVERY ingress message. This is the overhead we want to avoid.

So, this story just documents this potential improvement, but not necessarily needs to be addressed due to reasons aforementioned.",,guoger,indirajith,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh1j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,guoger,indirajith,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/18 12:29 AM;kchristidis;Good idea. Just note that this will affect the {{SampleDevMode*}} presets in {{configtx.yaml}} as well.;;;","23/Jan/20 7:05 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ledgerstore uses re-entrant Rlock and deadlocks,FAB-6260,20953,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,yacovm,yacovm,yacovm,22/Sep/17 9:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,23/Sep/17 9:25 PM,v1.1.0,,,,,,v1.1.0,,,fabric-ledger,,,,0,Ledger,,,,,,"in *core/ledger/ledgerstore/store.go* there is a re-entrant RLock that might be while a Lock (write lock) comes in between.

If that happens, the 2nd RLock waits for the Lock to finish, which never does because its waiting for the 1st RLock to be RUnlocked.
{code:java}
func (s *Store) GetPvtDataAndBlockByNum(blockNum uint64, filter ledger.PvtNsCollFilter) (*ledger.BlockAndPvtData, error) {
	s.rwlock.RLock()                   // 1st RLock
	defer s.rwlock.RUnlock()
         ... 
	if pvtdata, err = s.GetPvtDataByNum(blockNum, filter); err != nil {
		return nil, err
	}
      
}
{code}
{code:java}
func (s *Store) GetPvtDataByNum(blockNum uint64, filter ledger.PvtNsCollFilter) ([]*ledger.TxPvtData, error) {
	s.rwlock.RLock()              // 2nd RLock
	defer s.rwlock.RUnlock()

        ... 
}
{code}
This causes the following stack trace while a peer tries to catch up his fellow peer:
{code:java}
goroutine 344 [semacquire, 2 minutes]:
sync.runtime_Semacquire(0xc4226bd6a8)
        /opt/go/src/runtime/sema.go:56 +0x39
sync.(*RWMutex).Lock(0xc4226bd6a0)
        /opt/go/src/sync/rwmutex.go:98 +0x6e
github.com/hyperledger/fabric/core/ledger/ledgerstorage.(*Store).CommitWithPvtData(0xc4226bb7a0, 0xc4202eaec0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:91 +0x5c
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc4225c3600, 0xc4202eaec0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:210 +0x28a
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc42270f440, 0xc4202eaec0, 0x0, 0x0)
        <autogenerated>:1 +0x47
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitWithPvtData(0xc421b40cc0, 0xc4202eaec0, 0xc421843d68, 0x1)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:118 +0x6b
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc421b41b90, 0xc425df2b20, 0x0, 0x0, 0x0, 0x0, 0x2830)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:142 +0xae7
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc421c2d000, 0xc425df2b20, 0x0, 0x0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:783 +0x7d
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc421c2d000)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:556 +0x411
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:254 +0x6b9


goroutine 346 [semacquire, 2 minutes]:
sync.runtime_Semacquire(0xc4226bd6ac)
        /opt/go/src/runtime/sema.go:56 +0x39
sync.(*RWMutex).RLock(0xc4226bd6a0)
        /opt/go/src/sync/rwmutex.go:50 +0x49
github.com/hyperledger/fabric/core/ledger/ledgerstorage.(*Store).GetPvtDataByNum(0xc4226bb7a0, 0x82, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:129 +0x66
github.com/hyperledger/fabric/core/ledger/ledgerstorage.(*Store).GetPvtDataAndBlockByNum(0xc4226bb7a0, 0x82, 0x0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:119 +0xe4
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).GetPvtDataAndBlockByNum(0xc4225c3600, 0x82, 0x0, 0xc42189ac28, 0xc42c213c28, 0x411b58)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:233 +0x43
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).GetPvtDataAndBlockByNum(0xc42270f440, 0x82, 0x0, 0x7b4168, 0xc420299650, 0x5)
        <autogenerated>:1 +0x51
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).GetPvtDataAndBlockByNum(0xc421b40cc0, 0x82, 0xc421c2d580, 0xc42c213cb0, 0x7b4638)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:131 +0x46
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).GetPvtDataAndBlockByNum(0xc421b41b90, 0x82, 0x3, 0x3, 0x96000, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:463 +0x58
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateRequest(0xc421c2d000, 0x157e240, 0xc432974600)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:415 +0x42f
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).processStateRequests(0xc421c2d000)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:372 +0x89
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:258 +0x6fd

{code}
 

The [following|https://play.golang.org/p/iixabWd98I] demonstrates the root cause of the problem in a simple way.

[~denyeart] [~manish-sethi] 

 ",,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh1r:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Sep/17 9:31 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13715/;;;","23/Sep/17 2:14 AM;manish-sethi;uploaded a new patch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove un-needed RWMutex in gossip code,FAB-6261,20954,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,22/Sep/17 9:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 1:19 AM,v1.1.0,,,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,,"Gossip code has some places where it has RWMutex but RLock isn't used anywhere.

We should use the regular mutex instead.

 

 ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh1z:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Sep/17 9:58 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13717/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The ""latest"" tag for hyperledger/fabric-tools image is missing",FAB-6262,20955,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,rameshthoomu,imkven,imkven,22/Sep/17 12:50 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,20/Jul/18 11:06 PM,,,,,,,,,,fabric-samples,,,,0,,,,,,,"{code:java}
$ docker-compose -f docker-compose-cli.yaml  up
WARNING: The CHANNEL_NAME variable is not set. Defaulting to a blank string.
WARNING: The DELAY variable is not set. Defaulting to a blank string.
WARNING: The TIMEOUT variable is not set. Defaulting to a blank string.
Creating network ""net_byfn"" with the default driver
Pulling cli (hyperledger/fabric-tools:latest)...
Pulling repository docker.io/hyperledger/fabric-tools
ERROR: Tag latest not found in repository docker.io/hyperledger/fabric-tools
{code}
There is no ""latest"" tag in hyperledger/fabric-tools ([https://hub.docker.com/r/hyperledger/fabric-tools/tags/]). I set this to medium because it would blocking the newcomer when starting their first network.",,denyeart,imkven,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5680,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-10068,,,,,,,,,"1|hzyh27:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,imkven,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 1:41 PM;denyeart;[~rameshthoomu] Can you provide your opinion?;;;","28/Nov/17 6:31 AM;rameshthoomu;[~imkven] you have to build images before execute e2e_cli test. We don't publish latest image tag to dockerhub so latest image won't be available in dockerhub to pull.;;;","04/Jan/18 11:24 AM;rameshthoomu;[~imkven] could you update the latest status on this issue. Are you still getting the same error?;;;","21/Jan/18 9:02 AM;mastersingh24;We need to move to Docker multi-arch support in order to publish a ""latest"" tag.  See FAB-5680;;;","23/Mar/18 6:21 AM;rameshthoomu;More discussion/comments are placed in FAB-8338. Marking this as duplicate to FAB-8338;;;","23/May/18 11:15 AM;rameshthoomu;Docker Multi-arch support is available now on 1.1.0 docker images. https://hub.docker.com/r/hyperledger/fabric-tools/tags/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support MongoDB as the state DB,FAB-6263,20956,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manxiaqu,baohua,baohua,22/Sep/17 1:38 PM,23/Jul/20 5:40 PM,28/Oct/23 3:01 AM,23/Jan/20 7:06 AM,,,,,,,Future,,,fabric-peer,,,,5,,,,,,,"Currently, fabric only support leveldb and couchdb.

 

Would support mongodb as another stateDB option.",,alejoacosta,baohua,Berith,binhn,ChristopherFerris,daijianw,denyeart,gotoxu,guoger,gyb997,henryhs,Kuro1,luomin,manxiaqu,mastersingh24,meinvzou,mplisov,oopsliu,qiang0723,raccoonrat,Senthil1,stone-ch,sykesm,wutongtree,zhaochy,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8665,FAB-16406,,,,,,,,,,,,,,,,,,,,,FAB-2998,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh2f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,alejoacosta,baohua,Berith,binhn,ChristopherFerris,daijianw,denyeart,gotoxu,guoger,gyb997,henryhs,Kuro1,luomin,manxiaqu,mastersingh24,meinvzou,mplisov,oopsliu,qiang0723,raccoonrat,Senthil1,stone-ch,sykesm,wutongtree,zhaochy,zjubfd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/17 10:03 PM;mastersingh24;If we are going to start adding support for additional state databases, then I *strongly* recommend that we first implement pluggable state databases using the Go plugin architecture.  This will keep make the code cleaner and more self-contained.;;;","06/Dec/17 11:52 AM;henryhs;I agree;;;","06/Dec/17 2:32 PM;baohua;[~mastersingh24], thanks for the suggestion, would u like to help give any doc link to follow?

We do believe support multiple database backends is important, as it's reported that couchdb one has several issues.;;;","23/Feb/18 6:27 AM;mastersingh24;What's the status / plan on this one?;;;","23/Feb/18 9:22 AM;manxiaqu;[~mastersingh24]The task for supporting mongodb was finished in fab-6264 [https://gerrit.hyperledger.org/r/#/c/14629/]. now we are waiting for the result of review.;;;","24/Feb/18 8:37 PM;baohua;This is an important feature!

[~mastersingh24], i guess we can priority this one after v1.1 next month?;;;","24/Feb/18 10:30 PM;denyeart;[~manxiaqu] [~baohua] Please add a design doc explaining the motivation and supported functions of MongoDB.  For a feature of this size typically that would be a google doc or presentation that can be linked to from the Jira description. The maintainers will be reviewing new feature proposals for inclusion in 1.2, 1.3, etc.;;;","26/Feb/18 5:27 PM;manxiaqu;[~denyeart] Have added a doc on https://docs.google.com/document/d/1BT8yP_24KVnl72BzEHEm1XVhU0D8nvB686S7DzSWL9k/edit?usp=sharing;;;","02/Mar/18 11:38 PM;binhn;I played with MongoDB during the early days of NOSQL, nothing in production. Lately, I revisited it and discovered many issues that people have written about [http://thetechnick.blogspot.com/2016/06/mongodb-good-bad-and-ugly.html.]  Unless it has been addressed, I think we should be careful about supporting it.

There is also a large community out there asking about SQL. [https://www.youtube.com/watch?v=b2F-DItXtZs] . I for one would be more interested in SQL on LevelDB, like CockroachDB implementation.

[~mastersingh24] I agreed that we need to define the plugin framework for this first so that others may bring anything they want/need. ;;;","06/Mar/18 2:18 AM;ChristopherFerris;[~manxiaqu] thanks for posting the design doc.

[~binhn] the blog post you referenced has been deleted. I wouldn't take a single person's blog post as evidence that we shouldn't be adding pluggable support for what is a very popular NoSQL database with a rather large community. 

Yes, there is lots of interest in adding SQL support. However, we have here a completed CR (rather large, but when you factor out all of the vendored mongo lib, it is a bit more manageable) and you are saying we shouldn't merge. This is no way to grow a community.

I do think that we need to seriously consider this for 1.2 when we open up the branch, and that we should add in as experimental until such time as we can get sufficient system test coverage to be confident.

Significant effort has gone into the CR, and that needs to be given consideration.

I do think that we can use this as an opportunity to get the pluggable DB right, but given that we have a contribution in hand, we should not put it off further until as define a framework first. That isn't respectful of the broader community that has contributed to this effort.;;;","06/Mar/18 5:56 AM;denyeart;My opinion is somewhere between Gari's, Binh's, and Chris'.

CouchDB has had guaranteed data durability from the beginning. MongoDB has had data durability issues in the past, but it looks like those issues have been resolved in more recent MongoDB releases, with various 'write concern' and 'read concern' configurations.  My concern is more around supporting multiple databases with similar capabilities.  When you configure both CouchDB and MongoDB in similar ways (e.g. single instance under peer, with data durability), I expect the behavior and performance will be similar.  I don't doubt that MongoDB will have some capabilities that CouchDB does not, and vice versa. But it will be twice the investment and twice the maintenance to support both CouchDB and MongoDB within the Fabric code.  This is where Gari's suggestion comes in, and I would go one step further saying that we MUST make the state database interface pluggable (using the new Go plugin architecture), before adding additional state database implementations.  This is captured in FAB-8665.  Then contributors can provide plugin implementations on their own lifecycle and support model, without impacting Fabric itself.;;;","06/Mar/18 10:23 AM;baohua;Thanks all the comments, [~mastersingh24], [~binhn], [~ChristopherFerris] and [~denyeart].

I feel that all those comments are positive to encourage contributions to enhance fabric to have more features (e.g., supporting new Database). Thanks for the continuous effort, [~manxiaqu].

While the point is that should we wait till the pluggable database interface feature or we can do the work now. The conflicts often happens in community when multiple teams work together to enhance the same dog. Would like to welcome more suggestions from the team, before having the technical decision.

But since it's already there for quite a while (5 months), we should consider to give the feature an initial target, e.g., 1.2? If the pluggable interface feature is done before then, that's good to use it. Otherwise, we can implement in existing way, and then revise after the pluggable feature done.

How do you think?

Thanks!;;;","06/Mar/18 1:07 PM;Senthil1;As [~denyeart] and [~mastersingh24] suggest, I would also support for go plugin architecture

We already have a document store support -- CouchDB. The motivation or need for MongoDB is not clear. Do we gain any performance improvement in Fabric throughput/latency? Do we get a very special and important feature which is not available in the CouchDB? For e.g., we need snapshot isolation in DB to perform the tx simulation. We need checkpointing and purging. If such features are not provided, It looks very redundant. Adding additional databases of similar capability would only result in additional code maintenance and related overhead. Hence, using go plugin architecture to enable real pluggable state DB makes more sense. As there are many doc stores ([https://db-engines.com/en/ranking/document+store)] and each developer might prefer a different doc store, it looks like go plugin is the right way. 

This is a different take: Doc store and key-value stores were designed for scalability with weak consistency which relational database cannot provide. However, I am not sure how one can use the sharding features & weak consistency in doc store and still provide non-repeatable read isolation level to chaincode and MVCC validation (for serializability) which are required from Fabric. If we need to support additional databases (mainly for SQL), it would be good to add CockroachDB (both scalable and strong consistency/serializable) as [~binhn] mentioned (the main layer of the CockroachDB can be used on top of any key-value store) or a relational DB (stable, durable, strong consistency/serializable but not scalable). ;;;","07/Mar/18 1:25 AM;binhn;Apology for the dead link in my previous post                      Permalink Basically it mentioned ACID issues with MongoDB, but it looks like that has been address according to [~denyeart].

[~baohua] and [~ChristopherFerris] As I said in my previous comment, I am fine as long as we have a pluggable mechanism that people can add support for other databases independently from Fabric core development. Without this pluggable framework, it would increase our technical debt another fold in anything we do related to state data, which includes critical features such as checkpoint, archive, and pruning. It would make our new feature development more difficult.

 ;;;","07/Mar/18 5:58 PM;luomin;Thanks for all the comments to now. I am also watching this topic for quite a while. I think a pluggable mechanism sounds a more reasonable roadmap and I also agree with [~ChristopherFerris] and [~baohua]  that MongoDB (a famous NoSQL DB with a quite large community) shall worth great efforts to be supported so as to broaden our community. HOWEVER, before making the efforts any further, an in-depth discussion/explain of the motivation/reasons are high appreciated (such as how will it benefit performance, or why the support of different functions/features are needed, why alternative solutions are not considered). As you may have noticed, FAB-8031 https://jira.hyperledger.org/browse/FAB-8031  explained their motivations for using PostgreSQL as the state-DB, for the parallelization brought by its serializability snapshot isolation capability, which sounds similar to the reason of using CockroachDB as mentioned by [~binhn] . In addition, if the needs for more sophisticated kv-store are only for the richer data model, some alternative ways based on levelDB were proposed in FAB-60 https://jira.hyperledger.org/browse/FAB-60 (last pages of the attached slides). My point is just, I would like to see our roadmap on extending the DBMS module is decided upon sufficient discussions. Looking forward to more opinions here.;;;","23/Jan/20 7:06 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement the VersionDB interface,FAB-6264,20957,20956,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,manxiaqu,manxiaqu,manxiaqu,22/Sep/17 5:55 PM,23/Jan/20 7:06 AM,28/Oct/23 3:01 AM,23/Jan/20 7:06 AM,,,,,,,,,,fabric-peer,,,,2,stale-item,,,,,,implement the interface of VersionDB and VersionDBProvider,,baohua,daanporon,gyb997,Kuro1,luomin,manxiaqu,mplisov,sykesm,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh2n:",,,,,,,,,,,,,,,,,,,,,,baohua,daanporon,gyb997,Kuro1,luomin,manxiaqu,mplisov,sykesm,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/17 2:28 PM;baohua;https://gerrit.hyperledger.org/r/#/c/14629/;;;","10/Nov/17 1:48 AM;daanporon;hi [~manxiaqu], [~baohua] do you guys think this PR is ready to use? we where following this ticket because we wanted mongoDB because it has better geospatial support then couchDB. So it would be really cool if we could start using this and maybe help improving it ... what do you guys think?

Will the querying work the same as for couchDB?;;;","10/Nov/17 4:32 PM;manxiaqu;hi, [#Daan Poron], I don't know what the ""PR"" really is.  Are you referring to another database ?;;;","13/Nov/17 10:21 PM;daanporon;hi, [~manxiaqu] with PR i mean Pull Request ... so with that i'm referring to the code changes you made ... can i already start using them? do you think it's stable enough?;;;","14/Nov/17 3:59 PM;manxiaqu;hi, [#Daan Poron], up to now, the mongo statedb have been test for its' all function and performance using 1 orderer, 1 peer, 1 cli and 1 mongodb(docker). And the mongodb container of docker down for some times when the amount of data is near 5,000,000. And It will work again when you start the container of mongodb. The reason haven't been found yet(also happened when using other statedb). The normal situation for using it, I think is ok. But there is still some place need to optimization like retry and so on. So maybe it's better using it in a real project after review.;;;","23/Jan/20 7:06 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add PurgeByTxids() in transient store API,FAB-6265,20958,20902,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,Senthil1,Senthil1,22/Sep/17 6:59 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Sep/17 11:06 AM,,,,,,,,,,fabric-ledger,,,,0,Ledger,,,,,,"Add PurgeByTxids() in transient store API so that coordinator can call this function to clean up private write set entries in the store once the corresponding transactions got committed in the ledger.

Transient store pruning will be done as soon as the private block is persisted in the private block storage. For subsequent request for private simulation results from other peers, gossip will retrieve the data from private block storage. 

 ",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh2v:",,,,,,,,,,,,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/17 10:36 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/13723/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
lscc - chain code name missing in error message,FAB-6267,20960,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,harrisob@us.ibm.com,harrisob@us.ibm.com,22/Sep/17 9:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Nov/17 1:00 PM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The chaincodeName should be used here not chainName in

*lscc.go*

    // check for existence of chaincode instance only (it has to exist on the channel)
    // we dont care about the old chaincode on the FS. In particular, user may even
    // have deleted it
    cdbytes, _ := lscc.getCCInstance(stub, chaincodeName)
    if cdbytes == nil \{
        return nil, NotFoundErr(chainName)
    }",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh3b:",,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE remote execution,FAB-6269,20962,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,23/Sep/17 12:12 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Oct/17 3:42 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,PTE manager supports PTE execution on remote systems.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyh3r:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update README and add install script for System Behave,FAB-6273,20969,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,23/Sep/17 3:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 11:08 PM,,,,,,,,,,,,,,0,,,,,,,The fabric-test should have an install_behave script that one can execute when setting up the system behave tests. ,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh4n:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add behave steps for accessing the ""cello deployed"" network",FAB-6274,20971,20392,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,latitiah,latitiah,latitiah,23/Sep/17 4:10 AM,30/Jul/19 10:09 AM,28/Oct/23 3:01 AM,30/Jul/19 10:09 AM,,,,,,,,,,,,,,0,,,,,,,"There should be steps that indicate that he tests will be executed against at least one of the networks (preferably a multi-hosted network) generated by the ansible scripts in the cello repository. 

This means that the network json file will be needed that will include the APIs for accessing the network. 

The behave framework will use the remote utilities for communicating with the multi-hosted network.",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh4v:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:09 AM;mastersingh24;BDD replace with integration tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
There is no link from other pages,FAB-6276,20973,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,23/Sep/17 7:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Sep/17 3:53 PM,v1.0.2,,,,,,,,,fabric-docs,,,,0,,,,,,," I found this page. But there is no link from other pages. This document is old.

[http://hyperledger-fabric.readthedocs.io/en/latest/Setup/TLSSetup.html]",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh5b:",,,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Sep/17 2:40 PM;nnao;https://gerrit.hyperledger.org/r/#/c/13753/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Take into account the peers eligibility to the private data when storing a block,FAB-6277,20976,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Sep/17 11:49 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Sep/17 7:28 PM,v1.1.0,,,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,,"When a peer iterates over the private RW set references in the block, it needs to take into account whether it is eligible of receiving them in the first place, otherwise it would attempt to pull them from peers in vain. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh5z:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/17 2:58 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13771/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minor typos in documentation ,FAB-6279,20978,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,dileban,dileban,dileban,25/Sep/17 9:07 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,28/Oct/17 9:06 PM,,,,,,,v1.0.4,v1.1.0,,fabric-docs,,,,0,Documentation,,,,,,"Noticed a couple of minor typos while reading on pages:

[https://hyperledger-fabric.readthedocs.io/en/latest/fabric_model.html]

[https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html]

 

 ",,dileban,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh6f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,dileban,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Oct/17 6:51 PM;mastersingh24;https://gerrit.hyperledger.org/r/14939
https://gerrit.hyperledger.org/r/13777;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer should start node chaincode by npm start,FAB-6280,20979,20748,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,zhaochy,zhaochy,zhaochy,25/Sep/17 3:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Sep/17 12:01 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"launch chaincode using *npm start*

 ",,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh6n:",,,,,,,,,,,,,,,,,,,,,,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.4/pr-3646,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A package.json should be found when node chaincode install,FAB-6281,20980,20748,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,zhaochy,zhaochy,zhaochy,25/Sep/17 3:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Sep/17 3:08 AM,,,,,,,,,,,,,,0,,,,,,,"Currently lscc only check for chaincode name and version for *install* invoke transaction. For node chaincode install, lscc should check if a *package.json* exist.",,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh6v:",,,,,,,,,,,,,,,,,,,,,,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric-test: add test where the org that instatniates chaincode disconnect, and then do 3 invoke-queries in the other org, then bring up the prev org and then do  invoke-query on them",FAB-6283,20983,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,26/Sep/17 12:52 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Nov/17 12:57 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6333,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh7b:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/17 12:57 AM;AdnanChoudhury;test has been added as a part of nother CR https://gerrit.hyperledger.org/r/#/c/15359/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent enabling capabilities for /Channel or /Channel/Application until orderers upgraded,FAB-6286,20986,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Sep/17 1:30 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 8:32 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"There is the possibility of non-determinism if a v1.1 orderer receives a request to enable capabilities for any group before all of the orderers have been upgraded to v1.1.

Because the orderer upgrade should be orchestrated by the orderer admins, it makes sense then, to prevent any capabilities from being enabled for the /Channel or /Channel/Application group until capabilities have been enabled for the /Channel/Orderer group.

This will only affect the v1.0 to v1.1 upgrade, as once enabled, capabilities will support mixed versions of orderer and peer networks. (ie, the peer network may upgrade to v1.2 before the orderer network does.)",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh7j:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filter out private data in state transfer when sending private data alongside blocks,FAB-6287,20987,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Sep/17 3:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Sep/17 7:27 PM,v1.1.0,,,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,,"Currently, state transfer fetches all private RWsets that correspond to the block and don't filter out according to policies.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh7r:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/17 7:59 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13821/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove test TestStoreConcurrentReadWrite,FAB-6288,20988,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Sep/17 3:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 1:20 AM,v1.1.0,,,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,,"-The goroutine that performs a write might not finish in time and the test goroutine might finish before it - which would cleanup the ledger while the write is being performed - thus resulting in a panic.-

 

This test checks a specific concurrent execution path that
 resulted in a deadlock, but now after it is fixed, it makes
 no sense to keep this test anymore in CI.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh7z:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/17 4:00 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13815/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[fabric-test] Fix Usage comment in Network Launcher,FAB-6289,20989,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,26/Sep/17 8:07 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,31/Oct/17 7:44 AM,v1.0.2,,,,,,v1.0.4,,,fabric-quality,,,,0,,,,,,,"Some command options and example are not written correctly in scripts of Network Launcher.

We need to modify usage comment for usability improvement. Also, we need to update README.",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6742,,,,,,,,,"1|hzyh87:",,,,Unset,,,,,,,Unset,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"26/Sep/17 11:46 AM;yuki-kon;Posted here: https://gerrit.hyperledger.org/r/#/c/13829/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer should check whether belongs to a channel before creating ledger,FAB-6291,20991,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,Hangyu_FJH,Hangyu_FJH,26/Sep/17 9:42 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,13/Dec/17 4:05 PM,v1.1.0,,,,,,Future,,,fabric-peer,,,,0,,,,,,,"When trying to join peer to a channel by sending the genesis block, the peer doesn't check whether it belongs to the channel or not, which results peer creating the ledger of the channel even when it actually doesn't belong to the channel. And later on, the error messages keep coming from orderer because the credentials do not match.

So, peer should check the organization info of a genesis block before creating a new ledger. This also can avoid(partially) peer cli sending false information.",,C0rWin,Hangyu_FJH,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh8n:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,Hangyu_FJH,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 4:30 PM;C0rWin;I think that proper behavior for peer stop trying to connect to the ordering service once it discovers that orderer is not allowing to connect, rather than to prevent from peer join the channel. The simple use case would be adding new org after a while, e.g. in config update block, hence joining new peer from new org after adding implementation for this will simply fail to add new organization flow.;;;","26/Sep/17 5:10 PM;Hangyu_FJH;[~C0rWin]  [~yacovm]Thanks for your comment. I have understood the situation. My understanding is that after adding new organization in the config update block, the client fetch the updated genesis block from orderer and then send it to the peer of that new organization.  I just wanted to prevent peer from creating new ledger of a channel it does not belong. I guess this might be a rare case. ;;;","26/Sep/17 7:30 PM;C0rWin;Well, there is no such thing as updated genesis block. Genesis block is something that created once and stays immutable. Any config updates will go as separate block.;;;","26/Sep/17 10:13 PM;yacovm;There is a relevant and useful and pretty long read here https://jira.hyperledger.org/browse/FAB-5288 that is related;;;","27/Sep/17 9:01 AM;Hangyu_FJH;Thanks [~yacovm] for the information, I will give it a read.

I will reopen this issue if I can find some appropriate fix ;;;","02/Nov/17 6:03 AM;muralisr;Per comment in https://jira.hyperledger.org/browse/FAB-5218, unlinking from 5218 (but the discussion can continue to appropriate resolution).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
high-throughput chaincode has some spelling error,FAB-6292,20992,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,TopJohn,TopJohn,TopJohn,26/Sep/17 2:53 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,27/Sep/17 8:45 PM,,,,,,,,,,fabric-samples,,,,0,,,,,,,high-throughput chaincode has some spelling error,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh8v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel Info persistency issue,FAB-6294,20997,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jyellick,JonathanLevi,JonathanLevi,26/Sep/17 11:20 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Sep/17 11:10 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,Usability,,,,,,"When I update channel, new channel info not accepted until I restart Fabric, but in version 1.0.2 it was working without restarting.",,JonathanLevi,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh9b:",,,,,,,,,,,,,,,,,,,,,,JonathanLevi,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Sep/17 11:24 PM;jyellick;The orderer message processor is retaining a reference to the old policy manager.  This used to be fine under the old scheme where the policy manager was stateful, but under the new simpler immutable semantics, this causes problems.;;;","27/Sep/17 12:14 PM;jyellick;Fix via: https://gerrit.hyperledger.org/r/#/c/13865/;;;","28/Sep/17 11:34 AM;jyellick;This was introduced in master and has never been released, adjusted 'Affects Version' and 'Fix Version' to match.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to grpc-go 1.5.2,FAB-6295,20998,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,26/Sep/17 11:24 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,27/Sep/17 10:23 PM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,,,,,,,"This was attempted in FAB-5930 however the upgrade was not complete. Certain grpc-go packages (including the core transport package) are still at an untagged version between 1.3 and 1.4.

Due to a [bug|https://github.com/grpc/grpc-go/issues/1401] in gRPC, the version currently vendored into fabric is incompatible with clients > v1.5. This forces clients to downgrade.

We propose to upgrade all grpc packages to the stable version 1.5.2

 ",,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyh9j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] Install go1.9 and go1.7.5 in CI environment,FAB-6296,20999,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Sep/17 12:01 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 12:50 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"As per [~mastersingh24], please install Go 1.9 and Go 1.7.5 on CI environment. Below is the chat description

[ ](https://chat.hyperledger.org/channel/fabric-ci?msg=NA7E9p3qLo7F2KJN2) @mastersingh24

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh9r:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/17 12:50 AM;rameshthoomu;Patch has been created and merged to install go1.9 and go1.7.5 in CI environments. using ci.properties file, we are able to invoke go1.9 and go1.7.5 based on the branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE CI test automation,FAB-6297,21000,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,27/Sep/17 12:24 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Oct/17 10:50 PM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"PTE CI test automation scripts. These scripts will cover FAB-3983, FAB-3989, FAB-4126, FAB-4229, and robustness test.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyh9z:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Transaction Id or Standin Cognate id to Fabric component log entries,FAB-6298,21001,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,mrkiouak,mrkiouak,27/Sep/17 1:29 AM,23/Jan/20 7:06 AM,28/Oct/23 3:01 AM,23/Jan/20 7:06 AM,,,,,,,Future,,,fabric-peer,,,,0,Logging,stale-item,,,,,"Today, many chaincode framework components enter log entries with either a 8 letter id consisting of the first 8 characters in the txid

(e.g.
{quote}```2017-09-26 13:48:46.135 UTC [chaincode] sendExecuteMessage -> DEBU 472 [fc084744]Inside sendExecuteMessage. Message TRANSACTIONfc084744``), or embeds the entire transaction (e.g. ```017-09-26 13:48:46.135 UTC [endorser] simulateProposal -> DEBU 46c Entry - txid: fc084744dd831d39533012104e13522d1b7427d0a6ecc8fb915416f8d388f872 channel id: com.ChaincodeOrg.channel
 2017-09-26 13:48:46.135 UTC [endorser] callChaincode -> DEBU 46d Entry - txid: fc084744dd831d39533012104e13522d1b7427d0a6ecc8fb915416f8d388f872 channel id: com.ChaincodeOrg.channel version: 1.0.1-pre3
 2017-09-26 13:48:46.135 UTC [ccprovider] NewCCContext -> DEBU 46e NewCCCC (chain=com.ChaincodeOrg.channel,chaincode=lscc,version=1.0.1-pre3,txid=fc084744dd831d39533012104e13522d1b7427d0a6ecc8fb915416f8d388f872,syscc=true,proposal=0xc420123ea0,canname=lscc:1.0.1-pre3

```
{quote}
)

 

Other components do not include any unique per tx identifier, e.g. see every line after the 1st line of this output from a chaincode instantiate proposal:

```
{quote}[36m2017-09-26 13:48:46.150 UTC [ccprovider] NewCCContext -> DEBU 4ac[0m NewCCCC (chain=com.chaincodeorg.ec.channel,chaincode=ChaincodeName,version=1,txid=fc084744dd831d39533012104e13522d1b7427d0a6ecc8fb915416f8d388f872,syscc=false,proposal=0xc420123ea0,canname=ChaincodeName:1
 [36m2017-09-26 13:48:46.163 UTC [chaincode] Launch -> DEBU 4ad[0m launchAndWaitForRegister fetched 1067035 bytes from file system
 [36m2017-09-26 13:48:46.164 UTC [chaincode] launchAndWaitForRegister -> DEBU 4ae[0m chaincode ChaincodeName:1 is being launched
 [36m2017-09-26 13:48:46.164 UTC [chaincode] getArgsAndEnv -> DEBU 4af[0m Executable is chaincode
 [36m2017-09-26 13:48:46.164 UTC [chaincode] getArgsAndEnv -> DEBU 4b0[0m Args [chaincode -peer.address=172.17.0.8:7051]
 [36m2017-09-26 13:48:46.164 UTC [chaincode] launchAndWaitForRegister -> DEBU 4b1[0m start container: ChaincodeName:1(networkid:dev,peerid:peer1)
 [36m2017-09-26 13:48:46.164 UTC [chaincode] launchAndWaitForRegister -> DEBU 4b2[0m start container with args: chaincode -peer.address=172.17.0.8:7051
 [36m2017-09-26 13:48:46.164 UTC [chaincode] launchAndWaitForRegister -> DEBU 4b3[0m start container with env:
 CORE_CHAINCODE_ID_NAME=ChaincodeName:1
 CORE_PEER_TLS_ENABLED=true
 CORE_PEER_TLS_SERVERHOSTOVERRIDE=peer1
 CORE_CHAINCODE_LOGGING_LEVEL=INFO
 CORE_CHAINCODE_LOGGING_SHIM=INFO
 [36m2017-09-26 13:48:46.164 UTC [container] lockContainer -> DEBU 4b4[0m waiting for container(dev-peer1-ChaincodeName-1) lock
 [36m2017-09-26 13:48:46.164 UTC [container] lockContainer -> DEBU 4b5[0m got container (dev-peer1-ChaincodeName-1) lock
 [36m2017-09-26 13:48:46.164 UTC [dockercontroller] Start -> DEBU 4b6[0m Cleanup container dev-peer1-ChaincodeName-1
 [36m2017-09-26 13:48:46.166 UTC [dockercontroller] stopInternal -> DEBU 4b7[0m Stop container dev-peer1-ChaincodeName-1(No such container: dev-peer1-ChaincodeName-1)
 [36m2017-09-26 13:48:46.167 UTC [dockercontroller] stopInternal -> DEBU 4b8[0m Kill container dev-peer1-ChaincodeName-1 (No such container: dev-peer1-ChaincodeName-1)
 [36m2017-09-26 13:48:46.167 UTC [dockercontroller] stopInternal -> DEBU 4b9[0m Remove container dev-peer1-ChaincodeName-1 (No such container: dev-peer1-ChaincodeName-1)
 [36m2017-09-26 13:48:46.167 UTC [dockercontroller] Start -> DEBU 4ba[0m Start container dev-peer1-ChaincodeName-1
 [36m2017-09-26 13:48:46.168 UTC [dockercontroller] getDockerHostConfig -> DEBU 4bb[0m docker container hostconfig NetworkMode: host
 [36m2017-09-26 13:48:46.168 UTC [dockercontroller] createContainer -> DEBU 4bc[0m Create container: dev-peer1-ChaincodeName-1
 [36m2017-09-26 13:48:46.171 UTC [dockercontroller] Start -> DEBU 4bd[0m start-could not find image <dev-peer1-ChaincodeName-1-1dad4519feb80c019db9c5f53558c682ec54ae78a944f56417ed426d38bdd130> (container id <dev-peer1-ChaincodeName-1>), because of <no such image>...attempt to recreate image
 [36m2017-09-26 13:48:46.172 UTC [chaincode-platform] generateDockerfile -> DEBU 4be[0m 
 FROM hyperledger/fabric-baseos:x86_64-0.3.1
 ADD binpackage.tar /usr/local/bin
 LABEL org.hyperledger.fabric.chaincode.id.name=""ChaincodeName"" \
 org.hyperledger.fabric.chaincode.id.version=""1"" \
 org.hyperledger.fabric.chaincode.type=""CAR"" \
 org.hyperledger.fabric.version=""1.0.1-pre3"" \
 org.hyperledger.fabric.base.version=""0.3.1""
 ENV CORE_CHAINCODE_BUILDLEVEL=1.0.1-pre3
 ENV CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer.crt
 COPY peer.crt /etc/hyperledger/fabric/peer.crt
{quote}
```

In the common scenario of N>1 upstream services submitting transactions to a particular peer for N>=1 chaincodes, identifying what log entries correspond to what execution chain is currently difficult for non-chaincode framework components.

This JIRA proposes extending and improving fabric logging by generating a short reasonably unique id (6-8 characters) to be included in every fabric component log entry. Each unique log id should correspond to one and only one transaction id, but many log ids may correspond to a single transactionid. Upon creation of the unique log id, a log entry should be created indicating a given transaction id correspond to a given newly created log id, e.g. ```e.g. ""Received new transaction \{txnid: xxxxxxxx client: yyyyyyy foo: zzzzzz} with TXSEQ 35``` (example credit to @ghaskins). Where non-problematic, the implementation of this feature should match the current chaincode framework use of the first 8 characters of the transaction id.

Issue discussed with [~ghaskins] & [~muralisr]",,mrkiouak,sykesm,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6rb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mrkiouak,sykesm,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:06 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix usage and comments in PTE scripts,FAB-6306,21010,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,27/Sep/17 9:12 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 6:43 PM,v1.0.2,,,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,,"Usage and comments in PTE scripts are not correct.
We need to modify them for usability improvement.",fabric-test commit: 551302eaed8dbbdeccdee497a5673e67fd9e86ae,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhbb:",,,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"27/Sep/17 12:21 PM;yuki-kon;Posted here: https://gerrit.hyperledger.org/r/#/c/13867/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistency in docs and source code structure ,FAB-6307,21011,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,luomin,luomin,27/Sep/17 10:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Oct/17 9:15 PM,,,,,,,v1.0.2,v1.0.4,v1.1.0,fabric-docs,,,,0,Documentation,,,,,,"The source code under ""fabric-samples/fabcar"" directory has been changed while the description in the page of ""Writing Your First Application"" is not updated.

Old

You should see the following:
chaincode invoke.js network package.json query.js startFabric.sh
New

You should see the following:
creds invoke.js package.json query.js startFabric.sh",,joe-alewine,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6789,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhbj:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 12:34 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/14887/;;;","27/Oct/17 10:45 AM;luomin;[~joe-alewine], [~markparz] Hi, thanks for taking care of this issue. May I know the reason of this change? thank you!;;;","27/Oct/17 9:26 PM;joe-alewine;A creds folder was added to allow a proper user enroll with fabcar (if you open up fabcar in a reader you'll see that the folder contains a private key, a cert, and a PeerAdmin that has the cert enrolled in it).

Fabcar now also leverages the ""basic-network"" instead of the network it used before (which is why the ""network"" and ""chaincode"" files are no longer there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to run block-listener,FAB-6308,20981,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jeffgarratt,Amit04Patel,Amit04Patel,25/Sep/17 4:09 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 11:37 PM,v1.0.2,,,,,,,,,fabric-peer,,,,0,help-wanted,v1.0,won't-fix,,,,"Hi,
I am trying to implement block-listener using the code given here 
[https://github.com/hyperledger/fabric/tree/v1.0.0/examples/events/block-listener]

I have set CORE_PEER_TLS_ENABLED=false in docker-compose-cli.yaml and base/peer-base.yaml and 
ORDERER_GENERAL_TLS_ENABLED=false in base/docker-compose-base.yaml

but i am getting the following erros
when I try to run it from my local machine (Ubuntu 16.04)
root@ampapate-in:/scratch/Hyperledger1.0/fabric-examples/examples/events/block-listener# ./block-listener -events-address=0.0.0.0:7053 -events-from-chaincode=mycc:1.0 -events-mspdir=/scratch/Hyperledger1.0/fabric-examples/examples/e2e_cli/crypto-config/peerOrganizations/[org1.example.com/users/Admin|http://org1.example.com/users/Admin]\@org1.example.com/msp -events-mspid=Org1MSP
Event Address: 0.0.0.0:7053
could not start chat. err: rpc error: code = Internal desc = transport is closing
Error creating event client

and this when I try to run it from the client container
root@53776565f687:/opt/gopath/src/[github.com/hyperledger/fabric/examples/block-listener#|http://github.com/hyperledger/fabric/examples/block-listener] ./block-listener -events-address=0.0.0.0:7053 -events-from-chaincode=mycc:1.0 -events-mspdir=/opt/gopath/src/[github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp|http://github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp] -events-mspid=Org1MSP
Event Address: 0.0.0.0:7053
could not start chat. err: could not create client conn to 0.0.0.0:7053:context deadline exceeded
Error creating event client",,Amit04Patel,denyeart,jeffgarratt,mahendranmahesh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyh73:",,,,,,,,,,,,,,,,,,,,,,Amit04Patel,denyeart,jeffgarratt,mahendranmahesh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 2:35 PM;Amit04Patel;Is there any alternate way also of implementing event-listener i basically have to receive events on 7053 on final commit
 ;;;","18/Oct/17 5:57 AM;denyeart;[~wlahti] Any ideas?;;;","27/Oct/17 3:51 AM;jeffgarratt;[~Amit04Patel] [~denyeart] your -events-address should be the address of a running peer.  For example, if local, -events-address=127.0.0.1:7053

Please comment back if this does NOT address your issue.  Marking with 'won't-fix', but don't worry, will leave this open for a bit for you to comment if still an issue.;;;","27/Oct/17 6:33 PM;Amit04Patel;Hi [~jeffgarratt] 
The block-listener now works but sometimes with 127.0.0.1 or sometimes with 0.0.0.0 
when I am running it on the same machine where peers are running 
from my side, the issue is resolved
;;;","01/Nov/17 11:37 PM;jeffgarratt;Thanks so much [~Amit04Patel], gonna close.  If any more issues please feel free to submit.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
npm install has incorrect parameters in platform.go,FAB-6309,21013,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,davidkel,davidkel,27/Sep/17 6:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Oct/17 11:53 PM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,peer,,,,,,"The following line

{noformat}
		Cmd:          fmt.Sprint(""cp -R /chaincode/input/src/* /chaincode/output && cd /chaincode/output && npm install -production""),
{noformat}

at
https://github.com/hyperledger/fabric/blob/master/core/chaincode/platforms/node/platform.go#L180
is incorrect. it should say 
{noformat}
		Cmd:          fmt.Sprint(""cp -R /chaincode/input/src/* /chaincode/output && cd /chaincode/output && npm install --production""),
{noformat}
ie 2 dashes on the production flag, not 1.",,davidkel,jimthematrix@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhbr:",,,,,,,,,,,,,,,,,,,,,,davidkel,jimthematrix@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 5:51 AM;jimthematrix@gmail.com;https://gerrit.hyperledger.org/r/13907;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow log level override for submodules at peer start,FAB-6315,21025,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,28/Sep/17 1:27 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,29/Sep/17 10:41 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Currently, it is not possible to override a submodule's log level at peer start (e.g. peer/gossip). Logic should be added to enable this. 

 

In order to allow both yaml files and environment variables to override these levels, the submodule name should be provided in the form:
{code:java}
module_submodule{code}
This will allow the value to be set in yaml files:
{code:java}
peer:
   gossip: warning{code}
as well as via environment variables:
{code:java}
CORE_LOGGING_PEER_GOSSIP=warning{code}",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhfj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 3:06 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13891/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Override peer/gossip log level at peer start,FAB-6316,21026,21025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,28/Sep/17 1:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Sep/17 10:42 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"After FAB-6164, the peer logs are filled with peer/gossip/mcs messages. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhfr:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 3:06 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13893/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Split the peer binary into server and client part,FAB-6317,21027,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,aleksandar.likic,aleksandar.likic,aleksandar.likic,28/Sep/17 1:35 AM,23/Jan/20 7:07 AM,28/Oct/23 3:01 AM,23/Jan/20 7:07 AM,,,,,,,,,,,,,,2,review-needed,stale-item,,,,,"Split the peer into the server and the client part. The peer binary will still be the server, while all client functions will be moved into the new fabriccli binary.

This change enables having different build strategies for the server and the client (for example dynamic vs static build, which is important for things like support for go plugins and PKCS11).

Also, this change is (hopefully) a step towards refactoring the fabric code so the fabric client protos and supporting libraries are decoupled from the server code. This way, the client API could be used by fabriccli and Go SDK (and potentially other Go based fabric client software) without having to depend on the whole fabric that includes the server code.

The separation will also reduce confusion due to `{{peer}}` doubling as CLI.",,aleksandar.likic,baohua,C0rWin,muralisr,sykesm,TiantianGao,troyronda,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6161,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhfz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,baohua,C0rWin,muralisr,sykesm,TiantianGao,troyronda,vdods,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/17 9:25 AM;muralisr; Regardless of release and other mechanics, this is something that has been talked about for a while. So gets my +2.;;;","28/Sep/17 9:32 AM;aleksandar.likic;The CR is at https://gerrit.hyperledger.org/r/#/c/13851/;;;","28/Sep/17 5:23 PM;baohua;IMHO, after the Go sdk finished, the fabric-cli should be built on top of it easily.

But I do agree that the separation is a good step to start.;;;","28/Sep/17 8:21 PM;muralisr;[~baohua] true. This would be orthogonal to that and help get the build mechanics squared away.;;;","28/Sep/17 8:29 PM;aleksandar.likic;[~baohua] [~muralisr] Can we agree on the binary name?

fabriccli

fabric-client

fc

fabric-cli

<other>?;;;","28/Sep/17 11:29 PM;baohua;Dislike the ""fabriccli"" one, hard to recognize at the first glance.

Others look good to me. ;;;","02/Oct/17 9:21 AM;muralisr;How about with a ""-"" ?  ""fabric-cli""  has a venerable precedent in ""bitcoin-cli"" :-);;;","02/Oct/17 12:34 PM;baohua;[~muralisr], it sounds OK.

And currently for fabric, we have 5 kinds components:
 * peer: The server for peer node role
 * orderer: The server for orderer node role
 * fabric-ca: CA for fabric networks
 * fabric-cli: Client binary for fabric networks.
 * fabric-sdk-xxx: Client SDK for various languages.;;;","03/Oct/17 4:02 AM;aleksandar.likic;Great, thanks [~baohua] and [~muralisr]. I updated the code to use ""fabric-cli"". You can review it at [https://gerrit.hyperledger.org/r/#/c/13851/]

 ;;;","26/Oct/17 7:11 AM;C0rWin;I think that instead of splitting peer binary we should just implement normal cli tool (we might be reusing some of the existing code).;;;","26/Oct/17 6:55 PM;aleksandar.likic;[~C0rWin] There are many ways to do it. This CR would allow a quick path to:
 * using different build strategies for peer client and peer server (e.g. static vs dynamic)
 * decoupling client and server protos and libs

The latter is actually a prerequisite for building a proper go-based client library, the one that doesn't force the application using the client to import the server protos and libs. One can do it without this decoupling, but at the cost of dealing with the problem of importing server protos and libs in a way similar to how the Go SDK does it ( [https://github.com/hyperledger/fabric-sdk-go/tree/master/internal/github.com/hyperledger] ), that involves copying Fabric code used by the client lib into another namespace (to isolate the application from Fabric server code) and patching it (to remove transitive imports of server go libraries imported by Fabric). Unless, of course, one wants to re-write all the logic currently re-used from Fabric.;;;","27/Oct/17 1:06 AM;muralisr;[~C0rWin] I think [~baohua] raised similar point on  28/Sep comment ? Just to drive home [~aleksandar.likic] point this will pave the path for such a CLI tool.;;;","23/Jan/20 7:07 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ansible Test Driver (ATD),FAB-6318,21029,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,suryalnvs,suryalnvs,suryalnvs,28/Sep/17 4:14 AM,11/Jan/21 2:36 AM,28/Oct/23 3:01 AM,11/Jan/21 2:36 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"ATD to drive the tools PTE, OTE to test a deployed hyperledger fabric network.",,btl5037,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhg7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,btl5037,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/21 2:10 AM;btl5037;As part of backlog grooming closing issue as stale. Issue can be reopened in the future.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ATD to drive tests using PTE,FAB-6319,21030,21029,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,28/Sep/17 4:24 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 9:53 PM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,Launch PTE using ATD in a separate container and drive the tests on a deployed fabric network from the PTE container.,,qiang0723,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhgf:",,,,,,,,,,,,,,,,,,,,,,qiang0723,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"19/Oct/17 9:55 PM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/13901/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve comments for PurgeByTxid() in transient store helper,FAB-6323,21034,20902,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,28/Sep/17 5:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Oct/17 11:43 PM,,,,,,,v1.1.0,,,fabric-ledger,,,,0,Ledger,,,,,,Some mistakes in documentation of core/transientstore/store_helper.go is pointed out in [https://gerrit.hyperledger.org/r/#/c/13723/] Need to fix them.,,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhh3:",,,,,,,,,,,,,,,,,,,,,,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce MSP versioning,FAB-6324,21035,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,angelo.decaro,angelo.decaro,angelo.decaro,28/Sep/17 5:16 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,13/Oct/17 3:28 AM,,,,,,,v1.1.0,,,,,,,0,Security,,,,,,"Because the epic is introducing a backwards incompatibility, we need a way to version MSP. The purpose of this item is to introduce an MSP factory that would allow the creation of MSP instances based on passed options that would specify the type of MSP to be created and its version.",,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5664,,,,,,,,,"1|hzyhhb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misleading documentation and usage of kv_rwset.proto,FAB-6325,21036,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,manish-sethi,bur,bur,28/Sep/17 5:19 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 3:43 AM,v1.0.0,,,,,,,,,fabric-docs,fabric-ledger,,,0,Usability,,,,,,"When accessing the version of a readset the result is of type version as defined in kv_rwset.proto. A version consists of a block number and the position(index) of the transaction that is updated the value.

Block number and tx indexes are monotonic increasing integers starting with 0. However, the documentation of kv_rwset.proto states the following: 
{code:java}
// Version encapsulates the version of a Key
// A version of a committed key is maintained as the height of the transaction that committed the key.
// The height is represenetd as a tuple <blockNum, txNum> where the txNum is the height of the transaction
// (starting with 1) within block
{code}
This seems incorrect. 

Moreover, another issue with with the version proto is that usage is not well documented. When the blockNum or txNum is equals zero, than the fields of version are nil, which may lead to an error. There should be a comment, that proto getters should be used instead. This issue also effects the String() methods.

 

 ",,bur,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhhj:",,,,,,,,,,,,,,,,,,,,,,bur,manish-sethi,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 5:24 PM;yacovm;{quote}(starting with 1) within block{quote}

[~manish-sethi] is the seqInBlock starting from 0 or from 1? Is this the same one in the private data or there is a different semantic for that? ;;;","18/Oct/17 11:31 PM;manish-sethi;Sorry, I missed this earlier.

[~bur] - Good catch. I'll fix the documentation. Earlier in the code, we were starting the counting of trans from 1. Later we changed in the code to start the counting from 0 but missed fixing this comment. 

Regarding `nil`, it is ok because the type of the fields are uint64 and hence initialized to zero by default. About the String(), I am not sure whether it would be good to override default behavior of protobuf (many folks may expect it to print with a behavior of default proto String()). However, still, it does not affect us largely because everywhere in our code, we use an internal representation of version (such as see usage at - [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L182)]

[~yacovm] - For the pvtdata the semantics are same (i.e. seqInBlock starts with 0).;;;","18/Oct/17 11:52 PM;manish-sethi;submitted a CR - https://gerrit.hyperledger.org/r/#/c/14639/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
README.md license text is confusing,FAB-6326,21041,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,tkuhrt,tkuhrt,28/Sep/17 8:44 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 5:59 AM,,,,,,,v1.0.4,v1.1.0,,,,,,0,,,,,,,"At the bottom of [https://github.com/hyperledger/fabric] it shows the README.md file, which states the following for license info: ""This work is licensed under a Creative Commons Attribution 4.0 International License.""
 
Although the separate LICENSE text file contains the Apache license text, downstream users of the project who see the README file may interpret this to say that all of the Hyperledger code is released under Creative Commons Attribution -- rather than just the documentation being CC-BY-4.0, and the code being Apache 2.0. The Hyperledger fabric-chaintool repo is somewhat clearer - see [https://github.com/hyperledger/fabric-chaintool] - but could be clarified a bit further.
 
I'd suggest changing the README.md file for each Hyperledger repo to the following:
{quote}Hyperledger Project source code files are made available under the Apache License, Version 2.0 (Apache-2.0), located in the LICENSE file. Hyperledger Project documentation files are made available under the Creative Commons Attribution 4.0 International License (CC-BY-4.0), available at [http://creativecommons.org/licenses/by/4.0/].{quote}
 
This can be used as the license information in the top-level README.md file for fabric, fabric-chaintool and any other Hyperledger codebase. Each codebase should then also contain the Apache 2.0 text in the top-level LICENSE file, as in the fabric codebase as an example.",,denyeart,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhhr:",,,,,,,,,,,,,,,,,,,,,,denyeart,tkuhrt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,release-1.0,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,mergify/bp/release-2.2/pr-3750,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 5:59 AM;denyeart;Looks like all subtasks are merged, marking as Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fetch private data from ledger and not only transientstore,FAB-6327,21042,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,yacovm,yacovm,28/Sep/17 9:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 8:03 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"when a peer requests private data from a fellow peer, the fellow peer returns data by querying the transient store.

However - now when we're going to purge the data from the transient store upon commit, we need also to add support for obtaining the data from the private store in the ledger.

The dataRetriever object implemented in gossip_service needs a reference to the committer and it would call *GetPvtDataAndBlockByNum* 

[~denyeart] [~manish-sethi] 
Maybe there is a more efficient way to just obtain the private data without the entire block? 
Or - alternatively, just obtain the private data, that we need instead of all of the private data associated with a block? 

[~C0rWin] FYI 
",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhhz:",,,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Sep/17 10:04 PM;denyeart;[~yacovm] Ledger provides both GetPvtDataAndBlockByNum() and GetPvtDataByNum().;;;","28/Sep/17 10:13 PM;yacovm;that'll do the trick, thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: (behave tests) Use polling mechanism where-ever Assert is used to test for pass-fail,FAB-6329,21044,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,28/Sep/17 11:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 1:04 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"In the CI, and more infrequntly in local machines, tests fail due to timing issues where the time provided by the test-writer was not enough for that particular instance. 
It makes sense to deploy a polling mechanism with scaled weight where the desired value/state will be polled several times (up to a set upper limit time) before declaring it as a fail.

Some potential use case are: checking for deployment of chaincode, checking for gossip-leader/non-leader from the log, etc. ",,AdnanChoudhury,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhif:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"28/Sep/17 11:26 PM;AdnanChoudhury;[~scottz] [~latitiah];;;","29/Sep/17 4:09 AM;latitiah;I would propose something along the lines of the following:
  Add explicit ""within X seconds"" phrasing on some Given, When, and Then calls that allows for timing out of certain calls. This is not around the assert calls but is dependent on the calls themselves. For example,
{code}
Then within 10 seconds, the peer0.org1.example.com log should contain ""Done with transaction simulation / query execution""
{code}

But if an action may need to be repeated in order to move to the next step, then the timeout should be with that step. For example,
{code}
When a user deploys chaincode within 30 seconds
{code}
If the deploy is not completed within that time period, then this step fails.

Note: we know that sometimes it takes time for docker containers and the executables to complete initialization. Docker returns once the containers are up; it does not wait to make sure that everything is running successfully. This is especially significant when bringing up fabric networks and when deploying chaincodes.

Though, it will be worth it to look into adding health_checks in our ""depends_on"" clauses - condition: service_started (docker composition files version 2.1);;;","04/Oct/17 5:24 AM;AdnanChoudhury;To summarize, the goal is to make sure that tests do not fail due to timing issues where a reasonable increase in wait time would have made them pass.

To achieve that goal, there are several proposals mentioned:
1)  For the ""Then"" statements that are repeatable: 
----->there should be a max-time mentioned in the statement that specifies for how long the polling should continue
2)  For some Given, When, and Then calls where the call themselves might not be repeatable but there are well-defined explicit checks to see if the call passed/failed:
---->  There should be a max time mentioned in the statement that specifies how long it should keep polling with the explicit check.
3) For the other statements that do not have well defined explicit checks:
-----> TBD

[~latitiah] Please provide feedback about the summary and/or additional comments.;;;","18/Oct/17 1:05 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/14243/;;;","18/Oct/17 1:06 AM;AdnanChoudhury;Opening this up again to include polling in gossip log searching tests.;;;","31/Oct/17 1:04 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/14619/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: test CouchDB performance for 1.1 alpha (FAB-2725),FAB-6330,21045,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,28/Sep/17 11:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Jul/18 2:08 PM,,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"test the CouchDB improvements from 1.1 described in FAB-2725, compare the number from 1.0 against 1.1 using LTE.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6442,,,,,,FAB-2725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhin:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 6:26 AM;AdnanChoudhury;The CouchDB performance test is tracked in FAB-6442. This JIRA is a clone.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fix CI smoke tests in fabric-test behave peer.feature, intermittent failures",FAB-6331,21046,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,29/Sep/17 12:06 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 2:50 AM,v1.0.2,,,,,,,,,fabric-quality,,,,0,,,,,,,"[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/test_results_analyzer/]  job 16
tests in component: peer

Analysis indicates we could probably harden all these by inserting some delays near the beginning.
 2 failed, FAB-1440 - failed query after deploy; need to insert sleep to allow instantiation
 2 failed, FAB-3505 - failed query after 1st invoke; need insert sleep before query
 2 failed, FAB-3865 - failed invoke/query - need to sleep to allow instantiation time for a specified cc
 2 failed, FAB-3866 - failed invoke/query - same as above
 Also make sure no test is run for both smoke and daily.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhiv:",,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"05/Oct/17 2:49 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/13909/]

Fixed smoke tests and timings as specified below.

Note these 10 scenarios in DAILY suite still fail:
 5 chaincodes.feature scenarios (due to bug FAB-6271)
 FAB-4720,FAB-4721,FAB-4722,FAB-5790 parts 3,4
 2 gossip.feature scenarios FAB-4663,FAB-4667 for
 disconnect issues being investigated by Adnan
 3 orderer.feature scenarios for FAB-4770 failing
 intermittently (due to orderer bug FAB-6335)
 # Moved tests from smoke.feature into bootstrap.feature,
 and removed file smoke.feature.
 # Combined a couple smoke tests containing duplication.
 # Removed a tag for a test so it is not run for both the
 smoke and daily test suites.
 # Standardized and fixed up some peer.feature tests that
 were failing in CI test automation runs:
 - 2 failed tests, FAB-1440 - failed query after deploy;
 inserted sleep to allow instantiation
 - 2 failed tests, FAB-3505 - failed query after 1st invoke;
 inserted sleep before query
 - 2 failed tests, FAB-3865 - failed invoke/query -
 added sleep to allow instantiation time for a
 specified cc, and to allow time for invoke transactions
 to be batched and delivered before queried
 - 2 failed tests, FAB-3866 - failed invoke/query -
 same as above
 # Set delays after bootstrap a network, for all
 tests, to wait 5s for solo, 30s for kafka.
 And set delay of 15s for all tests after each
 deploy to allow time to start running the cc
 in the newly created container.
 # Enhanced some Scenario Outline titles, to include the
 parameter variables
 # Skipped the tests that set environment variables
 AND verified them. Although passing, something was
 not getting cleaned up because any test executed
 afterwards (in either the CI smoke test suite or
 the daily tests) often failed during setup or deploy.
 # Removed brackets from titles where unneeded.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Chaincode container of a temporarily disconnected peer cannot resume normal function if, while the peer was disconnected, another peer created its CC container in the meantime",FAB-6333,21048,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,cbl,AdnanChoudhury,AdnanChoudhury,29/Sep/17 12:27 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,28/Nov/17 10:52 AM,v1.0.2,,,,,,,,,fabric-peer,,,,0,ci-failure,,,,,,"In a regular 2 org-4 peer setup, a peer , after doing an invoke+query, gets disconnected temporarily and comes back up, and meanwhile there are transactions in the other peer, then the connected-back peer fails on a query with ""timed out"" error.

+*Steps*+
 1) Bootstrap a solo/kafka network with 4 peers (peer0org1, peer1org1, peer0org2, peer1org2), 
 2) do an invoke in peer0org1
 3) Disconnect peer0org1 (docker disconnect that peer from the network that was created for the test in the docker compose)
 4) run 2 invokes in other peer of the org peer1org1
 5) connect back peer0org1
 6) Query on peer0org1

+*Result observed:*+
 Step 6 fails with `Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: failed to execute transaction: timeout expired while executing transaction`

*log of the peer attached*

+*Expected:*+
 Step 6 passes, gives back the correct value of queried key.

+*More Info:*+
 1) if we swap peer0org1 and peer1org1 functionality (i, e.instead of 
 invokeQueryPeer0-disconnectPeer0-invokeInPeer1-ConnectbackPeer0 , 
 if we do 
 invokeQueryPeer1-disconnectPeer1-invokeInPeer0-ConnectBackPeer1
 ) the test passes as expected. 

2) Test of disconnecting the CC container from the network did not stop the normal functioning of the of the peers.",,AdnanChoudhury,cbl,muralisr,scottz,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6017,,,FAB-6283,FAB-6954,,,,"30/Sep/17 12:45 AM;AdnanChoudhury;Peer0Org1_log_disconnectionTest.txt;https://jira.hyperledger.org/secure/attachment/12150/Peer0Org1_log_disconnectionTest.txt","06/Oct/17 11:26 AM;muralisr;peer0.org1.example.com.log;https://jira.hyperledger.org/secure/attachment/12212/peer0.org1.example.com.log","07/Oct/17 6:17 AM;muralisr;peer0.org1.example.com.with.extra.invoke;https://jira.hyperledger.org/secure/attachment/12218/peer0.org1.example.com.with.extra.invoke","06/Oct/17 5:58 AM;AdnanChoudhury;peer0Org1log_new.log;https://jira.hyperledger.org/secure/attachment/12210/peer0Org1log_new.log",,,,,,,,,,,,,,,,,,,"1|hzyhjb:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,cbl,muralisr,scottz,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,true,"03/Oct/17 12:50 AM;scottz;I upgraded this to High issue, as it is causing failures in fabric-test CI.;;;","05/Oct/17 3:19 AM;AdnanChoudhury;This issue is likely related to FAB-6017. Murali is putting a fix for that and once the fix is in, we will test again to see the results.;;;","05/Oct/17 9:43 PM;muralisr;[~AdnanChoudhury] the fix is in. However note that it might take a bit of time for the containers to detect disconnect and terminate.  Perhaps manually monitor the peer log to look for chaincode termination and they try the query as a first step to test the fix.;;;","06/Oct/17 3:13 AM;AdnanChoudhury;[~muralisr]
With the updated Fabric images I observe that:
1) After the peer is disconnected, it takes about *5 minutes* for the attached CC container to exit, and it exits with message: 

 
{code:java}
UTC [shim] func1 -> ERRO 001 Received error from server, ending chaincode stream: rpc error: code = Unavailable desc = transport is closing
Error starting Simple chaincode: rpc error: code = Unavailable desc = transport is closing
{code}
 


2) Once CC container is down, if I connect the peer back, the peer tries to revive and connect back with the existing CC container, *but fails*, heres the relevant peer log
{code:java}
```
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f0 chaincode mycc:0 is being launched
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f1 Executable is chaincode
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f2 Args [chaincode -peer.address=peer0.org1.example.com:7052]
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f3 Envs [CORE_CHAINCODE_ID_NAME=mycc:0 CORE_PEER_TLS_ENABLED=false CORE_CHAINCODE_LOGGING_LEVEL=info CORE_CHAINCODE_LOGGING_SHIM=warning CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}]
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f4 FilesToUpload []
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f5 start container: mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com)
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f6 start container with args: chaincode -peer.address=peer0.org1.example.com:7052
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f7 start container with env:
CORE_CHAINCODE_ID_NAME=mycc:0
CORE_PEER_TLS_ENABLED=false
CORE_CHAINCODE_LOGGING_LEVEL=info
CORE_CHAINCODE_LOGGING_SHIM=warning
CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}
2017-10-05 16:32:06.899 UTC [container] lockContainer -> DEBU 6f8 waiting for container(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:32:06.899 UTC [container] lockContainer -> DEBU 6f9 got container (bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:32:06.900 UTC [dockercontroller] Start -> DEBU 6fa Cleanup container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:06.907 UTC [dockercontroller] stopInternal -> DEBU 6fb Stop container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0(Container not running: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
2017-10-05 16:32:06.908 UTC [dockercontroller] stopInternal -> DEBU 6fc Kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0 (API error (500): {""message"":""Cannot kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0: Container 9fec0c984efc39173ea066a2753c900a36e279d3bf99e911e6f1fd35837d2d22 is not running""}
)
2017-10-05 16:32:06.962 UTC [dockercontroller] stopInternal -> DEBU 6fd Removed container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:06.962 UTC [dockercontroller] Start -> DEBU 6fe Start container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:06.962 UTC [dockercontroller] createContainer -> DEBU 6ff Create container: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:07.179 UTC [dockercontroller] createContainer -> DEBU 700 Created container: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0-3acfb8c2b5da008eb8a6ca2e06c91679c3e26125c90b47ff34ce0fabff3d1570
2017-10-05 16:32:07.760 UTC [dockercontroller] Start -> DEBU 701 Started container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:07.760 UTC [container] unlockContainer -> DEBU 702 container lock deleted(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
 
 
 
 
 
 
 
2017-10-05 16:37:06.728 UTC [chaincode] launchAndWaitForRegister -> DEBU 703 stopping due to error while launching: timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
2017-10-05 16:37:06.728 UTC [container] lockContainer -> DEBU 704 waiting for container(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:37:06.728 UTC [container] lockContainer -> DEBU 705 got container (bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:37:06.730 UTC [dockercontroller] stopInternal -> DEBU 706 Stop container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0(Container not running: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
2017-10-05 16:37:06.732 UTC [dockercontroller] stopInternal -> DEBU 707 Kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0 (API error (500): {""message"":""Cannot kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0: Container f05138b1ad64425f6602755d8948a239bdf1129b098a37288d86c68cc0d9522d is not running""}
)
2017-10-05 16:37:06.778 UTC [dockercontroller] stopInternal -> DEBU 708 Removed container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:37:06.778 UTC [container] unlockContainer -> DEBU 709 container lock deleted(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
2017-10-05 16:37:06.778 UTC [chaincode] func1 -> DEBU 70a chaincode mycc:0 launch seq completed
2017-10-05 16:37:06.778 UTC [chaincode] Launch -> ERRO 70b launchAndWaitForRegister failed: timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
2017-10-05 16:37:06.779 UTC [chaincode] ExecuteChaincode -> ERRO 70c timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
error executing chaincode
2017-10-05 16:37:06.779 UTC [endorser] callChaincode -> DEBU 70d Exit
2017-10-05 16:37:06.779 UTC [endorser] simulateProposal -> ERRO 70e failed to invoke chaincode name:""mycc""  on transaction 9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af, error: timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
error executing chaincode
2017-10-05 16:37:06.779 UTC [endorser] simulateProposal -> DEBU 70f Exit
2017-10-05 16:37:06.779 UTC [lockbasedtxmgr] Done -> DEBU 710 Done with transaction simulation / query execution [9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af]
2017-10-05 16:37:06.779 UTC [endorser] ProcessProposal -> DEBU 711 Exit
```   

 {code}
 
 
and the CC Container , which respawns and then exits, has following in its log:
```

 
{code:java}
2017-10-05 16:32:10.742 UTC [shim] userChaincodeStreamGetter -> ERRO 001 context deadline exceeded
error trying to connect to local peer
github.com/hyperledger/fabric/core/chaincode/shim.userChaincodeStreamGetter
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:119
github.com/hyperledger/fabric/core/chaincode/shim.Start
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:158
main.main
/chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:195
runtime.main
/opt/go/src/runtime/proc.go:185
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
Error starting Simple chaincode: error trying to connect to local peer: context deadline exceeded
{code}
```;;;","06/Oct/17 3:28 AM;muralisr;[~AdnanChoudhury] so the fact chaincode detects error and dies is a good thing... that's what I'd expect (btw, you might also see an error on the peer side in peer logs sooner than 5 mins).

I do not know why the launch fails. Prima facie that would appear to be a different problem than what we started with ... but don't mind looking into that here :).  Was the docker network connect issued on the peer ?

can you add CORE_CHAINCODE_LOGGING_LEVEL=debug and CORE_VM_DOCKER_ATTACHSTDOUT=true to peer services env and get peer logs please ? ;;;","06/Oct/17 5:59 AM;AdnanChoudhury;[~muralisr] Attached the log file, yes, both the connect and disconnect were issued from the peer.;;;","06/Oct/17 11:25 AM;muralisr;[~AdnanChoudhury] worked for me with standard e2e_cli test on latest master. Attaching peer0.org1.example.com.log.

Steps
# run e2e_cli to success
# docker network disconnect e2ecli_default peer0.org1.example.com
# wait for ""Deregister handler: mycc:1.0""  to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
# docker network connect e2ecli_default peer0.org1.example.com
# docker exec -it cli bash
# CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051  peer chaincode query -C mychannel -n mycc -c '{""Args"":[""query"",""a""]}'

The chaincode comes up and the query succeeds.

 ;;;","07/Oct/17 12:20 AM;AdnanChoudhury;[~muralisr] I also see the same result as yours when I follow your steps (it passes), my scenario was a bit different----I do some invokes on the non-disconnected peer (peer1.org1.example.com) while peer0.org0 is disconnected. So, after your step 3, I did



3a) invoke on peer1.org1
3b) query on peer1.org1

I ran the tests again, your scenario is passing while my one is failing.;;;","07/Oct/17 6:16 AM;muralisr;worked for me ...  attached peer0.org1.example.com.with.extra.invoke
 # run e2e_cli to success
 # docker network disconnect e2ecli_default peer0.org1.example.com
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker exec -it cli bash
 # CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_LOCALMSPID=Org2MSP peer chaincode invoke -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"", ""b"", ""10""]}' -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
 # CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_LOCALMSPID=Org2MSP peer chaincode query -C mychannel -n mycc -c '\{""Args"":[""query"",""a""]}' --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pemdocker network connect e2ecli_default peer0.org1.example.com
 # CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

 

I didn't wait after 6 but if you like wait for peer0.org1.example.com to die before doing 6 and 7.

 

By the way, you say

3a) invoke on peer1.org1
 3b) query on peer1.org1

but per e2e_cli it should be peer1.org2 .... I'm assuming typo.;;;","10/Oct/17 11:48 PM;AdnanChoudhury;Hi [~muralisr], no that was not a typo, I do the invoke-query in peer1.Org1 during when peer0.Org1 is disconnected. So in short,

1) Bring up the network and channel
 2) install chaincode, instantiate-query-invoke in peer0.org1
 3) disconnect peer0.org1
 4)  query-invoke in peer1.org1 (after seeing ""deregister:mycc"" in peer0.org1 log)
 5) Connect peer0.org1 back
 6) Attempt to invoke and query in peer0.org1 fails

Can you please check this scenario? I am using images from a build that includes your CR, but it failed with the same timeout error.;;;","12/Oct/17 5:37 AM;muralisr;[~AdnanChoudhury] I had to do a install on peer1.org1. So with that I was able to recreate the problem ... the interesting thing was that I was able to make it work by altering the steps a bit.

*Fails*
 # run e2e_cli to success
 # docker network disconnect e2ecli_default peer0.org1.example.com
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker exec -it cli bash
 # install mycc on peer1.org1  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
 # invoke cc on peer1.org1 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke -o orderer.example.com:7050  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
 # docker network connect e2ecli_default peer0.org1.example.com
 # invoke cc on peer0.org1 (fails) CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

*Succeeds (do disconnect after bringing up peer1.org1)*
 # run e2e_cli to success
 # docker exec -it cli bash
 # install mycc on peer1.org1  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
 # invoke cc on peer1.org1 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke -o orderer.example.com:7050  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
 # *docker network disconnect e2ecli_default peer0.org1.example.com*
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker network connect e2ecli_default peer0.org1.example.com
 # invoke cc on peer0.org1 (works) CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

*Succeeds (rm newly started CC on peer1.org1 before querying peer0.org1 again)*
 # run e2e_cli to success
 # docker network disconnect e2ecli_default peer0.org1.example.com
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker exec -it cli bash
 # install mycc on peer1.org1  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
 # invoke cc on peer1.org1 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke -o orderer.example.com:7050  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
 # docker network connect e2ecli_default peer0.org1.example.com
 # *docker rm -f dev-peer1.org1.example.com-mycc-1.0*
 # invoke cc on peer0.org1 (succeeds) CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

Need to debug to get to the bottom....but let me know (1) if you see the same thing and (2) if you have any ideas ;;;","12/Oct/17 6:58 AM;AdnanChoudhury;[~muralisr] For your scenario 3 (remove the CC in peer1.Org1 before querying peer0.org1), the heading says ""succeeds"" but step 9 says ""fails"". if it actually failed, then I observe the exact same behavior for the three cases.;;;","12/Oct/17 7:09 AM;muralisr;_the heading says ""succeeds"" but step 9 says ""fails""_

I meant to say succeeds (copy paste error)... fixed that.   I was able to recreate your scenario and found two ways to make it work (on my laptop :) );;;","23/Oct/17 5:23 PM;cbl;For the scenario 3, I also got a failed result in step 9. The error message is like:
{quote}Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:1.0(networkid:dev,peerid:peer0.org1.example.com,tx:b5cc4b81115f86d01bee4ce767ac614a50058f3b3922d7f1a3434511f0f5ecdb) - <nil>
{quote};;;","23/Oct/17 8:48 PM;muralisr;[~cbl] I did work with [~AdnanChoudhury] to confirm that scenario 3 works for him. Wonder if there's something that's tripping you up.

In any case,  scenarios 2 and 3 are just exploratory.  If we don't do step6 on the first scenario, it works. The real question is why would starting up a new chaincode to a different peer1 cause chaincode on peer0 to fail after reconnect ?;;;","02/Nov/17 12:47 PM;muralisr;[~cbl] as discussed offline I traced your suggestion to follow the changed IP address. Sure enough, the changed IP address after reconnect causes a problem as the original chaincode listener on peer0.org1.example.com continues to listen on the old address that was resolved by the peer0.org1.example.com hostname when the peer was started.

We can have CHAINCODE_LISTENADDRESS and CHAINCODE_CONNECTADDRESS with the former typically set to 0.0.0.0:7052 (listen on any IP) and the latter being the connecting host name for the chaincode. So for example, the addresses would like 

{code:java}
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
       ....
       ....
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_CHAINCODECONNECTADDRESS=peer0.org1.example.com:7052
       ....
       ....
{code}

Note that the peer has a similar pair of addresses too in core.yaml so this pattern is not new.

Do add any comments/corrections too please. ;;;","02/Nov/17 5:55 PM;cbl;Will submit a CR to separate chaincode listen address and connect address to fix this issue.;;;","06/Nov/17 6:54 PM;cbl;The CR has been submitted to: [https://gerrit.hyperledger.org/r/#/c/15217/]

Feel free to review it. Thanks.;;;","28/Nov/17 1:33 PM;scottz;Boliang, Did you rerun the fabric-test testcase successfully after merging your fix into the fabric repository?;;;","28/Nov/17 3:05 PM;cbl;Haven't test that yet. Could you create a new issue with the error logs and assign it to me? Will take a look at that.;;;","30/Nov/17 7:18 AM;AdnanChoudhury;Tested the behave test specific for this FAB, passed in the CI (one-off test, not part of regular run)
https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/576/console;;;","01/Dec/17 12:39 PM;cbl;Thanks to [~AdnanChoudhury]. 

[~scottz], if you find sth wrong, feel free to provide more details in a new issue.

This one has been closed.;;;","01/Dec/17 10:04 PM;muralisr;[~cbl] thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,
Rename logging.peer option in core.yaml,FAB-6334,21065,21025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,29/Sep/17 12:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Sep/17 10:42 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"The logging.peer option in core.yaml is not used and also gets in the way of overriding the log level for submodules that begin with peer. It should be renamed to logging.level so that it uses the same environment variable naming as CORE_LOGGING_LEVEL. 

Note: CORE_LOGGING_LEVEL set as an environment variable still overrides the value set in core.yaml. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhnr:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/17 4:39 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/13935/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invoke fails intermittently even when kafka ISR_SET has only one broker in it.,FAB-6335,21066,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Invalid: Not Supported,latitiah,Nishi,Nishi,29/Sep/17 1:16 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,03/Oct/18 3:49 AM,v1.0.2,,,,,,Future,,,fabric-quality,,,,0,ci-failure,,,,,,"Fabric-Commit level: *7c12814766d4e613668b0460d709cca87e740a6a*

Steps to reproduce:

1. Build hyperledger fabric images
 2. Get fabric-test latest repo.
 3. From fabric-test folder run: git submodule update --init --recursive (only the first time)
 Note: If you build images subsequently please run : git submodule foreach git pull origin master
 4. cd ""github.com/hyperledger/fabric-test/feature""
 5. run: behave -n 4770 

Expected Result:
 All the test scenarios (stop/start, pause/unpause & connect/disconnect) to pass.

Actual Result:

--FAB-4770-- passes for stop/start, occasionally fails for pause/unpause, and connect/disconnect;

 

Please find kafka broker logs + orderer logs attached here.",,denyeart,kchristidis,latitiah,Nishi,sambhavdutt,sanchezl,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 12:48 PM;sanchezl;Screen Shot 2017-10-09 at 11.39.29 PM.png;https://jira.hyperledger.org/secure/attachment/12404/Screen+Shot+2017-10-09+at+11.39.29+PM.png","10/Oct/17 12:48 PM;sanchezl;Screen Shot 2017-10-09 at 11.40.01 PM.png;https://jira.hyperledger.org/secure/attachment/12405/Screen+Shot+2017-10-09+at+11.40.01+PM.png","29/Sep/17 12:32 AM;Nishi;logs-4770.tar.gz;https://jira.hyperledger.org/secure/attachment/12147/logs-4770.tar.gz","10/Oct/17 12:52 PM;sanchezl;manager.sh;https://jira.hyperledger.org/secure/attachment/12406/manager.sh",,,,,,,,,,,,,,,,,,,"1|hzyhnz:",,,,,,,,,,,,,,,,,,,,,,denyeart,kchristidis,latitiah,Nishi,sambhavdutt,sanchezl,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"03/Oct/17 12:48 AM;scottz;I upgraded this to a High issue, since it is causing failure of test scenarios in fabric-test CI test suite. And because data integrity is potentially compromised, depending on subsequent sequence of events (although I am not sure about that).;;;","09/Oct/17 12:18 AM;kchristidis;Thank you for including steps to reproduce and attaching logs to the bug report.

I need however two clarifications on the high-level description:
 # The issue here is that invoke commands _succeeds_ intermittently when only one broker is up when your expectation is that it should always fail. True/false?
 # Concretely, what is the line in the behave test (see FAB-4770) that triggers the error? As best as I can tell, you only invoke when all brokers are down. Let me know what I'm missing.;;;","09/Oct/17 10:16 PM;scottz;# Correct. It succeeds when it should fail.
 # Refer to lines 220-225 in orderer.feature. We identify the 3 kafkabrokers in the RF set, take one down, invoke, take a 2nd one down, invoke (line 220). This is the step that succeeds instead of failing as expected. The subsequent query shows 970 instead of 980. https://github.com/hyperledger/fabric-test/blob/master/feature/orderer.feature#L225;;;","10/Oct/17 12:53 PM;sanchezl;Observations during a run that reproduced the issue:

kafka0 & kafka3 were shutdown during the test:

!Screen Shot 2017-10-09 at 11.39.29 PM.png|thumbnail!

kafka3 did not contain a replica for behavesystest/0 , so behavesystest/0 still had 2 in-sync replicas:

!Screen Shot 2017-10-09 at 11.40.01 PM.png|thumbnail!

It seems that the step implementation for ""When I *stop* the current kafka topic partition leader"" sometimes picks the wrong kafka broker to stop.

 ;;;","27/Nov/17 11:31 AM;denyeart;[~latitiah] Any update on this one?;;;","12/Dec/17 1:10 AM;latitiah;This is currently on my list, but lower priority at the time than my other tasks. I'll get to it as soon as I can.;;;","08/Jan/18 11:50 AM;denyeart;Lowering to Medium since this is a lower priority test issue.;;;","28/Apr/18 3:57 AM;scottz;What is the status of this, [~latitiah]? Design team says is a testtool problem, so I am removing the ""kafka"" label, and changing the status from Invalid to ""To Do"".  It is not an invalid testcase, but rather appears to be a testtool (implementation) bug.;;;","28/Apr/18 4:24 AM;scottz;We still should fix the behave backend logic and reenable this test.;;;","28/Apr/18 11:30 AM;latitiah;As stated in my last comment, this is still on my TODO list, but have not had the cycles to dig in to what's going on yet. This has been a lower priority.;;;","03/Oct/18 3:49 AM;sambhavdutt;Please let me know if I have to revert this to its previous state.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance Improvement by Extended Efficient API Functions,FAB-6336,21067,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,miyamae,miyamae,29/Sep/17 1:51 AM,23/Jan/20 7:07 AM,28/Oct/23 3:01 AM,23/Jan/20 7:07 AM,,,,,,,Future,,,fabric-peer,,,,0,stale-item,,,,,,"We will propose two new extended API functions for Fabric's performance improvement, which has already been presented at P2PFISY2017.

Differential Update State (DUS) : an API function in which differential update operation (e.g. A:=A+X or A:=A-X) is executed in the peer side, allowing users to reduce the number of API functions they used in their chaincodes.

Compound Request (CR) : an API function in which multiple existent API functions are merged into one, allowing users to reduce the number of API functions they used in their chaincodes again.

We have already evaluated its efficiency for v0.6.1, where two extended API functions improve Fabric's transaction rate from 725tps to 1,350tps (86% increased). We are now evaluating it for v1.0.",,daijianw,Hangyu_FJH,mastersingh24,miyamae,sykesm,thonda,xixuejia,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1244,FAB-3243,,,,,,,,,,"29/Sep/17 1:06 AM;miyamae;p2pfisy2017_fabric_100.pdf;https://jira.hyperledger.org/secure/attachment/12149/p2pfisy2017_fabric_100.pdf","29/Sep/17 1:06 AM;miyamae;p2pfisy2017_fabric_slides_104.pdf;https://jira.hyperledger.org/secure/attachment/12148/p2pfisy2017_fabric_slides_104.pdf",,,,,,,,,Unset,,,,,,,,,,,,"1|hzyho7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,daijianw,Hangyu_FJH,mastersingh24,miyamae,sykesm,thonda,xixuejia,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 8:42 PM;yacovm;I'm not sure how that differential update is achieved? The states are raw bytes, and you have to compute everything on the chaincode side. You can't compute anything in the peer side.
The A := A-X semantic might work only when the chaincode treats values of keys as numbers, but what if they're not numbers?

Regarding the compound request - there has been a proposal (the one linked to this JIRA, FAB-3243) that indeed does just that.
We certainly need an API method that does multiple GetStates, but I don't think we need multiple SetStates... we can just record all SetStates and send them batched at the end of the chaincode transaction.

Furthermore, I'm certain we can achieve *hundreds* of percentages of performance increase, without extending any API- if we can just make the chaincode shim multi-threaded, and have multiple gRPC streams that are connected to the chaincode shim, instead of just one. ;;;","17/Feb/18 3:22 AM;mastersingh24;Also - if we really wanted to do some type of ""differential update"", we should actually consider adding additional ""field"" commands (e.g. add / subtract) rather than just having put / get state functions.
We could even have an operator with rule ""subtract but must be greater than zero"" which could be processed at validation time rather than during endorsement/simulation.  This would actually have the additional benefit of reducing collisions for frequently updated numeric values;;;","17/Feb/18 3:23 AM;mastersingh24;And I agree with [~yacovm] - I don't believe we need a *SetStates* function .... this is an optimization which can be made in the shim;;;","20/Feb/18 11:43 AM;miyamae;Thank you for your comments, Yacov and Gari. You have nice viewpoints!
But, regarding multi-threading, we belive it is not necessarily the best solution especially for some kind of primitive chaincodes or functions such as sending some amount of token from Alice to Bob, because generating threads takes relatively large time (100us) and makes our programming not a little complicated for such small functions.
Therefore, we believe introducing efficient APIs is one of the options we can choose.;;;","20/Feb/18 4:58 PM;yacovm;I did not say the programmer is the one that is going to create these goroutines. 
I said that the chaincode shim would be multi-threaded, and have multiple gRPC streams instead of just one.
That means - it pre-allocates a number of streams and consequently a number of goroutines (1 per stream).

A simple chaincode in which Bob sends something to Alice is actually wasting *most of its time* doing *nothing* but waiting for responses to queries to come back from the peer.
That's why having multiple goroutines do that, would increase the throughput. 
Consider the following scenario:

Two transactions that come in the same time- T1, and T2.
Assume without loss of generality that T1 gets handled first by the peer and is sent to the shim.
The shim then sends a GetState and waits *t* time and doesn't do anything at this time. 
Then, it receives the GetState result, and sends a SetState, then *waits for the result yet again* and then completes the transaction,
and only afterwards - T2 is handled!

If we had 8 goroutines dispatch peer messages, we could increase throughput by 800%, because you could service 8 transactions at the same time by being able to send to the peer 8 GetState (for example) queries at the same time.

{quote}Therefore, we believe introducing efficient APIs is one of the options we can choose.{quote}
We *can* choose that for sure, but we *should* prefer solutions that don't have an impact on the API if all we want in the first place is to increase the throughput.;;;","22/Feb/18 2:12 PM;miyamae;Hi Yacov, let me understand your idea achieving 800% throughput more clearly.
(1) Are you really assuming no changes are required in chaincodes?
    (Do we only have to optimize shim codes?)
(2) Are you assuming multiple clients?
    (Do 8 clients invoke Tx(x=1...8) transactions concurrently?);;;","22/Feb/18 4:57 PM;yacovm;Right, we only need to change the peer chaincode code and the shim infrastructure code, but not any API change.

{quote}Are you assuming multiple clients?{quote}
Either multiple clients or a single client sending in parallel multiple proposals. Otherwise the throughput will be capped at the maximum throughput a client can send to the system.;;;","23/Feb/18 5:39 PM;miyamae;It sounds like ""neither client nor chaincode does not have to be parallelized"".
How do you send 8 GetState queries to the peer at the same time?;;;","23/Feb/18 6:21 PM;yacovm;{quote} How do you send 8 GetState queries to the peer at the same time?{quote}

I just have 8 different gRPC streams so I send them to the peer at the same time;;;","26/Feb/18 12:19 PM;miyamae;Thank you, Yacov. I finally understand your idea. It might be good as an option.
However, it's not perfect because thread-safe shim would not necessarily solve the latency problem for some kind gigantic chaincodes
like large amount of matrix initialization (initialization of matrix with 32,000 elements would take 10 seconds or more).
In addition, thread-safe shim might make shim codes unnecessarily complicated and keeping it safety might actually not be so easy.
On the other hand, adding new efficient API such as Compound Request requires only a tiny codes and it's even simpler.
By the way, do you have any plans for thread-safe shim at this moment, Yacov and Gari?;;;","26/Feb/18 5:18 PM;yacovm;{quote} By the way, do you have any plans for multi-threading shim at this moment, Yacov and Gari?{quote}

I would love to do that, but I don't call the shots;;;","23/Jan/20 7:07 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer commands from CLI container fail when CORE_LOGGING_LEVEL is not set,FAB-6338,21070,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,29/Sep/17 4:45 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 4:00 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"While modifying some logging parameters on the peer side and testing combinations of CORE_LOGGING_LEVEL set and not set, I found a bug where peer commands from the CLI, such as `peer channel fetch` in the e2e_cli example, fail when CORE_LOGGING_LEVEL is not set. This causes the e2e_cli to fail:
{code:java}
Channel name : mychannel
Check orderering service availability...
Attempting to fetch system channel 'testchainid' ...3 secs
Attempting to fetch system channel 'testchainid' ...7 secs
Attempting to fetch system channel 'testchainid' ...10 secs
.
.
.
Attempting to fetch system channel 'testchainid' ...62 secs
2017-09-27 12:56:40.485 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2017-09-27 12:56:40.488 UTC [main] main -> INFO 002 Exiting.....
!!!!!!!!!!!!!!! Ordering Service is not available, Please try again ... !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

{code}",,jeffgarratt,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10132,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhon:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 4:36 AM;jeffgarratt;[~wlahti] Is this one still an issue?;;;","07/Nov/17 4:00 AM;wlahti;After further inspection, this is just how the e2e_cli test for checkOSNAvailability() works. The log level for the CLI container must be set to debug in order to receive the message it looks for in the log:
{code:java}
2017-11-06 18:57:40.894 UTC [channelCmd] readBlock -> DEBU 034 Received block: 0{code}
If it isn't set or is set to any value other than debug, the e2e_cli will fail even though the command itself succeeded. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Is mkdocs.yml necessary?,FAB-6341,21073,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,29/Sep/17 6:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Nov/17 4:45 AM,v1.0.2,,,,,,v1.1.0,,,fabric-docs,,,,0,Documentation,,,,,,"Is mkdocs.yml necessary?
[https://github.com/hyperledger/fabric/blob/release/mkdocs.yml]

I think this file was used by GitHub. But now fabric uses sphinx.",,joe-alewine,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhpb:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Sep/17 8:01 AM;nnao;https://gerrit.hyperledger.org/r/#/c/13947/;;;","27/Oct/17 1:19 AM;joe-alewine;Have posted gerrit link in fabric-pr-review.;;;","27/Oct/17 1:25 AM;nnao;[~joe-alewine] Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a light-weight chaincode sanbox for chainocde verification,FAB-6344,21076,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,hanhzf,hanhzf,29/Sep/17 11:15 AM,23/Jan/20 7:07 AM,28/Oct/23 3:01 AM,23/Jan/20 7:07 AM,,,,,,,Future,,,fabric-tools,,,,0,stale-item,,,,,,"when using fabric in a production environment, customer can write their own chaincode for business integration and deploy it to fabric network. While these chaincode may have bugs or not well tested, or have some performance problem, that may cause problems in production chain.

If there is a light-weight chaincode sanbox, the chaincode developer can upload their chaincodes to the sanbox, for syntax, performance or other factors(need more discuss here) verification, chaincode passed those verifications are ready to be used for the next step, like function test in a test environment. ",,hanhzf,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx4dz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,hanhzf,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:07 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric/examples/configtxupdate/README.md has some error.,FAB-6345,21077,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,TopJohn,TopJohn,TopJohn,29/Sep/17 5:05 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,28/Oct/17 10:42 PM,,,,,,,v1.0.4,v1.1.0,,fabric-samples,,,,0,,,,,,,fabric/examples/configtxupdate/README.md has some error.,,mastersingh24,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhqf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Oct/17 9:31 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/13957/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode - allow packaging .so files (go plugins),FAB-6346,21082,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,29/Sep/17 10:50 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,13/Nov/17 2:23 AM,,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,"Now that we can configure fabric to compile chaincodes dynamically, let chaincode authors bundle go plugins with their GOLANG chaincodes.",,aleksandar.likic,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6192,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhqv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/17 11:39 PM;aleksandar.likic;CR at https://gerrit.hyperledger.org/r/#/c/13965/;;;","13/Nov/17 2:23 AM;kchristidis;CR says abandoned, closing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"(Fabric-test) BDD: if a deploy statement has a specific container name, the implementation should use that user-specified container and not others",FAB-6347,21086,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,29/Sep/17 11:59 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 5:34 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"In the implementation of the statement of 
`'a user deploys chaincode at path ""\{path}"" with args \{args} with name ""\{name}"" to ""\{containerName}"" on channel ""\{channel}""')`
it uses `peer0.org1.example.com` in the implementation, but it should use \{containername}",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhr3:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
nodehcaincode tests are failing due to recent merge of FAB-6280,FAB-6348,21088,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,30/Sep/17 1:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Sep/17 4:26 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Due to the recent merge of https://gerrit.hyperledger.org/r/#/c/13785/ nodechaincode related tests are failing. 
Need to add the chaincode name as part of the package.json will fix the issue. This also allows us to change the chaincode file name.
",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhrz:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"30/Sep/17 3:39 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/13973/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DEV Mode - Documentation to be corrected to start chaincode at right port,FAB-6349,21090,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Amjadnz,Amjadnz,Amjadnz,30/Sep/17 2:12 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Sep/17 8:45 PM,,,,,,,v1.1.0,,,,,,29/Sep/17 12:00 AM,0,,,,,,,"In the current setup guide in DEV MODE at [http://hyperledger-fabric.readthedocs.io/en/latest/peer-chaincode-devmode.html?highlight=dev-mode] the URL to start the Chaincode is provided as ""7051"" in essence as this port is already in use by PEER when starting up - a new port has to be provided.

So 7052 has to be used instead.",,Amjadnz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhsf:",,,,,,,,,,,,,,,,,,,,,,Amjadnz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DeliverService CI failure due to Server.RegisterService after Server.Serve,FAB-6350,21092,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/Sep/17 3:11 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 1:20 AM,v1.0.2,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The orderer service mock in the deliver service package tries to register a gRPC server after serve might be called.

This is forbidden in the latest gRPC version.

the error is:
{code}
17:39:38 unit-tests_1  | 2017-09-29 17:39:38.437 UTC [grpc] Fatalf -> CRIT 06a grpc: Server.RegisterService after Server.Serve for ""orderer.AtomicBroadcast""
17:39:38 unit-tests_1  | FAIL	github.com/hyperledger/fabric/core/deliverservice	7.090s
17:39:38 unit-tests_1  | error: exit status 1
17:39:38 unit-tests_1  | panic: EOF
{code}",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhsn:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 3:30 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13977/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer version command not outputting proper version,FAB-6351,21093,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Sep/17 3:26 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 8:04 PM,v1.0.2,,,,,,v1.0.3,v1.1.0,,fabric-orderer,,,,0,,,,,,,"Running 
{code:java}
orderer version
{code}
is always outputting ""development build""",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhsv:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 4:17 AM;mastersingh24;https://gerrit.hyperledger.org/r/13983
https://gerrit.hyperledger.org/r/13989;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[fabric-test] Network Launcher fails due to missing parameters,FAB-6353,21095,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,30/Sep/17 3:38 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Nov/17 3:06 AM,v1.0.2,,,,,,,,,fabric-quality,,,,0,,,,,,,"Network Launcher fails due to missing parameters.
- Default value is different between scripts.
- Some parameters don’t have default value.
- The name of args to call a sub-script is not correct.

We need to modify Network Launcher to pass parameters correctly.
",fabric-test commit 551302eaed8dbbdeccdee497a5673e67fd9e86ae,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzyhtb:",,,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properly log x509 certificates - take II,FAB-6354,21096,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/Sep/17 4:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 1:20 AM,v1.1.0,,,,,,,,,fabric-crypto,,,,0,,,,,,,"https://gerrit.hyperledger.org/r/#/c/12439/7/msp/identities.go removed the fix of https://gerrit.hyperledger.org/r/#/c/12321/

Now the bccsp msp once again logs certificates as:
{code}
2017-09-29 19:44:43.682 UTC [msp/identity] newIdentity -> DEBU 037 Creating identity instance for cert &{0�^B^X0�^A��^C^B^A^B^B^P4���^M��^@�9��^_ϻ^X0
^F^H*�H�=^D^C^B0s1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^Y0^W^F^CU^D
^S^Porg2.example.com1^\0^Z^F^CU^D^C^S^Sca.org2.example.com0^^^W^M170929194441Z^W^M270927194441Z0[1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^_0^]^F^CU^D^C^S^Vpeer1.org2.example.com0Y0^S^F^G*�H�=^B^A^F^H*�H�=^C^A^G^CB^@^D���|^@^Va&y^\+~��^T�
������P'WOJ�^S�n��^\��Vd�T�^F^C�[ITkY�B.z�D��P����\�M0K0^N^F^CU^]^O^A^A�^D^D^C^B^G�0^L^F^CU^]^S^A^A�^D^B0^@0+^F^CU^]#^D$0""� ��e5^AP�Dٞ^P�U9��T^YdƷ6dY^?���''V�0
^F^H*�H�=^D^C^B^CG^@0D^B ^O^D��S��t�-E^Z�q^U1^^S^K�^Z��g*�����@�^B f4Y�Uk������^E�qs6^L12>�)^@�b��y?^L| 0�^A��^C^B^A^B^B^P4���^M��^@�9��^_ϻ^X0
^F^H*�H�=^D^C^B0s1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^Y0^W^F^CU^D
^S^Porg2.example.com1^\0^Z^F^CU^D^C^S^Sca.org2.example.com0^^^W^M170929194441Z^W^M270927194441Z0[1^K0   ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^_0^]^F^CU^D^C^S^Vpeer1.org2.example.com0Y0^S^F^G*�H�=^B^A^F^H*�H�=^C^A^G^CB^@^D���|^@^Va&y^\+~��^T�
������P'WOJ�^S�n��^\��Vd�T�^F^C�[ITkY�B.z�D��P����\�M0K0^N^F^CU^]^O^A^A�^D^D^C^B^G�0^L^F^CU^]^S^A^A�^D^B0^@0+^F^CU^]#^D$0""� ��e5^AP�Dٞ^P�U9��T^YdƷ6dY^?���''V� 0Y0^S^F^G*�H�=^B^A^F^H*�H�=^C^A^G^CB^@^D���|^@
^Va&y^\+~��^T�
������P'WOJ�^S�n��^\��Vd�T�^F^C�[ITkY�B.z�D��P����\ 0[1^K0      ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^_0^]^F^CU^D^C^S^Vpeer1.org2.example.com 0s1^K0      ^F^CU^D^F^S^BUS1^S0^Q^F^CU^D^H^S
California1^V0^T^F^CU^D^G^S^MSan Francisco1^Y0^W^F^CU^D
{code}


",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhtj:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 5:01 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13987/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error upon chaincode GetPrivateData() using CouchDB,FAB-6355,21097,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,30/Sep/17 7:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 4:07 AM,,,,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,,"Error message:

The available copy of the private data is not latest. The latest version = (*version.Height)(nil), available version = &version.Height\{BlockNum:0x2, TxNum:0x0})

 

The problem is that the retrieve of the public hash from couch state db fails due to a URL encoding issue of a plus sign in the hashed key. 

Keys were already URL encoded using golang URL encoding, but the encoding skips plus signs in the path component.  CouchDB unencodes the plus sign as a space.

The fix is to explicitly URL encode plus character.

Also add unit test to verify the fix and test all other URL special characters.

 

 ",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,"1|hzyhtr:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
grpc.WithTimeout deprecated,FAB-6357,21100,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,grapebaba,grapebaba,grapebaba,30/Sep/17 6:27 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 7:57 PM,,,,,,,v1.1.0,,,fabric-gossip,fabric-orderer,fabric-peer,,0,,,,,,,"{color:#75715e}// Deprecated: use DialContext and context.WithTimeout instead. {color}

{color:#75715e}That method deprecated in grpc-go new version in fabric.
{color}

{color:#f9faf4} {color}",,grapebaba,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhtz:",,,,,,,,,,,,,,,,,,,,,,grapebaba,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Oct/17 7:56 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/14681/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update README license text,FAB-6359,21102,21041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Sep/17 10:10 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 8:00 PM,,,,,,,v1.0.3,v1.1.0,,fabric-docs,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6360,FAB-6361,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhuf:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 10:19 PM;mastersingh24;https://gerrit.hyperledger.org/r/14011;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update README license text,FAB-6360,21103,21041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Sep/17 10:11 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 8:00 PM,,,,,,,v1.0.3,v1.1.0,,fabric-ca,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhun:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 10:22 PM;mastersingh24;https://gerrit.hyperledger.org/r/14013;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update README license text,FAB-6361,21104,21041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Sep/17 10:23 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Oct/17 8:00 PM,,,,,,,v1.0.3,v1.1.0,,fabric-samples,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhuv:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Sep/17 10:33 PM;mastersingh24;https://gerrit.hyperledger.org/r/14019;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Video - Adding an org to a running network,FAB-6362,21105,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,markparz,markparz,30/Sep/17 11:46 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,23/Mar/18 5:37 AM,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,,"As a network administrator we need to add additional organizations into a running network. Would like to have a video showing exactly how to do that, without bring down the network.

Would be good to start with a quick image of what is happening like a .ppt picture.

Afterward go through the process detailing out the process on addition.",,joe-alewine,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhv3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,joe-alewine,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 5:37 AM;joe-alewine;https://www.youtube.com/watch?v=DKuGU5CYV_E;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the broadcast_config tool add a new option and modify the channel creation,FAB-6363,21106,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,asaningmaxchain,asaningmaxchain,asaningmaxchain,01/Oct/17 3:23 PM,23/Jan/20 7:07 AM,28/Oct/23 3:01 AM,23/Jan/20 7:07 AM,,,,,,,,,,fabric-orderer,,,,0,stale-item,,,,,,"in the orderer/sample_clients/broadcast_config,the user can use the tool to create channel,but in the newchain.go,it doesn't assign the org,and i add a new option,the user can set the channel creation config,like the command `peer channel create`",,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhvb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:07 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make keepalive enforcement policy less restrictive,FAB-6364,21107,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,01/Oct/17 6:07 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,01/Oct/17 8:01 PM,,,,,,,v1.0.3,v1.1.0,,fabric-orderer,fabric-peer,,,0,,,,,,,"gRPC allows a server enforcement policy to be configured which sets a threshold for how often a client can send keepalive pings as well as whether or not to allow keepalives without an active streaming RPCs.

Currently, the default policy is being used and this only allows clients to send keepalive pings every 5 min.  Based on feedback of people running peers in various cloud environments behind load balancers, firewalls, etc, it seems that 1 min would be a better setting.

Finally, given that the policy will be less restrictive, the keepalive interval used for client connections (e.g. peer to orderer) will be lowered to 1 min as well.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhvj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Oct/17 6:29 PM;mastersingh24;[https://gerrit.hyperledger.org/r/14025]

https://gerrit.hyperledger.org/r/14027;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use branch specific CI properties,FAB-6365,21108,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,01/Oct/17 8:00 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Oct/17 7:20 PM,v1.0.2,,,,,,v1.0.4,v1.1.0,,fabric-build,,,,0,,,,,,,"Now that fabric must support multiple branches / tag / versions, there may be branch/release specific settings which are required for CI jobs.

An example is that we need to build v1.0.x with Go17 while we need to build v1.1.0 with Go19.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhvr:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ci.properties file to fabric branches,FAB-6366,21109,21108,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,01/Oct/17 8:01 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 9:15 PM,,,,,,,v1.0.4,v1.1.0,,fabric-build,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhvz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Oct/17 8:36 PM;mastersingh24;https://gerrit.hyperledger.org/r/14029
https://gerrit.hyperledger.org/r/14035;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable ConfigTxGen to produce genesis block for other MSP types,FAB-6367,21200,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,mdr,mdr,02/Oct/17 5:56 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 3:54 AM,,,,,,,,,,,,,,0,,,,,,,"ConfigTXGen produces the genesis block by including MSP configs. Currently, this will only create configs for BCCSP MSPs. To support other MSP types (such as idemixmsp), ConfigTXGen should be configurable to create configs for different MSP types.",,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6369,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,"1|hzyhw7:",,,,,,,,,,,,,,,,,,,,,,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Oct/17 10:01 PM;mdr;CR: https://gerrit.hyperledger.org/r/#/c/14535/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
make GetLocalMspConfig configurable to create config of other MSP types,FAB-6369,21202,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,mdr,mdr,02/Oct/17 6:16 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 11:05 PM,,,,,,,,,,,,,,0,,,,,,,"GetLocalMspConfig currently returns an MSP config for BCCSP MSPs. In order to use other MSP types (such as the idemix msp), one should be able to configure for which MSP type GetLocalMspConfig will return a config.",,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6367,,,,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,"1|hzyhwn:",,,,,,,,,,,,,,,,,,,,,,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.0.3 release,FAB-6371,21207,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 4:53 AM,,,,,,,v1.0.3,,,fabric-release,,,31/Aug/17 12:00 AM,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6790,,FAB-5987,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhxj:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.3 for fabric bugs to be included in 1.0.3 release,FAB-6372,21208,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Oct/17 6:17 PM,,,,,,,v1.0.3,,,fabric-release,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=10900,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6408,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhxr:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.0.3,FAB-6373,21209,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 10:56 PM,,,,,,,v1.0.3,,,fabric-release,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
Check for clean CI passes
Update Makefile
BASE_VERSION = 1.0.3
PREV_VERSION = 1.0.2
IS_RELEASE = true
release_notes/v1.0.3.txt should be updated
docs/source/releases.rst should be updated with prose and link to GH release page
change log should be generated just after rebasing to pick up the last minute merged CRs and linked from docs/source/releases.rst",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhxz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric CA v1.0.3,FAB-6374,21210,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 7:18 PM,,,,,,,v1.0.3,,,fabric-release,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
Check for clean CI passes
Update Makefile
BASE_VERSION = 1.0.3
PREV_VERSION = 1.0.2
IS_RELEASE = true
change log should be generated just after rebasing to pick up the last minute merged CRs 
update release_notes/v1.0.3.txt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhy7:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric samples docs with new short URL for release,FAB-6375,21211,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 10:56 PM,,,,,,,v1.0.3,,,fabric-docs,fabric-release,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhyf:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for v1.0.4 release,FAB-6376,21212,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 7:05 PM,,,,,,,v1.0.4,,,fabric-build,,,,0,,,,,,,"Bump version to 1.0.4
 Previous version to 1.0.3
 is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhyn:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for v1.0.4 release,FAB-6377,21213,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 7:05 PM,,,,,,,,,,fabric-release,,,,0,,,,,,,"Bump version to 1.0.4
 Previous version to 1.0.3
 is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhyv:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update samples to work with v1.0.3 release,FAB-6378,21214,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,02/Oct/17 7:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 4:53 AM,,,,,,,v1.0.3,,,fabric-samples,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhz3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/17 7:06 PM;mastersingh24;https://gerrit.hyperledger.org/r/14181;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prioritize pulling from endorsers over other peers,FAB-6379,21216,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,02/Oct/17 7:56 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 10:31 PM,v1.2.0,,,,,,v1.2.0,,,fabric-gossip,,,,0,v1.1-experimental,,,,,,"When a block is committed and it has private data and the data isn't present in the transient store, it is pulled from remote peers in iterations until the time threshold expires, or the private data is found.

In order to minimize the iteration number, we need to maximize the chance that the peers receiving the pull request would have the private data in question.

The peers that most certainly might have the private data are the peers that endorsed the private data in the first place.

Therefore, we should be able to prioritize pulling from endorsers if applicable. ",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhzb:",,,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Oct/17 7:02 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/14307/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Address CI test failure,FAB-6380,21217,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sanchezl,kchristidis,kchristidis,02/Oct/17 9:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Oct/17 6:56 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,,See [https://jenkins.hyperledger.org/job/fabric-verify-z/13105/console] for more info.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhzj:",,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Oct/17 8:20 PM;kchristidis;https://gerrit.hyperledger.org/r/c/14281/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validator code should fail securely,FAB-6381,21218,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,02/Oct/17 10:17 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,04/May/18 12:56 AM,,,,,,,v1.2.0,,,fabric-peer,,,,1,security,,,,,,"Currently the validator code creates an array of tx validation codes, initializes them all to ""the transaction is valid"" and then later the code may invalidate the tx by changing the value of the validation code. Any bug in the validation code (present or future) that causes validation to be skipped would permit an attacker to skip transaction validation altogether (because by default, the transaction is marked as valid). This goes against security principles; we should default to a secure position (e.g. the tx is invalid) and possibly relax that later if the code was able to determine that the tx was valid.",,ales,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyhzr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Oct/17 10:17 PM;ales;[~yacovm];;;","26/Feb/18 9:03 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/14413/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node.js chaincode docker build misses hidden files in chaincode package,FAB-6384,21222,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix@gmail.com,jimthematrix@gmail.com,jimthematrix@gmail.com,02/Oct/17 11:57 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Oct/17 4:40 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"There is a bug in the fabric side. The command that copies the files from input to output doesn't copy hidden files
 ie
{noformat}
	err := util.DockerBuild(util.DockerBuildOptions{
		Cmd:          fmt.Sprint(""cp -R /chaincode/input/src/* /chaincode/output && cd /chaincode/output && npm install -production""),
		InputStream:  codepackage,
		OutputStream: binpackage,
	})
{noformat}
It's present in the input/src but not present in output and it's due to the use of * as a wild card delimiter I think, and it is. It looks like this should work
{noformat}
	err := util.DockerBuild(util.DockerBuildOptions{
		Cmd:          fmt.Sprint(""cp -R /chaincode/input/src/. /chaincode/output && cd /chaincode/output && npm install -production""),
		InputStream:  codepackage,
		OutputStream: binpackage,
	})
{noformat}
 ",,jimthematrix@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi07:",,,,,,,,,,,,,,,,,,,,,,jimthematrix@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Oct/17 3:24 AM;jimthematrix@gmail.com;https://gerrit.hyperledger.org/r/#/c/14083/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update error handling documentation,FAB-6386,21224,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,03/Oct/17 12:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Nov/17 2:17 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,Fabric now uses github.com/pkg/errors for error handling. The documentation should be updated to reflect this and provide guidance for use of this package. ,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi0n:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Oct/17 12:58 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14055/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
error code missing in returned error message during chaincode calling chaincode negative tests,FAB-6387,21225,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,nnao,Nishi,Nishi,03/Oct/17 12:57 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,30/Apr/18 5:29 PM,v1.0.2,,,,,,v1.2.0,,,fabric-peer,,,,0,ci-failure,,,,,," tests failing with error messages:
{code:java}
 When testing https://jira.hyperledger.org/browse/FAB-4720
   FAB-4720: Test chaincode calling chaincode -ve test case passing an incorrect or non-existing channnel name when cc_ex02 and cc_ex05 installed on same channels

   Error Message Received from peer logs:
   ""Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: Failed to get policy manager for channel [channel3] - <nil>""


2. When testing https://jira.hyperledger.org/browse/FAB-4721
   FAB-4721: Test chaincode calling chaincode -ve testcase passing an incorrect ot non-existing string for channelname when cc_ex02 and cc_ex05 installed on different channels
 
   Error message received from peer logs:
   ""Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: Failed to get policy manager for channel [channel3] - <nil>""


3. When testing https://jira.hyperledger.org/browse/FAB-4722
   FAB-4722: Test chaincode calling chaincode -ve testcase passing an empty string for channelname when cc_ex02 and cc_ex05 installed on different channels

   Error message received from peer logs:
   ""Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: could not find chaincode with name 'myex02_b' - <nil>""{code}
Steps to reproduce:
{code:java}
1. Build hyperledger fabric images
2. Get fabric-test latest repo.
3. From fabric-test folder run: git submodule update --init --recursive (only the first time)
Note: If you build images subsequently please run : git submodule foreach git pull origin master
4. cd ""github.com/hyperledger/fabric-test/feature""
5. run:
   behave -n 4720  
   behave -n 4721
   behave -n 4722

Expected Result:

   To receive an error code along with error message.


Actual Result: No error code returned for any of these error scenarios returned.
 Note:  Right now I am looking for error code 400 (// Invalid inputs on API calls, BadRequest = ""400""){code}
Could we also get a error code along with error message?

This is currently failing our CI daily tests.",,denyeart,mastersingh24,muralisr,Nishi,nnao,sambhavdutt,scottz,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6677,FABCN-263,,,,,,,,,,,FABJ-374,,,FABN-457,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi0v:",,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,muralisr,Nishi,nnao,sambhavdutt,scottz,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dev,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,true,"03/Oct/17 1:05 AM;scottz;Upgrading this to a HIGH issue, since the fabric-test Daily CI tests are failing.;;;","05/Nov/17 7:08 PM;mastersingh24;[~Nishi] [~scottz]  - are you doing this against master or release?;;;","05/Nov/17 7:11 PM;mastersingh24;I believe that these paths will also result in a 500 error and not a 400 error;;;","06/Nov/17 12:29 AM;scottz;Testing is done on master branch. We will take another look at the error code descriptions, and could certainly adjust the expectations to look for 500 instead of 400, if that is more appropriate. But the problem seems to be that no error code is received with the error message.;;;","06/Nov/17 3:32 AM;mastersingh24;Thanks Scott.  Will also take a other look;;;","27/Nov/17 11:33 AM;denyeart;[~nnao] I see you assigned to yourself.  Could you add a comment on what exactly you intend to fix here?;;;","28/Nov/17 3:36 AM;nnao;[~denyeart]
Error code is not returned because response value is ignored.
- ProcessProposal function in core/endorser/endorser.go returns a response and an error value if an error happens.
- After that, a response and an error value are passed to ProcessProposal function in protos/peer/peer.bp.go.
- This function only returns the error value if an error value is set. Even though response value is set, the response value is ignored.
  https://github.com/hyperledger/fabric/blob/release/protos/peer/peer.pb.go#L91
 
I will fix this problem by changing returned value.
- ProposalResponse function returns only response value even if an error happens.
- We can get error code because an error value is included in response value.;;;","28/Nov/17 4:16 AM;nnao;https://gerrit.hyperledger.org/r/#/c/15737/
https://gerrit.hyperledger.org/r/#/c/15739/;;;","28/Nov/17 8:53 AM;denyeart;[~nnao] thanks for adding the details.
[~muralisr] FYI - see the CRs for detailed review.;;;","09/Dec/17 6:56 AM;nnao;https://gerrit.hyperledger.org/r/#/c/16057/
;;;","08/Jan/18 11:57 AM;denyeart;[~muralisr] Could you review FAB-6387 and FAB-6457 and provide your thoughts on next steps?;;;","28/Jan/18 6:06 AM;muralisr;[~denyeart] [~nnao]  [~Nishi] [~scottz] 

A recap of history of a change which led to this issue.
{code:java}
FAB-4347 - SDK test expected error but got a Proposal Response. The ""chaincodeError"" was added in addition to returning the ProposalResponse. This fixed SDK failures but as [~nnao] notes above, gRPC ignores the ProposalResponse and just returns the error. Given that, in retrospect, the right way should have been to fix the SDK to introspect the response.{code}
[~nnao] fixes in this JIRA does the following which looks good to me except for one issue
 * reverts the ---FAB-4347--- change with [https://gerrit.hyperledger.org/r/#/c/15737] - as mentioned in the CR, looks right except for returning 404 *(expanding on this below)*
 * [https://gerrit.hyperledger.org/r/#/c/16057/] - fixes the SDK test to look into ProposalResponse instead of error and also introduces a temporary workaround for SDK failure introduced by the reversal so this CR can go through

*About the setting the 404 in endorser :*

Seems we are doing that to fix the behave tests in [https://gerrit.hyperledger.org/r/#/c/15739]. This 404 should really come from the chaincode and not from the fabric. However currently chaincode framework returns error immediately to the endorser code instead of passing it to the chaincode to complete the loop. (This is where [~nnao] sets 404.)

If the chaincode has the opportunity to handle the error - as it should - the chaincode can return the 404 directly and we wouldn't need for the fabric to set 404. This would be the correct way to handle application level errors. 

The chaincode cleanup CRs slated for 1.2 (a batch of CRs starting with [https://gerrit.hyperledger.org/r/#/c/16533/]) handles this error correctly. For now, recommend we revert the error back to 500 in endorser.go and just check for 500 in the behave tests.  

[~denyeart] If everyone agree's with this approach, please create a bug for 1.2 to make sure the cleanup CRs do the right thing (its already fixed by the CRs ...this is just for due diligence) and assign it to me and we can move this set of CRs from [~nnao] to completion (after reverting the 404 to 500).;;;","30/Jan/18 2:30 AM;scottz;[~muralisr] OK we can keep the behave test in v1.1 for now to look for 500.  The new v1.2 bug is not just for due diligence; we should use it to make sure we change these behave tests again to look for 404, as soon as those other CRs return the error correctly. Please ""relate"" the new bug to this one, and set the new bug ""blocked by"" the JIRA used for the cleanup CRs being used for the code correction to return the 404.;;;","30/Jan/18 5:25 AM;muralisr;[~scottz] makes sense (I was thinking we should use the bug to revert tests to 404 too).

Sounds like we are in agreement.  [~nnao] has reverted 404 to 500 in endorser.go. Opened FAB-7959 and marked it blocked by the cleanup CRs clearing the path to resolving this JIRA.;;;","01/Feb/18 3:37 AM;wlahti;Discussed this with [~muralisr]. We have one recommendation for the chaincode error handling logic. 

What if we have the default ESCC code set the chaincode error status and message at [https://github.com/hyperledger/fabric/blob/master/core/scc/escc/endorser_onevalidsignature.go#L114|https://github.com/hyperledger/fabric/blob/master/core/scc/escc/endorser_onevalidsignature.go#L114?] ? The ESCC is the code that really determines whether a chaincode error should result in an endorsement error, so it seems logical to set the chaincode status/message here.

The existing:
{code:java}
if response.Status >= shim.ERRORTHRESHOLD {
    return shim.Error(fmt.Sprintf(""Status code less than %d will be endorsed, received status code: %d"", shim.ERRORTHRESHOLD, response.Status))
}{code}
could become:
{code:java}
if response.Status >= shim.ERRORTHRESHOLD {
    return shim.Error(fmt.Sprintf(""Chaincode Error(%d, %s)"", response.Status, response.Message))
}{code}
 

Once this has been done, the endorser.go code at [https://github.com/hyperledger/fabric/blob/master/core/endorser/endorser.go#L486] becomes:
{code:java}
if chainID == """" {
    pResp = &pb.ProposalResponse{Response: res}
} else {
    pResp, err = e.endorseProposal(ctx, chainID, txid, signedProp, prop, res, simulationResult, ccevent, hdrExt.PayloadVisibility, hdrExt.ChaincodeId, txsim, cd)
    if err != nil {
        return &pb.ProposalResponse{Response: &pb.Response{Status: 500, Message: err.Error()}}, err
    }
    if pResp.Response.Status >= shim.ERRORTHRESHOLD {
        endorserLogger.Debugf(""[%s][%s] endorseProposal() resulted in chaincode %s error for txid: %s"", chainID, shorttxid(txid), hdrExt.ChaincodeId, txid)
        return pResp, nil
    }
}{code}
and the pResp returned by the endorser for this situation contains:
{code:java}
response:<status:500 message:""Chaincode Error(404, error message from chaincode-ex-02)"" >{code}
 

Does that all seem logical? Anything I missed, [~muralisr]?;;;","01/Feb/18 5:03 AM;muralisr;[~wlahti] Sounds right. 

Basically two code changes
* change in endorser.go to just return pResp received from escc.
* modify https://github.com/hyperledger/fabric/blob/master/core/scc/escc/endorser_onevalidsignature.go#L114 as you have indicated

Let us also update the CR for gerritt tracking.;;;","01/Feb/18 8:59 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/15739/] is being used for fixing the testcases in fabric-test repo using this FAB-6387.

The previous comments seem to apply to another update in the fabric repo.;;;","02/Feb/18 1:29 AM;muralisr;[~nnao] -1ed the CR just for now with this comment

{code:java}
We need to make sure if SDKs can deal with this change in a sensible manner. Important to keep compatibility in mind. If we think we need more time to everything covered and give users enough notice, then we might want to target 1.2.
{code}

[~denyeart] [~Nishi] [~scottz];;;","02/Feb/18 2:17 AM;nnao;[~muralisr] I agree to keep compatibility and give users enough notice. If we need more time, There is no problem that to move target 1.2.
I have a question. How to check those SDK's compatibility? Do we need to add a more response check test case in sdk-* e2e test or fabric-test?;;;","02/Feb/18 2:53 AM;muralisr;[~nnao] thank you for the response (and the patience!).

We can add/modify tests appropriately, I think you already started with that - and they pass with your CR which is a good start.

I was thinking more of current users of 1.0.

Hopefully SDKs are processing responses correctly like this ( first of all we have to verify if this is true )
{code:java}
   if err != nil // Path 1
          return err
   else if response.Status == ERROR //Path 2
          return response_error
   else // good response //Path 3
          process good response
{code}
With your change, callers who were getting error in *Path 1* due to ""chaincode error"" will now fall into *Path 2*. This is still an error path - which is good - but they need to be able to differentiate between the errors. This is mainly a question of documentation and notification.

Now it is _possible_ SDK does something like this (hope not...)
{code:java}
   if err != nil // Path 1
          return err
   else // good response  //Path 3
          process good response
{code}
With your change, since chaincode errors are no longer on *Path 1*, callers will go through *Path 3* which would break their processing (ie, they are now processing response as ""good""). In this case, we should change SDK to move to the first error processing model in addition to documentation. This way clients will still get an error as before but will only have to differentiate the error appropriately.

So I think basically we need to do the following
 * check each of the SDK's to make sure they handle the response correctly
 * add docs and notify users of this change
 * add more SDK tests if needed;;;","02/Feb/18 3:10 AM;nnao;[~muralisr] Thanks. I understood. Firstly, I will try to check SDK-*.;;;","02/Feb/18 10:46 AM;scottz;This deficiency has been around for a long time. Now you are proposing to delay it to give people time ... to do what exactly? We are not delivering correct success/error codes, which is a major issue and I strongly disagree to regate to a later release. It sounds like we understand the complexity now, so I we should get it done in v1.1!;;;","02/Feb/18 11:37 AM;denyeart;[~scottz] I agree.  Discussed with [~muralisr] today and we agree the fix should go in as soon as possible in 1.1.  We need to coordinate the fix with SDKs, and then write up a few sentences for 1.1 release notes to make upgrades aware. [~nnao] is checking with SDKs as next step.;;;","02/Feb/18 6:46 PM;yacovm;Can this fix make v1.0.x clients incompatible with v1.1 peers?;;;","02/Feb/18 9:59 PM;denyeart;[~yacovm] The exact impact is being investigated.  If there is impact release notes will need to explain the corrective action, for example clients may have to move up to a later SDK 1.0.x fix or 1.1. As unappealing as that is, this is considered a defect and there must be a path to fix defects.  Living with defects indefinitely is not an option.;;;","04/Feb/18 1:52 AM;muralisr;[~denyeart] 

_The exact impact is being investigated._ 

The preference is to fix this in 1.1 if the SDKs already do the right thing in handling responses as outlined in my previous comment.  However if [~nnao] investigation finds SDKs are not doing the right thing in 1.0, we'll have re-evaluate. Right ?;;;","04/Feb/18 2:01 AM;denyeart;Right, let's get the exact impact well defined first, then re-evaluate.;;;","06/Feb/18 6:53 AM;nnao;I checked SDK node/java.

The SDK java had checked the response status and it is treated as an error except for the response status 200.
The SDK node has one place that it doesn't check the response status. SDK node is treated as a success even if response status is 500.
I made and send a patch [https://gerrit.hyperledger.org/r/#/c/17553/|https://gerrit.hyperledger.org/r/#/c/17553/.]

In SDK java, Maybe SDK v1.0.x will keep compatibility with v1.1 peers.
In SDK node, There's a possibility that different behave with v1.0.x and v1.1 when received status not 200;;;","08/Feb/18 12:47 PM;muralisr;thanks [~nnao] for the investigation and the patch.

_In SDK node, There's a possibility that different behave with v1.0.x and v1.1 when received status not 200_

[~denyeart], [~scottz] This would break node SDK users on chaincode error paths. Delay in merging means more users would have to change behavior when merged.

On the other hand if the focus has been on smooth upgrade to 1.1, it would make sense to give some notice to users and slate this for the next release. ;;;","10/Feb/18 12:38 AM;scottz;[~muralisr] [~nnao] I realize there are several things being changed, making this a complex issue to discuss, let alone fix. (Thank you Nao for all you are trying to do.) Does it make sense if we split it into these steps? I don't see any reason to intentionally delay for any reasons.
 # Fix the fabric to work correctly, and document (in release notes if necessary, as well as readthedocs) any changes in the API and error codes that are returned by fabric or from chaincodes. ASAP.
 # Fix the SDKs to work correctly, and document any changes in the API and error codes that are returned by fabric or from chaincodes. ASAP.
 # The chaincodes owners can upversion them so they work correctly.;;;","11/Feb/18 5:48 AM;muralisr;[~scottz] My vote would be for moving it to 1.2 giving us a chance to bolster the doc with samples. Plus we will have the chaincode FSM cleanup to go with it so we can test this along with that change.

However if the majority decides this should go in immediately, I'm fine with that.

Created the following doc if we decided to go with the change immediately. This also gives an idea of what the samples could illustrate
{code:java}
Pre 1.1 (or 1.2) code returned a successful ProposalResponse (status 0 or 200) or an error.
In 1.1 (or 1.2), endorser can return
* error with nil ProposalResponse
* error ProposalResponse (status >= 400)
* successful ProposalResponse (status 0 or 200)

Further, an error ProposalResponse could be from the peer or from the chaincode. Currently peer returns ProposalResponse with status >= 500 which allows users to distinguish user chaincode errors by setting status in the 400-499 range.
{code};;;","11/Feb/18 7:47 AM;yacovm;I have no real say in the matter but FWIW - I think Murali is right, and assuming this change breaks backward compatibility with v1.0 we should defer this to v1.2, where we will have many changes that would both require and incentivize users to upgrade their SDKs to the latest version.

I also think it's a bit odd to release v1.1-alpha which is compatible with v1.0 clients, and then release the final v1.1 which is not, and lastly - these errors occur when the user provides the wrong input to the peer, not to the chaincode - therefore is that really that bad that we return the wrong error type? If the application is calling the wrong chaincode name or the wrong channel, it is broken regardless of what the peer would return.;;;","11/Feb/18 8:53 AM;scottz;If I understand correctly... fixing this now would break backwards compatibility with v1.0 - because v1.0 was unfinished; v1.0 never returned ANY error codes in some situations, let alone an error code from the appropriate place (from fabric when it is a peer error, or from the chaincode when it is a chaincode error) or the correct error code (400 vs 404 vs 500). See also FAB-6271. 

I have already stated a preference to see this fixed sooner rather than later. Sure, the error codes are for error paths rather than success path; but one could argue they are more important now for helping people that are setting up their new networks and channels - moreso now than later after things are already running (or after they have abandoned their attempts to use HF).

That said, I understand I am only part of the team to decide if this is required in the v1.1 release. Moreover, considering all the good points that have been made, I would be amenable to deferring until v1.2. Note, if we do not fix all this in v1.1, I think it would be wise to clearly itemize and document the misbehaving usecases somewhere (are the jiras sufficient?), and reduce some headaches for the chaincode writers by mentioning the shortcomings in the release notes with pointers to the explanations.

 

 ;;;","11/Feb/18 9:41 AM;muralisr;[~scottz]

_...v1.0 never returned ANY error codes in some situations..._

Actually, it is returning error with every non-success path and users lost the ""ProposalResponse"" part of the return value. While not ideal obviously, it did separate error from success cleanly. If it was successful, everything was good. If failure, hard to determine what/why. Returning the ProposalResponse  helps in working with the error paths.

 

_I think it would be wise to clearly itemize and document the misbehaving usecases somewhere (are the jiras sufficient?), and reduce some headaches for the chaincode writers by mentioning the shortcomings in the release notes with pointers to the explanations._

Something like the following is all we'd need I think (and if we move to 1.2, hopefully we can illustrate with samples) 
{code:java}
Users who handle errors from chaincode in pre 1.1 (or pre 1.2) need to look for the ""chaincode error"" string in the error returned from the proposal request and parse out the response status and response message from it. With 1.1 (or 1.2), they can get this information directly from ProposalResponse. {code}
 ;;;","13/Feb/18 10:24 PM;Clayton Sims;Ok based on comments looks like here is agreement to move to 1.2.   If I misunderstood, please move it back with a comment. ;;;","13/Feb/18 11:39 PM;muralisr;[~Clayton Sims] +1;;;","14/Feb/18 3:37 AM;denyeart;I've -1ed the associated CRs to prevent merge into 1.1:

[https://gerrit.hyperledger.org/r/#/c/17553/]

[https://gerrit.hyperledger.org/r/#/c/15739/]

[https://gerrit.hyperledger.org/r/#/c/15737/]

 ;;;","14/Feb/18 10:23 AM;scottz;Does this deferral apply to FAB-6271 as well?;;;","15/Feb/18 2:58 AM;denyeart;Yes, I believe FAB-6387 and FAB-6271 should be fixed at the same time, latest thinking is that would be 1.2 timeframe.  I've tagged each as 1.2.;;;","16/Apr/18 10:22 PM;sambhavdutt;[~nnao] Hello, 

Can you tell if this issue is resolved or if there are any blockers for this bug. Should we maintain the 'In Review' status for this one.;;;","16/Apr/18 10:33 PM;muralisr;[~sambhavdutt] not resolved yet. We moved this to 1.2 and there are few CRs listed above ready to be reviewed (the main one is [https://gerrit.hyperledger.org/r/#/c/15737]).;;;","17/Apr/18 2:47 AM;nnao;Hi [~sambhavdutt]

Yes. I am working to fix this JIRA.
I had sent 3 patches at FAB-6387.
(1) https://gerrit.hyperledger.org/r/c/15737/ at fabric
(2) https://gerrit.hyperledger.org/r/c/15739/ at fabric-test 
(3) https://gerrit.hyperledger.org/r/c/17553/ at fabic-sdk-test

To fix this problem, we need to merge (1) patches.
The patches (1) have +2 from Srinivasan. it needs more one +2 from peer maintainers.
(-2 from David, ""Decision to defer until 1.2, I will -2 to prevent merge into 1.1"")
 
However, if the patches(1) are merged, some tests will get an error.
Since some tests expect a wrong response, we have to merge
those test patches(2)(3) as soon as possible after (1) are merged.

So I'd like to discuss patches(2)(3) with fabric-test/fabric-sdk-test maintainers as soon as possible.

Thanks, [~muralisr];;;",,,,
Refactor CreateBlockEvents for loop for readability,FAB-6388,21226,22028,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,denyeart,denyeart,03/Oct/17 1:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Jan/18 1:16 AM,,,,,,,Abandoned,,,fabric-peer,,,,0,,,,,,,"Address the code review comment here:

https://gerrit.hyperledger.org/r/#/c/12115/38/events/producer/eventhelper.go",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi13:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE CI automation permission update,FAB-6389,21227,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,03/Oct/17 1:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Oct/17 4:38 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,update CI automation scripts permission,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyi1b:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK support for Channel Deliver Service,FAB-6390,21229,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,wlahti,wlahti,03/Oct/17 2:14 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Jan/18 4:24 AM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,,,denyeart,Ratnakar,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi1j:",,,,,,,,,,,,,,,,,,,,,,denyeart,Ratnakar,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Dec/17 11:11 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/16155/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ansible playbooks to update software pre-requisties on z,FAB-6392,21231,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,rameshthoomu,rameshthoomu,03/Oct/17 2:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Feb/18 3:01 AM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"Ansible playbooks to update software pre-requisties on z. Right now, we are connecting to z build nodes through ssh to update/install softwares. This process taking time for every operation. Proposing below approach to deploy any software installation through ansible playbooks.

1) Write ansible playbooks

2) Trigger playbooks through from master node to update/install softwares on all nodes",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi1z:",,,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/18 8:43 PM;jtclark;Spoke with [~rameshthoomu]. This JIRA task is no longer required.;;;","27/Feb/18 3:02 AM;jtclark;Updated to DONE per instructions from the #fabric-ci team.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ansible playbooks to update software pre-requisties on Power,FAB-6393,21232,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jtclark,rameshthoomu,rameshthoomu,03/Oct/17 2:49 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Feb/18 3:02 AM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"Ansible playbooks to update software pre-requisties on power nodes. Right now, we are connecting to z build nodes through ssh to update/install softwares. This process taking time for every operation. Proposing below approach to deploy any software installation through ansible playbooks.

1) Write ansible playbooks

2) Trigger playbooks through from master node to update/install softwares on all nodes",,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi27:",,,,,,,,,,,,,,,,,,,,,,jtclark,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 12:30 PM;rameshthoomu;[~jtclark] This work is in-progress.. [~sambhavdutt] and myself working on this.;;;","24/Jan/18 8:29 PM;jtclark;Spoke w/ [~rameshthoomu] about this issue. Power is no longer required. This task is no longer needed. Moving this ticket to Unverified Status.;;;","27/Feb/18 3:02 AM;jtclark;Updated to DONE per the #fabric-ci team.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Run node sdk tests in docker environment,FAB-6394,21233,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rameshthoomu,rameshthoomu,03/Oct/17 2:52 AM,27/Jul/18 3:17 PM,28/Oct/23 3:01 AM,27/Jul/18 3:17 PM,,,,,,,,,,fabric-ci,,,,0,CI_Adhoc_Req,,,,,,"should be able to run node sdk tests in docker environment. This proposal avoids updating node related software applications on CI nodes manually and avoids duplication in baseimage.

Create an execution script, docker-compose file to trigger node sdk tests in docker environment.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzyi2f:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/18 3:17 PM;rameshthoomu;With the pipeline changes, the jenkins scripts are copied in fabric-sdk-node repository. Also, the node installation is now part of the CI script. We no need to install specific software in CI build nodes.

This installs dynamically with nvm;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update loopback-connector-fabric version in fabric-sdk-rest package.json,FAB-6395,21234,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MartinC,rameshthoomu,rameshthoomu,03/Oct/17 3:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Nov/17 6:50 PM,,,,,,,,,,fabric-ci,,,,0,fabric-sdk-rest,,,,,,"Update loopback-connector-fabric version in fabric-sdk-rest package.json
{code:java}
00:04:29.527 npm ERR! argv ""/home/jenkins/.nvm/versions/node/v6.9.5/bin/node"" ""/home/jenkins/.nvm/versions/node/v6.9.5/bin/npm"" ""install"" ""fabric-rest""
00:04:29.527 npm ERR! node v6.9.5
00:04:29.528 npm ERR! npm v3.10.10
00:04:29.528 npm ERR! code ETARGET
00:04:29.531 
00:04:29.535 npm ERR! notarget No compatible version found: loopback-connector-fabric@^1.0.0
00:04:29.536 npm ERR! notarget Valid install targets:
00:04:29.536 npm ERR! notarget 1.0.0-snapshot
00:04:29.537 npm ERR! notarget 
00:04:29.538 npm ERR! notarget This is most likely not a problem with npm itself.
00:04:29.538 npm ERR! notarget In most cases you or one of your dependencies are requesting
00:04:29.539 npm ERR! notarget a package version that doesn't exist.
00:04:29.539 npm ERR! notarget 
00:04:29.539 npm ERR! notarget It was specified as a dependency of 'fabric-rest'
00:04:29.540 npm ERR! notarget 
00:04:29.556 {code}",,MartinC,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi2n:",,,,,,,,,,,,,,,,,,,,,,MartinC,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 5:45 PM;MartinC;[~rameshthoomu], I have updated the package.json dependency for fabric-rest to be:

""loopback-connector-fabric"": ""^1.0.0-snapshot"",

However it looks like the verify build for [https://gerrit.hyperledger.org/r/c/14111/] is still trying to use version 1.0.0 rather than 1.0.0-snapshot.

 

npm ERR! Linux 4.4.0-47-generic

npm ERR! argv ""/home/jenkins/.nvm/versions/node/v6.9.5/bin/node"" ""/home/jenkins/.nvm/versions/node/v6.9.5/bin/npm"" ""install"" ""fabric-rest""

npm ERR! node v6.9.5

npm ERR! npm v3.10.10

npm ERR! code ETARGET

npm ERR! notarget No compatible version found: loopback-connector-fabric@^1.0.0

npm ERR! notarget Valid install targets:

npm ERR! notarget 1.0.0-snapshot

 ;;;","16/Oct/17 8:50 PM;MartinC;[~rameshthoomu] thanks for fixing the verify build.

I can see failures that look like the merge build is also failing because it is cloning the master branch. Do you want a separate work item for that problem?;;;","17/Oct/17 12:47 AM;rameshthoomu;[~MartinC] seems the patch sets which are merged recently are not rebased based on the your fix. Please rebase patch and merge. It should work. Configuration for both verify and merge jobs are same and it works based on the change set.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test repo behave tests for env variables cause subsequent test failures,FAB-6397,21236,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,03/Oct/17 3:18 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 5:44 AM,v1.0.2,,,,,,,,,fabric-quality,,,,0,,,,,,,"Behave Tests such as the following, which set config variables and verify their values by retrieving them from the peer/orderer/kafka nodes, seem to pass but must not clean up properly because all subsequent tests fail. I thnk the failures started happening when I added some more env variables to the testcase (which were already in the .env file but were not being verified). I added them so we could provide better coverage, to confirm we could set env variables that are defined in all of the yaml files (configtx, orderer, core).

For now, I inserted skip statements for these, but anyone can reproduce this problem when removing the skip statements and running `behave -t smoke` or `behave -t daily`

+bootstrap.feature+ : (let's insert this new FAB into this scenario title, which has no FAB yet):
 * Scenario: Setting of environment variables

+orderer.feature+
 * FAB-4808: Orderer_BatchTimeOut is honored, for <type> orderer
 * Actually, this test sets, but does not verify, the new value for batchtimeout. Now I don't remember confirming if this caused subsequent failures, but I skipped it anyways to be safe. That was probably unnecessary, because I just noticed that others in ledger and gossip files set env variables (without checking them) and they work fine.

 ",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi33:",,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instantiating transactions using the typical endorsement flow,FAB-6398,21237,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,kchristidis,kchristidis,03/Oct/17 3:43 AM,23/Jan/20 7:07 AM,28/Oct/23 3:01 AM,23/Jan/20 7:07 AM,v1.0.0,,,,,,,,,fabric-peer,,,,2,stale-item,,,,,,"(This can be thought of as a quasi-alternative to the proposal identified in FAB-6042.)

Similar to how we have the standard Readers/Writers/Admins policies under ""/Channel/Applications/Policies"", we introduce a new policy – let's call it ""Instantiation"". (A sensible default for it would be the majority of channel Admins.)

Instantiating chaincode ""foo"" begins with a proposal and works like the typical endorsement flow; once you have collected enough proposal responses to satisfy the ""Instantiation"" policy, you collect them into a transaction and broadcast this to the network via the ordering service.

This means that at any point in time, chaincode instantiation is defined by a single policy per channel; if participants wish to modify the policy, they just have to modify the value corresponding to ""/Channel/Applications/Policies/Instantiation"".",,binhn,davidkhala,jyellick,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyi3b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,binhn,davidkhala,jyellick,kchristidis,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 3:46 AM;kchristidis;As noted in the description the obvious benefit of this approach is that It follows the standard endorse/order/validate flow. An important downside of it is that instantiation requires admin signatures and having peers sign with the admin certs is bad opsec practice -- doubly so given that endorsements are an automated process. This concern could be alleviated if we were to make it easy to hook ESCC into back office logic (so that the application can decide on whether or not it wants to endorse the incoming proposal), complete with all the baggage that such a change would carry.;;;","03/Oct/17 4:39 AM;binhn;I think we should walk back to the original decision why we need channel admins to instantiate a chaincode [~muralisr] [~elli-androulaki].  Bringing a chaincode into a channel would be the same as materializing any asset on the ledger (following the argument that a chaincode can be a smart contract, and a smart contract is an asset on the ledger). When a chaincode creates an asset, X, we don't require channel admin authority, so my thought would be that, when LSCC instantiates/creates a chaincode, we shouldn't require channel admin authority either, should we? Channel admins are for channel configuration related activities, and creating assets is a business activity, not admin.

So if we agree with my view, then [~kchristidis]' description above is a good compromise to enforce chaincode instantiation process. And it is reasonable to expect that chaincodes on a channel to be governed by the same instantiation policy.;;;","04/Oct/17 12:22 AM;jyellick;Regardless of whether admin or peer signatures are used, without a custom ESCC hook which calls out to some organization specific workflow, (and the as a prerequisite to that, asynchronous transactions), this proposal provides no real security for parties which wish to transact with mutual distrust.

I would further point out that this proposal maintains the conflation between chaincode owner's interests and channel interests.  Consider the relatively simple use case with a channel containing 3 members, OrgA, OrgB, and OrgC.  OrgC is hosting a proprietary chaincode which it wishes to allow OrgA and OrgB to transact with, but not to inspect/execute.  Also assume that OrgA and OrgB wish to restrict which chaincodes are instantiated on the channel.

If the instantiation policy is set to ""Majority"" or ""OrgA and OrgB"", then it is impossible to instantiate OrgC's proprietary chaincode, because only one endorsement can every be gathered.

If the instantiation policy is set to ""Any"" or ""OrgC"", then the chaincode may be instantiated, but OrgA and OrgB lose control over the channel.

If chaincode were actually a resource available to all peers on the channel, then these problems largely go away, but the decision was made to divorce the chaincode itself from the channel and instead only have chaincode metadata on the channel.  Because of this decision, proposals like the above may pass a superficial inspection, but rapidly break down in implementation.  Although we would like to treat chaincode as an asset on the chain, it is not in fact on the chain, and we cannot treat it like it is in all cases.;;;","05/Oct/17 6:01 AM;binhn;As I have written on FAB-6042, chaincode is not the only asset that would benefit from a more sophisticated endorsement model; however, to solve the problem as proposed there is very undesirable because we would not have the ability to extend that for other assets.

This is, as said, a compromise solution (short-term) for the use-case that we know of; that is, 1 org can control the instantiation of chaincodes. I have no doubt that other use-cases exist and valid, but they are far down the road.
{quote}but the decision was made to divorce the chaincode itself from the channel and instead only have chaincode metadata on the channel
{quote}
That is entirely incorrect. Chaincode is always acting in the context of a channel; a chaincode is meaningless outside of the channel. What we have implemented is an optimization to remove the number of times we store the same bucket of bits (chaincode source code) on the ledgers.  We have use cases that require thousands of channels, so we decided to store the evidence (hash) of the chaincode on the ledger instead of the source; similar to many use cases requiring confidentiality to put evidence of documents on chain. This is far away from divorcing the chaincode from the channel.

The beautiful side effect of this implementation is that not all peers have to host the chaincode, but only the endorsers, and the rest of the peers are still able to validate transactions. It also allows network ownership, a critical use case in private blockchain.;;;","23/Jan/20 7:07 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Benign panic in config update computation,FAB-6399,21238,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,wlahti,jyellick,jyellick,03/Oct/17 4:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 8:55 AM,v1.0.0,v1.0.1,v1.0.2,v1.0.3,,,v1.1.0,,,fabric-orderer,,,,0,configuration,,,,,,"As documented here: [https://stackoverflow.com/questions/46073111/hyperledger-fabric-v1-0-configtxlator-add-new-org-error/]

 

When a config update arrives which attempts to modify an element nested beyond an element which does not exist, a panic can occur.  This panic is caught by the orderer and poses no risk of state corruption or being passed to the peer, however, it is still a programming bug which should be isolated and fixed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi3j:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK support for filtered events,FAB-6400,21239,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,03/Oct/17 5:03 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Jan/18 6:39 AM,,,,,,,v1.1.0-alpha,,,fabric-sdk-node,,,,0,Release-planning-1.1,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi3r:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dev,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java SDK support for filtered events,FAB-6401,21240,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,03/Oct/17 5:03 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Jan/18 12:14 PM,,,,,,,v1.1.0,,,fabric-sdk-java,,,,0,Release-planning-1.1,,,,,,https://gerrit.hyperledger.org/r/#/c/14469/,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6029,,,,,,,,FAB-7652,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi3z:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/18 5:12 PM;denyeart;Now using FAB-7652 for this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Go SDK support for filtered events,FAB-6402,21241,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,denyeart,denyeart,03/Oct/17 5:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Mar/18 6:19 AM,,,,,,,,,,fabric-sdk-go,,,,0,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi47:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 8:02 PM;denyeart;Being worked as part of Go SDK support for channel service (FAB-6243);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Honor configurable max batch size for validation readset bulk retrieve,FAB-6404,21243,15293,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,03/Oct/17 6:14 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Dec/17 9:00 PM,,,,,,,,,,,,,,0,,,,,,,"Configurable max batch size was added and is honored for commit phase (couchdb bulk retrieve and bulk update).

The remaining task is to have the validation phase (mvcc check of readset versions) honor it on the couchdb bulk retrieve.",,chris.elder,denyeart,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi4n:",,,,,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,chris.elder,denyeart,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Nov/17 11:26 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/15219/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
clarify that dev mode doesn't work with TLS,FAB-6407,21250,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,03/Oct/17 5:51 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Oct/17 8:42 PM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,It's best to clarify in the docs that chaincode dev mode cannot work with TLS. ,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi5z:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.3 for fabric-ca bugs to be included in 1.0.3 release,FAB-6408,21251,21207,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,03/Oct/17 6:19 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Oct/17 6:19 PM,,,,,,,v1.0.3,,,fabric-release,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=10903,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6372,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi67:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add SDK support for gencrl endpoint,FAB-6409,21252,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,03/Oct/17 8:19 PM,23/Jan/20 7:08 AM,28/Oct/23 3:01 AM,23/Jan/20 7:08 AM,,,,,,,Future,,,fabric-ca,,,,0,sdk,stale-item,,,,,"See the gencrl endpoint in the swagger doc of https://gerrit.hyperledger.org/r/#/c/13583/13/swagger/swagger-fabric-ca.json,unified",,smithbk,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi6f:",,,,,,,,,,,,,,,,,,,,,,smithbk,sykesm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:08 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add go SDK support for gencrl endpoint,FAB-6410,21253,21252,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,03/Oct/17 8:22 PM,23/Jan/20 7:08 AM,28/Oct/23 3:01 AM,23/Jan/20 7:08 AM,,,,,,,Future,,,fabric-sdk-go,,,,0,stale-item,,,,,,See parent task,,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi6n:",,,,,,,,,,,,,,,,,,,,,,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:08 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Java SDK support for gencrl endpoint,FAB-6411,21254,21252,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,smithbk,smithbk,03/Oct/17 8:23 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Oct/17 11:47 PM,,,,,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,,See parent task,,rickr,smithbk,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi6v:",,,,,,,,,,,,,,,,,,,,,,rickr,smithbk,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Oct/17 5:21 AM;rickr;https://gerrit.hyperledger.org/r/#/c/14339/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Node SDK support for gencrl endpoint,FAB-6412,21255,21252,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,zhaochy,smithbk,smithbk,03/Oct/17 8:23 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 10:37 AM,,,,,,,v1.1.0,,,fabric-sdk-node,,,,0,,,,,,,See parent task,,harrisob@us.ibm.com,smithbk,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi73:",,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,smithbk,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 3:22 AM;harrisob@us.ibm.com;[~zhaochy] would you be able to look at this one

Top parent - https://jira.hyperledger.org/browse/FAB-5300

Java implementation [https://gerrit.hyperledger.org/r/#/c/14339/] – I see many proto changes in this CR, do not worry about those, I will put those in;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add python SDK support for gencrl endpoint,FAB-6413,21256,21252,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,smithbk,smithbk,03/Oct/17 8:24 PM,23/Jan/20 7:08 AM,28/Oct/23 3:01 AM,23/Jan/20 7:08 AM,,,,,,,Future,,,fabric-sdk-py,,,,0,fabric-sdk-py,stale-item,,,,,See parent task,,baohua,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi7b:",,,,,,,,,,,,,,,,,,,,,,baohua,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 3:00 PM;baohua;[~keithsmith] could u help elaborate the problem?;;;","23/Jan/20 7:08 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"has to replace the license header in ""sanitycheck.go""",FAB-6414,21257,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,03/Oct/17 8:41 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 2:05 AM,v1.0.3,,,,,,v1.1.0,,,fabric-orderer,,,,0,build-system,,,,,,"has to replace the license header in

common/tools/configtxlator/sanitycheck/sanitycheck.go

 

otherwise, the error below comes out when building the fabric source code:

src/github.com/hyperledger/fabric$ make dist-clean all

....

Checking committed files for SPDX-License-Identifier headers ...
The following files are missing SPDX-License-Identifier headers:
.baseimage-release
common/tools/configtxlator/sanitycheck/sanitycheck.go

Please replace the Apache license header comment text with:
SPDX-License-Identifier: Apache-2.0
Makefile:111: recipe for target 'license' failed",,carlosho17,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi7j:",,,,,,,,,,,,,,,,,,,,,,carlosho17,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 6:03 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/14171/;;;","02/Dec/17 4:18 AM;carlosho17;in ""release"" branch, same happens with 

common/ledger/blkstorage/fsblkstorage/blockfile_mgr.go

After replacing the header line, make license ends correctly

Checking committed files for SPDX-License-Identifier headers ...
All files have SPDX-License-Identifier headers

This is from a build tried today 1st Dec by cloning with  

git clone -b release  https://gerrit.hyperledger.org/r/fabric

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dev Mode - Chaincode start port is not right,FAB-6416,21089,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,nickgaski,Amjadnz,Amjadnz,30/Sep/17 2:09 AM,23/Jan/20 7:07 AM,28/Oct/23 3:01 AM,23/Jan/20 7:07 AM,,,,,,,,,,,,,29/Sep/17 12:00 AM,0,Chaincode,DEV,Mode,stale-item,starting,,"In the current setup guide in DEV MODE at [http://hyperledger-fabric.readthedocs.io/en/latest/peer-chaincode-devmode.html?highlight=dev-mode] the URL to start the Chaincode is provided as ""7051"" in essence as this port is already in use by PEER when starting up - a new port has to be provided.

So 7052 has to be used instead.",,Amjadnz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyhs7:",,,,,,,,,,,,,,,,,,,,,,Amjadnz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Sep/17 3:58 AM;Amjadnz;This issue is not related to BLOCKCHAIN EXPLORER.  This was related to FABRIC. Cannot move it but I did create a new one in fabric.;;;","23/Jan/20 7:07 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support SDK API to dynamically update server configuration,FAB-6418,21261,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,skarim,skarim,skarim,03/Oct/17 11:41 PM,23/Jan/20 7:08 AM,28/Oct/23 3:01 AM,23/Jan/20 7:08 AM,,,,,,,Future,,,fabric-ca,,,,0,sdk,stale-item,,,,,"See swagger doc for the request to the server for dynamically updating server configuration

https://gerrit.hyperledger.org/r/#/c/14963/3/swagger/swagger-fabric-ca.json",,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-478,FAB-6511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi8n:",,,,,,,,,,,,,,,,,,,,,,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:08 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node.js chaincode to test node-chaincode shim APIs,FAB-6419,21262,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,04/Oct/17 12:11 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,12/Oct/17 4:33 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This task addresses the automation of node-chaincode shim interface APIs using behave framework.

As part of this task I will be adding a new chaincode *shimAPIDriver.js* that simulates some of the APIs that are not covered as part of marbles chaincode.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi8v:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"04/Oct/17 3:52 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/14161/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric performance improvements - 1.x,FAB-6421,21265,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,,ChristopherFerris,ChristopherFerris,04/Oct/17 12:27 AM,14/Mar/19 11:33 PM,28/Oct/23 3:01 AM,05/Dec/17 9:01 PM,v1.0.0,,,,,,v1.1.0,v1.3.0,,,,,,1,performance,release-planning-1.1,review-needed,,,,Improve performance and scale.,,ChristopherFerris,daijianw,dinotone,inatatsu,matingwei,qiang0723,qizhang87,spipes,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5258,FAB-5932,FAB-5274,FAB-2725,FAB-5880,FAB-11321,FAB-13089,,,,FAB-6753,,,,,,,,,,,,,,,FAB-6538,FAB-14513,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Fabric performance improvements - 1.x,To Do,,,Unset,,,,"1|hzyi9b:",,,,Unset,Unset,,,,,,,,,,,,,,,,,ChristopherFerris,daijianw,dinotone,inatatsu,matingwei,qiang0723,qizhang87,spipes,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add timestamp and timewindow checks to Channel Service ,FAB-6422,21266,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,04/Oct/17 12:31 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 1:06 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,Add fix for FAB-6075 to the channel service.,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyi9j:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 12:36 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14889/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove 'required' field from Capability message,FAB-6426,21274,19633,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,04/Oct/17 4:39 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Oct/17 11:37 PM,,,,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,,,,,,,"The Capability message currently has a single field: ""required"".  This field is rather redundant, because if it is not required, why is it in the map? Since we should not encode redundant information, and the ability to set this to false is likely to only cause confusion, it should be removed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiaf:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clojure SDK,FAB-6427,21275,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ozjc,ozjc,04/Oct/17 5:10 AM,23/Jan/20 7:08 AM,28/Oct/23 3:01 AM,23/Jan/20 7:08 AM,,,,,,,,,,,,,,0,stale-item,,,,,,"About a week ago, I started a Clojure SDK as my pet project - git@github.com:ozjongwon/clojure-fabric.git

 

I got a suggestion from Gary Singh to gauge interest from the community.

Please feel free to add your thoughts.

 

 

*For more details about Clojure SDK, please keep reading.*

 

Currently almost all Clojure files (which are wrapper of Java files) were generated from Java SDK, and only 'core.clj' is my main focus at the moment. I am going to add some high level abstraction and hopefully the SDK grows as I learn more.

 

An example client code is like:

 
{code:java}
;; Make a client
(defonce cli (get-or-make-client ""Org1MSP""
                                 ""PeerAdmin"" 
                                 (-> (slurp <private-key-file>)
                                     (keys/str->private-key))
                                 certificate-str
                                 {}))
;; Add an orderer
(add-channel-end cli ""mychannel"" (map->OrdererOpts {:name ""orderer0"" :grpc-url ""grpc://localhost:7050""}))
 
;; Add a peer
(add-channel-end cli ""mychannel"" (map->PeerOpts {:name ""peer0"" :grpc-url ""grpc://localhost:7051""}))
 
;; Proposal & order transaction
(->> (map->TransactionOpts {:fcn ""createCar""
                            :args (java.util.ArrayList. [""CAR10"" ""Chevy"" ""Volt"" ""Red"" ""Nick""])
                            :proposal-wait-time 10000})
     ;; Proposal Tx
     (propose-transaction cli
                          ""mychannel""
                          (make-ChaincodeOpts {:name ""fabcar"" :version ""1.0"" :path ""resources/""}))
      ;; Order Tx
      (order-transaction cli ""mychannel""))
{code}
 

 ",,blw,ozjc,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyian:",,,,Unset,,,,,,,Unset,,,,,,,,,,,blw,ozjc,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:08 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can't pass make behave test on current master,FAB-6430,21279,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,luomin,luomin,04/Oct/17 12:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 1:44 PM,,,,,,,v1.0.2,,,fabric-build,,,,0,build-system,,,,,,"luomin@luomin-fabric:/mnt/src/github.com/hyperledger/fabric$ make behave
mkdir -p build/image/peer/payload
cp build/docker/bin/peer build/sampleconfig.tar.bz2 build/image/peer/payload
mkdir -p build/image/ccenv/payload
cp build/docker/gotools/bin/protoc-gen-go build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
mkdir -p build/image/javaenv/payload
cp build/javashim.tar.bz2 build/protos.tar.bz2 settings.gradle build/image/javaenv/payload
mkdir -p build/image/orderer/payload
cp build/docker/bin/orderer build/sampleconfig.tar.bz2 build/image/orderer/payload
mkdir -p build/image/testenv/payload
cp build/docker/bin/orderer build/docker/bin/peer build/sampleconfig.tar.bz2 images/testenv/install-softhsm2.sh build/image/testenv/payload
mkdir -p build/image/couchdb/payload
cp images/couchdb/docker-entrypoint.sh images/couchdb/local.ini images/couchdb/vm.args build/image/couchdb/payload
mkdir -p build/image/tools/payload
cp build/docker/bin/cryptogen build/docker/bin/configtxgen build/docker/bin/configtxlator build/docker/bin/peer build/sampleconfig.tar.bz2 build/image/tools/payload
Running behave tests
Exception ImportError: No module named 'StringIO'
Traceback (most recent call last):
 File ""/usr/local/bin/behave"", line 11, in <module>
 sys.exit(main())
 File ""/usr/local/lib/python3.5/dist-packages/behave/__main__.py"", line 109, in main
 failed = runner.run()
 File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 672, in run
 return self.run_with_paths()
 File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 677, in run_with_paths
 self.load_hooks()
 File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 631, in load_hooks
 exec_file(hooks_path, self.hooks)
 File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 304, in exec_file
 exec(code, globals, locals)
 File ""environment.py"", line 8, in <module>
 from steps.docgen import DocumentGenerator
 File ""/mnt/src/github.com/hyperledger/fabric/bddtests/steps/docgen.py"", line 16, in <module>
 from StringIO import StringIO
ImportError: No module named 'StringIO'
Makefile:183: recipe for target 'behave' failed
make: *** [behave] Error 1",,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyibb:",,,,,,,,,,,,,,,,,,,,,,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 1:44 PM;denyeart;I believe this has been fixed.  Please re-open if not.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transient store - Change endorsement block height to received at block height,FAB-6431,21280,18799,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,04/Oct/17 7:28 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 6:02 PM,,,,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,,"Transient store persists private data on authorized

peers while transactions with private data are in-flight.

One of the keys for transient store records was

endorsementBlkHt, this work item will change it to

blockHeight, as it will be better to store transient data

based on 'received at' height rather than endorsement

height, when a peer receives private data via gossip.

The height will be the basis for block-to-live purging

in subsequent changesets.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyibj:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add get chaincode endorsement policy function,FAB-6432,21246,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,kungyc,kungyc,kungyc,03/Oct/17 1:45 PM,23/Jan/20 7:08 AM,28/Oct/23 3:01 AM,23/Jan/20 7:08 AM,,,,,,,,,,,,,,0,node-SDK,stale-item,,,,,Add function queryChaincodeData from peer then we can get endorsement policy from it for later use such send tx to corresponding endorsing peer with it.,,harrisob@us.ibm.com,Jdipiazz,kungyc,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyi5b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,harrisob@us.ibm.com,Jdipiazz,kungyc,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 11:01 PM;Jdipiazz;This should be part of the NODE SDK project not the Blockchain Explorer project?;;;","03/Oct/17 11:30 PM;harrisob@us.ibm.com;The Channel queryByChaincode() method is really just a convenience method that wraps the sendTransactionProposal(). So if the full response object is required and the proposal object then just use the sendTransactionProposal() method.;;;","04/Oct/17 7:59 PM;kungyc;sorry I open the issue in the wrong project

 

I will transform it into FEB node sdk;;;","23/Jan/20 7:08 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
pass committer height when persisting in the transient store,FAB-6433,21282,18799,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,04/Oct/17 10:05 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Oct/17 6:29 AM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"When persisting private data, we need to pass the committer height so that the transient store would be able to purge orphaned RWSets by block to live policy.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyibr:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
v1.1 features - System testing Epic,FAB-6434,21284,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,04/Oct/17 11:13 PM,26/Feb/20 10:49 PM,28/Oct/23 3:01 AM,01/Aug/19 11:20 AM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,,,,AdnanChoudhury,ChristopherFerris,holocron,nagap,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-3,,Test - Complete v1.1 systest automation,Done,,,Unset,,,,"1|hzx30j:",,,,Unset,Unset,,,,,,,,,,,,,,,,,AdnanChoudhury,ChristopherFerris,holocron,nagap,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 10:03 PM;ChristopherFerris;[~scottz] can we please clean this up and close the epic and all subordinate tasks? Thanks;;;","07/Jul/18 3:53 AM;scottz;Yes; there are quite a few that should be cleaned up. We'll spend some time doing that this week and next.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-2331 nodeJS chaincode API,FAB-6437,21287,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,dongming,scottz,scottz,04/Oct/17 11:22 PM,01/Aug/19 11:11 AM,28/Oct/23 3:01 AM,01/Aug/19 11:11 AM,v1.1.0,,,,,,,,,fabric-quality,,,18/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA mentioned in the summary.

FAB-2331 Node JS chaincode feature: provides additional implementation of chaincode that mirrors the current Golang version in functionality. The benefit is that when using the node SDK(although you can still use any SDK of your choosing) you are provided a full stack development model. This also helps the large Javascript developer community base with a familiar coding language.

We should test all APIs functionally, in nodeJS (in addition to GO language).",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,FABCN-8,FAB-6419,FAB-5791,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy90n:",,,,Unset,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/17 4:45 AM;scottz;Remaining TO DO (after FAB-5791 is completed):

1. rename NODE marbles to marbles02
2. move NODE marbles02 to fabric/examples/chaincode/node/ (optional)
3. write example05 in NODE, and place it in same location as marbles02
4. update test FAB-5791 in chaincodes.feature file to add the two rows to test with NODE marbles02
5. enhance test FAB-4717 in chaincodes.feature file to also use NODE versions of ex02 and ex05;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5363 nodeJS connection profile,FAB-6438,21288,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,scottz,scottz,04/Oct/17 11:25 PM,01/Aug/19 11:12 AM,28/Oct/23 3:01 AM,01/Aug/19 11:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,26/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA mentioned in the summary.

Previously, all applications needed to capture information of the target fabric environment. The FAB-5363 enhancement generates a common exchange doc, with backend topology information. With this doc the application will no longer need to construct the channel, add peers, orderers and get the org admin, simplifying your application development.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-808,FABN-65,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy90v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 12:55 AM;dongming;# update PTE to work with connection profile (1 week)
 # test with 2-3 test cases (1 week);;;","12/Oct/17 7:24 AM;scottz;Revised plan:
 # add the existing sdk-node TC in CI , but do it while generating artifacts
 # add a 2nd version of the test, with many different config values
 # later in v1.1 we will integrate changes into PTE tool (this will take more than 2 weeks), to use this connection profile for numerous tests;;;","14/Oct/17 12:35 AM;scottz;Revised Plan:

This ""feature"" is really just a tool, consisting of scripts, and a simple test that uses them. The fabric-sdk-node repo contains the developer's test and baked materials to run it as part of the UT. Too many steps are hidden.

The goal of our ""testing"" this feature should be to ensure its usability. We should review docs, and readme in code source directory. We must ensure directions are clear, step-by-step actions to
 * prepare artifiacts to bring up network (create a new fixtures directory, edit configtx.yaml in their directory, run cryptogen and configtxgen...to create the output flies with file names as currently used by their existing test, move the mychannel.tx, orgs.genesis.block files to the fabric-sdk-node/test/fixtures/ directories)
 * when actual commands are not available because of manual reading and editing, explain what corresponding changes must be done - e.g. editing network.yaml and docker-compose.yaml and other connection-profile yaml files, to use the output files generated in prior steps
 * also explain how to start the new network and run simple test using their test framework; how to run the existing test can be used as a model

Do we want to modify the BYFN instructions to use this???

We can follow those steps ourselves, manually, to test it now, and provide further feedback on the documentation.

Longterm, we could modify test tools to use these templates automatically, in order to run many tests in the CI; but to do that, we need to see how a user would do it each step of the way. But this is not part of the required testing for this feature.;;;","28/Nov/17 12:45 AM;scottz;The Composer team is using this heavily and covering the testing required.;;;","01/Aug/19 11:12 AM;scottz;connection profile is not being used in yaml and json forms.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-830 encryption library,FAB-6439,21290,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,Nishi,scottz,scottz,04/Oct/17 11:27 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,14/Nov/17 12:15 AM,v1.1.0,,,,,,,,,fabric-quality,,,26/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA mentioned in the summary.

FAB-830 provides an encryption library that allows customers to encrypt sensitive data that a chaincode processes and updates. This provides another level of security for highly sensitive data. To test, the chaincode simply must be able to encrypt and decrypt data, using library, per the sample provided by design team.",,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-830,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6636,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy913:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,mergify/bp/release-2.4/pr-3646,,,true,"14/Oct/17 12:53 AM;Nishi;1. Tested encrypted chaincode example from --FAB-830-- on ""github.com/fabric/examples/chaincode/go/enccc_example/enccc_example.go"" using cli commands successfully.

2. Automated testing of ""github.com/fabric/examples/chaincode/go/enccc_example/enccc_example.go"" in behave framework for solo and kafka networks. Ran behave test successfully.

3. Submitted patchset [https://gerrit.hyperledger.org/r/c/14501/] for behave test under hyperledger/fabric-test/feature/chaincodes.feature for happy path

 

TBD:

Negative Testing.;;;","18/Oct/17 1:59 AM;scottz;This update is a partial. It contains the happy path test scenario (and more) 

[https://gerrit.hyperledger.org/r/#/c/14501/] - but we need to followup yet to fix this to do a better job verifying the results from the range queries after decrypting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5346 enhanced ACL for chaincode using fabric CA ,FAB-6440,21291,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rennman,scottz,scottz,04/Oct/17 11:34 PM,01/Aug/19 11:13 AM,28/Oct/23 3:01 AM,01/Aug/19 11:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,31/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the new feature JIRA mentioned in the summary

FAB-5346 provides controls to manage each member's access to chaincode information.

Notes from chat channel:

We should read the attributes out of the ___ and use for member roles actions. We've mentioned previously that they are focused on ACL evaluation, and therefore even if there are changes to resource/policy configuration the ACL evaluation would still be relevant. I believe the ACL checks would be enabled regardless; what could be disabled/enabled would be rscc based resource/policy config - and if disabled then fall back to 1.0 permissions. The ACL calls will default to 1.0 behavior if RSCC is disabled OR if RSCC enabled and resources are not configured channel confi which is true (per Murali testing).",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,720000,720000,,0%,720000,720000,,,FABC-539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy91b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 12:13 AM;latitiah;In the system behave framework, this will be tested by adding fabric-ca, the ability to add roles and policy to the behave framework and have each role act according to the policy set.

When using fabric-ca (instead of cryptogen) the following verbiage is needed. (Note that users will need to be defined when using fabric-ca and fabric-ca-peer images) The roles can also be defined by using the following verbiage:
{code}
Given I enroll the following users using fabric-ca with certificate located at <path>
         | username  | organization | password |  role  |
         |   adnan   |  theWorld    |  wh@tsup | member |
         |   scott   |  hisWorld    |  th3r3   | member |
         |  latitia  |  myWorld     |  h3ll0   | admin  |
{code}

When setting the roles, the configtx.yaml file will need to be updated. This means using a template and feeding this data for use in each test run.

;;;","12/Oct/17 11:53 PM;latitiah;Per [~denyeart]: The scope for the alpha test cases is limited to only attribute-based ACL using Fabric-CA. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6089 chaincode API to retrieve submitter info,FAB-6441,21292,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,Nishi,scottz,scottz,04/Oct/17 11:37 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,27/Oct/17 5:49 AM,v1.1.0,,,,,,,,,fabric-quality,,,19/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA mentioned in the summary,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6089,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy91j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Oct/17 6:07 AM;Nishi;Tested followin API available from CID package:
{code:java}
GetID
GetMSPID
GetAttributeValue
AssertAttributeValue
GetX509Certificate

both as an admin user + regular user{code}
 

Tools and Languages used:
{code:java}
Node: Modified existing balance transfer app in Node to be able to create attributes during client registration.
Go: Verified API by calling them in a go chaincode during init (admin) and query (regular user).
{code}
 
 Test was implemented as an end to end test.
{code:java}
Launch Network.
Send requests using Rest API written in Node.
Actual verification was done manually by logging into chaincode i container.
 
 {code}
TBD:
{code:java}
1. To be able to define attrubutes during registration and assigning them in request during enroll time.
Done.
2. reenroll a user and verify that GetID returns same identity for client before and after enroll.
Done
3. Sanity check content in CID documentation (waiting Keith to send me doc)
Done  {code}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-2725 performance of couchdb,FAB-6442,21293,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,AdnanChoudhury,scottz,scottz,04/Oct/17 11:39 PM,23/Jan/20 7:09 AM,28/Oct/23 3:01 AM,23/Jan/20 7:09 AM,v1.1.0,,,,,,,,,fabric-quality,,,17/Oct/17 12:00 AM,0,Release-planning-1.1,stale-item,,,,,Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA mentioned in the summary,,AdnanChoudhury,denyeart,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2725,FAB-9972,,,,,,,,,,,,,FAB-6330,,,,,,,,FAB-6804,FAB-3427,,,,,,,"31/Oct/17 3:59 AM;AdnanChoudhury;Couch_perf_1.0_vs_1.1.xlsx;https://jira.hyperledger.org/secure/attachment/12831/Couch_perf_1.0_vs_1.1.xlsx",,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy91r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,denyeart,scottz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 7:04 AM;AdnanChoudhury;1. Plan is to use LTE to get the TPS (transaction per second) numbers for various scenarios for the 1.1 and for the 1.0 and compare them against each other.
2. To automate, very minimal change is needed, if any.
3. Should take 1 week to complete the test run and create reports with comparison.;;;","31/Oct/17 12:40 AM;AdnanChoudhury;Attaching the LTE couchDB performance results in the sheet.;;;","31/Oct/17 12:45 AM;AdnanChoudhury;[~denyeart];;;","08/Nov/17 1:26 AM;denyeart;[~AdnanChoudhury] A few observations...

The primary CouchDB performance benefit in 1.1 is the ability to bulk update in CouchDB.  In your tests you have standardized on block BatchSize of 50.  This will limit the ability to do large batches against CouchDB. Let's say a specific test is going at 1000 tps.  With a BatchSize of 50 you are cutting 20 blocks per second, and consequently doing 20 bulk updates into CouchDB per second.  It will be much more efficient if you have a BatchSize of 1000, cut 1 block per second, and do one large bulk update into CouchDB.  1 block per second will be a pretty typical production configuration.  Therefore I'd suggest switch your standard BatchSize to 1000.  This will provide much higher performance numbers that are more aligned with production configurations. 

Also, you have standardized on NumKeysInEachTx of 4.  You will get almost 4x performance improvement if you standardize on NumKeysInEachTx of 1.  The primary bottleneck in 1.1 with CouchDB will be the Gets in simulation, since these cannot be executed in bulk. Going from 4 Gets per simulation to 1 Get per simulation will have a huge impact on the performance tests.

I agree we want a spectrum of conditions in the performance tests, I'd just encourage you to test more of the permutations that we expect to perform better (and which are in fact typical in production scenarios).

Finally, in the LTE tests the peer is simulating every single transaction.  In reality each peer will simulate a subset of transactions.  Given that simulation is the bottleneck, especially on CouchDB, a peer that is able to achieve ~500tps in your tests may actually yield a network that is able to achieve ~2500tps.  I've encouraged Scott and and Tong Li to execute more performance tests where peers simulate a subset of transactions (beyond the scope of LTE I understand).;;;","23/Jan/20 7:09 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5274 performance of orderer,FAB-6443,21294,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,scottz,scottz,04/Oct/17 11:45 PM,21/Jul/18 3:47 AM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,26/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,"Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA mentioned in the summary.

In initial stage, verify system performance, to ensure no degradation of overall network throughput. Next stage should focus on measuring component perfomance improvements (in this case, the orderer).",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy91z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5258 performance - scalability of ordering service,FAB-6444,21295,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,scottz,scottz,04/Oct/17 11:50 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,07/Dec/17 3:14 AM,v1.1.0,,,,,,,,,fabric-quality,,,26/Oct/17 12:00 AM,0,Release-planning-1.1,,,,,,Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA mentioned in the summary.,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5258,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy927:",,,,Unset,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade v1.0 to v1.1,FAB-6446,21297,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,suryalnvs,scottz,scottz,05/Oct/17 12:15 AM,27/Jul/19 9:26 PM,28/Oct/23 3:01 AM,27/Jul/19 9:26 PM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,quality,,,,,,"systest FAB-6122 v1.1 upgrades subtasks 6123 fabric, 5676 shim, 5556 capability enabling


{color:#000000}References:{color}
 # [https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?ts=5a285ab9#heading=h.gfha2pfdu0uz]
 # [https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature]
 # [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this. This is a big effort. Ensure network is stable, secure, and able to correctly handle transactions while:

 * upgrading all fabric network components (peers, orderers, kafkas, etc, and maybe CA servers and SDKs (see FAB-7116))
 * all at same time OR only some at a time
 * enabling new features with run-time flags when all (or when only some) components are upgraded",,nagap,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,FAB-6123,FAB-5676,FAB-5556,FAB-8337,,,,,,,,,,,,,,,,,,FAB-7175,FAB-7116,,FAB-534,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy92f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,nagap,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5300 getting a CRL from fabric-ca,FAB-6447,21298,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rennman,scottz,scottz,05/Oct/17 12:21 AM,23/Jan/20 7:09 AM,28/Oct/23 3:01 AM,23/Jan/20 7:09 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,stale-item,,,,,Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA blocking this.,,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy93b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/17 8:58 AM;rennman;A few tests involving generating a CRL with variations of begin and end times.
 This should not be too involved. A day at best.;;;","07/Dec/17 3:41 AM;rennman;[CRL generation expire/revoke parms|https://gerrit.hyperledger.org/r/#/c/15915/]
[Test CRL as part of revoke|https://gerrit.hyperledger.org/r/#/c/15917/]
;;;","13/Dec/17 7:55 AM;rennman;Blocked by https://gerrit.hyperledger.org/r/#/c/15999/;;;","09/Feb/18 5:18 AM;rennman;Fix is merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5250 version command for fabric-ca-server and fabric-ca-client,FAB-6448,21299,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rennman,scottz,scottz,05/Oct/17 12:22 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,20/Jan/18 7:14 PM,v1.1.0,,,,,,v1.1.0,v1.1.0-alpha,,fabric-quality,,,,0,Release-planning-1.1,,,,,,Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA blocking this.,,mastersingh24,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-475,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy93j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 8:39 AM;rennman;Understandably, this cannot be reliably UT'ed given that version information is only set generated for a make build. It makes sense to merely add a checkVersion() function to the CI. Since the CI for fabric-ca is already performing a 'make' for all of the executables, it's trivial to add a check:
{code:java}
function checkVersion() {
   awk -v ver=$1 \
       -v rc=1 \
         '$1==""Version:"" && $NF==ver {rc=0}
          END {exit rc}'
}

base_version=$(awk '/^[:blank:]*BASE_VERSION/ {print $NF}' Makefile)
extra_version=""snapshot-$(git rev-parse --short HEAD)""
project_version=${base_version}-${extra_version}

$FABRIC_CA/bin/fabric-ca-server version | checkVersion ""$project_version"" || <FAIL>
$FABRIC_CA/bin/fabric-ca-client version | checkVersion ""$project_version"" || <FAIL>{code}
whatever <FAIL> entails;;;","07/Dec/17 4:52 AM;rennman;[Version command test|https://gerrit.hyperledger.org/r/#/c/16001/];;;","13/Dec/17 7:56 AM;rennman;Blocked by https://gerrit.hyperledger.org/r/#/c/15999/;;;","20/Jan/18 7:13 PM;mastersingh24;This seems like overkill as we can simply do this in unit tests but no harm done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some v1.0 channels are incapable of being upgraded,FAB-6449,21300,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,05/Oct/17 12:24 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Oct/17 8:33 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"Because of FAB-5309 and FAB-6080, channels which were created under the v1.0 channel framework had their config incorrectly initialized without the {{mod_policy}} on some elements being set.

The orderer has since been enhanced to enforce that the {{mod_policy}} is non-empty, but the existing channel configs are stuck in a state where they cannot be 'upgraded', because the {{mod_policy}} cannot be satisfied.

Although it is definitely a hack, we should modify these empty {{mod_policy}} fields to be defined to ""Admins"".  This implies custom upgrade processing of config, and violates the spirit of config updates with some 'magic', but this should be a one time hack to bring configuration into line so that we do not need to maintain some other 'magic' for coping with unset {{mod_policy}} which is otherwise disallowed.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyicv:",,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Oct/17 12:51 AM;kchristidis;https://gerrit.hyperledger.org/r/c/14205/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5481 filtered block events,FAB-6450,21301,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,Ratnakar,scottz,scottz,05/Oct/17 12:24 AM,30/Jul/19 11:41 AM,28/Oct/23 3:01 AM,30/Jul/19 11:41 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this.

txid , event name , tx validation indicator
 And we could use that info for subsequent queries or verification.

 
----
Interface tests utilize the sample deliver client to connect to a Peer Deliver API and receive filtered block events on a channel level.

Peers are referred to by PO<org#><peer#>. eg. PO11

Network Topology:
 * e2e_cli example with TLS disabled: 2 org, 2 peers per org joined to channel1
 * modification: additional channel2 with PO11 joined, cc installed and instantiated

Execution:
 # Deploy e2e_cli network, execute cli script and pause prior to invoking.
 # Using sample deliver client [https://github.com/hyperledger/fabric/blob/master/orderer/sample_clients/deliver_stdout/client.go] 
 connect multiple sample deliver clients *with block filtered enabled* and retrieve all blocks and listen forever. Note that each of these clients should receive the genesis block for the channels they are connected to:
 ## PO11 on channel1 (DC1-1-1)
 ## PO11 on channel2 (DC1-1-2)
 ## PO21 on channel1 (DC2-1-1)
 # Execute normal cli scripts with modifications for *channel2*.
 # Connect new deliver client to PO11 channel1 and retrieve all blocks for channel1 and listen forever.
 ## compare results with DC1-1-1 in step 2
 # Invoke a new transaction on channel1.
 # After a few minutes, connect new deliver client to PO12 channel1 and retrieve latest block for channel1 and listen forever.
 ## compare results with DC1-1-1 in step 2
 # connect new deliver client to PO21 channel1 and retrieve block 2 and disconnect.
 ## compare results with DC1-1-1 in step 2
 # Invoke new transaction on channel2.
 ## check output of DC1-1-2 and confirm that new block is received.
 # connect sample deliver client to PO12 *channel2* and confirm that *no blocks can be retrieved*.
 # Join PO12 to *channel2*, rerun step 9 and confirm that all historic blocks are retrieved.

 Test passes if:
 * All block events received by the deliver clients are *filtered*.
 * All block events on channel1 are printed by DC1-1-1 DC2-1-1.
 * All block events on channel2 are printed by DC1-1-2.
 * All block events on channel1 are retrievable by all peers.
 * All block events on channel2 are retrievable only by PO11 and PO12 (after PO12 has joined channel2).",,holocron,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5481,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy93r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,holocron,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 7:56 AM;holocron;[~scottz]
scottz 2:09 PM
{quote}Oh, one thing we didn't discuss: for transaction marked INVALID (such as when using example02 with two transactions sent together so they are delivered within the same block) we should also get events for those too, and make sure they are delivered too.{quote}
I'm not sure how this would be executed, so I'm leaving it here as a comment and possible TODO;;;","30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6911 channel service for events,FAB-6451,21302,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,Ratnakar,scottz,scottz,05/Oct/17 12:26 AM,30/Jul/19 11:42 AM,28/Oct/23 3:01 AM,30/Jul/19 11:42 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this.

Ability to trigger events on a per channel basis rather than global peer basis. The (current) eventhub was designed to be an integration point for outside systems to receive data from a fabric peer, regardless of channel. The intent of the (new) channel service is to address this usage while also providing the ability to set access control. The eventhub refactor would be for the future (to combine the services to use single improved infrastructure).

 
----
Interface tests utilize the sample deliver client to connect to a Peer Deliver API and receive block events on a channel level.

Peers are referred to by PO<org#><peer#>. eg. PO11

Network Topology:
 * e2e_cli example with TLS disabled: 2 org, 2 peers per org joined to channel1
 * modification: additional channel2 with PO11 joined, cc installed and instantiated

Execution:
 # Deploy e2e_cli network, execute cli script and pause prior to invoking.
 # Using sample deliver client [https://github.com/hyperledger/fabric/blob/master/orderer/sample_clients/deliver_stdout/client.go] 
connect multiple sample deliver clients and retrieve all blocks and listen forever. Note that each of these clients should receive the genesis block for the channels they are connected to:
 ## PO11 on channel1 (DC1-1-1)
 ## PO11 on channel2 (DC1-1-2)
 ## PO21 on channel1 (DC2-1-1)
 # Execute normal cli scripts with modifications for *channel2*.
 # Connect new deliver client to PO11 channel1 and retrieve all blocks for channel1 and listen forever.
 ## compare results with DC1-1-1 in step 2
 # Invoke a new transaction on channel1.
 # After a few minutes, connect new deliver client to PO12 channel1 and retrieve latest block for channel1 and listen forever.
 ## compare results with DC1-1-1 in step 2
 # connect new deliver client to PO21 channel1 and retrieve block 2 and disconnect.
 ## compare results with DC1-1-1 in step 2
 # Invoke new transaction on channel2.
 ## check output of DC1-1-2 and confirm that new block is received.
 # connect sample deliver client to PO12 *channel2* and confirm that *no blocks can be retrieved*.
 # Join PO12 to *channel2*, rerun step 9 and confirm that all historic blocks are retrieved.

 Test passes if:
 * All block events received by the deliver clients are as anticipated.
 * All block events on channel1 are printed by DC1-1-1 DC2-1-1.
 * All block events on channel2 are printed by DC1-1-2.
 * All block events on channel1 are retrievable by all peers.
 * All block events on channel2 are retrievable only by PO11 and PO12 (after PO12 has joined channel2).",,C0rWin,mastersingh24,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6911,,,,,,,,,,,,,,,,,,,,,,FAB-5695,,,FAB-7308,,,,,"13/Dec/17 4:24 AM;Ratnakar;channel1.sh;https://jira.hyperledger.org/secure/attachment/13700/channel1.sh","13/Dec/17 4:24 AM;Ratnakar;channel2.sh;https://jira.hyperledger.org/secure/attachment/13701/channel2.sh",,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy93z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,mastersingh24,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 7:19 AM;scottz;Let's check what is covered by UT, and get these answers from the API and doc from the dev feature and the SDK dev feature, before writing feature tests and system tests. Some ideas:
 * Client registers for a Transaction event or Block event on a channel, and verify it is received by that client.
 * Or register for all TX or Block events on a channel, and confirm that ALL historical events and subsequent events on that channel are delivered.
 * Register one client to receive events on multiple channels.
 * Verify that no events are received for transactions and blocks sent on other channels.
 * Restart a peer while running traffic on a channel of which that peer is one of several that joined. Will events be missed by client? Will events be delivered by that peer after it recovers? Or will SDK connect to a different peer on that channel?;;;","13/Dec/17 4:21 AM;Ratnakar;*Pre-req*: TLS Disabled in the environment & deliver client

*Step 1 : Generate the deliver client*
{code}
cd fabric/orderer/sample_clients/deliver_stdout
go build
{code}

*Step 2 : Make sure to update the orderer.yaml file* (Deliver client loads the msp and mspID from there)

File: _fabric/sampleconfig/orderer.yaml_
{code}
    LocalMSPDir: ../examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp
    LocalMSPID: Org1MSP
{code}

*Step 3 : Run e2e_cli sample*
{code}
./network_setup.sh restart mychannel
{code}

*Step 4 : Connect Deliver client to the peer to obtain the blocks*
{code}
./deliver_stdout -channelID mychannel -quiet
{code}

Various other options

./deliver_stdout -channelID mychannel -quiet -server 127.0.0.1:7051
./deliver_stdout -channelID mychannel -quiet -server -seek <-2|-1|0|(1..N)>
./deliver_stdout -channelID mychannel -seek 2 >& block.json


*Note*:
1. Can run different tests by changing the e2e_cli sample 
--> Create multiple channels 
--> Donot join all the peers in the script and join at later point 
--> Send Invokes concurrently etc.,
2. Generate multiple client to listen on multiple channels;;;","13/Dec/17 4:25 AM;Ratnakar;attached the required scripts  [^channel1.sh]  &  [^channel2.sh]  for the InterfaceTests 15 & 16

;;;","23/Jan/18 4:35 AM;Ratnakar;Interfaces has been changed as per the new design , the two new APIs are:

Refer them here [https://github.com/hyperledger/fabric/blob/master/protos/peer/events.proto#L161-L170]
{code:java}
service Deliver {
    // deliver first requires an Envelope of type ab.DELIVER_SEEK_INFO with Payload data as a marshaled orderer.SeekInfo message,
    // then a stream of block replies is received.
    rpc Deliver (stream common.Envelope) returns (stream DeliverResponse) {
    }
    // deliver first requires an Envelope of type ab.DELIVER_SEEK_INFO with Payload data as a marshaled orderer.SeekInfo message,
    // then a stream of **filtered** block replies is received.
    rpc DeliverFiltered (stream common.Envelope) returns (stream DeliverResponse) {
    }
}
{code}
[~C0rWin] helped to make some changes to the deliver client and PR is [https://gerrit.hyperledger.org/r/#/c/16919/]

 
 As per the new sample changed the instructions as below
  

*Pre-req*: TLS Disabled in the environment

*Step 1 : Generate the eventsclient*
{code:java}
cd fabric/examples/events/eventsclient
go build
{code}
You will see the executable *eventsclient* if there are no compilations errors

***Step 2 : Run e2e_cli sample with TLS disabled* (make sure disable TLS flag from docker-compose)
{code:java}
./network_setup.sh restart mychannel 100000
{code}
*Step 3 : Connect the client to the peer to obtain the blocks*
{code:java}
CORE_PEER_LOCALMSPID=Org1MSP CORE_PEER_MSPCONFIGPATH=../examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp ./eventsclient -channelID mychannel
{code}
Various other options (Make sure to pass *CORE_PEER_LOCALMSPID* & *CORE_PEER_MSPCONFIGPATH* )

./eventsclient -channelID mychannel -quiet -server 127.0.0.1:7051
 ./eventsclient -channelID mychannel -quiet -server -seek <-2|-1|0|(1..N)>
 ./eventsclient -channelID mychannel -seek 2 >& block.json

*Note*:
 1. Can run different tests by changing the e2e_cli sample 
 --> Create multiple channels 
 --> Donot join all the peers in the script and join at later point 
 --> Send Invokes concurrently (for invalid transactions) etc.,
 2. Generate multiple client to listen on multiple channels (Refer the scripts channel1 and channel2)

3. All these tests can re-run by adding an extra flag *-filtered* to test the filtered events
 ex:
{code:java}
./eventsclient -channelID mychannel -filtered
{code}
 
{panel}
TLS support is not yet available for the sample client. once it is available we must re-run all the tests.
{panel};;;","23/Jan/18 7:06 AM;C0rWin;[~Ratnakar], thanks, once will finalize TLS support will update here.;;;","25/Jan/18 4:29 AM;Ratnakar;*Pre-req*: Need the docker-images to run e2e_cli sample with or w/o TLS

*Step 1 : Generate the eventsclient executable*
{code:java}
cd fabric/examples/events/eventsclient
go build
{code}
(You will see the executable *eventsclient* if there are no compilations errors )

*Step 2 : Run e2e_cli with the following command*
{code:java}
./network_setup.sh restart mychannel 100000
{code}
*Step 3 : establish connection from the client to the peer to obtain the blocks*
{panel}
*NOTE*: In order to allow the *eventsclient* sample to connect to peers on e2e_cli example with a TLS
enabled, the easiest way would be to map *127.0.0.1* to the hostname of peer
that you are connecting to, such as *peer0.org1.example.com*. For example on
*\*nix* based systems this would be an entry in */etc/hosts* file.
{panel}
{code:java}
CORE_PEER_MSPCONFIGPATH=/Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp CORE_PEER_LOCALMSPID=Org1MSP ./eventsclient -channelID=mychannel -server=peer0.org1.example.com:7051 -tls=true -mTls=true -filtered=true -quiet=false -seek=3 -clientKey=/Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.key -clientCert=/Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.crt -rootCert=/Users/ratnakar/workspace/go/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/ca.crt
{code}
The output would be some thing like following
{code:java}
2018-01-25 14:57:03.176 EST [eventsclient] readEventsStream -> INFO 001 Received filtered block:
{
""channel_id"": ""mychannel"",
""filtered_transactions"": [
{
""transaction_actions"": {},
""tx_validation_code"": ""VALID"",
""txid"": ""076733f1ac1f8bddaa89df5592bb747dcc4fdc870f5a10a522f657d95b6bfa6b"",
""type"": ""ENDORSER_TRANSACTION""
}
],
""number"": ""3""
}
2018-01-25 14:57:03.177 EST [eventsclient] readEventsStream -> INFO 002 Got status &{SUCCESS}{code}

*some other options :*
{code:java}
./eventsclient -channelID=mychannel"" -quiet=false -server 127.0.0.1:7051
./eventsclient -channelID=mychannel"" -seek=<-2|-1|0|(1..N)>
./eventsclient -channelID=""mychannel"" -seek=2 \-filtered=false
{code}
*Note:*
 1. Can run different tests by changing the e2e_cli sample 
 --> Create multiple channels 
 --> Donot join all the peers in the script and join at later point 
 --> Send Invokes concurrently (for invalid transactions) etc.,
 2. Generate multiple client to listen on multiple channels (Refer the scripts channel1 and channel2)

3. All these tests can re-run by setting the -filtered flag to *false* to retreive unfiltered blocks
{code:java}
ex:
./eventsclient -channelID mychannel -filtered=false
{code};;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5389 use external CA,FAB-6452,21303,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rennman,scottz,scottz,05/Oct/17 12:29 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,20/Jan/18 7:12 PM,v1.1.0,,,,,,v1.1.0,v1.1.0-alpha,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this.

If a user wishes to use an external CA for generating and signing the certificates, it would be useful to leverage the fabric-ca-client and BCCSP to generate a certificate signing request for the keys generated by the BCCSP and write the CSR to a file without any interaction with the fabric-ca-server. This would allow the user to then send the CSR file to an external CA.",,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-507,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy94v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 9:00 AM;rennman;will use openssl to sign a CSR generated by fabric-ca-client.
 Ensure the basic case works.

Add a few variations concerning extentions, expiry, etc.
 I don't expect this to be a large effort since the CSR that we
 are capable of generating is a very limited subset of what openssl actually allows.

 

A day or so of automation work.;;;","05/Dec/17 9:02 AM;rennman;[fabric-ca CSR to external CA|https://gerrit.hyperledger.org/r/15943];;;","13/Dec/17 7:57 AM;rennman;Blocked by https://gerrit.hyperledger.org/r/#/c/15999/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6020 compiler build flags to include Experimental features,FAB-6453,21305,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,kaichiasjtu,scottz,scottz,05/Oct/17 12:46 AM,30/Jul/19 10:56 AM,28/Oct/23 3:01 AM,30/Jul/19 10:56 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and the New Feature JIRA blocking this. This is for a tech preview feature.

Note: this capability (using build flags) is one way of controlling what goes into a load. Another is using run-time flags, to allow network admin to turn features on/off, typically after all nodes are upgraded. (If any nodes are not upgraded, then they would stop participating in the network.) Some tech-preview features might use that instead of (or in addition to) build flags. I am not sure if there is much system testing we can do exclusively for FAB-6020. It is probably just a matter of running feature tests for a specific feature(s) to ensure they fail when it is not built into the load when its build flag is off (and automated tests complete successfully for other features), and that the feature tests pass when it is included and fully functional when the build flag is enabled.

Not sure yet which features would be guarded by build flags, but it is likely some are the tech-preview features that are listed in the wiki (see link, above).",,mastersingh24,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6020,,,,,,,,,,,,,,,,,,,,,,FAB-6456,,,FAB-2005,FAB-1973,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy953:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 9:20 PM;rameshthoomu;This features has been implemented in fabric. Below is the reference

[https://github.com/hyperledger/fabric/blob/decb95f8e34336b37d7e94f06da03f37eb69a15f/Makefile#L49]

and I have tested this by disabling and enabling experimental flags. https://gerrit.hyperledger.org/r/#/c/14905/;;;","30/Jul/19 10:56 AM;mastersingh24;This was done when we used flags but we no longer do;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-1151 private data (sidedb) with and without runtime toggle flag and/or build switch,FAB-6454,21306,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,scottz,scottz,05/Oct/17 12:50 AM,01/Aug/19 11:13 AM,28/Oct/23 3:01 AM,01/Aug/19 11:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this. This is a tech preview feature. This may require using build flag or run-time flag.

Private channel data. Ability to keep data on a channel private. This data will never be sent to the ordering service with the transaction. The private data is shared with a subset of peers, governed by policies, via the gossip protocol. E.G. all channel participants may need to be aware of a trade, but keep the trade price private among the trade participants.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy95b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-3621 systest using ACL for role-specific channel functions,FAB-6455,21307,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,latitiah,scottz,scottz,05/Oct/17 12:54 AM,30/Jul/19 10:57 AM,28/Oct/23 3:01 AM,30/Jul/19 10:57 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this. This is a tech preview feature. This may require using build flag or run-time flag.

Finer grained access control on channel functions rather than organization scoped access. For example, specify which identities or group of identities can invoke chaincode, retrieve blocks, retrieve transactions, etc.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy95j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:57 AM;mastersingh24;old ... no longer valid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5664 MSP Identity Types,FAB-6456,21310,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,05/Oct/17 12:57 AM,30/Jul/19 10:56 AM,28/Oct/23 3:01 AM,30/Jul/19 10:56 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this. 

Ability to distinguish types of MSP identities, e.g. peer vs client vs orderer. This information can be utilized for access policies throughout the system.",,denyeart,muralisr,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5664,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6453,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy95r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,muralisr,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/18 8:23 PM;denyeart;[~adc] [~muralisr] Could you help with a brainstorm of system tests for this feature?  You can iterate on a list of system test scenarios in the Description.  Thanks.;;;","16/Jan/18 11:16 PM;muralisr;[~denyeart] [~adc] and I were working to get some things cleared up first regarding usage of this feature. 

[~scottz] [~latitiah] can we take care of the above and then engage with you please ? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
proposal response error object message wraps shim.Error message as string,FAB-6457,21316,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,yedendra,yedendra,05/Oct/17 1:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Jun/18 12:19 AM,v1.0.4,v1.1.0,,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,,"When an error is thrown in the chaincode using shim.Error

> shim.Error(""[invoke/query]-->[getDocuments] json: cannot unmarshal object into Go value of type string"")

 

In the nodejs SDK, the error is received as follows:

error.message = ""chaincode error (status: 500, message: [invoke/query]-->[getDocuments] json: cannot unmarshal object into Go value of type string)""

The error message should be same as the string passed in shim.Error.

 ",,denyeart,harrisob@us.ibm.com,jyellick,MariWade,mastersingh24,muralisr,nnao,pd93,yedendra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyid3:",,,,,,,,,,,,,,,,,,,,,,denyeart,harrisob@us.ibm.com,jyellick,MariWade,mastersingh24,muralisr,nnao,pd93,yedendra,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 12:26 AM;harrisob@us.ibm.com;[~zhaochy] would you be able to have a look at this one, thanks;;;","30/Oct/17 10:24 AM;zhaochy;[~harrisob@us.ibm.com] this problem should be fixed at the fabric module. The message sdk received through grpc is

_chaincode error (status: 500, message: [invoke/query]-->[getDocuments] json: cannot unmarshal object into Go value of type string)_

And I also tried java sdk, this problem happened again. If we want to fix this at the sdk module, we have to parse the *Error.message* string and get the *message* sub-string, I don't think this is the right way for this issue. As a result, it's best to fix this at Fabric module instead of the sdk module.

maybe we should change this?
at  fabric/core/endorser/endorser.go line 44
{code:java}
func (ce chaincodeError) Error() string {
 return fmt.Sprintf(""chaincode error (status: %d, message: %s)"", ce.status, ce.msg)
}
{code}


 ;;;","27/Nov/17 11:37 AM;denyeart;[~muralisr] What's your opinion on this one?;;;","04/Dec/17 12:00 AM;mastersingh24;[~yedendra] Exactly what problem are you trying to solve here?  Are you trying to do something special with the error message which is returned?  ;;;","04/Dec/17 9:51 PM;mastersingh24;I'm removing fix version for now as it is unclear whether or not anything should actually be done here.;;;","05/Dec/17 2:00 AM;yedendra;[~mastersingh24] The error message is a simple text. When we call shim.Error(""this is a simple error msg"") in the chain code, the sdk throws the error. However, this error message is wrapped with addition text and received as  ""chaincode error (status: 500, message: this is a simple error msg)"". Currently, we are extracting the error text from this wrapped text.

The work around currently we are using is same as the sdk level fix mentioned by [~zhaochy] : https://jira.hyperledger.org/browse/FAB-6457?focusedCommentId=33351&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-33351;;;","05/Dec/17 7:00 AM;nnao;I think this error is related to FAB-6387 (https://jira.hyperledger.org/browse/FAB-6387).
Peer doesn't return the correct response. To fix this problem, I sent patches.
 
However, there is a deadlock between fabric and sdk-node.
To merge the patches for fabric, it needs to change the test in sdk-node.
To get prepared for the change of test in sdk-node, it needs to change fabric.
How can I fix this deadlock?;;;","08/Jan/18 11:57 AM;denyeart;[~muralisr] Could you review FAB-6387 and FAB-6457 and provide your thoughts on next steps?;;;","28/Jan/18 1:21 AM;muralisr;[~denyeart], agree with [~nnao] ...this should be fixed by FAB-6387 but lets just confirm that with the fix and not make it duplicate yet. 

Also [~nnao],   CR https://gerrit.hyperledger.org/r/#/c/16057/ mentioned in FAB-6387 resolves the deadlock you mentioned above (and hence CRs in FAB-6387 got Verified+1). Can you confirm please ? Just wanted to close that loop. 

Will post rest of comments in FAB-6387.;;;","13/Feb/18 10:27 PM;Clayton Sims;I think there was agreement that FAB-6387 needed to be moved to v1.2.   [~muralisr]  did i understand that correctly.  What does it do to this one?;;;","13/Feb/18 11:39 PM;muralisr;[~Clayton Sims] this would also move to v1.2. The  fix for FAB-6387  from [~nnao]  provides ProposalResponse directly to users without introspection or unmarshalling.;;;","05/May/18 12:04 AM;jyellick;It looks like FAB-6387 was merged, is this still an issue?;;;","13/Jun/18 12:21 AM;harrisob@us.ibm.com;I have tested this and the error message from the chaincode is available within the response object along with the status of 500.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Make gRPC settings configurable (max message size, etc)",FAB-6461,21320,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,nrohith,mastersingh24,mastersingh24,05/Oct/17 5:00 AM,27/Aug/21 3:34 PM,28/Oct/23 3:01 AM,27/Aug/21 3:34 PM,v1.4.0,,,,,,,,,fabric-orderer,fabric-peer,,,0,help-wanted,,,,,,"Currently the max message size parameters for the common gRPC server and for gRPC client connections made by the peer and orderer will use hardcoded default values (the max message size is 100MB).

While this setting should suffice for almost all situations, we should make them configurable.

To see where max message size is set in the code, grep for DefaultMaxRecvMsgSize and DefaultMaxSendMsgSize.",,denyeart,guoger,indirajith,mastersingh24,nrohith,Param-S,ricba1995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,FAB-4461,,,,,,,FAB-4461,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynys:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,guoger,indirajith,mastersingh24,nrohith,Param-S,ricba1995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jan/18 7:33 PM;mastersingh24;Given this has never really come up, I'm going to push this to the next release.  It's not hard to do, but it's one last thing to test / document for the 1.1 release.
[~ChristopherFerris] [~denyeart] - Any objections?;;;","05/Jan/18 7:34 PM;mastersingh24;also - I'm happy to do this one, but marked it as help wanted in case someone else wants to take it on.  It's a good starter item to take on;;;","08/Jan/18 11:11 AM;denyeart;Agree to defer until future release.;;;","23/Mar/18 10:03 PM;mastersingh24;this is pretty low effort - not sure if anyone will actually hit this or not as to date no one has, but as people start messing with batch sizes they might hit this limit;;;","29/Aug/18 2:33 AM;nrohith;Can someone give clarification on this issue? I went through the code in core/comm and it seems like the feature is already implemented.;;;","29/Aug/18 2:49 AM;mastersingh24;[~nrohith] So the settings for message size are basically [package scoped|https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L21] and not client or server instance scoped and there are no actual config settings (e.g. nothing in `core.yaml`).  My thought was that we should add either a struct with both settings or fields for each setting (max send and max recv) to the [ServerConfig|https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L45] and [ClientConfig|https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L62] structs and then add corresponding settings to `core.yaml` (similar to how the KeepaliveOptions work).

 

Alternatively, we could just keep the package scoped variables but would need to add settings for them in `core.yaml` and set them when the peer starts (peer node start).;;;","29/Aug/18 4:26 AM;mastersingh24;I'm going to push this out ... still has not been any need for it and we are about to close down the 1.3 cycle;;;","31/Aug/18 7:40 AM;nrohith;[https://gerrit.hyperledger.org/r/c/26011/]

Thanks for the clarification. Please let me know if I misunderstood anything or where I could improve the changes.

Some thoughts:

1) Currently, the max message sizes in `core.yaml` and `orderer.yaml` must be specified in bytes. This is a bit awkward for large sizes like 100MB, which would be written as 104857600. I looked at using the function `viper.GetSizeInBytes`, but I couldn't see a clean way to incorporate this into loading the `orderer.yaml` file. It would have required importing viper into `orderer/server/main.go` and I wasn't sure if it was OK to do that. On the other hand, allowing `core.yaml` to specify sizes in this format is simple.

2) I'm not sure if error handling for invalid (negative) values in the yaml files should be done when loading or inside the comm package. There is code duplication when handling these errors while loading them initially - comm functions could replace invalid values with defaulted values so external packages do not have to know about comm internals. This could be solved by delegating the loading to `viper.GetSizeInBytes`.;;;","28/Nov/19 3:33 PM;guoger;I don't see strong need for this yet, further defer to next release.

meanwhile, [~nrohith] if you are still interested in contributing, feel free to resubmit via github, and we could continue the discussion there;;;","29/Jan/21 11:37 PM;ricba1995;I see the issue fixed in 2.1.0, but how?

I don't see any way to make this configurable, and I would like to have more than 100MB payloads.;;;","02/Feb/21 4:09 PM;denyeart;It is not resolved in v2.1 or any release.

Extremely large transactions are not a good practice in general, hence there has been little desire to increase the max payload size as that may encourage transaction anti-patterns.;;;","31/Jul/21 3:43 AM;denyeart;Since keepalive options have been added previously, I've updated this task to focus on max message size (DefaultMaxRecvMsgSize and DefaultMaxSendMsgSize).;;;","27/Aug/21 3:33 PM;Param-S;[https://github.com/hyperledger/fabric/pull/2858 |https://github.com/hyperledger/fabric/pull/2858] 1.4

[https://github.com/hyperledger/fabric/pull/2849] 2.2

[https://github.com/hyperledger/fabric/pull/2848] 2.3

[https://github.com/hyperledger/fabric/pull/2805] main

Configurable options to update GRPC max(send/recv) message size. Options added both in peer and orderer node configuration.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properly compute PKI-ID,FAB-6462,21321,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Oct/17 7:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 10:33 PM,v1.0.3,,,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,,"It's more accurate to compute the PKI-ID on the actual raw bytes of the cert than the PEM bytes.
Alternatively, we can use the IdentityIdentifier() method as an input instead of the PEM bytes.

However, instead of enforcing explicit sanitation of input for GetPKIidOfCert(), We will just make identities that have the wrong PEM type - invalid. This is much more efficient because the GetPKIidOfCert is called many times in the code, and sanitizing its input is therefore costly, while if we just make identities that have the wrong type - invalid, it would implicitly force sanitation of identities. Another argument for doing so, would be that the Validate() is costly anyway and is rarely performed in the peer's life cycle, therefore - adding an additional slight overhead to it doesn't affect much the cost of validating an identity. The BCCSP-MSP Serialize() method already puts the right PEM type as of an earlier commit that is targeted for v1.1 and isn't in v1.0.x",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyidz:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports Node js chaincode,FAB-6470,21329,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Oct/17 12:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Dec/17 5:55 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Node js chaincode is supported in v1.1, [https://wiki.hyperledger.org/projects/fabric/proposedv1_1]

PTE will need to support Node js chaincode, see FAB-5375, to benefit the community.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyifr:",,,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Improve Network Launcher: CouchDB, batch time out, batch size, logging level",FAB-6473,21332,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,06/Oct/17 12:54 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,25/Oct/17 1:51 AM,v1.0.3,,,,,,v1.0.4,,,fabric-quality,,,,0,,,,,,,"We need to improve Network Launcher to change the following parameters. 
After the improvement, we will be able to launch Fabric network for various test cases.

- CouchDB: launch couchdb container for each peer
- batch time out: change batch time out
- batch size: change batch size in a block
- logging level: change logging level of peer
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6727,,,,,FAB-3475,,,,,,,,,,,,,,,,,,Unset,,,FAB-6742,,,,,,,,,"1|hzyigf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"06/Oct/17 11:01 AM;yuki-kon;Posted here: https://gerrit.hyperledger.org/r/#/c/14249/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix small formatting error in WYFA,FAB-6474,21333,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,06/Oct/17 1:43 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Oct/17 6:07 AM,,,,,,,,,,fabric-docs,,,,0,,,,,,,Image in introduction to doc won't load and is causing other items after it to not load. Needs to be fixed.,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyign:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger returns invalidation code instead of invalidation string,FAB-6476,21338,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,06/Oct/17 1:04 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Oct/17 1:08 PM,,,,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,," Ledger logs tran invalidation in two places.

This one gets it correct by logging the txid and the reason code string:

core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go:            logger.Warningf(""Block [%d] Transaction index [%d] TxId [%s] marked as invalid by state validator. Reason code [%s]"" ...


 This one should be improved to return the txid and reason code string rather than the reason code number:

core/ledger/kvledger/txmgmt/validator/valimpl/helper.go:            logger.Warningf(""Block [%d] Transaction index [%d] marked as invalid by committer. Reason code [%d]"" ...

 

The txid and reason code string will make it much easier to troubleshoot invalidations.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0iv:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 1:08 PM;denyeart;Will be worked in FAB-4842.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could not find configtx.yaml on Win-10,FAB-6478,21341,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,nirmal1988,nirmal1988,06/Oct/17 8:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 1:46 PM,,,,,,,v1.0.0,,,fabric-samples,,,,0,help-wanted,,,,,,"Environment: Windows 10- 64bit

I am using first-network application from([https://github.com/hyperledger/fabric-samples]).

When i run the command to generate(./byfn.sh -m generate) the channel artifacts it gives me following error.
[!https://user-images.githubusercontent.com/15016894/31226844-41ee05f2-a9c7-11e7-9fa6-722966adc01d.png!|https://user-images.githubusercontent.com/15016894/31226844-41ee05f2-a9c7-11e7-9fa6-722966adc01d.png]

However it already has exported FABRIC_CFG_PATH, but it still gives me this error.
FABRIC_CFG_PATH is already printed in screenshot as ""/c/apps/fabric-samples/first-network"".

Note: This works in Ubuntu 14 VM.

Please let me know what is the issuewith FABRIC_CFG_PATH??

Thanks in advance...","Win 10- 64 bit

!image-2017-10-06-11-06-48-433.png!",denyeart,mastersingh24,nirmal1988,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 8:07 PM;nirmal1988;first-network.zip;https://jira.hyperledger.org/secure/attachment/12214/first-network.zip","06/Oct/17 8:06 PM;nirmal1988;image-2017-10-06-11-06-48-433.png;https://jira.hyperledger.org/secure/attachment/12215/image-2017-10-06-11-06-48-433.png",,,,,,,,,,,,,,,,,,,,,"1|hzyijr:",,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,nirmal1988,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/17 8:23 PM;mastersingh24;[~nirmal1988] - can you update your fabric-samples clone and try again?   I cannot seem to reproduce this on my Windows 10 system;;;","27/Nov/17 1:46 PM;denyeart;Since this cannot be reproduced and have not heard back from reporter, will have to close.  Please re-open if able to reproduce.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support multiple go versions in CI z build nodes,FAB-6482,21348,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Oct/17 10:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Oct/17 10:53 PM,v1.0.3,,,,,,v1.0.4,,,fabric-ci,,,06/Oct/17 12:00 AM,0,fabric-ci,,,,,,"Support multiple go versions in CI z build nodes. Existing configuration only supports go 1.7 version but fabric release and master branches are on go1.7.5 and go1.9.

Update all CI production Z nodes to go 1.9 and go1.7.5

Update CI scripts to detect the version on each branch and trigger tests",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyikv:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/17 10:53 PM;rameshthoomu;patch has been submitted and merged. Now production CI z build nodes are running on go1.9 and go1.7.5. We switch between these versions based on the request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for Channel Service,FAB-6483,21349,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,06/Oct/17 10:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 1:06 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyil3:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add hook in capabilities framework to supply MSP version,FAB-6485,21351,21035,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Oct/17 11:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Oct/17 5:22 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyilb:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger troubleshooting utility,FAB-6486,21352,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,qizhang87,qizhang87,07/Oct/17 12:23 AM,22/Feb/21 11:57 PM,28/Oct/23 3:01 AM,22/Feb/21 11:57 PM,v1.0.3,,,,,,,,,fabric-ledger,,,,8,stale-item,,,,,,"Provide an approach that allows a peer to periodically check the integrity of its ledger by walking through the blockchain.

Additionally, an option to check integrity across peers, for example to verify that all the block hashes and block commit hashes are the same across two or more peers. This could be as simple as writing the hashes to a file for an admin to compare, or perhaps something more sophisticated that pulls blocks from peers and compares them.",,balaji.viswanathan,baohua,C0rWin,denyeart,ericmvaughn,grapebaba,Hangyu_FJH,jimthematrix@gmail.com,kchristidis,manish-sethi,qizhang87,SjirNijssen,sykesm,thiago-moreira,vigneswaran.r,Vishal3152,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-609,FAB-18425,FAB-18429,FAB-11458,,,,,"07/Oct/17 12:22 AM;qizhang87;Blockchain Integrity.pptx;https://jira.hyperledger.org/secure/attachment/12216/Blockchain+Integrity.pptx",,,,,,,,,,Unset,,,,,,,,,,,,"1|i00wur:0idqxo9i",,,,Unset,,v2.x,,,,,Unset,,,,,,,,,,,balaji.viswanathan,baohua,C0rWin,denyeart,ericmvaughn,grapebaba,Hangyu_FJH,jimthematrix@gmail.com,kchristidis,manish-sethi,qizhang87,SjirNijssen,sykesm,thiago-moreira,vigneswaran.r,Vishal3152,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 12:12 AM;kchristidis;As I had noted in https://gerrit.hyperledger.org/r/c/4061/ I think this would be handy, so I'm onboard.;;;","10/Oct/17 12:47 AM;jimthematrix@gmail.com;Agree with Kostas, the code here is a good way for peer owners to ensure that everything in the ledger is in good order, as a sanity check after for instance disk archiving/restore, or showing proof of integrity to an audit. I think as an example a command like ""peer ledger checkintegrity"" could be very useful to a peer admin;;;","12/Oct/17 6:30 PM;denyeart;I agree that we need the verify function.  I think as a first CR it should simply do VerifyChain(), have a command line like Jim suggested to start it ""peer ledger checkintegrity"", and log the results to peer log.

Then, in follow on CRs you could introduce the automatic integrity check based on configurable times (core.yaml).

The reason I suggest splitting the CRs, is that I think we could get the command line option merged quickly into next release, while the automatic integrity check may have more debate.  Go ahead and push CRs to gerrit and we can do detailed reviews and discussion there.

 

The automatic fix will be more tricky, since after retrieving the fixed block from neighbors we have to consider state database.  We won't know if state database was also corrupted and we can't simply apply state changes from middle of chain.  We would want to rebuild entire state database if the blocks were corrupted. Therefore I suggest the repair should not be automatic but an administrator driven action to take the peer offline and repair.

[~manish-sethi] Could you add comments and vote if you agree?;;;","12/Oct/17 6:47 PM;denyeart;As a first step, we should also check with [~balaji.viswanathan] if he wants to revive his VerifyChain() via FAB-609, and then [~qizhang87] adds the additional services on top (command line and automatic checks).;;;","12/Oct/17 11:23 PM;qizhang87;Agree with David. I have updated the VerifyChain() function so that it works with Fabric v1.0.3. [~balaji.viswanathan] could double check from the code patch attached to this thread.;;;","13/Oct/17 12:08 AM;balaji.viswanathan;Agree, i will take a look at the Qi Zhang's patch and push an updated CR for this;;;","17/Oct/17 12:28 AM;manish-sethi;Yes, I agree that we should have some utility for verifying the blocks data. However, I think that we should be clear about it's scope and guarantees it provides.
 I'll categorize the scope in two broad categories.
 1) Data corruption due to hardware or transmission errors (e.g., disk got bad sectors or manually copying ledger data from one peer to another)
 2) Intentional tempering with ledger data

I believe that the second category is what is highlighted in the attached charts. Since, this is related to security, I think that we should clearly mention the scope. This is because, just a positive return from the verifying code would not guarantee that everything is fine. We are assuming that the tempering has happened at the filesystem level. The tempering could involve the tempering of verifying code/utility itself as well to return a fake positive response. So, potentially the scope of verification will be limited to some tempering and we need to specify that clearly (better to take an opinion from security folks here I feel). 
 Further, only matching hashes may not be sufficient. Some more checks should be performed that we do during regular validation (at least for the last block) which includes verified for the valid signatures from the orderer and proper channel name in the block (else another tempering could replace whole block chain). Theoretically, we can repass every block from the `validate` function but that may be overkill - for instance, it may not be worth for checking for signatures from orderer for each block.

Coming back to the first category, Though a positive outcome of this utility would guarantee the absence of hardware issues but we need to think about the negative outcome that could give hint in a more meaningful way.
 If there is some disk failures, this utility would simply throw some error (Not sure what this could be because, we did not include the disk failure scenarios yet and in fact, in boundary cases it could mislead to the scenarios of first category)
 I wanted to highlight this category because, there could be different approaches that suits this category better. For instance, the easiest could be to simply add file level checksums when we close a ledger file. That way, anytime one runs a tool for checking the hardware failures, we would always tell the block file#xyz needs another copy - The same could be some at much smaller granularity as well (e.g., a fixed size data frame within the block file - as typically most of the dbs do but that requires more involved efforts)

Thoughts?;;;","17/Oct/17 1:29 AM;denyeart;[~elli-androulaki] [~adc] [~ales] Could crypto team provide their opinion on this one.  To what extent could a VerifyChain() function on the peer provide an integrity guarantee on the chain by checking block hashes and orderer signature on blocks?  As [~manish-sethi] points out, if somebody has access to the file system to tamper with the block storage, they could potentially also tamper with the peer code to always return a positive result.  Thoughts?;;;","21/Oct/17 11:41 AM;qizhang87;[~manish-sethi] Can we put the verifying code in some secure hardware, such as the hardware secure module, to prevent it from being tampered?;;;","21/Oct/17 12:42 PM;qizhang87;[~manish-sethi] As our current approach is more focusing on the first category of problem, can we have this solution done first, and then consider the solution for the second category? 

To solve the problem that the whole blockchain could be tampered, [~balaji.viswanathan] suggested some cross-peer ledger comparison, which means for a peer, it not only verifies its own ledger, but also compare its ledger with other peers' ledgers. But this may cause massive data exchange through the network, since in order to achieve Byzantine fault tolerance, a peer needs to compare its ledger with many other peers' ledgers in the same channel. 

I suggest that we first implement the verifying code as validating signatures for each block in addition to matching the hashes, and see how much overhead it will introduce. Since this ledger verifying process does not happen quite often, even some overhead could be acceptable. 

BTW, I am not quite clear how ''valid signatures from the orderer and proper channel name in the block"" can detect the whole blockchain from being tampered. Can you provide more details [~manish-sethi]? Thanks!

Looking forward for your thoughts and comments. Thanks again!;;;","26/Oct/17 6:32 AM;jimthematrix;[~denyeart] regarding your question on the peer command itself being tampered with, presumably the admin could follow a more secure procedure such that the binary is downloaded from a trusted source (hyperledger.org) with hash check to ensure its authenticity. I would think this should be among the normal precautions a competent org admin follows?

Another possibility is to run the peer command remotely from a machine that the org admin has exclusive rights to (and known to have integrity).;;;","01/Nov/17 4:07 PM;yacovm;{quote}

Provide an approach that allows a peer to periodically checks the integrity of its ledger by walking through the blockchain. If some block is found as broken, the peer will ask its neighbors for a correct block to replace the broken one.{quote}


The proposal of verifying the chain periodically seems a bit odd to me:
* The blocks are signed by the orderer (and the orderer is *trusted *in HLF's adversary model) and when they are commited, the signature is verified.
* In our adversary model, if the orderer sends a block to some peer, it sends the same block to all peers. What is the use of requesting a block from other peers? it will be the same. 
* Why do we need periodical verification? If we commit a block and check that the hash matches the previous hash, and if it doesn't match - we either panic or stop processing the chain, isn't that enough? 
** This is enough to protect you from a bug in the orderer in case it doesn't create blocks that have correct previous hashes
** This isn't enough to protect you from a file system corruption, but I don't think it is fabric's goal to guard against such abnormalities. ;;;","01/Nov/17 6:29 PM;C0rWin;{quote} 
If some block is found as broken, the peer will ask its neighbors for a correct block to replace the broken one.
{quote}

To support committing corrupted block from the past Ledger API has to be changed or at least the commit logic as is for now, ledger won't accept block with sequence number say 10, while current ledger height is 10000.

Moreover I do no think that such functionality should reside in peer code, but rather some external monitoring component, graphs in attached pptx clearly presents linear in number of blocks overhead of doing such check, hence eventually it will take too many resources and time.

{quote}
 if somebody has access to the file system to tamper with the block storage, they could potentially also tamper with the peer code to always return a positive result.
{quote}

In that case can tamper the peer code, it will be able to turn off any checks we can put into it. Tempering data eventually will lead to the state divergence and therefore proper endorsement policies supposed to mitigated the effect of this.  ;;;","07/Nov/17 3:32 PM;baohua;Maybe can follow this scenario:

1) Users trigger verification on peer storage manually through some API.
2) Peer returned the result. If sth is broken, return the index.
3 Users ask peer to fix the given block by pulling from other peer nodes.


Besides, in order to accelerate the verification, is it possible to use data structures like merkle tree among those blocks?;;;","07/Nov/17 4:22 PM;C0rWin;{quote}
1) Users trigger verification on peer storage manually through some API.
2) Peer returned the result. If sth is broken, return the index.
{quote}

So I think this should not be an additional API but rather additional tool which will take care to monitor integrity of the blocks.;;;","12/Mar/18 4:01 PM;denyeart;Removing v1.2 tag, this item will be prioritized alongside others in the fabric-ledger backlog.;;;","31/Jul/18 4:39 PM;C0rWin;There is a standalone tool which can scan the ledger to check offline its integrity, work still in progress, available here: https://github.com/C0rWin/ledgerfsck;;;","23/Jan/20 7:09 AM;sykesm;Stale;;;","03/Jun/20 8:55 PM;denyeart;I agree [https://github.com/C0rWin/ledgerfsck] is a good starting point.;;;","04/Jun/20 1:49 AM;baohua;And I found [https://github.com/hyperledger-labs/blockchain-verifier.|https://github.com/hyperledger-labs/blockchain-verifier]

It might be helpful, too.;;;","22/Feb/21 11:57 PM;denyeart;We will leverage the new snapshot functionality along with ledger troubleshooting utilities mentioned in FAB-18425 and FAB-18429.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Enable BCCSP initialized with default config file,FAB-6487,21353,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jamesgua,jamesgua,jamesgua,07/Oct/17 1:44 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,20/Jul/18 7:16 AM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,"There should be a way for user to easily get customized BCCSP instance without explicit effort, however, below are examples BCCSP got initialized with ""nil"" option

common/tools/configtxgen/main.go
common/tools/cryptogen/csp/csp.go
common/tools/cryptogen/msp/generator.go
core/chaincode/shim/chaincode.go
core/common/ccprovider/cdspackage.go 
core/common/ccprovider/sigcdspackage.go

This work item will add implementations to extract user options and add no impact to existing project",,jamesgua,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-534,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyilj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jamesgua,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 1:04 AM;jamesgua;Per discussion with Vlad:
common/tools/configtxgen/main.go    for verifying purpose not critical

common/tools/cryptogen/csp/csp.go   argued and rejected in previous development

...

Based on that cancel it for now, focus on others.;;;","12/Apr/18 10:06 PM;mastersingh24;need to refactor bccsp package .... will see if anything is needed here or else will close;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in docs/source/chaincode4noah.rst,FAB-6488,21354,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,joe-alewine,bennettneale,bennettneale,07/Oct/17 2:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Oct/17 5:29 AM,v1.0.3,,,,,,v1.0.4,v1.1.0,,fabric-docs,,,,0,,,,,,,"There are missing single quotations in doc code block lines:

 
{noformat}
peer chaincode instantiate -n mycc -v 0 -c '{""Args"":[""a"", ""b"", ""c""]} -C mychannel""
{noformat}
should be
{noformat}
peer chaincode instantiate -n mycc -v 0 -c '{""Args"":[""a"", ""b"", ""c""]}' -C mychannel
{noformat}
AND
{noformat}
peer chaincode upgrade -n mycc -v 1 -c '{""Args"":[""d"", ""e"", ""f""]} -C mychannel
{noformat}
should be
{noformat}
peer chaincode upgrade -n mycc -v 1 -c '{""Args"":[""d"", ""e"", ""f""]}' -C mychannel
{noformat}",,bennettneale,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyilr:",,,,,,,,,,,,,,,,,,,,,,bennettneale,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Oct/17 11:51 PM;joe-alewine;[https://gerrit.hyperledger.org/r/c/14883/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with certs and 2 orgs,FAB-6489,21355,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,07/Oct/17 2:37 AM,26/Sep/18 4:04 AM,28/Oct/23 3:01 AM,26/Sep/18 4:04 AM,,,,,,,v1.3.0,,,,,,,0,,,,,,,"*Test Name:* Using fabric-ca setup with certs and 2 orgs
 *Component:* fabric-ca (bootstrap)
 *Description:* use the fabric-ca to generate certificates for users instead of cryptogen.
 *Artifact Locations:* fabric/test/feature/bootstrap.feature
 *Network Topology:* 2 organizations with 2 peers each
 *Client Driver:* behave
 *Input:* behave -n ""FAB-6489""
 *Output:* 1 scenarios passed, 0 failed",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-716,,,,,,,,,,,,,,,,,,FAB-11619,,,Automated,,,,,,"1|hzyilz:",,,,,,,,,,,,,,,,,Unset,,Interoperability Test,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"20/Sep/18 12:13 AM;latitiah;https://gerrit.hyperledger.org/r/26388;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with attribute-based ACL permissioning,FAB-6490,21356,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,07/Oct/17 2:38 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Oct/17 1:02 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"Test Name: Using fabric-ca setup with attribute-based ACL permissioning
Component:  fabric-ca (bootstrap), peer
Description: use the fabric-ca to generate certificates for a user setting an attribute that will be used in ""special"" chaincode that uses the attribute-based ACL (ABAC) then perform some transactions. Test user that has the attribute set can perform the attributed-based transaction.
Artifact Locations:  fabric/test/feature/chaincode.feature
Network Topology:   3 CAs (1 for each org), kafka-based orderer network, 2 organizations with 2 peers each
Client Driver:  behave
Input:  behave -n ""FAB-6490""
Output: 1 scenarios passed, 0 failed",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyim7:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 3:36 AM;latitiah;This test case is covered in CI when task https://jira.hyperledger.org/browse/FAB-6588 is completed.;;;","28/Oct/17 5:25 AM;latitiah;This is currently being completed by executing
{code}
py.test -v --junitxml results_acl.xml acl_happy_path.py
{code}

which runs the fabric-ca chaincode and scripts in the fabric-samples repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with attribute-based ACL restricting a certain user,FAB-6491,21357,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:39 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,,,,,0,,,,,,,"*Test Name:* Using fabric-ca setup with attribute-based ACL restricting a certain user
*Component:* fabric-ca (bootstrap), peer
*Description:* use the fabric-ca to generate certificates for a user setting an attribute that will be used in ""special"" chaincode that uses the attribute-based ACL (ABAC) then perform some transactions. Test that a different user does not have the attribute set and cannot perform set transaction.
*Artifact Locations:* fabric/test/feature/chaincode.feature
*Network Topology:* 3 CAs (1 for each org), kafka-based orderer network, 2 organizations with 2 peers each
*Client Driver:* behave
*Input:* behave -n ""FAB-6491""
*Output:* 1 scenarios passed, 0 failed",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyimf:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with ACL removing permissions for a certain user,FAB-6492,21358,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:39 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"*Test Name:* Using fabric-ca setup with attribute-based ACL removing a certain user
*Component:* fabric-ca (bootstrap), peer
*Description:* use the fabric-ca to generate certificates for a user setting an attribute that will be used in ""special"" chaincode that uses the attribute-based ACL (ABAC) then perform some transactions. Test both user that has the attribute set and user that does not have the attribute set. Then revoke the user that had the attribute set.
*Artifact Locations:* fabric/test/feature/chaincode.feature
*Network Topology:* 3 CAs (1 for each org), kafka-based orderer network, 2 organizations with 2 peers each
*Client Driver:* behave
*Input:* behave -n ""FAB-6492""
*Output:* 1 scenarios passed, 0 failed",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyimn:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with ACL removing permission for a certain org,FAB-6493,21359,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:40 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyimv:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with ACL reinstating a certain user,FAB-6494,21360,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:40 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyin3:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,main-emeritius,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Using fabric-ca setup with ACL reinstating a certain org,FAB-6495,21361,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:40 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyinb:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorporate using fabric-ca into the system behave tests,FAB-6496,21362,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,07/Oct/17 2:41 AM,21/Jan/19 3:49 AM,28/Oct/23 3:01 AM,26/Sep/18 4:04 AM,,,,,,,v1.3.0,,,fabric-quality,,,,0,,,,,,,"This includes:
* setting up the fabric-ca-peer docker images
* writing the impl step for using fabric-ca
* writing the util that sets up the certificates in the expected locations
* ensure that current tests that use cryptogen work as expected",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Automated,,,,,,"1|hzyinj:",,,,,,,,,,,,,,,,,Unset,,Unset,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"20/Sep/18 12:14 AM;latitiah;https://gerrit.hyperledger.org/r/26388;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get policy updates working in behave system tests,FAB-6497,21363,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:43 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This includes:
* Adding util calls for setting policy
* Adding impl steps for setting policy
* Add tests to ensure policy changes are in effect
* configtxlator use needed?
* possibility that node sdk will have to be used if using cli interface
* test cases for making sure this functionality works as expected.
",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6197,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyinr:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement using configtx.yaml template for roles,FAB-6498,21364,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,latitiah,latitiah,07/Oct/17 2:44 AM,08/Dec/18 5:39 AM,28/Oct/23 3:01 AM,08/Dec/18 5:39 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This includes:
* Allowing the configtx.yaml file to have changes for the number and names of orgs
* Allow for the role types to change (Admin or member)
* Allow for variation in the number of users in an org and their types
* Other possible config changes?",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyinz:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setup RSCC,FAB-6499,21365,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:45 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"Questions:
- How do you enable/disable RSCC (resource system chaincode)? 
- What is the expected behavior when toggling RSCC? 
- Any special flags or setup on specific containers? 
- Are there any special api calls for accessing RSCC?

Completion of this also includes tests for ensuring this functionality works.
",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyio7:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate a root certificate for use when using the fabric-ca,FAB-6500,21366,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,07/Oct/17 2:45 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Feb/18 3:50 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This is a prereq for using fabric-ca in the framework. 
Helpful docs:
https://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#start-server-natively

https://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#fabric-ca-client

The changes can also include some refactoring work to prep for incorporating the fabric-ca into the bootstrapping process.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiof:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"07/Nov/17 5:30 AM;latitiah;setup the docker compose such that new certificates are generated with each run.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add fabric-ca to docker-compose files,FAB-6501,21367,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,07/Oct/17 2:46 AM,03/Nov/18 8:28 PM,28/Oct/23 3:01 AM,03/Nov/18 8:28 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This is a prereq for using fabric-ca in the system framework. When using fabric-ca, the default should be a fabric-ca container for each orderer and each organization.

We should also allow for a fabric-ca for each orderer and each peer. (Is this accurate?)",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyion:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ACL focused chaincode to behave system tests,FAB-6502,21368,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:47 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This is where a specific chaincode is used where an api is limited based on the user who calls the chaincode. (see fabric-samples repo for possibility)

Necessary command additions for CLI:
{code}
$ fabric-ca-client register --id.name user1 --id.secret user1pw --id.type user --id.affiliation org1 -id.attrs attr1=val1:ecert

$ FABRIC_CA_CLIENT_HOME=user1 fabric-ca-client enroll -u http://user1:user1pw@localhost:7054
{code}",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiov:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Disable RSCC for fabric-ca,FAB-6503,21369,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:48 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyip3:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Case: Enable RSCC for fabric-ca,FAB-6504,21370,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:48 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyipb:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test Case: RSCC enabled, but policy is not set",FAB-6505,21372,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,07/Oct/17 2:49 AM,27/Jul/19 9:15 PM,28/Oct/23 3:01 AM,27/Jul/19 9:15 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyipj:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/19 9:15 PM;mastersingh24;not going to invest in these tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Address CI test failure: Error during consumption: <nil>,FAB-6509,21376,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sanchezl,sanchezl,sanchezl,07/Oct/17 4:15 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Oct/17 8:20 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,,See [https://jenkins.hyperledger.org/job/fabric-verify-z/13105/console] for more info.,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiqf:",,,,,,,,,,,,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Oct/17 8:20 PM;kchristidis;https://gerrit.hyperledger.org/r/c/14281/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5581 typescript definitions for fabric-client nodejs module,FAB-6510,21377,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,scottz,scottz,07/Oct/17 4:28 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,14/Jul/18 1:48 PM,v1.1.0,,,,,,,,,fabric-quality,,,31/Oct/17 12:00 AM,0,,,,,,,"After UT and doc is written, we can assign this to someone to determine what (if any) system tests should be done.",,AdnanChoudhury,kosullivan_sita,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy947:",,,,Unset,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,kosullivan_sita,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 1:36 AM;AdnanChoudhury;This feature will be provided with a system test, and the sample app provided by the the feature contributor will be used to drive it, provided that it covers an acceptable share of the APIs.
Once the manual testing is done, a place for the test needs to be found (fabric-sdk-node?) and it needs to be part of the CI run.

The duedate refers to the date by which manual testing should be done, and it may change depending on the time it takes to get the sample app merged. ;;;","12/Oct/17 4:07 AM;scottz;How many API functions must be tested?;;;","14/Jul/18 1:48 PM;AdnanChoudhury;marking this as done as reprioritization decides that these tests will not be completed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5726 dynamically update fabric-ca-server configuration without restarting,FAB-6511,21378,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rennman,scottz,scottz,07/Oct/17 4:54 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,09/Feb/18 5:14 AM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,,,,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-478,FAB-6418,,,,,,,,,,,,,,,,,,,,,,,,FAB-7116,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy94n:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rennman,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 8:59 AM;rennman;currently planned to support for 1.1:
  affiliations
  identities

Two relatively invovled test cases, or perhaps 4 or so each, devoted to
   add
   modify
   delete
   get
respectively

 

Should amount to a couple of days of automation work.;;;","27/Jan/18 5:11 AM;rennman;[CR: Test dyn add/mod/del identites|https://gerrit.hyperledger.org/r/#/c/17255/]
[CR: Dynamic modify of affiliations|https://gerrit.hyperledger.org/r/#/c/17389/]

 Identities
 * Authentication and Authorization
 Any operation requires user authencation, otherwise:
 ** Ensure identities can only be modified/added/removed/listed by authorized users (hf.Registrar.Roles)
 ** Ensure any users who are explicitly deleted have certs revoked
 ** Ensure we can add/modify any and all paramters encapsulated within an identity, including any and all attributes that may be associated with a user: type:, affiliation:, attrs: all hf.* attrs
 ** Ensure that user cannot modify hf.Type, hf.EnrollmentID
 * Adding/modifying an identity is essentially the same as registering an identity, so all of the auth checks should apply, e.g.
 ** user must have the ""hf.Registrar.Roles"" attribute
 ** the type of the identity being modified must be in the user's hf.Registrar.Roles list
 ** user can only add/modify users within it's own affiliation tree
 ** user cannot add/modify a user's attributes unless hf.Registar.Attributes is set
 ** user can add/modify a user with attributes only if the attribute key/pattern is in the users's hf.Registar.Attributes list
 ** user can only add/modify a user with hf.Registrar.Attributes if the requested set is a subset of the user
 ** user can only remove himself if --force is supplied

affiliations
---
 * Ensure affiliations can only be updated by authorized users (hf.AffiliationMgr)
 * Ensure the proper error message for adding an affiliation that already exists
 * Ensure the proper error message for removing an affiliation that doesn't exist
 * Ensure the proper error message for modifying an affiliation that doesn't exist
 * Ensure affiliations can only be deleted if cfg.affiliations.allowremove is configured
 * Ensure default for cfg.affiliations.allowremove is false
 * Ensure affiliations can only be deleted if no ID's are referencing them, unless:  -server   allows for deleting IDs AND --force flag is used
 * Ensure affiliations not being referenced can be deleted w/o the --force flag
 * Ensure that all children of a affiliation are deleted upon a delete of the parent
 * Ensure deleting affiliations can be disabled
 * Ensure admin cannot add affiliations higher in it's affiliation tree
 * Ensure admin can add affiliations lower in it's affiliation tree
 * Ensure that a remove of an aff level deletes lower levels
 * Ensure any users who are deleted as part of an affiliation deletion have certs revoked
 * Ensure any users who are deleted as part of an affiliation deletion are themselves, deleted
 * Ensure that the client must be authorized to any identity affected by a modify or delete
 * Ensure that --force is required if any users are affected by an 'affiliation modify'  
 * Ensure that client may not delete his own affiliation
 *Test hf.AffiliationMgr with valuesof 'true', 'T', '1', 'false', 'F', '0'
;;;","09/Feb/18 5:14 AM;rennman;Tests are merged successfully.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change gossip leader election defaults,FAB-6512,21379,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,07/Oct/17 5:02 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,02/Nov/17 11:22 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The {{sampleconfig/core.yaml}} file defaults to disabling leader election and instead setting the peer to be a leader.

This is the wrong default, because enabling leader election fixes a number of potential errors, including peers permanently disconnecting from the ordering service during network partitions, and joining a channel with a genesis block which does not contain the peer's org definition.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyiqn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix gopath error in fabric-sdk-java CI builds,FAB-6513,21380,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Oct/17 5:46 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Oct/17 10:50 PM,v1.0.3,,,,,,v1.0.4,,,fabric-ci,,,,0,fabric-ci,,,,,,fix gopath error in fabric-sdk-java CI builds,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiqv:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/17 10:50 PM;rameshthoomu;Patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE script does not wait for workers to finish,FAB-6514,21381,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shimos,shimos,shimos,07/Oct/17 6:21 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 5:42 AM,v1.0.3,,,,,,v1.0.4,,,fabric-quality,,,,0,PTE,,,,,,"The current PTE scripts (pte-mgr.sh, pte-ctlr.sh, pte_driver.sh) do not wait for worker scripts to finish, but exit immediately.
This makes hard for users to know whether (and when) tests finished or not.
",fabric-test commit 21e5521225f834dbe3c69b1a68818e5cfcedc7eb,dongming,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyir3:",,,,,,,,,,,,,,,,,,,,,,dongming,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"07/Oct/17 7:07 AM;shimos;CR: https://gerrit.hyperledger.org/r/c/14287/;;;","30/Oct/17 11:48 PM;dongming;This and FAB-5127 can be used to determine the completion of PTE and its status.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specify deliver service reConnectTotalTimeThreshold in core.yaml,FAB-6515,21400,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Hangyu_FJH,yacovm,yacovm,07/Oct/17 7:41 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,24/Oct/17 11:13 AM,,,,,,,v1.1.0,,,fabric-peer,,,,1,help-wanted,,,,,,"The deliver service has a backoff and retry policy that makes the deliver service reconnect to the orderer upon a connection failure, until a threshold has been reached.

The total time of reconnections is currently hardcoded by [reConnectTotalTimeThreshold|https://github.com/hyperledger/fabric/blob/release/core/deliverservice/deliveryclient.go#L32] and is set to 5 minutes which is too low for some use cases where the ordering service in unavailable for a long duration of time.

We perhaps need to make it configurable in core.yaml ",,baohua,Hangyu_FJH,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyirb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,Hangyu_FJH,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Oct/17 11:18 AM;Hangyu_FJH;I would like to take on this task, please help review the code later [~yacovm];;;","17/Oct/17 3:01 PM;Hangyu_FJH;[https://gerrit.hyperledger.org/r/#/c/14565/]

it hasn't been built successfully, could you take a look [~yacovm];;;","17/Oct/17 3:21 PM;baohua;Would suggest make other timeout settings configurable, too.

Add some comments in gerrit, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca golang 1.9 update breaks certification path validation in CI,FAB-6516,21401,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,rennman,rennman,07/Oct/17 10:52 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 6:04 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"Whether it is 'broken' or 'fixed' depends on whether the EE cert should be considered as a trust anchor, but we pass it in to the verification algorithm as one of the certs in the root pool, so in theory, it is 'fixed' by 1.9. However, the CI relies on the 'broken' behavior, so the UT needs to be updated to account for it.

 

In 1.9, the EE cert is unilaterally accepted as a root:
 if opts.Roots.contains(c) \{
      candidateChains = append(candidateChains, []*Certificate\{c})
 } else \{
  ...
 while it 1.7, it is not:
     candidateChains, err := c.buildChains(make(map[int][][]*Certificate), []*Certificate\{c}, &opts)

The ca_test.go is updated to include a certificate chain which does not contain the EE certificate:

 -       ca.Config.CA.Chainfile = noCACert
+       ca.Config.CA.Chainfile = noUsageCert

 ",,denyeart,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyirj:",,,,,,,,,,,,,,,,,,,,,,denyeart,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Oct/17 11:30 AM;rennman;As an aside, the test was passing on z, but that is because as of 10/06/17 the s390 CI is running go1.7, while x86 is running go1.9;;;","18/Oct/17 6:04 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/14289/] merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make unit tests faster,FAB-6517,21500,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,07/Oct/17 10:23 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,09/Oct/17 12:06 AM,,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,,,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyirr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Oct/17 12:05 AM;kchristidis;https://gerrit.hyperledger.org/r/c/14293/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability for PTE to capture Latency with Contstant mode without need for separate test,FAB-6518,21501,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,dongming,dinotone,dinotone,07/Oct/17 10:39 PM,16/Apr/19 10:47 PM,28/Oct/23 3:01 AM,21/Nov/17 11:28 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"Desire PTE to capture Latency metrics, even when running in Constant mode. Latency in 3 flavors:
 * Invoke request
 * Broadcast to Orderer
 * EventHub - Transaction Committed to Ledger

Im thinking/hoping PTE has the ability to capture these stats at a thread level, even when running Contstant mode.",,dinotone,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2247,,,,,,,,,"1|hzyirz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,dinotone,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,"15/Nov/17 6:48 AM;dongming;Part 1 contains item 1 (invoke request) and 2 (broadcast to orderer) is under code review.;;;","15/Nov/17 11:15 PM;dongming;Part 1 was merged.

The PTE trace below is shows latencies stats of 2 processes (1 for org1 and 1 for org2). The output shows one peer and one orderer for each process.

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org1:0 latency_output] peer latency stats: tx num= 1000, total time: 10459 ms, avg= 10.46 ms, min= 5 ms, max= 97 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org1:0 latency_output] orderer latency stats: tx num= 1000, total time: 8554 ms, avg= 8.55 ms, min= 4 ms, max= 43 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 latency_output] peer latency stats: tx num= 1000, total time: 10293 ms, avg= 10.29 ms, min= 5 ms, max= 92 ms
info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 latency_output] orderer latency stats: tx num= 1000, total time: 8551 ms, avg= 8.55 ms, min= 4 ms, max= 38 ms;;;","21/Nov/17 4:11 AM;dongming;Part 2: event latency is in review.

Use array object, so ""singly-linked-list"" is no longer needed. The output will as:

info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 latency_output] event latency stats: tx num= 1000, total time: 828433 ms, avg= 828.43 ms, min= 284 ms, max= 2195 ms;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Obtain endorsers of a private data transaction,FAB-6520,21700,20526,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Oct/17 4:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 10:32 PM,,,,,,,v1.2.0,,,fabric-gossip,,,,0,v1.1-experimental,,,,,,"In order to prioritize pulling from endorsers, the coordinator needs to extract the endorsers from the transaction, but only those who their org is in the collection.",,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyisn:",,,,,,,,,,,,,,,,,,,,,,denyeart,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Oct/17 7:00 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/14301/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
build your first network script get-byfn.sh script cannot get its tar file,FAB-6521,21701,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nickgaski,mikailcetinkaya,mikailcetinkaya,09/Oct/17 4:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Oct/17 11:47 PM,,,,,,,v1.0.3,,,fabric-docs,,,10/Oct/17 12:00 AM,0,Documentation,,,,,,"build your first network script from DOCS do not work

get-byfn.sh script cannot get its tar file from 

https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/examples/hyperledger-fabric-byfn-$(VERSION).tar.gz 

examples directory is deleted.",,mikailcetinkaya,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyisv:",,,,,,,,,,,,,,,,,,,,,,mikailcetinkaya,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/17 4:57 AM;mikailcetinkaya;FAB-6182 is merged but how to get this work , not included only deleted;;;","27/Oct/17 11:47 PM;nickgaski;BYFN is working as designed now; you simply need to install the prereqs and clone the fabric-samples directory and finally issue the supplied curl command at the root of fabric-samples.  This will leave you with stable Docker images and the necessary utilities for crypto generation and configuration.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change dissemination to push to K peers total instead of internal and external,FAB-6522,21702,13484,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,09/Oct/17 4:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 10:34 PM,,,,,,,v1.2.0,,,fabric-gossip,,,,0,v1.1-experimental,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyit3:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SM2 implemented in bccsp/sw,FAB-6524,21704,19521,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,warm3snow,warm3snow,warm3snow,09/Oct/17 12:17 PM,23/Jan/20 7:10 AM,28/Oct/23 3:01 AM,23/Jan/20 7:10 AM,v1.0.5,,,,,,,,,fabric-crypto,,,13/Oct/17 12:00 AM,2,bccsp,SM2,stale-item,sw,,,"Enable fabric/bccsp support SM2.
 * implemented based-on bccsp/sw
 * support sm2 KeyGen KeyImport KeyDeriv Sign and Veirfy

The implementation of this new feature includes several main steps.

1.  bccsp
 * sm2 algorithm implementation in golang.  This can refer to [warm3snow/gmsm/sm2|https://github.com/warm3snow/gmsm/tree/master/sm2], which is based on  [tjfoc/gmsm/sm2|https://github.com/tjfoc/gmsm.git]
 * supply bccsp options pertaining sm2 in bccsp/SMxOpts.go
 * implement sm2 keygen keyimport keyderiv sign and verify in bccsp/sw
 * unit test

2.  msp
 * x509 package supporting sm2
 * invoking x509 above in msp

3. Test
 * implement tool `cryptogen` supporting sm2
 * examples/e2e_cli test",,flyinox,guolidong,hello2mao,matingwei,qsmen,randyshu,StevenXu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115200,115200,,0%,115200,115200,,,,,,,,,,,,,FAB-5575,,,,,,,,,,,,,,,,,,,,"09/Oct/17 1:08 PM;warm3snow;SMxOpts.go;https://jira.hyperledger.org/secure/attachment/12400/SMxOpts.go","09/Oct/17 3:48 PM;warm3snow;sm2 implementation in sw.png;https://jira.hyperledger.org/secure/attachment/12401/sm2+implementation+in+sw.png",,,,,,,,,,,,,,,,,,,,,"1|hzyitj:",,,,,,,,,,,,,,,,,,,,,,flyinox,guolidong,hello2mao,matingwei,qsmen,randyshu,StevenXu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 6:37 PM;matingwei;I saw a reference implement of smx based fabric 1.0.  link is below:

https://github.com/tjfoc/hyperledger-fabric-gm.;;;","10/Jan/18 12:29 PM;warm3snow;This is a implementation of features issued in FAB-6524. 

*GitHub repo*: https://github.com/warm3snow/fabric

*Git Branch*
 * crypto-dev

*Main source code relating to SM2*
 * bccsp/sw
 * bccsp/x509
 * msp
 * common/tools/cryptogen and common/tools/cryptogenCN
 * generateArtifacts.sh and network_setup.sh in examples/e2e_cli

*Test steps*
 * {color:#ff0000}_`make docker`_{color} to generate necessary images
 * run the e2e_cli

*Note*
 * The e2e_cli will use *ecdsa* to generate crypto-config by default. To use *sm2*, run the network_setup.sh with args `sm2`, like `{color:#ff0000}_./network_setup.sh up sm2_{color}`
 * The TLS certificate still use `ecdsa` algorithm now.

Feel free to comment and report problems. ;;;","10/Jan/18 12:47 PM;warm3snow;The implementation of fabric-ca supporting sm2 certificate.

Note: only support SM2 now. RSA and ECDSA can't be used now. ;;;","23/Jan/20 7:10 AM;sykesm;Stale;;;","23/Jan/20 7:10 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
network_setup.sh not shutdown CouchDB docker compose file,FAB-6525,21706,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,Nate_Y,Nate_Y,09/Oct/17 2:45 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,09/May/18 6:10 PM,,,,,,,v1.2.0,,,fabric-samples,,,,0,,,,,,,"The networkDown funtion in network_setup.sh does not shutdown CouchDB docker compose file.

function networkDown () \{
 docker-compose -f $COMPOSE_FILE down

#When network_setup.sh up with CouchDB option, we need to run the following line.

{color:#ff0000}#docker-compose -f $COMPOSE_FILE_COUCH down{color}

#Cleanup the chaincode containers
 clearContainers

#Cleanup images
 removeUnwantedImages

 # remove orderer block and other channel configuration transactions and certs

rm -rf channel-artifacts/*.block channel-artifacts/*.tx crypto-config
 }",,luomin,Nate_Y,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyitr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,luomin,Nate_Y,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 3:15 PM;luomin;https://gerrit.hyperledger.org/r/#/c/14623/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Perform validation (incl. security validation) of collection configuration supplied at deploy/upgrade time,FAB-6526,21707,30231,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mne,ales,ales,09/Oct/17 4:39 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jun/18 11:45 PM,,,,,,,v1.2.0,,,fabric-peer,,,,0,,,,,,,"Possible checks include:
 * make sure that the orgs listed are even part of the channel
 * make sure that the signature policy is meaningful (only consists of ORs)
 * ...?",,ales,denyeart,elli-androulaki,mne,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwt73:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,ales,denyeart,elli-androulaki,mne,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Oct/17 4:40 PM;ales;[~yacovm] [~mne] [~mathiasb303] [~ellaki] did I miss any check?;;;","09/Oct/17 4:47 PM;yacovm;I cannot answer this question without knowing how the collection is configured. 
If it's configured by simply a list of MSP-IDs it's totally different vs. if it's configured by a string that defines a policy, etc. ;;;","11/Oct/17 12:46 AM;mne;added that the signature policy should be meaningful;;;","12/Oct/17 12:53 AM;ales;Check that all names in the collection package are unique?;;;","03/May/18 10:50 PM;denyeart;Moved under the v1.2 SideDB epic.

See comment in https://gerrit.hyperledger.org/r/#/c/21037/4/core/scc/vscc/validator_onevalidsignature.go;;;","22/May/18 9:25 PM;denyeart;Note that latest collection validation logic starts here:

[https://github.com/hyperledger/fabric/blob/master/core/handlers/validation/builtin/validation_logic.go#L504-L518]

See validateRWSetAndCollection() function and the comment:

// TODO: FAB-6526 - to add validation of the collections object

[~elli-androulaki] [~angelo.decaro] [~ales] Could you do a final collection validation review from security perspective?;;;","23/May/18 5:51 PM;elli-androulaki;[~mne] is taking this on!;;;","24/May/18 8:56 PM;mne;https://gerrit.hyperledger.org/r/#/c/22253/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use the web to config the channel configuration,FAB-6527,21708,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,asaningmaxchain,asaningmaxchain,09/Oct/17 5:25 PM,23/Jan/20 7:11 AM,28/Oct/23 3:01 AM,23/Jan/20 7:11 AM,,,,,,,,,,fabric-orderer,fabric-tools,,,0,stale-item,,,,,,"when the orderer starts,it need the genesis block for the configuration,it defines the config information about the fabric,so i think it's a good advice to provide more convenience way to see the config.i think that using the web to reconfig channel config is a good method.",,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyitz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:11 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fetching config block from Orderer using TLS fails,FAB-6528,21710,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,MShakeri,MShakeri,09/Oct/17 9:25 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Oct/17 7:58 PM,v1.0.1,,,,,,Not a Bug,,,fabric-peer,,,,0,won't-fix,,,,,,"I try to get config block from orderer using: 
{code:java}
peer channel fetch config config_block.pb -o 127.0.0.1:7050 -c testchainid --tls true --cafile $CAFILE{code}
here is the error:

{code:java}
trailing args detected  
{code}
Could this be the source of bug?
 [https://github.com/hyperledger/fabric/blob/release/peer/channel/fetchconfig.go#L60]",,denniskuhnert,jeffgarratt,MShakeri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiu7:",,,,,,,,,,,,,,,,,,,,,,denniskuhnert,jeffgarratt,MShakeri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 4:48 AM;jeffgarratt;[~MShakeri] I have verified this command works given the sample below...

CORE_PEER_LOCALMSPID=peerOrg0 CORE_PEER_MSPCONFIGPATH=/var/hyperledger/bddtests/volumes/peer/$COMPOSE_PROJECT_NAME/pe
er0/localMspConfig peer channel fetch config b.block -c com.acme.blockchain.jdoe.channel1 -o 172.18.0.2:7050 --tls --cafile /var/hyperledger/bddtests/volumes/orderer/$COMPOSE_PROJECT_NAME/orderer0/localMspConfig/cacerts/ordererO
rg0.pem --logging-level DEBUG --ordererTLSHostnameOverride orderer0

Can you verify you are passing the parameters correctly.  You do not need the 'true' after --tls as well.  Will close this early next week unless you wish to keep open.;;;","27/Oct/17 7:02 PM;MShakeri;Thank you [~jeffgarratt] for your comment.

I upgraded to Fabric 1.0.3 and now I get FORBIDDEN error for ""testchainid"".

And if I use my created channel id (As you have in your example) then it works.

I was following [Fabric documentation |http://hyperledger-fabric.readthedocs.io/en/latest/configtxlator.html]which looks like out of sync with source code. Or am I missing something? This testchainid is a bit annoying to understand what is really going on.

 

ps: You can close this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - update fabric-release job with latest tag 1.0.3,FAB-6530,21715,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,09/Oct/17 11:20 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Oct/17 4:16 AM,v1.0.3,,,,,,v1.0.4,,,fabric-ci,,,,0,fabric-ci,,,,,,update fabric-release job ci scripts with latest release tag 1.0.3.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiuv:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 4:16 AM;rameshthoomu;Patch has been updated and merged. https://gerrit.hyperledger.org/r/#/c/14327/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable jsdk1.0.0-fabric_latest-x86_64 CI job from fabric-sdk-java CI jobs,FAB-6531,21716,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,09/Oct/17 11:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Oct/17 4:17 AM,v1.0.3,,,,,,v1.0.4,,,fabric-ci,,,,0,fabric-ci,,,,,,"Description: Disable jsdk1.0.0-fabric_latest-x86_64 CI job from fabric-sdk-java CI jobs

jsdk1.0.0-fabric_latest-x86_64 CI job execute tests by fetching the fabric-sdk-java 1.0.0 release tag on latest fabric commits. As per [~rickr] this change is not required to keep in fabric-sdk-java CI jobs as this execution should work for every fabric change not on fabric-sdk-java.

Disable this job from fabric-sdk-java and include this in fabric jobs.

 ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiv3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 4:17 AM;rameshthoomu;Patch has been submitted and merged. https://gerrit.hyperledger.org/r/#/c/14329/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Node JS chain,FAB-6532,21717,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 11:32 PM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,Document Node JS chain.  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyivb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Connection Profile,FAB-6533,21718,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Jan/18 4:08 AM,,,,,,,,,,fabric-docs,,,,0,release-planning-1.1,,,,,,"Document Connection Profile.

Edits are required to [https://fabric-sdk-node.github.io/tutorial-network-config.html] .",,joe-alewine,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-808,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyivj:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 4:08 AM;joe-alewine;Here: https://fabric-sdk-node.github.io/tutorial-network-config.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Node.js SDK typescript support,FAB-6534,21719,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,Clayton Sims,Clayton Sims,10/Oct/17 12:38 AM,30/Jul/19 11:59 AM,28/Oct/23 3:01 AM,30/Jul/19 11:59 AM,,,,,,,,,,fabric-docs,,,,1,Release-planning-1.1,,,,,,,,kosullivan_sita,mastersingh24,pdina,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwu0v:",,,,,,,,,,,,,,,,,,,,,,kosullivan_sita,mastersingh24,pdina,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Encryption library,FAB-6535,21720,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:39 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 11:32 PM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,Document Encryption library,,joe-alewine,levinkwong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyivr:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,levinkwong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 12:36 AM;joe-alewine;In docs here:

http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html#chaincode-encryption;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Attribute-based Access Control,FAB-6536,21721,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Jan/18 12:36 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,Document Attribute-based Access Control,,fredbi,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyivz:",,,,,,,,,,,,,,,,,,,,,,fredbi,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 7:41 PM;fredbi;Hello.

I believe documents (Fabric-CA and Fabric attribute handling API) should clearly define positionning re SPKI specifications.

I can see in current Fabric CA doc that there is now a possibility to enrich ecerts with attributes (big wow!), but no clear view or roadmap regarding SPKI (e.g. producing certificates with only authorization attributes);;;","27/Jan/18 12:36 AM;joe-alewine;In the fabric-ca docs here:

http://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#attribute-based-access-control;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Chaincode API to retrieve creator cert,FAB-6537,21722,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Jan/18 4:07 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,fredbi,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6089,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiw7:",,,,,,,,,,,,,,,,,,,,,,fredbi,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 4:07 AM;joe-alewine;Can be found here: https://github.com/hyperledger/fabric/blob/master/core/chaincode/lib/cid/README.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Performance Improvements,FAB-6538,21723,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:44 AM,30/Jul/19 10:13 AM,28/Oct/23 3:01 AM,30/Jul/19 10:13 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,ChristopherFerris,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiwf:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 11:36 PM;ChristopherFerris;What is the point of this? We don't need marketing, we just need to be sure that we are documenting changes that affect the end user's UX. We can capture performance improvement ""documentation"" in the release notes.;;;","12/Oct/17 5:33 AM;Clayton Sims;I added this, but not necessarily intending it to go into read the docs.   I think it belongs 'somewhere'.  Maybe we are not ready with a lot of details 'right now'.   At some point I would expect consumers would want more info so they can know what to expect . 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document filtered block event with minimal information,FAB-6539,21724,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:46 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Jan/18 12:38 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5481,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiwn:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 12:38 AM;joe-alewine;In docs here:

http://hyperledger-fabric.readthedocs.io/en/latest/peer_event_services.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Deliver Service for Events,FAB-6540,21725,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:47 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Jan/18 12:39 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6911,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiwv:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 12:39 AM;joe-alewine;In docs here:

http://hyperledger-fabric.readthedocs.io/en/latest/peer_event_services.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document CRL for Fabric CA,FAB-6541,21726,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Jan/18 12:39 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,joe-alewine,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyix3:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/18 12:39 AM;joe-alewine;In docs here:

https://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#generating-a-crl-certificate-revocation-list;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Dynamically update Fabric CA config,FAB-6542,21727,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:49 AM,30/Jul/19 11:03 AM,28/Oct/23 3:01 AM,30/Jul/19 11:03 AM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyixb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Chaincode lifecycle via channel config,FAB-6543,21728,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 3:18 AM,,,,,,,WON'T FIX,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6042,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyixj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document upgrade and compatibility,FAB-6544,21729,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,Clayton Sims,Clayton Sims,10/Oct/17 12:51 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Mar/18 10:16 PM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,,,denyeart,jeffgarratt,joe-alewine,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyixz:",,,,,,,,,,,,,,,,,,,,,,denyeart,jeffgarratt,joe-alewine,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 3:46 AM;denyeart;We compiled upgrade documentation objectives with SVT team:

High level upgrade steps for Fabric, Fabric CA, dependency docker containers, binaries, SDKs.
 Required versus recommended sequencing of upgrade steps - major components, and nodes within network and orgs.
 Consumer friendly instructions. e.g. how exactly to upgrade capabilities? how to delete chaincode images?
 Compatibility matrix for all components. e.g. is any mix of 1.0 and 1.1 components supported, or are there limitations such as 1.1 SDK cannot work with 1.0 Fabric?

specific concerns:

Jeff's current kafka service upgrade is not a rolling upgrade of orderer service.
 We should check kafka website for recommendations, and combine with orderers upgrade process steps
 and rework with jeff

Jeff restarts peer after upgrading its binary, not the whole the image;
 it is not clear: does that include env variables setting them at runtime behind the scenes?;;;","07/Dec/17 6:04 AM;jeffgarratt;Created google doc [lhttps://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?usp=sharing|https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?usp=sharing];;;","26/Jan/18 10:12 PM;denyeart;Upgrade was documented for alpha under FAB-6122 [https://gerrit.hyperledger.org/r/#/c/17223/] .

The document will need some more details added prior to GA.;;;","27/Jan/18 12:40 AM;joe-alewine;Initial draft for this in docs:

http://hyperledger-fabric.readthedocs.io/en/latest/upgrade_to_one_point_one.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Document Private channel data (aka Side DB, Collection)",FAB-6545,21730,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,pandrejko,Clayton Sims,Clayton Sims,10/Oct/17 12:53 AM,12/Jun/20 12:30 AM,28/Oct/23 3:01 AM,25/Jun/18 10:10 PM,,,,,,,v1.2.0,,,fabric-docs,,,,0,Documentation,,,,,,"As per https://jira.hyperledger.org/browse/FAB-5096

Design doc: https://docs.google.com/document/d/1ORt3HFE13gnq204lXNp6i1BpMLMm-RAKVts8cH50kK4/edit?usp=sharing",,denyeart,MichaelWang,pandrejko,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,FAB-9306,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfj:",,,,,,To Do,,,,,,,,,,,,,,,,denyeart,MichaelWang,pandrejko,SjirNijssen,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/18 5:15 AM;pandrejko;Met with Dave this afternoon to discuss types of content we need to provide here:

 
 Concept
 1.1 New Key Concept Topic ('Private Data') (FAB-10447)
 1.2 Update Key concepts > Fabric Model - Privacy through channels << Introduce it here as a way to share private data with a subset of peers rather than everybody.  Only hash gets distributed...... (FAB-10446)

1.3 Update the Ledger Key Concept topic to mention private data (FAB-10449)

1.5 Update the Channel Key Concept topic to mention private data (FAB-10448)

1.5 Add Collection and Private Data to the Glossary (FAB-10431)
  
 Tasks
 2.1 —> New Collections Tutorial (FAB-9306)
 2.2 —> Update  Chaincode for Developers Tutorial with new chaincode APIs & link to source code for them to read rather than replicating that information in the doc [TBD]
 2.3 —> Update Commands > Peer Chaincode Instantiate (should be generated automatically) to include new flag (FAB-10436)
  
 Reference
 3 —> Architecture ref (under the covers details) (FAB-10450)

 ;;;","16/May/18 9:21 PM;pandrejko;From D. Enyeart this morning regarding content for SideDB:

You could start from the slides attached to fab-1151 and the playback demo([https://ibm.ent.box.com/s/j4vkrfcsajoouy85vob9w5aznfwe5vfn)].  plenty of raw content there to get doc started.;;;","29/May/18 7:16 PM;denyeart;[~pandrejko] [~manish-sethi] [~C0rWin] [~yacovm] I have drafted private data documentation: 

[https://docs.google.com/document/d/1sdfSIyLvoVW_32LXipm8sgs87oCE7D7bK2eCC0sLH9s/edit?usp=sharing]

We can do initial review there before I push via CR.

[~pandrejko] Can you think about how the content should be split between the main topic and the tutorial?

 ;;;","29/May/18 8:10 PM;yacovm;I went over it and added my suggestions... feel free to adopt or reject the suggestions you want.;;;","29/May/18 9:45 PM;pandrejko;[~rlalgowdar] [~rajeshlc] Barry said you are testing sideDB. Thought you might be interested in Dave's initial doc link above.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Fine-grained ACL,FAB-6546,21731,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joe-alewine,Clayton Sims,Clayton Sims,10/Oct/17 12:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Jun/18 9:41 AM,,,,,,,v1.2.0,,,fabric-docs,,,,0,Documentation,Release-planning-1.1,,,,,Doc this change/feature: https://jira.hyperledger.org/browse/FAB-8788,,joe-alewine,muralisr,nagap,pandrejko,SjirNijssen,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3621,,,,,,,,,,,,,,,,,,,,,FAB-8727,,,,,,,,,"1|hzz2bb:",,,,,,May2018 - Lifecycle & Config,,,,,,,,,,,,,,,,joe-alewine,muralisr,nagap,pandrejko,SjirNijssen,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/May/18 9:19 PM;muralisr;Fabric exercises access control (ACL) at various access points in the system. Some examples of these are
 * ACL to allow a proposal request to the peer
 * ACL to allow a query to the ""query system chaincode""
 * ACL to allow events to be sent to client

From the point of view of ACL, an access point is treated as a ""resource"". A policy *(<refer to policy documentation here>)* is attached to each resource on per-channel basis. The access control for the identity associated with the request is evaluated against the policy associated with the resource. A policy can be associated with more than one resource.

Resources and the default policy associated with them are enumerated as properties under the ""Application:ACLs"" section in configtx.yaml. They can be overridden on a per-channel basis.
{code:java}
Note - sampleconfig/configtx.yaml contains default policy mapping for all the resources currently supported.{code}
 

Rest of this document use the configtx.yaml under ""sampleconfig"" directory to illustrate use of resource policies.

If you would like to modify the ""peer/Propose"" default from ""/Channel/Application/Writers"" to another policy for SampleSingleMSPChannel:
{code:java}
SampleSingleMSPChannel:
    Consortium: SampleConsortium
    Application:
        <<: *ApplicationDefaults
        ACLs:
            <<: *ACLsDefault
            peer/Propose: /Channel/Application/MyPolicy
    Organizations:
        - *SampleOrg
    Policies:
        <<: *ApplicationDefaultPolicies
        MyPolicy:
            Type: Signature
            Rule: ""OR('SampleOrg.admin')""{code}
""MyPolicy"" is defined on the ""SampleSingleMSPChannel"" scope and is not visible to other channels.

One could also define ""MyPolicy"" globally under ""Application:Policies"" and use that in other channels to override default resource mapping. For instance, assume ""MyPolicy"" is added to ""Application:Policies"" globally
{code:java}
# Policies defines the set of policies at this level of the config tree
 # For Application policies, their canonical path is
 # /Channel/Application/<PolicyName>
 Policies: &ApplicationDefaultPolicies
     Readers:
         Type: ImplicitMeta
         Rule: ""ANY Readers""
     Writers:
         Type: ImplicitMeta
         Rule: ""ANY Writers""
     Admins:
         Type: ImplicitMeta
         Rule: ""MAJORITY Admins""
     MyPolicy:
         Type: Signature
         Rule: ""OR('SampleOrg.admin')""{code}
""MyPolicy"" can then be used in channel definitions. For example, ""peer/Propose"" is overridden to use the global ""MyPolicy""
{code:java}
SampleSingleMSPChannel:
     Consortium: SampleConsortium
     Application:
         <<: *ApplicationDefaults
         ACLs:
             <<: *ACLsDefault
              peer/Propose: /Channel/Application/MyPolicy
     Organizations:
         - *SampleOrg{code};;;","11/May/18 6:33 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/21447/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Distinguish MSP identity types (OU support),FAB-6547,21732,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,adc,Clayton Sims,Clayton Sims,10/Oct/17 12:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Feb/18 10:17 PM,,,,,,,,,,fabric-docs,,,,0,Release-planning-1.1,,,,,,"FAB-5664 enhances the MSP infrastructure to tell apart fabric network nodes as clients, peers or orderers. In order to leverage this functionality, fabric needs to be configured in the appropriate way. Therefore, proper documentation and examples are needed.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7750,,,,,FAB-5664,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyixr:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 10:17 PM;denyeart;Done in FAB-7750.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add the tests written using typescript to test the typings,FAB-6548,21733,19895,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,ksachdeva,ksachdeva,ksachdeva,10/Oct/17 1:33 AM,30/Oct/19 1:41 AM,28/Oct/23 3:01 AM,30/Oct/19 1:41 AM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,"Suggest writing them as unit tests that stub out the underlying ""raw"" SDK APIs (using sinon) so that the tests can ensure that the ts declarations are done properly and underlying SDK APIs are invoked as expected.",,AdnanChoudhury,heatherp,ksachdeva,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiy7:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,heatherp,ksachdeva,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/19 1:41 AM;heatherp;Hi, I've been working through the node sdk backlog with the maintainers and as this was raised some time ago, I'm closing.   The high-level node sdk APIs have been available for some time, and this issue may be covered by functionality provided there: https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html  Please re-open if this issue is still affecting you, and the functionality is not available in the low-level or high-level node sdk APIs, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] add scm section in fabric-sdk-rest verify and merge CI jobs,FAB-6549,21735,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Oct/17 3:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Oct/17 4:16 AM,,,,,,,v1.0.4,,,fabric-ci,,,,0,fabric-ci,,,,,,Add SCM section in fabric-sdk-rest verify and merge job to fetch code changes dynamically from each branch. Existing configuration only fetches code from master branch not from the dev branch. This is causing few issues while checking out the patches.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiyf:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 4:16 AM;rameshthoomu;Patch has been submitted and merged. https://gerrit.hyperledger.org/r/#/c/14333/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a sample application using typescript,FAB-6550,21736,19895,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ksachdeva,ksachdeva,ksachdeva,10/Oct/17 5:11 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Dec/17 11:25 PM,,,,,,,,,,fabric-samples,,,,0,,,,,,,,,AdnanChoudhury,denyeart,ksachdeva,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9033,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiyn:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,ksachdeva,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Oct/17 8:05 AM;ksachdeva;Submitted - https://gerrit.hyperledger.org/r/c/14383/;;;","11/Oct/17 11:43 PM;AdnanChoudhury;For some reason, the above link didn't work, but this one worked:
https://gerrit.hyperledger.org/r/#/c/14383/;;;","28/Nov/17 1:40 AM;AdnanChoudhury;Hi [~ksachdeva], are there plans to update the sample app, given Jim's comments?;;;","28/Nov/17 3:20 AM;ksachdeva;Hi [~AdnanChoudhury],

No, I have no plans to do that. A sample application should be self sufficient. His comment is about duplication of the assets citing that it creates more maintenance over head. Here is my rational for keeping it this way -

Normally, the data files rarely change so the maintenance argument will rarely apply. Also changing the data files for one project would impact both so in a way it is better to have a copy. Some times too much sharing create more problems then it solves. Nevertheless, if required it can be done as a separate change set. I would need more mods to a working tree to accomodate this suggestion (with which I am not convinced in the first place). 

Including the typescript folder inside the javascript folder is also not appropriate as then the users looking for typescript example will not see it. Also the typescript sample (at present) is a rough port of the javascript sample however it does not need to be and should have its own evolution and guidelines. 

Regards

Kapil

 ;;;","29/Nov/17 11:57 AM;denyeart;[~ksachdeva] Thanks for the detailed explanation of your rationale.
[~harrisob@us.ibm.com] [~jimthematrix] What is your opinion?  [~AdnanChoudhury] is attempting to use the sample in system tests therefore a final decision is required for the sample approach.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BTL (block-to-live) policy for pvt data purge,FAB-6552,21738,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,10/Oct/17 10:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/May/18 3:30 AM,,,,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,,"Define a BTL policy for purging the pvt data. This should be specified and managed via a collection specific configuration transaction. However, since the collection related configurations changes would be added to the config transaction at a later point in time, for now, we can manage the BTL policies via core.yaml configurations.

yaml driven configurations is not encouraged to use only in the test environments - primarily because, they are prone to change in an inconsistent manner and could cause inconsistency across replay of transactions (even on a single peer).",,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwszb:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a bookkeeping provider,FAB-6553,21739,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,10/Oct/17 11:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/May/18 3:30 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,"Pruning pvt data feature needs to maintain bookkeeping for the schedules related to purges. Going forward, other aspects of pvtdata (such as missing data) would require some bookkeeping. Use a leveldb based store for maintaining bookkeeping.",,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwszj:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expiry schedule keeper for pvtstate,FAB-6554,21740,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,10/Oct/17 11:08 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/May/18 3:30 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,"When the pvt state is updated by a block commit, based on the latest BTL related to the updated data items in different collections, maintain the schedule when these items expires and hence require purging.",,manish-sethi,ScottAllan,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwszr:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,,manish-sethi,ScottAllan,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Private state purge management,FAB-6555,21741,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,10/Oct/17 11:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/May/18 3:30 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,Purge pvt data from the pvt statedb upon expiry of the data items based on the BTL policy. The purge management should allow ledger to coordinate purging with the block commit to maintain a consistent view of the state for transaction simulations.,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwszz:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance KVLedger for enabling purge of expired pvtdata from latest state,FAB-6556,21742,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,10/Oct/17 11:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/May/18 3:31 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,Enhance KVLedger to use the components developed under related subtasks (FAB-6552 through FAB-6555) in order to enable the purge of pvt data based on BTL based expiry,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwt0f:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed Building Fabric due to ltdl.h header file missing,FAB-6557,21743,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,10/Oct/17 2:47 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,12/Nov/17 8:01 PM,,,,,,,v1.1.0,,,fabric-build,,,,0,build-system,Documentation,,,,,"ltdl.h header file missing error is reported when building fabric

Copy of the error msg:

/src/github.com/hyperledger/fabric$ make dist-clean all

-----------------------------------------------------------------------------------------

github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11
 vendor/github.com/miekg/pkcs11/pkcs11.go:29:18: fatal error: ltdl.h: No such file or directory
 compilation terminated.
 Makefile:233: recipe for target 'build/bin/peer' failed
 make: *** [build/bin/peer] Error 2

-----------------------------------------------------------------------------------------

 

Actually, what we need here is to install ""libtool"". 

Similar error was reported and solved in previous Issue:

e.g. -FAB-2684-, -FAB-2854-

However, their solution as adding library install & checking command into some pre-existed files are no longer available in current documentations.

 

That is why i open this issue and try to add the required info. for libtool.

e.g. you can add libtool and solve the error by

#apt-get install -y build-essential git make curl unzip g++ libtool

But it is better to have it in document.",ubuntu 16.04,dililmt,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyiz3:",,,,,,,,,,,,,,,,,,,,,,dililmt,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 11:03 AM;luomin;https://gerrit.hyperledger.org/r/#/c/14529/;;;","08/Nov/17 3:39 PM;luomin;Hi, [~joe-alewine] , Appreciate very much for a review on [https://gerrit.hyperledger.org/r/#/c/14529/];;;","12/Nov/17 5:21 PM;luomin;Hi, [~mastersingh24], Appreciate very much for a review on [https://gerrit.hyperledger.org/r/#/c/14529/];;;","23/May/18 10:50 AM;dililmt;I have installed libtool, please refer to the following information.

Apt-get install -y build-essential git make curl unzip g++ libtool

Reading package lists... Done

Building dependency tree Reading state information... Done

Build-essential is already the newest version (12.1ubuntu2).

Libtool is already the newest version (2.4.6-0.1).

Unzip is already the newest version (6.0-20ubuntu1).

Git is already the newest version (2:2.15.1-1avh1~zesty1).

Make is already the newest version (4.1-9.1).

Curl is already the newest version (7.52.1-4ubuntu1).

G++ is already the newest version (4:6.3.0-2ubuntu1). 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

*However, why enter the fabric-ca folder and execute the command make fabric-ca-client or make fabric-ca-server still has the following error.*

*root@ubuntu:/home/user/go/Go/src/github.com/hyperledger/fabric-ca# make fabric-ca-client*

*Building fabric-ca-client in bin directory ...*
 * 
 ## github.com/hyperledger/fabric-ca/vendor/github.com/miekg/pkcs11*
*vendor/github.com/miekg/pkcs11/pkcs11.go:26:18: fatal error: ltdl.h: No such file or directory*
  *#include <ltdl.h>*
                   *^*
*compilation terminated.*

*Please help me 。thank you!*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make metrics options configurable,FAB-6558,21744,15982,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,10/Oct/17 4:47 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 8:32 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,Make metrics options configurable,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyizb:",,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move away from the singleton mode in MSP,FAB-6559,21745,,Story,To Do,FAB,Fabric,software,denyeart,,,High,,mastersingh24,angelo.decaro,angelo.decaro,10/Oct/17 5:14 PM,25/Oct/19 7:06 PM,28/Oct/23 3:01 AM,,v1.0.3,,,,,,v2.1.0,,,fabric-crypto,,,,1,hygiene,Security,,,,,"Move away from the singleton model at x509-based MSP to use factory.GetBCCSPFromOpts function instead. Default opts should be allowed as well.
",,angelo.decaro,denyeart,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9066,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymdb:",,,,Unset,,Next Items - Hygiene,,,,,Unset,,,,,,,,,,,angelo.decaro,denyeart,guoger,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 8:48 PM;angelo.decaro;[~mastersingh24], do you want to elaborate a bit more on this item. I remember you proposed this in a context of a change-set but then I forgot the details. Did you mean to have a way to specify the BCCSP configuration at the MSP configuration?

[~kchristidis] FYI;;;","17/Nov/17 7:21 AM;denyeart;Since 1.1 is closing down soon, I've tagged as 1.2. ;;;","14/Jul/18 10:56 PM;mastersingh24;I'll try to incrementally get this done as part of v1.3;;;","14/May/19 10:59 AM;guoger;Is this being actively worked on? or is it at all part of v2 plan? [~mastersingh24];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proper enforcement of txid uniqueness on the validator,FAB-6560,21746,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ales,ales,10/Oct/17 5:15 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,29/Nov/17 10:03 PM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,"Fabric promises to enforce txid uniqueness, but the control put in place to honor that is broken:

 
{noformat}
	for tIdx, d := range block.Data.Data {
		if d != nil {
			if env, err := utils.GetEnvelopeFromBlock(d); err != nil {
				logger.Warningf(""Error getting tx from block(%s)"", err)
				txsfltr.SetFlag(tIdx, peer.TxValidationCode_INVALID_OTHER_REASON)
			} else if env != nil {
                                   ....
					// Check duplicate transactions
					txID := chdr.TxId
					if _, err := v.support.Ledger().GetTransactionByID(txID); err == nil {
						logger.Error(""Duplicate transaction found, "", txID, "", skipping"")
						txsfltr.SetFlag(tIdx, peer.TxValidationCode_DUPLICATE_TXID)
						continue
					}
                                   ....
{noformat}

 

The validator code only checks for duplicate txids with respect to those already committed in the ledger and not those that are in the same block, so a block may contain >1 tx with the same id, and they would all be accepted as valid.

 

The validator code should be changed to also take into consideration txid duplicates within the tx.",,ales,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj0f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 10:03 PM;elli-androulaki;https://gerrit.hyperledger.org/r/#/c/14631/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend CLI to introduce support to specify collection configuration on cc deploy,FAB-6563,21754,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,10/Oct/17 9:25 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,22/Dec/17 6:40 AM,,,,,,,,,,,,,,0,,,,,,,,,ales,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5082,,,,,,,,,"1|hzyj13:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Oct/17 12:08 AM;denyeart;[https://gerrit.hyperledger.org/r/#/c/14517/]

[https://gerrit.hyperledger.org/r/#/c/14371/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interest BLOCKORFILTEREDBLOCK for SDKs,FAB-6565,21758,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,rickr,rickr,11/Oct/17 4:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 1:05 AM,,,,,,,v1.1.0,v1.1.1,,fabric-peer,,,,0,,,,,,,"The design right now is to register for BLOCK or FILTEREDBLOCK for the peer eventing service.  You can do both but from the SDKs perspective this is not really a valid use case.   Depending on ACLs the user may not have right to get BLOCK so it could be rejected.  This requires the SDK to either try the other which is a waste or have the USER via out of bounds information know what type they have access to.  
 I think the SDK should have a Interest BLOCKORFILTEREDBLOCK which the PEER would deliver BLOCK events if that was allowed and if not would deliver FILTEREDBLOCK events.",,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj1r:",,,,,,,,,,,,,,,,,,,,,,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/17 1:09 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14657/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move ACL resources from config/resources to resourcesconfig,FAB-6566,21759,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Oct/17 5:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 5:22 AM,,,,,,,v1.1.1,,,fabric-peer,,,,0,,,,,,,"The channel config was moved from config/channel to channelconfig, and the resources config should be moved to match.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj1z:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move ACL deeper into resources tree,FAB-6567,21760,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,11/Oct/17 5:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 5:22 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj27:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Samples - Update the fabcar with new easier flow,FAB-6568,21763,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,11/Oct/17 7:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 3:47 AM,,,,,,,v1.0.5,v1.1.0,,fabric-docs,fabric-samples,,,0,Usability,,,,,,"Update the fabcar flow with more comments and make the flow for segmented where only one thing is done in a sample file
 * admin enroll
 * register and enroll new user
 * invoke
 * query",,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6902,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj2f:",,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,release-1.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Oct/17 7:11 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/14395 (master)
https://gerrit.hyperledger.org/r/15049 (release);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix the broadcast/deliver dir,FAB-6570,21765,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,asaningmaxchain,asaningmaxchain,asaningmaxchain,11/Oct/17 11:32 AM,23/Jan/20 7:11 AM,28/Oct/23 3:01 AM,23/Jan/20 7:11 AM,,,,,,,,,,fabric-orderer,,,,0,stale-item,,,,,,"in the orderer config,it use the broadcastDir and deliverDir to log the serivce trace,but it set to empty string default,",,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj2v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:11 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update maintainer's email,FAB-6571,21766,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,ryjones,ryjones,11/Oct/17 2:21 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 10:28 PM,,,,,,,,,,fabric-docs,,,,0,,,,,,,Srinivasan Muralidharan's email has changed.,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj33:",,,,,,,,,,,,,,,,,,,,,,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI Layer bypasses security,FAB-6572,21767,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jeffgarratt,subbu165,subbu165,11/Oct/17 3:51 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 11:38 PM,,,,,,,,,,fabric-peer,,,,0,chaincode,won't-fix,,,,,"Lets say I have a UI layer which talks to REST layer which again talks to the chaincode. I have to secure all possible entries here. Using FABRIC CA I had configured security and set up the required MSP folder. Through UI and REST its properly working and doesn't allow any one to invoke the chaincode without proper security credentials.

But lets say I execute any transaction like Invoke or query, through CLI Commands with out providing any security credentials its still runs fine without any complains which is a security breach.

I'm using Fabric V1.0 Beta version as of now. ",,jeffgarratt,mastersingh24,subbu165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj3b:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,mastersingh24,subbu165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 7:42 PM;mastersingh24;[~subbu165] - I assume you mean you are using the peer CLI?   You should be aware that the peer CLI actually does use credentials exactly the same way as the peer.  I'd like to gather some more details before closing, but I think this is a simple misunderstanding.;;;","27/Oct/17 3:44 AM;jeffgarratt;I concur with [~mastersingh24], do you have any more comments [~subbu165]?  If not will plan to close this early next week.;;;","01/Nov/17 11:37 PM;jeffgarratt;Going to go ahead and close.. Reopen if you feel necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate SimpleCollectionStore to be used by gossip private data,FAB-6574,21769,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,11/Oct/17 6:40 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Dec/17 6:39 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Currently gossip uses a no-op collection store that returns ""true"" for every policy query.
Now that [~ales] has implemented an implementation of a collection store, we can move to start using it.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5082,,,,,,,,,"1|hzyj3r:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove versioned tests in core/comm package,FAB-6576,21771,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,11/Oct/17 7:25 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Oct/17 8:04 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,"As part of the initial transition to Go 1.9, version dependent tests were introduced in the core/comm package.  Now that the builds are fully Go 1.9 enabled, we can remove the non Go 1.9 tests",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj47:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Oct/17 7:33 PM;mastersingh24;https://gerrit.hyperledger.org/r/14417;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove .github folder from project repo,FAB-6578,21775,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,11/Oct/17 10:51 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,27/Oct/17 5:36 AM,v1.0.3,,,,,,v1.1.0,,,,,,,0,cleanup,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";11/Oct/17 10:56 PM;kchristidis;180",,180,0,180,100%,180,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj4v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Oct/17 10:56 PM;kchristidis;In review: [https://gerrit.hyperledger.org/r/c/14423/]

(It's a tough job but somebody's gotta do it.);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend to support more than 1 M blocks,FAB-6579,21780,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,11/Oct/17 11:49 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,17/Oct/17 11:48 AM,,,,,,,WON'T FIX,,,fabric-ledger,,,,0,,,,,,,"Currently, the local block files number is limited to 1 M.

000,000~999,999

After discussion with Jonathan, we need to extend to support more than 1 M block files, while keep compatible with old versions.

000,000~999,999

10,000,000~...

 ",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj5r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 8:48 AM;baohua;https://gerrit.hyperledger.org/r/#/c/14439/;;;","17/Oct/17 11:48 AM;baohua;Manish Sethi suggests this is not necessary, hence close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Versioning of various configuration files,FAB-6580,21781,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Asara,Asara,12/Oct/17 12:21 AM,23/Jan/20 7:11 AM,28/Oct/23 3:01 AM,23/Jan/20 7:11 AM,v1.0.0,v1.0.1,v1.0.2,v1.0.3,,,Future,,,fabric-orderer,fabric-peer,fabric-tools,,0,common-components,stale-item,,,,,"It would be nice for the components of Fabric to include the release version in configuration files, as well as a change log for configuration files.

These additions would make management of config files much easier, as well as give administrators insight into what files need updating after each release.",,Asara,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj5z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Asara,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:11 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Idemix - Go SDK,FAB-6585,21786,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,dubovitskaya,dubovitskaya,12/Oct/17 2:43 AM,23/Jan/20 7:11 AM,28/Oct/23 3:01 AM,23/Jan/20 7:11 AM,,,,,,,Future,,,fabric-crypto,fabric-sdk-go,,31/Jan/18 12:00 AM,0,fabric-sdk-go,idemix,stale-item,,,,"This contribution enables signing transactions with Identity Mixer technology using fabric-sdk-go. It provides integration of the Identity Mixer MSP into the client SDK in Go.

This will be included in a post-MVP release only",,denyeart,dubovitskaya,mffrench,raccoonrat,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Idemix - Go SDK,,,,Unset,,,,"1|hzym0n:",,,,Yes,Unset,,,,,,,,,,,,,,,,,denyeart,dubovitskaya,mffrench,raccoonrat,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 1:20 PM;denyeart;Adding Fix Version v1.2, so that this can be considered along with the other Idemix features, but Go sdk support is lower priority than java sdk support.;;;","23/Jan/20 7:11 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports failover selection,FAB-6587,21788,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,12/Oct/17 3:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Nov/17 11:26 PM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"PTE supports peer/orderer failover with round-robin.

PTE can add an option, FOSelect, in the user input json to allow user to select failover method, such as random vs round robin.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyj7b:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,purge-pd,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,main,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,main-emeritius,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,correct-nodeenv-version,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorporate the fabric-ca ACL test into CI,FAB-6588,21789,21291,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Oct/17 3:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Oct/17 1:02 AM,,,,,,,,,,,,,,0,,,,,,,This needs to be integrated into the fabric-test runtest script.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-96,FABC-539,,,,,,,,,,,,,,,,,,,,,,,,FAB-6490,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj7j:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor eventhub and channel service to use common event infrastructure,FAB-6591,21792,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,12/Oct/17 5:23 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 1:47 PM,,,,,,,Future,,,fabric-peer,,,,0,,,,,,,,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5695,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj87:",,,,,,,,,,,,,,,,,,,,,,denyeart,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 1:47 PM;denyeart;This is not a bug, and channel service likely will not be utilized. Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sync docs between release and master branches,FAB-6592,21793,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,12/Oct/17 5:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Oct/17 7:12 PM,,,,,,,v1.0.4,,,fabric-docs,,,,0,,,,,,,"We currently publish docs from master as latest.  But with 1.1 on the horizon, we need to version our docs in RTD which can only use branches and tags.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj8f:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Oct/17 2:32 PM;mastersingh24;https://gerrit.hyperledger.org/r/14451;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - update setuptools to 36.5.0 lftools-install.sh (relang-global-jjb),FAB-6595,21796,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,rameshthoomu,rameshthoomu,12/Oct/17 10:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 1:05 AM,,,,,,,v1.0.4,,,fabric-ci,,,,0,fabric-ci,,,,,,"s390x Build are failing in CI with the below error
{code:java}
 00:17:48.077 Not overwriting existing python script /tmp/v/lftools/bin/python (you must use /tmp/v/lftools/bin/python2)

00:17:52.177 Command ""python setup.py egg_info"" failed with error code 1 in /tmp/pip-build-aySYu8/cryptography/
00:17:52.322 Build step 'Execute a set of scripts' changed build result to FAILURE
00:17:52.322 Build step 'Execute a set of scripts' marked build as failure
{code}
update required on setuptool version. Successfully worked with 36.5.0

 ",Jenkins s390x verify and merge jobs,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyj93:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 11:17 AM;ryjones;https://gerrit.linuxfoundation.org/infra/#/c/6813/;;;","20/Oct/17 1:05 AM;rameshthoomu;this has been updated to newer version and log files are working as expected on z build nodes. This has been tested in sandbox z node. Will submit patch to update on all production z nodes (currently this has been disabled on production z nodes);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restructure the validator code to make it more modular and more easily testable,FAB-6596,21797,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,ales,ales,12/Oct/17 5:11 PM,02/Aug/19 10:44 PM,28/Oct/23 3:01 AM,02/Aug/19 1:06 AM,,,,,,,Future,,,fabric-peer,,,,3,hygiene,,,,,,"In its current shape, the validator code has very long functions, makes many calls to static functions, may do a lot of useless marshalling and is generally hard to test.

This epic tracks the work necessary to have a modular and testable validator.",,ales,C0rWin,denyeart,mastersingh24,muralisr,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj9b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,C0rWin,denyeart,mastersingh24,muralisr,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/17 5:14 PM;ales;[~yacovm] [~jyellick] As discussed with you both during the review of the parallel tx validation, I've created this epic to track all the work needed to refactor the validator to clean it up and make it more readable and testable.;;;","13/Oct/17 9:59 PM;mastersingh24;I'm adding this to the 1.2 candidate list.
I think this is a much needed improvement.
The ideal outcome is that someone should actually be able to implement a Go plugin and replace the validator.  :-);;;","13/Oct/17 10:51 PM;ales;> The ideal outcome is that someone should actually be able to implement a Go plugin and replace the validator. ￼

Agreed! I didn't think about it but as you say it now, it makes absolute sense: the objective should be to have a pluggable validator.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","24/Mar/18 6:14 PM;ales;Refactoring the validator code is important, and it will happen anyway as part of the ESCC/VSCC pluggability work

[~yacovm]: would you agree?;;;","25/Mar/18 5:14 PM;yacovm;Refactoring is not part of my work but it is related, as I expect code changes would need to take place to connect them.

I know that [~C0rWin] is doing some refactoring work in the validator. 
You may want to sync with him.;;;","27/Mar/18 12:42 PM;denyeart;[~ales] Agreed this is an important one, it simply got caught in my bulk move to Future.

As Yacov mentioned, please connect with [~C0rWin] to avoid duplication of work.;;;","27/Mar/18 5:24 PM;C0rWin;Thanks [~denyeart] and [~yacovm] we already got in touch with [~ales] and synced on our effort.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reorganize unmarshalling in the validator,FAB-6597,21798,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,12/Oct/17 5:17 PM,23/Jan/20 7:11 AM,28/Oct/23 3:01 AM,23/Jan/20 7:11 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,"Currently, the validator behaves very poorly when it comes to unmarshalling: the same field is unmarshalled multiple times in the same code path leading to code that is inefficient and hard to maintain. 

This JIRA tracks the work required to unmarshal once all the struct out of a block and then pass around to all validating functions a reference to a struct with appropriate getters.",,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj9j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:11 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set the system channel id in the orderer.yaml,FAB-6598,21799,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,asaningmaxchain,asaningmaxchain,asaningmaxchain,12/Oct/17 5:50 PM,23/Jan/20 7:12 AM,28/Oct/23 3:01 AM,23/Jan/20 7:12 AM,,,,,,,,,,fabric-orderer,,,,0,stale-item,,,,,,add define system channel name field in the fabric orderer config file,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj9r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:12 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sample chaincode using private data collections,FAB-6600,21801,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,12/Oct/17 9:58 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jun/18 10:53 PM,,,,,,,v1.2.0,,,fabric-ledger,,,,0,,,,,,,"h1. New instructions for v1.2:

See fabric-samples sample chaincode at: [https://gerrit.hyperledger.org/r/#/c/22255/]

See execution instructions at: https://jira.hyperledger.org/browse/FAB-10231

 

 
h1. Old instructions from v1.1:

You can test side db private data experimental feature in v1.1.0 and master. To get the experimental feature you will need to build peer yourself and set an environment variable EXPERIMENTAL=true before building.

 

Sample chaincode using private data collections

For the assets from v1.1 timeframe see [https://gerrit.hyperledger.org/r/#/c/14769/9]

 

 *Script for testing private data e2e:*

Make these changes:

 
 */examples/e2e_cli/docker-compose-cli.yaml*

{color:#333333}Update the cli ""command:"" to execute {color}*{color:#34bd26}./scripts/script_marbles_private.sh{color}* {color:#34bd26}instead of *./scripts/script.sh*{color}

 
 */examples/e2e_cli/base/peer-base.yaml*
 {color:#34bd26}       - CORE_LOGGING_LEVEL=INFO{color}
 {color:#34bd26}       - CORE_LOGGING_GOSSIP=DEBUG{color}

       - CORE_PEER_GOSSIP_PVTDATA_TRANSIENTSTOREMAXBLOCKRETENTION=500
 {color:#34bd26}    {color}
 {color:#333333} /examples/e2e_cli/configtx.yaml{color}
 {color:#34bd26}    Application: &ApplicationCapabilities{color}
         # V1.1 for Application is a catchall flag for behavior which has been
 {color:#34bd26}        # determined to be desired for all peers running v1.0.x, but the{color}
 {color:#34bd26}        # modification of which would cause imcompatibilities.  Users should{color}
 {color:#34bd26}        # leave this flag set to true.{color}
 {color:#34bd26}        V1_1: true{color}
 {color:#34bd26}        V1_1_PVTDATA_EXPERIMENTAL: true  {color}
 {color:#34bd26} {color}
 {color:#34bd26} {color}
 make docker-clean docker
  
 cd examples/e2e_cli

./network_setup.sh up mychannel

 
 4 peer network will be up now, and chaincode will be installed.  Do the remaining steps via CLI:

 
 docker exec -it cli bash
  ** 
  
 *+Marblesp+*
 *Instantiate chaincode on org1/peer0*
 peer chaincode instantiate -o [orderer.example.com:7050|http://orderer.example.com:7050/] --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.[example.com/msp/tlscacerts/tlsca.example.com-cert.pem|http://example.com/msp/tlscacerts/tlsca.example.com-cert.pem] -C mychannel -n marblesp -v 1.0 -c '\{""Args"":[""init""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')"" {color:#34bd26}--collections-config collections.json{color}

 
 *Create marble1 on org1/peer0*
 peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '\{""Args"":[""initMarble"",""marble1"",""blue"",""35"",""tom"",""99""]}'

 
 *Query marble on org1/peer0*
 peer chaincode {color:#000000}query -C mychannel -n{color} marbles{color:#000000}p {color}-c '\{""Args"":[""{color:#000000}readMarble{color}"",""marble1""]}'

peer chaincode {color:#000000}query -C mychannel -n{color} marbles{color:#000000}p {color}-c '\{""Args"":[""{color:#000000}readMarblePrivateDetails{color}"",""marble1""]}'

 
 *Query marble on org1/peer1*
 CORE_PEER_ADDRESS=[peer1.org1.example.com:7051|http://peer0.org1.example.com:7051/]  peer chaincode {color:#000000}query -C mychannel -n{color} marbles{color:#000000}p {color}-c '\{""Args"":[""{color:#000000}readMarblePrivateDetails{color}"",""marble1""]}'

 
 *Query marble on org2/peer0 (should not be there as org2 doesn't have access to collection)*
 CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.[example.com/peers/peer0.org2.example.com/tls/server.crt|http://example.com/peers/peer0.org1.example.com/tls/server.crt] peer chaincode query -C mychannel -n marblesp -c '\{""Args"":[""readMarblePrivateDetails"",""marble1""]}'

 
 docker logs peer0.org1.example.com 2>&1 | grep -i -a -E 'private|pvt|privdata'

 
 *Create marble2 on org1/peer0*
 peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '\{""Args"":[""initMarble"",""marble2"",""blue"",""35"",""tom"",""99""]}'

 
 *Transfer marble2 on org1/peer0*
 peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '\{""Args"":[""transferMarble"",""marble2"",""jerry""]}'",,denyeart,fredbi,kenjisiu-ibmhk,marek5050,mffrench,MichaelWang,shinsa82@gmail.com,SjirNijssen,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6717,FAB-9306,,FAB-1151,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzzad3:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,denyeart,fredbi,kenjisiu-ibmhk,marek5050,mffrench,MichaelWang,shinsa82@gmail.com,SjirNijssen,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/18 5:42 PM;mffrench;Hi [~denyeart],

we are interested to use SideDB in our future projects.Can we already test this functionality in the 1.1 preview ?

Also I would like to get your opinion on the difficulty to provide on fly SideDB configuration while putting the private data instead of the configuring the sidedb when instantiating the chaincode as shown by the e2e. This may looks like this : stub.PutPrivateData(""collectionMarblePrivateDetails"", marbleName, marblePrivateDetailsBytes, ""OR('Org1MSP.member', 'Org2MSP.member')"", <any other parameters needed for sidedb>). Do you think it would be possible ?

Best,;;;","15/Mar/18 7:27 PM;denyeart;[~mffrench] Sorry just saw this. You can test side db private data experimental feature in v1.1.0-rc1 and v1.1.0. To get the experimental feature you will need to build peer yourself and set an environment variable EXPERIMENTAL=true before building.

In v1.2 there is a feature in development that allows distributing private data to the set of endorsing  organizations only, instead of having a static collection membership defined at instantiation time. See FAB-7593. Is that what you need?;;;","11/Apr/18 1:14 PM;kenjisiu-ibmhk;Hi [~denyeart], I just added some fixes to the marble example code. Please check [here|https://gerrit.hyperledger.org/r/#/c/14769/]. Thanks!;;;","22/May/18 4:53 PM;shinsa82@gmail.com;In ApplicationCapabilities section in configtx.yaml, ""V1_2: true"" would be ""V1_1: true""?;;;","24/May/18 9:21 PM;denyeart;Sample has moved to fabric-samples.

CR: https://gerrit.hyperledger.org/r/#/c/22255/;;;","24/May/18 9:22 PM;denyeart;[~shinsa82@gmail.com] I've updated fabric-samples/first-network/configtx.yaml to use V1_2.  This is required to process private data transactions.;;;","18/Jun/18 5:25 PM;shinsa82@gmail.com;[~denyeart] Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve the readability of the encc_shim example chaincode,FAB-6602,21809,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Ratnakar,Ratnakar,13/Oct/17 12:17 AM,30/Jul/19 10:14 AM,28/Oct/23 3:01 AM,30/Jul/19 10:14 AM,,,,,,,,,,fabric-docs,fabric-quality,,,0,quality,,,,,,"As per the discussion with @aso , Barry has done the following improvement to the encshim fabric example chaincode

which includes:
 * Separation of Encryption/Decryption logic
 * Encryptor to encrypt the payload and save it in ledger and *DECRYPTOR* function to decrypt the payload while querying 

Nick would be helping us to improve the documentation

*e2e_cli* sample can be used to test the changes, enclosed the script.sh

ex: 

{{peer chaincode invoke -n enccc -C my-ch -c '\{""Args"":[""ENC"",""PUT"",""key"",""value""]}' --transient ""\{\""ENCKEY\"":\""$ENCKEY\"",\""IV\"":\""$IV\""}"" }}

 

{{peer chaincode query -n enccc -C my-ch -c '\{""Args"":[""DEC"",""GET"",""key""]}' --transient ""\{\""DECKEY\"":\""$ENCKEY\""}"" }}

 

 

 ",,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Oct/17 12:10 AM;Ratnakar;enccc_example.go;https://jira.hyperledger.org/secure/attachment/12424/enccc_example.go","13/Oct/17 12:22 PM;Ratnakar;script.sh;https://jira.hyperledger.org/secure/attachment/12428/script.sh",,,,,,,,,,,,,,,,,,,,,"1|hzyjbj:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 10:14 AM;mastersingh24;removed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
disable auction tests from daily test suite,FAB-6604,21824,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,13/Oct/17 5:26 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,24/Oct/17 4:27 AM,v1.0.3,,,,,,v1.0.4,,,fabric-ci,,,,0,ci-failure,,,,,,disable auction tests from daily test suite.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjdr:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Oct/17 4:27 AM;rameshthoomu;Auction tests are now disabled from fabric test/regression/daily script;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtered block event contains empty chaincode event instead of nil,FAB-6605,21825,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,13/Oct/17 5:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Oct/17 10:35 PM,,,,,,,v1.1.0,v1.1.1,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjdz:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Oct/17 4:11 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14483/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Caller name is not correct in log messages of balance-transfer,FAB-6606,21826,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,zhayujie,yuki-kon,yuki-kon,13/Oct/17 6:05 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Nov/17 4:45 AM,v1.0.3,,,,,,v1.0.5,,,fabric-samples,,,,0,,,,,,,"In balance-transfer, a function call “getOrgAdmin(org)” outputs incorrect user name in error message.

The following functions are executed by Admin due to access control.
- createChannel
- JoinChannel
- installChaincode
- instantiateChaincode
- getInstalledChaincodes

In these functions, helper.getOrgAdmin(org) is called to get enrollment for Admins.
However, non-admin user name is printed out in error messages if getOrgAdmin(org) fails.
Error messages should be modified to show that enrolling Admin fails.

This is an example.
{code:java}
                return helper.getOrgAdmin(org).then((user) => {
                                // read the config block from the orderer for the channel
                                // and initialize the verify MSPs based on the participating
                                // organizations
                                return channel.initialize();
                }, (err) => {
                                logger.error('Failed to enroll user \'' + username + '\'. ' + err);
                                throw new Error('Failed to enroll user \'' + username + '\'. ' + err);
{code}

In addition, an arg ""username"" is not used in functions above because caller name is assigned base on org name.
To make it easy to understand the code structure, the arg ""username"" should be removed.
",fabric-samples commit: 3685c4444ef85b56302c45a227369d664c8dc171,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyje7:",,,,,,,,,,,,,,,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Oct/17 7:23 AM;yuki-kon;CR posted here: https://gerrit.hyperledger.org/r/#/c/14489/;;;","11/Nov/17 4:45 AM;yuki-kon;This JIRA is out of date because balance-transfer was totally updated to catch up v1.1-preview by this CR ([https://gerrit.hyperledger.org/r/#/c/14977/]).
This JIRA should be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
write sample_cc in nodeJS,FAB-6607,21828,21329,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,scottz,scottz,13/Oct/17 7:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Nov/17 10:52 PM,v1.1.0,,,,,,,,,fabric-quality,,,,0,,,,,,,,,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4036,FAB-4038,,,,,,FAB-7142,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjef:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 10:48 PM;Ratnakar;[https://gerrit.hyperledger.org/r/#/c/15791/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin test fails on ppc64le,FAB-6608,21847,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,13/Oct/17 10:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Oct/17 8:31 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"Load endorser plugin test fails on ppc64le architecture.

Support is merged in for Go 1.10: [https://github.com/golang/go/issues/20756]


unit-tests_1 | --- FAIL: TestLoadAuthPlugin (0.05s)
 Error Trace: registry_plugin_test.go:41
unit-tesError:| Received unexpected error ""exit status 1""
unit-tesMessages: Could not build plugin: -buildmode=plugin not supported on linux/ppc64le",,divyank,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjfb:",,,,,,,,,,,,,,,,,,,,,,divyank,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Nov/17 8:40 PM;kchristidis;(Divyank, just an FYI for future reference: the ""review-needed"" label is for JIRAs proposing new features, where maintainers are asked to review and vote.);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updates to FABCAR for TLS,FAB-6610,21901,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Yogendrasri,odowdaibm,odowdaibm,13/Oct/17 8:19 PM,23/Jan/20 7:12 AM,28/Oct/23 3:01 AM,23/Jan/20 7:12 AM,,,,,,,,,,fabric-docs,,,,0,stale-item,,,,,,"The following sample was created by [~Yogendrasri] and [~mgk]

[https://www.ibm.com/developerworks/cloud/library/cl-deploy-sample-application-ibm-blockchain-platform/index.html]

 This sample shows how to use the fabcar sample with TLS

 

We should incorporate the changes in this sample into the fabric project, as they are of general use to users. Specifically, we need
 # Documentation Updates
 # New Commands
 # New ""fabcar with TLS"" sample, including documentation on how to do this.

 

Details for these 3 areas.

The Documentation updates are 
 * Create a new section in the docs for ""Writing Applications"".  This can use some of the general material in the fabcar sample ([http://fabricstaging.readthedocs.io/en/latest/write_first_app.html)]
 * Create a new subsection on ""Using TLS with your applications""

 

The new command should
 * Enroll a user to a Fabric CA, modelled on the enrollUser.js command in the external sample.

 

The new sample should
 * incorporate all the the sample fabcar updates into a new sample called fabcar_tls
 * The underlying network for this sample should be TLS enabled.
 * There should be a new section in the Sample Applications section on how to use this new ""fabcar_tls"" sample.

 ",,odowdaibm,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtyv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,odowdaibm,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:12 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE redirects logs to CITest logs,FAB-6611,22021,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Oct/17 12:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Oct/17 4:24 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,PTE redirects all CITest logs to directory CITest/Logs,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyjfz:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Option to build GOLANG chaincode dynamically,FAB-6613,22023,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aleksandar.likic,aleksandar.likic,aleksandar.likic,14/Oct/17 12:43 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,27/Oct/17 6:22 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The ldflags are currently hard-coded for static CC build. This prevents user chaincodes to use extensions (e.g. PKCS11) which requires dynamic linking. Static linking will still be the default.

NOTE: Using the dynamic build flag requires a custom image. Currently, hyperledger/fabric-baseos image does not include the C libraries required by the peer and orderer for dynamic linking",,aleksandar.likic,baohua,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx0an:",,,,Unset,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,baohua,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Oct/17 1:09 AM;aleksandar.likic;CR is at https://gerrit.hyperledger.org/r/#/c/14513/;;;","20/Oct/17 5:52 AM;mastersingh24;Let's add a parameter in the chaincode section of core.yaml
I think that will give us the needed function but keep things flexible as well;;;","25/Oct/17 5:37 AM;baohua;How about setting default config value to true? Seems dynamics supports more flexibility than static one?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update LTE in fabric repo to include CouchDB capability,FAB-6616,22027,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,14/Oct/17 3:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 1:00 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Updating the Ledger performance test tool LTE ,available in fabric repo, to include CouchDB capability. This location for the LTE tool will be eventually retired and the one in fabric-test repo will be used once the porting and vendoring issue in fabric-test is solved. ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjjj:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Oct/17 5:45 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/14509/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event improvements,FAB-6617,22028,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,14/Oct/17 4:08 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,09/Jan/18 1:16 AM,,,,,,,Abandoned,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjjr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Read-Write set semantics - committing phase flow related,FAB-6618,22030,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,pvrbharg,pvrbharg,14/Oct/17 5:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Oct/17 10:51 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Hello team,

 

Customer needs clarification as the documentation is incomplete or unclear or both:

++++++++++++++++++++++++++

2 valid transactions that happen in micro second interval ; the 1^st^ transaction is successful while the 2^nd^ will fail since the key changed when it first read the state;
 * What happens to this transaction ? (according to what I read – it is marked as invalid transaction and inserted into the ledger [this does not look right])
 * How does the re-try happen ?
 * Will it go thro the entire flow of going thro the validation of endorsing peer etc ?

 

We need clarification around this.

++++++++++++++++++++++++++

 

References:

http://hyperledger-fabric.readthedocs.io/en/latest/readwrite.html?highlight=read%20write%20sets
Read-Write set semantics

http://hyperledger-fabric.readthedocs.io/en/latest/arch-deep-dive.html
Section 4.1

 ",,denyeart,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjjz:",,,,,,,,,,,,,,,,,,,,,,denyeart,pvrbharg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 5:17 AM;pvrbharg;Hi team,

 

Additionally - for the failed transactions (that are no fault of client) - what happens to client side logic? Should client application programatically/manually retry or client side SDK automatically retries with a configurable setting or if client side SDK retry reconfiguration settings are supported? (does it retry N number of times with delay configurable?) - which client side SDKs are supported if retry is allowed.

 

Thanks.;;;","15/Oct/17 6:44 AM;pvrbharg;Dear team,

 

During my due diligence and own research - I came across this URL with a recommended sample/design pattern:

[https://github.com/hyperledger/fabric-samples/tree/release/high-throughput]

Is this the recommended IBM guidance for our customers? If so - please let me know.

 

Thanks.

 ;;;","17/Oct/17 10:51 PM;denyeart;Please do not open defects for questions.

Most of your questions are answered here:

[https://hyperledger-fabric.readthedocs.io/en/latest/txflow.html]

"" The transactions within the block are validated to ensure endorsement policy is fulfilled and to ensure that there have been no changes to ledger state for read set variables since the read set was generated by the transaction execution. Transactions in the block are tagged as being valid or invalid.

Each peer appends the block to the channel’s chain, and for each valid transaction the write sets are committed to current state database. An event is emitted, to notify the client application that the transaction (invocation) has been immutably appended to the chain, as well as notification of whether the transaction was validated or invalidated.""

The client application can retry any transaction that was invalidated.

Yes, the link in your last comment is a valid approach when there are frequent collisions. When collisions are not frequent the client retry is sufficient.  Please ask any follow-up questions in rocket.chat.

 ;;;","17/Oct/17 11:56 PM;pvrbharg;Thank you, Dave and I would follow your guidance. Best wishes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Purge pvt data from pvt block store,FAB-6619,22031,18800,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,14/Oct/17 7:47 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/May/18 3:31 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,Purge the data from pvt block store for a collection when the collection gets expired based on the BTL policy defined for it.,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwt0n:",,,,,,Sprint 7 - NextGen Endorsement,,,,,,,,,,,,,,,,manish-sethi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporarily disable dissemination upon instantiate,FAB-6620,22032,13484,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,15/Oct/17 2:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Dec/17 7:50 AM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"Currently the collection configurations are stored in the LSCC namespace.
Therefore, if an instantiate transaction contains private data - it's impossible to obtain the collection configuration in order to know to which peers to disseminate to, etc.

Therefore we should just disable private data dissemination upon endorsement altogether. ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjk7:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endorsement policy document is misleading,FAB-6621,22033,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,15/Oct/17 3:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Oct/17 4:46 AM,v1.0.3,,,,,,,,,fabric-docs,,,,0,,,,,,,"The Endorsement Policy document is highly misleading, because it speaks of endorsement gates that are not yet implemented. ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjkf:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Oct/17 4:24 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/14523/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.gitignore missing some build target locations,FAB-6622,22034,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,15/Oct/17 4:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 1:48 PM,v1.0.3,,,,,,,,,fabric-build,,,,0,,,,,,,.gitignore missing some build target locations,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjkn:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Oct/17 4:25 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/14521/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update vendored version of BCCSP,FAB-6624,22101,20518,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,15/Oct/17 8:49 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 1:46 AM,v1.0.3,,,,,,v1.0.4,,,fabric-ca,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjl3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 7:40 AM;mastersingh24;https://gerrit.hyperledger.org/r/14555;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update the VERSION in the release test suite,FAB-6625,22300,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,16/Oct/17 3:35 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,07/Feb/18 10:54 AM,,,,,,,v1.0.3,,,fabric-build,,,,0,,,,,,,"update version reference to 1.0.3 in release test suite.
In some of the scripts in test/regression/release folder are still referring 1.0.1 version.",,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjlj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 2:04 PM;luomin;https://gerrit.hyperledger.org/r/#/c/14533/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endorsement and commitment may block each other by acquiring the same readlock,FAB-6626,22400,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,baohua,baohua,16/Oct/17 5:05 PM,23/Jan/20 7:12 AM,28/Oct/23 3:01 AM,23/Jan/20 7:12 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,"As reported by @minollo at https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=utGqv7wbkrC2gd3ax:

Endorsement against the same chaincode from the same peer is parallel.

However, the endorsement and commitment may block each other by acquiring the same read lock.

NewLockBasedTxSimulator acquires a read lock: txmgr.commitRWLock.RLock()

Commit tries to acquire a write lock on the same object: txmgr.commitRWLock.Lock().",,baohua,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjlr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:12 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSPConfigHandler should support other MSP types,FAB-6627,22402,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,16/Oct/17 9:39 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,09/Nov/17 8:17 PM,,,,,,,,,,,,,,0,,,,,,,,,ales,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2005,,,,,,,,,"1|hzyjlz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Oct/17 6:52 PM;mdr;CR: https://gerrit.hyperledger.org/r/#/c/14537/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK needs to add support for config endpoint,FAB-6628,22411,21261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,zhaochy,skarim,skarim,16/Oct/17 10:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Jan/18 2:51 PM,v1.1.0,,,,,,v1.1.0,,,fabric-sdk-node,,,,0,,,,,,,"New endpoints (identities and affilliations) have been created that allows for dynamically adding/removing/modifying identities and affiliations.

get swagger doc at https://gerrit.hyperledger.org/r/#/c/14963/3

and open swagger spec by http://editor2.swagger.io/#!/",,harrisob@us.ibm.com,skarim,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjnb:",,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,skarim,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 3:26 AM;harrisob@us.ibm.com;[~zhaochy] Would you be able to look at this one

see https://jira.hyperledger.org/browse/FAB-5726;;;","02/Nov/17 10:45 PM;skarim;Please hold off on starting work on this. The APIs are being reworked and the new implementation is not currently there. You can see the new swagger doc here to see what the REST calls will look like https://gerrit.hyperledger.org/r/#/c/14963/;;;","08/Nov/17 10:50 AM;zhaochy;[~skarim]

Please let me know if the APIs are implemented, so that I can start working on this;;;","17/Nov/17 10:51 AM;zhaochy;[~skarim]

hello, any updates?;;;","17/Nov/17 11:21 PM;skarim;The changesets for the identity endpoint are in the process getting reviewed, once they are stable then I think the SDK work can be started. Affiliation endpoint is still in progress. Please see the swagger doc in parent work item [FAB-6418] that has a link to the swagger doc that defines the REST APIs. 

If you want to review the status of the changes you can look at: https://gerrit.hyperledger.org/r/#/c/15283/;;;","25/Jan/18 3:35 AM;harrisob@us.ibm.com;How is it going with affiliations ? They want to cut the 1.1.alpha on Thursday (Jan 25) and they are hoping to get NodeSDK complete by then.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Go SDK needs to add support for config endpoint,FAB-6629,22412,21261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,aleksandar.likic@gmail.com,skarim,skarim,16/Oct/17 10:38 PM,23/Jan/20 7:12 AM,28/Oct/23 3:01 AM,23/Jan/20 7:12 AM,v1.1.0,,,,,,Future,,,fabric-sdk-go,,,,0,stale-item,,,,,,A new endpoint (/config) has been created that allows for dynamically adding/removing/modifying identities and affiliations. ,,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjnj:",,,,,,,,,,,,,,,,,,,,,,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:12 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java SDK needs to add support for config endpoint,FAB-6630,22413,21261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,skarim,skarim,16/Oct/17 10:38 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Jan/18 8:03 AM,v1.1.0,,,,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,,"A new endpoint (/config) has been created that allows for dynamically adding/removing/modifying identities and affiliations. 


https://gerrit.hyperledger.org/r/#/c/14787/",,rickr,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjnr:",,,,,,,,,,,,,,,,,,,,,,rickr,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python SDK needs to add support for config endpoint,FAB-6631,22414,21261,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,SeeGo,skarim,skarim,16/Oct/17 10:38 PM,23/Jan/20 7:12 AM,28/Oct/23 3:01 AM,23/Jan/20 7:12 AM,v1.1.0,,,,,,Future,,,fabric-sdk-py,,,,0,stale-item,,,,,,A new endpoint (/config) has been created that allows for dynamically adding/removing/modifying identities and affiliations. ,,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjnz:",,,,,,,,,,,,,,,,,,,,,,skarim,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:12 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconfige BYFN to add a new Org - Org3,FAB-6632,22427,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,rohitadivi,rohitadivi,16/Oct/17 11:11 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Dec/17 11:16 PM,Not a Bug,,,,,,Not a Bug,,,fabric-samples,,,,0,Documentation,,,,,,"Reconfigure the existing BYFN to add a new org3 while the network is up and running.

To do this task we need to generate the crypto material for new org3 and use configtxlator tool to unmarshall, add org 3 and remarshall the genesis block to protobuffer format 

Once the remarshalling is done we need to join the org3 to the existing network",,kchristidis,qiang0723,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5864,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjp3:",,,,,,,,,,,,,,,,,,,,,,kchristidis,qiang0723,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Oct/17 4:24 AM;rohitadivi;Generated the crypto material for Org 3 using cryptogen and by creating a new file with the name crypto-config1.yaml

created a new docker-compose file for Org3 with the name docker-compose-org3.yaml;;;","28/Oct/17 4:53 AM;rohitadivi;Using configtxgen Org3MSP material is printed into Org3.json file which will be later appended to the config block;;;","06/Dec/17 11:17 PM;kchristidis;https://gerrit.hyperledger.org/r/c/15323/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Microservices chaincode,FAB-6633,22428,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,binhn,binhn,17/Oct/17 1:04 AM,23/Jan/20 7:13 AM,28/Oct/23 3:01 AM,23/Jan/20 7:13 AM,v1.1.0,,,,,,Future,,,fabric-peer,,,,0,Endorser,stale-item,,,,,"Microservices architecture is a better software development style that enables flexibility in deployment and management of the applications. Basically this style decomposes the software into a suite of independently deployable (micro) services.

We want to apply this style to chaincode development.

The current chaincode runtime model loads a chaincode per container to ensure complete isolation of chaincode address space. This certainly provides security protection between chaincodes such that one chaincode can't negatively interfere with or bring down the others. However, this model comes with a cost of system resource to accommodate containers, which encourages monolithic chaincodes. 

We want to improve the chaincode model such that we would have an option to load chaincode into an existing container, especially with VM-based chaincodes like Java or Nodejs. It would encourage decomposing chaincode into microservices, where each may be independently deployed and managed. We also need the chaincode life-cycle to be feather light such that microservices chaincodes can easily come and go as use-cases require short-live chaincodes.

I'd like to open up for discussion and comment on this thought, especially the following folks who have intimate knowledge in this area: [~muralisr] [~yacovm] [~ellaki] [~ales] [~greg.haskins] [~jeffgarratt]

 ",,baohua,binhn,C0rWin,ChristopherFerris,gatakka,grapebaba,harsha544,indirajith,luomin,mastersingh24,matingwei,muralisr,sanchezl,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjpb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,binhn,C0rWin,ChristopherFerris,gatakka,grapebaba,harsha544,indirajith,luomin,mastersingh24,matingwei,muralisr,sanchezl,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 3:43 AM;yacovm;{quote}Microservices architecture is a better software development style that enables flexibility in deployment and management of the applications. Basically this style decomposes the software into a suite of independently deployable (micro) services.{quote}
{quote}We want to improve the chaincode model such that we would have an option to load chaincode into an existing container, especially with VM-based chaincodes like Java or Nodejs{quote}
I'm not sure micro-services is the best name to call that. to me it resembles more an application server, servlet container, etc.  than micro-services. 
In example- a front page of a website that behind the scenes uses a cache service like memcached and also a search service and a database service, and the search service also uses the database service, and i.e they all find each others instances via a service discovery service - this is a better example for microservice architecture.

{quote}It would encourage decomposing chaincode into microservices{quote}
I don't really understand what it should be decomposed to? Can you elaborate? 
A chaincode is essentially a process that on startup connects to the peer and starts listening for transactions, and then it executes the transactions via API calls to the peer.
What would you decompose it to? Can you give an example please?
{quote}
We want to improve the chaincode model such that we would have an option to load chaincode into an existing container, especially with VM-based chaincodes like Java or Nodejs.{quote}
I think that it can indeed save resources especially in chaincodes like java, because co-locating 2 simple chaincodes that have the same dependencies in the same JVM consumes much less memory than having 2 instances of JVMs each running a single chaincode.

However we must not forget that security is probably the biggest reason that people use blockchains and therefore we *must not* trade security for anything else like resource consumption. 
Therefore if we are to do this, we need first to agree on the security requirements from a chaincode process.
In my opinion (and please others - chime in) a chaincode process needs to be able to:
# Prove (authenticate) to the peer that it runs the code that the administrator installed on the peer, or if we extend this model - that it runs code that an administrator of the peer trusts.
# Prove (authenticate) to the peer that the id (name + version) of the chaincode that interacts with it at a given point in time on a given gRPC stream is indeed the right chaincode that the peer sent a transaction to. 

In my opinion we need to start from this ^ and build on top of these requirements. 

Now, thinking aloud - if we think of chaincode as an application container (i.e Tomcat) then perhaps if the administrator trusts the code that he/she installed on the peer (and knows it) - they can all run in the same JVM and we will only have 1 container, loaded with all the chaincodes running inside the same JVM and each chaincode would use some secret to authenticate itself to the peer, and the secret would be injected inside the container at startup. (We can just use mutual TLS instead of the secret, of course);;;","17/Oct/17 3:59 AM;ChristopherFerris;This doesn't sound to me like microservices so much as a mode where the chaincode container becomes an app server (such as OpenLiberty) hosting multiple, possibly related (or unrelated) chaincode functions. It seems more like FaaS than microservices, TBH.

A true microservices would have independently operated services running in independent containers, connected in a service mesh fronted by a load balancer and augmented with NetflixOSS type services - in short, something the likes of Istio envisages running on K8s. That would actually have more containers than we have now, not fewer as described above.

 ;;;","17/Oct/17 6:41 AM;C0rWin;> The current chaincode runtime model loads a chaincode per container to ensure complete isolation of chaincode address space. This certainly provides security protection between chaincodes such that one chaincode can't negatively interfere with or bring down the others. However, this model comes with a cost of system resource to accommodate containers, which encourages monolithic chaincodes. 

Splitting chaincode into several chaincode while collocating them back into single container doesn't sound like microservice approach, moreover it's hard to underestimate security threat which will bring this approach as failure of one chaincode might cause failure to another.

Currently due to the fact we have separation of execution, ordering and validation - you can install different chaincodes on different peers to load balance resource consumption, this also will allow to mitigate the cost of resource consumption.;;;","17/Oct/17 6:54 AM;binhn;I probably didn't describe it clearly my use of Microservices. Microservices is an architectural style; it doesn't prescribe a specific technology or platform, so I am talking about applying the microservices architecture style to chaincode to encourage  decomposition into a set of independent services (which themselves could be chaincodes, but much lightweight). We may call these micro-chaincodes.

Imagine implementing a supply-chain use-case, given the current runtime model, developers would tend to implement few monolithic chaincodes with many functions hanging off a switch. We want to decompose this use-case into many microchaincodes so that each can be managed independently without facing the current heavy chaincode lifecycle.

That said, let's not get hung up on Microservices, and let's focus on the objective of enable developers to write many small chaincodes (or services) rather than monolithic ones.;;;","17/Oct/17 12:06 PM;baohua;I prefer the name of micro-chaincode, as the term ""microservice"" does arise too much confusions these years (arch, container, platform...).

There are two aspects as I can see:
 * Chaincode design pattern: i.e., micro vs monolithic. Whether we need to limit the developer to only pick one? Definitely NO, but we can try to support both development options efficiently. I guess [~binhn]'s major questions is this one?
 * [Chaincode lifecycle management|https://docs.google.com/document/d/1aSWNOuvOBzi1OzZ-b8h0IP-Qs6JL8iREXM7Jtc0VkE0/edit]: The existing lifecycle seems not that effective. E.g., a chaincode container can occupy unnecessary resource usage even it is not called. Here we may introduce the concept of FaaS, which can provide more efficient choices for users.

And I wanna highlight that, since fabric is targeting a general-purpose platform, we need to encourage to keep its functionality flexible to support various requirements.;;;","17/Oct/17 3:44 PM;gatakka;I am not sure what exact problem must be solved.

With current architecture is possible to separate monolithic chaincode with big switch to smaller chaincodes and install them in same channel. They can be developed,updated and managed separately. A huge benefit with this approach, at least in one of our projects, is that they can have different policies.

Resource consumption probably will be a issue in some huge installations, but still,this is noting compared to additional complexity, security and synchronization implication that will follow.

I am doing some experiments and I found a simple solution for resource utilization that is working for us, and it is very simple. Monolithic chaincode is separated to smaller chaincodes and if some chaincode is not used for X amount of time (let's say 1 minute) its container is shut down, not destroyed, just docker stop. When this chaincode is invoked the container is started. So every peer is managing it own chaincode containers.

In case of docker containers with Go chaincode the start of the container is really fast, I have no idea how fast it will be for Java or NodeJs chaincodes. 

  ;;;","18/Oct/17 1:30 AM;ChristopherFerris;Clearly, we need a better definition of the problem(s) to be solved.

Operational overhead for chaincode running in separate containers needs to be reduced?

Chaincode operational model encourages monolithic code to conserve system resources?

My buzzword bingo card is needs the 'microservices' ball to be drawn to complete a row?

 ;;;","18/Oct/17 7:24 AM;binhn;[~yacovm] and [~C0rWin] Thanks for bringing up your concerns on security, but I think less of a problem for the following reasons:
 # The local peer admin is the one installing the chaincodes, which always come from a known source (either private or consortium controlled)
 # JVM already solves colocation and for Go, we can use plugin or a different process

Do you see other security aspects that we should cover?

[~gatakka] I am glad the current model works for you. As you mentioned, we can break down a big chaincode into multiple smaller ones; however, we would face 2 problems:
 # Heavy lifecycle management which you mentioned
 # Chaincodes can't share data

Not impossible to overcome but not efficient: Chaincode calling chaincode is a long path.

Some use cases may require situational chaincodes operate on existing data; i.e., chaincodes are created on demand and short live.

So we need an efficient model to manage microchaincode and allow sharing data. I believe Composer might do something like this conceptually, but I have to look.;;;","18/Oct/17 7:51 AM;yacovm;Can you give a bit more information on how you envision the micro service chaincodes being deployed, running, etc?

In case you don't use chaincode-to-chaincode invocations I take it that you want the client to do multiple transactions for each chaincode? a single one? More information is needed so we can discuss this topic.
{quote}The local peer admin is the one installing the chaincodes, which always come from a known source (either private or consortium controlled)
{quote}
 

Right, but there are CVEs of execution of arbitrary code out there, and I'm really not an expert on this but I think saying that the peer blindly trusts the chaincode is too much assumptions. In addition, we still need to ensure that in your idea *only* the chaincode can identify as itself and not some other network entity such as a client.

 ;;;","18/Oct/17 8:06 AM;C0rWin;{quote} 
The local peer admin is the one installing the chaincodes, which always come from a known source (either private or consortium controlled)
{quote}

While this is true, it doesn't make chaincode bug free, e.g. my probably main concern is that with this approach we loosing pros of running chaincodes isolated such that they cannot cause any damage to each other.

{quote}
So we need an efficient model to manage microchaincode and allow sharing data.
{quote}

Could you elaborate on use case, why would you like to share data between chaincodes? Also it sounds like you are talking to group chaincodes into bundles, is that correct?;;;","18/Oct/17 4:39 PM;gatakka;[~binhn]

 
{quote} # Heavy lifecycle management which you mentioned{quote}
You are talking about heavy life cycle from dev-ops point of view (developing, deploying, updating the chaincodes) or from internal implementations view (system chaincodes). 

If is deploying and management of the chaincodes  I do not see any problem to adapt existing, mature, well established dev-ops tools and process. Also, in this context, it makes no difference what is the architecture, if you have 2 or 200 chaincodes you must manage 2 or 200 of them. 

If is the internal implementation, then, please, describe the problem(s), because many of us are not so intimately familiar with the implementation details.

 
{quote}Chaincodes can't share data
{quote}
 

Please, elaborate more. Chaincodes must be ""pure functions"". They must depend only on provided parameters and data taken from shim. This is how operations can be deterministic. They share data through the ledger in the channel.

Adding another way for communication between chaincodes will increase the complexity a lot. For example how sequential operations will be executed, who will track the status of execution and decide what to do next. What if some of the operations fails? I am sure that technical solutions to all this problems can be found, but the main question, at least for me, is what real problem is solved.

One functionality that can be helpful for a lot of use-cases and is related to current discussion is the ability of the chaincode to invoke another chaincode for read/write operations. Current implementation allows only reading data. This will require changes in read/write sets and also in policy validation. Also it will be better write operations to be allowed only for chaincodes in same channel. 

Probably will be a good idea to start using real examples and use-cases instead of abstract ideas.

 

 

 ;;;","23/Oct/17 9:48 PM;muralisr;To focus on the basic intent here - separation of concerns between state and the code that manipulates state. Currently chaincode implements both monolithically. This constrains chaincode model in a couple of ways
* hard to extend chaincode functionality - need to modify and redeploy
* every participant owns all ""functions"" of the chaincode. Wouldn't it be nice for the ""insurance"" company to provide insurance related transforms to the ""Car"" asset and not have to worry about the ""loan"" transforms (more interesting to the bank)

The tight coupling of state and its transforming code also gives raise to more surface area that would need change causing more churn in chaincode lifecycle. 

If we generalize chaincode framework to accept transform as post instantiate extensions (in [~binhn] terms ""microchaincode"") it will open an entirely new way to program chaincodes - the base chaincode a pure ""state"" keeper leaving the transformation to the add-on extensions.

This separation between state and transforms/queries will give raise to more natural ways to structure state (everyone owns state with each providing their particular transforms/queries).

Implementation ? ...

Composer extends functionality by running node ""scripts"" in GO chaincode. While intent there is not about separation in the above sense, it shows that such loose coupling is possible to implement. 

More interestingly, a simple experiment shows the Java chaincode environment in latest master execute Clojure code on the fly (thanks, [~sanchezl] :-) )  with a simple modification. Perhaps [~greg.haskins] can expand ?

This would have deep positive implications for  the chaincode programming model.;;;","23/Oct/17 11:20 PM;gatakka;[~muralisr] I am not against this idea in general but the devil is in details.

Currently Fabric is delivering a very new approach for solving one of the biggest problems out there - how parties that don't trust each other can trust each other. And this is done (as all we know) by allowing every party to have same data, that is crypto-validated, on there servers, and before any update all parties must deliver same change set derived from business logic implemented by chancode.

There are channels and every channel can have many chaincodes. In example above why insurance and the loan data must be in same channel? This is bad business design at first place, they must be in separate channels. 

Parties must share only functionality that is common for there operations, not all chaincodes. 

I do not understand completely what you mean by ""separation between state and transforms"". Chaincode is not responsible for state transform, it just execute a method that eventually will change the state. In chaincode you even cannot read the data from read/write set before is committed.

So it seems that chaincode has only one responsibility - using provided parameters and shim data to apply rules and make a request for state update.

With current implementation is not necessary all parties to have same chaincode. Correct me if I am wrong but they need to provide same read/write set. So every party can make there own implementation about the process. It is not even necessary chaincode in different parties to be in same language.

Lets say that this separation is done using any implementation. Where in the stack will be business logic implementation and who will create read/write set? How this ""layer"" will guarantee consistency? What data and from where will be send to chaincode? This data must be encrypted, so the caller and the chaincode must share keys and CPU time will be required for encrypt/decrypt/verify. 

And all this for what? To allow separation of monolith code in small peaces that must find a way to work together and exchange data in synchronization, for what? Probably in 100% of the real cases the process that is controlled by chaincode is sequential and monolithic. 

Better result will be to make chancode install/instantiate and upgrade more streamline and to allow one chaincode to execute another chaincode (for write operations) in same channel. If this is done then separation can be done using many chaincodes in same channel that have fast way to communicate between each other (using shim interface), will have deterministic behavior and will not require extra network connections or cypto operations.

 

 

 

 ;;;","24/Oct/17 2:03 AM;muralisr;[~gatakka] Clarifying a few points (in different order than they appear in your comment).
{quote}Better result will be to make chancode install/instantiate and upgrade more streamline and to allow one chaincode to execute another chaincode (for write operations) in same channel. If this is done then separation can be done using many chaincodes in same channel that have fast way to communicate between each other (using shim interface), will have deterministic behavior and will not require extra network connections or cypto operations.
{quote}
The last part _""will not require extra network connections""_  makes me wonder if you are thinking of an additional communication layer on top of chaincode. Thats not the model ... this could completely change the way you view the JIRA.
{quote}And all this for what? To allow separation of monolith code in small peaces that must find a way to work together and exchange data in synchronization, for what? Probably in 100% of the real cases the process that is controlled by chaincode is sequential and monolithic.
{quote}
There's no additional ""synchronization"". The same considerations as for concurrent invokes today apply.
{quote}Chaincode is not responsible for state transform, it just execute a method that eventually will change the state.
{quote}
In both models chaincode will execute functions that (eventually) causes transform ..did not mean to imply that chaincode will commit the state.
{quote}With current implementation is not necessary all parties to have same chaincode. Correct me if I am wrong but they need to provide same read/write set. So every party can make there own implementation about the process. It is not even necessary chaincode in different parties to be in same language.
{quote}
Parties using the same chaincode namespace for manipulating same assets should have the same chaincode.

Maybe it'll help to have some experimental code. I'll try and push something out by tomorrow.;;;","24/Oct/17 2:15 AM;gatakka;[~muralisr]

This is the main issue here, I (and probably others) do not have common understanding about the problem that has to be solved, therefore the possible solutions.

I proposed,in comments above, to start using real examples and use-cases, so to have common context, but your proposal about code is much better.

It is off-topic question -  if two chaincodes with same namespace but with different implementation return same read/write set  will they be considered as same code in context of endorsement verification?

 ;;;","24/Oct/17 3:48 AM;muralisr;[~gatakka] 
{quote}It is off-topic question -  if two chaincodes with same namespace but with different implementation return same read/write set  will they be considered as same code in context of endorsement verification?
{quote}

Lets take this on one of the Rocker Chat channels (you can ping me directly of course) so readers don't get side-tracked please ?;;;","25/Oct/17 10:01 AM;muralisr;https://gerrit.hyperledger.org/r/#/c/14827/ contains the code and a README.txt to take it for a spin.;;;","01/Nov/17 7:29 AM;binhn;[~muralisr] Thanks for illustrating the idea with code. It's actually a pleasant surprise to me how you did it with code stored on ledger as the old model (nostalgic:-). You showed 2 key capabilities here:
 # Decomposition of chaincode into micro chaincodes acting within the same programming scope
 # Light deployment model allowing functional enhancement or addition without upgrading (I called this situational chaincode in my previous comment)

Baking these 2 capabilities into the chaincode model would provide much more flexibility and usability. I could envision ability to compose micro-chaincodes in execution; that is, either via another micro-chaincode to call other micro-chaincodes or declaratively pipeline micro-chaincodes in a transaction, allowing output from one to feed into another, which is only possible due to #1 above.;;;","21/Feb/18 6:27 AM;mastersingh24;I do not believe this fits in with the high level goals for v1.2 so pushing to v1.3 for now;;;","23/Jan/20 7:13 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
FilteredBlock missing type,FAB-6634,22429,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,rickr,rickr,17/Oct/17 1:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 12:30 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The new FilteredBlock will send events for both transactions and configblock updates just like the eventhub.  But there is no type  This means it would just have no transactions. But not sure if that's ideal. Each transaction has a HeaderType in the ChannelHeader.  Should there still be a transaction with they type ?   Or should the the FilteredBlocks just skip sending configBlock updates ?

FYI [~harrisob@us.ibm.com]",,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjpj:",,,,,,,,,,,,,,,,,,,,,,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Oct/17 2:37 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14663/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ability to execute on command line,FAB-6635,22430,21290,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,17/Oct/17 3:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 4:37 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,The ability to execute openssl commands and use the output in the test will assist in the encryption testing.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjpr:",,,,,,,,,,2.0,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add encryption chaincode feature tests to daily suite,FAB-6636,22444,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,scottz,scottz,17/Oct/17 5:10 AM,30/Jul/19 11:41 AM,28/Oct/23 3:01 AM,30/Jul/19 11:41 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,,,,,,,"They are currently skipped, because we need to figure out a way for the CI environment to be set up automatically so this chaincode (which uses external vendoring) can be used.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6439,,,,,,,,,,,,,,,,,,,,,FAB-3770,,,,,,,,,"1|hzyjsf:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 7:16 AM;scottz;We are adding the two commands to the fabric-test/feature/scripts/install_behave.sh script with fab-6439, so the CI can find them there.;;;","30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bridge the v1.1 application capabilities flag with the MSP versioning,FAB-6640,22448,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,17/Oct/17 4:29 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,01/Nov/17 6:19 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,common-components,MembershipServices,Security,,,,The MSP version to be instantiated needs to follow the application capabilities flag.,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjtb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor MSP to support function versioning,FAB-6641,22449,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,17/Oct/17 5:52 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,19/Oct/17 6:02 PM,,,,,,,v1.1.0,,,fabric-crypto,,,,0,MembershipServices,Security,,,,,"The default MSP implementation can be found in mspimpl.go. The file is gigantic and it is getting complex to modify it. In order to simply the picture, mspimpl.go will be split in multiple files:
- mspimplsetup.go to handle the setup related functions
- mspimplvalidate.go to handle the validation related functions",,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjtj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support multiple versions of Go for fabric-ca jobs,FAB-6644,22452,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,17/Oct/17 6:49 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 6:12 PM,,,,,,,v1.1.0,,,fabric-ci,,,,0,,,,,,,"Need to support branch-specific versions of Go for fabric-ca jobs.
We'll inject a GO_VER property via a ci.properties file from within each branch",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjtz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 7:27 PM;mastersingh24;https://gerrit.hyperledger.org/r/14585;;;","18/Oct/17 5:38 PM;mastersingh24;additional CR to amend prior change

https://gerrit.hyperledger.org/r/#/c/14625/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update LTE in fabric repo to include JSON values for CouchDB,FAB-6645,22453,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,17/Oct/17 9:29 PM,01/Aug/19 11:33 AM,28/Oct/23 3:01 AM,01/Aug/19 11:33 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,The CouchDB benchmarks currently use binary values only.  This change will provide the option for benchmarking CouchDB with JSON values.,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyju7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,release-1.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.4/pr-3646,true,"27/Oct/17 6:38 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/14589/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create space/repos in hyperledger dockerhub account for new fabric-ca images,FAB-6648,22456,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,smithbk,smithbk,17/Oct/17 10:55 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 12:19 AM,,,,,,,v1.1.0,,,fabric-ci,,,,0,,,,,,,"fabric-ca now builds 3 new images: fabric-ca-peer, fabric-ca-orderer, and fabric-ca-tools.
We need to create space (or repos) in hyperldger dockerhub account for these.",,harsha544,ryjones,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-96,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjuv:",,,,,,,,,,,,,,,,,,,,,,harsha544,ryjones,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 11:07 PM;ryjones;[https://hub.docker.com/r/hyperledger/fabric-ca-tools/]

[https://hub.docker.com/r/hyperledger/fabric-ca-peer/]

[https://hub.docker.com/r/hyperledger/fabric-ca-orderer/]

same permissions as fabric;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update CI script to push from Jenkins when a release tag is created for new fabric CA images,FAB-6649,22457,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,smithbk,smithbk,17/Oct/17 10:58 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Oct/17 4:56 AM,,,,,,,v1.1.0,,,fabric-ci,,,,0,,,,,,,"There are 3 new images built by fabric-ca: fabric-ca-peer, fabric-ca-orderer, and fabric-ca-tools.
These need to be published.",,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-96,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjv3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 4:56 AM;rameshthoomu;patch has been submitted and merged.. Now fabric-ca release jobs push ca, ca-peer, ca-orderer and ca-tools images to hyperledger dockerhub and nexus repositories.

https://gerrit.hyperledger.org/r/#/c/14593/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative Scenarios to test passing invalid encryption keys during invoke and query,FAB-6650,22458,21290,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,17/Oct/17 11:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Nov/17 12:15 AM,,,,,,,,,,fabric-crypto,,,,0,quality,,,,,,,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjvb:",,,,,,,,,,,,,,,,,,,,,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"18/Oct/17 2:02 AM;scottz;This update is a partial. It contains some, but not all, of the test scenarios: 

https://gerrit.hyperledger.org/r/#/c/14501/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve security checks on the validation of LSCC upgrade,FAB-6651,22461,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,17/Oct/17 11:39 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,14/Mar/18 8:37 PM,v1.1.0,,,,,,,,,fabric-crypto,,,,0,,,,,,,"LSCC upgrade is subjected to custom validation performed by ValidateLSCCInvocation. In particular the following is the piece of code executed during validation of the LSCC upgrade.

 
{code:java}
case lscc.UPGRADE:
   /**************************************************************/
   /* security check 1 - cc in the LCCC table of instantiated cc */
   /**************************************************************/
   if !ccExistsOnLedger {
      return fmt.Errorf(""Upgrading non-existent chaincode %s"", cdsArgs.ChaincodeSpec.ChaincodeId.Name)
   }

   /*****************************************************/
   /* security check 2 - check the instantiation policy */
   /*****************************************************/
   pol := cdLedger.InstantiationPolicy
   if pol == nil {
      return fmt.Errorf(""No installation policy was specified"")
   }
   // FIXME: could we actually pull the cds package from the
   // file system to verify whether the policy that is specified
   // here is the same as the one on disk?
   // PROS: we prevent attacks where the policy is replaced
   // CONS: this would be a point of non-determinism
   err = vscc.checkInstantiationPolicy(chid, env, pol, payl)
   if err != nil {
      return err
   }

   /**********************************************************/
   /* security check 3 - existing cc's version was different */
   /**********************************************************/
   if cdLedger.Version == cdsArgs.ChaincodeSpec.ChaincodeId.Version {
      return fmt.Errorf(""Existing version of the cc on the ledger (%s) should be different from the upgraded one"", cdsArgs.ChaincodeSpec.ChaincodeId.Version)
   }
}

{code}
In particular, what is checked is if the chaincode requested to be upgraded has already been instantiated in the channel based on the current ledger state, and that the instantiation policy of the chaincode to be upgraded is satisfied by this transaction's creator. Additional checks exist to ensure that the write set included in the LSCC upgrade transaction are consistent with the ledger state and the proposal header and payload.

The checks here need to be enhanced upon proper capabilities flag for 1.1 is switched on so as to ensure that:
  - name of the chaincode does not change during the upgrade
  - instantiation policy of the chaincode does not change or — if this is not the case — that the instantiation policy of the upgraded chaincode is satisfied by its invokers.
  - write set caused by init invocation (i.e., having the namespace of the instantiated chaincode) would need to satisfy the endorsement policy of the instantiated chaincode (ADDRESSED BY LIFECYCLE ENHANCEMENTS INTENDED FOR 1.2).

The latter is to take place for deploy and upgrade.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyj07:",,,,Unset,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer channel join command description refers to chain instead of channel,FAB-6657,22467,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,18/Oct/17 12:46 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 9:07 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"The description for the ""peer channel join"" command description should be updated to refer to a channel instead of a chain. ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjx3:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 12:49 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14595/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create ordering service FAQ,FAB-6659,22469,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,18/Oct/17 12:51 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,17/Feb/18 5:34 AM,v1.0.3,,,,,,v1.1.0,,,fabric-orderer,,,,0,documentation,,,,,,"We see the same questions coming up in #fabric-orderer time and time again. Let us document these in a FAQ document that we'll be pointing folks to, next time one of these questions come up.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";31/Oct/17 7:33 AM;kchristidis;3600",,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyjxj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 12:51 AM;kchristidis;I'll use this space to note down questions.;;;","18/Oct/17 1:15 AM;kchristidis;* Why do we need Zookeeper?
 * I see the note about being experienced with Kafka/ZK in the documentation, but I want to try it out anyway, what do I do?
 * Where can I find a Docker Compose configuration for a network that uses Kafka?;;;","18/Oct/17 9:49 AM;kchristidis;* I have an ordering service up and running wish to switch the consensus from solo to kafka (or vice versa). How do I do that?;;;","20/Oct/17 12:00 AM;kchristidis;- When is the BFT ordering service going to be ready?;;;","31/Oct/17 7:34 AM;kchristidis;Submitted as a draft in Gerrit so it gets ironed out and expanded: https://gerrit.hyperledger.org/r/c/14971/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtered block event should contain array of filtered actions,FAB-6660,22470,19504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,18/Oct/17 2:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 12:30 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Each transaction can theoretically have multiple actions (though we only support one at the moment), each with its own chaincode event. The filtered block event should therefore contain an array of filtered actions, each populated with a chaincode event (if one exists), in the same order as the block. ",,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjxr:",,,,,,,,,,,,,,,,,,,,,,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 2:57 AM;rickr;I'm wondering if to be more compatible with the future changes if filteredTransactions shouldn't have  filteredActions set which has the chaincode events.  If something get's added in the future to TransactionActions that we need to have in if filteredTransaction it would be more of a change at that time.;;;","18/Oct/17 6:12 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14617/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make attributes specified during enroll required by default,FAB-6662,22472,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,aambati,aambati,18/Oct/17 4:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 1:40 AM,,,,,,,,,,fabric-ca,,,,0,,,,,,,"Currently, the AttributeRequest struct has ""Require"" attribute and is set to false if the user does not specify the attribute. But the fabric-ca-client command line makes the attributes required if the attributes are not qualified with "":opt"".

To make the API and command line client consistent, the ""Require"" attribute of AttributeRequest struct will be changed to ""Optional"", whose value is false by default. This makes the attributes required by default.

This change requires changes to SDK.",,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjy7:",,,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 6:14 AM;aambati;https://gerrit.hyperledger.org/r/c/14615/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add parsing of chaincodes resource config structures.,FAB-6664,22474,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Oct/17 5:23 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 12:39 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjyn:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test runSmokeTestSuite.sh high-level script,FAB-6665,22475,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,18/Oct/17 5:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Nov/17 9:27 PM,v1.1.0,,,,,,,,,fabric-quality,,,,0,,,,,,,"The Jenkins CI job which runs the smoke tests in the fabric-test repo currently hardcodes the commands to setup and run behave smoke tests.  We need to be able to run other tests outside the behave framework, such as performance tests using PTE, and we need to be able to change the list of tests of the smoke test suite without modifying Jenkins jobs. This task is for creating a new regression/smoke folder and a script called runSmokeTestSuite.sh, similar to those for daily test suite. Initially, it should run the behave tests. 

Next step is to change the jenkins job(s) so they call this new script instead of calling behave directly. (Or, if the fabric-test/Makefile is implemented, change that to call this new script instead of calling behave directly.), Finally, we can add more tests by adding them to be executed from this new script.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,FAB-3833,,,,,,,,,,,,FAB-6705,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjyv:",,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Push the fork of the amcl crypto lib (in go) to the fabric instead of vendoring it,FAB-6666,22476,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,18/Oct/17 7:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Oct/17 6:50 PM,,,,,,,WON'T FIX,,,fabric-crypto,,,18/Oct/17 12:00 AM,0,,,,,,,"Push the fork of the amcl crypto lib (in go) to the fabric instead of vendoring it:

github.com/manudrijvers/amcl/go",,ChristopherFerris,dubovitskaya,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,"1|hzyjz3:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dubovitskaya,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 7:54 AM;yacovm;# I'm putting a review-needed here because this needs to be voted on, IMO.
 # Can you provide reasoning? I don't see what's the point of doing it, if from what I understood The code isn't maintained by you like idemix code (i.e) - you only sync the source repo with your fork and expose functions you need.
 

 ;;;","18/Oct/17 8:07 PM;dubovitskaya;We discussed that with [~binhn] in the context of another commit, but since this issue is completely independent from that other commit, I created a separate issue for that here. 

This is our discussion:
 
Binh Nguyen
why would we want to keep this separate instead of in Fabric repo? I thought keeping it in Fabric would allow others from the community to update if necessary; otherwise we would have to work through your repo or fork again.
 
Manu Drijvers
We thought it was nicer to vendor this code as it isn't new code but an external library that we simply repackaged. We don't expect many updates to this code, other than the occasional update to sync it with the original code, and urgent fixes could be done on the vendored code in fabric. However, we are also open to the idea of simply putting the code directly into fabric (rather than vendoring it).
 
Binh Nguyen
Since we have to repackage, we should put it in Fabric instead of another level of indirection. I see that the source is also Apache-2, so there shouldn't be any issues in bringing the code into our repo.
 
Maria Dubovitskaya
OK, we will do it in a separate commit (created a jira issue for that: FAB-6666)
12:42 AM
 
 ;;;","18/Oct/17 8:36 PM;mastersingh24;-2000  :-)

We should not be doing this.  If we are going to use 3rd party packages and need to modify those packages, we should either:

1) Issue pull requests against the 3rd party repository  (for example, we do this with cfssl in fabric-ca)
2) If we really believe we need to fork the code (which again I strongly recommend against doing), then we *could* consider creating a separate repo for this under hyperledger but not under fabric

In either case, we would still be vendoring the the library within fabric and not including the code in the fabric repo.
And in no case should we ever directly update the code in the vendor folder.  You should update the library code and then update the version of the vendored dependency;;;","18/Oct/17 8:52 PM;ChristopherFerris;+200 to [~mastersingh24] comments. We should not be doing this.;;;","18/Oct/17 8:53 PM;ChristopherFerris;or should that be -200?;;;","18/Oct/17 9:59 PM;dubovitskaya;We also agree with [~mastersingh24] and [~ChristopherFerris] (see our comments above).

So shall we close this issue and leave things as they are?

[~binhn], would you have any objections? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update AttributeRequest type definition to match fabric-ca API,FAB-6668,22478,22472,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,18/Oct/17 7:16 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 6:12 PM,,,,,,,v1.1.0,,,fabric-sdk-node,,,,0,,,,,,,"The field ""require"" has been changed to ""optional"" so need to update the type definition of AttributeRequest",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjzj:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 7:30 PM;mastersingh24;https://gerrit.hyperledger.org/r/14635;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make sure that a tx with a txid which is equal to that of a previous tx in the same block is marked as invalid,FAB-6669,22479,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,18/Oct/17 7:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 7:28 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,security,,,,,,"Currently, we validate transactions in a block as follow: given its txid, make sure the ledger doesn't have a transaction with the same txid. This is a problem because we still allow two transactions with the same txid in the same block. This JIRA tracks required changes to fix this behaviour.",,ales,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjzr:",,,,,,,,,,,,,,,,,,,,,,ales,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 4:49 AM;jeffgarratt;[~ales] let me know if any issues.;;;","27/Oct/17 11:31 PM;ales;none, the CR is ready https://gerrit.hyperledger.org/r/14631
Thx!;;;","02/Nov/17 7:28 AM;jeffgarratt;[~ales] Closing as https://gerrit.hyperledger.org/r/14631 has been merged.;;;","02/Nov/17 7:46 PM;ales;(y) thx!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update AttrReq class definition to match fabric-ca API,FAB-6670,22480,22472,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,18/Oct/17 7:48 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,19/Oct/17 4:22 AM,,,,,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,,"https://github.com/hyperledger/fabric-sdk-java/blob/master/src/main/java/org/hyperledger/fabric_ca/sdk/EnrollmentRequest.java#L207

Need to change *require* to *optional* to match the update fabric-ca API definition",,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyjzz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Oct/17 10:50 PM;rickr;[~mastersingh24] Not following.  If you don't do any *addAttrReq* calls to the EnrollementRequest you won't get in the json any *""attr_reqs""* properties in the json at all.  So in essence it is _optional_. If you want an empty *""attr_reqs""* all you need call on the EnrollementRequest is invoke *addAttrReq()*.;;;","18/Oct/17 10:55 PM;mastersingh24;https://gerrit.hyperledger.org/r/14637;;;","18/Oct/17 11:04 PM;rickr;Thanks – see now it's a pending change.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transactions with private data but no public data do not go through VSCC validation,FAB-6671,22481,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ales,denyeart,denyeart,18/Oct/17 10:45 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Dec/17 7:51 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,VSCC validation applies only if there are public writes in a transaction.  Need to also perform VSCC validation if there are only private writes in a transaction (hashed rwset).,,ales,denyeart,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6859,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,"1|hzyk07:",,,,,,,,,,,,,,,,,,,,,,ales,denyeart,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 4:05 AM;jeffgarratt;Let me know if any issues with this [~ales].  Assuming it is under control.;;;","27/Oct/17 11:40 PM;ales;Yup, I plan to drop it today or over the weekend;;;","01/Nov/17 11:39 PM;jeffgarratt;Hey [~ales], can you link the CR when ready and close if good to go?

Thanks so much!;;;","02/Nov/17 12:19 AM;ales;Hey Jeff! Sure thing! Here it is: https://gerrit.hyperledger.org/r/#/c/14961/

It's under review since Mon. Any feedback is welcome!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serviceability - Peer - proto utils,FAB-6676,22486,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,19/Oct/17 3:44 AM,26/Jul/18 1:29 PM,28/Oct/23 3:01 AM,26/Jul/18 1:29 PM,,,,,,,v1.3.0,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk13:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jul/18 5:27 AM;wlahti;https://gerrit.hyperledger.org/r/c/24301/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test CI daily tests failing due to FAB-6387,FAB-6677,22487,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,19/Oct/17 3:51 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,23/May/18 6:53 AM,v1.0.3,,,,,,v1.2.0,,,fabric-quality,,,,0,ci-failure,,,,,,"chaincodes.feature tests for -FAB-4720-,-FAB-4721-,-FAB-4722- have been failing in the fabric-test CI daily runs for many days. We need to disable them for now, and keep this open so we can reuse this to reenable them later after FAB-6387 is fixed.",,jyellick,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6387,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk1b:",,,,,,,,,,,,,,,,,,,,,,jyellick,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"28/Apr/18 3:50 AM;scottz;Still waiting for 6271 and 6387 (and others) to be fixed, before we can reenable these tests and close this.;;;","05/May/18 12:12 AM;jyellick;FAB-6387 has merged, and FAB-6271 has a CR out there, which need to be rebase, presumably for the fixed in FAB-6387;;;","23/May/18 6:54 AM;nnao;https://gerrit.hyperledger.org/r/c/15739/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test CI daily tests failing due to FAB-6271,FAB-6678,22488,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,19/Oct/17 3:53 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,23/May/18 3:37 AM,v1.0.3,,,,,,v1.2.0,,,fabric-quality,,,,0,ci-failure,,,,,,"chaincodes.feature tests for FAB-5790 parts 3 and 4, have been failing in the fabric-test CI daily runs for many days. We need to disable them for now, and keep this open so we can reuse this to reenable them later after FAB-6271 is fixed.",,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk1j:",,,,,,,,,,,,,,,,,,,,,,nnao,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"28/Apr/18 3:50 AM;scottz;Still waiting for 6271 and 6387 (and others) to be fixed, before we can reenable these tests and close this.;;;","23/May/18 3:37 AM;nnao;https://gerrit.hyperledger.org/r/c/16781/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GossipState doesn't filter inter-peer messages by channel id ,FAB-6680,22492,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,thakkarparth007,thakkarparth007,thakkarparth007,19/Oct/17 8:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Feb/18 12:48 AM,v1.0.3,,,,,,,,,fabric-gossip,,,,0,,,,,,,"GossipState uses two go-channels, gossipChan and commChan. Both receive all gossip messages, and are supposed to process only relevant messages. commChan's filtering didn't have an explicit check to see if the message belonged to the same Fabric channel that this GossipState was handling. This caused an issue when lots of cross-channel messages are being sent (I was adding a peer to 8 channels at once - which didn't work)",,C0rWin,denyeart,scottz,thakkarparth007,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk1z:",,,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,scottz,thakkarparth007,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 1:51 PM;denyeart;[~thakkarparth007] Do you intend to fix?
[~yacovm] [~C0rWin] FYI;;;","27/Nov/17 3:47 PM;thakkarparth007;I did make a tiny change which _should_ fix it ([https://github.com/thakkarparth007/fabric/commit/0944ca6943fa1ec6afc6699a63aa8d2893c8b513),] but for some reason creating multiple channels at a time still fails. Not entirely sure why. I'll get back with more details shortly.;;;","02/Dec/17 1:09 AM;thakkarparth007;Not entirely sure what's going on when I'm trying to create multiple channels at once. There seems to be a deadlock. Only one channel gets created, and the others just get stuck.

I'm using the command line scripts (a modified version of the byfn.sh) to create multiple channels at once. Creating the channels serially works, but in parallel doesn't seem to work. As far as I know the client side isn't at fault here, but not entirely sure of that. The reason I'm not sure is that invoking chaincodes across multiple channels in parallel works fine.

Just reporting the symptoms since I'm not sure what's going on behind the scene here.;;;","20/Jan/18 6:18 PM;yacovm;[~thakkarparth007] channel creation isn't related to gossip.

[~scottz] , [~bmos299] - do you guys have a system test in which peers participate in multiple channels?;;;","21/Jan/18 2:29 AM;scottz;Yes. The ones we've run most recently with PTE use 2 channels, but we've done more in the past. We use a script to create all the channels and then join all the peers to all of the channels. [~dongming] is busy with testing the block filtering feature, but I'll ask him to run a test with more channels this week.

I am curious to know exactly what is meant by ""serially"" versus ""in parallel"".  [~thakkarparth007], are you using go threads to drive the BYFN script to create the channels in parallel threads? And I haven't looked at it from that perspective, but, is it possible that script is not designed to be threadsafe?;;;","02/Feb/18 12:48 AM;C0rWin;{quote}
commChan's filtering didn't have an explicit check to see if the message belonged to the same Fabric channel that this GossipState was handling
{quote}

so just to clarify, there is a code which explicitly checks whenever the message is belongs to particular channel gossip state responsible to handle, e.g.:

{code}
	remoteStateMsgFilter := func(message interface{}) bool {
		receivedMsg := message.(proto.ReceivedMessage)
		msg := receivedMsg.GetGossipMessage()
		if !(msg.IsRemoteStateMessage() || msg.GetPrivateData() != nil) {
			return false
		}
		// Ensure we  deal only with messages that belong to this channel
		if !bytes.Equal(msg.Channel, []byte(chainID)) {
			return false
		}
		connInfo := receivedMsg.GetConnectionInfo()
		authErr := services.VerifyByChannel(msg.Channel, connInfo.Identity, connInfo.Auth.Signature, connInfo.Auth.SignedData)
		if authErr != nil {
			logger.Warning(""Got unauthorized request from"", string(connInfo.Identity))
			return false
		}
		return true
	}
{code}

in particular those lines taking care of it:

{code}
		// Ensure we  deal only with messages that belong to this channel
		if !bytes.Equal(msg.Channel, []byte(chainID)) {
			return false
		}
{code}

Now, to the serial versus parallel channel creation:

{quote}
I'm using the command line scripts (a modified version of the byfn.sh) to create multiple channels at once. Creating the channels serially works, but in parallel doesn't seem to work. As far as I know the client side isn't at fault here, but not entirely sure of that. The reason I'm not sure is that invoking chaincodes across multiple channels in parallel works fine.
{quote}

[~thakkarparth007] Could you please open a separate JIRA item with more detailed explanation of what exactly do you mean while talking about parallel channel and how we actually could reproduce your issue?

Closing this item, since per JIRA description and details code works exactly as expected, i.e. gossip state filters inter-peer messages based on channel.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Refactor MSP to have expiration support, multiple msp principal needs, etc",FAB-6684,22496,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,19/Oct/17 6:11 PM,21/Jul/18 4:08 AM,28/Oct/23 3:01 AM,13/Mar/18 11:30 AM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,"Polishing the interfaces of MSP to address expiration needs, i.e., FAB-3768 and performance improvements. 

Detailed description is to be added.",,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8792,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,MSP Refactoring,Done,,,Unset,,,,"1|hzyk2n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,denyeart,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/18 11:30 AM;denyeart;Epic FAB-8792 is the same...let's close this one and use FAB-8792 since FAB-8792 has more detailed Description.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhancements to ATD to drive PTE,FAB-6685,22502,21029,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,19/Oct/17 10:30 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Oct/17 9:44 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Enhancements to ATD to drive PTE by creating the samplecc-chan-join-TLS.json, samplecc-chan-install-TLS.json, samplecc-chan-instantiate-TLS.json, copy the logs directory to the controller machine and cleanup the environment.",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyk47:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"30/Oct/17 9:50 AM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/14697/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE invoke tx optimization,FAB-6687,22600,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,john.d.sheehan,dongming,dongming,20/Oct/17 12:26 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Jan/18 6:03 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"In the loop of sending invoke transactions, for each transaction PTE
 * prepares the invoke transaction proposal
 * sends the proposal to peer
 * waits for the proposal response to form a transaction
 * sends the transaction to orderer

The preparation and waiting proposal response consumes about 10-15 ms which prevents PTE to send transactions at a very low frequency.  Users have to use multiple processes to achieve higher sending rate. Few things to consider to optimize the process:
 * move the preparation out of the loop, such as prepare the transaction by another process or before the sending loop
 * re-construct the loop, such as process the transaction in parallel",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyk9r:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authentication failed when using NL,FAB-6690,22701,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,20/Oct/17 2:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Oct/17 4:57 AM,,,,,,,,,,fabric-quality,,,,1,,,,,,,"Create network using ./networkLauncher.sh -o 1 -x 1 -r 1 -p 8 -n 1 -S enabled -w 127.0.0.1 and observe the following peer error

2017-10-18 21:16:20.040 UTC [gossip/comm] authenticateRemotePeer -> WARN 00c Identity store rejected 172.18.0.11:56762 : failed classifying identity: Unable to extract msp.Identity from peer Identity: Peer Identity [0a 08 50 ...... 2d 2d 0a] cannot be validated. No MSP found able to do that.2017-10-18 21:16:20.040 UTC [gossip/comm] GossipStream -> ERRO 00d Authentication failed: failed classifying identity: Unable to extract msp.Identity from peer Identity: Peer Identity [0a 08 50 ...... 2d 2d 0a] cannot be validated. No MSP found able to do that.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzykaf:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating assets acting differently in playground versus in network,FAB-6691,22702,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,eacoeytaux,eacoeytaux,20/Oct/17 2:50 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Oct/17 9:02 PM,,,,,,,,,,,,,,0,Composer,,,,,,"{color:#333333}As the simple example attached in {color}{color:#333333}test{color}{color:#333333}.bna shows, when one tries to update an asset registry from a promise callback returned from a different asset registry, the original asset registry will not update, although there is no error thrown.  This only happens in playground, whereas when the same code is run in a deployed network the code runs correctly.{color}",,davidkel,denyeart,eacoeytaux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/17 2:50 AM;eacoeytaux;test.bna;https://jira.hyperledger.org/secure/attachment/12700/test.bna",,,,,,,,,,,,,,,,,,,,,,"1|hzykan:",,,,,,,,,,,,,,,,,,,,,,davidkel,denyeart,eacoeytaux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 7:47 PM;denyeart;[~davidkel] Where should composer issues get logged?  I assume not in Fabric jira...;;;","24/Oct/17 8:42 PM;davidkel;[~denyeart] They can raise a stackoverflow question and tag it with hyperledger-composer, an alternative could be to raise a github issue at github.com/hyperledger/composer.;;;","24/Oct/17 9:02 PM;denyeart;Ok, closing since this is not a Fabric issue.  Please follow-up as suggested by Dave Kelsey.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instantiation fails in the network created by Network Launcher with TLS disabled,FAB-6692,22703,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,john.d.sheehan,shimos,shimos,20/Oct/17 3:39 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 11:11 PM,v1.0.3,,,,,,v1.1.0,,,fabric-quality,,,,0,PTE,,,,,,"When I created a network by Network Launcher with TLS disabled as in the following command,

{noformat}
$ ./networkLauncher.sh -a up -o 3 -x 6 -r 6 -p 2 -k 4 -z 3 -n 3 -t kafka -f test -w localhost -S disabled {noformat}

PTE (samplecc) fails in chaincode instantiation by timeout as follows:

{noformat}
$ for json in SCFiles/*.json; do sed -i 's|grpcs://|grpc://|' $json; done
$ for json in sampleccInputs/*.json; do sed -i 's/""TLS"": ""enabled""/""TLS"": ""disabled""/' $json; done
$ ./pte_driver.sh sampleccInputs/runCases-chan-create-TLS.txt
(successful. output omitted)
$ ./pte_driver.sh sampleccInputs/runCases-chan-join-TLS.txt
(successful. output omitted)
$ ./pte_driver.sh sampleccInputs/runCases-chan-install-TLS.txt
(successful. output omitted)
$ ./pte_driver.sh sampleccInputs/runCases-chan-instantiate-TLS.txt
(snip)
info: [PTE 0 main]: [performance_main:Nid=2] Successfully enrolled user 'admin'
info: [PTE 0 main]: [chaincodeInstantiate] org= org5, org name=PeerOrg5, channel name=testorgschannel3
info: [PTE 0 main]: [chainAddOrderer] channel name:  testorgschannel3
info: [PTE 0 main]: [chainAddOrderer] channel orderers:  grpc.primary_user_agent=grpc-node/1.6.6, _url=grpc://localhost:5007, addr=localhost:5007, , _request_timeout=200000,
info: [PTE 0 main]: [channelAddPeer1] channel name: testorgschannel3, org: org5
info: [PTE 0 main]: [channelAddEvent] channel name:  testorgschannel3
info: [EventHub.js]: _connect - options {}
info: [PTE 0 main]: [channelAddEvent] requests: grpc://localhost:7069, events: grpc://localhost:6059
info: [PTE 0 main]: [performance_main:Nid=1] Successfully enrolled user 'admin'
info: [PTE 0 main]: [chaincodeInstantiate] org= org3, org name=PeerOrg3, channel name=testorgschannel2
info: [PTE 0 main]: [chainAddOrderer] channel name:  testorgschannel2
info: [PTE 0 main]: [chainAddOrderer] channel orderers:  grpc.primary_user_agent=grpc-node/1.6.6, _url=grpc://localhost:5006, addr=localhost:5006, , _request_timeout=200000,
info: [PTE 0 main]: [channelAddPeer1] channel name: testorgschannel2, org: org3
info: [PTE 0 main]: [channelAddEvent] channel name:  testorgschannel2
info: [EventHub.js]: _connect - options {}
info: [PTE 0 main]: [chaincodeInstantiate:Nid=2] Successfully initialize channel[testorgschannel3]
info: [PTE 0 main]: [channelAddEvent] requests: grpc://localhost:7065, events: grpc://localhost:6055
info: [PTE 0 main]: [chaincodeInstantiate:Nid=1] Successfully initialize channel[testorgschannel2]
error: [Peer.js]: sendProposal - timed out after:200000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/fabric-client/lib/Peer.js:114:19)
    at ontimeout (timers.js:386:14)
    at tryOnTimeout (timers.js:250:5)
    at Timer.listOnTimeout (timers.js:214:5)
error: [PTE 0 main]: [chaincodeInstantiate] channelName(testorgschannel1) chaincode instantiation was bad
error: [PTE 0 main]: [chaincodeInstantiate] Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
info: [PTE 0 main]: Disconnecting the event hub: 0
error: [PTE 0 main]: [chaincodeInstantiate(Nid=0)] Failed to instantiate transaction on testorgschannel1 due to error:  Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
    at /opt/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/pte-main.js:765:23
    at process._tickCallback (internal/process/next_tick.js:109:7)
(snip)
{noformat}",fabric-test 106d55e8bc1ca09df83b8369a82386654944ea64,dongming,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzykav:",,,,,,,,,,,,,,,,,,,,,,dongming,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"24/Oct/17 11:20 PM;dongming;Please provide SCFiles and sampleccInputs/runCases-chan-instantiate-TLS.txt.;;;","26/Oct/17 10:54 PM;dongming;John, Thanks for looking into this.;;;","31/Oct/17 6:53 AM;shimos;[~dongming] Sorry for my late reply. SC files and runCase file I used are ones in the fabric-test repository (the necessary changes are performed by the `sed` command above)

And I think the cause was for NL not to set CORE_PEER_ADDRESS, and so the CR ( https://gerrit.hyperledger.org/r/c/14707/ ) will fix this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CLI does not support NOutOf syntax for Endorsement Policy,FAB-6694,22705,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,thakkarparth007,thakkarparth007,20/Oct/17 4:04 AM,23/Jan/20 7:13 AM,28/Oct/23 3:01 AM,23/Jan/20 7:13 AM,v1.0.3,,,,,,,,,fabric-tools,,,,0,stale-item,,,,,,"Fabric CLI allows using combination of ANDs and ORs only to specify endorsement policy. This limitation requires specifying verbose endorsement policies for simple things like ""And 3 out of 4 organization's members should sign"". This affects the performance, as well as usability.",,sykesm,thakkarparth007,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykbb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,sykesm,thakkarparth007,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 7:13 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configtxgen -printOrg does not properly marshal to JSON,FAB-6696,22707,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Oct/17 4:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,25/Oct/17 11:48 AM,,,,,,,v1.1.0,,,fabric-tools,,,,0,configtxgen,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykbr:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporarily Disable Node Chaincode Tests,FAB-6697,22708,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,20/Oct/17 5:35 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,25/Oct/17 5:26 AM,v1.0.3,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"The node chaincode tests are failing in the fabric-test smoke repository. As a result, no commits are passing the some tests that will allow for merging into the repo.

The issue that needs to be addressed in order for these tests to start passing again is https://jira.hyperledger.org/browse/FAB-6689.

Once this issue is fixed, the tests may be enabled again.

Ideally, these smoke tests will also be executed when committing code in the fabric-repo as well.",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykbz:",,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"25/Oct/17 4:24 AM;scottz;https://gerrit.hyperledger.org/r/#/c/14809/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
govendor required not installed by install_behave.sh or listed as requirement,FAB-6699,22710,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,RichardHill,RichardHill,20/Oct/17 7:13 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,31/Oct/17 12:06 AM,,,,,,,,,,fabric-build,,,,0,,,,,,,"After cloning     https://github.com/hyperledger/fabric-test

When running github.com/fabric-test/feature/scripts/install_behave.sh

govendor is required but not installed. The script installs  apt packages and python modules  so im not sure where to add this command.

 go get -u github.com/kardianos/govendor 

 ",,luomin,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykcf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,luomin,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"25/Oct/17 2:42 PM;luomin;https://gerrit.hyperledger.org/r/#/c/14831/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Cello v0.7,FAB-6700,22711,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,hightall,hightall,20/Oct/17 11:42 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Oct/17 11:46 AM,,,,,,,,,,,,,,0,,,,,,,change log should be generated just after rebasing to pick up the last minute merged CRs and linked from docs/source/releases.rst,,hightall,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykcn:",,,,,,,,,,,,,,,,,,,,,,hightall,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] Create a smoke test CI job in fabric,FAB-6705,22718,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,20/Oct/17 11:09 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 11:04 PM,v1.0.3,,,,,,v1.1.0,,,fabric-ci,,,,0,fabric-ci,,,,,,"Create a smoke test CI job in fabric. Job should execute the below steps

1) Clone fabric patch set and build docker images and binaries

2) Clone latest fabric-ca repository and build fabric-ca docker images

3) Clone latest fabric-test repository and fetch the smoke test suite

4) Execute smoke tests and publish results on Jenkins console",,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6665,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykdz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 11:37 PM;rameshthoomu;As per [~scottz] below are the tests we run as part of this smoke test job:

- protobufs accessible from our test environment
 - can override config env vars
 - can bring up networks with a channel and example02 chaincode and do invoke and query
 - with and without TLS
 - with GO chaincode and NODE chaincode
 - with solo and kafka
 - with levelDB and couchDB;;;","27/Oct/17 6:28 PM;mastersingh24;[~rameshthoomu]   [~scottz] [~bmos299]  

So my comment(s) on [https://gerrit.hyperledger.org/r/14733], but the net is that we don't need to continue to add additional CI jobs for every patch.   It's fine to run them separately for a short period as non-voting jobs, but at some point you need to either merge all behave tests into a single repo or minimally a single CI job.;;;","01/Nov/17 11:04 PM;rameshthoomu;a non-voting smoke test verify and merge job has been submitted for now.. based on the consistency of the job results will modify or add these tests in behave job to reduce the number of jobs for each build.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE crashes when attempting to failover orderer,FAB-6711,22729,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,sunhwei,holocron,holocron,21/Oct/17 3:37 AM,30/Jul/19 11:40 AM,28/Oct/23 3:01 AM,30/Jul/19 11:40 AM,,,,,,,,,,fabric-quality,,,,0,PTE,tools,,,,,"Attempting to use the {{*""ordererFailover"": ""TRUE"",* option recently added to PTE causes PTE to crash (all node processes exit).}}

 

{{Error in PTE log shows:}}
{code:java}
info: [PTE 0 main]: stderr: error: [PTE 0 exec]: [Nid:chan:org:id=2:channel56:PeerOrg5:0 invoke_move_const] Failed to send transaction due to error: Error: SERVICE_UNAVAILABLE
 at ClientDuplexStream.<anonymous> (/root/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:128:21)
 at emitOne (events.js:96:13)
 at ClientDuplexStream.emit (events.js:188:7)
 at ClientDuplexStream._emitStatusIfDone (/root/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:258:12)
 at ClientDuplexStream._readsDone (/root/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:221:8)
 at readCallback (/root/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:283:12){code}
  

Then:
{noformat}
info: [PTE 0 main]: stderr: (node:1729) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: Cannot read property 'getUrl' of undefined{noformat}
 

The orderers in the SCFile are configured as such:
{code:java}
{
 ""test-network"": {
 ""orderer"": {
 ""fabric-orderer-12121b"": {
 ""name"": ""OrdererOrg"",
 ""mspid"": ""OrdererOrg"",
 ""mspPath"": """",
 ""adminPath"": """",
 ""comName"": """",
 ""url"": ""grpcs://tor-zbc03b.3.secure.blockchain.ibm.com:12121"",
 ""server-hostname"": ""tor-zbc03b.3.secure.blockchain.ibm.com"",
 ""tls_cacerts"": ""/root/cacert.pem""
 },
 ""fabric-orderer-12121d"": {
 ""name"": ""OrdererOrg"",
 ""mspid"": ""OrdererOrg"",
 ""mspPath"": """",
 ""adminPath"": """",
 ""comName"": """",
 ""url"": ""grpcs://tor-zbc03d.3.secure.blockchain.ibm.com:12121"",
 ""server-hostname"": ""tor-zbc03d.3.secure.blockchain.ibm.com"",
 ""tls_cacerts"": ""/root/cacert.pem""
 },
 ""fabric-orderer-12121e"": {
 ""name"": ""OrdererOrg"",
 ""mspid"": ""OrdererOrg"",
 ""mspPath"": """",
 ""adminPath"": """",
 ""comName"": """",
 ""url"": ""grpcs://tor-zbc03e.3.secure.blockchain.ibm.com:12121"",
 ""server-hostname"": ""tor-zbc03e.3.secure.blockchain.ibm.com"",
 ""tls_cacerts"": ""/root/cacert.pem""
 }
 },
...{code}",,dongming,holocron,mastersingh24,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzykfj:",,,,,,,,,,,,,,,,,,,,,,dongming,holocron,mastersingh24,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/17 4:11 AM;dongming;Before PTE starts tansactions, PTE builds an orderer list for failover, as below:

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 assignOrdererList] orderer list: [\{""_options"":\{""grpc.ssl_target_name_override"":""orderer0.example.com"",""grpc.default_authority"":""orderer0.example.com"",""grpc.primary_user_agent"":""grpc-node/1.6.0""},""_url"":""grpcs://localhost:5005"",""_endpoint"":\{""addr"":""localhost:5005"",""creds"":\{}},""_request_timeout"":45000,""_ordererClient"":\{""$channel"":\{}}},\{""_options"":\{""grpc.ssl_target_name_override"":""orderer1.example.com"",""grpc.default_authority"":""orderer1.example.com"",""grpc.primary_user_agent"":""grpc-node/1.6.0""},""_url"":""grpcs://localhost:5006"",""_endpoint"":\{""addr"":""localhost:5006"",""creds"":\{}},""_request_timeout"":45000,""_ordererClient"":\{""$channel"":\{}}},\{""_options"":\{""grpc.ssl_target_name_override"":""orderer2.example.com"",""grpc.default_authority"":""orderer2.example.com"",""grpc.primary_user_agent"":""grpc-node/1.6.0""},""_url"":""grpcs://localhost:5007"",""_endpoint"":\{""addr"":""localhost:5007"",""creds"":\{}},""_request_timeout"":45000,""_ordererClient"":\{""$channel"":\{}}}]

 

When failover occurs, PTE shows the following logs, see Orderer failover and then continue to send transactions:

 

info: [PTE 0 main]: stderr: error: [Orderer.js]: sendBroadcast - on error: ""Error: Endpoint read failed\n at ClientDuplexStream._emitStatusIfDone (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:255:19)\n at ClientDuplexStream._receiveStatus (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:233:8)\n at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:757:12""

info: [PTE 0 main]: stderr: error: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 invoke_move_const] Failed to send transaction due to error: Error: SERVICE_UNAVAILABLE
 at ClientDuplexStream.<anonymous> (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:128:21)
 at emitOne (events.js:96:13)
 at ClientDuplexStream.emit (events.js:188:7)
 at ClientDuplexStream._emitStatusIfDone (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:258:12)
 at ClientDuplexStream._receiveStatus (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:233:8)
 at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:757:12

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 ordererFailover] Orderer failover from (grpcs://localhost:5005) to (grpcs://localhost:5006):

info: [PTE 0 main]: stderr: error: [Orderer.js]: sendBroadcast - on error: ""Error: Endpoint read failed\n at ClientDuplexStream._emitStatusIfDone (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:255:19)\n at ClientDuplexStream._receiveStatus (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:233:8)\n at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:757:12""

info: [PTE 0 main]: stderr: error: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org1:0 invoke_move_const] Failed to send transaction due to error: Error: SERVICE_UNAVAILABLE
 at ClientDuplexStream.<anonymous> (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:128:21)
 at emitOne (events.js:96:13)
 at ClientDuplexStream.emit (events.js:188:7)
 at ClientDuplexStream._emitStatusIfDone (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:258:12)
 at ClientDuplexStream._receiveStatus (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:233:8)
 at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:757:12

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org1:0 ordererFailover] Orderer failover from (grpcs://localhost:5005) to (grpcs://localhost:5006):

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org2:0 isExecDone] invokes(Move) sent: number=100, evtTimeoutCnt=0, elapsed time= 11133

info: [PTE 1 main]: stdout: info: [PTE 1 exec]: [Nid:chan:org:id=0:testorgschannel2:org4:0 isExecDone] invokes(Move) sent: number=200, evtTimeoutCnt=0, elapsed time= 17195

info: [PTE 1 main]: stdout: info: [PTE 1 exec]: [Nid:chan:org:id=0:testorgschannel2:org3:0 isExecDone] invokes(Move) sent: number=200, evtTimeoutCnt=0, elapsed time= 18317

info: [PTE 0 main]: stdout: info: [PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org1:0 isExecDone] invokes(Move) sent: number=200, evtTimeoutCnt=0, elapsed time= 19528

 

 

 

 

 

 

 ;;;","21/Oct/17 4:49 AM;dongming;what is the fabric-sdk-node commit level in your test?;;;","23/Oct/17 11:22 PM;holocron;6f7310ccda8648473d0f794e28c5b390ac030480 

- this is the 1.0.2 release;;;","26/Oct/17 10:53 PM;dongming;I am unable to recreate with v1.0.0, will look v1.0.2;;;","20/Nov/17 11:41 AM;sunhwei;I am unable to recreate it with node-sdk V1.0.0 and  fabric v1.1 preview ;;;","04/Jan/18 11:18 PM;sunhwei;Due to we can not re-produce this issue, suggest to close it.;;;","10/Jan/18 3:40 AM;holocron;Agreed. We will reopen if needed.;;;","30/Jul/19 11:40 AM;mastersingh24;been open over a year with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to add an organization using config update,FAB-6712,22730,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,Ratnakar,Ratnakar,21/Oct/17 3:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 2:48 AM,,,,,,,,,,fabric-tools,,,,0,,,,,,,"Unable to add a new organization to the existing Blockchain network.

Commit level: *9cea8c78360c4bfdee4b51870be22aa175886dcd*

 

Followed steps given here https://github.com/hyperledger/fabric/tree/master/examples/configtxupdate#reconfiguration-example using e2e_cli/byfn env setup",,jyellick,Ratnakar,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/17 3:59 AM;rohitadivi;orderer_logs.txt;https://jira.hyperledger.org/secure/attachment/12712/orderer_logs.txt",,,,,,,,,,,,,,,,,,,,,,"1|hzykfr:",,,,,,,,,,,,,,,,,,,,,,jyellick,Ratnakar,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Oct/17 3:55 AM;Ratnakar;while updating the channel configuration fails with the following error:

{code}

peer channel update -f config_update_in_envelope.pb -c mychannel -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
2017-10-20 16:09:08.834 UTC [gossip/privdata] 0 -> WARN 001 Configuration key peer.gossip.pvtData.transientstoreMaxBlockRetention isn't set, defaulting to 1000
2017-10-20 16:09:08.855 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-10-20 16:09:08.855 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-10-20 16:09:08.858 UTC [channelCmd] InitCmdFactory -> INFO 004 Endorser and orderer connections initialized
2017-10-20 16:09:08.858 UTC [msp] GetLocalMSP -> DEBU 005 Returning existing local MSP
2017-10-20 16:09:08.858 UTC [msp] GetDefaultSigningIdentity -> DEBU 006 Obtaining default signing identity
2017-10-20 16:09:08.858 UTC [msp] GetLocalMSP -> DEBU 007 Returning existing local MSP
2017-10-20 16:09:08.858 UTC [msp] GetDefaultSigningIdentity -> DEBU 008 Obtaining default signing identity
2017-10-20 16:09:08.859 UTC [msp/identity] Sign -> DEBU 009 Sign: plaintext: 0A9E060A074F7267324D53501292062D...41646D696E7312002A0641646D696E73
2017-10-20 16:09:08.859 UTC [msp/identity] Sign -> DEBU 00a Sign: digest: 81F0EF408AA017A360F399AC3F1B29BD54286F51DBEE80C01FBE4026AAC99604
2017-10-20 16:09:08.859 UTC [msp] GetLocalMSP -> DEBU 00b Returning existing local MSP
2017-10-20 16:09:08.859 UTC [msp] GetDefaultSigningIdentity -> DEBU 00c Obtaining default signing identity
2017-10-20 16:09:08.859 UTC [msp] GetLocalMSP -> DEBU 00d Returning existing local MSP
2017-10-20 16:09:08.859 UTC [msp] GetDefaultSigningIdentity -> DEBU 00e Obtaining default signing identity
2017-10-20 16:09:08.859 UTC [msp/identity] Sign -> DEBU 00f Sign: plaintext: 0AD5060A1508021A0608A4BFA8CF0522...74A06EB856839E7DACE73BD7EA5091E0
2017-10-20 16:09:08.859 UTC [msp/identity] Sign -> DEBU 010 Sign: digest: 79DE86F92591E0BF643D6BAD13DA93C79822391D02F37B355B049D5221D7F981
Error: got unexpected status: BAD_REQUEST -- Error authorizing update: Error validating DeltaSet: Policy for [Groups] /Channel/Application not satisfied: Failed to reach implicit threshold of 2 sub-policies, required 1 remaining
Usage:
 peer channel update [flags]

Flags:
 -c, --channelID string In case of a newChain command, the channel ID to create.
 -f, --file string Configuration transaction file generated by a tool such as configtxgen for submitting to orderer

Global Flags:
 --cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
 --logging-level string Default logging level and overrides, see core.yaml for full syntax
 -o, --orderer string Ordering service endpoint
 --ordererTLSHostnameOverride string The hostname override to use when validating the TLS connection to the orderer.
 --test.coverprofile string Done (default ""coverage.cov"")
 --tls Use TLS when communicating with the orderer endpoint
 -v, --version Display current version of fabric peer server

{code};;;","21/Oct/17 3:59 AM;rohitadivi;Added the orderer logs;;;","21/Oct/17 4:03 AM;jyellick;In review via https://gerrit.hyperledger.org/r/#/c/14745/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE failover list same as targetPeers,FAB-6713,22731,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,21/Oct/17 4:51 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Nov/17 5:11 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,PTE needs an option of peers failover candidate list to be the same as targetPeers value,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzykfz:",,,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"04/Nov/17 2:44 AM;scottz;https://gerrit.hyperledger.org/r/#/c/15081/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave tests using enccc_example chaincode to test encryption failing ,FAB-6714,22732,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,latitiah,Nishi,Nishi,21/Oct/17 4:51 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,02/Nov/17 3:00 AM,v1.1.0,,,,,,,,,fabric-crypto,,,,0,ci-failure,,,,,,"On fabric commit level *e4cb863f253d89ec223f5406f2da7126e6a3b63b*

Encryption tests using behave are failing @GET with the following error message:
{code:java}
Assertion Failed: Expected response was 123-45-6789; received Error occurred [u'docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/5af7ef2eb5c811e78f0854ee7539463f/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor '{\""Args\"": [\""ENC\"",\""GET\"", \""Social-Security-Number\""]}' --channelID behavesystest --transient \""{\\\""ENCKEY\\\"":\\\""i1jrKDxdmxuGNuonaOQmtlDVGAm9DZ5kCQgX7P1/jQQ=\\\""}\"" ""']: 2017-10-20 18:57:18.430 UTC [gossip/privdata] 0 -> WARN 001 Configuration key peer.gossip.pvtData.transientstoreMaxBlockRetention isn't set, defaulting to 1000
2017-10-20 18:57:18.454 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-10-20 18:57:18.454 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-10-20 18:57:18.454 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default escc
2017-10-20 18:57:18.454 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default vscc
2017-10-20 18:57:18.454 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 006 java chaincode enabled
2017-10-20 18:57:18.455 UTC [msp/identity] Sign -> DEBU 007 Sign: plaintext: 0AB4070A6B08031A0C088E8EA9CF0510...50D51809BD0D9E64090817ECFD7F8D04 
2017-10-20 18:57:18.455 UTC [msp/identity] Sign -> DEBU 008 Sign: digest: 64CA5B606916DB092A156532A77C48A01ADD9A52C532CD66792CB4AFE2A213A1 
Error: Error endorsing query: rpc error: code = Unknown desc = chaincode error (status: 500, message: encshim.GetState failed, err GetState error, stub.GetState returned nil value for key Social-Security-Number) - <nil>
Usage:
peer chaincode query [flags]

Flags:
-C, --channelID string The channel on which this command should be executed (default ""testchainid"")
-c, --ctor string Constructor message for the chaincode in JSON format (default ""{}"")
-x, --hex If true, output the query value byte array in hexadecimal. Incompatible with --raw
-n, --name string Name of the chaincode
-r, --raw If true, output the query value as raw bytes, otherwise format as a printable string
-t, --tid string Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64

Global Flags:
--cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
--logging-level string Default logging level and overrides, see core.yaml for full syntax
-o, --orderer string Ordering service endpoint
--test.coverprofile string Done (default ""coverage.cov"")
--tls Use TLS when communicating with the orderer endpoint
--transient string Transient map of arguments in JSON encoding
-v, --version Display current version of fabric peer server


{code}
Please find encryption-6439.feature attached.

This could be related to commit *f754f40d3165571cecf5fce43c8a034559983311*
 Merge ""-FAB-5080- Chaincode API Support for PrivateData""

 As tests failed on commit level:  *f754f40d3165571cecf5fce43c8a034559983311*

And since encryption tests ran successfully in behave on commit level *5ce16659ee78788f0b65536d3bd8f59e036989c3 (one commit before -FAB-5080-)*",,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 1:09 AM;Nishi;Error message during chaincode instantiation while running behave -n 6439;https://jira.hyperledger.org/secure/attachment/12821/Error+message+during+chaincode+instantiation+while+running+behave+-n+6439","21/Oct/17 4:24 AM;Nishi;encryption-6439.feature;https://jira.hyperledger.org/secure/attachment/12713/encryption-6439.feature",,,,,,,,,,,,,,,,,,,,,"1|hzykg7:",,,,,,,,,,,,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"25/Oct/17 11:44 AM;denyeart;In my local environment I am on commit after *f754f40d3165571cecf5fce43c8a034559983311*.

I tested enccc manually, and it is successful.  I am not able to reproduce this issue.

 [~Nishi]  please attempt manually and compare results with the behave test.  Here is the manual test that I performed:

 
peer chaincode install -n enccc -p [github.com/hyperledger/fabric/examples/chaincode/go/enccc_example|http://github.com/hyperledger/fabric/examples/chaincode/go/marbles02] -v 1{color:#000000} {color}
{color:#000000}peer chaincode instantiate -C myc -n enccc -c '\{""Args"":[""init""]}' -v 1 -o 127.0.0.1:7050
{color}
ENCKEY=`openssl rand 32 -base64`
peer chaincode invoke -n enccc -C myc -c '\{""Args"":[""ENC"",""PUT"",""Social-Security-Number"",""123-45-6789""]}' --transient ""\{\""ENCKEY\"":\""$ENCKEY\""}""
peer chaincode query -n enccc -C myc -c '\{""Args"":[""ENC"",""GET"",""Social-Security-Number""]}' --transient ""\{\""ENCKEY\"":\""$ENCKEY\""}""
 
It returns correct result:
 
Query Result: 123-45-6789;;;","26/Oct/17 2:24 AM;Nishi;On latest fabric commit level: 6662e4e7d3119b7b1cbfc4d5b89ef6e8f6392f3d

Tested encryption chaincode successfully using CLI commands.

 

On fabric-test commit level: 6f5a0c86240aada64c02d95b5fdb770edf5c3394 ""behave -n 6439"" from chaincode.feature failed.

It failed during chaincode instantiation during deploy..

After adding wait time of ""10"" seconds after deploy in test, chaincode got instantiated and tests ran successfully.

Can you please take a look why I had to add extra wait time for chaincode deployment to succeed?

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable mutual TLS between nodes and/or clients,FAB-6715,22733,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,21/Oct/17 8:38 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,11/May/18 5:51 PM,,,,,,,v1.2.0,,,fabric-orderer,fabric-peer,fabric-sdk-node,,1,Release-planning-1.1-PostAlpha,review-needed,sdk,,,,"The fabric peer and orderer runtimes actually support mutual TLS via the use of the common grpcServer component, however there is currently now way to configure either of them to require/enforce mutual TLS.

While not strictly required for Fabric networks, mutual TLS adds an extra layer of protection for publicly exposed endpoints",,denyeart,fredbi,gbolo,latitiah,mastersingh24,rickr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,59400,4500,38700,,,,,,,,,,,,FAB-7118,,,,,,,,,,,,,,,FABG-108,FAB-7762,FABJ-103,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykgf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,fredbi,gbolo,latitiah,mastersingh24,rickr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/17 7:59 PM;denyeart;Adding review-needed to top-level release features.;;;","01/Dec/17 1:11 AM;latitiah;Questions:
* Do we have any docs for APIs?
* How should one update the network when turning mutual TLS on (when it was initially off)? (Perform channel update first, then peers, I'm assuming.)
* Not clear what the orderer config setup should look like when mutual TLS is on. The JIRA issues refer to peer and orderer connections. (I see peer clientAuthRequired and clientRootCAs, but nothing for orderer. I want to make sure that nothing additional needs to be done with the orderer other than channel update to use mutual TLS.);;;","01/Dec/17 2:01 AM;gbolo;Hi [~mastersingh24]

Would like to know if it would be possible to add the ability to use a different client cert/key rather than having to use the same pair for both server and client.

Consider that one uses a globally trusted CA to sign the peer's server cert, we then have to add this globally trusted CA cert to other peers that this peer would gossip with, which makes it relatively simple for _anyone_ to acquire a certificate that the peer would trust which would limit the effectiveness of mutual TLS.

Does this sound reasonable, or is there some technical reason that I am not aware of which makes this request non-trivial?;;;","01/Dec/17 3:51 AM;gbolo;sub-task FAB-7237 was added after a quick chat with [~mastersingh24];;;","06/Dec/17 2:17 AM;latitiah;[~mastersingh24] Another point of clarification: I noticed that the file name changed for the user cert in the orderer from server.crt to client.crt when using cryptogen, but the contents look pretty much the same. It's not clear to me what should be different about these certificates, if anything, when using mutual TLS. Or is it a misunderstanding that the certificates will need to change at all? Any particular flags that need to be set?;;;","11/Jan/18 8:46 AM;Clayton Sims;Marking remaining work post v1.1 alpha.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable mutual TLS support for orderer nodes,FAB-6716,22734,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,21/Oct/17 8:47 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,25/Oct/17 5:09 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"The orderer already supports the ability to enable / enforce mutual TLS, however it does not support updating the trusted root certificates for clients based on channel membership.  

In order to accomplish this, a callback needs to be triggered everytime there is a config update and if mutual TLS is required the list of trusted client CAs can be updated by using the capability of the comm.GRPCServer component to dynamically update CAs at runtime.

The channel resource/config manager already supports the ability to invoke callback functions on config updates so all that is required is to create the callback function and hook all of this together.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";28/Oct/17 7:47 PM;mastersingh24;14400",,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykgn:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Oct/17 10:01 PM;mastersingh24;Most of the code to do the actual processing of updates exists in the peer code.  While the optimal solution would be to refactor that code, the singleton nature of the peer makes this a bit difficult and a bit more risky so initially I plan to copy/reuse code and included it in the orderer/common/server package.  It will be written in such a way that it can later be moved to a common package if desired.;;;","23/Oct/17 10:01 PM;mastersingh24;https://gerrit.hyperledger.org/r/14773;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement Private Data Functions in Mock Stub,FAB-6717,22736,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bstasyszyn,bstasyszyn,bstasyszyn,22/Oct/17 5:49 AM,12/Jun/20 12:30 AM,28/Oct/23 3:01 AM,20/Jul/18 7:16 AM,,,,,,,,,,fabric-peer,,,,1,,,,,,,"The following private data functions in the MockStub need to be implemented:
 - GetPrivateData
 - PutPrivateData
 - DelPrivateData
 - GetPrivateDataByRange
 - GetPrivateDataByPartialCompositeKey

 

see https://gerrit.hyperledger.org/r/#/c/14791/",,bstasyszyn,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6600,,,,,,,,,,,,,,,,,,FAB-8718,,,,,,,,,"1|hzwqfj:1",,,,,,To Do,,,,,,,,,,,,,,,,bstasyszyn,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 10:22 PM;bstasyszyn;https://gerrit.hyperledger.org/r/#/c/14791/
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add mutual TLS flag to comm.GRPCServer,FAB-6718,22737,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,22/Oct/17 9:09 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 5:17 PM,,,,,,,v1.1.0,,,,,,,0,,,,,,,The comm.GRPCServer implementation supports mutual TLS but there currently does not have a flag which indicated whether or not mutual TLS is required.,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";28/Oct/17 7:47 PM;mastersingh24;900",";28/Oct/17 7:48 PM;mastersingh24;300",1800,0,1200,66%,1800,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykh3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Oct/17 9:33 PM;mastersingh24;https://gerrit.hyperledger.org/r/14749;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow loading system chaincodes as Go plugins,FAB-6719,22738,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,22/Oct/17 9:56 PM,21/Jul/18 3:47 AM,28/Oct/23 3:01 AM,17/Feb/18 10:54 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,docs-needed,release-planning-1.1,,,,,"Hyperledger Fabric allows inter-changeable components such as transaction endorsement and validation checks by extracting out this functionality into system chaincodes. Users can provide custom system chaincodes to implement application specific behaviour.

Due to limitations in the Go language at the time of implementation, system chaincodes were statically compiled into the peer. Users must change fabric source code and recompile the peer to include custom system chaincode. This design can be improved by using Go plugins available since 1.8.

We propose to allow loading system chaincodes as plugins. Once loaded, they will behave like regular system chaincodes compiled into the peer.",,divyank,guoger,Hangyu_FJH,mastersingh24,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5688,,,FAB-5378,FAB-2454,FAB-6189,FAB-6159,FAB-6810,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykhb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,divyank,guoger,Hangyu_FJH,mastersingh24,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/17 3:17 AM;mastersingh24;[~divyank] - Can you open another JIRA for documentation for how to write and configure SCC plugins?;;;","31/Oct/17 5:21 AM;divyank;I created FAB-6810 and assigned it to myself.;;;","30/Mar/18 4:41 PM;guoger;[~divyank] The scc plugin I'm developing depends on {{libltdl}}, which is dynamically linked. Therefore, we require peer docker image to come with {{libltdl-dev}} installed. Instead of having user rebuild their peer image, I wonder if we could make this dependency part of official peer image, or even baseimage. So I'm just checking if other scc plugins need it.

cc [~mastersingh24]

Thanks!;;;","30/Mar/18 10:42 PM;divyank;All system chaincodes transitively depend on libtool through shim -> bccsp -> pkcs11 -> libtool.

As of today, if you have a dynamically built peer that has not disabled PKCS11, you will need custom peer images with libtool available at runtime. We do this by using a custom base image and the BASE_DOCKER_NS make option in the fabric build.

Previous attempts to add ltdl to baseimage have met arguments about how PKCS11 should be distributed with fabric. You can read about this here:
[https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-April/000774.html]
[https://gerrit.hyperledger.org/r/c/13469/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create protobuf definitions,FAB-6720,22741,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,23/Oct/17 5:20 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/May/18 6:28 AM,v1.2.0,,,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,,"Protobuf structure and service definition is needed to be consumed by the clients, and populated by the service.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykhz:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI outputs a private data warning message ,FAB-6721,22742,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,23/Oct/17 5:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Oct/17 8:29 PM,v1.1.0,,,,,,v1.1.0,,,fabric-gossip,fabric-peer,,,0,,,,,,,"The following code 
{code}
func init() {
	logger = util.GetLogger(util.LoggingPrivModule, """")
	if transientBlockRetention == 0 {
		logger.Warning(""Configuration key"", transientBlockRetentionConfigKey, ""isn't set, defaulting to"", transientBlockRetentionDefault)
		transientBlockRetention = transientBlockRetentionDefault
	}
}
{code}

makes the peer CLI emit a warning message about an un-initialized config value.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykj3:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update gossip with chaincode metadata,FAB-6723,22745,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,23/Oct/17 4:45 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Apr/18 5:48 PM,v1.2.0,,,,,,v1.2.0,,,fabric-gossip,fabric-peer,,,0,,,,,,,"The gossip layer needs to be updated about chaincodes that are installed in the peer and also instantiated on a specific channel.

This is to be able to disseminate information about installed and instantiated chaincodes (each peer would disseminate to other peers in the channel the installed chaincodes it has that have been instantiated too).

What I think we need to do, is to first to enumerate the installed CCs on the peer and then for each such CC, check LSCC.
* Installed chaincodes: 
** At startup, scan the file system to see what chaincodes have been instantiated
** After a successful chaincode install also add the installed chaincode to the set
* Instantiated chaincodes:
** At startup, do a LSCC query to the scan the chaincodes in the channel
** Post validation, if a transaction with a target chaincode of LSCC exists in the block, rescan the LSCC namespace for installed CCs

[~C0rWin] , [~mastersingh24], [~ales] [~jyellick] thoughts?",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyki7:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve debug for private data,FAB-6724,22748,13484,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,23/Oct/17 10:20 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Oct/17 12:10 AM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,Improve debug messages for private data.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykjr:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Oct/17 12:10 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/14775/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-Test: (Behave) Remove extra parameter from an implementation function to make it functional,FAB-6725,22749,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,23/Oct/17 11:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 6:22 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"The implementation of the statement of the form:
a user invokes XXX times using chaincode with args YYY
Has an extra parameter in its definition that will make it to fail. This extra parameter (""name"") is to be removed.",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykjz:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"24/Oct/17 8:55 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/14689/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NL supports couchDB,FAB-6727,22751,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,24/Oct/17 12:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Oct/17 11:27 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,Network Launcher supports couchDB: add couchDB section and peer env parameters (CORE_LEDGER_STATE_STATEDATABASE and CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS in network.json and update json2yml.js accordingly.,,dongming,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6473,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzykkf:",,,,,,,,,,,,,,,,,,,,,,dongming,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"24/Oct/17 2:22 AM;yuki-kon;Hello [~dongming]. This issue is duplicated. I have already submitted a patch to add CouchDB to Network Launcher.
https://jira.hyperledger.org/browse/FAB-6473
https://gerrit.hyperledger.org/r/#/c/14249/

Can I add duplicate tag?
;;;","24/Oct/17 2:45 AM;dongming;Yuki Kondo, Thanks for improve network launcher.  Since you have submitted a patch for adding couchDB to NL, you can make this as dup.;;;","24/Oct/17 2:51 AM;yuki-kon;Thank you [~dongming]. Let me make this as duplicated.;;;","24/Oct/17 5:04 AM;dongming;Yuki, Could merge my changes, [https://gerrit.hyperledger.org/r/#/c/14783/,] into your changes?  Most of them are already in your patch.;;;","24/Oct/17 6:59 AM;yuki-kon;[~dongming], Thank you for your comment. I merged your changes to my changes. CR is posted here. [https://gerrit.hyperledger.org/r/#/c/14249/];;;","24/Oct/17 11:27 PM;dongming;Close for the changes are included in FAB-6473.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Behave Framework: Failure when saving container log files for cli container,FAB-6728,22752,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,latitiah,latitiah,latitiah,24/Oct/17 1:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Oct/17 10:47 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"When there is a failure on CI in the behave framework, the log files from the containers is saved for each test run. The following failure has been seen:
{code}
File ""environment.py"", line 25, in getLogFiles
00:48:42.897     with open(namePart + fileSuffix, ""w+"") as logfile:
00:48:42.897 IOError: [Errno 2] No such file or directory: u'cli_FAB-5789:_Test_chaincode_marbles02_initMarble/readMarble/transferMarble/transferMarblesBasedOnColor_in_NODE_language_and_leveldb_database_for_solo_orderer_--_@1.3_.log'
{code}
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykkn:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"24/Oct/17 1:11 AM;latitiah;This fails because the code is trying to open a directory structure with the ""/""s in the name.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - update fabric-sdk-rest CI scripts to run on both dev and master branch,FAB-6730,22754,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,24/Oct/17 3:51 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/May/18 8:23 AM,v1.0.3,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"Update fabric-sdk-rest CI scripts to run tests on both dev and master branch. In the current approach, we see master branch code is pulling up when a change is merged to dev branch.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykl3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/18 8:23 AM;rameshthoomu;Code change has been merged few months ago in CI. Removed the hardcoded branch configuration from sdk-rest-merge job.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TLS config InsecureSkipVerify should set to false,FAB-6731,22800,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,grapebaba,grapebaba,24/Oct/17 5:21 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Oct/17 5:54 PM,,,,,,,,,,fabric-crypto,fabric-gossip,,,0,,,,,,,I think InsecureSkipVerify should be only set to true in testing. Why we also set true in [https://github.com/hyperledger/fabric/blob/master/gossip/comm/comm_impl.go#L670-L675] here?[~yacovm] [~C0rWin],,grapebaba,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyklj:",,,,,,,,,,,,,,,,,,,,,,grapebaba,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 5:38 PM;yacovm;Because the comm layer has 2 constructors - one that receives a port number which is only used in testing, and creates its own gRPC layer as in your link, and the other constructor receives its own dial options from the layers above that is used in production.;;;","24/Oct/17 5:53 PM;grapebaba;OK;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in gossip/private,FAB-6732,22801,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,fennelD7,fennelD7,fennelD7,24/Oct/17 5:43 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 2:41 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"[https://github.com/hyperledger/fabric/blob/1e876e3852a05afb52d25265566baa109537b8b9/gossip/privdata/coordinator.go#L76]

where date should be data.",,fennelD7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyklr:",,,,,,,,,,,,,,,,,,,,,,fennelD7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Oct/17 5:49 PM;fennelD7;https://gerrit.hyperledger.org/r/#/c/14799/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a gRPC service handler for service discovery ,FAB-6733,22802,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 6:19 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Mar/18 11:39 PM,,,,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,,a gRPC service handler needs to be created out of the protobuf definition,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykiv:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 1:29 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/15083/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create support interface for service discovery,FAB-6734,22803,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 6:23 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"The service discovery needs support from the peer facilities to do things such as:
* Enumerate peers
* Enumerate chaincode list of the current peer
* Enumerate policies of instantiated chaincodes.
* Validate identity
* Check policy of a signature set
* Verify signature
* Know when configuration changes (i.e config update and / or upgrade of chaincode, instantiate)

Note: all operations above should be channel scoped",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykif:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create access control cache to memoize previous authentication checks,FAB-6735,22804,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 6:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Mar/18 9:21 PM,,,,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,,"As per the design doc, an optimization that one could make is a cache that caches signature checks in order to reduce CPU utilization.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykin:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create endorsement descriptor builder for service discovery,FAB-6736,22805,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 6:28 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,The service discovery returns to the client an endorsement descriptor builder that can produce endorsement descriptors given a policy.,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyklz:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Integrate support, endorsement descriptor builder and access control cache into the discovery service handler",FAB-6737,22806,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 6:31 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"When all the missing pieces from above are present, we can glue everything together to provide the needed functionality for clients.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykm7:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetState using CouchDB is frequently failing to return any data.,FAB-6738,22807,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,chris.elder,davidkel,davidkel,24/Oct/17 6:40 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Oct/17 7:28 AM,v1.1.0,,,,,,v1.0.4,v1.1.0,,fabric-ledger,,,,0,,,,,,,"For a while composer has created composite keys in a specific format and this has worked fine. Since the introduction of a change to the GetState protocol, GetState has not been returning information. Looking in the peer logs I see GetState calls which work
{code}
[36m2017-10-24 06:30:27.599 UTC [chaincode] func1 -> DEBU d82[0m [9f29b84b] getting state for chaincode systest-accesscontrols, key �$syscollections�$sysregistries�, channel composerchannel
[36m2017-10-24 06:30:27.599 UTC [statecouchdb] GetState -> DEBU d83[0m GetState(). ns=systest-accesscontrols, key=�$syscollections�$sysregistries�
[36m2017-10-24 06:30:27.599 UTC [couchdb] ReadDoc -> DEBU d84[0m Entering ReadDoc()  id=[systest-accesscontrols��$syscollections�$sysregistries�]
[36m2017-10-24 06:30:27.599 UTC [couchdb] handleRequest -> DEBU d85[0m Entering handleRequest()  method=GET  url=http://couchdb.org1.example.com:5984/composerchannel/systest-accesscontrols%00%00$syscollections%00$sysregistries%00?attachments=true
[36m2017-10-24 06:30:27.600 UTC [couchdb] handleRequest -> DEBU d86[0m HTTP Request: GET /composerchannel/systest-accesscontrols%00%00$syscollections%00$sysregistries%00?attachments=true HTTP/1.1 | Host: couchdb.org1.example.com:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
[36m2017-10-24 06:30:27.601 UTC [couchdb] handleRequest -> DEBU d87[0m Exiting handleRequest()
[36m2017-10-24 06:30:27.601 UTC [couchdb] ReadDoc -> DEBU d88[0m Exiting ReadDoc()
[36m2017-10-24 06:30:27.601 UTC [chaincode] func1 -> DEBU d89[0m [9f29b84b]Got state. Sending RESPONSE
[36m2017-10-24 06:30:27.601 UTC [chaincode] 1 -> DEBU d8a[0m [9f29b84b]handleGetState serial send RESPONSE
{code}
And this key generates the correct url to query couchdb. 
However we have many examples where an incorrect url is being generated. For example
{code}
[36m2017-10-24 06:30:27.585 UTC [chaincode] func1 -> DEBU d75[0m [9f29b84b] getting state for chaincode systest-accesscontrols, key �$sysregistries�Asset:org.hyperledger.composer.system.Identity�, channel composerchannel
[36m2017-10-24 06:30:27.585 UTC [statecouchdb] GetState -> DEBU d76[0m GetState(). ns=systest-accesscontrols, key=�$sysregistries�Asset:org.hyperledger.composer.system.Identity�
[36m2017-10-24 06:30:27.585 UTC [couchdb] ReadDoc -> DEBU d77[0m Entering ReadDoc()  id=[systest-accesscontrols��$sysregistries�Asset:org.hyperledger.composer.system.Identity�]
[36m2017-10-24 06:30:27.585 UTC [couchdb] handleRequest -> DEBU d78[0m Entering handleRequest()  method=GET  url=http://couchdb.org1.example.com:5984/composerchannel/.%2Fsystest-accesscontrols%00%00$sysregistries%00Asset:org.hyperledger.composer.system.Identity%00?attachments=true
[36m2017-10-24 06:30:27.585 UTC [couchdb] handleRequest -> DEBU d79[0m HTTP Request: GET /composerchannel/.%2Fsystest-accesscontrols%00%00$sysregistries%00Asset:org.hyperledger.composer.system.Identity%00?attachments=true HTTP/1.1 | Host: couchdb.org1.example.com:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  | 
[36m2017-10-24 06:30:27.587 UTC [couchdb] handleRequest -> DEBU d7a[0m Couch DB Error:not_found,  Status Code:404,  Reason:missing
[36m2017-10-24 06:30:27.587 UTC [couchdb] ReadDoc -> DEBU d7b[0m Document not found (404), returning nil value instead of 404 error
[36m2017-10-24 06:30:27.587 UTC [chaincode] func1 -> DEBU d7c[0m [9f29b84b]No state associated with key: 
?�$sysregistries�Asset:org.hyperledger.composer.system.Identity�. Sending RESPONSE with an empty payload
[36m2017-10-24 06:30:27.587 UTC [chaincode] 1 -> DEBU d7d[0m [9f29b84b]handleGetState serial send RESPONSE
{code}
the peer is incorrectly adding '.%2F' to the front of the url which makes the url incorrect for the data it wants to query and returns nothing.
There doesn't appear to be a problem with PutState as I can see the data is created in CouchDB
This is a blocker for hyperledger composer.",,chris.elder,davidkel,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykmf:",,,,,,,,,,,,,,,,,,,,,,chris.elder,davidkel,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Oct/17 7:38 PM;denyeart;Strange that the problem is intermittent. %2F is a forward slash, which is one of the special characters that is handled explicitly: [https://gerrit.hyperledger.org/r/#/c/13993/1/core/ledger/util/couchdb/couchdb.go] .

[~davidkel] we may need to add some additional trace to understand what is going on. Are you able to cherry pick changes from gerrit and build your own peer?;;;","24/Oct/17 7:47 PM;davidkel;It's not intermittent. Pretty sure it only happens to our keys that have colon in them. I've just added some debug code to the peer to see what might be the cause. It could be a problem with a Go Library. Just to confirm I am building with Go 1.9.1 as I see that is the level of Go the builds are using, but I could be wrong.;;;","24/Oct/17 7:57 PM;davidkel;So it looks like it's how the go library has generated the initial url.
code mods are
{code}
func encodePathElement(str string) string {
	logger.Debugf(""Entering encodePathElement()  string=[%s]"", str)
	u := &url.URL{}
	u.Path = str
	encodedStr := u.String() // url encode using golang url path encoding rules
	logger.Debugf(""go url encoded response encodedStr=[%s]"", encodedStr)
	encodedStr = strings.Replace(encodedStr, ""/"", ""%2F"", -1)
	encodedStr = strings.Replace(encodedStr, ""+"", ""%2B"", -1)
	logger.Debugf(""Exiting encodePathElement()  encodedStr=[%s]"", encodedStr)
	return encodedStr
}
{code}

gave this output
{code}
2017-10-24 11:51:34.122 UTC [couchdb] encodePathElement -> DEBU f1a Entering encodePathElement()  string=[systest-accesscontrols$syscollectionsAsset:org.hyperledger.composer.system.AssetRegistry]
2017-10-24 11:51:34.122 UTC [couchdb] encodePathElement -> DEBU f1b go url encoded response encodedStr=[./systest-accesscontrols%00%00$syscollections%00Asset:org.hyperledger.composer.system.AssetRegistry%00]
2017-10-24 11:51:34.122 UTC [couchdb] encodePathElement -> DEBU f1c Exiting encodePathElement()  encodedStr=[.%2Fsystest-accesscontrols%00%00$syscollections%00Asset:org.hyperledger.composer.system.AssetRegistry%00]
{code}
So as you can see the go library has added './' to the front of the string then the encodePathElement encodes it. I can confirm that if you don't encode it to %2F the query would work.;;;","25/Oct/17 1:38 AM;denyeart;[~davidkel] Can you try the fix and let us know results?  [https://gerrit.hyperledger.org/r/#/c/14811/]

 ;;;","25/Oct/17 3:24 AM;davidkel;[~denyeart] I will give it a go tomorrow. Could you remind me again how to apply the change set as it isn't something I have done before, otherwise it's just as easy for me to copy the change into my code and rebuild.;;;","25/Oct/17 3:47 AM;denyeart;[~davidkel] In Gerrit top-right of page, there is a Download pulldown.  There are two options there that will work:

Click on the 'Cherry Pick' to pull these changes into your local branch.

Click on the 'Checkout' to switch to a branch equivalent to the changesets.

In either case, paste the command syntax to your git command line to get the new code, and then rebuild.

Of course, when the change is small like this, it is simple to copy/paste the code itself, but I'd recommend to get familiar with Cherry Pick and Checkout, as they will be helpful for more complex changes in the future.;;;","25/Oct/17 6:59 PM;davidkel;[~denyeart] I have tested the change and it has fixed the problem for us. Many thanks;;;","25/Oct/17 8:24 PM;mastersingh24;[~denyeart] - is this actually needed for 1.0.4?;;;","27/Oct/17 8:04 PM;mastersingh24;[~chris.elder] Looks like we need to backport this to the release branch but a simply cherry pick won't work due to a merge conflict.

Can you backport this fix to the release branch?;;;","27/Oct/17 9:15 PM;denyeart;[~mastersingh24] Yes we'll want this for 1.0.4, Chris indicated he could backport today.;;;","27/Oct/17 10:07 PM;chris.elder;Backport is complete.  I have pushed this change for the release branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement configuration change detection into discovery support,FAB-6739,22808,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 7:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"The discovery service needs to know when configuration changes, when chaincode upgrades are made, when new chaincodes are instantiated, etc. ",,yacovm,yuanlv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykmn:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,yuanlv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Mar/18 9:02 AM;yuanlv;Is this issue need to process, I want to know more detail about this issue.;;;","25/Mar/18 4:16 PM;yacovm;Hey, sorry - this item was already sort of done, I just need to synchronize the JIRA with the reality... ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use SKI as well as RawSubject to uniquely identity root certificates,FAB-6740,22810,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,mastersingh24,mastersingh24,24/Oct/17 9:17 PM,11/Aug/19 6:44 PM,28/Oct/23 3:01 AM,11/Aug/19 6:44 PM,,,,,,,Future,,,fabric-orderer,fabric-peer,,,0,,,,,,,"The GRPCServer.SetClientRootCAs() function currently eliminates duplicate root certificates by using a map with a key based on the RawSubject.   While it should not be the case that we should end up with duplicate subjects nor should it be the case that the root certificate for an org should differ across channels, it is possible for this to happen.  So we need a better way to uniquely key root certificates.  

SubjectKeyIdentifier should be unique across root certificates.  It's not a mandatory field so we'll need to maintain two maps but if SKI exists we won't add it to the RawSubject map.",,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykn3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 9:52 PM;mastersingh24;Will defer this to 1.2.  If it turns out to be an issue for 1.1, we can mark it as a bug and fix.;;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","11/Aug/19 6:44 PM;mastersingh24;Has not proven to be an issue to date;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecate gossip metadata to use only the existing Properties,FAB-6741,22811,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,24/Oct/17 9:46 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,v1.2.0,,,,,,v1.2.0,,,fabric-gossip,,,,0,,,,,,,"The gossip channel metadata serializes a uint64 that specifies the ledger height.
It's not extensible since it's not proto or anything of the sort.'

In v1.1 we extended the stateInfo message with a new field called properties which is a proto field and is extensible. 

Now, for v1.2 it is time to deprecate the old metadata and use only the Properties.

As a result, peers in v1.0 won't be able to speak in channel context with peers in v1.2 onwards.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyknb:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network Launcher,FAB-6742,22814,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,24/Oct/17 11:12 PM,26/Feb/20 10:49 PM,28/Oct/23 3:01 AM,08/Aug/19 5:46 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"This is the epic for all Network Launcher enhancement.

The network launcher locates in [https://github.com/hyperledger/fabric-test] under directory tools/NL. ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Network Launcher (NL),Done,,,Unset,,,,"1|hzx30h:",,,,Unset,Unset,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer panics when hash of pvt data doesn't match hash in public data,FAB-6744,22816,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,bstasyszyn,bstasyszyn,24/Oct/17 11:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 8:08 PM,,,,,,,,,,fabric-gossip,,,,0,,,,,,,"Steps to reproduce:
-	Create a chaincode that invokes PutPrivateData on a collection, key, and random value (generated inside the chaincode)
-	Invoke the chaincode on at least two peers (the random value will be different for each of the endorsers)

One (or both) of the peers panics:

peer0.example.com     | 2017-10-24 13:49:34.730 UTC [gossip/state] commitBlock -> ERRO 07a Got error while committing(Hash of pvt data for collection [mapcc6:col3] does not match with the corresponding hash in the public data. 
peer0.example.com     | 					public hash = [[]byte{0xdc, 0xda, 0xe3, 0xac, 0xb8, 0x97, 0xb3, 0x68, 0x1e, 0x96, 0xc9, 0x15, 0x4e, 0xfa, 0x6c, 0x83, 0x99, 0x85, 0x43, 0x84, 0x2d, 0x49, 0x17, 0xa8, 0x9e, 0xeb, 0xc, 0xdd, 0xdb, 0x90, 0x7d, 0xf8}], pvt data hash = [[]byte{0xd3, 0x9e, 0xe0, 0xe1, 0xc9, 0x5d, 0x94, 0xc0, 0x31, 0xc4, 0x30, 0x9f, 0x8d, 0xed, 0xbb, 0x40, 0xb7, 0xb6, 0x8c, 0xc4, 0xb1, 0x5f, 0xa1, 0xb6, 0x26, 0x9f, 0x80, 0x22, 0xfe, 0xcd, 0x7c, 0xcf}]
peer0.example.com     | commit failed
peer0.example.com     | github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:209
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:773
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:557
peer0.example.com     | runtime.goexit
peer0.example.com     | 	/opt/go/src/runtime/asm_amd64.s:2337
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:774
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:557
peer0.example.com     | runtime.goexit
peer0.example.com     | 	/opt/go/src/runtime/asm_amd64.s:2337)
",,bstasyszyn,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Oct/17 5:20 AM;bstasyszyn;peerlogs.log;https://jira.hyperledger.org/secure/attachment/12813/peerlogs.log",,,,,,,,,,,,,FAB-1151,,,,,,,,,"1|hzyknz:",,,,,,,,,,,,,,,,,,,,,,bstasyszyn,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Oct/17 7:06 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/14865/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Panic on modification of root config group,FAB-6746,22821,21238,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Oct/17 12:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Jan/18 12:15 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,[~jeffgarratt] managed to recreate this in the bdd tests.  The zero length path occurs only for the root config group element (other elements in the root are not affected).,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykov:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Oct/17 12:26 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/14795/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configtxgen/localconfig unable to read V1.1 sample profiles,FAB-6747,22823,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,25/Oct/17 1:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 8:00 PM,,,,,,,,,,fabric-tools,,,,0,configtxgen,,,,,,"localconfig.go's Load function:
{code:java}
func Load(profile string) *Profile {code}
is unable to read in the sample V1.1 profiles due to the period in the profile name as defined in sampleconfig/configtx.yaml (e.g. SampleSingleMSPChannelV1.1). The V1.1 sample profiles should be updated to use underscores instead so Viper is able to read them in as expected.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykp3:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Oct/17 2:05 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14813/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add MessageSet in Gossip communication layer,FAB-6749,22827,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,grapebaba,grapebaba,25/Oct/17 10:45 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,25/Oct/17 7:53 PM,,,,,,,Abandoned,,,fabric-gossip,,,,0,,,,,,,"Unless I am missing something, Gossip layer right now just expose interfaces only send one message in one send round. Shall we consider introduce features sending multiple messages in one send round?

In my mind, define a new type of gossip message 'messageSet'  which contains a slice of messages, may not need interface change. [~C0rWin] [~yacovm]",,C0rWin,grapebaba,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykpz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,grapebaba,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Oct/17 3:47 PM;yacovm;Don't see the point in doing that:
* You can always create a message that aggregates smaller messages
* When you send a message to a peer, it is queued into a buffer for transmission. 

So, to send n messages you can just iterate and invoke Send() n times. 

By the way, there are no real rounds as you mentioned since we work in the real world in which time advances asynchronously and not synchronously :) ;;;","25/Oct/17 3:58 PM;grapebaba;Yeah, I noted we have a batch emit and buffer the messages in channel, iterate and invoke Send() n times. How about aggregates these messages and invoke Send() one time? I am not sure if the latter one can reduce time since I don't test it.

 ;;;","25/Oct/17 4:03 PM;yacovm;Don't see how we really reduce time by doing this. We're saving here nano-seconds in the ""green path"" where buffers are not full.
In any case you'll need a for loop down the path path to put the batch of messages into the channels that act as queues, so I don't see how we save code in the macro level ;;;","25/Oct/17 4:40 PM;C0rWin;{quote} 
Yeah, I noted we have a batch emit and buffer the messages in channel, iterate and invoke Send() n times. How about aggregates these messages and invoke Send() one time? I am not sure if the latter one can reduce time since I don't test it.
{quote}

You can aggregate those messages into one message and use regular Send API, for example you can have recursive messages which will include many other messages and call Send(). I'm not convinced you need another API to support this functionality.;;;","25/Oct/17 4:41 PM;grapebaba;My point is network transfer overhead, may send 1 big message through grpc connection better than parallel send 100 small messages through that connection. However I have no real test results.:P;;;","25/Oct/17 4:47 PM;grapebaba;[~C0rWin]agree. Actually in my origin description I said we don't need API change, however rather than leave this to top level user, we may do that underlying make them transparent.;;;","25/Oct/17 4:53 PM;C0rWin;[~grapebaba] gossip is the communication middleware with internal API so not sure about top level users, since it's not exposed externally. Only Fabric components which requires broadcasting functionality. I wouldn't go with any API changes at the moment unless there is an explicit profiling results showing usefulness of such optimization or specific use case. ;;;","25/Oct/17 5:26 PM;grapebaba;That's fine. It indeed need profiling result support.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a way to automate knowing if the node.js shim requires updating and/or republishing to NPM,FAB-6750,22828,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,davidkel,davidkel,25/Oct/17 7:46 PM,30/Jul/19 11:59 AM,28/Oct/23 3:01 AM,30/Jul/19 11:59 AM,v1.1.0,,,,,,Future,,,fabric-peer,,,,0,build-system,node,,,,,"Changes made to the protocols can have impact on the shims. As the node.js shim is built outside of the main fabric build, changes can occur which could break the shim and require changes. 
This happened recently where a change was made to the GetState protocol but the shim wasn't updated and there was no indication that there was now a break in the shim.

As the shim publishes an unstable version to NPM which reflects changes to it, there is also the scenario where if a .proto file required by the shim is changed, a new unstable NPM module would need to be published as the build. The proto files are not part of the shim code base but rather pull them from the fabric code base.
Maybe the fabric-chaincode-node build could be kicked off whenever a change to the .proto files are detected ?",,davidkel,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzykqf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,davidkel,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove encshim wrapper for encryption,FAB-6751,22829,13135,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,denyeart,denyeart,25/Oct/17 8:06 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Oct/17 3:16 AM,,,,,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,,"The new encryption library provides two different capabilities that are called in two different ways:

1) Ability to directly Encrypt() and Decrypt() in chaincode

2) Ability to call PutState()/GetState() with a encshim to put/get encrypted values, for example:

es.With(ent).PutState(args[0], b)

 

Then encshim wrapper is confusing and unnecessary in my opinion, I prefer to directly expose Encrypt() and Decrypt() only.  This will be more intuitive for chaincode developers, and less for Fabric to maintain.  I would suggest to remove encshim and update the example to demonstrate direct Encrypt() and Decrypt().  

One chaincode data pattern is to encrypt certain fields in JSON but not others (for queryability of non-confidential fields).  Again, the explicit Encrypt() will provide the chaincode author with full control and flexibility to do these types of things, while encshim will not.",,denyeart,JonathanLevi,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykzr:",,,,,,Sprint 10 - Crypto,,,,,,,,,,,,,,,,denyeart,JonathanLevi,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Oct/17 8:20 AM;JonathanLevi;""Then encshim wrapper is confusing and unnecessary in my opinion, I prefer to directly expose Encrypt() and Decrypt() only. ""

Thanks [~ales] and [~denyeart]: do you want to propose this changes to the related document in https://jira.hyperledger.org/browse/FAB-5727 and see if there's consensus around these ?

 ;;;","29/Oct/17 9:03 AM;denyeart;[~JonathanLevi] Thanks - maintainers proposed and reviewed this change, with buy-in from crypto team, system test, and doc.  I've updated FAB-5727 to reflect this change.;;;","29/Oct/17 9:04 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/14917/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
netcomposer: Utility to bootstrap Fabric networks,FAB-6752,22830,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,jeroiraz,jeroiraz,jeroiraz,25/Oct/17 10:23 PM,23/Jan/20 7:14 AM,28/Oct/23 3:01 AM,23/Jan/20 7:14 AM,,,,,,,,,,,,,,0,bootstrap,stale-item,utility,,,,"Bootstrapping a HF network involves a considerable effort and the task is prone to error, people asking for collaboration regarding this task are frequently seen in the HF chat.

While the e2e sample is a great starting point, it relies on a fixed network configuration i.e. fixed amount of organizations, peers, etc. Changing the configuration might be hard to accomplish for a developer who is not yet familiar with HF.

On the other hand, we already count with a tool that simplifies the creation of required credentials just by providing a simple configuration file. But it does not provide support for the configuration of docker files.

We’ve implemented this utility to simplify our daily work in a research project where we test the changes introduced to the Fabric against different HF networks (different organizations and peers, ordering service implementations and db providers). As we found this tool really useful we would like to share with the open community.

This utility is useful when getting started with HF and for bootstrapping development/testing HF networks based on customized HF images. A simple configuration file looks like the following one:
     DOCKER_NS: hyperledger
     ARCH: x86_64
     VERSION: 1.0.2

    network:                ""samplenet""
     domain:                 ""samplenet.com""

    ordererType:            ""solo""

    db:
         provider:   ""goleveldb""

    ordererNodes:           1
     peerOrganizations:      1
     peersPerOrganization:   2
     usersPerOrganization:   1

    logLevel:               ""debug""
     tlsEnabled:             true
     chaincodesPath:    ""./sample-chaincodes""

 

*Build configuration files (credentials also generated)*:    netcomposer -config samplenet.yaml
 *Start the network*:    docker-compose -f ./samplenet/docker-compose.yaml up -d

All containers are up and running, no need to deal with certificates nor docker configuration files. CLI peer is also ready to install, instantiate and invoke chaincodes.

Note: Required crypto material is generated by cryptogen tool.

 

Current source code: [https://github.com/ibm-silvergate/netcomposer]

 ",,baohua,jeroiraz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,144000,,0%,288000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx39z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,jeroiraz,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 2:35 PM;baohua;This tools is interesting and suggest to contribute to the fabric project as some fabric-bootstrap-tool (there's already a composer one for different scope).;;;","23/Jan/20 7:14 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.1.0-preview release,FAB-6753,22831,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,denyeart,denyeart,25/Oct/17 11:27 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Dec/17 2:32 AM,,,,,,,v1.1.0,,,fabric-release,,,,0,,,,,,,Prepare and publish v1.1-preview release of Hyperledger Fabric.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-313,FABN-251,FABN-459,FABCN-8,FABN-808,FAB-830,FABC-539,FAB-6421,FAB-6089,FAB-6854,,,,,FAB-7780,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzykzz:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serviceability - eventhub,FAB-6754,22832,15565,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,25/Oct/17 11:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Jul/18 7:16 AM,,,,,,,Future,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl07:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer Service failed in Message Payloads due to wrong Assertion length.,FAB-6755,22833,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,25/Oct/17 11:55 PM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,27/Nov/17 1:54 PM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"*Description:*
Observed below errors while checking Regression for Orderer service, 
{code:java}
orderer.Orderer Service.Message Payloads Less than 1MB, for kafka orderer -- @1.2 
Expected response to be of length 1024; received length 1041
Location: orderer.feature:74
Assertion Failed: Expected response to be of length 1024;
{code}

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/103/testReport/orderer/Orderer%20Service
/Message_Payloads_Less_than_1MB__for_kafka_orderer_____1_2_/

*Commits*
*FABRIC_COMMIT ========> 1d81a96
CA COMMIT ========> 12a529e*",,denyeart,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl0f:",,,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 11:17 PM;rameshthoomu;I could see this is consistently failing on the latest fabric commits.FYI  [~scottz] [~lhaskins] [~Nishi] [~AdnanChoudhury] ;;;","14/Nov/17 3:31 AM;scottz;Please confirm that this is no longer failing. I think it has been fixed already.;;;","15/Nov/17 11:34 PM;sambhavdutt;There is another error in test case *FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3* , Observed the following,

Assertion Failed: Expected response to be of length 1024; received length 17

 And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/map"" with args [""""] ... passed in 30.353s
    And a user invokes on the chaincode named ""mycc"" with random args [""put"",""a"",""{random_value}""] of length 1024 ... passed in 0.991s
    And I wait ""3"" seconds ... passed in 3.003s
    And a user queries on the chaincode named ""mycc"" with args [""get"",""a""] ... passed in 3.647s
    Then a user receives a response containing a value of length 1024 ... failed in 0.000s

*Build log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/93/console
;;;","27/Nov/17 1:54 PM;denyeart;Looks like the original problem has been fixed.  I will close.  If there is a different error these days, please open a separate Jira item.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update error handling package used by channel service,FAB-6756,22834,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,25/Oct/17 11:57 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 1:06 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl0n:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: Gossip test in behave failure in CI,FAB-6757,22835,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,26/Oct/17 12:27 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,10/Nov/17 12:22 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"gossip.Gossip Service.[FAB-4667] [FAB-4671] [FAB-4672] A leader peer goes down by pause, comes back up *after* another leader is elected, catches up -- @1.2
{code:java}
 
Error Message
u'org1'
Stacktrace
Failing step: When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] on the initial non-leader peer of ""org1"" ... failed in 1.567s
Location: gossip.feature:66
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1456, in run
    match.run(runner.context)
  File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1903, in run
    self.func(context, *args, **kwargs)
  File ""steps/endorser_impl.py"", line 359, in step_impl
    invokes_impl(context, 1, context.interface.TEST_CHANNEL_ID, name, args, context.interface.get_initial_non_leader(context, org))
  File ""/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/feature/steps/endorser_util.py"", line 105, in get_initial_non_leader
    return context.initial_non_leader[org]
KeyError: u'org1'{code}
 ",,AdnanChoudhury,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl0v:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"26/Oct/17 12:54 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/14845/;;;","26/Oct/17 4:58 AM;scottz;Before we close this issue, let's make sure it passes the CI Daily test suite. It looks like the code fix was needed, but I am not sure yet if it is the entire fix needed.;;;","28/Oct/17 3:18 AM;sambhavdutt;The same test fails with the following error now
*Error: No gossip-non-leader found by looking at the logs, for org1*;;;","31/Oct/17 11:12 PM;sambhavdutt;*Observed the following error in the last build - 121*

{color:#8eb021}Failing step: Then a user receives a success response of 920 from ""peer0.org2.example.com"" ... failed in 0.000s
Location: gossip.feature:179
Assertion Failed: Expected response was 920; received Error occurred [u'docker exec peer0.org2.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/6d4f5694bded11e7ac23fa163e02a4e9/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp

CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer0.org2.example.com
When ""peer1.org2.example.com"" comes back up by doing a connect ... passed in 3.077s
And I wait ""40"" seconds ... passed in 40.038s
When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on ""peer0.org2.example.com"" ... passed in 303.661s
Then a user receives a success response of 920 from ""peer0.org2.example.com"" ... failed in 0.000s
{color}

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/121/testReport/gossip/Gossip%20Service/_FAB_4676___FAB_4677___FAB_4678___All_peers_in_an_organization_go_down_via_disconnect__then_catch_up_after_connect______1_3_/

*Commit Message*

FABRIC_COMMIT ===========> b8bc66c
CA COMMIT ========> 5b815c8
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[ci] update npm release check condition in fabric-sdk-node and chaincode-node scripts,FAB-6760,22838,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Oct/17 2:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 11:08 PM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,update npm release check condition in fabric-sdk-node and chaincode-node scripts. Planning to create new release tag (preview) and publish npm modules with this release tag.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl1j:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 11:08 PM;rameshthoomu;patch has been submitted and merged. Now the fabric-sdk-node and fabric-sdk-chaincode npm publish jobs are ready to publish ""preview"" tag;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a test for TLS communication between peer and chaincode,FAB-6761,22839,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,muralisr,muralisr,26/Oct/17 3:00 AM,23/Jan/20 7:14 AM,28/Oct/23 3:01 AM,23/Jan/20 7:14 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,"There are various UTs that excercise different aspects of TLS on chaincode but that actually does peer-chaincode communication over TLS. These new UTs would be in chaincode_support_test.go using the mock infrastructure used there.
",,denyeart,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5965,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyl1r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 3:05 AM;denyeart;Note that TLS is already tested in e2e CI, therefore I think a separate test in unit test is low priority.;;;","23/Jan/20 7:14 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-unit tests are failing with timeout errors,FAB-6762,22840,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,rameshthoomu,rameshthoomu,26/Oct/17 3:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Oct/17 1:34 AM,v1.0.3,,,,,,v1.0.4,,,fabric-ci,fabric-peer,,,0,,,,,,,"Observed fabric-unit tests are failing with inconsistent timeout errors. It looks like master branch is broken. Also, I could see most of the verify jobs are failing

[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-z/14122/consoleFull]

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2772/console]

 

 ",,muralisr,rameshthoomu,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl1z:",,,,,,,,,,,,,,,,,,,,,,muralisr,rameshthoomu,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Oct/17 3:12 AM;wlahti;The likely culprit: FAB-5591. Investigating further.;;;","26/Oct/17 4:58 AM;muralisr;now that we are doing startup timeouts properly the value of timeout _does_ matter. We need to bump up the time out in the chaincode tests to make sure they are sufficiently large to take care of startup timeouts (esp. in those tests that actually create docker images).;;;","26/Oct/17 5:48 AM;wlahti;Hopefully this does the trick: https://gerrit.hyperledger.org/r/#/c/14857/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add instruction howto  install & configure git-review to fabric-test readme,FAB-6764,22844,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,RichardHill,RichardHill,RichardHill,26/Oct/17 5:34 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,26/Oct/17 9:17 AM,v1.0.3,,,,,,,,,fabric-quality,,,,0,Documentation,quality,,,,,"Add instructions to fabric-test readme which install and configure git review. This is so they are
in one place for new users.

https://github.com/hyperledger/fabric-test",,RichardHill,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyl2n:",,,,Unset,,,,,,,Unset,,,,,,,,,,,RichardHill,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"26/Oct/17 9:13 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/14759/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete a duplicated pkgmap.cryptogen In Makefile,FAB-6765,22846,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,26/Oct/17 6:24 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,23/Nov/17 6:28 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-build,,,,0,quality,,,,,,There is a duplicated pkgmap.cryptogen In Makefile,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl2v:",,,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 1:27 AM;nnao;https://gerrit.hyperledger.org/r/#/c/14869/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build your network example lacks some information in manual steps (steps fail),FAB-6766,22847,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,nickgaski,phillipviana,phillipviana,26/Oct/17 6:56 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Nov/17 2:01 AM,,,,,,,,,,fabric-docs,,,,0,documentation,,,,,,"The ""Build your network"" example contains a note in the source code about commenting out the `script.sh` line but due to a missing semicolon the text does not appear in the documentation. This leads to failing steps and confusion. A StackOverflow question with regards to this was asked here: [https://stackoverflow.com/questions/45707982/fabric-returns-error-got-unexpected-status-bad-request]

 ",,phillipviana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl33:",,,,,,,,,,,,,,,,,,,,,,phillipviana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 2:00 AM;phillipviana;Solved by Nick in this commit: https://github.com/hyperledger/fabric/commit/938a3e6124e24e1665698cc54ae37c1473062e80;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] enable build artifacts on z build nodes,FAB-6769,22850,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,26/Oct/17 2:14 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Oct/17 11:07 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,enable build log publisher on z build nodes.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl3r:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 11:07 PM;rameshthoomu;patch has been submitted and merged. Now the log shipping is available on Z build nodes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose the 'GetOrgOfPeer()' method through gossip interface,FAB-6771,22854,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,biljana.lukovic,biljana.lukovic,26/Oct/17 11:29 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,27/Oct/17 6:29 AM,,,,,,,Abandoned,,,,,,,0,,,,,,,The method is needed in the interface for anyone who need this information until Service Discovery (https://jira.hyperledger.org/browse/FAB-5451) is merged.,,aleksandar.likic,biljana.lukovic,C0rWin,fredbi,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5451,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyl5r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,aleksandar.likic,biljana.lukovic,C0rWin,fredbi,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 6:29 AM;C0rWin;-100 on moving forward with this since we are not going to add public API for just in case or as a temporal solution. Work on FAB-5451 is in progress and we need to wait until it will be release rather than hacking into APIs.;;;","27/Oct/17 7:37 PM;mastersingh24;100% agree with Artem.  It would also have been helpful if you described the use case / what you are trying to accomplish rather than just creating a JIRA for a ""solution"".;;;","27/Oct/17 11:59 PM;aleksandar.likic;On technical merit, I agree 100% too.

Here is the context. We posted [https://docs.google.com/document/d/1837l3wpYDiCsyy24DnCL3LwQPzj20NHRqdQ70XURAh8/edit#heading=h.3l7k56ino66j] back in mid July, before the Discovery Service was proposed. In a nutshell, if we apply small changes to current Fabric, we could build a system CC that provides lightweight Discovery functionality now. We need this functionality asap (1.1 timeline), and are trying to find the best way to have it now, without having to fork, as we cannot wait for 1.2. I think we all agree that the functionality is important, otherwise we wouldn’t be building the Discovery Service. 

To us, exposing getOrgOfPeer() seems to be the simplest and the least painful solution, albeit intrusive from the interface point of view. Can you think of any other way of unlocking this information in 1.1?

 ;;;","28/Oct/17 12:15 AM;C0rWin;As far as I know the content for v1.1 already closed, honestly I do not think this change or any other acceptable workarounds will make it to be part of v1.1. ;;;","28/Oct/17 12:47 AM;yacovm;{quote}we could build a system CC that provides lightweight Discovery functionality now. We need this functionality asap (1.1 timeline), and are trying to find the best way to have it now, without having to fork, as we cannot wait for 1.2. I think we all agree that the functionality is important, otherwise we wouldn’t be building the Discovery Service. {quote}

*The discovery service in fabric, is not going to be a system chaincode.*

FAB-5451 was voted on by 7 maintainers and 12 people in total and was also reviewed extensively and is the right way to go. We need to think long term and not short term or we just end up with technical debt.

{quote}Can you think of any other way of unlocking this information in 1.1?
{quote}
Yes. You can do something of the following and it even works in v1.0:
 # The same API that you attempted to modify has a method:
{code:java}
PeersOfChannel(common.ChainID) []discovery.NetworkMember
{code}

 # You can then create a no-op chaincode and deploy it all all peers, and that chaincode returns a signed proposal which has the peer's e-cert and you can extract the MSP-ID and compute the PKI-ID from the e-cert.
 # Create a mapping at the client side from PKI-ID to MSP-ID
 # Profit;;;","28/Oct/17 1:18 AM;yacovm;Actually, here is another idea, also works in v1.0:
 You can tap into gossip's communication layer and inspect all identity synchronization messages with the following snippet:
{code:java}
	_, identityMsgs := service.GetGossipService().Accept(func(o interface{}) bool {
		m := o.(gossip.ReceivedMessage).GetGossipMessage()
		if ! m.IsPullMsg() || m.GetPullMsgType() != gossip.PullMsgType_IDENTITY_MSG {
			return false
		}
		return m.IsDataUpdate()
	}, true)

	go func() {
		fmt.Println("">>>> starting identity listener..."")
		for msg := range identityMsgs {
			m := msg.GetGossipMessage()
			fmt.Println("">>>>> Learned of the following mappings:"")
			for _, envelope := range m.GetDataUpdate().Data {
				msg, _ := envelope.ToGossipMessage()
				pIdentity := msg.GetPeerIdentity()
				sId := &msp2.SerializedIdentity{}
				proto.Unmarshal(pIdentity.Cert, sId)
				fmt.Println("">>>>>> pkiID:"", pIdentity.PkiId, ""-->"", sId.Mspid)
			}
		}
	}()
{code}
I ran it and it works:
{quote}>>>>> Learned of the following mappings:
 >>>>>> pkiID: [197 55 15 138 44 98 170 100 168 56 58 85 141 117 47 191 166 82 24 60 59 181 122 6 238 106 190 250 139 239 112 141] --> Org2MSP
 >>>>> Learned of the following mappings:
 >>>>>> pkiID: [75 177 37 111 104 180 97 202 187 78 214 88 237 191 76 81 194 173 88 124 251 208 238 149 253 186 137 53 165 10 255 2] --> Org2MSP
 >>>>>> pkiID: [56 127 138 147 160 11 185 232 247 7 252 196 153 203 191 18 179 9 124 237 26 143 7 133 197 120 88 232 182 184 72 131] --> Org1MSP
{quote};;;","28/Oct/17 1:44 AM;aleksandar.likic;[~yacovm] Great, we'll try it.

BTW, I am all for FAB-5451, but we need something now. This snippet looks like something that will meet our needs.

Thanks a lot!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix unformatted chaincode log messages,FAB-6772,22858,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,27/Oct/17 1:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Nov/17 11:49 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl6n:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 1:32 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14893/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve configtxgen UT coverage,FAB-6773,22859,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,27/Oct/17 2:07 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,22/Nov/17 3:20 AM,,,,,,,,,,fabric-tools,,,,0,configtxgen,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyl6v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 2:14 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/14895/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Service fails in fabric-test-daily-x86_64 as all peers in the organization disconnect,FAB-6774,22860,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,sambhavdutt,sambhavdutt,27/Oct/17 3:07 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,15/Feb/18 4:45 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,ci-failure,,,,,,"Observed the errors below in for Gossip service test,

gossip.Gossip Service.[FAB-4676] [FAB-4677] [FAB-4678] ""All peers in an organization go down via disconnect, then catch up after connect"". -- @1.3 

Assertion Failed as Expected response was incorrect,
Failing step: Then a user receives a success response of 980 ... failed in 0.000s
Location: gossip.feature:155

Assertion Failed: Expected response was 980; received Query Result: 1000

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/231/testReport/gossip/Gossip%20Service/_FAB_4676___FAB_4677___FAB_4678___All_peers_in_an_organization_go_down_via_disconnect__then_catch_up_after_connect_______1_3_/

",,AdnanChoudhury,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl73:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"16/Nov/17 11:54 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15521/;;;","16/Nov/17 11:54 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15449/;;;","27/Dec/17 2:29 AM;sambhavdutt;Gossip Service has been failing from last 5 builds for *fabric-test-daily-x86_64* due to wrong deployment length

gossip.Gossip Service.[FAB-4683] [FAB-4684] [FAB-4685] In leader-selection setup, leader peer goes down by disconnect for at least 90 seconds, comes back up and catches up eventually. -- @1.6 

Error Message:
Expected response was 900; received Error occurred [u'docker exec peer0.org2.exa...

When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on ""peer0.org2.example.com"" ... passed in 306.356s
    Then a user receives a success response of 900 from ""peer0.org2.example.com"" ... failed in 0.000s


*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/206/testReport/gossip/Gossip%20Service/_FAB_4683___FAB_4684___FAB_4685__In_leader_selection_setup__leader_peer_goes_down_by_disconnect_for_at_least_90_seconds__comes_back_up_and_catches_up_eventually______1_6_/;;;","15/Feb/18 4:44 AM;sambhavdutt;The Gossip(behave) tests are now failing due to timeout error. 


{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode
{code}


[FAB-7971|https://jira.hyperledger.org/browse/FAB-7971] is in progress for these timeout errors failing  other tests too;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel service should send signed events,FAB-6775,22861,20082,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,27/Oct/17 3:32 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 2:00 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,ales,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl7b:",,,,,,,,,,,,,,,,,,,,,,ales,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/17 2:04 AM;wlahti;After further discussion with [~yacovm] and [~ales], the conclusion is that the channel service will not send signed events back to listening clients. Clients should only register for events from peer's that they trust, making the peer signature unnecessary and also a performance issue. ;;;","31/Oct/17 6:31 PM;ales;It's paramount that we document this assumption, namely, that clients must only get events from peers they fully trust. I can see scenarios in which this is not true, e.g. a client who is *not* a reader of a channel and yet needs to know when certain events take place so that it can take some appropriate action. Adding signatures might be useful in that case because then the client can hold the peer accountable in case of bogus actions being returned by the peer to the client.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect comment about chaincode events in shim/interfaces.go,FAB-6777,22863,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,27/Oct/17 4:38 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Dec/17 10:14 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"interfaces.go incorrectly states that:
{code:java}
// SetEvent allows the chaincode to propose an event on the transaction 
// proposal. If the transaction is validated and successfully committed, 
// the event will be delivered to the current event listeners.{code}
It should be updated to say:
{code:java}
// SetEvent allows the chaincode to set an event on the response to the
// proposal to be included as part of a transaction. The event will be
// available within the transaction in the committed block regardless of the
// validity of the transaction.{code}
 ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyl7r:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/17 12:02 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/15221/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rebuild block storge index not possible with multiple block storage files,FAB-6779,22869,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,manish-sethi,manish-sethi,27/Oct/17 6:25 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 6:28 PM,,,,,,,v1.0.4,v1.1.0,,fabric-ledger,,,,1,,,,,,,"Allow complete drop of block store index and rebuild which would be helpful if the index gets corrupted for some reason.

Most of the code is in place but this needs to change the way block files info is maintained.",,denyeart,holocron,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6872,FAB-6853,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylcv:",,,,,,,,,,,,,,,,,,,,,,denyeart,holocron,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,release-1.0,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,mergify/bp/release-2.2/pr-3750,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 9:14 AM;denyeart;I will change to bug since the 1.0 design was to allow rebuild, this will also allow us to get a fix into 1.0.4.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Correct typo in statecouchdb_test.go,FAB-6780,22870,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,27/Oct/17 6:33 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Oct/17 6:42 PM,,,,,,,v1.1.0,,,fabric-ledger,,,,0,,,,,,,"The last test in TestUtilityFunctions() has an incorrect comment.  It states ""// ValidateKey should return nil for a valid key"" it should say ""// ValidateKey should return error for an invalid key""",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyld3:",,,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Oct/17 6:41 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/14907/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Collect endorsement success/rejected metrics,FAB-6781,22871,33629,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,grapebaba,grapebaba,grapebaba,27/Oct/17 1:38 PM,12/Jan/19 1:08 AM,28/Oct/23 3:01 AM,12/Jan/19 1:08 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,Collect endorsement success/rejected metrics,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyldb:",,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
events/consumer/consumer.go，repeated code,FAB-6782,22879,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,TopJohn,TopJohn,27/Oct/17 6:24 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,27/Oct/17 6:48 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"events/consumer/consumer.go，repeated code,should be removed.

Line 82 to Line90",,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzylg7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Peer Service fails at a particular chaincode, as there may be a problem with the chaincode ",FAB-6784,22889,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,sambhavdutt,sambhavdutt,27/Oct/17 11:53 PM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,30/Oct/17 11:17 PM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"Observed the following errors below for Peer Service, right after...... +args[""get"",""a""]+ 

  And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/map"" with args [""init""] with name ""cc2"" on channel ""chn2"" ... passed in 29.867s
    When a user invokes on the channel ""chn2"" using chaincode named ""cc2"" with args [""put"", ""a"", ""1000""] ... passed in 8.876s
    And I wait ""5"" seconds ... passed in 5.005s
    And a user queries on the channel ""chn2"" using chaincode named ""cc2"" with args [""get"", ""a""] ... passed in 3.158s
    Then a user receives a success response of 1000 ... failed in 0.000s

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/109/testReport/peer/Peer%20Service/FAB_3866__Multiple_Chaincodes_Per_Peer__with_solo_orderer_____1_1_/

*Commits*

FABRIC_COMMIT ========> 11014b6
CA COMMIT ========> e612d86",,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylgn:",,,,,,,,,,,,,,,,,,,,,,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"28/Oct/17 12:59 AM;latitiah;After speaking with Sambhav about this, it looks like the map chaincode is returning it's result in quotes now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update the README to add a signed-off-by hook automatically,FAB-6785,22891,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,RichardHill,RichardHill,28/Oct/17 3:47 AM,30/Jul/19 11:42 AM,28/Oct/23 3:01 AM,30/Jul/19 11:42 AM,,,,,,,Not a Bug,,,fabric-quality,,,,0,,,,,,,Updated the README to describe adding a signed-off-by hook automatically to all commits to the repository. This hook removes the risk of missing the -s flag in a git commit command thus needing to amend commits.,,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzylgv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update doc archive,FAB-6786,22900,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ryjones,markparz,markparz,28/Oct/17 4:59 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,30/Mar/18 4:04 AM,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,,"We've come across an interesting problem. Someone created a RTD site for the now defunct [https://github.com/openblockchain/peer|https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_openblockchain_peer&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=p5YcGuYCbPwJa_8uLf1O6Cpr19ou4eNaHS8SxvpKMIM&m=WTVd_EzLfVBKdOAzAQUDIRTBkBK5oe5hoCYQilvnm_k&s=GqdS2GuBEXrtiqcQBUKaDa-FNsrGcgiskhKJ_nIoZ74&e=] project (which is no longer a thing) but that org now redirects to [github.com/hyperledger-archives/fabric|https://urldefense.proofpoint.com/v2/url?u=http-3A__github.com_hyperledger-2Darchives_fabric&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=p5YcGuYCbPwJa_8uLf1O6Cpr19ou4eNaHS8SxvpKMIM&m=WTVd_EzLfVBKdOAzAQUDIRTBkBK5oe5hoCYQilvnm_k&s=mphonm8VXNZHYMR72QtLyVOaevtYresfVpKLcE9NRKI&e=] and so the RTD build picks up the old archive of fabric and publishes what looks like the Fabric docs (sigh) complete will all kinds of bad, misleading and dated information.
 
While we can try to remove the redirect, the fact is that the RTD site will still stand and confuse people [https://openblockchain.readthedocs.io/en/latest/|https://urldefense.proofpoint.com/v2/url?u=https-3A__openblockchain.readthedocs.io_en_latest_&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=p5YcGuYCbPwJa_8uLf1O6Cpr19ou4eNaHS8SxvpKMIM&m=WTVd_EzLfVBKdOAzAQUDIRTBkBK5oe5hoCYQilvnm_k&s=4U8byumSRRcExl4b3Pq8NCIhbkMoThjSHCinl087y9k&e=]
 
What I would like to do is make a pull request against the hyperledger-archives/fabric repo to update the ""home page"" of the docs [https://github.com/hyperledger-archives/fabric/blob/master/docs/index.md|https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_hyperledger-2Darchives_fabric_blob_master_docs_index.md&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=p5YcGuYCbPwJa_8uLf1O6Cpr19ou4eNaHS8SxvpKMIM&m=WTVd_EzLfVBKdOAzAQUDIRTBkBK5oe5hoCYQilvnm_k&s=7ylmdcqmE3LiwYJZCM6g7rBwBJHKHfmGL7cfxdFjx6w&e=] to say that these docs are DEFUNCT, built from an (OLD) archive of the Hyperledger Fabric repository and to redirect to the current stable release [http://hyperledger-fabric.readthedocs.io/en/stable/index.html|https://urldefense.proofpoint.com/v2/url?u=http-3A__hyperledger-2Dfabric.readthedocs.io_en_stable_index.html&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=p5YcGuYCbPwJa_8uLf1O6Cpr19ou4eNaHS8SxvpKMIM&m=WTVd_EzLfVBKdOAzAQUDIRTBkBK5oe5hoCYQilvnm_k&s=DrYZ5ll2gFWZU0KgnflDY_nKfOBqvbBcgd1cc7HMPZY&e=]",,joe-alewine,markparz,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwu13:",,,,Unset,,,,,,,Unset,,,,,,,,,,,joe-alewine,markparz,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/17 7:30 AM;ryjones;[~markparz] create a PR and I'll merge it. Please ping me on chat when you do.;;;","30/Mar/18 3:54 AM;joe-alewine;[~ryjones]

Looks like Mark submitted a PR here: https://github.com/hyperledger-archives/fabric/pull/2422;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: (LTE) Change the location of the LTE result logs,FAB-6787,22912,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,28/Oct/17 7:08 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Nov/17 12:57 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,Update the parameter files so that the result files are written inside the LTE folder instead of /tmp folder. ,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyliv:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"28/Oct/17 7:31 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/14931/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configure peer to make mutual TLS connections,FAB-6788,22913,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,28/Oct/17 7:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Oct/17 7:34 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The peer currently makes two types of client connections:
 # To other peers via gossip
 # To ordering nodes for channels

Need to be able to configure the peer to use a client certificate for mutual TLS.

The default will be to use the same certificate it uses for server-side TLS.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";31/Oct/17 2:05 AM;mastersingh24;7200",,18000,0,7200,40%,18000,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylj3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Oct/17 11:03 PM;mastersingh24;https://gerrit.hyperledger.org/r/14945;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Inconsistency in ""Writing Your First Application"" and its source code",FAB-6789,22914,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,29/Oct/17 5:17 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 4:05 AM,,,,,,,v1.0.2,v1.0.4,v1.1.0,fabric-docs,fabric-samples,,,0,Documentation,,,,,,"Although the recent merged patch 
|[FAB-6307] Fix WYFA to reflect new folder|

 synchronized the new""fabric-samples/"" folder structure in the WYFA page, there still remains some inconsistency the description contents.",,joe-alewine,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyljb:",,,,,,,,,,,,,,,,,,,,,,joe-alewine,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 9:10 PM;joe-alewine;Being taken care of by: https://gerrit.hyperledger.org/r/c/14909/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.0.4 release,FAB-6790,22915,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 6:16 PM,,,,,,,v1.0.4,,,fabric-release,,,31/Aug/17 12:00 AM,0,,,,,,,,,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7279,,FAB-6371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyljj:",,,,,,,,,,,,,,,,,,,,,,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.4 for fabric bugs to be included in 1.0.4 release,FAB-6791,22916,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Oct/17 10:11 PM,,,,,,,v1.0.4,,,fabric-release,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=11302,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyljr:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.0.4,FAB-6792,22917,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 4:02 AM,,,,,,,v1.0.4,,,fabric-release,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
 Check for clean CI passes
 Update Makefile
 BASE_VERSION = 1.0.4
 PREV_VERSION = 1.0.3
 IS_RELEASE = true
 release_notes/v1.0.4.txt should be updated
 docs/source/releases.rst should be updated with prose and link to GH release page
 change log should be generated just after rebasing to pick up the last minute merged CRs and linked from docs/source/releases.rst",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyljz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/17 10:42 PM;mastersingh24;https://gerrit.hyperledger.org/r/14983;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric CA v1.0.4,FAB-6793,22918,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 6:15 PM,,,,,,,v1.0.3,,,fabric-release,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
 Check for clean CI passes
 Update Makefile
 BASE_VERSION = 1.0.4
 PREV_VERSION = 1.0.3
 IS_RELEASE = true
 change log should be generated just after rebasing to pick up the last minute merged CRs 
 update release_notes/v1.0.4.txt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylk7:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 4:21 AM;mastersingh24;https://gerrit.hyperledger.org/r/15009;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric samples docs with new short URL for release,FAB-6794,22919,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 8:14 AM,,,,,,,v1.0.4,,,fabric-docs,fabric-release,,,0,,,,,,,https://goo.gl/DA6xZ1,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylkf:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 4:11 AM;mastersingh24;https://gerrit.hyperledger.org/r/15005;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for v1.0.5 release,FAB-6795,22920,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 6:15 PM,,,,,,,,,,fabric-release,,,,0,,,,,,,"Bump version to 1.0.5
 Previous version to 1.0.4
 is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylkn:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 4:11 AM;mastersingh24;https://gerrit.hyperledger.org/r/15007;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for v1.0.5 release,FAB-6796,22921,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 6:15 PM,,,,,,,,,,fabric-release,,,,0,,,,,,,"Bump version to 1.0.5
 Previous version to 1.0.4
 is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylkv:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 4:21 AM;mastersingh24;https://gerrit.hyperledger.org/r/15011;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update samples to work with v1.0.4 release,FAB-6797,22922,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 6:16 PM,,,,,,,v1.0.4,,,fabric-samples,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyll3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.4 for fabric-ca bugs to be included in 1.0.4 release,FAB-6798,22923,22915,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Oct/17 4:29 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 4:17 AM,,,,,,,v1.0.4,,,fabric-release,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=11305,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyllb:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-samples/fabric-ca has some error,FAB-6799,22924,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,TopJohn,TopJohn,TopJohn,30/Oct/17 3:18 PM,23/Jan/20 7:14 AM,28/Oct/23 3:01 AM,23/Jan/20 7:14 AM,,,,,,,,,,fabric-samples,,,,0,stale-item,,,,,,"Fabric-samples/fabric-ca has some errors,the readme file has some error in description.",,sykesm,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyllj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,sykesm,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:14 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the configtxgen tool method KafkaBrokersValue should modify comment,FAB-6800,22931,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,asaningmaxchain,asaningmaxchain,asaningmaxchain,30/Oct/17 7:11 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,04/Nov/17 10:13 PM,,,,,,,,,,fabric-orderer,,,,0,,,,,,,"```
// ChannelRestrictionsValue returns the config definition for the orderer channel restrictions.
// It is a value for the /Channel/Orderer group.
func KafkaBrokersValue(brokers []string) *StandardConfigValue {
	return &StandardConfigValue{
		key: KafkaBrokersKey,
		value: &ab.KafkaBrokers{
			Brokers: brokers,
		},
	}``
}",,asaningmaxchain,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzylmn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asaningmaxchain,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Oct/17 7:31 PM;kchristidis;[~asaningmaxchain]: Let me know if you plan to submit a changeset for this.

And if so, please assign the JIRA to yourself, and post a link to the changeset in Gerrit when you have it ready. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - verify release jobs to support 1.1.0-preview release tags,FAB-6801,22936,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,30/Oct/17 11:22 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 12:04 PM,v1.0.0,,,,,,,,,fabric-ci,fabric-release,,,0,fabric-ci,,,,,,Make sure all the release jobs are ready for v1.1.0-preview release,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylon:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 12:03 PM;rameshthoomu;Verified all the release jobs and all looks good to go.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"current viper does not correctly parse key names with dots, i.e. v1.1",FAB-6803,22939,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,guoger,guoger,guoger,31/Oct/17 12:54 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Nov/17 11:17 PM,v1.1.0-preview,,,,,,v1.1.0,v1.1.0-preview,,fabric-tools,,,,0,,,,,,,"The viper pkg currently vendor'd in Fabric does not work well with key name with dots. When such key is assembled into a path, dot serves as delimiter, and leads to 1-level-deeper, incorrect searching path, e.g. {{foo.bar.v1.1}} would search for:
{code}
foo:
    bar:
        v1:
            1:
{code}
instead of
{code}
foo:
    bar:
        v1.1:
{code}
Latest viper addresses this issue by checking if {{v1.1}} already exists at shallower level.

I see two options here:
- Upgrade Viper
    pro: fundamentally solving the problem
    con: new viper stores keys in lowercases. Some modifications needed to accommodate it, e.g. using {{twoorgsgenesis}} instead of {{TwoOrgsGenesis}} when specifying profile.
- Use {{V1_1}} instead of {{V1.1}} as key
    pro: simple to fix
    con: some other side effects?",,guoger,jyellick,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,,,,,,,,,"1|hzylp3:",,,,,,,,,,,,,,,,,,,,,,guoger,jyellick,kchristidis,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/17 1:00 AM;guoger;related to https://jira.hyperledger.org/browse/FAB-6747;;;","02/Nov/17 10:54 AM;guoger;[~jyellick] [~kchristidis] folks, lets get this fixed asap so that people could actually try v1.1-preview, let me know which option you prefer.;;;","02/Nov/17 8:13 PM;kchristidis;Jay, can you identify what remains to be addressed by FAB-6747?;;;","03/Nov/17 7:31 PM;guoger;[~kchristidis] That only addresses samples, whereas problems are still buried in the actual code. Basically we won't be able to turn on V1.1 features based on current code.

 ;;;","04/Nov/17 12:09 AM;jyellick;> con: new viper stores keys in lowercases. Some modifications needed to accommodate it, e.g. using twoorgsgenesis instead of TwoOrgsGenesis when specifying profile.

Couldn't we fix this simply by taking in the string passed by the user and modifying it to lower case?;;;","04/Nov/17 1:18 PM;guoger;[~jyellick] yep, that's probably less intrusive and easier;;;","04/Nov/17 10:16 PM;kchristidis;Given that in the samples we've switched to using the underscore, option 2 strikes me as the appropriate thing to do here.;;;","05/Nov/17 6:11 PM;mastersingh24;I'm with [~kchristidis]  
 - Use {{V1_1}} instead of {{V1.1}} as key;;;","08/Nov/17 1:00 AM;guoger;review: https://gerrit.hyperledger.org/r/15249;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CouchDB rich-query Performance,FAB-6804,22940,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,31/Oct/17 1:20 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,14/Jul/18 2:08 PM,,,,,,,,,,fabric-quality,,,,0,couchdb,ledger,quality,,,,"As a Fabric network manager, I want to know the performance of my Fabric queries if CouchDB is chosen as the state database.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6442,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzylpb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CouchDB rich-query performance with no indexing,FAB-6806,22942,22940,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,31/Oct/17 1:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Jul/18 2:03 PM,,,,,,,,,,fabric-ledger,fabric-quality,,,0,,,,,,,"Measure the execution-time of the Fabric rich-query when using CouchDB as state database.
 With no indexing,
 With 100 records in the stateDB, 1 field rich query and 4 field rich query
 With 500 records in the stateDB, 1 field rich query and 4 field rich query
 With 1,000 records in the stateDB, 1 field rich query and 4 field rich query
 With 10,000 records in the stateDB, 1 field rich query and 4 field rich query",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 2:03 PM;AdnanChoudhury;unnamed.gif;https://jira.hyperledger.org/secure/attachment/15317/unnamed.gif",,,,,,,,,,,,,,,,,,,,,,"1|hzylpj:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 2:03 PM;AdnanChoudhury;Attached.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CouchDB rich-query performance with indexing,FAB-6807,22943,22940,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,31/Oct/17 1:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Jul/18 2:05 PM,,,,,,,,,,fabric-ledger,fabric-quality,,,0,,,,,,,"Measure the execution-time of the Fabric rich-query when using CouchDB as state database.
With indexing,
With 100 records in the stateDB, 1 field rich query and 4 field rich query
With 500 records in the stateDB, 1 field rich query and 4 field rich query
With 1,000 records in the stateDB, 1 field rich query and 4 field rich query
With 10,000 records in the stateDB, 1 field rich query and 4 field rich query",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 2:05 PM;AdnanChoudhury;unnamed.gif;https://jira.hyperledger.org/secure/attachment/15318/unnamed.gif",,,,,,,,,,,,,,,,,,,,,,"1|hzylpr:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 2:05 PM;AdnanChoudhury;attached;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add mutual TLS config option for peer,FAB-6808,22944,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Oct/17 2:04 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 7:19 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The peer currently has all the runtime code needed for supporting mutual TLS for its service endpoints.  However, there is currently no way to configure the endpoints to require mutual TLS.

 ",,JonathanLevi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";31/Oct/17 8:28 PM;mastersingh24;3600",,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylpz:",,,,,,,,,,,,,,,,,,,,,,JonathanLevi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/17 8:28 PM;mastersingh24;https://gerrit.hyperledger.org/r/14981;;;","01/Nov/17 2:38 AM;JonathanLevi;The dream is coming true... !;;;","01/Nov/17 7:22 PM;mastersingh24;To quote Mark Wahlburg in Rock Star:
{quote}You know, I'm just a regular guy who grew up with the posters of these guys on my wall... and now I'm one of them! That's right, I'm standing here, living proof that if you work hard enough, and you want it bad enough... dreams do come true. So follow your dreams...
{quote};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for SCC Plugins,FAB-6810,22950,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,31/Oct/17 5:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Nov/17 10:58 PM,,,,,,,,,,,,,,0,,,,,,,Document how to write and configure system chaincodes as Go plugins,,divyank,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylu7:",,,,,,,,,,,,,,,,,,,,,,divyank,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fabric CouchDB rich-query performance with no indexing, with concurrency",FAB-6811,22951,22940,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,31/Oct/17 5:26 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Jul/18 2:05 PM,,,,,,,,,,,,,,0,,,,,,,"Run FAB-6806, where the queries are done in concurrent (multi-threaded) fashion, with concurrency factor of 1, 10, 100.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyluf:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 2:05 PM;AdnanChoudhury;Marking this as done as other tests https://jira.hyperledger.org/browse/FAB-10083  exusts that cover similar ground.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE testcase: marbles02 invokes with indexes,FAB-6813,22953,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,31/Oct/17 5:29 AM,19/Nov/19 6:42 AM,28/Oct/23 3:01 AM,14/Jul/18 4:55 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,,"Test name: Performance test: channel events, 2 channels
 Component: Performance test
 Description: performance events per channel with couchDB with indexing
     chaincode: each channel has one chancode, marbles02 go chaincode, instantiated
     transactions: 4 threads, each thread sends 1000 invokes concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 2, registers events for channel2
          thread 4 sends to org2 peer1 on channel 2, registers events for channel2

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels

Event:
          service: channel
          listener: block

Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
 The TPS (transactions per second) will be calculated and documented. ",,AdnanChoudhury,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12857,FAB-8201,FAB-8200,FAB-8192,FAB-8199,,,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyluv:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"09/Mar/18 3:05 AM;dongming;https://gerrit.hyperledger.org/r/#/c/18889/;;;","28/Nov/18 9:01 AM;scottz;This testcase was modified in 1.4 to run a scenario: its invokes followed by 3 sets of queries. It replaces 8192 in the daily test suite, because this one includes indexing, all else being equal.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer channel fetch command is not working as expected when TLS is enabled,FAB-6815,22955,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,Ratnakar,Ratnakar,31/Oct/17 6:58 AM,05/Jun/20 1:58 AM,28/Oct/23 3:01 AM,06/Nov/17 5:59 AM,,,,,,,,,,fabric-peer,,,,0,peer,quality,,,,,"peer channel fetch command is not working as expected when TLS is enabled.

Unable to write the fetched block to an outputfile, as per the help messages .
{code:java}
 peer channel fetch --help
 Fetch a specified block, writing it to a file.

 Usage:
   peer channel fetch <newest|oldest|config|(number)> [outputfile] [flags]

 Flags:
   -c, --channelID string   In case of a newChain command, the channel ID to create.
{code}
Fails with Error: *trailing args detected*
{code:java}
peer channel fetch 0 genesis_block.pb -o orderer.example.com:7050 -c ""mychannel"" --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA
2017-10-30 21:18:55.304 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-10-30 21:18:55.304 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-10-30 21:18:55.307 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
Error: trailing args detected
Usage:
  peer channel fetch <newest|oldest|config|(number)> [outputfile] [flags]

Flags:
  -c, --channelID string   In case of a newChain command, the channel ID to create.

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string                Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
      --test.coverprofile string            Done (default ""coverage.cov"")
      --tls                                 Use TLS when communicating with the orderer endpoint
  -v, --version                             Display current version of fabric peer server
{code}
The workaround used here is to either ignore the output file and let it write to a file *true*
for example one such instance [here|https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/scripts/script.sh#L75]
{code:java}
peer channel fetch 0 -o orderer.example.com:7050 -c ""mychannel"" --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA
{code}
Or to Ignore *--tls* option argument 'true'
{code:java}
peer channel fetch 0 genesis_block.pb -o orderer.example.com:7050 -c ""mychannel"" --tls --cafile $ORDERER_CA
{code}",,jeffgarratt,nnao,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-17957,FAB-17958,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylvb:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,nnao,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 1:08 AM;Ratnakar; This is not  a new breakage and doesn't block any of the existing tests. Issue is there from Fabric V 1.0.

 ;;;","03/Nov/17 4:00 AM;nnao;[~Ratnakar]  I think this is a bug of script.sh, not of peer command. “--tls” option does not require any argument.
The command “peer channel” accepts only two arguments, but, in this case, the command recognized $CORE_PEER_TLS_ENABLES as 3rd argument of itself.;;;","03/Nov/17 5:59 AM;nnao;https://gerrit.hyperledger.org/r/#/c/15149/;;;","03/Nov/17 7:46 AM;Ratnakar;[~nnao] Agreed. and Thanks for the fix.;;;","03/Nov/17 11:01 AM;jeffgarratt;Failed verify on Z.  Submitted a reverify for https://gerrit.hyperledger.org/r/#/c/15149/
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect validation for channel policy during channel-2-channel access by Peer,FAB-6816,23000,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rhegde,rhegde,31/Oct/17 11:10 AM,09/Jul/19 3:59 AM,28/Oct/23 3:01 AM,03/Feb/18 1:39 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"I have a public channel with write permission to Org1 and Read permission to rest all Organizations, hence the channel configuration policy. A different chaincode installed on a channel (say channel-1) performs a channel-2-channel query access on the public channel (within the same peer node).

It is seen during channel-2-channel access, the write policy is evaluated and hence channel-2-channel query access fails. Problem Example - Org2 is authorized for write-operation on channel-1 but not on public channel. This endorsement proposal is marked as failed due to write-access check on public channel.

As far as we rememberer, there was always read-access support enabled by Hyperledger Fabric during c-2-c access operations. Is this a defect?

ERRO 006 Failed to invoke chaincode. Got error: Failed evaluating policy on signed data during check policy on channel [public] with policy [/Channel/Application/Writers]: [Failed to reach implicit threshold of 1 sub-policies, required 1 remaining]

Note: I tried even performing writes in our public chaincode during c-2-c operation (after giving write permission on public channel to Org2) but this was never see in the public ledger.",,denyeart,mastersingh24,muralisr,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylvj:",,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,muralisr,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 12:36 AM;mastersingh24;[~rhegde] As far as I know, it's always been the case that in order to invoke or query chaincode (both of which are sending endorsement requests) on a given channel you need to be in the Channel/Application/Writers group.

[~muralisr] - anything I may be missing?;;;","02/Nov/17 12:48 AM;muralisr;[~mastersingh24] that's right. This behavior of requiring Writers has for both initial proposal and C-2-C calls has not changed. 

[~rhegde] in v1.1 (not the preview or alpha, etc.. but the actual release) the ""resource based ACL"" will kick in and help you set ACLs on these resources in a flexible manner (details in https://jira.hyperledger.org/browse/FAB-3621).;;;","03/Nov/17 3:44 AM;rhegde;I thought channel-2-channel(c-2-c) calls are always read-only and they wouldn't have write-access.  This considering the read-write-operations from chaincode execution are not part RW-set.

I did tried doing a write operation on the receiver chaincode and that does not get reflected on the ledger. Good!.

Does this not mean - we would require to validate read policy for c-2-c access and this should qualify to use the read-policy?

I have described a scenario in the description which as per current policy check to add all organization forcibly with write permission. Currently we have set the endorsement policy to the TRUE writer of the channel to mitigate this risk. The bad part, there is transaction in the ledger with rejected state.;;;","27/Nov/17 1:57 PM;denyeart;[~muralisr] Can you respond to latest comment?;;;","28/Jan/18 10:30 AM;muralisr;[~rhegde] hope this is still useful to comment on ? 

_Does this not mean - we would require to validate read policy for c-2-c access and this should qualify to use the read-policy?_

The original intent was to treat this uniformly with the external chaincode call which always requirea ChannelWriters access. The Resource Base ACL mention in the previous comment hopefully will allow you to define more flexible policies (you can associate your own policy for CC-2-CC calls ).

 ;;;","01/Feb/18 9:03 PM;yacovm;can we close this, [~rhegde] , [~mastersingh24] , [~muralisr] ? ;;;","03/Feb/18 1:27 AM;rhegde;Current check on write-policy is a defect if the chaincode tries to access another chaincode installed on a separate channel (named: public).

In our case to mitigate this problem, all organizations will be provided with write authorization to the public channel's with endorsement policy guaranteeing a ledger transaction will be only accepted (valid) from certain organizations.

The same workaround can be used for such defect however this can lead to a case where organization can spam the public channel. There are further ways to protect and monitor this not-required spamming activity.

We are ok with this workaround and as per the above comment since there exist a way in future release - we are ok to close this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
typo in peer/chaincode/,FAB-6818,23200,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,n-horiguchi,n-horiguchi,n-horiguchi,31/Oct/17 3:26 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Nov/17 12:00 AM,v1.0.0,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"We have a variable policyMarhsalled in peer/chaincode/chaincode.go, which is apparently a typo. This is not a critical issue, but someone might be confused when grepping source code. So please fix it.",,jeffgarratt,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylvz:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Oct/17 3:33 PM;n-horiguchi;Created a CR: https://gerrit.hyperledger.org/r/#/c/14975/
;;;","02/Nov/17 12:29 AM;jeffgarratt;[~n-horiguchi] Your CR failed job builder.  I posted a reverify.;;;","02/Nov/17 11:21 PM;jeffgarratt;[~n-horiguchi] Finally got CI to pass.  Ready for review and merge.  https://gerrit.hyperledger.org/r/#/c/14975/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer, I want to access a specific section of the peer's local configuration",FAB-6819,23201,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,angelo.decaro,angelo.decaro,31/Oct/17 7:29 PM,23/Jan/20 7:14 AM,28/Oct/23 3:01 AM,23/Jan/20 7:14 AM,,,,,,,Future,,,fabric-peer,,,,1,Endorser,review-needed,Security,stale-item,,,"In the context of FAB-5131, we need a way to allow the chaincode to access some private information of the peer running that chaincode. 

This FAB proposes to allow the chaincode to access a specific section of the peer's local configuration (core.yaml) to retrieve global values sharable by all chaincodes running on that peer, and values that should be available only to a specific chaincode.

In order to achieve this goal, the *ChaincodeStubInterface* interface will enhanced by adding methods to retrieve the local configuration. As per [Supporting private data in Hyperledger|http://docs.google.com/document/d/16SYkK_wxReCeAEXbgobP6B8vW-VTGNQ_qRmJemS_jTI/edit?usp=sharing]

{code:java}
    // GetLocalConf returns the byte array value specified by
    // the `key` from the peer local configuration for the chaincode
    GetLocalConf(key string) ([]byte, error)
{code}

The invocation of that method will trigger a call to the peer to retrieve the value corresponding to the requested key.

These values will be stored under the *chaincode* section of core.yaml. Here is an example:

{code:java}
chaincode:
    localConf:
        K1: V1
        K2: V2
        ...
{code}

[~mastersingh24],[~shaih],[~tzipih0],[~fbenhamo],[~yacovm],[~ales],[~elli-androulaki],[~muralisr],[~mne] please have your say :)",,ales,angelo.decaro,C0rWin,denyeart,fbenhamo,fredbi,jyellick,mne,muralisr,shaih,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzylw7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,angelo.decaro,C0rWin,denyeart,fbenhamo,fredbi,jyellick,mne,muralisr,shaih,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/17 9:22 PM;mne;Why store it in core.yaml? This file is more for platform configuration parameters, such as timeouts, IPs, etc.
 As [~ales] suggested in an earlier discussion, I think it would be nicer to have a different infrastructure for application-level local configuration, say a simple file-based KVS that extends the way CC packages are currently stored in the filesystem. So for example, a CC package would be stored using the local config with name+version as its key and the package as value. The peer-private information (say, crypto material) would be stored the same way, with some ID as its key and the information as the value.

Along similar lines the Node SDK already uses a simple file-based KVS to store such material and can also be used to store other things.;;;","31/Oct/17 9:25 PM;angelo.decaro;Yeah, yeah. I wanted just to start from something that has minimum impact. Then move to a more invasive solution.;;;","31/Oct/17 10:28 PM;ales;I think there are many different approaches to this:
# we could build ad-hoc storage (in core.yaml?) for value strings; in its favour, it's simple; against it, it's a bit too restrictive (how would we handle binary content?); also, we would proliferate ad-hoc local storage solutions (core.yaml, the installed chaincode repository...)
# we could build one KVS storage that is local to the peer, storing installed chaincodes and any binary artifact needed by the peers or by the chaincode; in its favour, it would be a common mechanism for a shared purpose; against it, it's new infrastructure that we need to build
# we could build a private chain for the peer, exposing a ledger-like interface to store installed chaincodes and any binary artifact needed by the peers or by the chaincode; in its favour, it would be a common mechanism for a shared purpose; also, we could reuse all of the existing infrastructure for channels; against it, it might be a bit of an overreach

Thoughts?
;;;","31/Oct/17 10:49 PM;angelo.decaro;I like the first two, the third one looks to me an overkill. 

Actually, from the chaincode point of view nothing will change. The additional method will remain the same. 
The first two options might, in principal, even coexist by assigning them a lookup priority. First the KVS storage and after what is in core.yaml.

1. is definitely easier to implement and will allow us to have quickly a storage place where to put strings (therefore, PEM encoded content) and make them available to the chaincode. Later we can introduce the unified KVS storage with its entire lifecycle. Wdyt?

[~mastersingh24], would this be a viable solution?

;;;","31/Oct/17 10:55 PM;ales;Let me play the devil's advocate: 1 sounds to me a bit ""quick'n dirty"". How can local information be updated, for instance, if rekeying is required? If the backing media is core.yaml, do we have to restart the peer or send it a signal to reparse the file? How are chaincode versions handled? What happens if there is a mismatch between the namespace defined for this auxiliary storage and the one on the ledger? E.g. a malicious peer of another org deploys a cc image with a different name just to ""steal"" some of the crypto material associated to another cc? Just thinking aloud..;;;","01/Nov/17 12:15 AM;angelo.decaro;Fair points. Going for solution 2. directly, at this point can be the right decision.
So, we can split the task at least in two then:
1. implementing the chaincode part related to the shim and the communication back to the peer
2. implementing the backend to respond to the chaincode.

Good :);;;","01/Nov/17 12:57 AM;yacovm;{quote} If the backing media is core.yaml, do we have to restart the peer or send it a signal to reparse the file?{quote}
I don't think so. We just need to stop the chaincode container, delete the image, and it will pick up the new file(s) at creation time.
This of course- imposes an overhead.

Do I understand properly the requirements?
* The chaincode shim needs to be able to query configuration that is stored and can potentially be updated by the peer 
* The chaincode shim will never write to that config, only read.
* The information is scoped only to the peer and is sensitive (i.e, signing identities)

My opinion is:
* To have basic capabilities in place, implement it as a separate YAML file that the peer would parse at startup. Put it in sampleconfig folder so that the entire chaincode shim is packaged with it too. *I would suggest not adding a method to the chaincode stub interface at this early stage, as long as we're not 100% sure we need to extend the API.* [1]  [2]
Instead - just use viper commands and a library/package that the developer can import when writing the chaincode.
* When we decide that we have to have the ability to refresh the configuration, we can think about how to do that.
I think that to preserve atomicity and also have performance we should have the peer send the config to the chaincode shim at startup of the container, and then when the config changes - send an update, and the chaincode shim will have some atomic pointer. Whenever an invocation comes - it grabs the pointer and uses the config for the life-time of the invocation. This is to prevent config from changing partly while an invocation takes place. Of course-  the peer would need to update config atomically too.
* As for the storage - why can't we just use levelDB? 

[~C0rWin] what do you think? 

[1] Lets not forget that adding stuff to APIs is easy, but subtracting from them is hard and painful. 
[2] Another argument against extending the stub API is that the configuration is not scoped to a transaction invocation, but is scoped to the peer itself.
We have the stub API because that's a good way to inject stuff derived from the proposal (like arguments, txID, etc.) into the logic of the smart contract.
However - here the configuration will be the same across all transactions so if we just have a library that can be imported I guess that would also work.;;;","01/Nov/17 5:30 AM;C0rWin;[~yacovm] I personally like the idea of not adding a new API and copying config file while instantiating the chaincode, since this is less intrusive way to provide viable solution. ;;;","01/Nov/17 11:09 PM;angelo.decaro;[~jyellick], your take?;;;","09/Nov/17 4:38 AM;shaih;Hi Yacov, can you give a few more details for your proposal above?
 * Where is the information actually stored? What is LevelDB? Is there existing support for it in Hyperledger? Is there an instance of this database already available? I can see why storing everything in core.yaml is not a good idea, especially if we are going to store crypto keys and other sensitive stuff, is LevelDB suitable for storing sensitive stuff?


 * What is the sequence of steps that needs to happen so that this information is loaded with the CC? Specifically, what files in the current implementation we need to look at and modify for doing this?
 * How will this information be accessed from within the chaincode? I'm assuming that the interface it will be similar, regardless if we are using the shim or something else? So here we will use someGlobalVariable.GetLocalConf(""localConfVarName"") as opposed to stub.GetLocalConf(...)

 ;;;","09/Nov/17 9:31 AM;yacovm;Sure.

{quote}Where is the information actually stored?{quote}
what information?
{quote} What is LevelDB {quote}
It's a key value store database that runs embedded in the peer.
{quote} Is there existing support for it in Hyperledger?{quote}
yes
{quote}  Is there an instance of this database already available? {quote}
yes. it's the default database used by the peer.
{quote}  I can see why storing everything in core.yaml is not a good idea, especially if we are going to store crypto keys and other sensitive stuff, is LevelDB suitable for storing sensitive stuff? {quote}
That's a great question, and I think the answer is yes since it's an embedded database -> meaning, the files are stored locally (unless you're using NFS or a SAN / NAS, right?) 
I assume a good place to store crypto keys will be a local file system, with only user (no g, o permission bits set) access control.
Are there any more considerations when selecting where to store your keys? I guess if someone is *really* paranoid he/she can store the keys in encrypted form with a symmetric encryption key and have the key stored in an environment variable that is set at runtime, or something of the sort, but again - this change seems to me like a long one and thus we should start with something simple and gradually evolve it. 
{quote} What is the sequence of steps that needs to happen so that this information is loaded with the CC? Specifically, what files in the current implementation we need to look at and modify for doing this? {quote}
So, the chaincode <---> peer protocol roughly works like this:
# Chaincode process spawns in a container, sends a REGISTER message to the peer
# Peer registers the chaincode and sends back a REGISTERED message (sort of an ack)
# From now on, whenever the peer receives a transaction from a user, it sends a [transaction message (this function is a bit scary, beware)|https://github.com/hyperledger/fabric/blob/release/core/chaincode/handler.go#L1293] to the chaincode
# The chaincode might query the peer for data, or send it commands like ""the logic stored value Y for key X""
# ...
So, I think that we can extend the message of REGISTERED and send the secret configuration in it, and whenever we get to the stage of having the peer be able to dynamically reload this config, we can then piggyback this on the transaction message as well. 
But please - before anyone does any coding let's come to an agreement on the method, otherwise work might be thrown away.
{quote}How will this information be accessed from within the chaincode? {quote}
So I think the information should be accessed via a singleton function (i.e *GetSecretConfig()* )since the chaincode is a very minimal piece of code - just a handler that chats with the peer and invokes the function implemented in the struct, that's it. 
This gives us the benefit of flexibiity - no need to extend the stub API.

Of course, this is all my opinion, [~adc] and [~ales] and [~C0rWin] are welcome to share their opinions and/or scrutinize my view.

 ;;;","14/Nov/17 6:08 AM;jyellick;This seems to be the combination of a number of questions.

# Do we wish to facilitate chaincodes behaving differently per peer.  I can certainly see the utility, but up until this point, the chaincode mechanisms all seem to lean very heavily towards all peers running the exact same logic.  [~muralisr] do you have an opinion here?
# Assuming we do, should the implementation be global to the peer, like the install operation, or should it be scoped by channel?  It sounds like the proposal is to scope it globally for the peer, but will we regret this decision?
# Assuming we do, how should the local data be passed in and exposed to the chaincode? These are probably a bit tied together, as what is exposed will likely dictate how the data is passed in, but I think there are still questions of whether the data should be built into the chaincode container, be referenced from the DB, be referenced from the peer filesystem, or some other mechanism.

I'm not sure if it would be more helpful to create sub-tasks to discuss each of these questions separately, or if we can just address these individually here in this JIRA, but we should be careful not to conflate them together.;;;","14/Nov/17 9:30 PM;muralisr;[~jyellick] [~tzipih0] let me make sure I understood the requirement
* chaincode in a peer needs to look up some information available only on that peer
* this information is used to compute some state but itself will not be stored on the ledger

As the data does not go on to the ledger but is just used for processing, this has a distinct ""business logic"" feel to it. Extending chaincode protocol or other invasive chaincode framework work for this doesn't seem like a good idea.

Couldn't this be implemented with a system chaincode which can access the peer directly with some knowledge of the local peer identity ? 

Adding  [~mastersingh24] [~binhn] ;;;","14/Nov/17 9:34 PM;angelo.decaro;[~muralisr], actually, this sounds as another good option. It can be definitely done that way as well. Btw, would the SCC be able to learn from which chaincode it has been invoked?;;;","14/Nov/17 9:38 PM;angelo.decaro;[~jyellick], the business logic will still be the same. The private data will only drive the computation.;;;","14/Nov/17 10:41 PM;muralisr;{quote}would the SCC be able to learn from which chaincode it has been invoked?
{quote}
[~angelo.decaro] I don't think there's an API to do that... but the calling chaincode can certainly pass its name as an argument.;;;","14/Nov/17 10:49 PM;angelo.decaro;[~muralisr], right but then the calling chaincode might cheat as well and trying to access sections that belong to other chaincodes. We have now so many approaches listed in the comments. We have to decide which one is the best. How can we have a vote?;;;","14/Nov/17 11:03 PM;muralisr;[~angelo.decaro] I'd have thought the syscc would have to do some ACL to make sure it does not give out sensitive info ? Is just checking the chaincode ID enough ? Some info is in the proposal of course assuming the call is 1-level deep.

 ;;;","24/Sep/18 5:18 AM;denyeart;Bulk Jira update:
For remaining tasks with FixVersion v1.3.0, the Reporter should update to v1.4.0 or Future, or Close.
Add a comment with any clarification needed, so that release managers can close out v1.3.0 release cleanly.;;;","09/Oct/18 11:37 PM;denyeart;There are plans to refactor chaincode shim in v2.0.0, let's consider this as part of the refactor.;;;","23/Jan/20 7:14 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Support mutual TLS for connections to peer and orderer,FAB-6820,23203,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,31/Oct/17 10:02 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Nov/17 6:32 PM,,,,,,,v1.1.0,,,fabric-sdk-node,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";04/Nov/17 4:20 AM;mastersingh24;2700",,7200,4500,2700,37%,7200,4500,2700,,,,,,,,,,,,,,,,FAB-6887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylwn:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Nov/17 4:20 AM;mastersingh24;https://gerrit.hyperledger.org/r/15181;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare the fabric master branch for 1.1-preview release,FAB-6821,23204,18773,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:28 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Dec/17 7:50 PM,v1.0.0,,,,,,v1.1.0,,,fabric-release,,,,0,release,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI passes

Update Makefile

{{BASE_VERSION = 1.1.0-preview}}
 {{PREV_VERSION = 1.1.0}}
 {{IS_RELEASE = true}}

{{release_notes/v1.1.0-preview.txt should be updated}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst1}}",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylwv:",,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric master for 1.1.0-preview release,FAB-6822,23205,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:36 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:32 AM,v1.0.0,,,,,,v1.1.0-preview,,,fabric-release,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI passes

Update Makefile

{{BASE_VERSION = 1.1.0-preview}}
 {{PREV_VERSION = 1.0.0}}
 {{IS_RELEASE = true}}

EXPERIMENTAL ?= false

{{release_notes/v1.1.0-preview.txt should be created}}

{{docs/source/releases.rst should be updated with prose and link to GH release page}}

{{change log should be generated just *after* *rebasing* to pick up the last minute merged CRs and linked from docs/source/releases.rst}}

./scripts/changelog.sh v1.0.4 v1.1.0-preview",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylx3:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 10:06 PM;ChristopherFerris;Last merge build successful: [https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/lastBuild/] 
h1. Build #2817 (Oct 31, 2017 11:46:32 PM)

 ;;;","01/Nov/17 11:02 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/15059;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for 1.1.0-preview release,FAB-6823,23206,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:32 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"*MUST BE REBASED JUST BEFORE MERGING*

Check for clean CI

Update Makefile

{{BASE_VERSION = 1.1.0-preview}}
 {{PREV_VERSION = 1.0.0}}
 {{IS_RELEASE = true}}

change log should be generated just *after* *rebasing* to pick up the last minute merged CRs 

./scripts/changelog.sh v1.0.4 v1.1.0-preview

 update release_notes/v1.1.0-preview.txt

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylxb:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 11:23 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/15061;;;","02/Nov/17 4:35 AM;ChristopherFerris;note that CI failed on this and the subsequent because changing the PREV_VERSION changes the dependency on a published image (one that has not yet been published). We need to fix this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for 1.1.0-preview release,FAB-6824,23207,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:40 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:32 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"*MUST BE REBASED JUST PRIOR TO MERGING*

generate CHANGELOG.md just *after rebasing* to pick up last minute merged CRs

./scripts/changelog.sh v1.0.0 v1.1.0-preview

update release_notes/v1.1.0-preview.txt

update package.json files with the release identifier

./package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-preview"",

./fabric-ca-client/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-preview"",

./fabric-client/package.json

    ""version"": ""1.1.0-snapshot"",  -> ""version"": ""1.1.0-preview"",

 ",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylxj:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 11:38 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/15065;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for next release,FAB-6825,23208,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:42 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:32 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"Note that this change must be stacked on the previous task to prepare for the v1.1.0-preview release FAB-6822

Update Makefile

BASE_VERSION = 1.1.0-alpha

PREV_VERSION = 1.0.0-preview

IS_RELEASE = false

EXPERIMENTAL ?= true",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylxr:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 12:05 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/15069;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prepare fabric-ca for next release,FAB-6826,23209,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:43 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:32 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"Update Makefile

{{BASE_VERSION = 1.1.0-alpha}}
{{PREV_VERSION = 1.1.0-preview}}
{{IS_RELEASE = false}}",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylxz:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 12:08 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/15071;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-sdk-node for next release,FAB-6827,23210,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:44 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:33 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"update package.json files with the SNAPSHOT release identifier

  ./package.json

  fabric-client/package.json

  fabric-ca-client/package.json",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyly7:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 12:11 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/15073;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tag repositories for 1.1.0-preview,FAB-6828,23211,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:48 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:32 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"Tag each repository local clone with the release_notes/v1.1.0-preview.txt as the tag comment

{{% git tag -a v1.1.0-preview -F release_notes/v1.1.0-preview.txt}}

{{% git push origin v1.1.0-preview HEAD:refs/heads/master}}

Tag each of fabric, fabric-ca, fabric-sdk-node, and fabric-samples and fabric-chaincode-node (use v1.0.0-preview)
----
Note, that one can also tag the repo at a specific commit-level.
 E.g., to add the {color:#f79232}*v1.1.0-preview*{color} tag at commit level {color:#205081}*e4b4704*{color}, I used

{{% git tag -a *{color:#f79232}v1.1.0-preview{color} {color:#205081}e4b4704{color}* -F release_notes/v1.1.0-preview.txt}}",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylyf:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 4:32 AM;ChristopherFerris;I used this script, though it failed on the last step because I cannot push tags to fabric-chaincode-node repo

-----------

#!/bin/sh

 

cd $GOPATH/src/github.com/hyperledger/fabric

git checkout master

git pull

git tag -a v1.1.0-preview 132dadd -F release_notes/v1.1.0-preview.txt

git push origin v1.1.0-preview HEAD:refs/heads/master

cd ../fabric-ca

git checkout master

git pull

git tag -a v1.1.0-preview 7a9846a -F release_notes/v1.1.0-preview.txt

git push origin v1.1.0-preview HEAD:refs/heads/master

cd ../fabric-sdk-node

git checkout master

git pull

git tag -a v1.1.0-preview 0efcb8e -F release_notes/v1.1.0-preview.txt

git push origin v1.1.0-preview HEAD:refs/heads/master

cd ../fabric-samples

git checkout master

git pull

git tag -a v1.1.0-preview 733ce9f -m ""samples corresponding to Hyperledger Fabric version 1.1.0-preview""

git push origin v1.1.0-preview HEAD:refs/heads/master

cd ../fabric-chaincode-node

git checkout master

git pull

git tag -a v1.0.0-preview d47625b -F release_notes/v1.0.0-preview.txt

git push origin v1.0.0-preview HEAD:refs/heads/master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric docs with bootstrap shortlink,FAB-6829,23212,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,31/Oct/17 11:49 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 4:33 AM,v1.0.0,,,,,,,,,fabric-release,,,,0,,,,,,,"create shortened URL that resolves to v1.0.0 tagged version of bootstrap script

visit [https://goo.gl/] and create shortened link for:

[https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.|https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.0.sh]1.0-preview.sh

Update docs/source/samples.rst with the created short link",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylyn:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test download of release artifacts and samples across all platforms,FAB-6830,23213,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,ChristopherFerris,ChristopherFerris,31/Oct/17 11:50 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Dec/17 7:50 PM,v1.1.0-preview,,,,,,,,,fabric-release,,,,0,,,,,,,test download of release artifacts and samples across all platforms,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylyv:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 7:38 AM;rameshthoomu;*byfn* tests *worked* on `{{x86_64}}`, `{{s390x}}` and `{{ppc64le platforms.}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python 3 syntax error in bddtests/steps/bootstrap_util.py,FAB-6831,23214,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,cclauss,cclauss,01/Nov/17 12:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Apr/18 9:42 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"In Python 3, an explicit tuple is not a valid function parameter. This would work in Python 2 but is no longer allowed in Python 3.

flake8 testing of [https://github.com/hyperledger/fabric] on Python 3.6.3

$ *time flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics*

{{
./bddtests/steps/bootstrap_util.py:492:67: E999 SyntaxError: invalid syntax
 def addSignatureToSignedConfigItem(cls, configUpdateEnvelope, (entity, mspId, cert)):
 ^
 }}

The function signature should be changed to:
 {{

    def addSignatureToSignedConfigItem(cls, configUpdateEnvelope, entity_mspId_cert):
 }}
 And the first line of the function body should be:
 {{
        entity, mspId, cert = entity_mspId_cert
 }}",,cclauss,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylz3:",,,,,,,,,,,,,,,,,,,,,,cclauss,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Apr/18 6:29 AM;ChristopherFerris;This can probably be closed since we deleted bddtests from the fabric repo;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add bundlesource for resource config,FAB-6832,23217,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Nov/17 1:37 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 12:39 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"In keeping with the pattern established by the channel config, we should add an update-able bundlesource for the peer resource config bundle.  This bundle should be thread safe, and use atomic pointer dereferencing, as well as provide a stable view of the configuration for components which need it.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzylzb:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Behave Test Framework: Encryption tests that take transient args are currently failing,FAB-6833,23221,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,Nishi,Nishi,01/Nov/17 3:01 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 2:59 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Regression: behave -n 6439 (from chaincodes.feature) failed this morning.

This ran successfully yesterday.

 

Fabric-Test commit level: *98c36bc08cee88462a21b6f05de027f83ab4e377*

Fabric commit level: *16d7f50ea3db70904f7e3690c3a0f27f3a88f076*",,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym07:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtered tx with no events has empty actions.,FAB-6834,23222,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,rickr,rickr,01/Nov/17 3:25 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 4:26 AM,v1.1.0,,,,,,WON'T FIX,,,fabric-peer,,,,0,,,,,,,"I have on instantiate chaincode that set some values but has no events. What I get is a filteredTx that has a collection of 1 filteredAction.  The FilteredAction is empty .. serialize it to bytes its size is  zero.  This produce when you get the ccEvent as zero byte and not null ccEvent. 

What I'd expect is a FilteredAction which has btyes with the ccEvent set to null.

java debug code : 
```
System.out.println(event);
                    System.out.println();
                    final PeerEvents.FilteredTransaction filteredTx = event.getFilteredBlock().getFilteredTx(0);
                    System.out.println();
                    System.out.println(""filteredTx:"" + filteredTx);

                    final PeerEvents.FilteredAction filteredAction = filteredTx.getFilteredAction(0);

                    System.out.println();
                    System.out.println(""filteredAction:"" + filteredAction);
                    System.out.println();
                    System.out.println(""filteredAction size:"" + filteredAction.toByteString().size());

                    final ChaincodeEventOuterClass.ChaincodeEvent ccEvent = filteredAction.getCcEvent();
                    System.out.println();
                    System.out.println(ccEvent);
                    System.out.println();
```
filtered_block {
  channel_id: ""foo""
  number: 1
  type: ENDORSER_TRANSACTION
  filtered_tx {
    txid: ""2ba694f6ec2cd1a664a01a7790c5e39091189ef87a16cb9b0311079f75da6fff""
    filtered_action {
    }
  }
}
channel_id: ""foo""



filteredTx:txid: ""2ba694f6ec2cd1a664a01a7790c5e39091189ef87a16cb9b0311079f75da6fff""
filtered_action {
}


filteredAction:

filteredAction size:0",git fetch ssh://rickr@gerrit.hyperledger.org:29418/fabric refs/changes/89/14889/4 && git checkout FETCH_HEAD,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym0f:",,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 4:26 AM;rickr;Found out  I needed to use hasCcEvent()  :(;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup configtx package and improve test coverage,FAB-6838,23226,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Nov/17 4:56 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,30/Jan/18 12:15 AM,,,,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,cleanup,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzym0v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Construct configtx.Manager from Config instead of Envelope,FAB-6839,23227,23226,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Nov/17 4:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Nov/17 6:13 AM,,,,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,cleanup,,,,,,"The configtx package has changed considerably over time, and no longer
needs to be initialized with an envelope message. The only places which
actually instantiate the configtx manager are creating an artificial
Envelope message and mashaling the config inside it, purely to satisfy
the constructor. This CR modifies the constructor to take the
ultimately necessary type.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym13:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consolidate configtxapi package into configtx package,FAB-6840,23228,23226,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Nov/17 4:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Nov/17 6:14 AM,,,,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,cleanup,,,,,,"Once upon a time, the configtx package did far too much. It exposed the
channel configuration for each component, it handled transactional state
for the policy manager, and the other transaction components, and
generally became something that too many packages linked to. Because of
all the different packages which linked to it, the interface definitions
were factored out into their own package configtxapi.

Since then, the vast majority of this function has been factored out
into other more appropriate places, and there are no longer dependency
cycles.

This CR moves the interface definitions back into the package, and
changes the rather generic 'configtx.Manager' name to
'configtx.Validator' (as its only purpose now is to validate configtx
updates before generating a new configuration). This renaming ripples
throughout a fair bit of the code, but should be reasonably easy to
review.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym1b:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup configtx error usage and improve test coverage,FAB-6841,23229,23226,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Nov/17 4:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Nov/17 6:14 AM,,,,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,cleanup,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym1j:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix broken master because of idemix test,FAB-6845,23233,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Nov/17 6:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 7:31 PM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym27:",,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 7:31 PM;mastersingh24;https://gerrit.hyperledger.org/r/15035;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1.0.4 release shorturl is not updated in readthedocs v1.0.4 release tag,FAB-6846,23235,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Nov/17 8:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Nov/17 1:05 AM,,,,,,,v1.0.5,,,fabric-docs,,,,0,Documentation,,,,,,"short url in readthedocs v1.0.4 release tag is not updated. [http://hyperledger-fabric.readthedocs.io/en/v1.0.4/samples.html#download-platform-specific-binaries]

I still see the below content in samples.html in readthedocs site

```curl -sSL [https://goo.gl/Q3YRTi] | bash```",RTD,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym2f:",,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 10:49 AM;denyeart;[~mastersingh24] [~rameshthoomu] [~ChristopherFerris] Here's what I've found, very strange...

 

[http://hyperledger-fabric.readthedocs.io/en/v1.0.4/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*v1.0.4*/samples.html#download-platform-specific-binaries]

[http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*latest*/samples.html#download-platform-specific-binaries]

[http://hyperledger-fabric.readthedocs.io/en/stable/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*stable*/samples.html#download-platform-specific-binaries]

[http://hyperledger-fabric.readthedocs.io/en/master/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*master*/samples.html#download-platform-specific-binaries]

all point to:

[https://goo.gl/Q3YRTi] ==> [https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.3.sh]

===================================================

[http://hyperledger-fabric.readthedocs.io/en/v1.0.3/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*v1.0.3*/samples.html#download-platform-specific-binaries]

points to:

[https://goo.gl/iX9dek] ==> [https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.0.sh]

===================================================

[http://hyperledger-fabric.readthedocs.io/en/release/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*release*/samples.html#download-platform-specific-binaries]

points to:

[https://goo.gl/5ftp2f] ==> [https://raw.githubusercontent.com/hyperledger/fabric/release/scripts/bootstrap-1.0.4.sh]

 

 

 ;;;","01/Nov/17 11:15 AM;rameshthoomu;I see git branches ( `master` and `release` )  are working as expected  but we are seeing issues with release tags (1.0.3 and 1.0.4).. Created issue in RTD github [https://github.com/rtfd/readthedocs.org/issues/3217];;;","01/Nov/17 6:19 PM;mastersingh24;This was my mistake.  There's not much we can really do about this other than updating the commit that the v1.0.4 tag points to.

I'd say we close this and for now we don't publish the v1.0.4 tag in RTD

For now, we are only publishing:
release = release branch

master = master

latest = master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - remove govendor commands from fabric-test CI scripts and update 1.0.4 release version in release tests,FAB-6849,23238,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Nov/17 10:00 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Nov/17 10:55 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,[CI] - remove govendor commands from fabric-test CI scripts and update 1.0.4 release version in release tests,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym33:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 10:55 PM;rameshthoomu;patch has been submitted and merged. govendor set has been created in behave framework before run the tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update pre-setup.sh script path in makefile,FAB-6850,23239,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,01/Nov/17 11:56 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Nov/17 1:07 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,update pre-setup.sh script path in makefile,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym3b:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"03/Nov/17 1:07 AM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
verify doc build status on v1.1.0-preview release tag in ReadTheDocs,FAB-6851,23240,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Nov/17 12:05 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 7:36 AM,v1.0.0,,,,,,,,,fabric-ci,fabric-docs,fabric-release,,0,,,,,,,Verify doc build status on v1.1.0-preview release tag in ReadTheDocs,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym3j:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 7:36 AM;rameshthoomu;[http://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/] – Working as expected;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Verify fabric, fabric-ca docker images are published with 1.1.0-preview tag to hyperledger dockerhub account",FAB-6852,23241,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,01/Nov/17 12:07 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 7:37 AM,v1.0.0,,,,,,,,,fabric-ci,fabric-release,,,0,,,,,,,"Verify fabric, fabric-ca docker images are published with 1.1.0-preview tag to hyperledger docker-hub account and make sure fabric-binaries are published to nexus repository.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym3r:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 7:37 AM;rameshthoomu;Below is the update:
{code:java}
published fabric images to dockerhub -- done
https://hub.docker.com/r/hyperledger/fabric-peer/tags/

published fabric-ca images to dockerhub -- done
https://hub.docker.com/r/hyperledger/fabric-ca/tags/

published fabric binaries to nexus repository -- done
https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/

published fabric-sdk-node modules (fabric-client & fabric-ca-client) to npm -- done
https://www.npmjs.com/package/fabric-client & https://www.npmjs.com/package/fabric-ca-client

published fabric-chaincode-node (fabric-shim) to npm -- done
https://www.npmjs.com/package/fabric-shim{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ledger index recovery messages in orderer log, when recovery is not needed",FAB-6853,23242,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,01/Nov/17 5:59 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 4:14 PM,,,,,,,v1.0.5,v1.1.0,,fabric-ledger,,,,0,,,,,,," Ledger index recovery messages were recently added in FAB-6779 to provide information when ledger index recovery process starts.  Unfortunately these messages also show up in a new orderer with no data, since the index cannot be found for the system channel. These messages also show up each time a new channel is created in orderer. The messages are benign but confusing and should be suppressed or clarified in these scenarios.

 

2017-11-01 12:40:22.418 CST [fsblkstorage] newBlockfileMgr -> INFO 002 No info about blocks file found in the db.
   This could happen if this is the first time the ledger is constructed or the index is dropped.
   Scanning blocks dir for the latest info
 2017-11-01 12:40:22.418 CST [fsblkstorage] constructCheckpointInfoFromBlockFiles -> INFO 003 No block file found
 2017-11-01 12:40:22.418 CST [fsblkstorage] newBlockfileMgr -> INFO 004 Info constructed by scanning the blocks dir = (*fsblkstorage.checkpointInfo)(0xc420374420)(latestFileChunkSuffixNum=[0], latestFileChunksize=[0], isChainEmpty=[true], lastBlockNumber=[0])2017-11-01 12:40:22.422 CST [fsblkstorage] syncIndex -> INFO 005 No block indexed, Last block present in block files=[0]
 2017-11-01 12:40:22.422 CST [fsblkstorage] syncIndex -> INFO 006 Start building index from block [0]
 2017-11-01 12:40:22.422 CST [fsblkstorage] syncIndex -> INFO 007 Finished building index. Last block indexed [0]",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0jr:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Nov/17 8:43 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/15075/;;;","15/Nov/17 8:46 AM;denyeart;[~mastersingh24] We got a little over eager with the Info statements during the rush to get a fix into 1.0.4.  It has caused some confusion with people thinking orderer is in a bad state.  This change pulls back the info/debug logging to a more reasonable level, I recommend it get cherry picked into 1.0.5.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docs on master should point to master branch for fabric-samples,FAB-6854,23300,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,01/Nov/17 8:00 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 12:23 AM,,,,,,,v1.1.0,v1.1.0-preview,,fabric-docs,,,,0,,,,,,,"Since samples are inherently going to be version specific as we add functionality to fabric releases, we need to make sure that the proper samples are downloaded for a given release.

Our RTD documentation supports multiple versions based on branches and tags. So the doc in master should always point to the master branch of fabric-samples",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym3z:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 8:46 PM;mastersingh24;https://gerrit.hyperledger.org/r/15055;;;","01/Nov/17 9:17 PM;mastersingh24;Need to merge this prior to cutting preview release;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add CouchDB index warming,FAB-6855,23401,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,01/Nov/17 10:15 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Jan/18 1:09 AM,,,,,,,,,,fabric-ledger,,,,0,Release-planning-1.1,,,,,,"CouchDB does not automatically update indexes when records are inserted or updated.  The update is performed for the index during the query operation.   This can cause delays during the query.   Subsequent queries then take advantage of the updated index.

This improvement will add an ""index warming"" step to refresh indexes following an insert or update.  

The addition is to the EnsureFullCommit step.  This will execute an index warming action for each batch.  The index refresh will need to be called for each index defined.",,AdnanChoudhury,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym47:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Nov/17 10:23 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/15057/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic Network Setup,FAB-6856,23402,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,SwatiRaj,SwatiRaj,SwatiRaj,01/Nov/17 10:39 PM,23/Jan/20 7:14 AM,28/Oct/23 3:01 AM,23/Jan/20 7:14 AM,,,,,,,,,,,,,,1,stale-item,,,,,,"Right now in Fabric samples project , there is a first-network application which gives the network setup , but it has fixed no of peers,  I thought there should be a sample application which will help the developers to concentrate on working with hyperledger fabric framework without worrying about setting up the whole network. It will ask you about the number of organisations , no of peers in each organisations ,domain name and channel name and setup the whole network accordingly.",,baohua,scottz,SwatiRaj,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzym4f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,scottz,SwatiRaj,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:14 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce capability for private data,FAB-6859,23600,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,02/Nov/17 12:48 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,22/Dec/17 6:40 AM,,,,,,,,,,,,,,0,,,,,,,Private channel data requires a new capability to make sure that this new feature is introduced without creating forks.,,ales,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5999,,,,,,,,,,FAB-6671,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1151,,,,,,,,,"1|hzym53:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/17 1:25 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16337/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
send email to hyperledger-fabric mailing list,FAB-6862,23703,22831,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,02/Nov/17 5:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,01/Dec/17 2:31 AM,v1.1.0-preview,,,,,,,,,fabric-release,,,,0,,,,,,,send email announcing the release to hyperledger-fabric@lists.hyperledger.org mailing list.,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym5r:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 5:32 AM;ChristopherFerris;On behalf of Dave Enyart and myself as release managers for the 1.1 release, I am pleased to announce that the Hyperledger Fabric v1.1.0-preview release has been published [1]! 

Many thanks to those who helped and those who contributed to this preview release. Note that we are not feature complete for the eventual 1.1 release... that will come with the next published release, v1.1.0-alpha next month.
However, we wanted to get the following functionality
published to gain some early community feedback on the following features:

  - https://jira.hyperledger.org/browse/FAB-2331- Node.js Chaincode
  - https://jira.hyperledger.org/browse/FAB-5363 - Node.js SDK Connection Profile
  - https://jira.hyperledger.org/browse/FAB-830 - Encryption library for chaincode
  - https://jira.hyperledger.org/browse/FAB-5346 - Attribute-based Access Control
  - https://jira.hyperledger.org/browse/FAB-6089 - Chaincode APIs to retrieve
    creator cert info
  - https://jira.hyperledger.org/browse/FAB-6421 - Performance improvements

Additionally, there are the usual bug fixes, documentation and test coverage
improvements, UX improvements based on user feedback and changes to address a
variety of static scan findings (unused code, static security scanning, spelling,
linting and more).

We welcome any feedback you may have, either via this mailing list, JIRA [2] or RocketChat [3].

[1] http://hyperledger-fabric.readthedocs.io/en/master/index.html
[2] https://jira.hyperledger.org/
[3] https://chat.hyperledger.org/

Chris Ferris & Dave Enyart 
Hyperledger Fabric 1.1 release managers;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create python script to integrate fabric-ca clustering test in daily build,FAB-6863,23704,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,rennman,rennman,02/Nov/17 6:19 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,28/Nov/17 2:07 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"The fabric ca has multi-ca and intermediate-ca capabilities which, to date, have not been rigorously and regularly tested in an integrated fashion. 

The fabric-ca clustering test will test - 
- Multiple Root fabric-ca-server instances behind a proxy
- Each Root instance will run multiple, independent CA's
- Multiple CA's will share a single database; e.g. 'ca<#n>' in the cluster will use database 
'fabric_ca_ca<#n>'
- There will exist an intermediate CA instance, behind a proxy, for each Root CA server.
- Each intermediate CA instance will run multiple, independent CA's
- Multiple CA's under the intermediate CA cluster will share a database; e.g. 'intca<#n>' in the cluster will use database 'intfabric_ca_ca<#n>'
- The fabric-ca-client will be used to send all types of requests that the fabric-ca-server supports:
- register
- enroll
- reenroll
- revoke
- getcacert
- gencrl

 

The gnu parallel tool will be used to generate and run multiple requests concurrently.

The script will allow for scaling. The defaults will be:

1 haproxy, directing request to two back-end server clusters:
   4 Root fabric-ca-server instances-
      8 multi 'sub' CAs per Root instance
   4 Intermediate fabirc-ca-server instances-
      8 multi 'sub' CAs per Intermediate instance
128 users per CA (for a total of 8192 users)
3072 simultaneous requests comprising a mixture of each type of valid server request.",,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym5z:",,,,,,,,,,,,,,,,,,,,,,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"16/Nov/17 6:16 AM;rennman;[https://gerrit.hyperledger.org/r/#/c/15101/] add CAclustering to daily regression;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add mutual TLS binding to the channel header and an interceptor,FAB-6868,23710,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,02/Nov/17 10:34 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Nov/17 8:49 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"The peer resource config service needs to leverage mutual TLS in order for the query not be relayable. 

For that, we need to:
* Add the TLS cert hash to the channel header
* Write a filter function that accepts an envelope and a gRPC context, and points out whether the TLS cert hash in the channel header matches the one computed from the gRPC context.


* This can be re-used for the channel event service

[~jyellick] [~wlahti]

",,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym7j:",,,,,,,,,,,,,,,,,,,,,,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/17 8:22 AM;kchristidis;https://gerrit.hyperledger.org/r/c/15137/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ACL test - acl_happy_path has been failing in fabric-test-daily-x86_64 for last few builds.,FAB-6869,23711,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,smithbk,sambhavdutt,sambhavdutt,02/Nov/17 10:51 PM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,12/Feb/18 2:48 AM,,,,,,,v1.1.1,,,fabric-quality,,,,0,ci-failure,,,,,,"Observed the following errors,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest) 

CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1
self = <acl_happy_path.ACL testMethod=test_FAB6490_Using_FCA_With_ACL_Permissioning> 

output = '##### 2017-11-02 12:32:20 Created docker-compose.yml\n##### 2017-11-02 12:32:20 Creating docker containers ...\n#####..., creating the genesis block and other artifacts (./data/logs/setup.successful not found); see ./data/logs/setup.log\n'
unused_err = None, retcode = 1, cmd = ['./scripts/env.sh && ./start.sh']

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/129/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/

*Commits*

FABRIC_COMMIT ===========> 75709bc
CA COMMIT ========> 2431f12

",,denyeart,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11722,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym7r:",,,,,,,,,,,,,,,,,,,,,,denyeart,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 12:32 AM;latitiah;This failure actually is a build error. The build fails at
{code}
09:02:03 Makefile:285: recipe for target 'build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-75709bc' failed
09:02:03 make: *** [build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-75709bc] Error 18
{code}
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/129/console

This also explains why the daily system behave tests did not run. There were missing binaries, so the tests were not able to run.

;;;","03/Nov/17 12:35 AM;latitiah;We are also seeing this same error in our ""verify"" tests:
{code}
15:14:06 Makefile:285: recipe for target 'build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-6cf9558' failed
15:14:06 make: *** [build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-6cf9558] Error 18
{code}

https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/392/console
;;;","03/Nov/17 10:25 PM;rameshthoomu;I see below error is causing the above failure. Some times network latency causing this issue and it's exiting without downloading all the content. This is a mirror link (http://www-us.apache.org/dist/kafka/$\{KAFKA_VERSION}/kafka_$\{SCALA_VERSION}-$\{KAFKA_VERSION}.tgz"" -o kafka_$\{SCALA_VERSION}-$\{KAFKA_VERSION}.tgz) and still getting this error. 
{code:java}
00:07:44.713 Step 3/10 : RUN curl -fSL ""http://www-us.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz"" -o kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz     && echo ""${KAFKA_DOWNLOAD_SHA256} kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz"" | sha256sum -c -     && tar xfz kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"".tgz -C /opt     && mv /opt/kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"" /opt/kafka     && rm kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"".tgz
00:07:44.805  ---> Running in f731852061ea
00:07:45.152   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
00:07:45.152                                  Dload  Upload   Total   Spent    Left  Speed
00:07:54.511 
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  1 35.8M    1  482k    0     0   714k      0  0:00:51 --:--:--  0:00:51  714k
  6 35.8M    6 2251k    0     0  1379k      0  0:00:26  0:00:01  0:00:25 1378k
 11 35.8M   11 4105k    0     0  1558k      0  0:00:23  0:00:02  0:00:21 1558k
 15 35.8M   15 5652k    0     0  1569k      0  0:00:23  0:00:03  0:00:20 1569k
 18 35.8M   18 6903k    0     0  1500k      0  0:00:24  0:00:04  0:00:20 1500k
 21 35.8M   21 8065k    0     0  1440k      0  0:00:25  0:00:05  0:00:20 1539k
 24 35.8M   24 9176k    0     0  1390k      0  0:00:26  0:00:06  0:00:20 1393k
 27 35.8M   27  9.9M    0     0  1341k      0  0:00:27  0:00:07  0:00:20 1225k
 29 35.8M   29 10.6M    0     0  1251k      0  0:00:29  0:00:08  0:00:21 1025k
 31 35.8M   31 11.2M    0     0  1227k      0  0:00:29  0:00:09  0:00:20  963k
00:07:54.511 curl: (18) transfer closed with 25874410 bytes remaining to read{code}
The workaround for this is to re-trigger the build.;;;","10/Nov/17 11:27 PM;sambhavdutt;The last build is failing withe the same permissioning error again. This time, I can see that the images are built well, and all the binaries too, so not really sure what is failing here. Can you take a look when you are free.

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/149/consoleFull;;;","16/Dec/17 3:09 AM;sambhavdutt;The acl_happy_path has been failing again due to the following error,

*test_FAB6490_Using_FCA_With_ACL_Permissioning* ,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest) 

Error Message
CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1

       if 'stdout' in kwargs:
            raise ValueError('stdout argument not allowed, it will be overridden.')
        process = Popen(stdout=PIPE, *popenargs, **kwargs)
        output, unused_err = process.communicate()
        retcode = process.poll()
        if retcode:
            cmd = kwargs.get(""args"")
            if cmd is None:
                cmd = popenargs[0]
>           raise CalledProcessError(retcode, cmd, output=output)
E           CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/194/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/

;;;","08/Jan/18 12:01 PM;denyeart;[~sambhavdutt] [~smithbk] Is this problem still happening?  What is your opinion of next steps?;;;","09/Jan/18 1:55 AM;sambhavdutt;Hello David,

Yes, the same error is happening(build #219, the latest one) in fabric-test-daily_x86_64 now. If I look at the logs, the possible error could be that some docker image/s is not created and this error happens. ;;;","23/Jan/18 4:30 AM;sambhavdutt;The last two builds (Build #233, #234) for fabric-test-daily-x86_64 show the same error for the ACL tests. The ACL tests passed successfully in two builds(#231 & #232). The ACL test failed in the last couple days with the Permissioning error again.;;;","08/Feb/18 12:57 AM;sambhavdutt;The same ACL error has been consistent from several builds, it still fails in the previous build #248 with permissioning error again.


{code:java}
CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1
{code}


*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/248/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/;;;","09/Feb/18 3:54 AM;sambhavdutt;The ACL Permissioning error is not happening from past two builds in the fabric-test-daily-x86_64. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/250/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/;;;","12/Feb/18 2:48 AM;sambhavdutt;The ACL permissioning has been successful from last 5 builds including today. This issue is no longer happening in the fabric-test-daily for now. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/253/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node modueles versions in fabric-samples,FAB-6870,23712,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,02/Nov/17 10:57 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 3:37 AM,,,,,,,,,,fabric-samples,,,,0,quality,,,,,,"fabcar on master branch uses 1.0.2 node modules changing it to unstable so that latest node modules can be used on master branch.

In fabric-samples repo release branch is pointing to the old node modules and the same should be updated to
 * *1.1.0-preview* for fabric-client and fabric-ca-client and
 *  *1.0.0-preview* for fabric-shim",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym7z:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Nov/17 11:19 PM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/15121/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test to see if the deletion of ledger index rebuilds it upon peer restart,FAB-6872,23714,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Nov/17 11:40 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,02/Nov/17 11:40 PM,,,,,,,,,,fabric-ledger,fabric-quality,,,0,quality,,,,,,Make sure that in an end-to-end scenario the index rebuilds when the peer restarts after a deletion of index,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym8f:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define PEER_RESOURCE_UPDATE tx type,FAB-6873,23715,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Nov/17 11:59 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 12:38 AM,,,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym8n:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Makefile is not building the cryptogen and configtxgen binaries,FAB-6875,23718,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,03/Nov/17 12:57 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,03/Nov/17 1:50 AM,WON'T FIX,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"The jenkins test runs lately have not been executing the system behave tests. The build process does not have cryptogen and configtxgen included. 
{code}
09:04:20       Captured stdout:
09:04:20       Unable to generate crypto material: [Errno 2] No such file or directory
{code}

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/129/console",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym93:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bind resourcesconfig into peer singleton,FAB-6877,23720,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,03/Nov/17 1:02 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 12:38 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym9j:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A Failed result(test_FAB6490_Using_FCA_With_ACL_Permissioning)prevents other tests from running as expected.,FAB-6878,23721,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,03/Nov/17 1:03 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,12/Dec/17 2:08 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"The test case *test_FAB6490_Using_FCA_With_ACL_Permissioning* prevents all the following tests from running. Can there be a fix(for now and later) that allows the remaining tests to run gracefully without having to depend on a failed test. Doing this would allow all the tests to run irrespective of their dependent tests.

Build Log

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/129/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/

Commits

FABRIC_COMMIT ===========> 75709bc
CA COMMIT ========> 2431f12",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzym9r:",,,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/17 10:53 PM;sambhavdutt;Build 153 fails with a permissioning error again, the following errors were observed

12:02:02     And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/enccc_example"" with args [""init"", """"] with name ""mycc""                                                                                                                                                                                                                                                                                                                                                                              # steps/endorser_impl.py:102
12:02:02 2017-11-11 12:02:02.298 UTC [common/tools/configtxgen] main -> INFO 001 Loading configuration
12:02:02 2017-11-11 12:02:02.333 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
12:02:02 2017-11-11 12:02:02.334 UTC [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Writing new channel tx
12:02:16 $ ssh-agent -k
12:02:16 unset SSH_AUTH_SOCK;
12:02:16 unset SSH_AGENT_PID;
12:02:16 echo Agent pid 2098 killed;
12:02:16 [ssh-agent] Stopped.
12:02:16 Build was aborted
12:02:16 Aborted by ryjones

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/153/console

*Commits*

FABRIC_COMMIT ===========> 7619dce
CA COMMIT ========> 87a2113;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update documentation to reflect changes with configtxgen,FAB-6879,23726,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,Asara,Asara,03/Nov/17 2:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 2:02 PM,v1.0.0,v1.0.1,v1.0.2,v1.0.3,v1.0.4,v1.1.0,v1.0.5,v1.1.0,,fabric-docs,,,,0,configtxgen,,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/configtxgen.html#bootstrapping-the-orderer]

This page implies that running `configtxgen -profile <profile_name>` will create the genesis block, but it is now required to use the -outputBlock flag as well.",,Asara,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyma7:",,,,,,,,,,,,,,,,,,,,,,Asara,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"04/Nov/17 9:38 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/15153/

[~jyellick] Does the doc change need to be ported to the 1.0 stable (release) docs?  Or is this change specific to 1.1 (master)?;;;","06/Nov/17 1:25 PM;jyellick;This should be back ported to v1.0.x (as I attempted to indicate with the v1.0.5 fix version tag, and the v1.0.\{0,1,2,3,4} affects versions tags).;;;","27/Nov/17 2:02 PM;denyeart;Marking as Done.  It will be picked up for inclusion in 1.0.5 based on the Fix Version.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] Fix the build issues causing with nvm updates,FAB-6881,23728,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,03/Nov/17 4:31 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Nov/17 6:37 AM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"[CI] fix build issues causing with nvm updates. We are observing builds are failing when a build is triggered on the VM which is not destroyed after the previous build is executed.

As a workaround we (CI) team trigger the build after the VM is destroyed and make sure all the build artifacts are cleaned up.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6924,,,,,,,,,,,,,,,,,,FAB-10181,,,,,,,,,"1|hzyman:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] Create jenkins pipeline project using JJB script,FAB-6885,23801,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,03/Nov/17 11:18 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,04/Jan/18 11:14 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,[CI] Create jenkins pipeline project using JJB script,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6990,FAB-7002,FAB-7575,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymbj:",,,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 10:23 PM;rameshthoomu;Work has been started in sandbox [https://jenkins.hyperledger.org/sandbox/job/fabric-test-multihost|https://jenkins.hyperledger.org/sandbox/job/fabric-test-multihost/12/console]

Couple of issues are blocking this work.;;;","27/Nov/17 2:03 PM;denyeart;[~rameshthoomu] This sounds like a Task or Improvement rather than a Bug?  What do you think?  Please update accordingly.;;;","04/Jan/18 11:14 AM;rameshthoomu;Updated this to ""task"". Work has been completed. fabric-multihost job has been completed and now it's been running in production jenkins job.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support mutual TLS for connections to peer and orderer,FAB-6887,23804,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Nov/17 5:48 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Nov/17 8:03 PM,,,,,,,v1.1.0,,,fabric-sdk-java,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";07/Nov/17 11:10 PM;mastersingh24;7200",,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,FAB-6820,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymbz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/17 11:10 PM;mastersingh24;https://gerrit.hyperledger.org/r/15245;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java CC needs to pass channel ID in messages (in fabric-chaincode-java) shim),FAB-6889,23810,20421,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,05/Nov/17 6:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Nov/17 12:22 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,Use the changes in shim https://gerrit.hyperledger.org/r/#/c/14919/ to add channel ID to chaincode messages.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymcn:",,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,main-emeritius,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move to grpclog#LoggerV2,FAB-6890,23811,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mastersingh24,mastersingh24,mastersingh24,05/Nov/17 10:49 PM,12/Aug/18 6:09 PM,28/Oct/23 3:01 AM,12/Aug/18 6:09 PM,v1.2.0,,,,,,WON'T FIX,,,fabric-orderer,fabric-peer,,,0,hygiene,,,,,,"The grpclog package has a new logger which appears to handle verbosity levels.  Currently, the common/flogging package implements a custom grpc logger based on the older implementation.  It's worth exploring if there are any benefits to moving to the new grpclog#LoggerV2",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-9131,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymdj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/18 6:09 PM;mastersingh24;The zap library includes a gRPC logger implementation;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inject dependencies into the endorser,FAB-6891,23812,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,06/Nov/17 5:25 PM,23/Jan/20 7:14 AM,28/Oct/23 3:01 AM,23/Jan/20 7:14 AM,,,,,,,,,,,,,,0,stale-item,,,,,,The endorser code currently uses many static methods which make testing the endorser very difficult. This change set introduces a Support interface for the endorser so that dependencies can be injected (and mocked in testing).,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6228,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymdr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 7:14 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor collection configuration to use channel-scoped peer config tree,FAB-6892,23813,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,06/Nov/17 8:59 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Jan/18 2:26 AM,,,,,,,,,,,,,,0,,,,,,,"FAB-6042 introduces a channel-scoped peer config tree for chaincode lifecycle management.  Once implemented, the collection configuration will be refactored to also use the channel-scoped peer config tree.",,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5082,,,,,,,,,"1|hzymdz:",,,,,,,,,,,,,,,,,,,,,,denyeart,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 5:44 AM;troyronda;Will this refactoring resolve [https://github.com/hyperledger/fabric/blob/master/core/scc/lscc/lscc.go#L191?]

(comment in code at line 191: ""currently, collections are immutable. Support for collection upgrade will be added later"");;;","10/Jan/18 2:26 AM;denyeart;[~troyronda]

The lifecycle enhancements described in -FAB-6042- will not be done, therefore this work item is no longer applicable, I will cancel this work item.  Different lifecycle enhancements are being investigated for 1.2, and as part of that the intent is to be able to update collection configuration.  Support for updating collection configuration is being tracked in the Side DB future (post-1.1) work item epic, see FAB-5108 / FAB-5096.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor RSCC to utilize channel-scoped peer config tree,FAB-6893,23814,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,ales,denyeart,denyeart,06/Nov/17 9:04 PM,30/Jul/19 10:53 AM,28/Oct/23 3:01 AM,30/Jul/19 10:53 AM,,,,,,,Future,,,fabric-peer,,,,0,,,,,,,"FAB-6042 introduces a channel-scoped peer config tree for chaincode lifecycle management.  Once implemented, the resources and access control will be refactored to also use the channel-scoped peer config tree.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyme7:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI does not support sending proposal request to multiple Endorsers ,FAB-6894,23815,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,muralisr,rhegde,rhegde,06/Nov/17 10:06 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,20/Jul/18 11:06 PM,,,,,,,,,,fabric-tools,,,,1,,,,,,,"There are test-suites in our organization which uses Peer CLI for verification and with the Endorsement Policy to be set with mulitple organizations, the option to Peer CLI to provide multiple endorsers would be very useful.",,baohua,lmars,Nishi,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8863,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymef:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,lmars,Nishi,rhegde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel artifacts are getting mounted into the cli container even after the network is brought down,FAB-6895,23817,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,rohitadivi,rohitadivi,07/Nov/17 1:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Nov/17 5:53 AM,v1.0.0,v1.1.0,,,,,v1.1.0,,,fabric-samples,,,,0,quality,,,,,,Channel artifacts are getting mounted into the cli container even after the network is brought down and up again.,,mastersingh24,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymev:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,rohitadivi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/17 3:53 AM;mastersingh24;https://gerrit.hyperledger.org/r/15229;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The list of supported OS is not documented,FAB-6897,23819,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,pandrejko,lehors,lehors,07/Nov/17 2:17 AM,23/Jan/20 7:15 AM,28/Oct/23 3:01 AM,23/Jan/20 7:15 AM,,,,,,,Future,,,fabric-docs,,,,0,Documentation,stale-item,,,,,"Although we have an implied list of supported OS/platforms it is not documented anywhere. There actually are two lists we should have: the list of target OSes (i.e., images we support) and the list of OSes on which development is supported.

We currently produce images for: Win64, MacOS, Linux x86_64, Linux ppc64le, and Linux s390x

We currently support development on MacOS, and Linux, plus Vagrant over Windows (and Mac?) to a degree.

It would make sense to agree on the actual lists and document them.",,baohua,bmos299,denyeart,joe-alewine,lehors,markparz,pandrejko,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtyn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,bmos299,denyeart,joe-alewine,lehors,markparz,pandrejko,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 2:38 AM;lehors;I should point out that beyond simply setting up the right expectation for the user community out there this should also be communicated to the developer community so that they take that into account when writing code.

Indeed, Go provides system independent functionality for dealing with filesystems and environment variables like PATH that should be consistently used if we want to support Windows as a development platform. Currently parts of the code are clearly written with only Unix in mind, referring to ""/tmp"" instead of os.TempDir() for instance.;;;","07/Nov/17 2:31 PM;baohua;Exactly, we should take account into this.

+1!;;;","08/Nov/17 7:42 PM;denyeart;Good to see.  Also needs to cover binaries that are shipped in addition to images.;;;","01/Dec/17 11:45 PM;markparz;Would it not be safe to say if you are developing on fabric that it is best practice / preferred that you use vagrant regardless of your OS to verify that you get the current environment and don't have to fret about some odd 1 off error? Then list the supported platforms for the user, i.e. the images we produce?;;;","02/Dec/17 12:14 AM;lehors;Hi Mark!

Unfortunately that's definitely not the case. Long gone are the days when vagrant was the preferred development environment. Because most of the core developers aren't using it more and more is done in ways that break on vagrant and I have found it to be a very unreliable platform.

I try to keep an eye and patch what I can when things break but this doesn't appear to be important to the maintainers and this is an ongoing battle.

So, I would not recommend anyone depends on vagrant at this point.;;;","29/Mar/18 5:56 AM;pandrejko;Any strong opinions about where this content should reside? Some options:
 # Add a new topic at the top of the Getting Started page before Install Prerequisites: [http://hyperledger-fabric.readthedocs.io/en/latest/getting_started.html]
 # Include it at the top of the Prerequsites page: [http://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html]
 # Consider adding a new topic in the toc under Getting Started, 'Supported Platforms'

 ;;;","29/Mar/18 9:44 PM;pandrejko; As far as the correct location for the information about what OSs we support for Development:

I believe that information belongs here:
h1. Setting up the development environment

https://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html;;;","30/Mar/18 11:11 PM;joe-alewine;This is apparently something we *used* to document but stopped doing (it became difficult to keep it current, for one thing). Welcome thoughts on whether this is actually a good idea or not. Or of perhaps not being quite so explicit about supported OS'.;;;","30/Mar/18 11:33 PM;lehors;Hi Joe, I (obviously, since I opened this ticket :) think it would be helpful to at least list OSes that are known to work. I must admit not to understand your point. How often does this actually change??

 ;;;","30/Mar/18 11:37 PM;joe-alewine;[~bmos299] [~simsc] ^^^;;;","02/Apr/18 11:00 PM;bmos299;Some thoughts on the key three sections below:

1. For supported OSs.  We need to be explicit that is for building the component binaries -- orderer, peer, ca
2. Development env.    Are developer's still using vagrant? Is this still the direction to take new developers?
3. For Platform specific binaries.  Should we be more explicit and state this is utilities and tooling? (different than component/node binaries)

Should we mention all the docker images we publish daily and for releases? This seems to be more of our direction.

;;;","03/Apr/18 2:34 AM;pandrejko;I worked with Barry to agree upon what we can safely say here. I propose we update this information in 3 places in the documentation:

1.

http://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html (Prerequisites)
_Add a section at the very top titled:_
*Supported Operating Systems*
HyperLedger Fabric component binaries (for example, orderer, peer and ca) can be built to run on the following platforms:

MacOS, Linux x86_64, Linux ppc64le and Linux s390x

 

2.

[~denyeart] - could you help with the text for this section (Setting up the development environment ) below? (It's unclear what our direction is wrt to Vagrant, what do we want to say about it, etc..)

https://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html (Setting up the development environment)
_Add a section between Overview and Prerequisites titled:_
*Supported development environments*
- Hyperledger fabric Docker images are available for development on MacOS and *nix. These images are available at.. 

- Vagrant over Windows - tbd what to say here

 

3.

http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries (Download Platform-specific Binaries)

Change:
Next, we will install the Hyperledger Fabric platform-specific binaries. This process was designed to complement the Hyperledger Fabric Samples above, but can be used independently. If you are not installing the samples above, then simply create and enter a directory into which to extract the contents of the platform-specific binaries.
.
.
.

-to-
Next, we will install the Hyperledger Fabric platform-specific utilities and tooling binaries. These binaries are supported on the following platforms:
Win64, MacOS, Linux x86_64, Linux ppc64le, and Linux s390x .

They will work on any platform which has `bash` available and the architecture is either x86_64, ppc64le and s390x.
The following process was designed to complement the Hyperledger Fabric Samples above, but can be used independently. If,

.

.

.

 

 ;;;","07/Apr/18 10:14 PM;denyeart;[~pandrejko] The Vagrant rationale and decision to use pre-dates my time, I agree we need to settle it.  I've posted in fabric-maintainers to help move this forward.  I'll copy here as well to gather any other feedback:

 
As we've discussed previously, our documented guidance around using Vagrant or not is inconsistent. We need to clarify the docs once and for all, I think the choices are:
1) recommend to use vagrant
2) recommend not to use vagrant, except in certain scenarios (and still maintain it)
3) recommend not to use vagrant at all (and potentially remove the support)
4) state that it is developer choice and highlight the pros/cons of using vagrant (what are they?)
Personally, I’ve just always used vagrant as that was the recommendation when I started, and I’ve had a decent experience with it.
Does anybody have strong opinions?
 

 ;;;","07/Apr/18 10:50 PM;denyeart;It is good to document on the prereq and download topics that the server runtimes (peer, orderer, CA) can be run as native binaries (supported platforms mentioned in comments above), but the primary recommendation for Fabric consumers (as opposed to developers) should still be to use docker containers.  As mentioned at [http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries] , the docker images are automatically downloaded as part of the download script. Docker images are available for x86-64, ppc64le, and s390x architectures.  The correct architecture is automatically detected and downloaded.

Just didn't want the new binary support text to obscure this... most people run the server runtimes as docker containers, but run the other utilities as native binaries (cryptogen, configtxgen, configtxlator, peer CLI, fabric-ca-client).

 ;;;","10/Apr/18 9:30 PM;pandrejko;[~denyeart]

There's a good bit of recent discussion on the HLF email thread about support for vagrant -

[https://lists.hyperledger.org/pipermail/hyperledger-fabric/2018-April/003300.html]

'...consider moving the Vagrant instructions on to their own page in the docs. The ""Setting up the development environment"" would link to the Vagrant instructions, but we'd remove the copious amounts of text discussing why Fabric moved away from Vagrant, the Vagrant specific prerequisites, etc. That would all live on a dedicated Vagrant environment doc page Any objections?'...;;;","11/Apr/18 6:50 AM;pandrejko;related to FAB-9436;;;","23/Jan/20 7:15 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Affiliation_path is wrong in swagger should be just affilation ,FAB-6899,23821,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,rickr,rickr,07/Nov/17 4:28 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Nov/17 1:28 AM,v1.1.0,,,,,,v1.1.0,,,fabric-ca,,,,0,sdk,,,,,,"[https://github.com/hyperledger/fabric-ca/blob/26110c00ffe5409f27e6de2079cd98e9d1be7a3d/swagger/swagger-fabric-ca.json#L452]

 

 

[https://github.com/hyperledger/fabric-ca/blob/26110c00ffe5409f27e6de2079cd98e9d1be7a3d/swagger/swagger-fabric-ca.json#L416]

 

Also wrong that it's a required field

 

 ",,rickr,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymfj:",,,,,,,,,,,,,,,,,,,,,,rickr,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/17 5:25 AM;smithbk;https://gerrit.hyperledger.org/r/15233 [FAB-6899] Fix affiliation in swagger doc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add build flag to disable BCCSP plugins,FAB-6900,23822,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,divyank,divyank,divyank,07/Nov/17 5:12 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Nov/17 1:04 AM,,,,,,,,,,fabric-peer,,,,0,fabric-bccsp,,,,,,"-FAB-6189- added the ability to load BCCSP as a Go plugin.

Due to an issue in the Go standard library( [https://github.com/golang/go/issues/22175] ), a Go plugin that imports bccsp/factory (directly or indirectly) will not compile. This is because this package includes a method that calls plugin.Open() and due to the issue mentioned above, a plugin cannot call plugin.Open().

A fix for this issue has been merged into the tip of the Go project and is currently scheduled to be included in Go 1.10.

Until this fix is available, we propose to temporarily add a build flag to Fabric to disable BCCSP plugins. This allows other plugins to be built with bccsp/factory in their dependency tree (These plugins could be auth and decoration handlers -FAB-6159,- or system chaincode plugins FAB-6719)",,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymfr:",,,,,,,,,,,,,,,,,,,,,,divyank,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 1:04 AM;divyank;Workaround was a compiler patch while building plugins until Go 1.10 comes along with the fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSDK Affiliation is not required.,FAB-6901,23823,23821,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,rickr,rickr,07/Nov/17 6:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Nov/17 1:07 AM,v1.1.0,,,,,,v1.1.1,,,fabric-sdk-java,,,,0,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymfz:",,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/17 11:50 PM;rickr;https://gerrit.hyperledger.org/r/#/c/15247/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Inconsistency in most recent ""Writing Your First Application"" and its source code",FAB-6902,23828,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,07/Nov/17 8:54 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 4:48 PM,,,,,,,v1.1.0,,,fabric-docs,fabric-samples,,,0,Usability,,,,,,"the most recent update ""[FAB-6568] Fabcar Documentation"" introduced some inconsistency with source code. this patch make them consistent..",,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6568,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymg7:",,,,,,,,,,,,,,,,,,,,,,denyeart,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,mergify/bp/release-2.2/pr-4374,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,mergify/bp/release-2.2/pr-3750,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,release-2.5,release-2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Nov/17 1:47 PM;luomin;[https://gerrit.hyperledger.org/r/#/c/15241/]

https://gerrit.hyperledger.org/r/#/c/15239/;;;","27/Nov/17 2:07 PM;denyeart;Note - the two CRs mentioned in prior comment correspond to the two subtasks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistency between WYFA and the sample source (WYFA document),FAB-6903,23829,23828,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,07/Nov/17 9:02 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 9:05 PM,,,,,,,,,,fabric-docs,,,,0,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymgf:",,,,,,,,,,,,,,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistency between WYFA and the sample source (sample source),FAB-6904,23830,23828,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,luomin,luomin,07/Nov/17 9:03 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 9:13 PM,,,,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymgn:",,,,,,,,,,,,,,,,,,,,,,luomin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/17 12:27 PM;luomin;Hi, [~mastersingh24], thanks for your comment in [https://gerrit.hyperledger.org/r/#/c/15239/]

I'v replied your comment there. 

Very appreciate if you can check it again.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"when instantiate chaincode,got Error: Got unexpected status: NOT_FOUND",FAB-6905,23831,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,XinpuLin,XinpuLin,07/Nov/17 9:30 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Jan/18 8:21 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"ot@1979574f95f3:/opt/gopath/src/chaincodedev# peer chaincode instantiate -n mycc -v 0 -c '\{""Args"":[""a"",""10""]}' -C newchannel -o orderer:7050

2017-11-07 11:57:34.273 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-11-07 11:57:34.273 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2017-11-07 11:57:34.276 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc

2017-11-07 11:57:34.277 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc

2017-11-07 11:57:34.279 UTC [msp/identity] Sign -> DEBU 005 Sign: plaintext: 0A8E070A6808031A0C08AEBF86D00510...31300A000A04657363630A0476736363 

2017-11-07 11:57:34.279 UTC [msp/identity] Sign -> DEBU 006 Sign: digest: 92581821FC128F7ECBA5B004589AB28AE2CF9D7AA7C38C082C620719CDF776C2 

2017-11-07 11:57:34.297 UTC [msp/identity] Sign -> DEBU 007 Sign: plaintext: 0A8E070A6808031A0C08AEBF86D00510...C9A949E2B2A28CD17BC327E07DE8EB1D 

2017-11-07 11:57:34.297 UTC [msp/identity] Sign -> DEBU 008 Sign: digest: 19F012D9471F8C661A3713A754D68E45E834FF00B6FAB6A431DAE296C42A9267 

Error: Got unexpected status: NOT_FOUND",,muralisr,XinpuLin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymgv:",,,,,,,,,,,,,,,,,,,,,,muralisr,XinpuLin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/18 2:05 AM;muralisr;{code:java}
Error: Got unexpected status: NOT_FOUND
{code}

[~XinpuLin]  the above is likely due to misconfiguration and the error is reported by the orderer when submitting the transaction. Please make sure configuration (especially MSP configuration) is correct.;;;","31/Jan/18 8:21 AM;muralisr;[~XinpuLin] please reopen if you continue to have this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test Makefile improvements,FAB-6907,23835,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,sambhavdutt,sambhavdutt,08/Nov/17 12:43 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,14/Nov/17 9:02 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"As the make clean is not working, a change must be made to the Makefile in the fabric-test to change the target from clean-all to clean. This would enable the 'make clean' to work.
 * rename clean-all to clean
 * -remove steps to clone other repositories; instead, update targets to build images and binaries inside submodules fabric-test/fabric/ and fabric-test/fabric-ca/- (This part is being done with another JIRA task FAB-6922)

For the Readme changes, see: [https://gerrit.hyperledger.org/r/#/c/15265/], for the steps being modified to use this fabric-test/Makefile.

For the Makefile changes, see:  ",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6916,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymhb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"14/Nov/17 8:58 AM;scottz;https://gerrit.hyperledger.org/r/#/c/15341/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
All the daily tests are getting stuck due to some backend funtional error.,FAB-6908,23836,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,AdnanChoudhury,sambhavdutt,sambhavdutt,08/Nov/17 1:18 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,09/Nov/17 1:47 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"The daily-test Jobs build no.142,144,145 get stuck on test FAB-3888. job 143 got stuck on FAB-4663 (after 3888 ran and failed due to timeout). Both scenarios get stuck when first trying to refer to ""initial leader"". Adnan touched this logic in his update, [https://gerrit.hyperledger.org/r/#/c/15179]. So the backend function is behaving inconsistently.
 And the functionality is not working (in addition to the timeout stopgap code behaving inconsistently)

*Build Log*
 [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/141/]

*Commits*

FABRIC_COMMIT ===========> 6f10a5f
 CA COMMIT ========> 63b8a57",,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymhj:",,,,,,,,,,,,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"09/Nov/17 1:46 AM;scottz;https://gerrit.hyperledger.org/r/#/c/15231/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node SDK support to requiring node LTS (8.9.0+),FAB-6909,23837,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jimthematrix,jimthematrix,jimthematrix,08/Nov/17 1:18 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Nov/17 7:38 PM,,,,,,,v1.1.0-alpha,,,fabric-sdk-node,,,,0,,,,,,,"now that node.js engine LTS has been updated from 6.9 to 8.9, we should move the SDK support to ^8.9.0 accordingly, and remove support for 6.9.

Although, it would be a good idea to keep the implementation to be node 6 compliant, until such a time when:
- a node 8-only feature is required, or
- using a node 8-only feature significantly improves the quality of the implementation

As a result, CI jobs running on node 6 should continue for now, along with node 8 CI jobs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymhr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade CI jobs to use 8.9.0 (from 8.4.0),FAB-6910,23838,23837,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jimthematrix,jimthematrix,08/Nov/17 1:43 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Nov/17 4:04 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"node.js has published new LTS with version 8.9.0, as a result the CI for node 8 runs should be upgraded from 8.4.0.",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymhz:",,,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 4:03 AM;rameshthoomu;patch has been submitted and merged. Now fabric-sdk-node and fabric-chaincode-node CI jobs installs 8.9.0 node js version dynamically.;;;","14/Feb/18 6:36 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/15261/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deliver service for blocks on the peer,FAB-6911,23839,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,08/Nov/17 2:37 AM,02/Jan/19 4:25 PM,28/Oct/23 3:01 AM,12/Jan/18 5:17 AM,,,,,,,v1.1.0,,,fabric-peer,,,,7,A&D,ARCH,release-planning-1.1,,,,"The deliver service, which currently resides solely on the orderer, should be made available on the peer as well. This service can be used for events on a channel level. It will allow for access control as well as requesting information about previously committed blocks (or ones that may have been missed during a network outage/disconnection), two things currently not possible with the eventhub (and ACL of which has been accounted for by the WIP FAB-5695 that this JIRA will hopefully replace). 

This will involve
 * moving the fabric/orderer/common/deliver package to fabric/common/deliver and reworking it to be compatible with both the peer and orderer
 * exposing the deliver service on the peer

This is doubly useful, in preparation for the addition of BFT ordering, and generally decreasing the trust the client places in the ordering service.  When connecting directly to the orderer to receive blocks, unless the client reimplements the peer functions of checking the hash chain, looking up the block validation policy, and checking the block validation policy against the orderer signatures, then the client is relying on the honesty of the OSN it connects to to return good blocks.  By adding the {{Deliver}} API to the peer, clients may use existing code invoked against the orderer, but exploit the trusted relationship between a client and its org's peers.

 

Acknowledgement:

    originator: [~jeffgarratt]",,binhn,bstasyszyn,C0rWin,denyeart,jeffgarratt,kchristidis,mastersingh24,muralisr,scottz,troyronda,wlahti,xixuejia,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7022,FAB-7069,FAB-6451,FAB-7308,,,,,,,,,FAB-6243,FAB-5695,FAB-6540,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymi7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,binhn,bstasyszyn,C0rWin,denyeart,jeffgarratt,kchristidis,mastersingh24,muralisr,scottz,troyronda,wlahti,xixuejia,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Nov/17 4:45 AM;muralisr;[~wlahti] is the delivery service a different service than the channel event one or will they be incorporated into one ? It'll also be good to enumerate all the client side usage details (I guess these details are coming ?);;;","08/Nov/17 4:50 AM;wlahti;The goal is to have the deliver service handle both typical block delivery as it does on the orderer as well as the ""event"" usage with ACL the channel service was designed to handle. ;;;","08/Nov/17 11:50 AM;kchristidis;I'm in and think it's a good idea. Do you wish to get this in for 1.1?;;;","08/Nov/17 5:54 PM;C0rWin;This is indeed very good observation, I think that generalizing the delivery service to be reused for events hub is step into right direction.;;;","08/Nov/17 5:56 PM;yacovm;The most note-worthy gain is that we can use it send persisted events, in contrast to clients that right now - if they ""missed"" the event, they will never receive it and hence their application's logic either needs to deal with it, or it will be impaired.;;;","08/Nov/17 6:09 PM;C0rWin;+100 for [~yacovm] comment;;;","08/Nov/17 7:34 PM;denyeart;I agree. [~wlahti] is the assessment of requirements relative to what was intended for Channel Service and Filtered events complete?  Could you attempt to break down the subtasks here including SDK impact?  Note that you have the option of converting this to an 'Epic' if you think there are unique Features under it, each with their own tasks/subtasks. Since Channel Service and Filtered events were targeted for v1.1, and this is intended to replace them, I will tag this for v1.1. Although, we will need to look at the sizing once the subtasks are defined.;;;","09/Nov/17 12:07 AM;binhn;I've just saw this today via scrum text. Not much time to think yet but since so many have voted ""y"", I am rushing to put in my 2 cents.

Reusing code is always good, but reusing API that doesn't to same thing is generally bad. Orderer and peer behave differently, would we run the risks of making the ""delivery"" api ambiguous? That is, calling it against an orderer would behave differently than against a peer, especially when we are also thinking about adding events. We should definitely reuse the code, but I would recommend to change the name of the function on the peer side.

 ;;;","09/Nov/17 1:19 AM;scottz;We need to remember this could require a bit of tool development too, so we need to include time in our schedule for PTE to be possibly redesigned a bit to incorporate the functionality, and rerun tests - after the node-sdk is changed after the peer is changed.

Per Dave's request for analysis, before we decide and implement, the APIs should be provided to all for review, to ensure all the previous and new requirements would be satisfied. That may prompt more questions.

Are we going to keep peer events as well as channel events?

Is each peer going to maintain another ledger, for each channel it is a member, for all the events, searchable by transaction id, and sortable by transaction as well as block?

When a client requests channel events, will it get an initial dump of all historical events on the channel, or just events from that point forwards? If a peer is created later and joins a channel later, will it be able to deliver all previous events if requested?;;;","09/Nov/17 3:39 AM;yacovm;All good Questions [~scottz] .
{quote}Are we going to keep peer events as well as channel events?
{quote}
 

I'd say deprecate the old event service in 1.2 completely. This is a plurality, and the event service is lacking architecture-wise and as a result, can only be used by the peer's organization.
{quote}Is each peer going to maintain another ledger, for each channel it is a member, for all the events, searchable by transaction id, and sortable by transaction as well as block?
{quote}
I don't know but I'd guess there is a way of having the client conveying to the peer ""the last event I saw from you is event corresponding to block sequence i "" 
 and the peer would know where to start when sending events to the client just like the orderer does so, and the events themselves would be taken from the existing ledger.

 
{quote}When a client requests channel events, will it get an initial dump of all historical events on the channel, or just events from that point forwards?
{quote}
This must be thought of, I guess. 
 My 2-cents would be not to do that if the gap is too high, but do that if the gap is low enough, and have the gap be configurable.
{quote}If a peer is created later and joins a channel later, will it be able to deliver all previous events if requested?
{quote}
The way the deliver service is implemented is just by a ledger iterator, scanning the file system and starting from a given point that is dependent on the client.
 So, I'd say is should be able, but I don't think it's very useful to provide it. What can a client do if it has the entire blockchain? My guess is that clients are interested primarily in events related to whether their submitted transaction was validated or not, and what's the block height of a peer.;;;","09/Nov/17 10:01 PM;mastersingh24;Sometimes I think that things are not clear because we write requirements in terms of how we are doing something rather than the problem we are trying to solve. [~denyeart] alluded to this in his comment.

The whole goal is to implement a new feature which will allow clients to be notified when transactions have been processed and their status (and no other information).  Access will be gated on a per channel basis.  This functionality has been slated for v1.1 for a while now.  We can decide that it's too late to get it in depending on when the code is done, but we can separate that for since this has been on the v1.1 features.

So no matter how it is implemented, new tests, SDK pieces, etc are needed.

As a side note, the artist known as the ""channel event service"" is not replacing the EventHub in v1.1.  While there is a larger ""plan"" to leverage the new channel service for more in the future, it will not rip and replace the EventHub in v1.1.  As @yacov mentioned, we should consider deprecating the EventHub in v1.2 if the EventHub functions have been subsumed / replaced by the channel event service at that point.

 

 ;;;","15/Nov/17 12:51 AM;bstasyszyn;Not sure of the conclusion of this discussion - is the Deliver service replacing the Channel Event Service for the 1.1 release? FAB-6243 (Go SDK support) has been blocked on this for a while.;;;","18/Nov/17 12:56 AM;jeffgarratt;Feature definition for this A&D.;;;","21/Nov/17 3:51 AM;wlahti;[~binhn] I'm not sure I follow how calling deliver on the peer would be any different from calling it on the orderer. Seems to me both will deliver blocks and it's merely a matter of where the block is coming from. Can you elaborate on your statement?;;;","03/Dec/17 12:35 AM;wlahti;I've hit a design issue while implementing deliver on the peer. I have opened FAB-7273 to collectively brainstorm how to best move forward. ;;;","06/Dec/17 3:07 AM;wlahti;CRs for the subtasks that address this feature are now available in gerrit for review.;;;","12/Jan/18 5:16 AM;Clayton Sims;marking based on subtask 7 being merged FAB-6160;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node chaincode support to requiring node LTS (8.9.0+),FAB-6912,23840,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jimthematrix,jimthematrix,jimthematrix,08/Nov/17 2:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Nov/17 7:14 AM,,,,,,,v1.1.0-alpha,,,fabric-sdk-node,,,,0,,,,,,,"now that node.js engine LTS has been updated from 6.9 to 8.9, we should upgrade the chaincode support accordingly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8223,,FAB-6909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymif:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-2.4,main-emeritius,purge-pd,main,correct-nodeenv-version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade node chaincode CI jobs to use 8.9.0 (from 8.4.0),FAB-6913,23841,23840,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,jimthematrix,jimthematrix,08/Nov/17 2:55 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,09/Nov/17 4:03 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"node.js has published new LTS with version 8.9.0, as a result the CI for node 8 runs should be upgraded from 8.4.0.",,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymin:",,,,,,,,,,,,,,,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 4:03 AM;rameshthoomu;patch has been submitted and merged. now all node related jobs are executing on node version 8.9.0;;;","14/Feb/18 6:37 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/15261/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify the README file instructions in fabric-test repository.,FAB-6916,23844,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,08/Nov/17 5:12 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,10/Dec/17 1:45 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,There have been some recent changes in the fabric-test repository. The README.md file is now updated accordingly to avoid confusion.These changes must be done together with the Makefile changes with FAB-6907,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6907,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymjb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"09/Nov/17 11:23 AM;scottz;Although it is not really blocking a current CI test, I added the ci-failure label anyways because this and the Makefile changes, together, are needed to allow Allen's fvt test to be merged into fabric-test for CI.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix linter errors in configtx,FAB-6918,23846,23226,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Nov/17 6:14 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,30/Jan/18 12:14 AM,,,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymjr:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in fabric-test Makefile,FAB-6920,23848,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,08/Nov/17 8:35 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,16/Nov/17 10:24 PM,v1.1.0-alpha,,,,,,v1.1.0-preview,,,fabric-quality,,,,0,,,,,,,"In Makefile, the usage has an incorrect target name.
 ""pre_setup"" should be ""pre-setup"".

gerrit patchset: https://gerrit.hyperledger.org/r/#/c/15285/",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymjz:",,,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode_example02 invoke error,FAB-6921,23849,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,fennelD7,fennelD7,08/Nov/17 4:32 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,31/Jan/18 8:20 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Fabric env:
setup by https://github.com/ibm-silvergate/netcomposer
All image versions are 1.0.2
2 orgs and 2 peers each


By running chaincode_example02, the invoke func seems not working, after invoking, A/B remain init value. Here are are logs of chaincode container, seems stub.putstate not working correctly in my case.
 
```
docker logs 89c71425c6dd
ex02 Init
Aval = 100, Bval = 200
ex02 Invoke
Query Response:\{""Name"":""a"",""Amount"":""100""}
ex02 Invoke
Aval = 99, Bval = 201
ex02 Invoke
Query Response:\{""Name"":""a"",""Amount"":""100""}
ex02 Invoke
Aval = 99, Bval = 201
```",,denyeart,fennelD7,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymk7:",,,,,,,,,,,,,,,,,,,,,,denyeart,fennelD7,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 2:12 PM;denyeart;[~fennelD7] You mean it works the first time (reduces value to $99), but not the second time?  Perhaps the second update got invalidated due to being included in the same block (collision on same key)?  Please provide more details.;;;","28/Nov/17 3:15 PM;fennelD7;[~denyeart] Hi, I mean it didn't work both times. When I just invoked and then queried, items' value didn't change, so I looked into the chaincode container's log, as showed above. In the log, we can see chaincode did calculated, item A was 99 in the process, but it didn't put the 99 back into world state successfully. so when I query again, it showed 100, when I invoked again, calculation started from 100, result into 99 again. As no one reported the same bug, it may concern my environment and is rare case.;;;","25/Jan/18 1:41 AM;muralisr;[~fennelD7] this does seem a local environment issue .. or you could be invoking too soon. There are config settings that influence block creation rate. You might be just running into that.

Please close this if you have solved the issue.;;;","31/Jan/18 8:19 AM;muralisr;[~fennelD7] closing this issue. Please reopen if you continue to see this problem;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update fabric-test Makefile to build docker images from submodules,FAB-6922,23854,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,latitiah,rameshthoomu,rameshthoomu,08/Nov/17 11:37 PM,01/Aug/19 11:34 AM,28/Oct/23 3:01 AM,01/Aug/19 11:34 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,update fabric-test Makefile to build docker images from submodules instead of cloning and building docker images from outside of fabric-test repository. Same applies to fabric-ca repository and images.,,latitiah,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymkv:",,,,,,,,,,,,,,,,,,,,,,latitiah,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/17 5:01 AM;rameshthoomu;Currently this is blocked. We are unable to build docker images from fabric-test/fabric;;;","14/Nov/17 6:33 AM;rameshthoomu;I see `make docker` is not working if hyperledger directory doesn't container fabric repository. If it is available, then make docker works from submodule. [~latitiah] I have pulled the latest code and uncomment the export variable from the fabric Makefile. Could you please check how your makefile patch worked before? Am I missing any steps?

 ;;;","20/Dec/18 6:59 AM;latitiah;This requirement has shifted a bit as we are (as we should be) pulling the latest docker images and binaries from Nexus. There is still a need to build images only when executing interoperability tests.

When a merge takes place, we would build the images and binaries based on the merged repository. As a result, we should rethink how we want to do this. Is using a submodule the best way to get this done?

;;;","24/Apr/19 11:51 PM;rameshthoomu;[~scottz] need your inputs on this?;;;","25/Apr/19 10:24 PM;scottz;We may not need the submodules. We should first establish/understand the new CI process flow, including the jobs, branching strategy, and tagging strategy, because they will influence the direction we take with this.;;;","01/Aug/19 11:34 AM;scottz;No need to use submodules. No more behave (soon). No issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have SDKs generate self-signed TLS certificates for mutual TLS (required even when peer is not setup for mutual TLS),FAB-6923,23855,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,yacovm,yacovm,08/Nov/17 11:57 PM,12/Jun/20 12:30 AM,28/Oct/23 3:01 AM,26/Jun/18 4:32 AM,v1.2.0,,,,,,v1.2.0,,,fabric-sdk-go,fabric-sdk-node,fabric-sdk-py,,0,sdk,,,,,,"In some cases, clients will be deployed without TLS certificates and will connect to the peer when the peer uses TLS.

In this kind of scenario, the peer would send a certificate request to the client, and it will not send anything back - and then the discovery service would reject the peer's connection.

In order to ensure the clients will be able to use the discovery service in spite of lack of TLS certificate, we can just have them auto-generate one and self-sign it.
 Then, the peer would obtain the certificate (but not verify it!) and a mutual TLS handshake will take place, which would allow the client to authenticate to the peer.

Note - for Service Discovery, this is required even when peer is not setup for mutual TLS, that is, even when the peer has clientAuthRequired=false.",,harrisob@us.ibm.com,rickr,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-99,,,,,,,,,,,,,,,,,,Unset,,,FAB-8779,,,,,,,,,"1|hzwqfj:2",,,,Unset,,To Do,,,,,Unset,,,,,,,,,,,harrisob@us.ibm.com,rickr,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/18 6:42 AM;Clayton Sims;yacov is this done?

 ;;;","11/Jun/18 3:53 PM;yacovm;Depends where:
 * There is [code of mine|https://github.com/hyperledger/fabric/blob/master/common/crypto/tlsgen/ca.go] in fabric core that does this, and the go SDK anyway imports the fabric core, so they should be able to reuse it.
 I told them of the code's location on rocket chat. Not sure if they integrated it something like this. [~troyronda] , [~bstasyszyn] are you guys planning to do something
 of this sort?
 * I [implemented|https://github.com/hyperledger/fabric-sdk-java/blob/master/src/main/java/org/hyperledger/fabric/sdk/security/certgen/TLSCertificateBuilder.java] for the Java SDK code that does that, but I don't know whether [~rickr] incorporated the code into the SDK itself.
 * For the node SDK - I am not aware that anyone did anything of this sort. Perhaps [~harrisob@us.ibm.com] can say more.;;;","13/Jun/18 3:48 AM;Clayton Sims;[~harrisob@us.ibm.com]   [~rickr]   what is you input here;;;","13/Jun/18 4:20 AM;rickr;Done;;;","14/Jun/18 2:56 AM;harrisob@us.ibm.com;Not done on  NodeSDK;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merge Job fails due to unexpected node version and the following jobs after this fail to execute.,FAB-6924,23856,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,rameshthoomu,sambhavdutt,sambhavdutt,09/Nov/17 12:21 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,14/Nov/17 11:16 PM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"*Merge build fails due the following errors,*

{color:#8eb021}14:03:09 nvm is not compatible with the npm config ""prefix"" option: currently set to ""/home/jenkins/npm""
14:03:09 Run `nvm use --delete-prefix v8.9.0` to unset it.
14:03:10 nvm is not compatible with the npm config ""prefix"" option: currently set to ""/home/jenkins/npm""
14:03:10 Run `nvm use --delete-prefix v8.9.0` to unset it.
14:03:10 Build step 'Execute shell' marked build as failure
14:03:10 $ ssh-agent -k
14:03:10 unset SSH_AUTH_SOCK;
14:03:10 unset SSH_AGENT_PID;
14:03:10 echo Agent pid 5767 killed;
14:03:10 [ssh-agent] Stopped.
{color}
*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/78/console

*Commits*

FABRIC_COMMIT ===========> cb1b71f
CA COMMIT ========> 87a2113",,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6881,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyml3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/17 11:16 PM;rameshthoomu;Seems this patch has been fixed the nvm build failures. [https://gerrit.hyperledger.org/r/#/c/15395/.] Closing this issue now, Please create a new bug if you see this error again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - run fabric-test smoke and daily using Makefile targets from CI jobs,FAB-6925,23857,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,09/Nov/17 1:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Nov/17 5:51 AM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"[CI] - run fabric-test smoke and daily using Makefile targets from CI jobs.

make ci-smoke should trigger smoke test jobs (verify and merge)

make ci-daily should trigger daily jobs",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymlb:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 4:02 AM;rameshthoomu;patch has been submitted to fix this https://gerrit.hyperledger.org/r/#/c/15307/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate TLS client certificates for users,FAB-6927,23859,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,09/Nov/17 4:08 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 5:27 PM,,,,,,,v1.1.1,,,fabric-tools,,,,0,,,,,,,"cryptogen is used to generate crypto material for people to get up and running and is also used within CI tests to generate the bootstrap crypto material.

In order to properly test and demonstrate mutual TLS, the crypto material generated for users should include client certificates.

The plan is to put the TLS client credentials in the $UserDir/tls folder and name them client.key and client.crt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";12/Nov/17 7:59 PM;mastersingh24;1800",";12/Nov/17 7:59 PM;mastersingh24;600",7200,0,2400,33%,7200,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymlj:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Nov/17 7:52 PM;mastersingh24;It turns out that UserDir/tls is already being populated for all node types.  So all that is needed to name the files appropriately depending on the type of node being generated.;;;","12/Nov/17 8:00 PM;mastersingh24;https://gerrit.hyperledger.org/r/15407;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] update PATH with node 8.9.0 version,FAB-6929,23862,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,09/Nov/17 4:38 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Nov/17 5:00 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"update PATH environment variable with node 8.9.0 version.
{code:java}
/home/jenkins/.nvm/versions/node/v6.9.5/bin:/home/jenkins/.nvm/versions/node/v8.4.0/bin{code}",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymlz:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/17 1:30 AM;rameshthoomu;PATH has been updated to node js version 8.9.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[BUILD] - unable to build zookeepr docker images,FAB-6931,23864,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,09/Nov/17 4:47 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,10/Nov/17 1:32 AM,,,,,,,,,,fabric-build,,,,0,,,,,,,"[BUILD] - unable to build zookeepr docker images

observed zookeeper reference link has been updated to newer version 3.4.10 and existing version in our zookeeper dockerfile has been removed. In result, we are getting 404 not found error message while building zookeeper docker image.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7032,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymmf:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Nov/17 5:42 AM;rameshthoomu;{code:java}
00:11:49.475 curl -fsSL http://www.apache.org/dist/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz
00:11:49.660 curl: (22) The requested URL returned error: 404 Not Found{code};;;","10/Nov/17 1:32 AM;rameshthoomu;patch has been submitted and merged. able to build zookeeper images now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logs for s390x jobs are orders of magnitude larger than other platforms.,FAB-6933,23867,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,ryjones,ryjones,09/Nov/17 7:14 AM,07/Sep/19 4:07 AM,28/Oct/23 3:01 AM,07/Sep/19 4:07 AM,,,,,,,,,,,,,,0,,,,,,,Logs for successful fabric-verify-x86_64 jobs are between 60 and 120 kilobytes. Logs for successful fabric-verify-s390x jobs are between 18 and 24 megabytes. This means the log retention for -s390x is much shorter than it should be. Please reduce the size of these logs.,,baohua,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymmv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/18 10:21 AM;baohua;[~ryjones] Do we still need to keep this?;;;","18/Apr/18 10:41 AM;ryjones;it's kind of your call. the log retention on these jobs is set much shorter than other jobs. If you don't need the logs, I guess the current configuration is fine.;;;","07/Sep/19 4:06 AM;ryjones;platform is removed from Jenkins;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-docker-devmode not working v1.1-preview,FAB-6934,23868,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,dainliff,dainliff,09/Nov/17 10:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,15/Feb/18 1:11 AM,,,,,,,v1.1.0,v1.1.1,,fabric-samples,,,,0,,,,,,,"The instructions to run chaincode in development listed here [https://github.com/hyperledger/fabric-samples/blob/v1.1.0-preview/chaincode-docker-devmode/README.rst] are currently failing on the v1.1-preview

There are two issues I've encountered
 # The instructions still refer to the go code being located in chaincode/chaincode_example02/ instead of chaincode/chaincode_example02/go
 So the following instructions are no longer correct [https://github.com/hyperledger/fabric-samples/blob/v1.1.0-preview/chaincode-docker-devmode/README.rst#terminal-2---build--start-the-chaincode]
 # Even after shifting to the correct directory, I encounter the following error trying to execute the chaincode.
{code}
 root@8742ca7c4eed:/opt/gopath/src/chaincode/chaincode_example02/go# CORE_PEER_ADDRESS=peer:7051 CORE_CHAINCODE_ID_NAME=mycc:0 ./go
 2017-11-09 01:29:13.401 UTC [shim] SetupChaincodeLogging -> INFO 001 Chaincode log level not provided; defaulting to: INFO
 2017-11-09 01:29:13.402 UTC [shim] SetupChaincodeLogging -> INFO 002 Chaincode (build level: ) starting up ...
 Error starting Simple chaincode: error sending chaincode REGISTER: EOFroot@8742ca7c4eed:/opt/gopath/src/chaincode/chaincode_example02/go#
{code}


 

 ",,dainliff,denyeart,luomin,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymn3:",,,,,,,,,,,,,,,,,,,,,,dainliff,denyeart,luomin,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Nov/17 4:35 AM;yuki-kon;Hi [~dainliff]. I found the same error.
The second issue seems like connection error. FAB-6349 changed the port number to start Chaincode in dev mode to ""7052"".
This change should be reflected to https://github.com/hyperledger/fabric-samples/blob/v1.1.0-preview/chaincode-docker-devmode/README.rst#terminal-2---build--start-the-chaincode
;;;","12/Nov/17 1:43 PM;luomin;Hi [~yuki-kon], [~dainliff]  Thank you very much for the info. on this issue.

and could you have a review on [https://gerrit.hyperledger.org/r/#/c/15405/]

 ;;;","13/Nov/17 9:22 AM;dainliff;Hi [~luomin], I've looked over your changes and they seem good for the most part.

I think there may be a small error in the docker-compose-simple.yaml though, so I've left a comment there.;;;","13/Nov/17 9:34 AM;luomin;Hi [~dainliff], Thanks for the review. I agree with your comment.  I've changed my modification back in docker-compose-simple.yaml. ;;;","14/Nov/17 3:16 AM;yuki-kon;Hi [~luomin], thanks for inviting me as a reviewer. I reviewed the CR on gerrit. It looks good to me.;;;","13/Dec/17 10:52 AM;luomin;Hi, [~mastersingh24]. Since this issue has some similarity to -FAB-6349-,   could you have a check of this one and decide merge or not?;;;","08/Jan/18 12:32 PM;denyeart;[~luomin] Could you fix the merge conflict in [https://gerrit.hyperledger.org/r/#/c/15405/] ?;;;","10/Jan/18 3:13 PM;luomin;Hi [~denyeart]

Thanks for checking here.

I fixed this merge conflict through another submission just now.

[https://gerrit.hyperledger.org/r/#/c/16719/]

The reason for the conflicts is due to the README.rst file was being updated in FAB-7241 before the merge of my previous one.

Thank you to follow this up and merge it.

 

 ;;;","30/Jan/18 10:18 AM;luomin;Hi [~dainliff] and [~yuki-kon]   could you review again [https://gerrit.hyperledger.org/r/#/c/16719/]

Just fixed the merge conflict pointed out by [~denyeart]. 

 

 ;;;","30/Jan/18 10:35 AM;yuki-kon;Hi [~luomin]. I reviewed the CR. It looks good to me.;;;","30/Jan/18 10:37 AM;luomin;Hi [~yuki-kon] Thank you!  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add integration test for java SDK mutual TLS,FAB-6935,23869,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,jimthematrix,jimthematrix,09/Nov/17 1:00 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Feb/18 12:38 AM,,,,,,,,,,fabric-sdk-java,,,,0,,,,,,,gerrit https://gerrit.hyperledger.org/r/#/c/17793/,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6936,,,FAB-7155,,FABJ-103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymnb:",,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/18 11:57 PM;rickr;Set's up client TLS certs from Fabrica;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add integration test for node SDK mutual TLS,FAB-6936,23870,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,jimthematrix,jimthematrix,09/Nov/17 1:01 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/May/18 5:51 PM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6935,FAB-7154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymnj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 5:19 AM;Clayton Sims;This one and 6935 are tied to mutual tls.    is there anything required for alpha for those 2?   [~C0rWin] might have cycles if this is needed prior to alpha

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric not working with TLS enabled,FAB-6937,23871,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,snehas,snehas,09/Nov/17 2:53 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,13/Nov/17 9:01 PM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"We are facing issue in instantiating chaincode if TLS is enabled. Getting below error in chaincode container.

*ERRO 002 Error trying to connect to local peer: x509: cannot validate certificate for 172.25.0.20 because it doesn't contain any IP SANs*

If TLS is disabled setup is working fine.

Attaching container logs , peer TLS certificate and docker-compose.yaml for reference.

Please let me know if any other information is required.",,lmars,mastersingh24,muralisr,snehas,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 2:50 PM;snehas;Container_Logs.txt;https://jira.hyperledger.org/secure/attachment/13314/Container_Logs.txt","09/Nov/17 2:50 PM;snehas;Peer_TLS_certificate.txt;https://jira.hyperledger.org/secure/attachment/13312/Peer_TLS_certificate.txt","09/Nov/17 2:50 PM;snehas;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/13313/docker-compose.yaml","10/Nov/17 7:04 PM;snehas;docker-compose_Updated.yaml;https://jira.hyperledger.org/secure/attachment/13322/docker-compose_Updated.yaml","10/Nov/17 7:12 PM;snehas;peer-base.yaml;https://jira.hyperledger.org/secure/attachment/13323/peer-base.yaml",,,,,,,,,,,,,,,,,,"1|hzymnr:",,,,,,,,,,,,,,,,,,,,,,lmars,mastersingh24,muralisr,snehas,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 11:14 PM;yacovm;From looking at the docker compose file you provided I suspect the problem is that you're lacking CORE_PEER_ADDRESS in the file.
Notice that in the e2e_cli [we have it defined|https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/base/docker-compose-base.yaml].

Now, I think what happens is that the peer starts, sees it lacks it and therefore auto-computes it based on ip address.
Now, the TLS certificate is issued to the hostname, which is what fails the TLS handshake. 

Just define CORE_PEER_ADDRESS to be peer01.lsbgb65.cit.lsnet:7051 and you should be all set
;;;","09/Nov/17 11:34 PM;muralisr;[~yacovm] the docker compose refers to peer-base.yaml where CORE_PEER_ADDRESS maybe defined ?
{code:java}
peer01.citi1.cit.lsnet:
 container_name: peer01.citi1.cit.lsnet
 extends:
 file: peer-base/peer-base.yaml
...
...
 service: peer-base{code}
 
[~snehas] can you provide all referred artefacts please ?;;;","09/Nov/17 11:39 PM;yacovm;I saw that, but my guess is that this is the culprit and they didn't. 
In our peer base we only have a common configuration for all peers so it's unlikely that it would be defined there.
Of course - I could be wrong ;) ;;;","09/Nov/17 11:53 PM;muralisr;[~yacovm] good point....

comparing e2e_cli


{code:java}
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
{code}

with 

{code:java}
peer01.citi1.cit.lsnet:
 container_name: peer01.citi1.cit.lsnet
 extends:
 file: peer-base/peer-base.yaml
...
...
 service: peer-base
{code}

 docker-compose-base.yaml COULD have been replaced with peer-base.yaml without updating peer-base with all the vars from docker-compose-base.yaml.

All the more reason to get all the artifacts.;;;","10/Nov/17 2:28 AM;mastersingh24;Definitely missing `CORE_PEER_ADDRESS` for each peer as [~yacovm] stated above.  I've seen this issue a couple of times recently.;;;","10/Nov/17 7:17 PM;snehas;Thanks for your inputs !
 I modified docker-compose file to set CORE_PEER_ADDRESS of peer containers and previous error i.e. ""cannot validate certificate"" got resolved. However now I am getting below error in chaincode container logs.

2017-11-09 16:14:10.419 UTC [bccsp] initBCCSP -> DEBU 001 Initialize BCCSP [SW]
 2017-11-09 16:14:10.455 UTC [grpc] Printf -> DEBU 002 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup peer01.lsbgb65.cit.lsnet on 10.44.224.198:53: no such host""; Reconnecting to \{peer01.lsbgb65.cit.lsnet:7051 <nil>}
 2017-11-09 16:14:11.421 UTC [grpc] Printf -> DEBU 003 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup peer01.lsbgb65.cit.lsnet on 10.44.224.198:53: no such host""; Reconnecting to \{peer01.lsbgb65.cit.lsnet:7051 <nil>}
 2017-11-09 16:14:13.126 UTC [grpc] Printf -> DEBU 004 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup peer01.lsbgb65.cit.lsnet on 10.44.224.198:53: no such host""; Reconnecting to \{peer01.lsbgb65.cit.lsnet:7051 <nil>}
 2017-11-09 16:14:13.419 UTC [shim] userChaincodeStreamGetter -> ERRO 005 Error trying to connect to local peer: context deadline exceeded
 2017-11-09 16:14:13.419 UTC [Public/PublicCC] Errorf -> ERRO 006 Error starting chaincode: Error trying to connect to local peer: context deadline exceeded

I tried adding dns_search: . as a config value for the peer. But am still getting this error.

 

Attaching updated docker-compose and peer-base file for reference.



Peer containers on docker:-

CONTAINER ID        IMAGE                                  COMMAND                  CREATED             STATUS              PORTS                                                                       NAMES

3e43405ba24e        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp                              peer01.deutbnk1.cit.lsnet

b8dc30ad933c        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:11051->7051/tcp, 0.0.0.0:11053->7053/tcp                            peer02.lsbgb65.cit.lsnet

3ce749622098        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp                            peer01.lsbgb65.cit.lsnet

431656288b9f        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp                              peer01.citibnk1.cit.lsnet

3c29d29270b3        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp                              peer01.goldsac1.cit.lsnet

1247c0cfff26        ibmblockchain/fabric-orderer:1.0.3     ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:6050->7050/tcp                                                      ord01.lsorder.cit.lsnet

9a985fe9c060        ibmblockchain/fabric-tools:1.0.3       ""/bin/bash -c 'sle...""   2 minutes ago       Up 2 minutes       

 

Command to instantiate chaincode

CORE_PEER_TLS_ROOTCERT_FILE=/lsops_artefacts/organizations/lsbldn_lsbgb65/peers/01.peer01.lsbgb65.cit.lsnet/msp/tlsintermediatecerts/tls.ca01.cit.lsnet.pem

CORE_PEER_MSPCONFIGPATH=/lsops_artefacts/organizations/lsbldn_lsbgb65/users/01.admin01.lsbgb65.cit.lsnet/msp   CORE_PEER_ADDRESS=peer01.lsbgb65.cit.lsnet:7051 CORE_PEER_LOCALMSPID=lsbgb65 peer chaincode instantiate -o ord01.lsorder.cit.lsnet:7050 --tls true --cafile /lsops_artefacts/organizations/lsbldn_lsorder/orderers/01.ord01.lsorder.cit.lsnet/msp/tlsintermediatecerts/tls.ca01.cit.lsnet.pem -C public -n public -v 1.0.0 -c '\{""Args"":[""init"",""60""]}'

 

Please provide your inputs.;;;","10/Nov/17 10:01 PM;mastersingh24;You need to set *CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE* in *peer-base.yaml*
It needs to be set to the Docker network being used by Compose which will typically be the name of the folder where *docker-compose.yaml* resides plus *_default*;;;","10/Nov/17 10:11 PM;yacovm;Looks like they have it commented out: 

{code}
      #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2ecliv1opskafka_default
{code};;;","13/Nov/17 4:20 AM;muralisr;[~snehas] any update on this based on comments above ? Seems like a few env setup issues. Please make sure the env variables are correctly set (examples/e2e_cli/docker-compose-e2e.yaml provides a good template).;;;","13/Nov/17 8:55 PM;snehas;After adding CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE it worked. 
[~mastersingh24] [~yacovm] [~muralisr] : Thanks a lot for your help. 
We can close this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot create CouchDB database for channel,FAB-6938,23877,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,denyeart,denyeart,09/Nov/17 10:57 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,06/Feb/18 5:56 AM,,,,,,,v1.1.0,,,fabric-ledger,,,,1,,,,,,,"{color:#444444}In rocket.chat there was a post about an error:{color}

_{color:#444444}when i am running join peer request some times it's giving Error:file_exists, Status Code:412, Reason:The database could not be created, the file already exists{color}_

 

{color:#444444}I believe this can happen if peer is retrying a create database request against CouchDB.  A prior attempt to create database came back as a timeout failure to peer, but in the meantime the database got created in CouchDB.  The next retry would get the error above.  This scenario should be handled in peer code.
{color}",,chris.elder,denyeart,lishuo5263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx0jj:",,,,,,,,,,,,,,,,,,,,,,chris.elder,denyeart,lishuo5263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/17 12:22 AM;chris.elder;I replicated the error by constantly decreasing the couchdb timeout and running test code.  The problem occurs since the retry logic in handleRequest does not retest if the database has been created.  ;;;","28/Dec/17 4:53 PM;lishuo5263;[~chris.elder] Hi, I have same error like you ,but different is When I join org1 channel ,I got this error ,and the same time I join org2 response is success,the join org1 Error detail is ""{color:red} error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: chaincode error (status: 500, message: Cannot create ledger from genesis block, due to Couch DB Error:file_exists,  Status Code:412,  Reason:The database could not be created, the file already exists.)
    at /root/mry/node_modules/grpc/src/node/src/client.js:434:17
(node:19614) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: Cannot read property 'stack' of undefined{color} ""  I'm confuse, are you solved ?? buy the way ,I use the {color:#59afe1}fabric-samples(blance-transfer) {color}!!;;;","28/Dec/17 11:04 PM;denyeart;[~lishuo5263] I believe you are seeing the same problem as Chris, you just are seeing the Node SDK result of the problem as well. 

[~chris.elder], If you simply add a check for database existence to the retry, there can still be a timing window problem (database may get created right after the existence check).  Therefore I think you will need to explicitly handle the 412 error.  If you get a 412, then do an existence check to ensure that the database has indeed been created, and then return success.;;;","02/Feb/18 1:38 AM;chris.elder;https://gerrit.hyperledger.org/r/#/c/16519/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Daily-test: Gosiip test failure in scenario ""A leader peer goes down by disconnect, comes back up *before* another leader is elected, catches up""",FAB-6940,23880,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,10/Nov/17 12:26 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,14/Nov/17 3:35 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"This scenario or the related scenarios with stop/pause fail with following error messages:
[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/149/testReport/gossip/Gossip%20Service/_FAB_4663___FAB_4664___FAB_4665__A_non_leader_peer_goes_down_by_disconnect__comes_back_up_and_catches_up_eventually__Disconnect_test_may_fail_due_to_FAB_6333______1_3_/]

 
{code:java}
Error Message
Error: initial non-leader peer has already become leader.
Stacktrace
Failing step: Then the initial non-leader peer of ""org1"" has not become the leader ... failed in 0.507s
Location: gossip.feature:133
Assertion Failed: Error: initial non-leader peer has already become leader.
Captured stdout:
testConfigs: configs/95bfda3cc4bd11e7a32efa163ebc964d
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/behavesystest.tx --channelID behavesystest --timeout 120 --orderer orderer0.example.com:7050 ""]: {'cli': ''}
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer channel fetch config /var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/behavesystest.block --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer1.org2.example.com': ''}
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.org2.example.com:7051 peer channel join --blockpath /var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/behavesystest.block""]: 
Channel Block Present Result True
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.org2.example.com:7051 peer chaincode install --name mycc --lang GOLANG --version 0 --path github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 --orderer orderer0.example.com:7050 ""]: {'peer1.org2.example.com': '', 'peer0.org1.example.com': '', 'peer1.org1.example.com': '', 'peer0.org2.example.com': ''}
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode instantiate --name mycc --version 0 --lang GOLANG --channelID behavesystest --ctor '{""Args"": [""init"",""a"",""1000"",""b"",""2000""]}' --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': {'peer0.org1.example.com': ''}}
initial leader is peer1.org1.example.com
Invoke[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer1.org1.example.com CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke --name mycc --ctor '{""Args"": [""invoke"",""a"",""b"",""10""]}' --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer1.org1.example.com': ''}
Query Exec command: /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer1.org1.example.com CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode query --name mycc --ctor '{""Args"": [""query"",""a""]}' --channelID behavesystest ""
initial non-leader is peer0.org1.example.com
Invoke[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode invoke --name mycc --ctor '{""Args"": [""invoke"",""a"",""b"",""10""]}' --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': ''}
Query Exec command: /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor '{""Args"": [""query"",""a""]}' --channelID behavesystest ""
Invoke[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode invoke --name mycc --ctor '{""Args"": [""invoke"",""a"",""b"",""10""]}' --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': ''}

Standard Output
@scenario.begin

  @daily
  Scenario Outline: [FAB-4673] [FAB-4674] [FAB-4675] A leader peer goes down by disconnect, comes back up *before* another leader is elected, catches up. Disconnect test may fail due to FAB-6333. -- @1.3 
    Given the CORE_LOGGING_GOSSIP environment variable is ""DEBUG"" ... passed in 0.000s
    And I have a bootstrapped fabric network of type kafka ... passed in 30.796s
    When a user sets up a channel ... passed in 37.977s
    And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with name ""mycc"" ... passed in 62.150s
    And I wait ""30"" seconds ... passed in 30.027s
    When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] on the initial leader peer of ""org1"" ... passed in 35.894s
    And I wait ""5"" seconds ... passed in 5.005s
    And a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on the initial leader peer of ""org1"" ... passed in 4.682s
    Then a user receives a success response of 990 from the initial leader peer of ""org1"" ... passed in 0.000s
    When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] on the initial non-leader peer of ""org1"" ... passed in 5.458s
    And I wait ""5"" seconds ... passed in 5.005s
    And a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on the initial non-leader peer of ""org1"" ... passed in 4.898s
    Then a user receives a success response of 980 from the initial non-leader peer of ""org1"" ... passed in 0.000s
    When the initial leader peer of ""org1"" is taken down by doing a disconnect ... passed in 4.198s
    And I wait ""1"" seconds ... passed in 1.001s
    And a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] on the initial non-leader peer of ""org1"" ... passed in 3.173s
    And I wait "" 5"" seconds ... passed in 5.005s
    Then the initial non-leader peer of ""org1"" has not become the leader ... failed in 0.507s
    When the initial leader peer of ""org1"" comes back up by doing a connect ... skipped in 0.000s
    And I wait ""20"" seconds ... skipped in 0.000s
    When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on the initial leader peer of ""org1"" ... skipped in 0.000s
    Then a user receives a success response of 970 from the initial leader peer of ""org1"" ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
testConfigs: configs/95bfda3cc4bd11e7a32efa163ebc964d
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/behavesystest.tx --channelID behavesystest --timeout 120 --orderer orderer0.example.com:7050 ""]: {'cli': ''}
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer channel fetch config /var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/behavesystest.block --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer1.org2.example.com': ''}
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.org2.example.com:7051 peer channel join --blockpath /var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/behavesystest.block""]: 
Channel Block Present Result True
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com CORE_PEER_ADDRESS=peer1.org2.example.com:7051 peer chaincode install --name mycc --lang GOLANG --version 0 --path github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 --orderer orderer0.example.com:7050 ""]: {'peer1.org2.example.com': '', 'peer0.org1.example.com': '', 'peer1.org1.example.com': '', 'peer0.org2.example.com': ''}
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode instantiate --name mycc --version 0 --lang GOLANG --channelID behavesystest --ctor '{""Args"": [""init"",""a"",""1000"",""b"",""2000""]}' --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': {'peer0.org1.example.com': ''}}
initial leader is peer1.org1.example.com
Invoke[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer1.org1.example.com CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke --name mycc --ctor '{""Args"": [""invoke"",""a"",""b"",""10""]}' --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer1.org1.example.com': ''}
Query Exec command: /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer1.org1.example.com CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode query --name mycc --ctor '{""Args"": [""query"",""a""]}' --channelID behavesystest ""
initial non-leader is peer0.org1.example.com
Invoke[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode invoke --name mycc --ctor '{""Args"": [""invoke"",""a"",""b"",""10""]}' --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': ''}
Query Exec command: /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor '{""Args"": [""query"",""a""]}' --channelID behavesystest ""
Invoke[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/95bfda3cc4bd11e7a32efa163ebc964d/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode invoke --name mycc --ctor '{""Args"": [""invoke"",""a"",""b"",""10""]}' --channelID behavesystest --orderer orderer0.example.com:7050 ""]: {'peer0.org1.example.com': ''}

{code}
 

 ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymt3:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"14/Nov/17 5:05 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15179/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Build] - Cache all the default software versions in nexus,FAB-6941,23882,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,rameshthoomu,rameshthoomu,10/Nov/17 12:30 AM,14/Jan/20 1:05 AM,28/Oct/23 3:01 AM,14/Jan/20 1:05 AM,v1.0.4,,,,,,Future,,,fabric-build,,,,0,fabric-build,stale-item,,,,,"[Build] - cache all the default software versions in nexus repository and later update the dockerfile's to download these images from nexus. Will share the list of the cached versions.

Will push these cached versions and pull these from the nexus repository. This should result  great improvement in build time in jenkins.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-75,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymtj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 11:00 PM;rameshthoomu;Chris started working on the related task https://jira.hyperledger.org/browse/FAB-7045;;;","14/Jan/20 1:05 AM;rameshthoomu;Nexus is out scope. Azure Pipelines installing tagged softwares for every build and go tools are versioned.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update balance-transfer sample to re-use EventHub across invoke calls,FAB-6942,23885,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,Ratnakar,jimthematrix,jimthematrix,10/Nov/17 12:46 AM,24/Mar/19 9:13 PM,28/Oct/23 3:01 AM,24/Mar/19 9:13 PM,,,,,,,,,,fabric-samples,,,,0,,,,,,,right now the event hub instance is constructed for each invoke call (app/invoke-transaction.js) and disconnected after the transaction. this is not optimal. should instead re-use an instance on per-peer basis that persists throughout the server's life span,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymtz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Build images which are mentioned in the docker-compose or required in the tests,FAB-6944,23888,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Nov/17 1:17 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,11/Nov/17 5:18 AM,,,,,,,v1.1.0-alpha,,,fabric-build,fabric-ci,,,0,,,,,,,"[BUILD] - build specific images which are mentioned in the docker-compose file or required in the tests. This actually saves lot of time in the build process. ex; fabric-sdk-node we only use 

ca, fabric-orderer, fabric-peer and couchdb and CI script has to build only these images not the `make docker` and build all the unnecessary images.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymun:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/17 5:18 AM;rameshthoomu;Patch has been submitted and merged. This fix should decrease the overall build time as we are building images which are specified in docker-compose file.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[BUILD] - add fabric-ca make target,FAB-6946,23890,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,rameshthoomu,rameshthoomu,10/Nov/17 2:44 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,10/Nov/17 7:14 PM,,,,,,,v1.1.0-alpha,,,fabric-build,,,,0,fabric-build,,,,,,"[build] - add `fabric-ca` make target in fabric-ca makefile. This is useful to just build fabric-ca docker image to use in fabric-sdk-node and fabric-chaincode-node repositories. These repositories are not using other fabric-ca docker images like (tools, orderer, peer and fvt). 

though the above images are not required we build fabric-ca images using `make docker` command and this builds all the docker images instead only fabric-ca docker image.

Add a target to build *fabric-ca docker image* in fabric-ca makefile

 ",,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzymv3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/17 2:50 AM;smithbk;https://gerrit.hyperledger.org/r/15349 [FAB-6946] Add target for fabric-ca image alone;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maintainers Doc formatted poorly,FAB-6948,23897,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,nickgaski,nickgaski,nickgaski,10/Nov/17 5:40 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Nov/17 5:32 AM,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,,MAINTAINERS.rst needs to be modified to properly render in the sphinx output,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymvb:",,,,,,,,,,,,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement client-interacting peer config APIs,FAB-6951,23900,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,jyellick,jyellick,10/Nov/17 6:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Dec/17 11:06 PM,,,,,,,v1.1.0,,,fabric-peer,,,,1,review-needed,,,,,,"The workflow associated with modifying configuration is as follows.
 # Client fetches current config.
 # Client modifies a copy of the current config.
 # Client computes an update to transition between the current, and modified config.
 # Client collects signatures for the update.
 # (Optional) Client validates that the config update will apply successfully.
 # Client submits update for ordering

Steps 2, 3, 4, and 6 may all be accomplished with relative ease by the SDKs or CLI. However, steps (1) and (5) require some new API support from the peer.

Two options for implementing this API have been discussed.

# Implementing as a new gRPC service with functions which take a {{common.Envelope}} as parameter.
# Implementing as a function on an existing (or new) system chaincode using the existing chaincode APIs.

There has already been some extensive discussion in the parent item around which of these approaches should be used, starting with:

https://jira.hyperledger.org/browse/FAB-6042?focusedCommentId=34326&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-34326

and (hopefully) ending at:

https://jira.hyperledger.org/browse/FAB-6042?focusedCommentId=34434&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-34434",,aambati,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymvz:",,,,,,,,,,,,,,,,,,,,,,aambati,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/17 6:30 AM;aambati;https://gerrit.hyperledger.org/r/c/15479/;;;","02/Dec/17 2:56 AM;kchristidis;In typical fashion, we never really completed the vote for this one, and I know coding for this is already underway, but let the record show that I'm voting for option 2, as I'd like us to stick a message-based protocol.

I think that both the service and its API (Endorser and ProcessProposal respectively) are incorrectly named and should be renamed to something way more generic, but that is something that we can tackle later on, if there is enough agreement.

So +1 for Option 2.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rearrange gossip tests to avoid invoking FAB-6333,FAB-6954,23903,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,10/Nov/17 7:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Nov/17 5:02 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"In current setup, the gossip tests invoke FAB-6333. The tests are to be rearranged in a way that the tests still verify the intended functionality but do not go down the path that can invoke FAB-6333.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6333,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymwn:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"14/Nov/17 5:02 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15359/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BYFN docs have wrong path to marble chaincode,FAB-6956,23905,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,10/Nov/17 8:34 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Jan/18 10:07 AM,,,,,,,v1.1.1,,,fabric-docs,,,,0,,,,,,,"The BYFN docs have a section on using the marbles02 chaincode to demonstrate using CouchDB.  While it reference a location in the fabric repo, it does not actually tell you how to get the chaincode so you can install it with the CLI container.",,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymx3:",,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 2:20 PM;denyeart;[~mastersingh24] From my tests on v1.1.0-preview it was ok due to volume mapping to the chaincodes: https://github.com/hyperledger/fabric-samples/blob/master/first-network/docker-compose-cli.yaml#L73 .;;;","03/Dec/17 10:24 PM;mastersingh24;I guess my description is wrong.  In all version of RTD, the following line is in the docs:

{code:java}
peer chaincode install -n marbles -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/marbles02
{code}

Looks like this is OK for the release branch samples / docs, but does not seem to be the case for master / preview unless I am missing something
;;;","21/Jan/18 8:04 AM;mastersingh24;https://gerrit.hyperledger.org/r/17031;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a developer, I want to be able to implement a read-only chaincode function without having to grant write access to the channel",FAB-6959,23909,,Story,To Do,FAB,Fabric,software,denyeart,,,High,,,mastersingh24,mastersingh24,10/Nov/17 10:15 PM,09/Nov/20 11:28 PM,28/Oct/23 3:01 AM,,,,,,,,Future,,,fabric-peer,,,,2,,,,,,,"In the current implementation, in order to invoke chaincode, a client must also have write access to the channel on which the chaincode is deployed.  This is problematic because even if the chaincode function simply returns data (i.e. is a query), one still needs to call the Invoke function and since Invoke could be a read or a write, as mentioned the client must have write access to the channel.  It would be preferable to be able to require read-only permission in order to access chaincode.  While you can of course provide access control with chaincode, this still would not prevent a client from submitting transactions to the orderer on that channel.

The most common use case is a common channel used to provide reference information where only a limited set of parties should be able to write to the channel with the majority of parties will simply be querying the reference data.",,baohua,denyeart,fabianvarisco,lepar,MariWade,mastersingh24,rhegde,sstone1,vitorduarte,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16146,,,,,,,FAB-14857,FAB-7030,,,,,,,FAB-6816,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwqrk:5iwr4rb0zyzy",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,denyeart,fabianvarisco,lepar,MariWade,mastersingh24,rhegde,sstone1,vitorduarte,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","17/Jan/20 11:22 PM;lepar;Here's a suggestion on how this can be implemented.

We would add an ACL to the QSCC policy as follows:


# ACL policy for qscc's ""GetDataByKey"" function
qscc/GetDataByKey: /Channel/Application/PolicyDefiningOrg
 
Then specify a policy for the organizations to have this permission.
The organization would then use the query method as follows:
 
peer chaincode query -C ""ChannelName"" -n qscc -c '\{""Args"":[""GetDataByKey"", ""KEY""]}'
 ;;;","18/Jan/20 1:39 AM;denyeart;Read-only support is needed beyond just QSCC. I think there should be a Query verb at the same level as Invoke, which only requires channel read priv, that would allow chaincode functions that read/query state, return error if a Put was attempted, and would not build a read-write set for updating ledger, just return chaincode response to client.;;;","18/Jan/20 1:54 AM;lepar;Agreed. How hard would it be to change the chaincode interface to add a ""query"" function? 

This Jira was proposed exactly for that 

https://jira.hyperledger.org/browse/FAB-16146 

But it's in the backlog and I think it should be prioritized for version 1.4 as a minor feature improvement;;;","18/Jan/20 2:50 AM;sstone1;[~denyeart] What is the ACL rule ""peer/Propose"" for? [https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/configtx.yaml#L211]

Can you relax that ACL rule to ""Readers""? Would the transaction then be rejected later on, after endorsement, but before it's written to the ledger as that's still limited to ""Writers""?;;;","18/Jan/20 4:35 AM;baohua;The current permission for peer/Propose is Writers, as both GET and PUT are using the same invoke method.

Agree with [~denyeart] that to add a new query function.

The peer can check whether the call is query, and relax the permission to Readers when checking it during the `ProcessProposal(...)`.;;;","18/Jan/20 5:23 AM;yacovm;I might be missing something here, but - can't we just exclude the user's organization from the channel writers, and override the chaincode ACL for ""propose"" to include that organization? Then you can invoke chaincode but can't send it to the orderer;;;","18/Jan/20 7:21 AM;denyeart;I'm going to have to rescind my response. Yacov's and Simon's comment in the Jira is correct. The Jira stories were opened in 2017 with a pre-fine-grained-ACL mindset. With the fine-grained ACL support (since v1.2), you can now simply exclude the org from the coarse */Channel/Writers* policy so that they can't submit transactions to ordering service:
 [https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/configtx.yaml#L414-L416]

and change *peer/Propose* fine-grained ACL to */Channel/Application/Readers* so that they can invoke chaincode:
 [https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/configtx.yaml#L211]

I've tested and confirmed this works as expected.

It still may be nice to have a Query function that only supports reads and doesn't generate a read-write set, but that is not critical given the channel configuration solution.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE CI test TPS script,FAB-6961,23912,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,11/Nov/17 1:03 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Nov/17 12:06 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,A script to calculate TPS from committed blocks in a peer log.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzymy7:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build Your First Network for CouchDB returns error on peer install command,FAB-6962,23913,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,hhimanshu,hhimanshu,11/Nov/17 1:07 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Nov/17 2:04 AM,,,,,,,,,,fabric-docs,,,,0,,,,,,,"Hello there,

I am new to the community and going through the documentation of [https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html.]

In the section for [Using CouchDB|[https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#using-couchdb],] the page says 
{quote}To use CouchDB instead of the default database (goleveldb), follow the same procedures outlined earlier for generating the artifacts, except when starting the network pass {{docker-compose-couch.yaml}} as well:
{quote}
So, I looked at the {{byfn.sh}}, and tried the following command  
{code:java}
./byfn.sh -m up -s couchdb{code}
I see that everything went on fine, with this command
{code:java}
2017-11-10 16:01:14.540 UTC [main] main -> INFO 008 Exiting.....
===================== Query on PEER3 on channel 'mychannel' is successful =====================

========= All GOOD, BYFN execution completed ===========


_____ _ _ ____
| ____| | \ | | | _ \
| _| | \| | | | | |
| |___ | |\ | | |_| |
|_____| |_| \_| |____/
{code}
 

and all the docker containers are available
{code:java}
➜ first-network git:(master) ✗ docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
4c0c1f4d4e76 dev-peer1.org2.example.com-mycc-1.0-26c2ef32838554aac4f7ad6f100aca865e87959c9a126e86d764c8d01f8346ab ""chaincode -peer.a..."" 31 seconds ago Up 27 seconds dev-peer1.org2.example.com-mycc-1.0
cb41a6af2fc6 dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9 ""chaincode -peer.a..."" 47 seconds ago Up 44 seconds dev-peer0.org1.example.com-mycc-1.0
af7ce39d8781 dev-peer0.org2.example.com-mycc-1.0-15b571b3ce849066b7ec74497da3b27e54e0df1345daff3951b94245ce09c42b ""chaincode -peer.a..."" About a minute ago Up About a minute dev-peer0.org2.example.com-mycc-1.0
906d5f0fede6 hyperledger/fabric-tools ""/bin/bash -c './s..."" About a minute ago Up About a minute cli
01cba83fa749 hyperledger/fabric-peer ""peer node start"" About a minute ago Up About a minute 0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp peer1.org2.example.com
45ad3de1de34 hyperledger/fabric-peer ""peer node start"" About a minute ago Up About a minute 0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp peer0.org2.example.com
e0f260c8a927 hyperledger/fabric-peer ""peer node start"" About a minute ago Up About a minute 0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp peer0.org1.example.com
d9cac2989691 hyperledger/fabric-peer ""peer node start"" About a minute ago Up About a minute 0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp peer1.org1.example.com
d92e3cc2c8f5 hyperledger/fabric-couchdb ""tini -- /docker-e..."" About a minute ago Up About a minute 4369/tcp, 9100/tcp, 0.0.0.0:6984->5984/tcp couchdb1
deb2eda2676d hyperledger/fabric-couchdb ""tini -- /docker-e..."" About a minute ago Up About a minute 4369/tcp, 9100/tcp, 0.0.0.0:5984->5984/tcp couchdb0
ba8d1c993688 hyperledger/fabric-couchdb ""tini -- /docker-e..."" About a minute ago Up About a minute 4369/tcp, 9100/tcp, 0.0.0.0:8984->5984/tcp couchdb3
ae13a4f52c8c hyperledger/fabric-orderer ""orderer"" About a minute ago Up About a minute 0.0.0.0:7050->7050/tcp orderer.example.com
17634ba83b4b hyperledger/fabric-couchdb ""tini -- /docker-e..."" About a minute ago Up About a minute 4369/tcp, 9100/tcp, 0.0.0.0:7984->5984/tcp couchdb2
➜ first-network git:(master) ✗{code}
and my current directory and it's contents are
{code:java}
➜ first-network git:(master) ✗ pwd
/Users/harit/bl/sources/hyperledger/fabric-samples/first-network
➜ first-network git:(master) ✗ ls
README.md byfn.sh crypto-config docker-compose-couch.yaml scripts
base channel-artifacts crypto-config.yaml docker-compose-e2e-template.yaml
bin configtx.yaml docker-compose-cli.yaml docker-compose-e2e.yaml
➜ first-network git:(master) ✗{code}
Next, I made sure that the {{CHANNEL_NAME}} is available
{code:java}
➜ first-network git:(master) ✗ echo $CHANNEL_NAME
mychannel{code}
then, I tried to install the chaincode from my local machine as  
{code:java}
peer chaincode install -n marbles -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/marbles02{code}
but it failed with  
{code:java}
panic: Fatal error when initializing core config : error when reading core config file: Unsupported Config Type """"


goroutine 1 [running]:
main.main()
/w/workspace/fabric-binaries-x86_64/gopath/src/github.com/hyperledger/fabric/peer/main.go:90 +0x78b{code}
Next, I reached out on RocketChat and I was recommended to use {{cli}} container to install chaincode
{quote}@hhimanshu - Probably easiest to use the CLI container. The problem is that the marble02 chaincode is not loaded in the CLI container.
Try running
`{{go get github.com/hyperledger/fabric/examples/chaincode/go/marbles02}}` before doing `{{peer chaincode install ...}}
{quote}
So, I tried the same  
{code:java}
root@906d5f0fede6:/opt/gopath/src/github.com/hyperledger/fabric/peer# pwd
/opt/gopath/src/github.com/hyperledger/fabric/peer
root@906d5f0fede6:/opt/gopath/src/github.com/hyperledger/fabric/peer# go get github.com/hyperledger/fabric/examples/chaincode/go/marbles02
package github.com/hyperledger/fabric/examples/chaincode/go/marbles02: /opt/gopath/src/github.com/hyperledger/fabric exists but /opt/gopath/src/github.com/hyperledger/fabric/.git does not - stale checkout?
root@906d5f0fede6:/opt/gopath/src/github.com/hyperledger/fabric/peer#
{code}
No luck :(  

 

I need help with this task. Thanks",,hhimanshu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/17 1:04 AM;hhimanshu;couchdb_network.log;https://jira.hyperledger.org/secure/attachment/13328/couchdb_network.log",,,,,,,,,,,,,,,,,,,,,,"1|hzymyf:",,,,,,,,,,,,,,,,,,,,,,hhimanshu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/17 9:14 PM;mastersingh24;{code:java}
root@906d5f0fede6:/opt/gopath/src/github.com/hyperledger/fabric/peer# pwd
/opt/gopath/src/github.com/hyperledger/fabric/peer
root@906d5f0fede6:/opt/gopath/src/github.com/hyperledger/fabric/peer# go get github.com/hyperledger/fabric/examples/chaincode/go/marbles02
package github.com/hyperledger/fabric/examples/chaincode/go/marbles02: /opt/gopath/src/github.com/hyperledger/fabric exists but /opt/gopath/src/github.com/hyperledger/fabric/.git does not - stale checkout?
root@906d5f0fede6:/opt/gopath/src/github.com/hyperledger/fabric/peer#
{code}

The above is not actually a real problem.  marbles02 should actually now be in the CLI image;;;","13/Nov/17 1:14 AM;hhimanshu;Thanks, [~mastersingh24] for your comment. based on your statement ""actually now be in the CLI image"", I refreshed my github repo and re-performed all the steps again.  

 
{code:java}
➜  first-network git:(master) ✗ git pull origin master
From https://github.com/hyperledger/fabric-samples
 * branch            master     -> FETCH_HEAD
Already up-to-date.
➜  first-network git:(master) ✗
{code}
 
{code:java}
➜  first-network git:(master) ✗ ./byfn.sh -m generate
Generating certs and genesis block for with channel 'mychannel' and CLI timeout of '10000' seconds and CLI delay of '3' seconds
Continue (y/n)? y
proceeding ...
/Users/harit/bl/sources/hyperledger/bin/cryptogen

##########################################################
##### Generate certificates using cryptogen tool #########
##########################################################
org1.example.com
org2.example.com

/Users/harit/bl/sources/hyperledger/bin/configtxgen
##########################################################
#########  Generating Orderer Genesis block ##############
##########################################################
2017-11-13 04:50:47.848 NZDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-11-13 04:50:47.855 NZDT [common/tools/configtxgen] doOutputBlock -> INFO 002 Generating genesis block
2017-11-13 04:50:47.856 NZDT [common/tools/configtxgen] doOutputBlock -> INFO 003 Writing genesis block

#################################################################
### Generating channel configuration transaction 'channel.tx' ###
#################################################################
2017-11-13 04:50:47.871 NZDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-11-13 04:50:47.875 NZDT [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
2017-11-13 04:50:47.876 NZDT [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Writing new channel tx

#################################################################
#######    Generating anchor peer update for Org1MSP   ##########
#################################################################
2017-11-13 04:50:47.889 NZDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-11-13 04:50:47.894 NZDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2017-11-13 04:50:47.894 NZDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update

#################################################################
#######    Generating anchor peer update for Org2MSP   ##########
#################################################################
2017-11-13 04:50:47.908 NZDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-11-13 04:50:47.914 NZDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2017-11-13 04:50:47.914 NZDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
{code}
 
{code:java}
➜  first-network git:(master) ✗ ./byfn.sh -m up -s couchdb > ~/Downloads/couchdb_network.log
Continue (y/n)? y
{code}
see log file attached.  
{code:java}
➜  first-network git:(master) ✗ docker ps
CONTAINER ID        IMAGE                                                                                                  COMMAND                  CREATED              STATUS              PORTS                                              NAMES
0c1b05653416        dev-peer1.org2.example.com-mycc-1.0-26c2ef32838554aac4f7ad6f100aca865e87959c9a126e86d764c8d01f8346ab   ""chaincode -peer.a...""   27 seconds ago       Up 26 seconds                                                          dev-peer1.org2.example.com-mycc-1.0
0b49cbac3032        dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9   ""chaincode -peer.a...""   43 seconds ago       Up 41 seconds                                                          dev-peer0.org1.example.com-mycc-1.0
f33e2ea9cf0b        dev-peer0.org2.example.com-mycc-1.0-15b571b3ce849066b7ec74497da3b27e54e0df1345daff3951b94245ce09c42b   ""chaincode -peer.a...""   58 seconds ago       Up 56 seconds                                                          dev-peer0.org2.example.com-mycc-1.0
1065ffdcf942        hyperledger/fabric-tools                                                                               ""/bin/bash -c './s...""   About a minute ago   Up About a minute                                                      cli
9dadd735eb3a        hyperledger/fabric-peer                                                                                ""peer node start""        About a minute ago   Up About a minute   0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp     peer0.org2.example.com
eaa4c5549690        hyperledger/fabric-peer                                                                                ""peer node start""        About a minute ago   Up About a minute   0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp     peer1.org1.example.com
23c1b62f96e9        hyperledger/fabric-peer                                                                                ""peer node start""        About a minute ago   Up About a minute   0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp   peer1.org2.example.com
b2be48b39dd4        hyperledger/fabric-peer                                                                                ""peer node start""        About a minute ago   Up About a minute   0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp     peer0.org1.example.com
151b6acca22a        hyperledger/fabric-couchdb                                                                             ""tini -- /docker-e...""   About a minute ago   Up About a minute   4369/tcp, 9100/tcp, 0.0.0.0:6984->5984/tcp         couchdb1
7ec644d73014        hyperledger/fabric-couchdb                                                                             ""tini -- /docker-e...""   About a minute ago   Up About a minute   4369/tcp, 9100/tcp, 0.0.0.0:7984->5984/tcp         couchdb2
98703920adfd        hyperledger/fabric-couchdb                                                                             ""tini -- /docker-e...""   About a minute ago   Up About a minute   4369/tcp, 9100/tcp, 0.0.0.0:8984->5984/tcp         couchdb3
ca2debd16466        hyperledger/fabric-couchdb                                                                             ""tini -- /docker-e...""   About a minute ago   Up About a minute   4369/tcp, 9100/tcp, 0.0.0.0:5984->5984/tcp         couchdb0
12bf8fbf3c75        hyperledger/fabric-orderer                                                                             ""orderer""                About a minute ago   Up About a minute   0.0.0.0:7050->7050/tcp                             orderer.example.com
➜  first-network git:(master) ✗
{code}
 
{code:java}
➜  first-network git:(master) ✗ docker exec -it cli bash
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer#
{code}
 

Now, I tried running the command again based on the docs [https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#using-couchdb.]  
 * 
{quote}Install and instantiate the chaincode on {{peer0.org1.example.com}}:
{quote}

{quote} # be sure to modify the $CHANNEL_NAME variable accordingly for the instantiate command peer chaincode install -n marbles -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/marbles02
  
 peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n marbles -v 1.0 -c '\{""Args"":[""init""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')""{quote}
Pay close attention to the first command
{code:java}
-p github.com/hyperledger/fabric/examples/chaincode/go/marbles02{code}
But this path does not exist in the {{cli}}, I tried locating it  
{code:java}
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer# find / -type d -name ""go""
/opt/gopath/src/github.com/chaincode/chaincode_example02/go
/opt/gopath/src/github.com/chaincode/fabcar/go
/opt/gopath/src/github.com/chaincode/marbles02/go
/opt/go
/opt/go/src/go
/opt/go/src/cmd/go
/opt/go/misc/tour/static/lib/codemirror/mode/go
/opt/go/pkg/linux_amd64/go
/opt/go/pkg/linux_amd64/cmd/go
/opt/go/pkg/linux_amd64_race/go
{code}
and realized that the path in the documentation is not correct anymore (maybe that was the path in previous releases). The correct path therefore, is 
{code:java}
-p github.com/chaincode/chaincode_example02/go
{code}
and I verified that as well  
{code:java}
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode install -n marbles -v 1.0 -p github.com/chaincode/chaincode_example02/go
2017-11-12 15:58:45.093 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-11-12 15:58:45.093 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-11-12 15:58:45.093 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2017-11-12 15:58:45.093 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2017-11-12 15:58:45.093 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode disabled
2017-11-12 15:58:45.130 UTC [golang-platform] getCodeFromFS -> DEBU 006 getCodeFromFS github.com/chaincode/chaincode_example02/go
2017-11-12 15:58:45.251 UTC [golang-platform] func1 -> DEBU 007 Discarding GOROOT package fmt
2017-11-12 15:58:45.251 UTC [golang-platform] func1 -> DEBU 008 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2017-11-12 15:58:45.251 UTC [golang-platform] func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/protos/peer
2017-11-12 15:58:45.251 UTC [golang-platform] func1 -> DEBU 00a Discarding GOROOT package strconv
2017-11-12 15:58:45.253 UTC [golang-platform] GetDeploymentPayload -> DEBU 00b done
2017-11-12 15:58:45.258 UTC [msp/identity] Sign -> DEBU 00c Sign: plaintext: 0A9F070A5B08031A0B08B5DFA1D00510...F619FF0E0000FFFFACD4020D001C0000
2017-11-12 15:58:45.258 UTC [msp/identity] Sign -> DEBU 00d Sign: digest: 2C97AD52D2F2365EC5DBE37698C1967C914E59720B874A833A32D10A4A963163
2017-11-12 15:58:45.261 UTC [chaincodeCmd] install -> DEBU 00e Installed remotely response:<status:200 payload:""OK"" >
2017-11-12 15:58:45.262 UTC [main] main -> INFO 00f Exiting.....
{code}
 

Now, on to the second problem as per the documentation, we need to run the following command
{code:java}
peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n marbles -v 1.0 -c '{""Args"":[""init""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')""
{code}
When I run this, I get error  
{code:java}
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordere
rOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n marbles -v 1.0 -c '{""Args"":[""init""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')""
2017-11-12 16:10:46.002 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-11-12 16:10:46.003 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
Error: Must supply value for chaincode name parameter.
Usage:
peer chaincode instantiate [flags]

Flags:
-C, --channelID string The channel on which this command should be executed (default ""testchainid"")
-c, --ctor string Constructor message for the chaincode in JSON format (default ""{}"")
-E, --escc string The name of the endorsement system chaincode to be used for this chaincode
-l, --lang string Language the chaincode is written in (default ""golang"")
-n, --name string Name of the chaincode
-P, --policy string The endorsement policy associated to this chaincode
-v, --version string Version of the chaincode specified in install/instantiate/upgrade commands
-V, --vscc string The name of the verification system chaincode to be used for this chaincode

Global Flags:
--cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
--logging-level string Default logging level and overrides, see core.yaml for full syntax
-o, --orderer string Ordering service endpoint
--test.coverprofile string Done (default ""coverage.cov"")
--tls Use TLS when communicating with the orderer endpoint
--transient string Transient map of arguments in JSON encoding
{code}
 

I looked into the {{-n}} flag, which is already set to {{marbles}}.

Now, I need help with two things
 * Fix the second issue related to following command

 
{code:java}
peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordere
rOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n marbles -v 1.0 -c '{""Args"":[""init""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')""
{code}
 * Do you agree that the documentation for command 01 needs to be updated with correct path value for parameter {{-p}}

 

Please let me know. Thanks;;;","13/Nov/17 1:27 AM;hhimanshu;Also, I do see that {{marbles}} chaincode is installed
{code:java}
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode list --installed
2017-11-12 16:25:41.742 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-11-12 16:25:41.742 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-11-12 16:25:41.742 UTC [msp/identity] Sign -> DEBU 003 Sign: plaintext: 0AA0070A5C08031A0C0885ECA1D00510...74616C6C6564636861696E636F646573
2017-11-12 16:25:41.742 UTC [msp/identity] Sign -> DEBU 004 Sign: digest: D8770A9D9D4B8B5A17F0161A165708C2210057C48650D061311F33E1F72F2173
Get installed chaincodes on peer:
name:""marbles"" version:""1.0"" path:""github.com/chaincode/chaincode_example02/go""
name:""mycc"" version:""1.0"" path:""github.com/chaincode/chaincode_example02/go/""
2017-11-12 16:25:41.746 UTC [main] main -> INFO 005 Exiting.....
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer#{code}
But, not instantiated
{code:java}
root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode list --instantiated
2017-11-12 16:26:25.673 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-11-12 16:26:25.673 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-11-12 16:26:25.673 UTC [msp/identity] Sign -> DEBU 003 Sign: plaintext: 0AAD070A6908031A0C08B1ECA1D00510...0F0A0D676574636861696E636F646573
2017-11-12 16:26:25.673 UTC [msp/identity] Sign -> DEBU 004 Sign: digest: CC21104863B6F688312497E93E019A689C8D3F576AAF0D5F9493E146D616E72D
Error: Error endorsing chaincode: rpc error: code = Unknown desc = Failed to deserialize creator identity, err MSP Org1MSP is unknown
Usage:
peer chaincode list [flags]

Flags:
-C, --channelID string The channel on which this command should be executed (default ""testchainid"")
--installed Get the installed chaincodes on a peer
--instantiated Get the instantiated chaincodes on a channel

Global Flags:
--cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
--logging-level string Default logging level and overrides, see core.yaml for full syntax
-o, --orderer string Ordering service endpoint
--test.coverprofile string Done (default ""coverage.cov"")
--tls Use TLS when communicating with the orderer endpoint
--transient string Transient map of arguments in JSON encoding
-v, --version Display current version of fabric peer server

root@1065ffdcf942:/opt/gopath/src/github.com/hyperledger/fabric/peer#


{code}
This may be irrelevant but I am new to the project and wanted to share my approach to resolving/identifying issues;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - add s390x node6 verify and merge job in fabric-sdk-node,FAB-6965,23917,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Nov/17 6:36 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,14/Nov/17 10:31 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,Add s390x node6 verify and merge job in fabric-sdk-node CI jobs. these jobs should trigger after a rebuild-node6-s390x build comment phrase.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymz3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/17 10:31 PM;rameshthoomu;fabric-sdk-node 6 verify and merge job has been added to the production CI jobs. On every patch set submit to fabric-sdk-node repository, CI triggers

fabric-sdk-node8-verify-x86_64

fabric-sdk-node6-verify-x86_64

fabric-sdk-node8-verify-s390x

fabric-sdk-node6-verify-s390x;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add depth to a few shimAPI tests,FAB-6966,23918,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,scottz,scottz,11/Nov/17 6:47 AM,30/Jul/19 11:41 AM,28/Oct/23 3:01 AM,30/Jul/19 11:41 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,,,,,,,"In FAB-5791, we added shimAPI tests. A few function calls were very basic, testing only that they could be invoked. For those few, we need more examples and documentation to explain their purpose. Another JIRA will be created for the developer to do that. But this JIRA is for enhancing the FAB-5791 test in chaincodes.feature to be more intelligent when using a few of the APIs and verifying results.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6979,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3770,,,,,,,,,"1|hzymzb:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance fabric-samples/fabric-ca to demonstrate how to update fabric's channel config with a CRL,FAB-6967,23919,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,aambati,aambati,11/Nov/17 11:24 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Nov/17 6:31 AM,v1.1.0,,,,,,v1.1.1,,,fabric-samples,,,,0,,,,,,,"The fabric-samples/fabric-ca sample should be enhanced to demonstrate how to:
1) Revoke a user
2) Retrieve a CRL from the fabric-ca-server which includes this newly revoked user
3) Update a channel configuration with this newly retrieved CRL
4) Demonstrate that the revoked user from step #1 can no longer submit transactions on the updated channel from #3",,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymzj:",,,,,,,,,,,,,,,,,,,,,,aambati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Nov/17 11:30 AM;aambati;https://gerrit.hyperledger.org/r/c/13687/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sampleconfig certificates are expired,FAB-6969,23921,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,12/Nov/17 10:15 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 5:28 PM,,,,,,,v1.0.5,v1.1.1,,fabric-peer,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzymzz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Nov/17 11:02 PM;mastersingh24;https://gerrit.hyperledger.org/r/15411 (master)
https://gerrit.hyperledger.org/r/15413 (release);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make MSP fail the node if signing cert has expired,FAB-6970,23922,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,blw,yacovm,yacovm,13/Nov/17 2:26 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,23/Dec/17 7:25 AM,v1.1.0,,,,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,,"FAB-6969 made a peer fail to some user when it attempted to run chaincode in dev-mode.
Below is his/her stack trace (complained in rocket chat)
{code}
2017-11-12 08:45:02.837 UTC [msp] getCertificationChain -> DEBU 04b MSP DEFAULT getting certification chain
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xb07129]

goroutine 49 [running]:
github.com/hyperledger/fabric/gossip/gossip.NewGossipService.func1(0xc420352be0, 0x20, 0x20, 0xc4202e6400, 0x3bc, 0x400)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:93 +0x79
github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).delete(0xc42031d440, 0xc420352be0, 0x20, 0x20, 0xc4202e6400, 0x3bc, 0x400)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:213 +0xbb
github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Put.func1()
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:134 +0x60
created by time.goFunc
        /opt/go/src/time/sleep.go:170 +0x44
{code}

Now, the reason for the null pointer panic is because gossip didn't expect the given signing cert to be expired, and triggered the cleanup callback which has a null reference at that time because it used the identity store (which failed to initialize... )

Now, I think it would make sense to have the local MSP verify whether it has expired, and if so - to return an error.

{code}
// LoadLocalMsp loads the local MSP from the specified directory
func LoadLocalMsp(dir string, bccspConfig *factory.FactoryOpts, mspID string) error {
	if mspID == """" {
		return errors.New(""The local MSP must have an ID"")
	}

	conf, err := msp.GetLocalMspConfig(dir, bccspConfig, mspID)
	if err != nil {
		return err
	}

	return GetLocalMSP().Setup(conf)
}
{code}

Is used both by the peer and by the orderer. Maybe we should just add a check for expiration?
Something like:
{code}
func LoadLocalMsp(dir string, bccspConfig *factory.FactoryOpts, mspID string) error {
	if mspID == """" {
		return errors.New(""the local MSP must have an ID"")
	}

	conf, err := msp.GetLocalMspConfig(dir, bccspConfig, mspID)
	if err != nil {
		return err
	}

	localMSP := GetLocalMSP()
	err =  localMSP.Setup(conf)
	if err != nil {
		return err
	}
	if sId, err := localMSP.GetDefaultSigningIdentity(); err == nil {
		expirationTime := sId.ExpiresAt()
		now := time.Now()
		if expirationTime.After(now) {
			mspLogger.Debug(""Signing identity expires at"", expirationTime)
		} else {
			return errors.Errorf(""signing identity expired %v ago"", now.Sub(expirationTime))
		}
	} else {
		return errors.Wrap(err, ""failed obtaining signing identity"")
	}
	return nil
}
{code}

{code}
2017-11-12 19:23:56.431 IST [main] main -> ERRO 001 Cannot run peer because error when setting up MSP from directory /home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/sampleconfig/msp: signing identity expired 24h16m56.431743179s ago

yacovm@yacoVM ~/OBC/shared/gopath/src/github.com/hyperledger/fabric (master) $ ./build/bin/orderer 
panic: Failed to initialize local MSP: signing identity expired 24h21m33.896200318s ago

{code}

[~mastersingh24] [~adc] [~ellaki] [~ales]",,angelo.decaro,blw,gzhushun,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6977,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyn07:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,blw,gzhushun,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Nov/17 10:41 AM;blw;Another approach I have been testing out would be to set a minimum TTL before deleting an expired identity; through experiment, I've found that a 1 second minimum would be sufficient. This approach has the added benefit of letting the CertStore initialization complete without a calling the callback prematurely (causing the null pointer panic). When the callback is called, the cleanup will complete as designed.

This would require the additional step of blocking gossip until the minimum TTL has passed. This is because if an expired cert is provided, functionality should not be allowed to continue for any length of time.

Does this seem like a good approach [~yacovm]?;;;","30/Nov/17 4:20 PM;yacovm;No, I don't think we need to over-engineer things :)

We should just check if the certificate has expired upon startup. Certificates are issued for months or years so the probability you start with a non expired certificate and then it expires before gossip is initialized is negligible. ;;;","04/Dec/17 3:14 AM;blw;https://gerrit.hyperledger.org/r/#/c/15887/;;;","19/Dec/17 6:47 AM;yacovm;[~adc] [~angelo.decaro] 

Ben here uploaded a change set above and I asked him for a unit test.

However, it seems it's not a trivial thing to do - The bccsp factory is initialized in the TestMain of deserializer_test, and as a result - the sync.Once in the factory.go of bccsp/factory sets the key store path to sampleconfig/msp/keystore and now we can't use another keystore.

Now, if Ben changes the production code of his change set to change the code in the msp package instead of the mgmt package, all the OU and revocations unit tests fail, because their certificates are all expired.... 

Can you help us out? ;;;","23/Dec/17 4:40 AM;blw;[~adc] [~yacovm]

I was able to regenerate all the unit test certs, so no action needed from your end.;;;","05/Jan/18 5:26 PM;angelo.decaro;[~blw], [~yacovm], What happens if the default signing identity expires when the peer is already running? Would it cause an issue?;;;","05/Jan/18 5:30 PM;yacovm;yes.;;;","05/Jan/18 6:21 PM;angelo.decaro;Do we need another patch then?;;;","05/Jan/18 7:02 PM;yacovm;We could make a patch that makes the peer commit suicide if its signing identity is expired. 

[~mastersingh24] what do you think?;;;","06/Jan/18 12:32 AM;blw;[~yacovm] [~adc]

I think if the identity expires after the peer has started, it will cause the expired identity to be deleted. According to lines 129-136 of gossip/identity/identity.go, a callback is defined to wipe out the identity 1 millisecond after it expires:
{code:java}
var expirationTimer *time.Timer
if !expirationDate.IsZero() {
	// Identity would be wiped out a millisecond after its expiration date
	timeToLive := expirationDate.Add(time.Millisecond).Sub(time.Now())
	expirationTimer = time.AfterFunc(timeToLive, func() {
		is.delete(pkiID, identity)
	})
}
{code}
 ;;;","08/Jan/18 5:13 PM;angelo.decaro;[~yacovm], [~blw], [~elli-androulaki], [~ales]

At the current stage, identities never expire, they can be revoked though. I guess then, the peer should shut down only if the identity is revoked. We should not check expiration.;;;","08/Jan/18 5:19 PM;yacovm;Well I think a peer needs to shut down if its identity has expired, so its administrator would be alerted to replace its identity. 

The fact that the MSP has no sense of time doesn't mean time doesn't flow;;;","08/Jan/18 5:43 PM;angelo.decaro;If the identity is just expired, it should not be an issue in the current setting. Only revocation should trigger a failure.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer sign certs expired but new block signature continues without warning or error,FAB-6973,23926,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,meinvzou,meinvzou,13/Nov/17 5:34 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,03/Jan/18 11:51 PM,,,,,,,,,,fabric-crypto,,,,0,,,,,,,"The fabric/sampleconfig/msp/signcerts/peer.pem expired on 11/11,
Today, I use vscode to debug the orderer and fabric/orderer/sample_clients/broadcast_timestamp to test the block communiction, new block cuts as normal without any error, althogh the sign certificate was expired.
Once a certificate expired, it shoud be no sign made by it?",,denyeart,meinvzou,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn13:",,,,,,,,,,,,,,,,,,,,,,denyeart,meinvzou,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/17 5:41 PM;yacovm;Worry not, we are fixing the issue https://jira.hyperledger.org/browse/FAB-6969 ;;;","27/Nov/17 2:24 PM;denyeart;[~elli-androulaki] I believe there is a plan for handling expirations gracefully, as well as an existing Jira item.  Assuming that is true, please mark this one as duplicate/Done and link to the Jira work item where expirations will be handled.;;;","03/Jan/18 11:51 PM;yacovm;This was fixed in https://gerrit.hyperledger.org/r/#/c/15887/ (thanks [~blw]) ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decouple peer organizational TLS certificate from chaincode shim,FAB-6974,23927,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,13/Nov/17 6:21 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,04/Dec/17 12:45 AM,,,,,,,,,,fabric-peer,,,,6,ARCH,,,,,,"Currently, when the peer runs with TLS enabled, the authentication works as follows:
 * The chaincode service running on the peer uses the peer's organizational TLS certificate, signed by the peer's root TLS CA.
 * The peer generates a self signed CA certificate upon startup
 * It injects the chaincode shim container with a TLS client certificate that is signed by the CA certificate it generated.
 * In order for the chaincode shim to authenticate the peer's TLS certificate, when the chaincode image is compiled (and only then), the peer injects it with the root CA certificate it has in its file system, which is the root TLS CA that signed its own TLS server certificate.

 

There are a few problems with this setup:
 # It is asymmetrical - we use different CAs - an organizational one to authenticate in 1 direction, and a self generated one to authenticate in the other direction.
 # When the peer launches the chaincode shim, it passes it via a commandline argument, the endpoint of the peer it should connect to, and this endpoint is derived using the values from peer.chaincodeListenAddress or of missing, from a value computed from the peer's endpoint which is set via peer.endpoint or if missing, via auto-detection of the container's ip address.
 In many cases, customers such as in FAB-6937 and many others in rocket-chat / stackoverflow don't configure their YAML files properly and this results in the peer's address passed to the chaincode container being an ip address instead of the peer's hostname. When this happens, the chaincode shim refuses to connect to the peer because the certificate of the peer has only the DNS name of the peer, and doesn't container the IP subject alternative name in the certificate.
 # Now, an immediate limitation that stems from this, is that a customer can actually never use just ip addresses for its peer when running with TLS, unless it specifically creates custom TLS certificates with the ip address.
 # Another related problem is that when the customer replaces root CA certificates, it now needs to manually remove all the chaincode container images - a management overhead.

 * I think we should strive to build a system that reduces configuration mistakes as much as possible when we can.
 * I also think that it's more secure to have the chaincode shim connect to the peer using credentials that are kept in the peer's memory and are made by it, and not such that the organizational CA can issue - as the chaincode belongs to the peer and not to the organization.

 

*There are 2 solutions, the first one solves just the mis-configuration problem, and the 2nd solves all problems.*

 

To solve (only) the mis-configuration problem we can do something simple:
 * Include in the chaincode shim's image, the TLS certificate (without the private key, of course) of the peer, and have the chaincode shim look into the certificate to identify what DNS or IP SANs it has, and use this to connect to the peer when running with TLS. *Note: This change involves changing the chaincode shim's code in all platforms*

 

 

To solve all the problems I listed here I propose the following:
 # Have the peer's self signed CA certificate that is generated upon startup, generate a TLS server certificate for the peer (make a TLS certificate and sign it) and use it only for the chaincode listener (which is, starting from v1.1 on its own port...).
 The certificate will contain either an IP or DNS subject alternative name, according to what the peer is configured (the same endpoint passed to the chaincode shim)
 # Upon chaincode container startup, inject the CA certificate along with the shim's client certificate (which is currently injected) and then the shim will use this certificate to authenticate the peer instead of the existing root TLS CA certificate of the peer's organization.

 * This change is only in the peer side, and has no effect on any platform chaincode code such as node CC or java CC, etc.
 * If it sounds intrusive and complex, it actually isn't so, as we already have the infrastucture to support it, and it is actually pretty small.
 Here is an example POC [https://gerrit.hyperledger.org/r/#/c/15427/] that includes everything besides removing the part that bakes the organizational root TLS CA cert into the chaincode image (which won't be needed)

Opinions?

[~mastersingh24] [~C0rWin] [~muralisr] [~ellaki] [~ales] [~adc] [~jyellick] [~jimthematrix]",,C0rWin,ChristopherFerris,jeffgarratt,mastersingh24,muralisr,nnao,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyn1b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,ChristopherFerris,jeffgarratt,mastersingh24,muralisr,nnao,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Nov/17 10:22 AM;Clayton Sims;It seems like multiple customers have encountered this - if this is small like yacov says it seems we should consider as part of serviceability for 1.1

 ;;;","21/Nov/17 5:38 PM;mastersingh24;[~yacovm]   I think this change makes sense and will go a long way in terms of consumability.  We had to jump through a few hurdles just to make sure the current setup will work with mutual TLS - so this should definitely help in that respect.

I think that we should still encourage the use of DNS SANs rather than IP SANs especially given the fact that we highly recommend that people use Docker when running their peers.  Of course the nice thing here is that we can expose the chaincode peer endpoint on localhost which will greatly simplify things as now the chaincode containers do not need to be on the same Docker network as the peer container(s).

I also like this because frankly we should separate the chaincode endpoint config entirely from the endorser and event endpoints.  And given that chaincode server is only for peer<->chaincode communication, having the peer fully control it makes sense and greatly reduces the possible configuration errors.

Perhaps we can even move all of our examples to use localhost / 127.0.0.1 for the chaincode endpoint?;;;","21/Nov/17 5:42 PM;mastersingh24;TL;DR  -  I support doing this for v1.1;;;","21/Nov/17 10:45 PM;yacovm;{quote} 

I think that we should still encourage the use of DNS SANs rather than IP SANs especially given the fact that we highly recommend that people use Docker when running their peers.  Of course the nice thing here is that we can expose the chaincode peer endpoint on localhost which will greatly simplify things as now the chaincode containers do not need to be on the same Docker network as the peer container(s).
{quote}
 

So I think that since the endpoint that the peer sends to the shim is overriden via an environment variable, if I just make the SAN to be the endpoint that the peer sends to the chaincode shim, it will support localhost natively without doing anything, and the samples could just expose 7052 and also override that environment variable.;;;","22/Nov/17 12:02 AM;ChristopherFerris;I added review-needed tag so please vote if you agree this should be in 1.1;;;","22/Nov/17 4:32 AM;muralisr;[~yacovm] I think this is a good thing to do but not sure if [https://gerrit.hyperledger.org/r/#/c/15427/]  is doing the right thing (of course, I could be wrong / misreading something). 

Currently things works if we use the same hostname (e.g., *peer0.example.com*) everywhere. We want to cover the general case where the chaincode system is on a different network.

 

Let's get this behind us first
{quote}So I think that since the endpoint that the peer sends to the shim is overriden via an environment variable.
{quote}
I think you are talking about CORE_PEER_ADDRESS as the overriding env var on the chaincode side ? In the following
{quote}CORE_CHAINCODE_ID_NAME=mycc:0 CORE_CHAINCODE_LOGGING_LEVEL=debug CORE_PEER_ADDRESS=*myorg.peer.com*:7052 ./chaincode_example02 --peer.address=*myorg.chaincodelistener.com:*7052
{quote}
The passed *--peer.address=myorg.chaincodelistener.com:7052* will override CORE_PEER_ADDRESS. ie, CORE_PEER_ADDRESS will NOT override the passed argument to the CC. (As an aside, I think we should NOT use CORE_PEER_ADDRESS on the chaincode side at all but use the passed address but don't want to digress into this.)

Now, as far as I could tell from the CR, the chaincode listener will listen on *myorg.chaincodelistener.com:7052* with *myorg.peer.com* in the SAN and the chaincode will try to connect to *myorg.chaincodelistener.com:7052*. True ? Will that work ?

Bottom line, don't we want both *myorg.chaincodelistener.com* and *myorg.peer.com* in the SAN ?;;;","22/Nov/17 5:08 AM;yacovm;No, I am not talking about peer.address.

I am talking about [https://gerrit.hyperledger.org/r/#/c/15217/10/sampleconfig/core.yaml@86]  or the listenAddress.
And the truth is that it really doesn't matter *HOW* it is computed for my idea to work, what matters is that there is *some* string that the peer passes to the chaincode shim, and this string will be used as a SAN for the TLS certificate, when the peer starts up.

 
{quote}Bottom line, don't we want both *myorg.chaincodelistener.com* and *myorg.peer.com* in the SAN ?
{quote}
I don't see why we should have both if only 1 string is passed to the chaincode shim.

 ;;;","22/Nov/17 5:34 AM;muralisr;looking at [ttps://gerrit.hyperledger.org/r/#/c/15427/|https://gerrit.hyperledger.org/r/#/c/15427/] 

 
{code:java}
func createChaincodeServer(ca accesscontrol.CA, peerHostname string, endpoint string) (comm.GRPCServer, ccEndpointFunc) {
 cclistenAddress := viper.GetString(chaincodeListenAddrKey)
 if cclistenAddress == """" {
 cclistenAddress = fmt.Sprintf(""%s:%d"", peerHostname, defaultChaincodePort)
 logger.Warningf(""%s is not set, using %s"", chaincodeListenAddrKey, cclistenAddress)
 viper.Set(chaincodeListenAddrKey, cclistenAddress)
 }
var srv comm.GRPCServer
 var ccEpFunc ccEndpointFunc
config := comm.SecureServerConfig{}
 if viper.GetBool(""peer.tls.enabled"") {
 host, _, err := net.SplitHostPort(endpoint)
 if err != nil {
 panic(err)
 }
 serverCert, key, err := ca.NewServerCertKeyPair(host)
 if err != nil {
 panic(err)
 }
 config.RequireClientCert = true
 config.UseTLS = true
 config.ClientRootCAs = [][]byte{ca.CertBytes()}
 config.ServerCertificate = serverCert
 config.ServerKey = key
 config.ServerRootCAs = nil
 }
{code}
 
The chaincode will be listening on *cclistenAddress* (say, myorg.chaincode.com) while you are adding *host* (say, myorg.peer.com) to the SAN :
bq. serverCert, key, err := ca.NewServerCertKeyPair(host)

Is that what we want ?;;;","22/Nov/17 6:08 AM;yacovm;So, the chaincode service will be listening on some address. It could be the ccListenAddress, but it could be i.e the peer.address if the former is missing, etc.

But - this isn't really relevant here, as I don't aim to change the way the listen address, or the address that is passed to the shim is calculated. (I might move the code around or even refactor it but the calculation logic will not change).

What I aim my change to do, is just to have the peer's TLS cert be generated by the peer, and have the SAN to be the host of the endpoint that is passed to the chaincode shim.;;;","22/Nov/17 6:22 AM;muralisr;So basically you are saying the CR will change but in the end will do something like this

{code:java}

ccaddress := computeCCAddress(peeraddressProperty, listenaddressProperty,..)
...
serverCert, key, err := ca.NewServerCertKeyPair(ccaddress)
...
startChaincodeListener(ccaddress, serverCert, key,...) 
...
{code}

 yes ?;;;","22/Nov/17 6:30 AM;yacovm;yes, and that the ccaddress is the string that is passed to the chaincode shim to connect to the peer.;;;","22/Nov/17 6:32 AM;muralisr;Perfect, thanks [~yacovm] ... I went literally by the CR, but it was worth it (for me at least :-)). 

+1ed;;;","22/Nov/17 6:49 AM;yacovm;The needed number of votes is still 5, right? If so - hereby removing the review-needed tag.;;;","22/Nov/17 12:28 PM;jimthematrix;I also agree this is a good improvement and worth making in the v1.1 timeframe.

though I didn't quite understand the comment from [~mastersingh24]:

bq. now the chaincode containers do not need to be on the same Docker network as the peer container(s)

Is that because the peer address is being discovered from the CA cert's SANs field? but isn't that derived from the peer's endpoint address when that self-signed cert is generated, which was originally passed to the chaincode container via --peer.address? What changed to allow the chiancode containers to not have to run on the same docker network as the peer?;;;","29/Nov/17 9:40 PM;yacovm;It's [ready for review|https://gerrit.hyperledger.org/r/#/c/15427/] and can be merged after the [change set below it|https://gerrit.hyperledger.org/r/#/c/15801/] is merged. 

[~jimthematrix]
{quote}  Is that because the peer address is being discovered from the CA cert's SANs field? but isn't that derived from the peer's endpoint address when that self-signed cert is generated, which was originally passed to the chaincode container via --peer.address? What changed to allow the chiancode containers to not have to run on the same docker network as the peer?{quote}

That's simply because the net.Listeners are not the same, but different instances, thus can be bound to different network interfaces.
;;;","05/Dec/17 12:29 AM;jeffgarratt;This changes the contract between the person configuring the peer.  I do NOT disagree with it.  I just want to highlight the possible impact for administrators.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to create channel in Hyperledger fabric using custom crypto graphic material,FAB-6975,23928,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Katiyman,Katiyman,13/Nov/17 10:01 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/May/18 4:18 AM,,,,,,,Unverifiable,,,fabric-orderer,,,,0,,,,,,,"I am following the below link to run the first network sample using the custom crypto graphic material.

[First Network with custom cryptographic material|https://www.ibm.com/developerworks/cloud/library/cl-build-blockchain-network-with-custom-cryptographic-material-from-your-certificate-authority/index.html]

Post generation of certificates from the Third Party CA. i have places all the certificates in the required dir structure. Following other steps now when i start the docker containers they come up. but when i try to create channell i get below error

{{Error: got unexpected status: BAD_REQUEST -- Error authorizing update: Error validating DeltaSet: Policy for [Groups] /Channel/Application not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining}}

when i check the docker logs for the orderer container i find

{{DEBU 29f Checking if identity satisfies ADMIN role for Org1MSP 2017-11-13 07:21:36.533 UTC [cauthdsl] func2 -> DEBU 2a0 0xc420111280 identity 0 does not satisfy principal: **This identity is not an admin** 2017-11-13 07:21:36.533 UTC [cauthdsl] func2 -> DEBU 2a1 0xc420111280 principal evaluation fails 2017-11-13 07:21:36.533 UTC [cauthdsl] func1 -> DEBU 2a2 0xc420111280 gate 1510557696533528831 evaluation fails 2017-11-13 07:21:36.533 UTC [policies] Evaluate -> DEBU 2a3 Signature set did not satisfy policy /Channel/Application/Org1MSP/Admins 2017-11-13 07:21:36.533 UTC [policies] Evaluate -> DEBU 2a4 == Done Evaluating *cauthdsl.policy Policy /Channel/Application/Org1MSP/Admins 2017-11-13 07:21:36.533 UTC [policies] Evaluate -> DEBU 2a5 == Evaluating *cauthdsl.policy Policy /Channel/Application/Org2MSP/Admins == 2017-11-13 07:21:36.533 UTC [cauthdsl] func1 -> DEBU 2a6 0xc420111290 gate 1510557696533664185 evaluation starts 2017-11-13 07:21:36.533 UTC [cauthdsl] func2 -> DEBU 2a7 0xc420111290 signed by 0 principal evaluation starts (used [false])}}

 

 

So I think identity might not be in the admin list, but when I go and check the below paths i find they have same admin cert

/crypto-config/peerOrganizations/org1.aexp.com/users/Admin@org1.aexp.com/msp/admincerts

and

{{crypto-config/peerOrganizations/org1.aexp.com/msp/admincerts }}

If i am supposed to make the identity as admin what steps do i need to follow.

Kindly suggest TIA","[^crypto-config.zip]Ubuntu 16.04 
 HLF v1.0
 [^LogsAndCryptoConfig.zip]",bkvellanki,jyellick,Katiyman,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/17 9:59 PM;Katiyman;LogsAndCryptoConfig.zip;https://jira.hyperledger.org/secure/attachment/13329/LogsAndCryptoConfig.zip","14/Nov/17 3:32 PM;Katiyman;crypto-config.zip;https://jira.hyperledger.org/secure/attachment/13333/crypto-config.zip",,,,,,,,,,,,,,,,,,,,,"1|hzyn1j:",,,,,,,,,,,,,,,,,,,,,,bkvellanki,jyellick,Katiyman,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/May/18 11:29 PM;jyellick;This was recently re categorized as a bug.  Is this still valid?;;;","09/May/18 11:08 PM;kchristidis;Will close in 2d if no updates.;;;","21/Jun/18 8:56 AM;bkvellanki;Hi Jason/Kostas,

 

Any update on this? I am getting the same error when I am trying execute the 2 org sample..I am also attaching the sample crpto-config yaml and k8s create yaml..

 

[hlbcadmin@gbs-k8s-master ~]$ kubectl logs createchannel createchannel

2018-06-20 23:37:23.828 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-06-20 23:37:23.828 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-06-20 23:37:23.833 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2018-06-20 23:37:23.834 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2018-06-20 23:37:23.834 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2018-06-20 23:37:23.834 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2018-06-20 23:37:23.834 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2018-06-20 23:37:23.834 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0AA2060A074F7267314D53501296062D...53616D706C65436F6E736F727469756D

2018-06-20 23:37:23.834 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: B756A8A5BF81ED9EAD20AD9CADAA1E2503014D4341AEC68F70104F45F004899B

2018-06-20 23:37:23.835 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2018-06-20 23:37:23.835 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2018-06-20 23:37:23.835 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2018-06-20 23:37:23.835 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2018-06-20 23:37:23.835 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AD8060A1408021A0608B3CAABD90522...F9348AAB87B41CCD944027E1B1D85C7B

2018-06-20 23:37:23.835 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: BB99BE59349C9713E5BAF7C585A4F1C5235FF202CC3369C429A1D3DC79C81931

Error: got unexpected status: BAD_REQUEST – error authorizing update: error validating DeltaSet: policy for [Group]  /Channel/Application not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining

Usage:

  peer channel create [flags]

 

Flags:

  -c, --channelID string   In case of a newChain command, the channel ID to create.

  -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer

  -t, --timeout int        Channel creation timeout (default 5)

 

Global Flags:

      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint

      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint

      --clientauth                          Use mutual TLS when communicating with the orderer endpoint

      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint

      --logging-level string                Default logging level and overrides, see core.yaml for full syntax

  -o, --orderer string                      Ordering service endpoint

      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.

      --tls                                 Use TLS when communicating with the orderer endpoint

  -v, --version                             Display current version of fabric peer server

 

 

What is the resolution on this issue

Thanks

Bala Vellanki;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are failing consistently,FAB-6977,23931,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,luomin,rameshthoomu,rameshthoomu,14/Nov/17 5:06 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,11/Dec/17 5:29 PM,,,,,,,DUPLICATE,,,fabric-build,,,,0,,,,,,,"fabric unit-tests are failing consistently..  
{code:java}
 panic: runtime error: invalid memory address or nil pointer dereference
vp_1          | [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xb0e0f9]
vp_1 {code}
 
{code:java}
 panic: runtime error: invalid memory address or nil pointer dereference
vp_1          | [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xb0e0f9]
vp_1          |
vp_1          | goroutine 32 [running]:
vp_1          | github.com/hyperledger/fabric/gossip/gossip.NewGossipService.func1(0xc4202a28c0, 0x20, 0x20, 0xc4200d3400, 0x3bc, 0x400)
vp_1          |         /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:93 +0x79
vp_1          | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).delete(0xc4217fd740, 0xc4202a28c0, 0x20, 0x20, 0xc4200d3400, 0x3bc, 0x400)
vp_1          |         /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:213 +0xbb
vp_1          | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Put.func1()
vp_1          |         /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:134 +0x60
vp_1          | created by time.goFunc
vp_1          |         /opt/go/src/time/sleep.go:170 +0x44
couchdb       | WARNING: no logs are available with the 'none' log driver
unittest_vp_1 exited with code 2{code}
Creating unittest_unit-tests_1 ... error
00:09:59.275 ERROR: for unittest_unit-tests_1  Cannot start service unit-tests: Cannot link to a non running container: /unittest_vp_1 AS /unittest_unit-tests_1/unittest_vp_1
00:09:59.290 
00:09:59.290 ERROR: for unit-tests  Cannot start service unit-tests: Cannot link to a non running container: /unittest_vp_1 AS /unittest_unit-tests_1/unittest_vp_1
00:09:59.290 Encountered errors while bringing up the project.
00:09:59.308 Makefile:174: recipe for target 'unit-test' failed

[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-s390x/81/console]",,blw,luomin,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6970,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn27:",,,,,,,,,,,,,,,,,,,,,,blw,luomin,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/17 5:38 AM;rameshthoomu;https://jenkins.hyperledger.org/sandbox/job/fabric-verify-s390x/10/artifact/gopath/src/github.com/hyperledger/fabric/unit-test/dockerlogfile.log;;;","25/Nov/17 7:46 AM;mastersingh24;[~rameshthoomu] - Is this still an issue?  I don't see this happening;;;","04/Dec/17 9:51 AM;blw;I believe this issue is a duplicate of FAB-6970;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide an option to BYFN to start the Fabric CA for the network,FAB-6978,23932,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,sstone1,sstone1,sstone1,14/Nov/17 7:03 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,20/Jul/18 11:05 PM,,,,,,,,,,fabric-samples,,,,0,,,,,,,"BYFN does not include any Fabric CAs, unless you use the docker-compose-e2e.yaml file.

However that file does not have the CLI container so does not work with byfn.sh.

Add similar options to byfn.sh as per CouchDB to additionally start Fabric CAs.",,ChristopherFerris,mastersingh24,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyn2f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,mastersingh24,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 11:25 PM;mastersingh24;[~sstone1] - this is by design.  docker-compose-e2e.yaml is designed to be used by SDKs and not use the CLI container.

See http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#understanding-the-docker-compose-topology;;;","22/Nov/17 11:36 PM;sstone1;[~mastersingh24] OK, fair enough - can I add a docker-compose-cas.yaml or something instead to include both the Fabric CA and CLI container for use with byfn.sh?;;;","05/Apr/18 1:47 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/15671/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
better documentation to explain usage of shim API,FAB-6979,23933,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,wlahti,Nishi,Nishi,14/Nov/17 7:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Feb/18 9:29 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"It would be nice if we can add newer chaincodes to demonstrate usage and purpose of following shimAPI for user/testers to consume these API.
{code:java}
GetBinding  
GetCreator
GetTxTimeStamp
GetSignedProposal
GetTransient
GetTxID
GetDecorations
SetEvent{code}",,denyeart,muralisr,Nishi,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6966,,,,FAB-8085,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn2n:",,,,,,,,,,,,,,,,,,,,,,denyeart,muralisr,Nishi,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 11:49 AM;denyeart;[~muralisr] I think you have the most historical context on some of these shim functions, would you be able to add some additional usage notes in the shim interfaces_stable.go file?  Usage in fabric examples would be nice, but minimally I think some more usage notes are needed.  (BTW, is SetEvent() still legitimate?).;;;","06/Dec/17 6:18 PM;muralisr;[~denyeart] yes, I can do that. Will try to get some usage nodes done this week(end).

SetEvent is still legitimate but we don't actually emit the event (like we do with Block event). The CC event is in the TX in the block. SDK and users would have to extract it.;;;","30/Jan/18 12:06 AM;muralisr;[~wlahti] thank you for agreeing to take a peek! ;;;","03/Feb/18 6:42 AM;yacovm;[~wlahti] any updates on this one?;;;","05/Feb/18 11:01 PM;wlahti;I'll be working on this today. ;;;","07/Feb/18 5:48 AM;wlahti;I pushed an initial attempt at this to gerrit: [https://gerrit.hyperledger.org/r/c/17605/]

Some of the information about GetBinding() was based on the following Google doc, which I found linked in FAB-634: [https://docs.google.com/document/d/18XDGqxb3pz4sTS6jTJod1KufRSC7rRA-O3PMT5cUsqY/edit#heading=h.2o87atnjtrt2];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spawning multiple Fabric networks on the same VM,FAB-6980,23934,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,AjitVV,AjitVV,14/Nov/17 2:44 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,29/Nov/17 1:33 PM,,,,,,,Not a Bug,,,,,,,0,,,,,,,"{color:#000000}I would like to spawn multiple instances of the example network on the same VM. We have multiple users working on the same VM and each would like to work with his own instance.{color}

{color:#000000} {color}

{color:#000000}Based on our understanding of the docker compose, we decided to use a different COMPOSE_PROJECT_NAME for each user.{color}

User 1 used COMPOSE _PROJECT_NAME=member1 and launched the example.User 1 could see the following containers - please find attachment *member1_containers.txt*
  
 User 2 used COMPOSE _PROJECT_NAME=member2.When he launched the example, he was expecting all containers to have u1 as a prefix.User 2 could see the following containers - please find attachment *member2_containers.txt*

*Note that the chaincode container dev-peer2-example02-1.0 started by user1 vanished and was replaced by the chaincode container of the same name started by user2.*

I guess this is because the peer launches the chaincode container without prefixing it.

 ",,AjitVV,denyeart,mastersingh24,YashGanthe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/17 2:41 PM;AjitVV;member1_containers.txt;https://jira.hyperledger.org/secure/attachment/13332/member1_containers.txt","14/Nov/17 2:41 PM;AjitVV;member2_containers.txt;https://jira.hyperledger.org/secure/attachment/13331/member2_containers.txt",,,,,,,,,,,,,,,,,,,,,"1|hzyn2v:",,,,,,,,,,,,,,,,,,,,,,AjitVV,denyeart,mastersingh24,YashGanthe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 2:02 PM;YashGanthe;If there is a COMPOSE_PROJECT_NAME, the peer should add it to the name of the chaincode container so that the container gets a unique name that does not conflict with any other conatiner.;;;","25/Nov/17 7:39 AM;mastersingh24;[~AjitVV]  - If you want to do something like this, then you can set
{quote}
CORE_PEER_NETWORKID=$\{COMPOSE_PROJECT_NAME}
{quote}

in your Docker Compose YAML files;;;","27/Nov/17 11:52 AM;denyeart;[~AjitVV] I don't think there is a Bug here.  Could you mark it Done, or change the issue type, or clarify what you think the bug is?;;;","29/Nov/17 1:33 PM;AjitVV;setting CORE_PEER_NETWORKID=$\{COMPOSE_PROJECT_NAME} worked.
 Thank you for the help.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Samplesyscc_test.go test,FAB-6984,23941,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Baha-sk,Baha-sk,Baha-sk,15/Nov/17 7:15 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Nov/17 11:11 PM,,,,,,,,,,,,,,0,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn3z:",,,,,,,,,,,,,,,,,,,,,,Baha-sk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance cryptogen to support NodeOUs,FAB-6986,23943,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,15/Nov/17 4:55 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,09/Feb/18 5:16 AM,,,,,,,,,,fabric-crypto,,,,3,review-needed,,,,,,"Cryptogen requires a few modifications to allow the following:
- generation of certificates with customised OUs
- generation of MSP configuration file (config.yaml)

The aim of this JIRA item is to add the above features to cryptogen.",,angelo.decaro,denyeart,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-5664,,,,,,,,,"1|hzyn4f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,denyeart,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Jan/18 8:09 PM;angelo.decaro;change-set: https://gerrit.hyperledger.org/r/#/c/15483/;;;","16/Jan/18 8:29 PM;denyeart;{color:#444444}Since it touches no server code and would help with samples/doc/consumability, I’m amenable to it going in as part of the sample work effort.{color};;;","19/Jan/18 11:55 PM;muralisr;[~denyeart] Also this will help samples/docs for FAB-5664.;;;","07/Feb/18 10:04 PM;mastersingh24;[~muralisr] [~angelo.decaro] [~muralisr] - Please take a look at https://gerrit.hyperledger.org/r/17621

I'd prefer something like this as it really simplifies the config options to make this work.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
single_tx_client orderer sample client failed to run with panic error,FAB-6987,23944,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,meinvzou,meinvzou,15/Nov/17 4:55 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 2:26 PM,v1.0.4,,,,,,v1.0.5,,,fabric-orderer,,,,0,,,,,,,"While using fabric/orderer/single_tx_client to communicate with the ordering serveice, It's failed to run with panic error, for the wrong initialization of the SeekPosition.

The code of 
Data: utils.MarshalOrPanic(&ab.SeekInfo\{
                Start: &ab.SeekPosition\{Type: &ab.SeekPosition_Newest\{}},
                Stop: &ab.SeekPosition\{Type: &ab.SeekPosition_Newest\{}},
                Behavior: ab.SeekInfo_BLOCK_UNTIL_READY,
            }),
should be changed to :
Data: utils.MarshalOrPanic(&ab.SeekInfo\{
                Start: &ab.SeekPosition\{Type: &ab.SeekPosition_Newest\{Newest: &ab.SeekNewest\{}}},
                Stop: &ab.SeekPosition\{Type: &ab.SeekPosition_Specified\{Specified: &ab.SeekSpecified\{Number: math.MaxUint64}}},
                Behavior: ab.SeekInfo_BLOCK_UNTIL_READY,
            }),",,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn4n:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/17 11:52 PM;mastersingh24;https://gerrit.hyperledger.org/r/15713;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Idemix - HSM support,FAB-6989,23947,,Epic,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,,dubovitskaya,dubovitskaya,15/Nov/17 7:46 PM,23/Jan/20 7:15 AM,28/Oct/23 3:01 AM,23/Jan/20 7:15 AM,Future,,,,,,Future,,,,,,,0,idemix,stale-item,,,,,,,denyeart,dubovitskaya,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-588,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-3,,Identity Mixer - HSM support,To Do,,,Unset,,,,"1|hzyn53:",,,,Yes,Unset,,,,,,,,,,,,,,,,,denyeart,dubovitskaya,SjirNijssen,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Mar/18 1:27 PM;denyeart;For initial planning purposes, let's assume v1.3 timeframe, given all the other Idemix work for v1.2.;;;","23/Jan/20 7:15 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - unable to pipeout the log files to jenkins WORKSPACE directory,FAB-6990,23952,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,rameshthoomu,rameshthoomu,15/Nov/17 9:08 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,17/Nov/17 11:48 PM,,,,,,,,,,fabric-build,fabric-ci,,,0,fabric-ci,,,,,,"Configured Ansible project in sandbox environment and after successful run, log files are not piping out to Jenkins WORKSPACE. Got the below error while running Ansible tests
{code:java}
An exception occurred during task execution. To see the full traceback, use -vvv. The error was: IOError: [Errno 21] Is a directory: '/home/ubuntu'
fatal: [10.30.66.6]: FAILED! => {""failed"": true, ""msg"": ""Unexpected failure during module execution."", ""stdout"": """"}
    to retry, use: --limit @/w/workspace/fabric-test-multihost/fabric-test-1/tools/ATD/ptesetup.retry{code}
 ",Jenkins sandbox,rameshthoomu,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn67:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,"17/Nov/17 11:50 PM;suryalnvs;https://gerrit.hyperledger.org/r/#/c/15489/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
publish stable images,FAB-6995,23963,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,scottz,scottz,16/Nov/17 3:41 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 11:39 AM,,,,,,,,,,fabric-ci,,,,0,build-system,,,,,,"Put latest stable images in Nexus. Provide a label or tag (something like ""DEV_STABLE"" that always points to ""the latest working images"" (from the master development branches of the repositories).

Every day, the fabric-test daily test suite pulls the latest commit levels and runs integrations tests for several fabric repositories. When it passes, then automatically upload all the working images, npm modules, etc, into Nexus and reassign the ""DEV_STABLE"" tag to point to them.

Anyone can use the tag to pull the latest stable images for their own development and testing.",,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn7z:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"16/Nov/17 4:30 AM;rameshthoomu;Explained how we publish tagged images to nexus repository and we have some reference jobs to do this. [~sambhavdutt] as discussed could you please work on this.;;;","17/Nov/17 9:50 AM;scottz;I think https://gerrit.hyperledger.org/r/#/c/15545/ is a great start.

I do have some questions. I have some ideas, but honestly do not have all the answers, so I thought these can be discussed here for the record.

Do we have plans for the following?:
1. what README file(s) will be edited in what repositories?
2. how will we advertise/announce the enablement of this functionality to the community?
3. how will we advertise (maybe post a message in rocketchat ci channel?) whenever new DEV_STABLE images are tagged?

Also:
I cannot tell; will this be done ONLY when the daily test suite passed?
How long will the images be stored?
Will we keep only the latest images, or shall we keep older ones around? (I am not sure if that is necessary; just asking.)

 

jjb/fabric/include-raw-nexus-stable-docker-push.sh :

File Comment:
We have more repositories. I expected to see these also. Are we planning on adding them later?
cello
fabric-samples
fabric-sdk-node 
and fabric-sdk-java - once we finally include tests for it
(and am I missing any?)

Line 13:
does this include the configtxgen configtxlator cryptogen ?

It is unfortunate that we cannot push fabric-test because (even though the CI updates the submodules for all the other repositories) we would first need to create/approve/merge a gerrit PatchSet containing those commit levels for those repositories after the daily test suite passed - but I know Ramesh said LF would not allow our automation tools to do that automatically. Just wanted to mention it here, in case anyone has alternative idea.;;;","07/Dec/17 11:39 AM;rameshthoomu;this has been fixed.. fabric-test-daily job executes all the integration tests and publish stable and binaries to nexus repository.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 1 channel, default batchsize and default payload using OTE",FAB-6996,23964,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,16/Nov/17 3:52 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Nov/17 12:02 AM,v1.1.0,,,,,,,,,,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 1 channel, default batchsize and default payload{color} using OTE

https://gerrit.hyperledger.org/r/#/c/15501/",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn87:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automation scripts for running OTE tests,FAB-6997,23965,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,16/Nov/17 3:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Nov/17 12:02 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Automation python scripts for running OTE tests

https://gerrit.hyperledger.org/r/#/c/15501/",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn8f:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - update baseimage version in packer script,FAB-6999,23967,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Nov/17 8:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 11:04 PM,,,,,,,,,,fabric-ci,,,,0,,,,,,,update baseimage version in packer script to load this baseimage version by default.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyn8v:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 11:04 PM;rameshthoomu;Patch has been submitted and merged. Below baseimage versions instantiate while x86_64 VM is loading.
{code:java}
00:01:22.984 hyperledger/fabric-baseimage   x86_64-0.4.2        76daf60aeff4        8 weeks ago         1.33GB
00:01:22.984 hyperledger/fabric-baseimage   x86_64-0.3.2        c92d9fdee998        2 months ago        1.26GB
00:01:22.985 hyperledger/fabric-baseimage   x86_64-0.3.1        9f2e9ec7c527        6 months ago        1.27GB{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Idemix fabric part (in Go) with 1.1,FAB-7000,23968,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,dubovitskaya,dubovitskaya,16/Nov/17 6:05 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Mar/18 8:57 PM,v1.1.0,,,,,,v1.1.0,,,fabric-crypto,,,,4,review-needed,,,,,,"We propose to include the identity mixer MVP go code (Epic FAB-2005) in 1.1 GA instead of the planned 1.1 tech preview. We think it is ready for the following reasons: the code is merged, properly tested, we don't expect further changes, and we have a working end-to-end demo. 

The SDK-related parts of Idemix will be released with the corresponding SDKs as soon as they are ready (Java is expected to be ready in 1-2 weeks, the Java crypto library is tested for compatibility with the Go crypto library). Once the SDK parts are released the Idemix privacy-preserving transaction signing feature will be publicly announced.

Please discuss this proposal. ",,ChristopherFerris,denyeart,dubovitskaya,jyellick,raccoonrat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,"1|hzyn93:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,dubovitskaya,jyellick,raccoonrat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 5:19 AM;denyeart;I've removed labels as they are only needed on top level epic.  I've added label on top level epic to indicate tech preview (experimental feature).;;;","17/Nov/17 5:36 AM;ChristopherFerris;What is the level of integration testing for the new features, especially given that the SDK work is still TBD? 

Also, what about documentation and sample apps? We will need much more than a single end-to-end demo. Documentation and samples is where we are getting dinged the most. ;;;","17/Nov/17 5:38 AM;ChristopherFerris;[~denyeart] did not see 'review-needed' label on FAB-2005. What am I missing?;;;","17/Nov/17 6:19 AM;denyeart;[~ChristopherFerris] I've added 'review-needed' to the remaining Epics/Features tagged under release-planning-1.1.  We will need a separate maintainer vote to determine if each feature should be hidden behind Experimental build tag (aka Tech Preview).;;;","20/Nov/17 11:52 PM;jyellick;[~denyeart] [~ChristopherFerris] Although the top level epic needs voting, I do think that this issue requires it as well.

Assuming that there is support for FAB-2005, the question becomes whether we wish to enable the peer and orderer support for this crypto scheme _as a non-experimental feature_ in v1.1, rather than delaying it wholesale for another release.

To my thinking, if we have confidence that the MSP implementation is sound, this strategy makes a lot of sense.  By baking non-experimental support into v1.1, the SDKs will have a stable target to develop against during the v1.2 release cycle, and, users can begin taking advantage of the new features when v1.2 is released by upgrading their SDKs without having to upgrade the rest of the fabric network.

Essentially, there is no reason we need to tie SDK support to peer/orderer support in this case.  The feature is not complete until both are merged, but, if the peer/orderer code is good to go, I see no reason not to enable it.;;;","27/Nov/17 10:50 PM;denyeart;[~jyellick] [~elli-androulaki] [~dubovitskaya] I agree this one makes sense as 'review-needed' so that maintainers can vote to make it a production feature of 1.1 rather than tech preview (experimental) feature of 1.1 as originally proposed in the parent FAB-2005.
As Chris mentioned, getting the system test, documentation, and samples in place would be required to make this a production feature.  The SDKs can indeed lag behind, but it would be good to get at least one SDK working for end-to-end testing.  I believe Maria mentioned java SDK support is in progress. ;;;","27/Nov/17 11:56 PM;ChristopherFerris;I'd support this ONLY if we can get docs and samples in time.;;;","29/Nov/17 12:16 AM;dubovitskaya;Yes, sure, we provide the full package. We already provided the documentation for the idimix principles, msp, idemixgen (docs/source/idemix.rst for -FAB-5725-, docs/source/idemixgen.rst -FAB-5674-). We will add the description of the e2e demo with Idemix as well. ;;;","05/Jan/18 1:20 AM;dubovitskaya;Status update:

Code: merged. We did the playback, showed the e2e_cli demo and implemented the feedback received at the playback.

Docs: We already provided the documentation for the Idemix principles, msp, idemixgen (docs/source/idemix.rst for ---FAB-5725---, docs/source/idemixgen.rst ---FAB-5674---). We are adding the description of the e2e demo with Idemix as well (FAB-7243). 

Samples: Since we provide e2e_cli tests for the Go release, we do not have samples to add to the fabric-samples repository. 

SDK: java-idk is WIP, most of the code is written, integration will be finalized in 1-2 weeks. The tests use the crypto material produced by idemixgen go tool from fabric code contribution (tests pass, so the idemix crypto libraries in java and go are compatible).

Systest: code is ready to be tested (FAB-7120). In fact it is tested with the e2e_cli and sdk integration. 

 ;;;","13/Jan/18 2:56 PM;Clayton Sims;Based on comments in the maintainer channel - I believe it has been decided to leave this as experimental.  If I misunderstood let me know. ;;;","09/Mar/18 4:22 AM;denyeart;Experimental feature done in 1.1.
Will be released in 1.2 via FAB-5733.;;;","21/Mar/18 8:58 PM;denyeart;This was a Task for v1.1, remaining Idemix items will be tracked under epic FAB-5733, closing this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PTE tests not triggering with ""node command not found"" error",FAB-7002,23973,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,rameshthoomu,rameshthoomu,16/Nov/17 10:20 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,20/Dec/17 12:37 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"*node command not found* error while triggering PTE tests using ATD (Ansible Test Driver). Below is the error log:
{code:java}
execution: CITest/FAB-3983-i-TLS/samplecc/samplecc-chan1-FAB-3983-i-TLS.json no python requests ./pte_driver.sh: line 82: node: command not found no java requests ./pte_driver.sh: line 82: node: command not found{code}
[https://jenkins.hyperledger.org/sandbox/job/fabric-test-multihost/lastSuccessfulBuild/artifact/Logs/FAB-3983-i-TLS_1115222129.log]

https://jenkins.hyperledger.org/sandbox/job/fabric-test-multihost/12/console",Jenkins multihost setup,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyna7:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Don't trigger jobs if changes are related to .md or .rst files,FAB-7004,23975,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Nov/17 11:56 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,07/May/18 8:11 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"In the existing CI jobs, unit-test jobs triggers when a user submits a change to .rst or .md files also. This is not required as the changes are not effecting unit-tests.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynan:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/18 11:21 AM;rameshthoomu;In the proposed CI approach, fail the build check job if the patch set containers doc changes. But as per Chris request we have to trigger the documentation build job  when a patch set has doc changes. [~tongliofcary] could you please take care of this.;;;","07/May/18 8:11 AM;rameshthoomu;This has been fixed and pushed changes to fabric CI configuration.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports endorsement policy configuration,FAB-7005,23977,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sunhwei,dongming,dongming,17/Nov/17 12:17 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,05/Dec/17 2:31 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,PTE supports endorsement policy configuration.  User specifies the policy in the user inputs json.  PTE sends the policy to SDK which translates to protobuf and then sends to fabric.,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzynb3:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE forwards endorsed proposal,FAB-7006,23978,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,eragnoli,dongming,dongming,17/Nov/17 12:23 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Feb/18 3:53 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"In the endorsed proposal response from SDK, no information on which peers signed the proposal. PTE will simply forward the proposal to orderer and let orderer. And the VSCC  will validate the transaction.

PTE will NOT check the status of the endorsed proposal before sending to orderer.",,dongming,eragnoli,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzynbb:",,,,,,,,,,,,,,,,,,,,,,dongming,eragnoli,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"22/Nov/17 12:41 AM;eragnoli;[~dongming], here:

_PTE will NOT check the status of the endorsed proposal before sending to orderer._

you mean

_PTE shall not check the status of the endorsed proposal before sending to orderer._

aka, we want PTE not to check the status any longer and simply forward to the orderer, and then let VSCC to verify the endorsement policy.;;;","17/Feb/18 1:04 AM;dongming;https://gerrit.hyperledger.org/r/#/c/17979/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - update goast scan job,FAB-7011,23985,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,17/Nov/17 4:56 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,02/Feb/18 12:09 AM,,,,,,,v1.1.0,,,fabric-ci,,,,0,fabric-ci,,,,,,"update existing GoAST scan job to skip vendor, build, gotools and bddtests directories from the list of the go packages. Also, the output should display in HTML format on the jenkins console.",Jenkins,ashutosh_kumar,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyncf:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ashutosh_kumar,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 11:06 PM;rameshthoomu;patch has been submitted and in-review. https://gerrit.hyperledger.org/r/#/c/15543/;;;","27/Nov/17 2:31 PM;denyeart;[~rameshthoomu] I believe this is a Task or Improvement rather than Bug.  Please update accordingly.;;;","17/Jan/18 1:45 AM;Clayton Sims;Ramesh the fixed version field indicates this bug or task is a 'must fix' for Alpha.   Please confirm.   If required for alpha, what is eta?;;;","17/Jan/18 1:46 AM;Clayton Sims;If required for v1.1 but not alpha then update the fixed version field.;;;","19/Jan/18 8:04 AM;Clayton Sims;[~rameshthoomu]  any update here?;;;","20/Jan/18 2:05 AM;rameshthoomu;[~Clayton Sims] This patch has been couple of weeks back but now we see `gas` latest code is not supporting --skip option.. [https://gerrit.hyperledger.org/r/#/c/15543/]

myself & [~ashutosh_kumar] working on other options to run `gas` on fabric..  Will let you know the update.

 ;;;","20/Jan/18 2:51 AM;ashutosh_kumar;[~rameshthoomu] : use *exclude* flag instead of *skip.* That should help.;;;","30/Jan/18 1:44 AM;ashutosh_kumar;Sorry , exclude flag is not going to work. We need to scan one directory at a time.;;;","30/Jan/18 2:57 AM;rameshthoomu;""gas"" tool is disabled html report option in the new release. Will run this job as a cron weekly job for each package and publish reports in json format.;;;","02/Feb/18 12:12 AM;rameshthoomu;Job has been created https://jenkins.hyperledger.org/me/my-views/view/All/job/fabric-goast-weekly-x86_64/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve error message when an CA certificate is used as an identity,FAB-7012,23986,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,latitiah,latitiah,17/Nov/17 5:48 AM,21/Jul/18 3:47 AM,28/Oct/23 3:01 AM,30/Nov/17 9:03 PM,,,,,,,v1.1.0,,,,,,,0,Serviceability,,,,,,"The following error message is received when there is a certificate that has been tagged as a CA certificate. While one should be able to use ""A CA certificate cannot be used directly by this MSP"", the error is clearer if it were to say ""A CA-tagged certificate cannot be used directly by this MSP""

It would also help to know exactly what certificate the complaint is about, since there are potentially multiple certificates on the system.
 
{code}
2017-11-16 16:42:57.709 UTC [orderer/multichain] newLedgerResources -> CRIT 078 Error creating configtx manager and handlers: Setting up the MSP manager failed, err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
panic: Error creating configtx manager and handlers: Setting up the MSP manager failed, err admin 0 is invalid, validation error Could not obtain certification chain, err A CA certificate cannot be used directly by this MSP
{code}",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyncn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Nov/17 7:00 AM;mastersingh24;Was marked as a bug, but this is an improvement.  Going to do it anyway

 

https://gerrit.hyperledger.org/r/15703;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing fabric-ca-fvt images for ca_cluster.py test,FAB-7017,23992,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,17/Nov/17 7:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/Nov/17 8:30 PM,v1.0.4,v1.1.0-preview,,,,,v1.0.5,v1.1.0-alpha,,fabric-quality,,,,0,,,,,,,"ca_client.py test failed because ""make docker-images"" command didn't make fabric-fvt image.

ubuntu@ubuntu-xenial:~/fabric-test/$ make git-update fabric ca docker-images
...
ubuntu@ubuntu-xenial:~/fabric-test/$ cd regression/daily
ubuntu@ubuntu-xenial:~/fabric-test/regression/daily$ py.test -v --junitxml results_cluster.xml ca_cluster.py
==================================================================================== test session starts =====================================================================================
platform linux2 -- Python 2.7.12, pytest-2.8.7, py-1.4.31, pluggy-0.3.1 -- /usr/bin/python
cachedir: .cache
rootdir: /home/ubuntu/fabric-test/regression/daily, inifile:
collected 1 items
 
ca_cluster.py::CaClusterTest::test_FAB6863_BasicCAClustering FAILED
 
----------------------------------------------------- generated xml file: /home/ubuntu/fabric-test/regression/daily/results_cluster.xml ------------------------------------------------------
========================================================================================== FAILURES ==========================================================================================
________________________________________________________________________ CaClusterTest.test_FAB6863_BasicCAClustering ________________________________________________________________________
 
self = <ca_cluster.CaClusterTest testMethod=test_FAB6863_BasicCAClustering>
 
    def test_FAB6863_BasicCAClustering(self):
        createLog = 'mkdir -p /tmp/logs; chmod 777 /tmp/logs'
        startContainer = 'docker run -v /tmp/logs:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8
128'
        command = createLog + ';' + startContainer
>       output = check_output([command], shell=True)
 
ca_cluster.py:17:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
 
popenargs = (['mkdir -p /tmp/logs; chmod 777 /tmp/logs;docker run -v /tmp/logs:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scrip
ts/fvt/cluster_test.sh 4 4 8 128'],)
kwargs = {'shell': True}, process = <subprocess.Popen object at 0x7ff8f99bf790>, output = '', unused_err = None, retcode = 125
cmd = ['mkdir -p /tmp/logs; chmod 777 /tmp/logs;docker run -v /tmp/logs:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/
cluster_test.sh 4 4 8 128']
 
    def check_output(*popenargs, **kwargs):
        r""""""Run command with arguments and return its output as a byte string.
 
        If the exit code was non-zero it raises a CalledProcessError.  The
        CalledProcessError object will have the return code in the returncode
        attribute and output in the output attribute.
 
        The arguments are the same as for the Popen constructor.  Example:
 
        >>> check_output([""ls"", ""-l"", ""/dev/null""])
        'crw-rw-rw- 1 root root 1, 3 Oct 18  2007 /dev/null\n'
 
        The stdout argument is not allowed as it is used internally.
        To capture standard error in the result, use stderr=STDOUT.
        
                >>> check_output([""/bin/sh"", ""-c"",
                ...               ""ls -l non_existent_file ; exit 0""],
                ...              stderr=STDOUT)
                'ls: non_existent_file: No such file or directory\n'
                """"""
                if 'stdout' in kwargs:
                    raise ValueError('stdout argument not allowed, it will be overridden.')
                process = Popen(stdout=PIPE, *popenargs, **kwargs)
                output, unused_err = process.communicate()
                retcode = process.poll()
                if retcode:
                    cmd = kwargs.get(""args"")
                    if cmd is None:
                        cmd = popenargs[0]
        >           raise CalledProcessError(retcode, cmd, output=output)
        E           CalledProcessError: Command '['mkdir -p /tmp/logs; chmod 777 /tmp/logs;docker run -v /tmp/logs:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyper
ledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8 128']' returned non-zero exit status 125
 
/usr/lib/python2.7/subprocess.py:574: CalledProcessError
------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------
Unable to find image 'hyperledger/fabric-ca-fvt:latest' locally
docker: Error response from daemon: pull access denied for hyperledger/fabric-ca-fvt, repository does not exist or may require 'docker login'.
See 'docker run --help'.
================================================================================== 1 failed in 2.70 seconds ==================================================================================",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyndr:",,,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error sending in the endorser makes error handling tricky,FAB-7018,23993,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yacovm,yacovm,17/Nov/17 8:08 AM,23/Jan/20 7:15 AM,28/Oct/23 3:01 AM,23/Jan/20 7:15 AM,,,,,,,,,,fabric-peer,,,,0,sdk,stale-item,,,,,"In the endorser, whenever an error is returned from the simulation, the peer returns:
{code:java}
        if res.Status >= shim.ERROR {
            endorserLogger.Errorf(""simulateProposal() resulted in chaincode response status %d for txid: %s"", res.Status, txid)
            var cceventBytes []byte
            if ccevent != nil {
                cceventBytes, err = putils.GetBytesChaincodeEvent(ccevent)
                if err != nil {
                    return nil, errors.Wrap(err, ""failed to marshal event bytes"")
                }
            }
            pResp, err := putils.CreateProposalResponseFailure(prop.Header, prop.Payload, res, simulationResult, cceventBytes, hdrExt.ChaincodeId, hdrExt.PayloadVisibility)
            if err != nil {
                return &pb.ProposalResponse{Response: &pb.Response{Status: 500, Message: err.Error()}}, err
            }

            return pResp, &chaincodeError{res.Status, res.Message}
        }{code}
 

However, in the client side in go, nil is always returned in the response:
{code:java}
func (c *endorserClient) ProcessProposal(ctx context.Context, in *SignedProposal, opts ...grpc.CallOption) (*ProposalResponse, error) {
    out := new(ProposalResponse)
    err := grpc.Invoke(ctx, ""/protos.Endorser/ProcessProposal"", in, out, c.cc, opts...)
    if err != nil {
        return nil, err
    }
    return out, nil
}{code}
 

I assume that in [java SDK|https://github.com/hyperledger/fabric-sdk-java/blob/13337b64716141995e49f3f0b81e6356fc05a06a/src/main/java/org/hyperledger/fabric/sdk/EndorserClient.java#L89-L102] it's similar and an [exception|https://grpc.io/grpc-java/javadoc/io/grpc/StatusRuntimeException.html] is simply thrown, and although exceptions are serializable, it can't be that you can send an exception down the wire because gRPC is platform independent in java it's impossible to classify the exception according to its cause (chaincode or gRPC failure)

*My first question is - how does a client SDK handle the reasons of the proposal failure?*
 * The way to recover from a communication error is inherently different than other failures such as access control error, or invalid parameter failures.
 * Unless I'm wrong - there is no good way for the SDK to distinguish between communication errors to other erros, due to the fact that the cause of the errror / exception is returned as a string and cannot be classified using type inference or some switch on a number, etc.

 

*My second question is - given the above fact is true - should we fix this? and if so, how?* I guess we can always return the response with nil as the error but that might (?) break compatibility with existing client code (is this true?)

 

 

[~muralisr]

[~wlahti]

[~mastersingh24]

[~jimthematrix]

[~rickr]

[~harrisob@us.ibm.com]

 ",,muralisr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyndz:",,,,Unset,,,,,,,Unset,,,,,,,,,,,muralisr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 9:37 AM;muralisr;[~yacovm] digging into this a bit, this is due to a change in https://jira.hyperledger.org/browse/FAB-4347. The idea was that if there's an error, users would have to check if the error is ""chaincode error"" (ie, treat it like a keyword) and then use status and message.

Example

bq. Error: Error endorsing chaincode: rpc error: code = Unknown desc = *chaincode error* (status: 500, message: Error installing chaincode code mycc:0(chaincode /var/hyperledger/production/chaincodes/mycc.0 exists))

But as you point out, returning pResp is useless as gRPC will ignore it. On the + side, either pResp != nil and everything's good or err != nil and user has to look for ""chaincode error"" to determine if it was a fabric or chaincode error.;;;","23/Jan/20 7:15 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""make clean"" command is not enough",FAB-7019,23994,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nnao,nnao,nnao,17/Nov/17 8:21 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,27/Nov/17 2:32 PM,v1.0.4,v1.1.0-preview,,,,,v1.0.5,v1.1.0-alpha,,fabric-quality,,,,0,,,,,,,"I tried ""make docker-images"" command after ""make clean"" command. it doesn't do anything.
 
ubuntu@ubuntu-xenial:~/fabric-test$ make docker-images
....
ubuntu@ubuntu-xenial:~/fabric-test$ make clean
docker ps -aq | xargs -I '{}' docker rm -f '{}'
7354563a564a
3f14546e66b2
...
ubuntu@ubuntu-xenial:~/fabric-test$ make docker-images
make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric'
make[1]: Nothing to be done for 'docker'.
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric'
make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric'
make[1]: Nothing to be done for 'native'.
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric'
make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric-ca'
make[1]: Nothing to be done for 'docker'.
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric-ca'",,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyne7:",,,,,,,,,,,,,,,,,,,,,,nnao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"23/Nov/17 6:30 AM;nnao;https://gerrit.hyperledger.org/r/#/c/15555/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetLocalMSP only returns cached local MSP on first invocation,FAB-7020,23996,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mathiasb303,mathiasb303,mathiasb303,17/Nov/17 7:48 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,26/Nov/17 7:12 PM,,,,,,,,,,fabric-crypto,,,,0,release-planning-1.1,,,,,,"In msp/mgmt/mgmt.go, calling GetLocalMSP() only returns a cached local MSP when the function is invoked the first time. Subsequent invocations return a regular, non-cached local bccspMsp instance.",,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynef:",,,,,,,,,,,,,,,,,,,,,,mathiasb303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Nov/17 7:57 PM;mathiasb303;CR: https://gerrit.hyperledger.org/r/15559;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update nvm use command in fabric-test/pre_setup.sh scrpt,FAB-7021,24002,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,17/Nov/17 11:37 PM,24/Apr/19 11:52 PM,28/Oct/23 3:01 AM,24/Apr/19 11:52 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"update nvm use command in fabric-test/pre_setup.sh script

`nvm use --delete-prefix v8.9.0`",,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynf3:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"10/Jul/18 3:06 AM;ChristopherFerris;[~rameshthoomu] is this still valid? If so please add to Future release.;;;","24/Apr/19 11:52 PM;rameshthoomu;The change has been updated in fabric-test repo. https://github.com/hyperledger/fabric-test/blob/master/scripts/pre_setup.sh Closing this now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric client I want to be notified when transactions have been processed and their status on a per channel basis,FAB-7022,24003,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,jeffgarratt,jeffgarratt,18/Nov/17 12:33 AM,23/Jan/20 7:15 AM,28/Oct/23 3:01 AM,23/Jan/20 7:15 AM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,ARCH,stale-item,,,,,"Given I am a fabric client

And I am a member of channel ""A""

When a transaction is broadcasted in channel ""A""

Then I wish to be notified of the transaction in channel ""A""

 

When I request blocks from a fabric component

Then I should be able to use a common interface

 

 

Acknowledgement:

    originator: [~jeffgarratt]",,jeffgarratt,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6911,,,,,,,,,,FAB-7088,,,,,,,,,,,,FABJ-116,FABG-194,,FABN-93,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynfb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jeffgarratt,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:15 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lo$kup peer on 127.0.0.11:53: no such host""; Reconnecting to {peer:7051 <nil>}",FAB-7023,24005,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,shreybhardwaj,hhimanshu,hhimanshu,18/Nov/17 2:08 AM,24/Jul/19 9:16 PM,28/Oct/23 3:01 AM,08/Jan/18 12:29 PM,,,,,,,,,,fabric-samples,,,,0,,,,,,,"I am following [https://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html] (Chaincode for Developers) and performed the following steps
 * Downloaded latest binaries

{code:java}
➜  chaincode-docker-devmode git:(master) ✗ docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
➜  chaincode-docker-devmode git:(master) ✗ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
➜  chaincode-docker-devmode git:(master) ✗


➜  chaincode-docker-devmode git:(master) ✗ curl -sSL https://goo.gl/fMh2s3 | bash
// some output, but finally the binaries
===> List out hyperledger docker images
hyperledger/fabric-ca          latest                 2736904862db        2 weeks ago         218MB
hyperledger/fabric-ca          x86_64-1.1.0-preview   2736904862db        2 weeks ago         218MB
hyperledger/fabric-tools       latest                 c584c20ac82b        2 weeks ago         1.42GB
hyperledger/fabric-tools       x86_64-1.1.0-preview   c584c20ac82b        2 weeks ago         1.42GB
hyperledger/fabric-couchdb     latest                 5b8a15e6e972        2 weeks ago         1.57GB
hyperledger/fabric-couchdb     x86_64-1.1.0-preview   5b8a15e6e972        2 weeks ago         1.57GB
hyperledger/fabric-kafka       latest                 cf09c5534ef9        2 weeks ago         1.37GB
hyperledger/fabric-kafka       x86_64-1.1.0-preview   cf09c5534ef9        2 weeks ago         1.37GB
hyperledger/fabric-zookeeper   latest                 ac127485fdc7        2 weeks ago         1.37GB
hyperledger/fabric-zookeeper   x86_64-1.1.0-preview   ac127485fdc7        2 weeks ago         1.37GB
hyperledger/fabric-orderer     latest                 2fccc91736df        2 weeks ago         159MB
hyperledger/fabric-orderer     x86_64-1.1.0-preview   2fccc91736df        2 weeks ago         159MB
hyperledger/fabric-peer        latest                 337f3d90b452        2 weeks ago         165MB
hyperledger/fabric-peer        x86_64-1.1.0-preview   337f3d90b452        2 weeks ago         165MB
hyperledger/fabric-javaenv     latest                 cd459b218651        2 weeks ago         1.49GB
hyperledger/fabric-javaenv     x86_64-1.1.0-preview   cd459b218651        2 weeks ago         1.49GB
hyperledger/fabric-ccenv       latest                 82489d1c11e8        2 weeks ago         1.35GB
hyperledger/fabric-ccenv       x86_64-1.1.0-preview   82489d1c11e8        2 weeks ago         1.35GB
➜  chaincode-docker-devmode git:(master) ✗


{code}
 * Made sure the path is correct

{code:java}
➜  chaincode-docker-devmode git:(master) ✗ pwd
/Users/harit/bl/sources/hyperledger/fabric-samples/chaincode-docker-devmode
➜  chaincode-docker-devmode git:(master) ✗
{code}
 * Execute the command

{code:java}
➜  chaincode-docker-devmode git:(master) ✗ docker-compose -f docker-compose-simple.yaml up | tee out.log

{code}
and it fails at  
{code:java}
orderer | 2017-11-17 17:02:57.972 UTC [policies] Evaluate -> DEBU 303 Signature set satisfies policy /Channel/Orderer/SampleOrg/Readers [15/1936]
orderer | 2017-11-17 17:02:57.972 UTC [policies] Evaluate -> DEBU 304 == Done Evaluating *cauthdsl.policy Policy /Channel/Orderer/SampleOrg/Readers
orderer | 2017-11-17 17:02:57.972 UTC [policies] Evaluate -> DEBU 305 Signature set satisfies policy /Channel/Orderer/Readers
orderer | 2017-11-17 17:02:57.972 UTC [policies] Evaluate -> DEBU 306 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Orderer/Readers
orderer | 2017-11-17 17:02:57.972 UTC [policies] Evaluate -> DEBU 307 Signature set satisfies policy /Channel/Readers
orderer | 2017-11-17 17:02:57.972 UTC [policies] Evaluate -> DEBU 308 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Readers
orderer | 2017-11-17 17:02:57.972 UTC [orderer/common/deliver] deliverBlocks -> DEBU 309 [channel: myc] Received seekInfo (0xc42042de40) start:<specified:<> > stop:<specified:<> > from 172.18.0.5:40
946
orderer | 2017-11-17 17:02:57.972 UTC [fsblkstorage] newBlockfileStream -> DEBU 30a newBlockfileStream(): filePath=[/var/hyperledger/production/orderer/chains/myc/blockfile_000000], startOffset=[0]
orderer | 2017-11-17 17:02:57.973 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 30b Remaining bytes=[12010], Going to peek [8] bytes
orderer | 2017-11-17 17:02:57.973 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 30c Returning blockbytes - length=[12008], placementInfo={fileNum=[0], startOffset=[0], bytesOffset=[2]}
orderer | 2017-11-17 17:02:57.973 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 30d blockbytes [12008] read from file [0]
orderer | 2017-11-17 17:02:57.973 UTC [orderer/common/deliver] deliverBlocks -> DEBU 30e [channel: myc] Delivering block for (0xc42042de40) for 172.18.0.5:40946
cli | 2017-11-17 17:02:57.974 UTC [channelCmd] readBlock -> DEBU 020 Received block: 0
orderer | 2017-11-17 17:02:57.974 UTC [orderer/common/deliver] deliverBlocks -> DEBU 30f [channel: myc] Done delivering to 172.18.0.5:40946 for (0xc42042de40)
orderer | 2017-11-17 17:02:57.974 UTC [orderer/common/deliver] Handle -> DEBU 310 Waiting for new SeekInfo from 172.18.0.5:40946
orderer | 2017-11-17 17:02:57.975 UTC [orderer/common/deliver] Handle -> DEBU 311 Attempting to read seek info message from 172.18.0.5:40946
orderer | 2017-11-17 17:02:57.976 UTC [orderer/common/deliver] Handle -> WARN 312 Error reading from 172.18.0.5:40946: rpc error: code = Canceled desc = context canceled
orderer | 2017-11-17 17:02:57.976 UTC [orderer/common/server] func1 -> DEBU 313 Closing Deliver stream
cli | 2017-11-17 17:02:57.980 UTC [main] main -> INFO 021 Exiting.....
cli | 2017-11-17 17:02:58.049 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
cli | 2017-11-17 17:02:58.049 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
cli | 2017-11-17 17:02:58.052 UTC [grpc] Printf -> DEBU 003 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lo$kup peer on 127.0.0.11:53: no such host""; Reconnecting to {peer:7051 <nil>}
cli | 2017-11-17 17:02:59.054 UTC [grpc] Printf -> DEBU 004 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lo$kup peer on 127.0.0.11:53: no such host""; Reconnecting to {peer:7051 <nil>}
cli | 2017-11-17 17:03:00.761 UTC [grpc] Printf -> DEBU 005 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lo$kup peer on 127.0.0.11:53: no such host""; Reconnecting to {peer:7051 <nil>}
cli | Error: Error getting endorser client channel: error trying to connect to local peer: context deadline exceeded
cli | Usage:
cli | peer channel join [flags]
cli |
cli | Flags:
cli | -b, --blockpath string Path to file containing genesis block
cli |
cli | Global Flags:
cli | --cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
cli | --logging-level string Default logging level and overrides, see core.yaml for full syntax
cli | -o, --orderer string Ordering service endpoint
cli | --ordererTLSHostnameOverride string The hostname override to use when validating the TLS connection to the orderer.
cli | --test.coverprofile string Done (default ""coverage.cov"")
cli | --tls Use TLS when communicating with the orderer endpoint
cli | -v, --version Display current version of fabric peer server
cli |
cli exited with code 1{code}
The entire log is attached with the ticket

[^out.log]

 ",,denyeart,hhimanshu,lishuo5263,nickgaski,shreybhardwaj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/17 2:08 AM;hhimanshu;out.log;https://jira.hyperledger.org/secure/attachment/13363/out.log",,,,,,,,,,,,,,,,,,,,,,"1|hzynfr:",,,,,,,,,,,,,,,,,,,,,,denyeart,hhimanshu,lishuo5263,nickgaski,shreybhardwaj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/17 7:53 AM;nickgaski;The certs in the chaincode-docker-devmode library expired on Nov 7.  The certs have been refreshed and will not expire until 2027; so this is resolved.;;;","08/Jan/18 12:29 PM;denyeart;I believe this is resolved, marking Done.  Please re-open if anything remains.;;;","24/Jul/19 9:16 PM;shreybhardwaj;Hi did you find anything over this. 
Because I'm getting the same error. I'm working on the byfn and getting the same error. 

2019-07-24 11:48:43.323 UTC [grpc] Printf -> DEBU 003 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp 172.21.0.4:2181: getsockopt: connection refused""; Reconnecting to \{orderer.domainname.com:2181 <nil>}


Although the IP has not been set up by me 172.21.0.4. 

Error: failed to create deliver client: orderer client failed to connect to orderer.domain.com:2181: failed to create new connection: context deadline exceeded

I'm taking 2181 port from the  zookeeper for my kafka. 

 

Please help me to fix this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 1 channel, higher batchsize and default payload",FAB-7024,24006,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,18/Nov/17 3:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 1 channel, higher batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynfz:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add installation notes for Centos 7 native builds,FAB-7025,24007,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,mlesswing,mlesswing,18/Nov/17 4:07 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,31/Mar/18 9:34 PM,,,,,,,v1.1.1,v1.2.0,,fabric-docs,,,,0,Documentation,,,,,,"I was encouraged by the hyperledger-fabric mailing list to make a CR to update the docs with a ""Build on Centos"" section.",,mlesswing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyng7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mlesswing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,release-1.1,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 3 channel, default batchsize and default payload",FAB-7026,24008,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,18/Nov/17 4:18 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 3 channel, default batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyngf:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 3 channel, higher batchsize and default payload using OTE",FAB-7027,24009,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,18/Nov/17 4:31 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 3 channel, higher batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyngn:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Be able to dynamically update TLS server certificate,FAB-7028,24011,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,18/Nov/17 8:41 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,23/Nov/17 10:33 PM,v1.1.0,,,,,,v1.1.0,,,fabric-orderer,fabric-peer,,,0,,,,,,,"In times, we would want to update the TLS certificate of a server node such as a peer or an orderer.

 

Reasons could vary starting from the certificate is nearing expiration, or changing root TLS ca to adding a new SAN to the certificate because of some routing rule.

Currently there is no way to do that without a shutdown of the node, and that's too bad.

We should provide a way to update the TLS certificate on the fly.

 

[~mastersingh24]",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynh3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Nov/17 8:57 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/15577/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cummulated State Modifications,FAB-7029,24012,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,tbltzk,tbltzk,18/Nov/17 11:05 PM,23/Jan/20 7:16 AM,28/Oct/23 3:01 AM,23/Jan/20 7:16 AM,,,,,,,,,,fabric-peer,,,,0,chaincode,Golang,ledger,stale-item,state,,"This go chaincode does not, what you would expect
{code:java}
APIstub.PutState(""key"", []byte(""initial Value""))
 val, _ := APIstub.GetState(""key"")
 fmt.Println(""value from ledger"", string(val)){code}
The putState is not applied immediately, but only after the transaction!

!image-2017-11-18-15-06-13-189.png!

Suggested Improvement:
 Stub should provide an intermediate layer to keep track of state modifications *within a transaction*. Such that
{code:java}
x = getState(key);
x++ 
putState(key, x)
y=getState(key){code}
results in y = x+1 not x!",,muralisr,sykesm,tbltzk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/17 11:06 PM;tbltzk;image-2017-11-18-15-06-13-189.png;https://jira.hyperledger.org/secure/attachment/13365/image-2017-11-18-15-06-13-189.png",,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynhb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,muralisr,sykesm,tbltzk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/17 11:23 PM;muralisr;[~tbltzk] Per doc (e.g., https://github.com/hyperledger/fabric/blob/release/core/chaincode/shim/interfaces.go#L87 ) this is working as defined.

[~denyeart] [~manish-sethi];;;","18/Nov/17 11:32 PM;tbltzk;Ok, thx. Didn't read well there. Still I consider this a huge pitfall. What is the pattern to retrieve the value from the writeset instead?;;;","19/Nov/17 12:45 AM;tbltzk;Or more precise, an advanced GetState would go like this:
 # if not modified --> read from ledger
 # if already modified --> read from write set

Because this is what you usually want within a transaction;;;","23/Jan/20 7:16 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow Channel Readers to invoke chaincode that reads from the ledger,FAB-7030,24013,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,,denyeart,denyeart,19/Nov/17 12:52 AM,18/Jan/20 4:37 AM,28/Oct/23 3:01 AM,17/Jan/20 11:04 PM,,,,,,,,,,fabric-peer,,,,1,,,,,,,"If you are not a ChannelWriter you will not be able to invoke chaincode (propose) on an endorser, and therefore identities that are ChannelReaders but not ChannelWriters have no mechanism to call read-only chaincode functions.  Based on the role name, I would expect ChannelReaders should be able to call chaincode read-only functions.

Currently in 1.1 this can be achieved by overriding the Propose ACL to be something different than ChannelWriters.  This work item proposes that ChannelReaders should be able to call chaincode functions that read from ledger using the default configuration.

Option 1: Re-introduce a chaincode Query() function (it was there in 0.6 but not 1.0, removed in --FAB-1055--), which would only require you to be a ChannelReader to call chaincode read-only functions (functions that attempt to write in the context of a Query would immediately return an error). The Query() would also be more streamlined than Invoke() as the peer simulator would not need to generate a RWSet and the ProposalResponse would not include a RWSet.

Option 2: Set the Propose ACL to be ChannelReaders instead of ChannelWriters. If the chaincode simulation has writes, then we could additionally ensure that client is a ChannelWriter.",,binhn,denyeart,muralisr,tbltzk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6959,,,FAB-16146,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx0jb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,binhn,denyeart,muralisr,tbltzk,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Nov/17 1:07 AM;denyeart;[~binhn] [~muralisr] Would appreciate your thoughts, since I don't recall the reasons for removing Query() in 1.0.;;;","19/Nov/17 1:33 AM;binhn;[~denyeart] The thought here was that we shouldn't complicate things unnecessarily. The chaincode execution model doesn't dictate read or write, but it is up to the application logic, so we have 1 entry point Invoke, and the appropriate logic controls read and/or write.

The description above seems to argue about streamlining, but that is internal implementation , and we shouldn't surface that to the application programming model. Even if we introduced Query, what would prevent developers from coding queries as part of Invoke? So it would be better if we optimize based on the usage rather than additional controls.

Chaincode ACL is much more application specific, so we shouldn't attempt to impose one without ability for the application to reconfigure. ;;;","19/Nov/17 1:51 AM;muralisr;[~denyeart] also I'd note that fine-grained ACL (FAB-3621) - if and when released - would help better organize access policies so user can separate out proposal ACL from individual chaincode ACL. And within the chaincode each function can have its own ACL policy. ;;;","19/Nov/17 3:27 AM;yacovm;Why was it channel writers in the first place? To write you need to send a transaction to ordering.
 A chaincode simulation isn't a write, it's a read.

 

Is it possible to change it to channel readers?;;;","19/Nov/17 3:58 AM;muralisr;[~yacovm]  PUTs are intended writes.;;;","19/Nov/17 4:11 AM;denyeart;[~binhn] My primary objective is to allow channel readers to call chaincode that reads from the ledger, as the role name would imply.  The streamlining would be a side benefit.

[~yacovm] I see your point, but is confusing to users to change default behaviors between versions.  Plus why allow channel readers to call chaincode that does PutState().  While it is not actually writing to ledger yet, it gives them a false sense that they could write to ledger. Better to flag failure scenarios earlier than later in the transaction lifecycle in my opinion.

I thought Query() for channel readers (Gets allowed), and Invoke() for channel writers (Gets and Puts allowed), would be the most intuitive and compatible solution.;;;","19/Nov/17 4:48 AM;yacovm;{quote}[~yacovm] PUTs are intended writes.
{quote}
Not sure why this is in capital letters? this isn't HTTP...
{quote}[~yacovm] I see your point, but is confusing to users to change default behaviors between versions
{quote}
Though that's true, it's something they have no control of, and I doubt most of them are even aware of that. 
The channel creation sets all users as channel writers anyway, and I'm sure that only a few of the users actually change this policy to some orgs after the channel is created.
{quote}Plus why allow channel readers to call chaincode that does PutState().
{quote}
Well as you know, you don't actually need a peer to make a transaction, you can imitate a peer yourself having a client certificate, and send a transaction to the orderer.
(unless, we use [~adc] 's node types enforcement)

 
{quote}I thought Query() for channel readers (Gets allowed), and Invoke() for channel writers (Gets and Puts allowed), would be the most intuitive and compatible solution.
{quote}
 
I agree it's intuitive and I think that's what might should have been done in the 1st place instead of deprecating the Query(), however: 

 * If you extend the interface that the chaincode developer needs to implement, you make all previous code not being able to compile and now all users will need to rewrite their chaincodes or just implement a ""no-op"" Query().
 * Wouldn't it be odd that we deprecated Query and now we're bringing it back? My rule of thumb says that API changes are things that users hate, while they can't really feel a change that changes the default policy of chaincode proposals to channel readers.



 ;;;","19/Nov/17 5:39 AM;tbltzk;It's not too late to revert a wrong decision!

Better change now than dragging a flawed interface into the LTS version...;;;","20/Nov/17 1:10 AM;muralisr;[~tbltzk] [~denyeart] Taking a step back, the rationale behind one Invoke  API is this ...

""PutState"", ""GetState"" are building blocks with which we can define various high level Invoke functions.  Users decide how to use them and, if they want to, submit them as transactions. This is similar to web services, servlets, RPC calls etc that use  low level building blocks such as SQL select or update which are used to build these high level services. The services can call any of the low level read/write apis to do their work. Paraphrasing [~binhn],  would you want to restrict CC to use only GET (basically all the ""get"" calls [~yacovm] :-) ) in the Query call ?

I think we are conflating function with access control.

The ChannelReaders and ChannelWriters policies are at the bottom of this. Proposal being controlled by ""ChannelWriters"" policy begs the question ""what about read-only calls ?"" - seems odd one has to be a ""ChannelWriter"" to do what the chaincode developer knows to be read only call.

The problem with using ChannelWriters (among other things) is discussed in detail in FAB-3621.  The finer grained mechanism proposed there to specify who can do Proposal for a channel not only removes the confusion surrounding ""ChannelWriter"" semantics but also help users implement ACL at different levels (Proposal level and individual chaincode level) to suit the function.

Thoughts ?;;;","20/Nov/17 8:53 PM;denyeart;[~muralisr] I think you are suggesting that every deployment that wants to separate chaincode readers and writers should override the default ACL for Propose, and set the Propose ACL to be the identities that should be allowed to read from chaincode.  If that is our answer, it seems we should simply make the default for Propose to be Channel Readers as Yacov suggested, in order to eliminate the configuration step.

I realize that a small percentage of deployments will want to differentiate between Channel Readers and Channel 'Proposers', and therefore it is nice that you can specify 'Proposers' separately, I just think the overriding requirement will be to distinguish Readers from Writers and therefore think the default setup should support this, either by setting Propose ACL to be Channel Readers (Yacov suggestion) or by adding a new Query() function for Channel Readers (my original suggestion).

I've updated the title and description to be more aligned with the comments. Thoughts?

 ;;;","20/Nov/17 9:09 PM;yacovm;So, w.r.t option 2:
{quote}Option 2: Set the Propose ACL to be ChannelReaders instead of ChannelWriters.
{quote}
I'd add that we an do something more complex so lets add version (3):
 # Set the default policy for propose to channel readers.
 # After simulation, check the TXSimulator if the simulation has anything in the write set. If so - evaluate whether the user is a channel writer and either return an access denied or the data.

 

Edit: It's also worth to mention that if we adopt the MSP interface changes that are [proposed|https://docs.google.com/document/d/1FyvjMlBFasdFlOpjcaurNG8jYipHE8ENXfdbY122mdA/edit#], then we can do it without an overhead of twice the signature checks via taking the identity, turning it into a ValidatedIdentity, calling Verify() once to check the signature, and then calling twice SatisfiesPrincipal which should be then computationally ""cheap"" (please correct me if I'm wrong [~elli-androulaki] / [~adc] / [~ales] );;;","20/Nov/17 9:44 PM;denyeart;[~yacovm] I like that, I've updated Option 2 in Description.;;;","20/Nov/17 11:48 PM;muralisr;[~yacovm] [~denyeart] Seems ok for default policy to be ChannelReaders with the understanding that its the responsibility of the chaincode to put in second-level, stricter, ACL check if necessary (like the built-in system chaincodes do today). ...what do you think [~ales] [~adecaro] [~elli-androulaki] ?

bq. After simulation, check the TXSimulator if the simulation has anything in the write set. If so - evaluate whether the user is a channel writer and either return an access denied or the data.

We could generalize this so we associate a  writeset with a ""resource"" to make the treatment uniform (as opposed to going back to hard-coding ChannelWriters).;;;","21/Nov/17 6:17 AM;binhn;[~denyeart] Have you thought about something like linux filesystem  rwx=read/write/execute?  Calling a chaincode would be equivalent to execute on the channel, so ChannelExecute. ChannelRead/Write would only be applicable to transactions involving either read and/or write-set respectively. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide sample code for on-chain access control,FAB-7031,24014,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,tbltzk,tbltzk,19/Nov/17 7:00 AM,23/Jan/20 7:16 AM,28/Oct/23 3:01 AM,23/Jan/20 7:16 AM,,,,,,,,,,fabric-docs,fabric-samples,,,0,access-control,chaincode,docs-needed,documentation,stale-item,,"I often see chaincode for transfer of ownership like here [https://github.com/hyperledger/fabric-samples/blob/b99e1b8da2bc4d17f689c152078d96e8f6428a27/chaincode/fabcar/fabcar.go#L178-L194]
However, those samples do not indicate, how to control on-chain, that only the current owner can call this.

As a chaincode developer I want to see an example, how to do on chain access-control, possibly depending on the current world state or history.",,minollo,sykesm,tbltzk,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtv3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,minollo,sykesm,tbltzk,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/18 9:44 PM;tbltzk;Copied from the rocket chat, #fabric channel:
{quote}Todd Little: I think it would be quite reasonable to create ACLs in chaincode using a library and storing the access information in the world state. Using the client identity chaincode library (https://github.com/hyperledger/fabric/tree/master/core/chaincode/lib/cid) it would seem to be pretty straightforward to create a library using that library that accepts and manages an access control list maintained in the world state.
{quote}
This might be helpful for this kind of example;;;","29/Jun/18 12:18 AM;tbltzk;related to https://jira.hyperledger.org/browse/FAB-9081

seems like we should await v1.3 at least to see, how chaincode is supposed to access identity information. It will be really challenging to integrate identity mixer into it.;;;","23/Jan/20 7:16 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper Docker image build fails with 404 not found,FAB-7032,24015,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,heidecke,heidecke,19/Nov/17 4:13 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,23/Nov/17 6:50 AM,v1.0.4,v1.1.0-preview,,,,,DUPLICATE,,,fabric-build,,,,0,Docker,,,,,," 

During `make docker`, the zookeeper-image build fails on the URL: http://www.apache.org/dist/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz
h3. Build output:

 
{code:java}
Building docker zookeeper-image
docker build -t hyperledger/fabric-zookeeper build/image/zookeeper
Sending build context to Docker daemon 5.12kB
Step 1/15 : FROM hyperledger/fabric-baseimage:x86_64-0.3.2
---> c92d9fdee998
Step 2/15 : RUN set -x && git clone https://github.com/ncopa/su-exec /tmp/su-exec/ && cd /tmp/su-exec && make all && cp su-exec /usr/bin/
---> Using cache
---> a583cfddad19
Step 3/15 : ENV ZOO_USER zookeeper ZOO_CONF_DIR /conf ZOO_DATA_DIR /data ZOO_DATA_LOG_DIR /datalog ZOO_PORT 2181 ZOO_TICK_TIME 2000 ZOO_INIT_LIMIT 5 ZOO_SYNC_LIMIT 2
---> Using cache
---> e9dced9d482a
Step 4/15 : RUN set -x && useradd ""$ZOO_USER"" && mkdir -p ""$ZOO_DATA_LOG_DIR"" ""$ZOO_DATA_DIR"" ""$ZOO_CONF_DIR"" && chown ""$ZOO_USER:$ZOO_USER"" ""$ZOO_DATA_LOG_DIR"" ""$ZOO_DATA_DIR"" ""$ZOO_CONF_DIR""
---> Using cache
---> 555456f0fb0b
Step 5/15 : ARG GPG_KEY=C823E3E5B12AF29C67F81976F5CECB3CB5E9BD2D
---> Using cache
---> b05481797101
Step 6/15 : ARG DISTRO_NAME=zookeeper-3.4.9
---> Using cache
---> 8373de16542c
Step 7/15 : RUN set -x && cd / && curl -fsSL ""http://www.apache.org/dist/zookeeper/$DISTRO_NAME/$DISTRO_NAME.tar.gz"" | tar -xz && mv ""$DISTRO_NAME/conf/""* ""$ZOO_CONF_DIR""
---> Running in 44864cbb5bf6
+ cd /
+ curl -fsSL http://www.apache.org/dist/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz
+ tar -xz
curl: (22) The requested URL returned error: 404 Not Found

gzip: stdin: unexpected end of file
tar: Child returned status 1
tar: Error is not recoverable: exiting now
The command '/bin/sh -c set -x && cd / && curl -fsSL ""http://www.apache.org/dist/zookeeper/$DISTRO_NAME/$DISTRO_NAME.tar.gz"" | tar -xz && mv ""$DISTRO_NAME/conf/""* ""$ZOO_CONF_DIR""' returned a non-zero code: 2
Makefile:285: recipe for target 'build/image/zookeeper/.dummy-x86_64-1.1.0-preview' failed
make: *** [build/image/zookeeper/.dummy-x86_64-1.1.0-preview] Error 2
{code}
 ",,gregnotso,heidecke,KSM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6931,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynhj:",,,,,,,,,,,,,,,,,,,,,,gregnotso,heidecke,KSM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Nov/17 4:17 PM;heidecke;I apparently failed in my search (not used to gerrit + JIRA). Duplicate of FAB-6931.;;;","24/Nov/17 1:33 AM;gregnotso;i'm glad the issue is resolved for someone else and the duplicate fab is closed, but it still persists under this tag:

SHA-1: 132daddf1156a0c70429af2e8c3ca86bbdbf8c31
 * Merge ""FAB-6822 Prepare fabric for 1.1.0-preview release

how can i recover without pulling another git commit? should i open another fab? there's no answer to the issue on the rocket chat.

thx, greg;;;","16/Jul/18 6:36 PM;KSM;I am trying to create peer in hyperledger fabric. After executing make command i am getting following error.

$make

Makefile:279: recipe for target 'build/image/zookeeper/.dummy-x86_64-1.0.2' failed
make: *** [build/image/zookeeper/.dummy-x86_64-1.0.2] Error 2

curl: (22) The requested URL returned error: 404 Not Found

how this issue is resolved, I am not getting

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make gRPC keepalive parameters configurable for orderers,FAB-7034,24017,20025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,19/Nov/17 7:54 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,25/Nov/17 7:48 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"The keepalive settings for the common gRPC server are currently hardcoded in the core/comm package.  While the current 60 sec default is good for most situations, there are various intermediaries that may be in the communication path between clients/peers and the orderer nodes so need to add the ability to configure the keepalive parameters.

For the orderer, currently the only setting needed is the minimum permitted interval between client pings",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynhz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Nov/17 4:49 AM;mastersingh24;https://gerrit.hyperledger.org/r/15675;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make gRPC keepalive options configurable for peers,FAB-7035,24018,20025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,19/Nov/17 9:30 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,22/Nov/17 9:22 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"Currently, keepalive parameters for peer server endpoints and for client connections made by the peer are hardcoded.

The following settings need to be configurable:
 * minimum permitted interval for client pings on the peer endpoint
 * keepalive interval and timeout for connections to other peers
 * keepalive interval and timeout for connections to orderer nodes
 * minimum permitted interval for client pings to the events endpoint",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyni7:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Nov/17 5:30 PM;mastersingh24;https://gerrit.hyperledger.org/r/15625;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, default batchsize and default payload using OTE",FAB-7036,24019,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,20/Nov/17 1:11 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, default batchsize and default payload.{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynif:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and default payload using OTE",FAB-7037,24020,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,20/Nov/17 1:12 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynin:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, default batchsize and default payload using OTE",FAB-7038,24021,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,20/Nov/17 1:13 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, default batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyniv:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and default payload using OTE",FAB-7039,24022,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,20/Nov/17 1:16 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynj3:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker image for Kafka fails to build,FAB-7040,24023,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,cam.ross,cam.ross,20/Nov/17 1:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,23/Nov/17 6:49 AM,,,,,,,DUPLICATE,,,fabric-build,,,,0,,,,,,,"When building the fabric docker images from master, the Kafka image creation is failing.  The Docker.in file for this image is pointing to a distribution tarball that no longer exists (i.e. kafka_2.11-0.10.2.0.tgz) at the location specified.   I am able to build the image by changing the tarball version to kafka_2.11-0.10.2.1.tgz and updating the associated checksum.  ",macOs High Sierra.,cam.ross,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynjb:",,,,,,,,,,,,,,,,,,,,,,cam.ross,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 6:49 AM;mastersingh24;Fixed by https://gerrit.hyperledger.org/r/#/c/15629/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE main final  TPS aggregating should not ignore the fraction part of each sub thread TPS   ,FAB-7041,24024,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sunhwei,sunhwei,sunhwei,20/Nov/17 12:00 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,24/Nov/17 3:47 PM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Current PTE aggregating TPS calculate all sub-thread TPS , but it is only add the Int part ,the fraction part is ignored ,  it cause  the final aggregated TPS is exactly equal to the sum of all sub-thread TPS.    ",,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzynjj:",,,,,,Sprint 19 - Quality,,,,,,,,,,,,,,,,sunhwei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add efficient transaction uniqueness detection,FAB-7042,24025,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,20/Nov/17 12:24 PM,25/Feb/19 11:30 AM,28/Oct/23 3:01 AM,25/Feb/19 11:30 AM,,,,,,,Future,,,fabric-ledger,,,,0,Release-planning-1.2,,,,,,"Currently, in order to know whether a tx happened in ledger, the endorser calls GetTransactionByID() and ignore the returned transaction data by checking index and get tx from file storage (which is slow).

See [https://github.com/hyperledger/fabric/blob/master/core/endorser/endorser.go#L417.]

However, this is heavy for each tx to retrieve the whole tx data, with the aim is to detect whether there's one with the same tx id.

Would suggest to provide some light-weighted detection method.

By doing this, we would gain measurable performance improvement.",,baohua,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwzzr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Nov/17 12:25 PM;baohua;[~mastersingh24] [~muralisr] [~denyeart]

Any comments on this idea?

Thanks!;;;","20/Nov/17 12:36 PM;denyeart;You are right, there should be another ledger function to check that a transaction exists in the leveldb tx index, without actually retrieving the transaction from block storage.;;;","20/Nov/17 1:59 PM;baohua;Thanks, david.

Let's wait for more comments, if all support, i will start to fix it soon.;;;","21/Nov/17 12:31 AM;muralisr;[~baohua] sounds right to me too.;;;","19/Dec/17 2:38 PM;baohua;https://gerrit.hyperledger.org/r/#/c/16313/;;;","24/Sep/18 4:43 AM;denyeart;[~baohua] Do you still want to pursue this one?;;;","25/Sep/18 10:32 AM;baohua;[~denyeart], one maintainer yacov think this change might have few benefits.

Do you think it is worthy to have?

I can keep on updating or abandon based on your suggestions.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor gRPC keepalive code,FAB-7043,24026,20025,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,20/Nov/17 6:22 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 5:27 PM,,,,,,,v1.1.0,,,,,,,0,,,,,,,"In order to allow the various keepalive timeouts to be externally configured, need to refactor the keepalive config code.

The major change will be to change the core.comm#KeepAliveOptions structure and any code which consumes it.

While making the change, will also eliminate stuttering in the struct fields as well.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";21/Nov/17 2:54 AM;mastersingh24;7200",,3600,0,7200,200%,3600,0,7200,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynjr:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Nov/17 3:42 AM;mastersingh24;https://gerrit.hyperledger.org/r/15605;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor gRPC server configuration code,FAB-7044,24027,17641,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,20/Nov/17 7:37 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 5:27 PM,,,,,,,v1.1.0,,,,,,,0,,,,,,,"The code to create core/comm#GRPCServer instances originally only allowed for TLS-related configuration options to be set and internally set options for keepalive and message sizes.  Some code was later added to optionally set the keepalive options, but this is only used internally.   Given that we need to externally expose config options for keepalive and message size plus the fact that there are bound to be future config options required, we need to refactor the code such that there is a single config options struct where we can attach current and feature config options",,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";20/Nov/17 10:18 PM;mastersingh24;5400",,7200,1800,5400,75%,7200,1800,5400,Not a security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynjz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Nov/17 10:17 PM;mastersingh24;https://gerrit.hyperledger.org/r/15585;;;","20/Nov/17 10:28 PM;yacovm;{quote}plus the fact that there are bound to be feature config options required
{quote}
 

How can that work if we have a single gRPC server? or - what does ""feature"" mean?;;;","21/Nov/17 3:44 AM;mastersingh24;Corrected to ""feature"" to ""future"" above.  We actually have 3 gRPC servers in the peer today:
 * the endorser server
 * the chaincode server
 * the eventhub server

And of course the orderer has it's own gRPC server as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CI failed ,FAB-7046,24030,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,rameshthoomu,cbl,cbl,20/Nov/17 11:29 PM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,21/Nov/17 10:26 PM,,,,,,,v1.0.5,v1.1.0,,,,,,0,,,,,,,"See below errors in [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-end-2-end-x86_64/10734/console.log.gz.] It seems sth went wrong when pulling kafka image.

Creating network ""e2ecli_default"" with the default driver
Pulling kafka3 (hyperledger/fabric-kafka:latest)...
manifest for hyperledger/fabric-kafka:latest not found
ERROR !!!! Unable to pull the images 
Build step 'Execute shell' marked build as failure",,cbl,kchristidis,mastersingh24,nnao,phillipviana,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7040,FAB-7966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynkf:",,,,,,,,,,,,,,,,,,,,,,cbl,kchristidis,mastersingh24,nnao,phillipviana,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Nov/17 11:43 PM;mastersingh24;I think we might actually want to use 0.10.2.1 rather than a 0.11.x version

[~kchristidis] thoughts?;;;","21/Nov/17 1:06 AM;kchristidis;https://gerrit.hyperledger.org/r/c/15593/;;;","21/Nov/17 6:39 AM;nnao;http://www-us.apache.org/dist/kafka/ only contains the latest versions, so https://archive.apache.org/dist/kafka/ is better to use for the older versions;;;","21/Nov/17 12:01 PM;phillipviana;I am hitting the same problem trying to compile *latest*: v0.9.0.1 is no longer available {{as we can see here: [http://www-us.apache.org/dist/kafka|http://www-us.apache.org/dist/kafka/]}}

 
{quote}{{Step 2/10 : ENV SCALA_VERSION 2.11 KAFKA_VERSION 0.9.0.1 KAFKA_DOWNLOAD_SHA1 FC9ED9B663DD608486A1E56197D318C41813D326}}
 \{\{ ---> Using cache}}
 \{\{ ---> f2dc24a8d9e6}}
 {{Step 3/10 : RUN curl fSL ""http://www-us.apache.org/dist/kafka/0.9.0.1/kafka_$\{SCALA_VERSION}$\{KAFKA_VERSION}.tgz"" o kafka_$\{SCALA_VERSION}$\{KAFKA_VERSION}.tgz && echo ""$\{KAFKA_DOWNLOAD_SHA1} kafka_$\{SCALA_VERSION}$\{KAFKA_VERSION}.tgz"" | sha1sum -c - && tar xfz kafka_""$SCALA_VERSION""""$KAFKA_VERSION"".tgz C /opt && mv /opt/kafka_""$SCALA_VERSION""""$KAFKA_VERSION"" /opt/kafka && rm kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"".tgz}}
 \{\{ ---> Running in 3b839369abb4}}
 \{\{ % Total % Received % Xferd Average Speed Time Time Time Current}}
 \{\{ Dload Upload Total Spent Left Speed}}
 \{\{ 0 0 0 0 0 0 0 0 -::- -::- -::- 0}}
 {{curl: (22) The requested URL returned error: 404 Not Found}}
{quote};;;","21/Nov/17 1:44 PM;sheehan;I agree with [~nnao], the URL should be changed to [https://archive.apache.org/dist/kafka/] otherwise this will happen again in the future.;;;","22/Nov/17 2:59 AM;kchristidis;Any concerns of this biting us again in the future are overrated since FAB-7045 will ensure we're building the images only once. That said, I agree that switching to the archive URI is the way to go.;;;","22/Nov/17 3:14 AM;kchristidis;[https://gerrit.hyperledger.org/r/c/15599/]

[https://gerrit.hyperledger.org/r/c/15629/];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move deliver from orderer to fabric/common,FAB-7048,24032,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,21/Nov/17 12:21 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 12:38 PM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,,,,,,,"The fabric/orderer/common/deliver package will be moved to fabric/common/deliver and reworked as necessary to ensure it is compatible with both orderer and the peer, which be implemented in a subsequent subtask.",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynkv:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Nov/17 5:36 AM;wlahti;-[https://gerrit.hyperledger.org/r/#/c/15673/]-

New CR: https://gerrit.hyperledger.org/r/#/c/16005;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose deliver service on peer,FAB-7049,24033,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,21/Nov/17 12:22 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,08/Dec/17 12:27 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,The deliver service should be exposed on the peer to allow clients to retrieve blocks using the same mechanism as is possible on the orderer.,,baohua,jeffgarratt,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynl3:",,,,,,,,,,,,,,,,,,,,,,baohua,jeffgarratt,rickr,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/17 2:06 AM;wlahti;-[https://gerrit.hyperledger.org/r/#/c/15957/]-

New CR: https://gerrit.hyperledger.org/r/#/c/16009/;;;","07/Dec/17 3:41 PM;baohua;Only curious to understand what's the purpose here?

As all ledgers are at orderers, while peer doesn't have all.;;;","07/Dec/17 9:45 PM;wlahti;[~jyellick] added this to the description of FAB-6911, which I believe explains its benefit beyond just as a reliable event service: 

""This is doubly useful, in preparation for the addition of BFT ordering, and generally decreasing the trust the client places in the ordering service.  When connecting directly to the orderer to receive blocks, unless the client reimplements the peer functions of checking the hash chain, looking up the block validation policy, and checking the block validation policy against the orderer signatures, then the client is relying on the honesty of the OSN it connects to to return good blocks.  By adding the {{Deliver}} API to the peer, clients may use existing code invoked against the orderer, but exploit the trusted relationship between a client and its org's peers."";;;","07/Dec/17 10:19 PM;rickr;This API should have been a replacement for the event hub service. It's lacking in at least two ways over this previous API. There is no means to know the services is ready and connected until it receives the first block. Current EH API first delivered as Status block with a success to make sure the connection is fully established and from the then on would start receiving blocks. This allowed SDK to easily make this synchronous.

Second this API does not offer an option to return the next block is sees added, but always returns the last block on the ledger regardless if that block may be a year old. This also has the consequences that if for example bad network connections result in reestablishment of the connection it will see that same block repeatedly if there were no new blocks added.

It was first suggested that to me that the SDKs should address these short comings. I don't think each SDKs should have to do this. I plan for the JSDK to expose it for what it is. :) Let applications deal with this behavior.

Given a chance to vote I'd go back to the old API as I think it was better suited for an eventing service. It only lacked one needed feature that would allow it to start receiving blocks from a specific block number.;;;","07/Dec/17 11:25 PM;baohua;[~wlahti], thanks, that addressed my question.

It would be nice to add FAB-6911 as a related issue.

Btw, about the check peer's liveness problem by [~rickr], i do not think getting a block is a good solution. We may let peer provide some specific API to get its health status, thoughts?

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable a more forgiving Kafka version setting in orderer.yaml,FAB-7054,24064,24030,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,21/Nov/17 3:53 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,23/Nov/17 12:34 AM,,,,,,,v1.0.5,v1.1.0,,fabric-orderer,,,,0,kafka,,,,,,"When configuring a kafka based ordering service node, one of the configuration options is {{Kafka.Version}}. We currently limit the valid values of this setting to the values exposed by the underlying {{sarama}} Kafka client library.

Kafka recently stopped publishing Kafka {{0.10.2.0}} and instead is now publishing {{0.10.2.1}}. Fabric users might attempt to set the {{Kafka.Version}} property to {{0.10.2.1}}, but the orderer will reject that value, as it does not exist in the {{sarama}} library.

The {{Kafka.Version}} corresponds better to the log message format, rather than the actual Kafka broker version (see {{log.message.format.version}} in the Kafka documentation for explanations on why these might be out of 'sync'). In addition, while Kafka itself does not change the log message format on 4th digit version changes, the underlying {{sarama}} library might use the 4th digit to work around issues that it might exist in a specific release of Kafka.

Instead of trying to come up with a complicated explanation of how to set the {{Kafka.Version}} properly, we will allow the user to set the version to any 3 or 4 digit Kafka version, and will then automatically map it to the appropriate underlying version in the {{sarama}} library. For example:

* {{0.10.2}} is interpreted as {{0.10.2.0}} 
* {{0.10.2._n_}} is interpreted as {{0.10.2.0}}  (where _n_ is an int)
* {{0.10.3}} is error (need to match at least the third digit)
* {{0.10}} is error (need at least 3 digits)
",,kchristidis,sanchezl,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynlz:",,,,,,,,,,,,,,,,,,,,,,kchristidis,sanchezl,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Nov/17 10:26 PM;kchristidis;I really like this approach. Great write-up as well.;;;","22/Nov/17 4:02 AM;sanchezl;After thinking about it, I'm relaxing my own rules:
 * {{0.10.2}} is interpreted as {{0.10.2.0}}
 * {{0.10.2._n_}} is interpreted as {{0.10.2.0}} (where _n_ is an int)
 * {color:#14892c}{{0.10.3}} is interpreted as {{0.10.2.0}} (latest supported version less than specified version){color}
 * {color:#14892c}{{0.10}} is interpreted as {{0.10.0.0}} (up to user to specify more segments if needed)
{color}
 * {{0.11 }}is err (until we support that version, because the version is too new)

 ;;;","22/Nov/17 4:36 AM;kchristidis;https://gerrit.hyperledger.org/r/c/15643/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting up the dev env doc should mention libtool installation,FAB-7056,24067,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sheehan,sheehan,sheehan,21/Nov/17 5:26 AM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,01/Dec/17 10:53 PM,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,,"Attempting to follow instructions at [http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html] may fail on macOS when running
{code:java}
make dist-clean all
{code}
if Libtool has not been installed. The doc should include Libtool under the prereqs.",,carlosho17,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2854,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynmn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,carlosho17,sheehan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Dec/17 4:32 AM;carlosho17;It should be mentioned in the docs that the same happens in Ubuntu 16.04 , and the cure for it is *apt install libtool libltdl-dev*

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, default batchsize and default payload using OTE",FAB-7058,24069,21295,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,21/Nov/17 6:56 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:14 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 1 channel, default batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynn3:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and default payload using OTE",FAB-7059,24071,21295,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,21/Nov/17 6:57 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:14 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynnb:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, default batchsize and default payload using OTE",FAB-7060,24072,21295,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,21/Nov/17 6:58 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,07/Dec/17 3:14 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 3 channel, default batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynnj:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and default payload using OTE",FAB-7061,24073,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,21/Nov/17 6:59 AM,20/Jul/18 11:14 PM,28/Oct/23 3:01 AM,18/May/18 12:17 AM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,ContinuousDelivery,quality,SystemTestcase,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and default payload{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10081,,,,,,,,,"1|hzynnr:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support kafka 1.0 in fabric,FAB-7063,24200,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,baohua,baohua,21/Nov/17 1:19 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,18/Apr/18 10:27 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,,"Kakfa 1.0.0 is released, hope we can support it soon.
 
[http://www-us.apache.org/dist/kafka]",,baohua,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-89,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyno7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,qiang0723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/18 10:27 AM;baohua;https://gerrit.hyperledger.org/r/#/c/17121/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows build of fabric fails with gotools error and missing config.json,FAB-7064,24300,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,sudheesh001,sudheesh001,21/Nov/17 3:59 PM,23/Jan/20 7:16 AM,28/Oct/23 3:01 AM,23/Jan/20 7:16 AM,,,,,,,Future,,,fabric-build,,,,0,stale-item,Windows,,,,,"I've been trying to setup `fabric` on a Windows system and followed the steps in the documentation for the pre-requisites and cloned the latest code from gerrit. While running the build I receive an error about config.json file not present in gotools. I am attaching the trace of the command here.

 

{{$ make dist-clean all}}
{{find: ‘/src/github.com/hyperledger/fabric/core/chaincode/shim’: No such file or directory}}
{{FIND: Parameter format not correct}}
{{Unable to find image 'hyperledger/fabric-baseimage:x86_64-0.4.2' locally}}
{{x86_64-0.4.2: Pulling from hyperledger/fabric-baseimage}}
{{9fb6c798fa41: Pulling fs layer}}
{{3b61febd4aef: Pulling fs layer}}
{{9d99b9777eb0: Pulling fs layer}}
{{d010c8cf75d7: Pulling fs layer}}
{{7fac07fb303e: Pulling fs layer}}
{{90da40a89164: Pulling fs layer}}
{{0ad767d382a3: Pulling fs layer}}
{{5b6844bd5c3b: Pulling fs layer}}
{{b8c3ee398c82: Pulling fs layer}}
{{8ce4a9cf2e05: Pulling fs layer}}
{{2ad3fb81c00a: Pulling fs layer}}
{{d010c8cf75d7: Waiting}}
{{7fac07fb303e: Waiting}}
{{90da40a89164: Waiting}}
{{0ad767d382a3: Waiting}}
{{5b6844bd5c3b: Waiting}}
{{b8c3ee398c82: Waiting}}
{{8ce4a9cf2e05: Waiting}}
{{2ad3fb81c00a: Waiting}}
{{3b61febd4aef: Download complete}}
{{9d99b9777eb0: Verifying Checksum}}
{{9d99b9777eb0: Download complete}}
{{d010c8cf75d7: Verifying Checksum}}
{{d010c8cf75d7: Download complete}}
{{7fac07fb303e: Verifying Checksum}}
{{7fac07fb303e: Download complete}}
{{9fb6c798fa41: Verifying Checksum}}
{{9fb6c798fa41: Download complete}}
{{90da40a89164: Verifying Checksum}}
{{90da40a89164: Download complete}}
{{0ad767d382a3: Verifying Checksum}}
{{0ad767d382a3: Download complete}}
{{5b6844bd5c3b: Verifying Checksum}}
{{5b6844bd5c3b: Download complete}}
{{8ce4a9cf2e05: Verifying Checksum}}
{{8ce4a9cf2e05: Download complete}}
{{9fb6c798fa41: Pull complete}}
{{3b61febd4aef: Pull complete}}
{{9d99b9777eb0: Pull complete}}
{{d010c8cf75d7: Pull complete}}
{{7fac07fb303e: Pull complete}}
{{90da40a89164: Pull complete}}
{{0ad767d382a3: Pull complete}}
{{5b6844bd5c3b: Pull complete}}
{{b8c3ee398c82: Verifying Checksum}}
{{b8c3ee398c82: Download complete}}
{{b8c3ee398c82: Pull complete}}
{{8ce4a9cf2e05: Pull complete}}
{{2ad3fb81c00a: Verifying Checksum}}
{{2ad3fb81c00a: Download complete}}
{{2ad3fb81c00a: Pull complete}}
{{Digest: sha256:a6ea2ea1fae3fec71b90aa1f8c9502ac2529848809eebfec02cf399003a1c857}}
{{Status: Downloaded newer image for hyperledger/fabric-baseimage:x86_64-0.4.2}}
{{container_linux.go:262: starting container process caused ""chdir to cwd (\""/opt/gopath/src/github.com/hyperledger/fabric/gotools\"") set in config.json failed: no such file or directory""}}
{{docker: Error response from daemon: oci runtime error: container_linux.go:262: starting container process caused ""chdir to cwd (\""/opt/gopath/src/github.com/hyperledger/fabric/gotools\"") set in config.json failed: no such file or directory"".}}
{{make: *** [build/docker/gotools] Error 127}}

 ",,mastersingh24,sudheesh001,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynof:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,sudheesh001,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 6:46 AM;mastersingh24;I'll leave this as a bug, but I believe we actually updated the docs to specify that building on Windows is not currently supported outside of a Vagrant / Linux VM environment.

Running the Fabric Docker images is supported though;;;","23/Jan/20 7:16 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
different timestamp of the chaincode will make chaincode fingerprint different,FAB-7065,24301,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,yihuang518,yihuang518,21/Nov/17 6:24 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/May/18 2:46 AM,,,,,,,Unverifiable,,,fabric-peer,,,,0,Usability,,,,,,"I have two machines, one machine is for org0(let's say server A) and one is for org1(server B), I have a chaincode and copy it to these two machines.  Then I installed the chaincode on org0's peers  from server A and do the same thing to org1s from server B, and then I initialized the chaincode on one of peers on org0,  I did the query on one of the peer on org1, I got the error as following ,

Error: Error endorsing query: rpc error: code = Unknown desc = Error executing chaincode: Could not get deployment transaction from LSCC for mycc:1.0 - Get ChaincodeDeploymentSpec for mycc/mychannel from LSCC error: chaincode fingerprint mismatch data mismatch - <nil>

I login each peer server and find out the md5sum of the chaincode binary in directory /var/hyperledger/production/chaincodes/  are different between org0 and org1. 

And I did many testing by using command line and java sdk, and I find out if you want to make all the  chaincode binary the same with each other, you should make sure you load the same chain code, that means in the same directory with the same time stamp. Even you move the chain code away and copy back, you will get fail because of the time stamp issue. It does not make sense, different orgs should install the chaincode on their own machine. I think it is a bug. 

If I was wrong ,please correct me, if you can tell me what else will impact the fingerprint, it will be very helpful, thanks so much.

 ","Linux server :Linux ubuntu 4.10.0-38-generic #42~16.04.1
Java sdk: 1.0.1
fabric: 1.0.1~1.0.4
I am doing the command line testing by using e2e-cli",baohua,bitdream,ChristopherFerris,denyeart,kchristidis,mastersingh24,muralisr,yihuang518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7434,,,FAB-5476,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynon:",,,,,,,,,,,,,,,,,,,,,,baohua,bitdream,ChristopherFerris,denyeart,kchristidis,mastersingh24,muralisr,yihuang518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 12:01 PM;denyeart;[~muralisr] What is your opinion?;;;","27/Nov/17 3:48 PM;yihuang518;I think the chaincode name+content+version+chaincode path is the same ,the fingerprint should be the same. Our case is to send the chaincode to different orgs, and they will install the chaincode by using their own private key and certificate by themself, but the timestamp issue make the fingerprint mismatch, so we can not work together. The only way to solve the problem is collect all the orgs private key and certificate  on one side and install the chaincode, it is impossible, they won't do it.;;;","09/Dec/17 11:38 PM;mastersingh24;[~muralisr] [~denyeart] 
There seem to be a number of items somewhat related to this error.  It all seems to boil down to the fact that I believe the intent of the Install design is that everyone should install the same package and not be building their own package from source.  This is exacerbated by the fact that we allow you to optionally combine package and install when running the install command (and it does not help that all of our samples do this as well).

Now I've looked through all the code and I think it might be possible to deterministically generate the fingerprint given identical input parameters, but I'm not sure that we should actually do this given the intent described above.
;;;","10/Dec/17 1:01 AM;muralisr;[~mastersingh24] let me first address where this ""timestamp"" could come from.

The targz computation in the CLI itself tries to do the sane thing by ordering the files and nulling out all transients in the tar entry. This includes file timestamps in the file headers in the targz
{code:java}
        //Let's take the variance out of the tar, make headers identical by using zero time
        oldname := header.Name
        var zeroTime time.Time
        header.AccessTime = zeroTime
        header.ModTime = zeroTime
        header.ChangeTime = zeroTime
        header.Name = packagepath
        header.Mode = 0100644
{code}
 
{quote}I think it might be possible to deterministically generate the fingerprint given identical input parameters,
{quote}
So [~mastersingh24] I think we already do this for CLI. Do let me know if I'm missing something.

Assuming above is true, the following statement needs to be clarified
{quote}I find out if you want to make all the chaincode binary the same with each other, you should make sure you load the same chain code, that means in the same directory with the same time stamp
{quote}
[~yihuang518] Based on the above analysis, if all orgs have installed the identical chaincode with identical path, then I'd expect at least CLI based installs to work - *even if the timestamps on the files are different.* If that does not work we'd need to fix it. Can you check that please ? If that fails, it would be helpful to provide a sample with detailed steps so we can see whats going on.

Now, for the SDKs, we should make sure SDKs do the sane thing with their targz computation. One thing I noticed is that the node SDK sets the ""effective_date"" timestamp in the ChaincodeDeploymentSpec
{code:java}
fabric-client/lib/Client.js:		chaincodeDeploymentSpec.setEffectiveDate(clientUtils.buildCurrentTimestamp()); //TODO may wish to add this as a request setting
{code}
This would definitely make two separate installs fail even if everything else remains same. As suggested in the comment, one fix would be to let the user provide the ""effective date"" timestamp. Assuming CLI works, one workaround would be to install using CLI and do the rest with the SDKs ?

Finally... the intent of the fingerprint generation was to use the deploymentspec as is, without discarding fields. This way we don't get involved with language semantics (for example mapping of filesystem path to classpath in Java). I'd hesitate to pull out fields from the deployment spec and compute fingerprint (like the suggested _name+content+version+chaincode path_).;;;","10/Dec/17 1:11 PM;baohua;[~muralisr], agree.

IMHO, it should be OK to calculate the fingerprint with `name+version+path+content`.

`version` already covers the info at temporal dimension.

 ;;;","11/Dec/17 4:31 PM;mastersingh24;[~muralisr] - I'll take a look at the SDKs as well, but I did find a way to reproduce this with the CLI. If the user/group who owns the files is different, then you will also get the ""data mismatch"" error. Looks like adding Uid and Gid to the list of header fields fixes this:
{code:java}
//Let's take the variance out of the tar, make headers identical by using zero time
oldname := header.Name
var zeroTime time.Time
header.AccessTime = zeroTime
header.ModTime = zeroTime
header.ChangeTime = zeroTime
header.Name = packagepath
header.Mode = 0100644
header.Uid = 500
header.Gid = 500
{code}
 ;;;","11/Dec/17 9:39 PM;muralisr;[~mastersingh24] that's interesting. I did look into that a bit (followed from another related JIRA) but thought it'll default to 0 uniformly.  I must have missed something. But good to know, Gari... do you want me to fix it ?;;;","12/Dec/17 5:55 PM;mastersingh24;[~muralisr] - I can take a stab at it as well.  Up to you.  Created FAB-7434 to track;;;","12/Dec/17 10:04 PM;muralisr;[~mastersingh24] either way works.;;;","15/Dec/17 12:38 PM;yihuang518;Hi Srinivasan Muralidharan
I have done a simple test by useing command line on fabric 1.0.4 last month, 
1. do the test by useing e2e-cli example
2. in the script.sh, we will install the chaincode on two peer, after installing the first peer, copy the chaincode away and sleep for 1 or 2 minutes(longer than 1 minute, 15 seconds is successful ,I don't know why...)
3. copy the chaincode back and make sure the timestamp is not the same
4. install the new chaincode on the second peer
5. init the chaincode on the first peer and invoke the seconde peer, you will get the error.
You can do the test to verify it. And I am pretty sure it can be reprocduced by using java sdk, becuase I have done the test on java sdk for more than 100 times. I found the problem on javasdk , then I did the test on command line. Please correct me if I am not correct.
;;;","16/Dec/17 12:06 AM;muralisr;Thanks for the detailed steps [~yihuang518].

Expanding the steps a little bit to make sure I'm not missing anything
 # do the test by useing e2e-cli example
 # install CC on peer1
 # copy the chaincode away and sleep for 1 or 2 minutes
 # copy the chaincode back and make sure the timestamp is not the same
 # install the new chaincode on the peer2
 # init the chaincode on the first peer and invoke the seconde peer, you will get the error.

Can you validate that please ?;;;","08/Jan/18 12:03 PM;denyeart;[~yihuang518] Reminder, can you review prior comment?;;;","28/Jan/18 12:28 AM;muralisr;Assigning to self for investigation. Will try to recreate using above instructions.;;;","28/Jan/18 9:42 AM;muralisr;[~yihuang518] I followed the steps above and could not recreate on latest master.

 

Modified script.sh as follows

 
{code:java}
echo ""copy off the examples folder""
cp -r /opt/gopath/src/github.com/hyperledger/fabric/examples /tmp/

#get the timestamps of chainode_example02 dir
ls -ltr /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02

## Install chaincode on Peer0/Org1 and Peer2/Org2
echo ""Installing chaincode on org1/peer0...""
installChaincode 0
echo ""Sleeping...remove examples folder and copy from saved""
sleep 120
echo ""Awake...""

#get the timestamps of chainode_example02 dir
ls -ltr /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02

echo ""Install chaincode on org2/peer2...""
installChaincode 2

#Instantiate chaincode on Peer0/Org1
echo ""Instantiating chaincode on org1/peer0...""
instantiateChaincode 0

#Query on chaincode on Peer0/Org1 ..... instantiated on peer0/org1 and querying on peer2/org2 .... should fail if timestamp issue
echo ""Querying chaincode on org2/peer2...""
chaincodeQuery 2 100
{code}
 

 The logs show a timestamp difference and no query failure

 
{code:java}
copy off the examples folder
total 12
-rw-r--r-- 1 root root 3165 Jan 28 00:26 chaincode_example02_test.go
-rw-r--r-- 1 root root 5078 Jan 28 00:26 chaincode_example02.go
Installing chaincode on org1/peer0
....
....

Sleeping...remove examples folder and copy from saved
Awake...
total 12
-rw-r--r-- 1 root root 3165 Jan 28 00:31 chaincode_example02_test.go
-rw-r--r-- 1 root root 5078 Jan 28 00:31 chaincode_example02.go

Install chaincode on org2/peer2...
...
...
Querying chaincode on org2/peer2...
===================== Querying on PEER2 on channel 'mychannel'... =====================
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org2MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org2.example.com:7051
Attempting to Query PEER2 ...3 secs
2018-01-28 00:31:55.053 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-01-28 00:31:55.053 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-01-28 00:31:55.053 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-01-28 00:31:55.053 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-01-28 00:31:55.053 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-01-28 00:31:55.053 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AA6070A6608031A0B08FBB3B4D30510...6D7963631A0A0A0571756572790A0161
2018-01-28 00:31:55.053 UTC [msp/identity] Sign -> DEBU 007 Sign: digest: 85BFB80200046A6059BA08EB39294FA2C8AAEB78A4046BA4C68E0438AAD0A4A3
Query Result: 100
2018-01-28 00:32:04.202 UTC [main] main -> INFO 008 Exiting.....
===================== Query on PEER2 on channel 'mychannel' is successful =====================
 
...
...
{code}
 

This seems to follow your steps closely and I cannot recreate the error (on latest master to reemphasize). Please let me know the above recreate steps are correct. Would be helpful if you can try on latest master as well.
 ;;;","06/Apr/18 2:42 AM;ChristopherFerris;lowered priority and marked unverified since [~muralisr] could not reproduce.;;;","22/May/18 2:46 AM;kchristidis;Been dormant for too long, closing. If the issue persists, please reopen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modifying chaincode example enccc_example.go and documentation for the encryption/decryption of transaction data,FAB-7066,24401,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bmos299,bmos299,bmos299,21/Nov/17 11:19 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,27/Nov/17 10:42 PM,v1.1.0,,,,,,v1.1.0,,,fabric-crypto,,,,0,Security,,,,,,"h2. The original task provided an example chaincode for application security, and defined and implemented an interface of a library that an application developer could use to enhance proposals/transactions with certain encryption-based confidentiality mechanisms.   This task simplified the example to clarify encryption, decryption, sign, and verify operations.",,bmos299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynov:",,,,,,,,,,,,,,,,,,,,,,bmos299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Nov/17 10:42 PM;bmos299;[https://gerrit.hyperledger.org/r/#/c/15631/]

[FAB-7066] Modifying the enccc example chaincode

The enccc_example.go was modified to clearly show the user the crypto function(s) being available for transactional data that has transient data passed for operations to include: - encrypt - decrypt - sign - verify The patch set removed the 'PUT' and 'GET' parameters for sample clarity. The README.md was also modified and the go tests modfied to test the modified and new functions added.

Change-Id: I16b7894c1118cc7b9f722801ffe3a113be5dbece Signed-off-by: Barry Mosakowski <barry_moz@yahoo.com>;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - update Builder script in fabric-smoke-test CI job,FAB-7068,24415,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,22/Nov/17 2:16 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 10:37 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,update builder (running smoke tests) script in fabric-smoke-tests-verify and merge job to trigger build just executing make ci-smoke command.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynvj:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 10:37 AM;rameshthoomu;patch has been submitted and merged. now verify and merge fabric-smoke test job configured with `make ci-smoke`.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtering blocks in the deliver service,FAB-7069,24416,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,22/Nov/17 4:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Jan/18 5:08 PM,,,,,,,,,,fabric-peer,,,,1,A&D,,,,,,"This analysis and design task is intended to satisfy the requirements of FAB-7088. Please refer to that item for a clear picture of what we're hoping to achieve. 

The discussion regarding the filtering of blocks began in FAB-5481. The previous decision to create a new type, FilteredBlock, was made in the context of using the eventhub  (and similarly designed Channel Service) to deliver blocks to clients. Now that the peer will implement deliver, which will be used in place of the eventhub to notify clients on a per channel basis, I'd like to reopen the discussion of how blocks should be filtered in the event that peer wishes to do so. 

One relevant piece of implementation detail I'd like to call out is that the deliver service currently sends back a response with the following definition:
{code:java}
message DeliverResponse {
    oneof Type {
        common.Status status = 1;
        common.Block block = 2;
    }
}{code}
The two filtering options that have been proposed so far (via FAB-5481):
 # use the FilteredBlock proto defined via FAB-5481 and add it as a type to the DeliverResponse
 # use the same Block proto but filter out fields",,C0rWin,denyeart,holocron,jeffgarratt,jyellick,kchristidis,mastersingh24,muralisr,rickr,troyronda,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6911,,,,,,,,,,,,,,,,,,,,,,FAB-7419,,,FAB-7088,FAB-5481,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynvr:",,,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,holocron,jeffgarratt,jyellick,kchristidis,mastersingh24,muralisr,rickr,troyronda,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 6:52 AM;jyellick;The overarching question seems to be: Should the peer be in the business of filtering blocks, period?

There is certainly some utility in it, but, in the way described in FAB-5481, the filtering is effectively being used as an access control, trying to expose a subset of transaction data for security reasons, rather than simply an optimization on the amount of data sent to the client.

When the {{Deliver}} service was originally conceived, it seemed likely that at some point in the future, it might be enhanced to only return a subset of the block structure.  In particular, the scenario of returning only block headers (and block metadata) was considered for a thin client which wished to keep a record of the hash chain for auditing purposes later, but did not need to full block contents.  This was however thought of as an optimization, rather then security enforcement.

If we conclude that we should be filtering blocks, then I think that re-using the {{Block}} proto, and stripping out the 'filtered' information is sensible (option 2 in the description).  By definition, a filtered block is always a subset of a block, so it's not obvious what we would gain with a new proto message.

On the other hand, adding a {{FilteredBlock}} type to the {{Deliver}} interface {{DeliverResponse}} seems like it's introducing a bit of an odd peer dependency into the atomic broadcast protos.  The {{Deliver}} service definition is agnostic to the block contents, so adding a different structure which exposes fabric-peer specific structures like say, chaincode events, seems very wrong to me.;;;","05/Dec/17 12:57 AM;wlahti;[~muralisr], as the originator of FAB-5481, we definitely need your input if you can spare some time in the next few days. 

[~yacovm], you were fairly active in the discussion of FAB-5481; I'd appreciate your input as well when you have a moment. ;;;","05/Dec/17 1:40 AM;yacovm;My personal opinion is that:
 * If we use the Deliver API to send events, then everything is ""fair game"" and we can make the deliver API return more types than it currently does
 * Sending a custom event is more secure than nullifying fields, because the event you send in the first place doesn't contain the fields you want to nullify out, and you may take advantage of compile time type checks that enforce you to not send the data you wish to filter out.

I'm fine with [~jyellick]'s idea as well.;;;","05/Dec/17 7:31 AM;muralisr;[~jyellick] [~yacovm] I'd say filtereing is lightweight both in amount of data and ACL requirements and believe has some value from user point of view.
The delivery approach to events may influence implementation details but not those basic requirements the item was written for I'd think. x

What do you think [~denyeart] [~mastersingh24] ?

My 2c :  if we are going to have some filtered blocked, its good to have a separate type so (1) user doesn't have to test fields and (2) for future expansion of data in the event type.
;;;","05/Dec/17 8:49 PM;denyeart;I agree with the filtering requirement for both security and optimization reasons.

I am fine with using the filtered event structure that was already defined/debated in FAB-5481.;;;","05/Dec/17 10:01 PM;denyeart;[~wlahti] I think the next design question is how do clients register for filtered events versus regular block events.  Did you and [~jeffgarratt] have a design proposal for that part?  I think this is what [~binhn] was alluding to when he said it makes sense to have common implementation logic across orderer and peer, but the public API name and signature may be slightly different based on different requirements that clients have for orderer vs peer.;;;","06/Dec/17 3:40 AM;jeffgarratt;I have difficulty reasoning about this feature wrt to the actor who receiving the value.  The way the associated feature is written it seems to be in the context of a fabric client, though I do not think this is perhaps who cares in this scenario (at least not how the feature is written).  In addition, a client can still request any block it wishes through the qscc.  I am concerned that we are conflating security and optimization in the context of this feature, which I don't think we should.  In general I am against filtering in the deliver as it breaks the pipeline concept that is afforded by the deliver service, and which I think could be leveraged to provide this function independent of the peer/orderer.  This is to say I would in general approach this problem with an application layer based approach, allowing the application to make the filtering decisions independently of the peer/orderer.;;;","06/Dec/17 3:59 AM;yacovm;{quote}In addition, a client can still request any block it wishes through the qscc.
{quote}
The idea is that in v1.1 you can disable this via a custom policy ([~muralisr] 's ACL work) and then you won't be able to do that anymore. 
To complete the picture, I assume that there should be some matching access control in the orderer side (perhaps - ensure whoever calls deliver is not a client via [~adc] 's new role types? though, can this mess up the channel reconfiguration flows or even channel creation? [~jyellick] wdyt? ) so the client won't be able to pull blocks from the orderer;;;","06/Dec/17 4:34 AM;wlahti;This is the part of Jeff's comment I think warrants discussion before proceeding:

""This is to say I would in general approach this problem with an application layer based approach, allowing the application to make the filtering decisions independently of the peer/orderer."";;;","06/Dec/17 6:31 AM;jyellick;From an orderer perspective, we have ACLs, via the {{/Channel/Readers}} and {{/Channel/Writers}} policies for {{Deliver}} and {{Broadcast}} respectively (which in turn traverse the config tree to the more familiar policies, like {{/Channel/Application/Readers}}.  For v1.0, the peer chose to use these orderer policies as a sane default in many places, but more granularity was required, so, the ACL work from [~muralisr] was born.

I would expect that the peer would implement its own ACLs for {{Deliver}} (and not rely on {{/Channel/Readers}}), and would coordinate them with the ACLs on functions like {{QSCC.GetBlockByNumber}}.  So, I don't see securing clients from retrieving full block contents as a hopeless exercise.  In fact, I would think this is a fairly easy thing to accomplish.

Since you asked about it specifically, today, channel reconfiguration flows are typically done directly through the orderer.  However, I would suggest performing the flow against the peer is superior, as the peer has been maintaining the hash chain, validating the configuration changes, and usually has a trusted relationship with the client, so retrieving the configuration from the peer is probably best.

My concern with the proposal for filtering events is largely related to the differences which would develop between the orderer and peer implementations of {{Deliver}}.  To me, one of the biggest advantages of exposing {{Deliver}} on the peer _exactly as the orderer does_ is that clients do not have to write any special code and may re-use their existing code to connect to the {{Deliver}} service.  In fact, a client could be written such that at runtime, it could execute against the orderer directly or against some locally deployed peer, depending on the trust assumptions in the network.  it If we bifurcate {{Deliver}} into an orderer version, and a peer version, then unless we are very careful, we risk losing this primary benefit of orderer/peer agnostic clients.

For a simple transformation, like removing all transactions and returning only the block header, this seems like a fairly trivial operation that the orderer could implement as well as the peer with nearly zero overhead.  For more complex transformations, such as removing everything in the transactions but the txids, it might be something which the orderer could support, but is something we would have to consider more carefully.  If the {{Deliver}} service were to begin returning protos which discuss chaincode specific concepts like chaincode events, then I see this is a complete no-go for the ordering service, and there is definitely a bifurcation in {{Deliver}} function.;;;","06/Dec/17 11:09 AM;denyeart;Adding [~mastersingh24] and [~binhn] to the watch list.

Let’s split the discussion into requirement and implementation.

*REQUIREMENT*

The requirement is for clients to receive block events which indicate txids and valid/invalid status of each, or to receive a transaction event for a given txid that you have submitted to understand if it was validated/invalidated.  This is one of the most fundamental requirements a client has given the asynchronous nature of transaction submission.

On top of that there is a security requirement such that certain clients should not see metadata or data for transactions they did not submit.

Additionally, there is an optimization requirement such that unnecessary data is not sent to clients that typically just need to know the valid/invalid status of submitted transactions.

In my opinion, this is not a case of conflating various requirements.  Each of the requirements independently point to the same solution - an ability to send clients filtered block events or filtered transaction events.

Why is this an important requirement for peer rather than something that can be solved by an external application layer?  I’d suggest two reasons:
1) The requirement to get transaction validation/invalidation status from peer is relevant to almost every Fabric deployment
2) Given that securing access to peer functions via ACL has generally been agreed to and implemented already, and given that the ACL mechanism is via MSP policies residing in the channel configuration, it is only logical that block event vs filtered event ACL leverage this infrastructure, rather than delegate it to an external application layer that doesn’t implicitly know about these policies and MSPs.

*IMPLEMENTATION*

I agree with the objective of a single Deliver API and implementation across orderer and peer.  I also agree with the pipeline concept where capabilities build on top of each other. This doesn’t imply that an external application layer is the solution for filtering however.

It seems we can keep block Deliver API consistent on orderer and peer, and ADDITIONALLY offer a new DeliverFilteredBlocks API on peer.  Internally the DeliverFilteredBlocks implementation would sit on top of the Deliver implementation where blocks can be filtered and sent out upon blocks becoming available in peer's ledger. This preserves the code re-use and pipelining objectives. Deliver and DeliverFilteredBlocks can each have their own ACL and response objects, meeting the security and optimization requirements.  Concerning the response object structure - while there is something to be said for leveraging the same Block structure for each response object, my opinion is that the deeply nested Block structure would only get in the way of clients that are simply looking for txid validation/invalidation status, and for this reason I’m in favor of a simplified FilteredBlock response object.

Separately, a RetrieveTransactionStatus API could provide an even more streamlined and secure solution, where a client registers for a single txid and waits for the validation/invalidation status from peer (with some timeout).  The peer would only send a client transaction status for transactions that the client had submitted. This provides implicit security and therefore the ACL could be more wide open relative to the Deliver and DeliverFilteredBlocks APIs. This being said, I’m not sure of the original design intent for SDKs registering for all block events vs registering for individual transactions.  Presumably to reduce the number of registrations that peer has to manage?  If this is the case the RetrieveTransactionStatus API idea could be deferred.;;;","06/Dec/17 1:32 PM;jyellick;[~denyeart]

{quote}
Concerning the response object structure - while there is something to be said for leveraging the same Block structure for each response object, my opinion is that the deeply nested Block structure would only get in the way of clients that are simply looking for txid validation/invalidation status, and for this reason I’m in favor of a simplified FilteredBlock response object.
{quote}

Could you please post a proto message definition for the filtered block in your proposal? Looking back at FAB-5481, there are certainly some fields (such as the {{channel_id}} which would be unnecessary.  There is also the {{filtered_action}} field, which I can't seem to find the reasoning behind.;;;","06/Dec/17 4:56 PM;mastersingh24;{quote}In general I am against filtering in the deliver as it breaks the pipeline concept that is afforded by the deliver service, and which I think could be leveraged to provide this function independent of the peer/orderer.  This is to say I would in general approach this problem with an application layer based approach, allowing the application to make the filtering decisions independently of the peer/orderer.{quote}

As [~denyeart] stated, this is exactly what we are trying to avoid.  There is no reason why the peer cannot / should not provide an API / service for simply streaming transactions and their status.  The original proposal for this was to provide a new channel event service (the existing event service has numerous issues - i.e. no concept of channels, uses it's own format, etc).  Work was well underway on this when the suggestion was made to leverage the Deliver Service that is implemented by the orderer instead.   At that time, it seemed that a few of us also believed that we could leverage the common block format (as is the case in the current Deliver Service) as the mechanism for carrying what we keep referring to as ""filtered"" blocks.

So then we start to argue about the filtered block format and then that devolves back to arguing about the actual requirement in the first place.  Enough is enough on this.   

I really cannot tell what we are actually arguing about here because there seem to be multiple discussions here.  I believe that the intent of this JIRA item was to discuss how to implement ""filtered"" blocks with the assumption that the service which provides these is the Delivery Service.  It seems that there are comments in here questioning doing ""filtered blocks"" as well.;;;","06/Dec/17 7:32 PM;denyeart;[~mastersingh24] Yes, the intent of this Jira is to determine how to implement ""filtered blocks"", given that we now have a Deliver service on peer for blocks.  My proposal is to have a sister API called DeliverFilteredBlocks (or potentially more simply DeliverBlockTransactionsStatus) which internally re-uses much of the same code under Deliver.

[~jyellick] Given that the primary requirement and most typical use case is to receive status of submitted transactions, I would be in favor of simplifying the response payload down to just the block number and an array of txids and tx validation codes.  Adding other information such as filtered_action with chaincode events is a slippery slope. If you need information other than tx status, it seems you should register for the actual blocks via Deliver.;;;","06/Dec/17 8:41 PM;C0rWin;I think that we can add to the `SeekInfo` message an additional field say a `IsFiltered` to indicate whenever we would like to get FilteredBlock or a regular one:

{code}
message SeekInfo {
    enum SeekBehavior {
        BLOCK_UNTIL_READY = 0;
        FAIL_IF_NOT_READY = 1;
    }
    SeekPosition start = 1;    // The position to start the deliver from
    SeekPosition stop = 2;     // The position to stop the deliver
    SeekBehavior behavior = 3; // The behavior when a missing block is encountered
    bool is_filtered = 4;
}
{code}

And we can also add a new message type to include filtered block in response

{code}
message DeliverResponse {
    oneof Type {
        common.Status status = 1;
        common.Block block = 2;
        common.FilteredBlock = 3;
    }
}
{code}

In this way IMO the adding support for ""filtered blocks"" will be less intrusive as we also won't have to add an additional API to `AtomicBroadcast`.;;;","06/Dec/17 11:29 PM;denyeart;[~C0rWin] That also seems feasible. In your proposal the ACL would have to be on the requested content rather than on the API itself, but I think that could be worked out.
Instead of a boolean for is_filtered, there could be an enum with various degrees of ""filtering"" the response supported, I can think of legitimate use cases for:
- FilteredBlock with txids/statuses only (necessary to fulfill current requirement)
- FilteredBlock with txids/statuses and limited header info (e.g. creator would be useful)
- Full Block but  RWSets nilled out (this is the 1.0 event hub behavior)
- Full Block (default orderer behavior);;;","07/Dec/17 12:16 AM;C0rWin;[~denyeart] I think it make sense to introduce enum in favor of boolean as this will provide greater flexibility.;;;","07/Dec/17 12:17 AM;mastersingh24;I don't think that we need to add an additional Type to DeliverResponse.  I think our best approach is limiting things to using the Block and then filtering out information.
I will say that while the initial filter we are going to implement is a ""transactionID / status only"" filter, there may be additional filters in the future (for example we might want the full block minus RWSets).
So I'd suggest that rather than the* bool is_filtered* suggested by Artem that we add an enum called
*FilterType* (with say *TRANSACTION_STATUS* as the first / only filter type) and then add
*FilterType filter_type* to the SeekInfo message
;;;","07/Dec/17 12:18 AM;kchristidis;Spoke too soon above, and had a change of heart. Take two. Artem, if we do this we expose a type to the AtomicBroadcast service that the ordering service will never (at least for the foreseeable future?) use, no? David's suggestion of introducing a DeliverFilteredBlocks API on the peer strikes me as a better separation of concerns in that regard.

I will try to sketch that out a bit later today and post back here – will be a good check for me to see if I'm missing something.;;;","07/Dec/17 12:24 AM;kchristidis;(Off-topic: I don't care about JIRA's lack of Markdown support, I only want it to give me a popup message - like Gerrit/GitHub does - that lets me know that someone has posted a comment since I last loaded the page. Feels like I'm ignoring what's being posted, when in reality I just didn't see these posts because they were posted between my loading the page and posting my comment.);;;","07/Dec/17 12:43 AM;C0rWin;{quote}
Spoke too soon above, and had a change of heart. Take two. Artem, if we do this we expose a type to the AtomicBroadcast service that the ordering service will never (at least for the foreseeable future?) use, no? David's suggestion of introducing a DeliverFilteredBlocks API on the peer strikes me as a better separation of concerns in that regard.

I will try to sketch that out a bit later today and post back here – will be a good check for me to see if I'm missing something.
{quote}

[~kchristidis] I do not think there is much difference with this regard, since adding a new API to AtomicBroadcast, which will never be used in near future within ordering service has exactly same impact. I just think that adding an enumeration to indicate the type will be be less intrusive as from ordering service perspective won't change that much, we will just need to make sure to add a check we are serving correct type.

Honestly, I'm not against adding new API to the AtomicBroadcast, just seems a bit strange to me that ordering service will have to support it.;;;","07/Dec/17 10:43 AM;kchristidis;{quote}I will try to sketch that out a bit later today and post back here – will be a good check for me to see if I'm missing something.
{quote}

So just to make this a bit more concrete, imagine the following definition under {{protos/peer}}:


{code:java}
syntax = ""proto3"";

import ""common/common.proto"";
import ""orderer/ab.proto"";

option java_package = ""org.hyperledger.fabric.protos.peer"";
option go_package = ""github.com/hyperledger/fabric/protos/peer"";

package peer;

message FilteredBlock {
    ...
}

message SeekInfo {
    enum FilterType {
        FOO = 0;
        BAR = 1;
        BAZ = 2;
    }
    FilterType filter = 1;
    ab.SeekInfo seek_info = 2;
}

message DeliverResponse {
    FilteredBlock filtered_block = 1;
    ab.DeliverResponse deliver_response = 2;
}

service Events {
    rpc Deliver(stream common.Envelope) returns (stream DeliverResponse) {}
}

{code}

So, the peer implements both {{peer.EventsServer}} and {{ab.AtomicBroadcastServer}} but only exposes the {{peer.Deliver}} RPC. If no filter is specified, the peer simply routes the call to the {{ab.Deliver}} RPC implementation and returns the response to the caller as is. Otherwise, it scrubs the response, places into a {{peer.DeliverResponse}} message (by setting {{peer.DeliverResponse.filtered_block}}) and returns it to the caller.

This provides a way to _extend_ the {{ab.Deliver}} RPC without messing with it directly. This is more or less Dave's idea (or at least the way I perceived it), augmented with Artem's modifications.

If you like it, cool, but I'm honestly more concerned about any flaws this proposal may have. What are we overlooking, what are breaking, what can we be doing better, etc. Ideally there is there a solution out there that allows us to keep `ab.proto` free of references to peer-specific objects, and involves less code than this one.;;;","07/Dec/17 2:39 PM;jeffgarratt;I would also propose for comparative purposes an application layer option that I believe would require no change to fabric. 

See https://jira.hyperledger.org/browse/FAB-7367.;;;","07/Dec/17 4:12 PM;mastersingh24;[~jeffgarratt] - https://jira.hyperledger.org/browse/FAB-7367?focusedCommentId=35970&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-35970;;;","07/Dec/17 4:19 PM;mastersingh24;[~kchristidis] - I'm not sure there are any major issues with your proposal, although if we are going to go down this route I'm not sure that the new ""peer event service"" actually needs to extend the AB protos.
Seems like we basically end up sharing backend code but don't necessarily need to actually share the service definition(s).  There are a few types which could possibly be moved to the common protos (e.g. ab.SeekInfo) but other than that I'm not sure why the peer would need to implement anything other than the Events service you described above.
So the net-net is that we can share some backend processing code.
Some of the ACL becomes a little trickier because now we'll need to have access control for different types of filters but that's probably fairly manageable.;;;","07/Dec/17 7:48 PM;denyeart;I agree with the structuring that Gari proposes.;;;","08/Dec/17 6:36 AM;kchristidis;{quote}There are a few types which could possibly be moved to the common protos (e.g. ab.SeekInfo) but other than that I'm not sure why the peer would need to implement anything other than the Events service you described above.{quote}

Could you clarify this?

The way I look at it, we get component reuse by having the peer implement {{ab.DeliverServer}}. But we need additional message types so as to support filtering. Thus we need the peer to also implement {{peer.EventServer}}. All {{peer.EventServer}} RPCs get routed to the {{ab.DeliverServer}} implementation. Post {{ab.DeliverServer}}, they get scrubbed/transformed according to the filter, and they are returned on the {{peer.Events}} stream.;;;","09/Dec/17 12:09 AM;rickr;If there is not a specific block type I don't think just not having some fields is a good design.  The application should know when it gets a block event what it is (_filtered_ vs _full_ ) and what expect rather than a field is not set. 

Besides knowing that the transaction has been completed successful or not,  applications use  the chaincode events in the SDK to take actions when they are present in a block/transaction. It's  used quite al ot ( I get question on it ) A filtered implementation with out those I think would be very limiting.;;;","09/Dec/17 1:57 AM;mastersingh24;[~kchristidis] - I might have partially misinterpreted what you wrote. Looks like you are saying that the peer would only expose a single RPC:
{code:java}
service Events {
    rpc Deliver(stream common.Envelope) returns (stream DeliverResponse) {}
}
{code}
And looking at the code I see how this would all work (I think).;;;","09/Dec/17 3:10 AM;kchristidis;{quote}Looks like you are saying that the peer would only expose a single RPC.
{quote}
Exactly. I'm suggesting that the peer implements both the {{ab.Deliver}} and this {{peer.Deliver}} RPC, but only exposes the later. I've drawn a quick sketch of the interactions here: [https://user-images.githubusercontent.com/14876848/33777738-f75a2ee2-dc13-11e7-88ba-09ed6d200be4.png]

Notice the asterisk in Step 3, which brings me to my next question:

How do we handle authorization _exactly_? Is this sorted out already (perhaps via a namespace in the {{Resources}} part of the {{Config}} tree), or is this still TBD? I suspect that this is related to this quote of yours:
{quote}Some of the ACL becomes a little trickier because now we'll need to have access control for different types of filters but that's probably fairly manageable.
{quote};;;","09/Dec/17 4:54 AM;mastersingh24;[~wlahti]  - you need any help on this one?  I've got a pretty good idea how to get the basic of this done if need be and happy to help

[~kchristidis] - yeah - we'll need to figure out the ACL stuff - but I think it's feasible once we get the basic flow working end to end;;;","12/Dec/17 3:01 AM;jeffgarratt;After discussions between myself ([~jeffgarratt]) and [~wlahti], [~kchristidis], we aggregated the comments and suggestions into a separate design proposal which per our estimation is complete and implementable (i.e. ready for voting).  This is NOT to say there is concurrence amongst the aforementioned  that this is the right design approach.  Let us know if we missed something, and feel free to ask questions.  Please feel free to comment on the A&D proposal at https://jira.hyperledger.org/browse/FAB-7419.;;;","20/Jan/18 5:08 PM;denyeart;Done in FAB-7419.;;;",,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 1 channel, default batchsize and higher payload using OTE",FAB-7070,24417,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:12 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 1 channel, default batchsize and higher payload (10k)
{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynvz:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 1 channel, higher batchsize and higher payload using OTE",FAB-7071,24418,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 1 channel, higher batchsize and higher payload(10k)
{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynw7:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 3 channel, default batchsize and higher payload using OTE",FAB-7072,24419,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:32 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 3 channel, default batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynwf:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to a solo orderer on 3 channel, higher batchsize and higher payload using OTE",FAB-7073,24420,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to a solo orderer on 3 channel, higher batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynwn:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, default batchsize and higher payload using OTE",FAB-7074,24421,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 3 kafka brokers, 3 zookeepers on 1 channel, default batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynwv:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and higher payload using OTE",FAB-7075,24422,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:34 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 3 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynx3:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, default batchsize and higher payload using OTE",FAB-7076,24423,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 3 kafka brokers, 3 zookeepers on 3 channel, default batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynxb:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 3 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and higher payload using OTE",FAB-7077,24424,21294,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:35 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 3 orderers, 3 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynxj:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, default batchsize and higher payload using OTE",FAB-7078,24425,21295,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:14 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 1 channel, default batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynxr:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and higher payload using OTE",FAB-7079,24426,21295,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:37 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 1 channel, higher batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynxz:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, default batchsize and higher payload using OTE",FAB-7080,24427,21295,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:38 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:13 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 3 channel, default batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyny7:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Send 30000 txs to 6 orderers, 5 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and higher payload using OTE",FAB-7081,24428,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,22/Nov/17 5:39 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/May/18 12:17 AM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,ContinuousDelivery,quality,SystemTestcase,,,,"{color:#000000}Send 30000 txs to 12 orderers, 3 kafka brokers, 3 zookeepers on 3 channel, higher batchsize and higher payload{color}(10k)",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10081,,,,,,,,,"1|hzynyf:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""fabric-ca-server init"" always generate a default config file.",FAB-7082,24430,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,asuchit,asuchit,22/Nov/17 2:17 PM,04/May/19 12:30 PM,28/Oct/23 3:01 AM,,,,,,,,,,,,,,,1,,,,,,,"Command :

fabric-ca-server init -b admin:adminpw --ca.name ""RootCA"" --csr.hosts ""xxx.xxx.xxx.xxx"" --port 7055 --tls.enabled

 

It will generate fabric-ca-server-config.yaml. It is generated first time and specified some of the configs in command line so file should be generated with these configs.

This file should contain as follows :

port: 7055 ({color:#d04437}Wrong:{color} {color:#ff0000}Always have 7054{color})

tls:
   # Enable TLS (default: false)
   enabled: true ({color:#d04437}Wrong:{color} {color:#ff0000}always have false{color})

ca:
   # Name of this CA
   name: RootCA ({color:#d04437}Wrong:{color} {color:#ff0000}always empty{color})

csr:
   hosts:

    - computerName ({color:#14892c}working{color})
     - localhost ({color:#14892c}working{color})

    - xxx.xxx.xxx.xxx ({color:#d04437}Wrong:{color} {color:#ff0000}not present{color})",,asuchit,nyet,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7092,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynyn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asuchit,nyet,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 12:22 AM;smithbk;Yes, I was thinking of trying to do this in a generic way, but there is no way with the golang viper package to write out a structure as yaml and also preserve comments, and I think having comments in the yaml config file is pretty important.  See https://github.com/go-yaml/yaml/issues/132 for considerations.;;;","23/Nov/17 12:05 PM;asuchit;Than How is ""-b admin:adminpw"" section updated in yaml file ?

 

registry:

  # Contains identity information which is used when LDAP is disabled
  identities:
    - name: admin
      pass: adminpw;;;","04/May/19 12:23 PM;nyet;Which causes other problems: if the {{ca-server}} is run later with a different {{\-b}}, it does not override {{registry->identities}}

Also, this bug should probably moved to a FABC bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use dep for dependency management,FAB-7083,24431,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,22/Nov/17 8:19 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,14/Mar/18 5:22 AM,,,,,,,v1.2.0,,,fabric-build,fabric-ca-build,,,0,hygiene,,,,,,"fabric and fabric-ca both currently use govendor for 3rd party dependency management.  While govendor has served it's purpose, there are other tools which should be evaluated.

[dep|https://github.com/golang/dep] seems to be the leading candidate to become the standard Go dependency mgmt tool so it should be the top alternative we consider.",,baohua,davidkhala,fredbi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10887,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynyv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,davidkhala,fredbi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Feb/18 6:52 PM;mastersingh24;I ran a quick smoketest using *dep* and for the most part it works.  The issue we have is that the amcl package used by idemix cannot be imported using *dep*.  The problem is that when using amcl you actually generate part of the package via a python script once you've fetched the code.;;;","04/Mar/18 7:34 PM;mastersingh24;NOTES:
- viper (viperutil), yaml (configtxgen), protobuf (configtxlator/protolator) packages had to be pinned to old revisions;;;","13/Mar/18 8:57 PM;mastersingh24;https://gerrit.hyperledger.org/r/19113;;;","15/Mar/18 1:29 PM;davidkhala;is it also recommended to use go ``dep`` to manage packages in golang chaincode?;;;","28/Jun/18 6:42 AM;baohua;Golang's dep management is not settled down yet.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle the invocation of the Init function,FAB-7086,24434,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ales,ales,22/Nov/17 11:29 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 3:15 AM,,,,,,,WON'T FIX,,,,,,,0,review-needed,,,,,,,,ales,binhn,C0rWin,denyeart,elli-androulaki,jyellick,muralisr,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzynzb:",,,,,,,,,,,,,,,,,,,,,,ales,binhn,C0rWin,denyeart,elli-androulaki,jyellick,muralisr,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 12:36 AM;ales;h1. Problem

The Init function of a chaincode is supposed to be called when the chaincode is instantiated (or upgraded). With the new tree-based cc lifecycle, Init is no longer called as part of a chaincode deploy/upgrade (nor could it since deploy/upgrade no longer are endorser transactions producing a RWSet).
h1. Solution approach

Remove support to invoke the Init function of a chaincode.

Pros:
 * the Init function encourages an anti-pattern: the cc developer may wrongly assume that the Init function is always invoked on any peer and so local Initialization may be performed inside the Init function (whereas as we know the Init function is only called on the node that receives the deploy/upgrade request)
 * the deploy flow would be greatly simplified
 * if a cc developer decided to expose a function for initial setup, they can do so
 * if a cc developer decided to expose a function for initial setup, it would be guaranteed that its invocation is checked against the cc's endorsement policies (as it is the case for any other cc function) as opposed to treating Init as a special function

Cons:
 * there is no longer any guarantee that if the chaincode is instantiated, the Init function has been invoked; if the cc developer requires that guarantee, they can achieve it by leveraging MVCC checks (e.g. by introducing a read dependency)

h1. Other approaches and why they are not desirable

A possible alternative would be one where we try to force atomicity between the config update tx that deploys/upgrades a chaincode and the endorser tx that contains the initial rwset. This atomicity could be achieved by
 * setting a flag when the config update tx is committed
 * refusing any invocation of the chaincode while that flag is set
 * clear that flag when the Init endorser tx is committed

The flag may be stored in a protected namespace of the ledger (e.g. LSCC's) or in the config tree itself, requiring another config udpate to clear it.

This approach is not desirable because, in order to cater for the infrequent case in which a chaincode developer requires a special initialization function, we introduce additional flags and complicate the deploy/upgrade process.
h2.  ;;;","23/Nov/17 12:43 AM;ales;[~jyellick], [~yacovm], [~denyeart], [~manish-sethi], [~aambati], [~elli-androulaki], [~angelo.decaro], [~muralisr] pls comment;;;","23/Nov/17 1:01 AM;jyellick;To me, this really makes the chaincode interface cleaner.  The notion that there was a special, only chaincode-to-chaincode invokable {{Init}} function which had different rules from other chaincode invocations strikes me as inconsistent and unnecessary.  Especially as users seem to already be confused by the existing semantics, treating it as a standard chaincode invocation makes sense to me.

Although I'm obviously in favor, I'd also like to invite input from [~jeffgarratt] who has weighed in on this issue before with some points for retaining the {{Init}} function.

I'm also adding the review-needed label.  I realize this is a sub-task, and not a feature, but as it's an architectural decision it seems appropriate.  If there's some other documented process we should be following, I'd love to hear about it.;;;","23/Nov/17 3:46 AM;binhn;-1

First, this change can't be a sub-task of something else. It is a change in the programming model that impacts all chaincode developers, so we should propose it as appropriate to allow people a chance to comment and contribute. 

Second, the description is not complete and incorrect. We should include background why we got here and why we don't need init. Statement such as ""there is no longer any guarantee that if the chaincode is instantiated, the Init function has been invoked"" requires explanation for readers to understand. It's been working this way since OBC. And ""the Init function encourages an anti-pattern"" is incorrect as we architecturally specified that chaincode runs only on endorsers, not all peers. This is misinformed.

Last, we need to capture the purpose of Init as it was designed to do in the programming model, and specify the compatibility for the change as this is a minor release that we can't tell people that their chaincodes no longer work.

So I strongly recommend the author to create a new JIRA or google doc proposing the changes and invite the Fabric community to review and comment. 

 ;;;","23/Nov/17 4:37 AM;jyellick;> First, this change can't be a sub-task of something else. It is a change in the programming model that impacts all chaincode developers, so we should propose it as appropriate to allow people a chance to comment and contribute.

I'm not sure what the process around something like this is.  I think [~ales] opened this as a sub-task, because it is related to the lifecycle work in the current parent work item of FAB-6042, but recognizes that this is a departure from the current architectural model, and created this item explicitly so that people could comment on this separately.  If there is some official documented process for how this should have been opened, I'd love to learn about it.

> Second, the description is not complete and incorrect. We should include background why we got here and why we don't need init. Statement such as ""there is no longer any guarantee that if the chaincode is instantiated, the Init function has been invoked"" requires explanation for readers to understand. It's been working this way since OBC.

I'll let Ale update the description, but for those who might simply be following this thread, the basic problem is as follows.  Chaincode is not necessarily installed to all orgs, and sometimes, an org's permission must be required to deploy a chaincode in a channel, even though that org does not have the chaincode.  So, the group which approves deploying the chaincode cannot necessarily generate the RW set for that chaincode, and the group which can generate the RW set cannot necessarily authorize the deployment of that chaincode.  Because of this, the old model of bundling the approval to deploy, along with the the result of invoking {{Init}} on the target chaincode is problematic.

> And ""the Init function encourages an anti-pattern"" is incorrect as we architecturally specified that chaincode runs only on endorsers, not all peers. This is misinformed.

I do not believe that is what Ale was attempting to convey.  This has actually been a problem since the OBC days when chaincode was available on all peers.  The notion of {{Init}} intuitively conveys to developers that they may expect that the {{Init}} function is called in their local chaincode instance before other methods are invoked.  However, this is of course very incorrect for multiple reasons.  First, a peer which is running the chaincode may never have {{Init}} invoked (if it is not chosen to be part of the endorsement set).  Secondly, even if {{Init}} is called for the chaincode, if the chaincode container restarts, any local side effects of {{Init}} are lost.   Of course any ledger affects of {{Init}} will be reflected through the network, but this appears to be a common source of confusion for developers.

> Last, we need to capture the purpose of Init as it was designed to do in the programming model, and specify the compatibility for the change as this is a minor release that we can't tell people that their chaincodes no longer work.

Certainly, this is something we should discuss, and one of the reasons for opening this JIRA.  I would point out, that this is an opt-in change, that any change in chaincode behavior would occur only after modifying the application channels to enable the new v1.1 capabilities, so a user may safely upgrade their binaries to v1.1 without any incompatiblity.;;;","23/Nov/17 8:09 PM;muralisr;[~jyellick] [~ales] After giving it thought, to me the core problem here is one of semantics. The intent of the ""Init"" was ""on Instantiation"" and not  ""on Initiailization"". It gives the opportunity for the some data (or metadata) to be set at the time of the chaincode coming alive on the channel. To draw a loose parallel, a bit like the metadata we put on the genesis block when creating the chain.

Thinking of the method as ""OnInstantiation"" instead of ""Init"" will clear the air around confusion as to when that method will be used.

Viewed in that light, I believe there is some value to having this - or something like this. It provides some direction and best practices for use cases that need it instead of having to stuff it Invoke with the need to call a ""init"" argument before anything else.

If we grant that, we now need a RW set for the OnInitialization metadata. And if we admit _that_ , the natural way to implement that would be as a method on the chaincode.

This brings us right back to the need to call that atomically (would we split the genesis block creation into two with a ""create"" TX and a ""SetMetadata"" TX) ? 

It may be expedient to just remove the ""Init"" method to make the config-based chaincode instantiation easier but IMO, this actually brings out the concerns with the approach.;;;","23/Nov/17 9:29 PM;ales;Thanks [~jyellick] for the answers above. [~binhn]: just to reiterate:
 * I have witnessed first-hand the fact that Init encourages cc developers to make mistakes since I've seen  developers overriding Init countless times to perform some local initialization in the hope that it would be executed on every active chaincode;
 * this is indeed a change in the programming model, but one that is linked to a larger change in the deployment model, which is why it's a sub-task of FAB-6042

[~muralisr], [~binhn]: may you please weigh in on the proposed alternative approach? That is, if they so require, chaincode developers can achieve exactly what they achieve today by implementing an initialization function and - if atomicity is required - introduce a read dependency. Though there is overhead, it is minimal (one read dependency per tx that needs to check against initialization status).;;;","23/Nov/17 9:42 PM;muralisr;[~ales] Sounds like you overlooked my comment above where I attempt a rationale for the ""init"" function (your comment above reads as though you hadn't seen it...).;;;","23/Nov/17 10:54 PM;ales;Ah sorry [~muralisr], I have indeed missed your comment - my window hadn't refreshed after Jason's latest comment - apologies. Will read, digest and respond. Thx!;;;","23/Nov/17 11:19 PM;ales;> The intent of the ""Init"" was ""on Instantiation"" and not ""on Initiailization""
 Agreed, that's what our current Init does (and so at least we agree it's incorrectly named).

As to whether it is required to set additional metadata atomically: I can't say. FWIW I can only report from the PoCs I've seen, none of which required that feature.

Basically, given that FAB-6042 has been approved, I only see 2 options:
 # remove init (this fab's proposal)
 # add init via a separate transaction and introduce support to guarantee atomicity (-Yacov's proposal-, as described above by Yacov for the sake of completeness);;;","23/Nov/17 11:39 PM;yacovm; I would like to hear what proposals [~binhn] and [~muralisr] have such that:
 * When we associate a chaincode to a channel, we set an endorsement policy
 * The policy can be signed by any number of parties in the channel
 * It is possible to setup the channel such that such a policy *has* to be signed by *specific* and *different* parties in the channel;;;","24/Nov/17 10:42 AM;muralisr;[~yacovm] [~ales] Actually an alternate approach has been discussed on and off in various places. Collecting them together here.

+Changes to fabric+
 * add a ""signatures"" field to Proposal proto
 * add validation using signatures in the proposal agains a policy in lscc and vscc
 * a new ""peer proposal"" command with ""create and sign"" sub-options (equivalently in SDK)

+Workflow for instantiate and upgrade+
 * peer chaincode package -s -i <*instantiation policy for cc*> -p <cc path> -n <cc name> -v <cc version>
 ** create a CC package using the *SignedChaincodeDeploymentSpec* (ignore the *owner_endorsements* field there for now)
 * peer proposal create *<proposal for instantiate/upgrade>*
 ** write out the proposal that is currently created under covers for instantiate/upgrade
 * distribute the proposal to parties needed to sign as per the instantiation policy for the CC in the package
 ** each member will use the *peer proposal sign* command to sign the proposal
 * normal workflow resumes - install package followed by instantiate/upgrade using the signed proposal
 ** lscc will check the sigs against the instantiation policy in the CC and so will vscc
 ** in addition the usual endorsement process provides another layer of protection

*Note 1* - A nice side effect of this is that it expands the protocol and opens up signed proposal workflow for normal invokes as well
 *Note 2* - those comfortable with the original workflow will continue to work with the raw chaincode package (predominately in test and dev but likely be useful in other flows as well where the ""offline"" collection is too heavy handed or there are other means to add more security.)

I believe [~elli-androulaki] was the one who came up with the multi-sig idea for proposals (could be wrong though ... if so let me know and I'll scratch this Elli. Only reason I mention here is because I think this is a cool idea...)

 ;;;","24/Nov/17 3:18 PM;jyellick;[~muralisr], the proposal outlined in your post is perhaps one of the most natural, and preserves many of the existing semantics, however, basing lifecycle off of the instantiation policy is in my opinion, fundamentally and fatally flawed.

A basic requirement for fabric (and the original impetus for introducing instantiation policies) is to restrict who can instantiate chaincodes on a channel.  Unfortunately, since a chaincode instantation policy is supplied by the instantiator, and the instantiation policy is what governs whether a chaincode can be instantiated, this requirement can never be satisfied.  Because of this, there is actually no way to prevent even a single rogue channel member (even without administrative rights) from instantiating a chaincode of their choosing.  To me this is the most fundamental flaw with attempting to govern instantiation via instantiation policies, and why the new lifecycle proposal does not depend on them.

It's possible to extend the non-config-based lifecycle proposal  by adding additional policies, which are defined somewhere else in lifecycle for the channel and which are evaluated in addition to the instantiation policy.  But this leads to other questions, how are these other policies mutated? What about cases when the instantiation requirements are different from the upgrade requirements? By leveraging the existing channel config framework (as FAB-6042 does), these questions come with free answers, and a fairly small amount of code required to implement them.

Per the vote in FAB-6042, my impression is that moving the lifecycle to the config model is the architectural decision which the maintainers have agreed to.  Although it's a good idea to re-examine our decisions when more information comes to light, I'd be curious to hear a proposal about how to handle {{Init}} under the assumption the lifecycle transitions to the config tree.;;;","24/Nov/17 4:17 PM;yacovm;{quote}I'd be curious to hear a proposal about how to handle Init under the assumption the lifecycle transitions to the config tree.{quote}

We can always make it none-atomic, in a separate transaction that comes after the channel config, but that has 4 implications and are *quite serious*:
# An Init() might not ever run, because the client might simply crash right after the resource config transaction.
# This would make Init() race with Invokes and then Init() might not ever pass MVCC or pass MVCC and by doing so - override invokes of users.
## Unless of course, the users put custom code in Invoke()s that detects init:
# This would require users to put custom crafted keys to detect an Init(), should they want to have atomicity
# There is no real way of enforcing Init() is run before Invokes, on the chaincode. 


Another approach, to make it atomic- would be simulating Init() on a set of peers that for the set, the endorsement policy holds, and do it at the time of sending the resource config to ordering, and put the RWSet in a special field, like we do in instantiate currently.
My observations to this option are (and I summon / invite [~manish-sethi] or [~denyeart] to comment or elaborate)
* If we want to enforce MVCC on Init(), it is none trivial and complex because you have 2 kinds of transactions - a resource config, and an endorser transaction, both bundled into one and:
** If the resource config transaction ""passes through"", the versions of the RSet of the Init() could be wrong, and this means we need to rollback the resource config transaction too!
Now of course we first validate and only later commit, so there is no real rollback, but the complexity argument still holds.
* If we say we don't want to enforce MVCC in Init(), this would require to enforce that it doesn't have a RSet, and this is a new requirement that doesn't exist now.

Note: To be clear, I am not advocating here against the resource config approach or pro these 2 approaches, just listing possible options and their disadvantages / challenges. ;;;","26/Nov/17 3:48 AM;muralisr;(I think this discussion now belongs in FAB-6042 but proceeding here for now for continuity.)

[~jyellick]
{quote} A basic requirement for fabric (and the original impetus for introducing instantiation policies) is to restrict who can instantiate chaincodes on a channel. Unfortunately, since a chaincode instantation policy is supplied by the instantiator, and the instantiation policy is what governs whether a chaincode can be instantiated, this requirement can never be satisfied. 
{quote}
If you look at the workflow, the instantiation policy is stored with the chaincode as part of the package created for install. In other words, it is in the chaincode package and is NOT provided/computed during instantiation of the chaincode on the channel.

Let's add detailed steps to the workflow in my previous comment. Let us start at the point where the chaincode package containing the instantiation policy is installed and a user needs to instantiate the chaincode :
 * proposal for the instantiation/upgrade is created
 * above proposal is sent to users who'll sign it (i.e., those who will satisfy the instantiation policy)
 * the proposal with all the signatures is submitted for instantiation/upgrade
 * endorsing side checks the signatures against the instantiation policy in the chaincode package
 ** If successful, an entry is made in LSCC which also adds the instantiation policy from the chaincode package to the record (note that currently we cook up an admin policy on the fly which is at the core of the issue)
 * endorser signs the response. This is another signature orthogonal to the proposal signatures which is useful for multi-peer submissions and such
 * on the committer side VSCC does the instantiation and does the same signature checks as done on the endorser side using the instantiation policy in the lscc record

The key is that the chaincode package contains the instantiation policy and not computed at the time of instantiation.

Note that above is still a sketch even with the details ... hoping there are no major holes that cannot be fixed. For instance, to prevent rogue admin from creating a chaincode and instantiating them we could have a channel TX policy on who can instantiate CCs.

But maybe I'm missing something... the goal here is to get this right. What holes are there in the above flow that only a config TX based workflow can fix ?  ;;;","27/Nov/17 11:33 PM;jyellick;[~muralisr] Let's ignore the case where the chaincode even exists, because I think it is distracting.  Let's say I happen to have authority to transact (as a writer) on the channel.  I create an LSCC invocation, where the instantiation policy is set to ""only my signature"" and the endorsement policy is set to ""only my signature"", and I make up a name, hash, and version.  I submit this transaction.

During evaluation, the peer can see that: the instantiation policy is satisfied, the endorsement policy is satisfied, and there is no reason to deny this transaction.  So now, I, an unprivileged user on the channel have caused all peers to initialize a chaincode namespace for me, and I can force those peers to maintain and manipulate that state, and generally use the channel for whatever purpose I would like.  There's further no way for even the admins of the channel to delete this namespace, because they cannot satisfy the instantiation or endorsement policies.

I see no way around this without introducing some other ""this is the minimum and override requirements to instantiate or modify a chaincode"" policy.  At which point, the utility of an instantiation policy becomes limited at best, and can actually be enforced purely locally to a peer without exposing the policy to the rest of the network.;;;","28/Nov/17 1:10 AM;binhn;It looks like you guys don't heed my advice and keep on at this here.

[~jyellick]
{quote}If there is some official documented process for how this should have been opened, I'd love to learn about it.
{quote}
I thought [~ChristopherFerris] has provided education and numerous emails to IBM developers on this project about how to engage with community. We call ourselves ""maintainers"" not merely developers for a reason. We are not only responsible for producing a quality product but building an engaging and vibrant community. The most effective way to keep people engaged is to provide everyone opportunities to do so. There is no official document for this, just common sense and responsibility of a maintainer.

I am repeating: this item impacts the programming model. We should create a story JIRA and email the community. I actually didn't know about this item; someone told me. So please, all of us need to act properly for a mature project. We are post 1.0 release, so potential external changes must be communicated early.

Some of you here referred to FAB-6042 as something that has been approved, and this item is just an unfortunate by-product of that. In my mind, FAB-6042 hasn't properly vetted, and I wrote my disagreements there. This item proves my point. 

 ;;;","28/Nov/17 1:50 AM;jyellick;[~binhn]

{quote}
I thought Christopher Ferris has provided education and numerous emails to IBM developers on this project about how to engage with community. We call ourselves ""maintainers"" not merely developers for a reason. We are not only responsible for producing a quality product but building an engaging and vibrant community. The most effective way to keep people engaged is to provide everyone opportunities to do so. There is no official document for this, just common sense and responsibility of a maintainer.
{quote}

There is nothing nefarious going on here.  My understanding has always been that items which require additional scrutiny, vetting, discussion, and ultimately voting, should be tagged with the 'review-needed' label.  To me, the classification of the issue, be it task, bug, feature, or epic is orthogonal to this concept, and so my attempt to raise the visibility of this question was to add this label.  If there is some other process (such as converting the issue into some other type) then certainly we should do that, but this veers away from 'common sense' and into process (hence my question).

{quote} 
Some of you here referred to FAB-6042 as something that has been approved, and this item is just an unfortunate by-product of that. In my mind, FAB-6042 hasn't properly vetted, and I wrote my disagreements there. This item proves my point. 
{quote}

There are certainly a lot of moving pieces to FAB-6042, but as I am discussion with [~muralisr] above, I believe there are some fundamental problems with the original design of the lifecycle.  I've yet to see a proposal to address these problems outside of FAB-6042 which stands up to scrutiny.;;;","28/Nov/17 6:06 AM;elli-androulaki;Hi,

So, two comments from my side.

1) For some use-cases, knowing in advance or being able to inspect initialisation parameters is important parameter when deciding whether to trust or not an application. Take for example a (simplified) asset management use-case where initialisation sets the ""admins"" of the system, i.e., entities authorised to import assets. If there is no initialisation parameters commitment at instantiation phase that a user can inspect, the endorsers would quest for a match against, it is not clear to me how endorsement policy would suffice. One can of course shift the responsibility (and trust) to the init function invocation policy, but – given this would be restricted to single signature – it would be one party trusted to do the initialisation of the chaincode correctly. Simply put, where do we want to put trust on during instantiation: 
 a) Endorserment policy only (this may be insufficient for some cases)
 b) Endorsement policy + initialisation input  
 c) Endorsement policy + init invocation policy (not sure this is in place) 
This is assuming of course we are always trusting any channel-related chaincode deployment policy (i.e. parties that can jointly decide on adding removing a chaincode from a channel). 

2) Regardless of how chaincode lifecycle operates, as [~muralisr] mentioned, it is  worth extending proposal and transaction format to support multiple creators. For example if option (c) is used there and init invocation is possible by a threshold of parties having agreed to the input, this is not possible today, with the existing proposal and transaction format.;;;","28/Nov/17 8:08 AM;jyellick;Based on the feedback here, and in the interest of minimizing changes and pain to our users, I've created proposal FAB-7114 as a sub-task of FAB-6042.  This proposal has been developed in collaboration with [~muralisr] and preserves the {{Init}} function, in addition to generally adhering to the existing v1.0 lifecycle workflow more closely.

I've opened this as a sub-task of FAB-6042 because it is related, but have added the review-needed label to hopefully gain additional attention from the community.  As it is also preserves the existing chaincode {{Init}} mechanics, it also feels less appropriate to make it some other sort of task.

Because the proposal in this issue does not appear to have widespread support, I would propose that we close it, and move our discussion to FAB-7114.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"As a member of a network who runs a peer, I want more control over what block information clients receive",FAB-7088,24437,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,wlahti,wlahti,23/Nov/17 2:05 AM,23/Jan/20 7:15 AM,28/Oct/23 3:01 AM,23/Jan/20 7:15 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,"Given I am a channel admin of channel ""A""

And I have configured permissions to control block information

When a transaction is broadcasted in channel ""A""

Then I wish for clients to be notified of the transaction in channel ""A""

And receive block information based on the configuration

 

  

Acknowledgement:

    originator: [~jeffgarratt]",,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7022,,,,,,,,,,,,,,,,,,,,,,FAB-7069,,,FAB-7367,FAB-7419,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzynzr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:15 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test-daily-x86_64 has been failing consistently from sometime due to build errors,FAB-7089,24440,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,23/Nov/17 5:55 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,10/Dec/17 1:44 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"fabric-test-daily-x86_64 has been unstable for some time due to the following errors,

*Last Build*
04:18:03 /usr/lib/python2.7/subprocess.py:574: CalledProcessError
04:18:03 ----------------------------- Captured stderr call -----------------------------
04:18:03 Connection to 127.0.0.1 5432 port [tcp/*] succeeded!
04:18:03 nc: connect to 127.0.0.1 port 3306 (tcp) failed: Connection refused
04:18:03 LOG: redirecting log output to logging collector process
04:18:03 HINT: Future log output will appear in directory ""pg_log"".
04:18:03 Connection to 127.0.0.1 3306 port [tcp/*] succeeded!
04:18:03 nc: connect to 127.0.0.1 port 389 (tcp) failed: Connection refused
04:18:03 Connection to 127.0.0.1 389 port [tcp/*] succeeded!
04:18:03 /start.sh: line 28: /opt/gopath/src/github.com/hyperledger/fabric-ca/scripts/fvt/cluster_test.sh: No such file or directory
04:18:03 =========================== 1 failed in 2.87 seconds =========================== 



*Previous build*
10:55:03 Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
10:55:03  ---> Running in 2f688d3254a2
10:55:10 curl: (18) transfer closed with 35138 bytes remaining to read
10:55:10 
10:55:10 gzip: stdin: unexpected end of file
10:55:10 tar: Unexpected EOF in archive
10:55:10 tar: Unexpected EOF in archive
10:55:10 tar: Error is not recoverable: exiting now
10:55:10 The command '/bin/sh -c mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn' returned a non-zero code: 2


*Build Log* 

(Build 165)
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/165/console
",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo0n:",,,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
improved tracking of downloads,FAB-7090,24441,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,23/Nov/17 6:51 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,28/Nov/17 5:44 AM,v1.0.4,,,,,,,,,fabric-release,,,,0,,,,,,,"We've been using a model where we track the downloads for a given release with a specific bootstrap-<version>.sh script in the scripts/ directory. One for each release.

This could be improved if we simply made the version an argument and pass that in to a generic script, which would default to the current version.

Thus, we can have a single goo.gl short url for tracking all downloads that people can use to download any version we've published.

 ",,ChristopherFerris,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo0v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 5:44 AM;kchristidis;https://gerrit.hyperledger.org/r/c/15681/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""fabric-ca-client enroll"" does not add tls certificate details in config file.",FAB-7092,24443,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,asuchit,asuchit,23/Nov/17 1:16 PM,04/May/19 12:21 PM,28/Oct/23 3:01 AM,,,,,,,,,,,,,,,1,,,,,,,"# Start rooCA with tls enabled
 # Generate rootCA administrator :

fabric-ca-client enroll -c client/rootCaAdmin/config.yaml -u https://admin:adminpw@xxx.xxx.xxx.xxx:7054 --tls.certfiles root-ca-tls-cert.pem

 

This file (client/rootCaAdmin/config.yaml) does not exist. It is generated with above command.

 

After executing the above command, this file (client/rootCaAdmin/config.yaml) should contain following detail :

tls:
  # TLS section for secure socket connection
  certfiles: root-ca-tls-cert.pem ({color:#d04437}Wrong: always empty{color})

 ",,asuchit,nyet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7082,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo1b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,asuchit,nyet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/May/19 12:21 PM;nyet;This should probably be changed to a FABC bug;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Math symbols not showing in the documentation are causing confusion,FAB-7093,24444,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,phillipviana,phillipviana,phillipviana,23/Nov/17 2:27 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,31/Jan/18 3:55 AM,,,,,,,,,,fabric-docs,,,,0,Documentation,,,,,,"The architecture page is formally written and very precise, but the symbols (which appear to be LaTeX-based) are not rendered properly on the page and therefore are causing confusion. See the StackOverflow question below for details:

https://stackoverflow.com/questions/47437221/hyperledger-documentation-questions/47448149#47448149",,denyeart,phillipviana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo1j:",,,,,,,,,,,,,,,,,,,,,,denyeart,phillipviana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/18 3:55 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/15747/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode Instantiate for channel is Failed due to x509: cannot validate certificate for ip because it doesn't contain any IP SANs,FAB-7094,24446,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jojialex2,jojialex2,23/Nov/17 6:27 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Jan/18 1:39 PM,v1.1.0-preview,,,,,,,,,,,,,0,,,,,,,"chaincode Instantiate for channel is Failed due to x509: cannot validate certificate for 172.18.0.15 because it doesn't contain any IP SANs

We are using hyperledger fabric x86_64-1.1.0-preview",,C0rWin,denyeart,jojialex2,nharshita,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 6:26 PM;jojialex2;feature.zip;https://jira.hyperledger.org/secure/attachment/13419/feature.zip","23/Nov/17 6:26 PM;jojialex2;log.zip;https://jira.hyperledger.org/secure/attachment/13420/log.zip",,,,,,,,,,,,,,,,,,,,,"1|hzyo1r:",,,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,jojialex2,nharshita,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 6:34 PM;yacovm;hold on, lets not rush to conclusions :)

This isn't a gossip problem... gossip can't fail instantiate. This is 100% a configuration problem.

I'll take a look later.;;;","23/Nov/17 11:04 PM;yacovm;Hey I updated the docker-compose file to use the native fabric images but I'm getting:

 
{quote} panic: Failed to initialize local MSP: could not load a valid signer certificate from directory /var/hyperledger/msp/signcerts: stat /var/hyperledger/msp/signcerts: no such file or directory
{quote}

Any chance you set the volume definitions in the docker compose file to use the configs folder?;;;","26/Dec/17 9:22 PM;nharshita; 

I faced same issue with balance-transfer and fabcar samples.

Solved it by setting CORE_PEER_CHAINCODELISTENADDRESS  to peer's containername:port in the docker compose file.

eg., CORE_PEER_CHAINCODELISTENADDRESS=peer0.org1.example.com:7052

 

ref: https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-November/002125.html

 ;;;","08/Jan/18 12:35 PM;denyeart;[~jojialex2] Please see the comments and indicate if this resolves the issue or you still think there is an issue?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow pulling of base images during instantiation to be configurable,FAB-7095,24454,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,gbolo,gbolo,24/Nov/17 12:25 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,04/Dec/17 2:01 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,"Currently, when chaincode is instantiated, the pulling of baseos is explicitly set to false.
We should add a new configuration option under the docker section which allows one to 
force the pulling of baseos. By default, it is set to false which maintains current behaviour.

this change may help address situations where a base image is updated to patch vulnerabilities
and a peer cluster is using a generic tag for baseos such as ""latest"".",,gbolo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo2f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,gbolo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Nov/17 12:33 AM;gbolo;https://gerrit.hyperledger.org/r/15695 [FAB-7095] configurable pulling of cc base images;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect grammar in gerrit documentation,FAB-7096,24456,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,ysim,ysim,ysim,24/Nov/17 2:33 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,24/Nov/17 3:56 AM,,,,,,,,,,fabric-docs,,,,0,,,,,,,"Pertains to this page: [https://hyperledger-fabric.readthedocs.io/en/release/Gerrit/gerrit.html]

The grammar of some of the headings is wrong. It should be ""Using git-review"" and ""Not using git-review"", vs ""Use git-review""/""Not Use git-review"".

Note: Have already a pushed a change at [https://gerrit.hyperledger.org/r/#/c/15679/,] but forgot to make a JIRA issue so I will be amending my change to include this ticket number.",,ysim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo2v:",,,,,,,,,,,,,,,,,,,,,,ysim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer data synchronization failure due to connection timeout to CouchDB,FAB-7098,24458,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,SatoshiFujisawa,SatoshiFujisawa,24/Nov/17 2:43 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,19/Dec/17 11:33 PM,,,,,,,,,,fabric-ledger,,,20/Nov/17 12:00 AM,0,couchdb,gossip,v1.0,,,,"Peer data synchronization failure due to connection timeout to CouchDB. Therefore, it becomes impossible to recover Peer in these cases.

 

*Case 1*: Existing peer synchronizes with other/anchor peer after it starts execution

Scenario:
 # All Nodes (zookeepers, orderers, peers, couchDB) are running
 # Client application is running and adding new transactions to the Blockchain
 # All the peers are receiving the new blocks and their ledgers are in sync.
 # Peer1-Org1 is stopped
 # Client application is still running and adding new transactions to the Blockchain
 # After sending large transactions which adds approximately 1 million blocks to the ledger, start Peer1-Org1 instance

Expected:

Peer1-Org1 successfully synchronizes with other/anchor peer.

*Actual Observation:*

Peer1-Org1 instance stops execution with error.
 # dial tcp: lookup couchdb1 on 127.0.0.11:53: read udp 127.0.0.1:43112->127.0.0.11:53: i/o timeout

 

*Case 2*: New peer synchronizes with other/anchor peer after it starts execution
 # Peer1-Org1 failed to synchronize with other peers (as described in Case 1)
 # Remove Peer1-Org1 docker container
 # Remove CouchDB docker container associated with of Peer1-Org1
 # Remove Peer1-Org1 fabric data folder
 # Remove the CouchDB data folder
 # Run CouchDB docker image (start the CouchDB instance)
 # Run Peer1-Org1 docker image (start Peer1-Org1 instance)
 # Join Peer1-Org1 to channel
 # Data synchronization of Peer1-Org1 started

 

Expected:

Peer1-Org1 successfully synchronizes with other/anchor peer.

*Actual Observation:*

Peer1-Org1 instance stops execution with error.
 # dial tcp: lookup couchdb1 on 127.0.0.11:53: read udp 127.0.0.1:43112->127.0.0.11:53: i/o timeout

(Note: this observation is similar to the Case 1)

*Attachments:*
 * Case 1 Peer1-Org1 log file
 * Case 2 Peer1-Org1 log file
 * CouchDB Peer1-Org1 log file

*Initial analysis*: CouchDB by default accepts 1024 connections. It stopped accepting new connections once this limit reached. This lead to peer failing to connect to the couchdb and stopped eventually with error.","Environment:
 * Fabric v1.0.2
 * Ubuntu v16.04.3 LTS
 * Kafka - 2 instances
 * Zookeeper – 3 instances
 * Orderer – 2 instance
 * Organizations – 2 (Org1, Org2)
 * Peers – 2 peers per Organization (Peer0-Org1, Peer1-Org1, Peer0-Org2, Peer1-Org2)
 * CouchDB – 1 per peer",denyeart,mastersingh24,SatoshiFujisawa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/17 2:38 PM;SatoshiFujisawa;Case1-Peer1-Org1.log;https://jira.hyperledger.org/secure/attachment/13422/Case1-Peer1-Org1.log","24/Nov/17 2:38 PM;SatoshiFujisawa;Case2-Peer1-Org1.log;https://jira.hyperledger.org/secure/attachment/13423/Case2-Peer1-Org1.log","24/Nov/17 2:39 PM;SatoshiFujisawa;Couchdb-Peer1-Org1-netstat.log;https://jira.hyperledger.org/secure/attachment/13421/Couchdb-Peer1-Org1-netstat.log",,,,,,,,,,,,,,,,,,,,"1|hzyo3b:",,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,SatoshiFujisawa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/17 10:41 PM;mastersingh24;[~SatoshiFujisawa]  - How are you running all of your nodes?  Are you using Docker Compose?

How are you stopping and restarting the containers?;;;","27/Nov/17 12:08 PM;denyeart;[~SatoshiFujisawa] Are you exercising the peer at such high concurrency that it has 1024 connections with CouchDB at one time? Or do you believe there is a connection leak? Please expand on your test and hypothesis.;;;","28/Nov/17 4:34 PM;SatoshiFujisawa;Thank you for your reply.

Regarding the first question, I'm using Docker compose. And even if I stop containers and restart it, the same event has always occurred.

About the next question, I was thinking that CouchDB processing is delayed for some reason. As a result, I thought that connection timeout or staying occurred.

 

As I proceed with the investigation, I found a possibility that it corresponds to the following bug. Events did not match perfectly, but I noticed that the point where too much consumption of memory resources occurred in peer container is the same.

<https://jira.hyperledger.org/browse/FAB-5849>

 

I will update the version of Fabric from v1.0.2 to v1.0.4 and observe the situation from now. Then I will report the result on here.;;;","19/Dec/17 11:13 PM;denyeart;[~SatoshiFujisawa] Have you been able to reproduce the problem on more recent versions of 1.0.x or master branch?;;;","19/Dec/17 11:29 PM;SatoshiFujisawa;I'm sorry to reply late.
I upgraded to v1.0.4 and tried the same thing, the problem was completely resolved. Thus I think that this problem is maight the same as FAB-5849 and it was resolved in v1.0.3.

Thank you very much for your replay and cooperation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
core/comm tests should all run outside of the testenv,FAB-7099,24463,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,24/Nov/17 7:26 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,09/Dec/17 6:50 PM,,,,,,,v1.1.0,,,,,,,0,,,,,,,"You cannot currently run `go test github.com/hyperledger/fabric/core/comm` directly.  Unfortunately, there are a couple of tests which require the testenv.
",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo3z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Dec/17 6:43 PM;mastersingh24;https://gerrit.hyperledger.org/r/15857;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Keepalive options not being set for chaincode shim,FAB-7100,24464,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,24/Nov/17 8:09 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,27/Nov/17 10:55 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"FAB-7035 made the keepalive parameters for the peer configurable and FAB-7043 refactored the overall keepalive settings for the core/comm package.  Unfortunately, while making these changes passing the proper keepalive settings to the shim for connecting to the peer was omitted.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo47:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Nov/17 8:43 PM;mastersingh24;https://gerrit.hyperledger.org/r/15697;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-daily-test-x86_64 has failed due to incomplete data transfer and ledger errors.,FAB-7102,24466,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,25/Nov/17 7:22 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,10/Dec/17 1:43 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"*fabric-saily-test-x86_64* failed due to the following errors,

10:42:31 + cd /
10:42:31 + curl -fsSL http://www.apache.org/dist/zookeeper/zookeeper-3.4.10/zookeeper-3.4.10.tar.gz
10:42:31 + tar -xz
10:42:36 curl: (18) transfer closed with 30516638 bytes remaining to read
10:42:36 
10:42:36 gzip: stdin: unexpected end of file
10:42:36 tar: Unexpected EOF in archive
10:42:36 tar: Unexpected EOF in archive
10:42:36 tar: Error is not recoverable: exiting now
10:42:36 The command '/bin/sh -c set -x     && cd /     && curl -fsSL ""http://www.apache.org/dist/zookeeper/$DISTRO_NAME/$DISTRO_NAME.tar.gz"" | tar -xz     && mv ""$DISTRO_NAME/conf/""* ""$ZOO_CONF_DIR""' returned a non-zero code: 2
10:42:36 Makefile:291: recipe for target 'build/image/zookeeper/.dummy-x86_64-1.1.0-alpha-snapshot-784deb5' failed


14:14:38 ledger_lte.py::perf_couchdb::test_FAB_3870_VaryNumParallelTxPerChain FAILED
14:14:42 ledger_lte.py::perf_couchdb::test_FAB_3871_VaryNumChain FAILED
14:14:47 ledger_lte.py::perf_couchdb::test_FAB_3872_VaryNumParallelTxWithSingleChain FAILED
14:14:52 ledger_lte.py::perf_couchdb::test_FAB_3873_VaryNumChainWithNoParallelism FAILED
14:14:57 ledger_lte.py::perf_couchdb::test_FAB_3874_VaryKVSize FAILED
14:15:01 ledger_lte.py::perf_couchdb::test_FAB_3875_VaryBatchSize FAILED
14:15:06 ledger_lte.py::perf_couchdb::test_FAB_3876_VaryNumKeysInEachTX FAILED
14:15:11 ledger_lte.py::perf_couchdb::test_FAB_3877_VaryNumTxs FAILED
14:15:11 
14:15:11  generated xml file: /w/workspace/fabric-daily-tests-x86_64/gopath/src/github.com/hyperledger/fabric/test/regression/daily/results_ledger_lte.xml 
14:15:11 =================================== FAILURES ===================================

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/162/console",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo4n:",,,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-docker-devmode example not working,FAB-7103,24467,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,YandryPozo,YandryPozo,25/Nov/17 3:49 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Dec/17 8:48 PM,v1.0.4,,,,,,v1.1.0,,,fabric-samples,,,,0,chaincode,documentation,,,,,"Hello there, I've done and followed every step on the [Chaincode for Developers|http://hyperledger-fabric.readthedocs.io/en/release/chaincode4ade.html] section several tries with 3 different versions: *x86_64-1.0.0* , *x86_64-1.0.2* , *x86_64-1.0.4* but each time I reach to one of the last steps ""Terminal 3 - Use the chaincode"" I get the same error after executing the instantiate command:
{code:none}
peer chaincode instantiate -n mycc -v 0 -c '{""Args"":[""a"",""10""]}' -C myc
{code}
The error is:
{code:none}
Error endorsing chaincode: rpc error: code = Unknown desc = Failed to init chaincode(handler not found for chaincode mycc:0)
{code}
The full output of docker-compose when I execute that command is [here|https://gist.github.com/yanpozka/003704bcfd953550e554a4ceb8883add]
 The full output of cli container when I execute that command is [here|https://gist.github.com/yanpozka/31a488f1cf2e8ca9279d23b896b6e1ce]

Also I have tried with the _basic-network_ from the same fabric-samples, but I get the same error :(
----
Because I have experience with Go I've been able to understand some debug logs and I've found the [line|https://github.com/hyperledger/fabric/blob/2cab745abf031d8ff5d3e8f4fa7a5e5af8907fad/core/chaincode/chaincode_support.go#L327] that it's showing that error, looks like the chain-code wan't installed in a right way or something like that, but the _install_ command worked well.
 I apologize in advance if this isn't the right place to ask for help, but I've watched most of the videos on Youtube and lot of articles on Internet and most of them always end in the official documentation, which is good. I also want to collaborate with this project, maybe with a little of guidance I can fix or learn why is this happening. Happy to help!","*OS*: ubuntu 16.04 LTS
*docker version*:
{code:java}
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:42:18 2017
 OS/Arch:      linux/amd64

Server:
 Version:      17.09.0-ce
 API version:  1.32 (minimum version 1.12)
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:40:56 2017
 OS/Arch:      linux/amd64
 Experimental: false
{code}",mastersingh24,YandryPozo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo4v:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,YandryPozo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/17 10:33 PM;mastersingh24;[~YandryPozo] - Did you run http://hyperledger-fabric.readthedocs.io/en/release/chaincode4ade.html#terminal-2-build-start-the-chaincode ?
If so, what was the output when you ran 
{code:java}
docker exec -it chaincode bash
cd sacc
go build
CORE_PEER_ADDRESS=peer:7051 CORE_CHAINCODE_ID_NAME=mycc:0 ./sacc
{code}?
;;;","27/Nov/17 5:00 AM;YandryPozo;[~mastersingh24] thanks for your answer!
 When I run that command I get this output:
{code:none}
2017-11-26 19:56:13.392 UTC [shim] SetupChaincodeLogging -> INFO 001 Chaincode log level not provided; defaulting to: INFO
2017-11-26 19:56:13.392 UTC [shim] SetupChaincodeLogging -> INFO 002 Chaincode (build level: ) starting up ...
{code}
and the program stays hanging like running forever, probably because the main is listening forever too.

This is the output of the peer:
{code:none}
peer         | 2017-11-26 19:56:13.419 UTC [chaincode] HandleChaincodeStream -> DEBU 2c7 Current context deadline = 0001-01-01 00:00:00 +0000 UTC, ok = false
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] processStream -> DEBU 2c8 []Received message REGISTER from shim
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] HandleMessage -> DEBU 2c9 []Fabric side Handling ChaincodeMessage of type: REGISTER in state created
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] beforeRegisterEvent -> DEBU 2ca Received REGISTER in state created
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] registerHandler -> DEBU 2cb registered handler complete for chaincode mycc:0
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] beforeRegisterEvent -> DEBU 2cc Got REGISTER for chaincodeID = name:""mycc:0"" , sending back REGISTERED
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] notifyDuringStartup -> DEBU 2cd nothing to notify (dev mode ?)
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] notifyDuringStartup -> DEBU 2ce sending READY
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] processStream -> DEBU 2cf []Move state message READY
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] HandleMessage -> DEBU 2d0 []Fabric side Handling ChaincodeMessage of type: READY in state established
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] enterReadyState -> DEBU 2d1 []Entered state ready
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] notify -> DEBU 2d2 notifier Txid: does not exist
peer         | 2017-11-26 19:56:13.420 UTC [chaincode] processStream -> DEBU 2d3 []sending state message READY
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test_FAB6863_BasicCAClustering test case is failing while running daily test suite,FAB-7104,24468,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,rameshthoomu,rameshthoomu,26/Nov/17 1:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,08/Jan/18 12:36 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"test_FAB6863_BasicCAClustering test case is failing while running daily test suite.
h3.  
{code:java}
Standard Error
LOG: redirecting log output to logging collector process HINT: Future log output will appear in directory ""pg_log"". Connection to 127.0.0.1 5432 port [tcp/*] succeeded! nc: connect to 127.0.0.1 port 3306 (tcp) failed: Connection refused nc: connect to 127.0.0.1 port 3306 (tcp) failed: Connection refused Connection to 127.0.0.1 3306 port [tcp/*] succeeded! Connection to 127.0.0.1 389 port [tcp/*] succeeded! /start.sh: line 28: /opt/gopath/src/github.com/hyperledger/fabric-ca/scripts/fvt/cluster_test.sh: No such file or directory
{code}
 ",,rameshthoomu,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo53:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"01/Dec/17 4:27 AM;rennman;https://gerrit.hyperledger.org/r/#/c/15843/;;;","13/Dec/17 7:56 AM;rennman;Blocked https://gerrit.hyperledger.org/r/#/c/15999/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move orderer/common/util's content to common/util,FAB-7105,24469,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Nov/17 11:26 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,27/Nov/17 4:51 AM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,,,,,,,"The orderer/common/util only contains 1 file (net.go) that contains only 1 function (ExtractRemoteAddress).

This function can be used by any gRPC service, and therefore its place should be in common/util

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo5b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/17 11:30 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/15709/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add logging of client's ip address at Endorser gRPC service,FAB-7106,24470,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,26/Nov/17 11:32 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,27/Nov/17 4:53 AM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,It may be useful to log the client's ip address in the endorser just like gossip or the orderer's deliver and broadcast services do.,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo5j:",,,,Unset,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Nov/17 11:39 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/15711/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a bccsp developer I want the ECDSA-related common code to be move to the bccsp/util package,FAB-7107,24471,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,27/Nov/17 9:21 PM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,29/Nov/17 9:39 AM,,,,,,,v1.1.0,,,fabric-crypto,,,,0,quality,Security,,,,,"The BCCSP sw and pkcs11 implementations are actually duplicate some ECDSA-related code and the MSP package is importing the sw package just to use these function as well.

We propose to mode this common ECDSA-related code under the bccsp/util package to streamline the use of it.",,angelo.decaro,luomin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7109,,,,,,,,,,,,FABG-390,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo5r:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,luomin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor ccEpFunc to string,FAB-7108,24472,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,cbl,cbl,cbl,27/Nov/17 11:02 PM,23/Jan/20 7:17 AM,28/Oct/23 3:01 AM,23/Jan/20 7:17 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,This function returns chaincode endpoint and error. But we should do all the necessary checks of chaincode endpoint during the node start-up phase. Therefore there's no need to use a function to pass chaincode endpoint value.,,cbl,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo5z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,cbl,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 1:11 AM;yacovm;[~cbl] not trying to rush you or anything, :) 
but is there an ETA for this? ;;;","29/Nov/17 1:19 PM;cbl;https://gerrit.hyperledger.org/r/#/c/15801/;;;","23/Jan/20 7:17 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-vendor bccsp package,FAB-7109,24473,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mastersingh24,mastersingh24,27/Nov/17 11:13 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,12/Apr/18 10:02 PM,,,,,,,v1.2.0,,,,,,,0,,,,,,,FAB-7107 modifies the bccsp package.  Components which vendor this package need to update their vendored dependency.,,luomin,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo67:",,,,,,,,,,,,,,,,,,,,,,luomin,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 11:14 PM;mastersingh24;Depends on FAB-7107 to be merged;;;","29/Nov/17 12:17 PM;troyronda;* Created a patch for Go SDK to re-vendor to latest commit on fabric master: [https://gerrit.hyperledger.org/r/c/15621/] - merged
 * Noticed that ecdsa.go is missing copyright header ([https://gerrit.hyperledger.org/r/c/15721/3/bccsp/utils/ecdsa.go]) - fixed
 * Created a patch in fabric to fix the check_license.sh script ([https://gerrit.hyperledger.org/r/c/15795/)] - in review

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update vendored version of bccsp,FAB-7110,24474,24473,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mastersingh24,mastersingh24,27/Nov/17 11:14 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,12/Apr/18 10:02 PM,,,,,,,,,,fabric-ca,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo6f:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update vendored version of bccsp,FAB-7111,24475,24473,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,troyronda,mastersingh24,mastersingh24,27/Nov/17 11:15 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,29/Nov/17 11:41 PM,,,,,,,,,,fabric-sdk-go,,,,0,,,,,,,,,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo6n:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 11:15 PM;mastersingh24;Troy - please reassign as you see fit;;;","29/Nov/17 1:57 AM;troyronda;Ok - got it. Thanks!;;;","29/Nov/17 11:41 PM;troyronda;Included in merged patch: https://gerrit.hyperledger.org/r/c/15621/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric test --> fabric-test-x86_64 fails as there is a change in sequence of the tasks performed.,FAB-7112,24480,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,sambhavdutt,sambhavdutt,28/Nov/17 2:37 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,10/Dec/17 1:42 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"The fabric-test-verify-x86_64 is failing as smoke-test tasks are carried out in a different order/sequence. The tasks must be aligned accordingly(in the Makefile) so that there is no error when the smoke-test tasks are performed.

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/552/console",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo6v:",,,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proposal for new-lifecycle with Init preserving mechanics.,FAB-7114,24486,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,jyellick,jyellick,28/Nov/17 8:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 3:11 AM,,,,,,,WON'T FIX,,,fabric-peer,,,,6,review-needed,,,,,,"FAB-7086 outlines a proposal in which the Init function is removed from the chaincode API in order to support different instantiation mechanics. This proposal, developed in coordination with [~muralisr], preserves the benefits of the config tree in FAB-6042, while also preserving the existing lifecycle characteristics of atomic instantiation and enforcement of instantiation policy.

The proposed workflow for deploying a chaincode is as follows.
 # The channel is initialized, and in the genesis block, a resources config tree contains a {{Chaincodes}} group with a {{mod_policy}}, defaulted to {{/Channel/Application/Admins}}
 # A chaincode is installed via LSCC, or an installed chaincode is queried using the LSCC to retrieve the metadata for the chaincode.
 # The client retrieves the current resources tree, and adds a new chaincode group to the resources tree, as described in FAB-6042, this modification must satisfy the {{mod_policy}} of the chaincodes group, and the chaincode is defined with the metadata from (2) and the desired endorsement policy.
 # The client submits the resource update to the orderer, it is propagated through the blockchain, and committed at the peer. When it commits successfully, the chaincode is now defined.
 # The client crafts a traditional LSCC transaction containing the name, version, and arguments for instantiation. The LSCC checks that the chaincode is defined for the channel in the resources tree, checks the locally defined instantiation policy in the chaincode package, and does a chaincode-to-chaincode invocation of {{Init}} (as it does today). The resulting read/write set includes an 'instantiated' bit in the LSCC table, as well as some representation of the chaincode metadata it was instantiated with.
 # The client sends the LSCC transaction to peers, collecting enough endorsements to satisfy the endorsement policy as specified in the chaincode metadata in the resources tree.
 # The client sends the LSCC transaction to ordering, which propagates to the peers through the blockchain. This LSCC transaction is validated that the metadata in the resource tree is at the same level, and the usual MVCC checks prevent double {{Init}} invocations.
 # The client performs a normal invoke. The peer checks that the chaincode is defined, and that the chaincode has been instantiated at the current level of metadata in the resources tree.

This proposal leaves the majority of the existing v1.0 lifecycle characterstics in place, including the atomic instantiation and {{Init}} call. It does inject an additional 'configure' step which defines chaincodes for a channel after they have been installed, but before they are instantiated. This additional configuration step is what allows us to break the chicken and egg problem which caused problems in the v1.0 lifecycle.

Per suggestion from [~muralisr] below is a quote from [~mastersingh24] explaining the ""chicken and egg"" problem:
{quote}
1) Installation of the chaincode bytes is an administrative action performed on individual peers.
2) While chaincode must be installed on a peer in order for it to endorse transactions, peers do not need to have chaincode installed in order to validate and commit transactions for a given chaincode. This is due to the fact that what gets sent through the orderer is actually the read-write set and not that actual chaincode invocation. Because of this, you cannot ""include"" configuration about a chaincode (i.e. endorsement policy) as part of installation. You also cannot use the chaincode endorsement model alone to bootstrap the initial endorsement policy for a chaincode (the chicken and egg problem which Jason Yellick refers to in the description). Endorsement is also not an approval workflow model - it is an agreement protocol on output given a set of inputs. This is why the ""resource configuration"" is required (note that this will go to all peers in a channel not just the ones with chaincode installed).
{quote}",,ales,binhn,C0rWin,ChristopherFerris,denyeart,elli-androulaki,jeffgarratt,jyellick,mastersingh24,muralisr,Ratnakar,xixuejia,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7444,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo7j:",,,,,,,,,,,,,,,,,,,,,,ales,binhn,C0rWin,ChristopherFerris,denyeart,elli-androulaki,jeffgarratt,jyellick,mastersingh24,muralisr,Ratnakar,xixuejia,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 8:30 AM;yacovm;{quote}The client sends the LSCC transaction to peers, collecting enough endorsements to satisfy the endorsement policy as specified in the chaincode metadata in the resources tree.
{quote}
How exactly do we do that in the peer CLI? It doesn't support multiple endorsements. We use the CORE_PEER_ADDRESS to specify the peer to connect to.
 Does the instantiator need to know:
 * The channel ""version"" (if it's in v1.1 or in v1.0)
 * What peers to query to satisfy the endorsement policy

?
{quote} 
 * The client sends the LSCC transaction to peers, collecting enough endorsements to satisfy the endorsement policy as specified in the chaincode metadata in the resources tree.

 
{quote}
So there is no channel instantiation policy now, only endorsement policy, and the instantiation policy is now only local. Correct?

 

1 more question - how does the client know that phase (4) has successfully completed? 
 Because, for example - the config fetched from the peer might not be up to date, resulting in a config mismatch at validation, which is silent. And then the next stages will fail. So I guess, we would need a check at LSCC that fails if the config wasn't validated, so that we can fail LSCC to indicate to the user?;;;","28/Nov/17 11:48 AM;jyellick;{quote}
How exactly do we do that in the peer CLI? It doesn't support multiple endorsements. We use the CORE_PEER_ADDRESS to specify the peer to connect to.
{quote}

Assuming there is not some other pattern which we use for specifying multiple endpoints in the peer CLI, then we would need to invent something.  Perhaps a new flag to pass 'additional endorsers' or similar?  The particulars of the implementation do not matter too much to me, but this seems to be reasonably easy to achieve technically?

{quote}
Does the instantiator need to know:
The channel ""version"" (if it's in v1.1 or in v1.0)
What peers to query to satisfy the endorsement policy
{quote}

Assuming that the parameters to the LSCC instantiate remain the same, I don't see any reason the client would need to differentiate between v1.0 and v1.1, unless you can think of some reason. I would suggest that yes, the client must know which peers to invoke against to satisfy the endorsement policy, but this is no more onerous than any other chaincode invocation.

{quote}
So there is no channel instantiation policy now, only endorsement policy, and the instantiation policy is now only local. Correct?
{quote}

Correct.  There is a policy, which governs who can define chaincode configurations in the resource tree, but this is not really an 'instantiation policy', as it defines metadata about a chaincode, it does not instantiate.  The instantiation policy would continue to live inside the chaincode package but would _not_ be part of the RW set.  Instead, the instantiation policy would control whether a peer 1) endorsers an {{Init}} proposal, 2) makes its local copy of the chaincode available for invoke endorsements after the {{Init}} commits.

{quote}
1 more question - how does the client know that phase (4) has successfully completed? 
Because, for example - the config fetched from the peer might not be up to date, resulting in a config mismatch at validation, which is silent. And then the next stages will fail. So I guess, we would need a check at LSCC that fails if the config wasn't validated, so that we can fail LSCC to indicate to the user?
{quote}

I don't believe this is actually a new problem.  Today, if an instantiate request is sent, and something about it goes wrong (say an MVCC failure) I do not believe that there is any feedback to the user.  Ultimately, if we wish for the CLI to give reliable feedback about success or failure, we would need to implement something via events.  But, just like if the user tries to send an 'invoke' after a failed instantiate, I would expect an error to be returned indicating the cause of the failure (in this case, it would be that the target chaincode is not defined for the channel).;;;","28/Nov/17 5:55 PM;mastersingh24;{quote}*How exactly do we do that in the peer CLI? It doesn't support multiple endorsements. We use the CORE_PEER_ADDRESS to specify the peer to connect to.*

_Assuming there is not some other pattern which we use for specifying multiple endpoints in the peer CLI, then we would need to invent something. Perhaps a new flag to pass 'additional endorsers' or similar? The particulars of the implementation do not matter too much to me, but this seems to be reasonably easy to achieve technically?_
{quote}

In the short term, I think you are stuck with the fact that the CLI can only send to a single peer - which have this some issue when trying to invoke chaincode from the CLI as well.  This is of course the problem with not having a real dedicated CLI package.;;;","28/Nov/17 6:37 PM;mastersingh24;I think this is a decent compromise to alleviate various concerns.  I will state that if one started from scratch, I don't think this is the best solution, but best to move forward.  I also think it might be important for those who have not read all of the related JIRAs why things end up like this.

1) Installation of the chaincode bytes is an administrative action performed on individual peers.
2) While chaincode must be installed on a peer in order for it to endorse transactions, peers do not need to have chaincode installed in order to validate and commit transactions for a given chaincode.  This is due to the fact that what gets sent through the orderer is actually the read-write set and not that actual chaincode invocation.  Because of this, you cannot ""include"" configuration about a chaincode (i.e. endorsement policy) as part of installation.  You also cannot use the chaincode endorsement model alone to bootstrap the initial endorsement policy for a chaincode (the chicken and egg problem which [~jyellick] refers to in the description).  Endorsement is also not an approval workflow model - it is an agreement protocol on output given a set of inputs.  This is why the ""resource configuration"" is required (note that this will go to all peers in a channel not just the ones with chaincode installed). ;;;","28/Nov/17 11:44 PM;denyeart;If I understand this correctly, there would now be three steps to deploy a chaincode to a network:
1) Install chaincode on each peer
2) Define chaincode on channel via config
3) Instantiate/Init chaincode on channel via normal endorser transaction

Question - With the addition of the 'Define' step, would it now be possible to actually distribute the chaincode as part of the Define step, and thereby provide an option of skipping the Install step on each peer?  For networks where all peers should have the chaincode, and where all channel orgs must agree and sign off on step #2 regardless (this may be a very common deployment model), it seems like there is an opportunity to streamline the process so that manual installation on every peer would not be required.  Thoughts?;;;","29/Nov/17 12:00 AM;yacovm;{quote}If I understand this correctly, there would now be three steps to deploy a chaincode to a network:
{quote}
 

They are 3 invocations to peers/orderers, but they will be still 2 steps from the user perspective. 
 I'm tackling the peer CLI side for this item and steps 2 and 3 happen continuously and the user still invokes the old ""instantiate"" without knowing what is happening behind.
{quote}Question - With the addition of the 'Define' step, would it now be possible to actually distribute the chaincode as part of the Define step, and thereby provide an option of skipping the Install step on each peer? For networks where all peers should have the chaincode, and where all channel orgs must agree and sign off on step #2 regardless (this may be a very common deployment model), it seems like there is an opportunity to streamline the process so that manual installation on every peer would not be required. Thoughts?
{quote}
* The person that instantiates should have channel-scoped permissions, but not local admin permissions.

 
 * The person that instantiates doesn't necessarily even have the chaincode code itself... it doesn't actually have anything more than he had before.

Apart from that I think it's orthogonal to the problem we're solving here, and this should not be leveraged in the same mechanism.

 
{quote}it seems like there is an opportunity to streamline the process so that manual installation on every peer would not be required.
{quote}
Not sure why this is better than having a script that iterates over the peers and invokes a chaincode install

 ;;;","29/Nov/17 2:01 AM;muralisr;Not to disturb the comments flow but may I suggest this section from [~mastersingh24] be brought into Description in some form [~jyellick] ? You do mention ""chicken and egg problem"" but this would help explain what that is for those not following discussion.
{quote}1) Installation of the chaincode bytes is an administrative action performed on individual peers. 2) While chaincode must be installed on a peer in order for it to endorse transactions, peers do not need to have chaincode installed in order to validate and commit transactions for a given chaincode. This is due to the fact that what gets sent through the orderer is actually the read-write set and not that actual chaincode invocation. Because of this, you cannot ""include"" configuration about a chaincode (i.e. endorsement policy) as part of installation. You also cannot use the chaincode endorsement model alone to bootstrap the initial endorsement policy for a chaincode (the chicken and egg problem which [~jyellick] refers to in the description). Endorsement is also not an approval workflow model - it is an agreement protocol on output given a set of inputs. This is why the ""resource configuration"" is required (note that this will go to all peers in a channel not just the ones with chaincode installed).
{quote};;;","29/Nov/17 4:37 AM;jyellick;[~muralisr] I've updated the description per your suggestion.

{quote}
Question - With the addition of the 'Define' step, would it now be possible to actually distribute the chaincode as part of the Define step, and thereby provide an option of skipping the Install step on each peer? For networks where all peers should have the chaincode, and where all channel orgs must agree and sign off on step #2 regardless (this may be a very common deployment model), it seems like there is an opportunity to streamline the process so that manual installation on every peer would not be required. Thoughts?
{quote}

I would second the statement of [~yacovm] that even if we wished to do this, it would be outside the scope of this item and should be written up separately.  However, because it was asked here, in the v0.5/v0.6 times when chaincode was distributed through transactions, this caused many problems for the orderer, because of the unusually large transaction size.  If we wanted a chaincode distribution mechanism, I would think it would make more sense to use the peer to peer gossip dissemination, with validation based on the hash presented through the definition.;;;","30/Nov/17 12:32 AM;jeffgarratt;[~denyeart] your thinking is they way the 0.X release works.  The 1.X design made the decision to move to the bifurcated model for install and instantiation to allow for finer control of chaincode distribution (and perhaps other reasons as well).  ;;;","30/Nov/17 6:14 PM;mastersingh24;Bumping the priority and setting the version to 1.1 (even though this is a subtask);;;","30/Nov/17 8:21 PM;denyeart;It is difficult to like an approach that splits chaincode deployment into three steps (install/define/instantiate), each having a unique method of distribution and storage.  That is one reason I was asking about whether the install/define steps could be combined in a config transaction, at least for the most typical deployment scenario where chaincode gets distributed to all peers. That being said, the solution here does seem to meet all the functional and security objectives, and does not change anything in the actual chaincode programming model.  Given that we have not been able to meet all these objectives using a simpler approach, and given the extent that other alternatives have already been explored, I am ready to vote in favor of this approach.;;;","30/Nov/17 8:48 PM;mastersingh24;[~denyeart] The original design was to basically combine steps 2/3 (well really we were eliminating step 3).  Keeping step 3 basically keeps the current flow but of course adds an extra step to handle the ""chicken and egg"" policy issue;;;","01/Dec/17 9:14 AM;muralisr;Thought it would be illustrative to go through an example using the main steps outlined in description.

[~jyellick] can you vet this  please?

 

4 Peers P1,P2,P3,P4
 5 admins Alice, Bob, Charlie, Dan and Ella.

+Channel setup+

1. The channel is initialized, and in the genesis block, a resources config tree contains a Chaincodes group with a mod_policy, defaulted to /Channel/Application/Admins
 - This results in a Chaincode Group mod_policy ({color:#ff0000}*MP*{color}) for all chaincodes in the channel - Alice or Bob or Charlie

+Chaincode installed on P1,P2+

2. A chaincode is installed via LSCC, or an installed chaincode is queried using the LSCC to retrieve the metadata for the chaincode.
 - This results in mycc.package \{ name : mycc, version:0 , instantiationpolicy({color:#ff0000}*IP*{color}): Dan and Ella }

+Chaincode is defined on the config tree for the channel+

3. The client retrieves the current resources tree, and adds a new chaincode group to the resources tree, as described in FAB-6042, this modification must satisfy the mod_policy of the chaincodes group, and the chaincode is defined with the metadata from (2) and the desired endorsement policy.
 - This results in an endorsement policy ({color:#ff0000}*EP*{color}) for instantiation of chaincode ""mycc""  - P1 and P2

4. The client submits the resource update to the orderer, it is propagated through the blockchain, and committed at the peer. When it commits successfully, the chaincode is now defined.
 - The request passes as modification signed by Alice according to {color:#ff0000}*MP*{color} 1

+Chaincode instantiation is sent to P1, P2+
 
5. The client crafts a traditional LSCC transaction containing the name, version, and arguments for instantiation. The LSCC checks that the chaincode is defined for the channel in the resources tree, checks the locally defined instantiation policy in the chaincode package, and does a chaincode-to-chaincode invocation of Init (as it does today). The resulting read/write set includes an 'instantiated' bit in the LSCC table, as well as some representation of the chaincode metadata it was instantiated with.
 - The request passes as the Proposal is signed by Dan and Ella according to {color:#ff0000}*IP*{color} 2

6. The client sends the LSCC transaction to peers, collecting enough endorsements to satisfy the endorsement policy as specified in the chaincode metadata in the resources tree.
 - The instantiation sent to P1 and P2 and signatures collected

+Instantiation committed on P1,P2,P3,P4+

7. The client sends the LSCC transaction to ordering, which propagates to the peers through the blockchain. This LSCC transaction is validated that the metadata in the resource tree is at the same level, and the usual MVCC checks prevent double Init invocations.
 - Commit time validation passes as signatures P1 and P2  according to {color:#ff0000}*EP*{color} in 3;;;","01/Dec/17 11:47 AM;jyellick;[~muralisr] by and large looks correct.  I've done an inline style comment below with some minor corrections.

{quote}
4 Peers P1,P2,P3,P4
5 admins Alice, Bob, Charlie, Dan and Ella.
Channel setup
1. The channel is initialized, and in the genesis block, a resources config tree contains a Chaincodes group with a mod_policy, defaulted to /Channel/Application/Admins
This results in a Chaincode Group mod_policy (MP) for all chaincodes in the channel - Alice or Bob or Charlie
Chaincode installed on P1,P2
{quote}

The /Channel/Application/Admins policy actually requires a majority of admin signatures, rather than any one of the admin signatures.  However, if the 'single admin' policy were desirable, this could be configured. We could include profiles for each in {{configtx.yaml}}.

{quote}
2. A chaincode is installed via LSCC, or an installed chaincode is queried using the LSCC to retrieve the metadata for the chaincode.
This results in mycc.package \{ name : mycc, version:0 , instantiationpolicy(IP): Dan and Ella }
{quote}
Correct, however, I would note that the query also returns the ID/hash of the chaincode, which is required to be defined as part of the metadata.  Also note, that as of v1.1, there is still no mechanism to satisfy an instantiation policy which requires Dan and Ella, though nothing precludes this in a future update.

{quote}
Chaincode is defined on the config tree for the channel
3. The client retrieves the current resources tree, and adds a new chaincode group to the resources tree, as described in FAB-6042, this modification must satisfy the mod_policy of the chaincodes group, and the chaincode is defined with the metadata from (2) and the desired endorsement policy.
This results in an endorsement policy (EP) for instantiation of chaincode ""mycc""  - P1 and P2
{quote}
This would be one possible and sensible endorsement policy, though like today, it could be whatever the user chose to pass in.

{quote}
4. The client submits the resource update to the orderer, it is propagated through the blockchain, and committed at the peer. When it commits successfully, the chaincode is now defined.
The request passes as modification signed by Alice according to MP 1
{quote}
Correct, if the 'any admin' policy were selected, then the definition would commit successfully.

{quote}
Chaincode instantiation is sent to P1, P2
5. The client crafts a traditional LSCC transaction containing the name, version, and arguments for instantiation. The LSCC checks that the chaincode is defined for the channel in the resources tree, checks the locally defined instantiation policy in the chaincode package, and does a chaincode-to-chaincode invocation of Init (as it does today). The resulting read/write set includes an 'instantiated' bit in the LSCC table, as well as some representation of the chaincode metadata it was instantiated with.
The request passes as the Proposal is signed by Dan and Ella according to IP 2
{quote}
As mentioned previously, the proposal data structure only supports a single signature, so this IP could not pass as of v1.1.  Instead an IP of ""Dan or Ella"" would be required.

{quote}
6. The client sends the LSCC transaction to peers, collecting enough endorsements to satisfy the endorsement policy as specified in the chaincode metadata in the resources tree.
The instantiation sent to P1 and P2 and signatures collected

Instantiation committed on P1,P2,P3,P4
7. The client sends the LSCC transaction to ordering, which propagates to the peers through the blockchain. This LSCC transaction is validated that the metadata in the resource tree is at the same level, and the usual MVCC checks prevent double Init invocations.
Commit time validation passes as signatures P1 and P2  according to EP in 3
{quote}
Correct.;;;","01/Dec/17 7:43 PM;yacovm;{quote}Chaincode instantiation is sent to P1, P2
5. The client crafts a traditional LSCC transaction containing the name, version, and arguments for instantiation. The LSCC checks that the chaincode is defined for the channel in the resources tree, checks the locally defined instantiation policy in the chaincode package, and does a chaincode-to-chaincode invocation of Init (as it does today). The resulting read/write set includes an 'instantiated' bit in the LSCC table, as well as some representation of the chaincode metadata it was instantiated with.{quote}

This part does not make sense to me. 
* We can have an endorsement policy that is arbitrary, and this gives us an ability to ensure that several organizations agreed to a certain read and write
* Yet when we initialize the chaincode data structures, only 1 user gets to pick the input (instantiate). Even though the simulation is simulated on several peers of different organizations, no one other than the instantiator has ""a say"" in the input to the chaincode. 

This is a problem as far as I can see, and can be easily solved via binding the LSCC Init() to the previous chaincode configuration.
* What if we include the arguments to Init() in the chaincode resource config update
* Upon validation of the instantiate, we also check that the peers attested that they were given the matching input as was declared in the config update?;;;","01/Dec/17 9:52 PM;muralisr;[~yacovm] I think its better to do it properly with multi-sig ([~ellaki] ) support to Proposal *which has benefit beyond just Instantiation (ie, potentially for invokes too).* I suppose the argument is that we don't have time for 1.1 ? Actually all this means is extending Proposal.proto and doing the check in LSCC / VSCC ? Isn't that better to do it now ?;;;","01/Dec/17 10:38 PM;yacovm;So the participants would need to first pass around the proposal, and everyone would add their signature header to it, and afterwards - pass it around again, to sign it? because currently the signature is stored outside of the proposal and the signed payload is the proposal bytes... ;;;","01/Dec/17 11:05 PM;muralisr;[~yacovm] basically yes.... Just like confg updates we'd get signatures on the proposal before submitting it... Id phrase like this : participants (real users) sign the proposal and _peers_ would endorse it.

Note that the default packaging can still be used - say for dev test etc- where only sig need is the senders;;;","01/Dec/17 11:54 PM;jyellick;[~yacovm]

{quote}
This part does not make sense to me.
We can have an endorsement policy that is arbitrary, and this gives us an ability to ensure that several organizations agreed to a certain read and write
Yet when we initialize the chaincode data structures, only 1 user gets to pick the input (instantiate). Even though the simulation is simulated on several peers of different organizations, no one other than the instantiator has ""a say"" in the input to the chaincode.
This is a problem as far as I can see, and can be easily solved via binding the LSCC Init() to the previous chaincode configuration.
What if we include the arguments to Init() in the chaincode resource config update
Upon validation of the instantiate, we also check that the peers attested that they were given the matching input as was declared in the config update?
{quote}

This has been discussed, and if we decide that it is a problem, then we can do something to address it, but I am not convinced it is a problem.

First, since the {{Init}} is subject to the same endorsement policy as the rest of the transactions now, there's nothing which prevents the chaincode from doing its own ACL on {{Init}}.

Secondly, {{Init}} must still satisfy the instantiation policy, which, for the time being is limited to one signature, but it does at least restrict who may supply the {{Init}} parameters.

Finally, there is no requirement that {{Init}} do anything sensitive, in fact, most chaincodes can be written quite happily with {{Init}} as a simple no-op.

So, although there are plenty of schemes which could be used to control the parameters which are passed to {{Init}}, I think for this pass, let's keep it simple, and not build in even more complexity until there's really a need for it.;;;","02/Dec/17 12:00 AM;muralisr; 

[~yacovm] agreed. The multi-sig could be a future item....should have mentioned that. It was put there for completeness and to point out the distinction between peers endorsing vs users signing off on a proposal and the resulting expansion of proposal workflows.

One thing... I would disagree on this
{quote}Finally, there is no requirement that Init do anything sensitive, in fact, most chaincodes can be written quite happily with Init as a simple no-op.
{quote}
Features give raise to uses. I'm sure there would be use cases where you want to construct a chaincode with some initialized state. IMO just renaming ""Init"" to something like ""OnInstantiation"" would be clarifying and would invite usage.;;;","02/Dec/17 12:47 AM;yacovm;{quote} there's nothing which prevents the chaincode from doing its own ACL on Init.{quote}

Of course there is. The init transaction is special as it bootstraps the chaincode's data on the ledger.
Consider for example a chaincode that tracks people's accounts and has an init function that initializes the accounts to a starting value.
You can't have any ACL that does correct enforcement, unless you manually hard-code the data into the chaincode, which means it will be the same for all channels and you can't reuse the chaincode ever unless with the same accounts and numbers.

{quote}which, for the time being is limited to one signature, but it does at least restrict who may supply the Init parameters.{quote}
Well I thought the idea here is that we move away from the model where there is a single entity which all the channel members trust to initialize the chaincode properly. To me, we're almost there, and this part is nice to have and completes the solution.
{quote}
So, although there are plenty of schemes which could be used to control the parameters which are passed to Init, I think for this pass, let's keep it simple, and not build in even more complexity until there's really a need for it.{quote}
I don't think there is any complexity. There is zero complexity addition from the user's perspective and a minimal complexity in the development perspective. 
But, if you think it's not important then I won't push back. ;;;","02/Dec/17 2:03 AM;muralisr;[~yacovm] those were my thoughts as well FWIW... but again, if this is too much to do for 1.1, we can slate it for later. 

{quote} I don't think there is any complexity. 
{quote}
That;s what I thought too... but I understand every little thing adds up (in this case I'm thinking doc, testing etc).;;;","02/Dec/17 6:27 AM;binhn;I appreciate everyone here, especially [~jyellick] and [~muralisr] for coming up with a design, documenting and explaining the steps to deploy a chaincode on a channel. The example Murali illustrated helps stitching things together. However, after reading through all this, 1 word comes to mind is complexity, and I ponder on how to possibly simplify it but satisfy our objective.

My grasp of the proposal is as follow:
 # a channel has a chaincode group mod policy indicating who can define a chaincode on this channel
 # to define a chaincode on a channel, the tx must be signed by majority of those in group mod policy; this tx also defines the chaincode Init endorsement policy used during the chaincode instantiation
 # to instantiate the chaincode on the channel, the tx must be signed (out of band) by 1 of those on the instantiate policy (specified in the chaincode install package) and endorsed by peers on Init endorsement policy; this tx also specifies the chaincode Invoke endorsement policy

If I got that right, in summary then, each chaincode would be associated with 4 policies
 # chaincode group mod policy
 # chaincode instantiate policy
 # chaincode Init  [function] endorsement policy
 # chaincode Invoke [function] endorsement policy

This all seems to be necessary, but 1 thought to offer some simplification would be to make an assumption that for a given channel, we would have the same set of orgs responsible for defining any chaincode on the channel, effectively this would eliminate step 3 and 4 (from the description above) due to invariants. It would simplify SDK and CLI not having to process 3 and 4 and subsequently handle 5 and 6.

Of course this simplification would restrict the flexibility of having different sets of endorsers per chaincode on a channel, but it seems worthy of the first pass as I can't come up (at this point) with a real-life use-case where we would need to support multiple completely independent chaincodes, each with a different set of endorsers on a channel.

Thoughts?

 

 ;;;","02/Dec/17 6:44 AM;muralisr;[~binhn]
{quote}This all seems to be necessary, but 1 thought to offer some simplification would be to make an assumption that for a given channel, we would have the same set of orgs responsible for defining any chaincode on the channel, effectively this would eliminate step 3 and 4 due to invariants. It would simplify SDK and CLI not having to process 3 and 4 and subsequently handle 5 and 6.
{quote}
In other words, if we can make it so that ALL chaincodes in the channel have the same set of endorsering signatures, then the per chaincode Endorsement Policy in Step 3 can be moved to channel-wide Endorsement Policy for ALL chaincodes in that channel. Since the key reason for Step 3 is the Endorsement Policy, we can eliminate Step 3 altogether.

In addition, there's another benefit to this... from [~denyeart] comment
{quote}It is difficult to like an approach that splits chaincode deployment into three steps (install/define/instantiate), each having a unique method of distribution and storage.
{quote}
With this, we are back to using the state as the main data model as before.

Sounds like this simplification is not without its merits... in reality how many usecases would need CC1 to be on P1 and P2 while CC2 to be on P2 and P3 - *on the same channel* ? If the answer is rarely then we are paying a lot in terms of complexity (and usability) for something that will rarely be needed.;;;","02/Dec/17 6:57 AM;jyellick;[~binhn]
{quote}If I got that right, in summary then, each chaincode would be associated with 4 policies
 1. chaincode group mod policy
 2. chaincode instantiate policy
 3. chaincode Init [function] endorsement policy
 4. chaincode Invoke [function] endorsement policy
{quote}
[~muralisr] and I discussed (3)/(4) and whether we should allow a differentiation between the two. There are some good arguments for doing so, but as you point out, things already feel pretty complex. Instead, for v1.1, we will enforce that (3) and (4) are in fact the same policy. Of course if we can come up with good concrete use cases for allowing them to differ in the future, we can do so – but for now it seems like a welcomed simplification.

Edit:

I posted before the page refreshed to show [~muralisr]'s comment. -I think I'm getting a little confused with the numbering, in particular, (5)/(6) don't seem to appear in your post, did JIRA try to be too smart and end up changing the numbering?- It has been a long week, I believe that 5/6 are referring to the original description. Since my brain has apparently stopped functioning correctly, I'll return to this later.;;;","02/Dec/17 8:45 AM;muralisr;No worries [~jyellick]. So assuming [~binhn] agrees with the clarification above what we have then is basically these policies
{quote} # chaincode{color:#ff0000}S{color} Init [function] endorsement policy {color:#d04437}(*EP*){color} (channel wide and specified at channel creation time *assuming one endorser set for all chaincodes. E.g endorsement policy will cover P1 and P2 for all the CCs from the set \{P1, P2, P3, P4}. P3 and P4 may have CCs or not have them. This is a statement about what the endorsement policy +for Instantiation+ will be...in [~binhn] scheme this is fixed for all chaincodes in the channel*
 2. chaincode instantiate policy (*{color:#d04437}IP{color}*) specified in the chaincode package (if we go along with multi-sig Proposal)
 3. chaincode Invoke [function] endorsement policy (as currently implemented, no change here){quote}
and this workflow for instantiation
 # The channel is initialized, and in the genesis block, a resources config tree contains a Chaincodes group with *{color:#ff0000}EP{color}* defaulted to /Channel/Application/Admins
 # A chaincode is installed via LSCC, or an installed chaincode is queried using the LSCC to retrieve the metadata for the chaincode.
 # The client crafts a traditional LSCC transaction containing the name, version, and arguments for instantiation and sends to peers. LSCC in each peer checks the locally defined *{color:#d04437}IP****{color}* in the chaincode package, and does a chaincode-to-chaincode invocation of Init. The resulting read/write set is identical to 1.0 RW set.
 # The client collects endorsements to satisfy {color:#d04437}*EP*{color} as specified in the channel configuration
 # The client sends the LSCC transaction to ordering, which propagates to the peers through the blockchain. This LSCC transaction is validated that the metadata in the resource tree is at the same level, and the usual MVCC checks prevent double Init invocations.

*{color:#d04437}**** Assuming we have multi-sig proposal{color}*;;;","04/Dec/17 9:40 AM;jyellick;Thanks [~muralisr], the workflow you outline makes the mechanics of this other proposal much more clear.

I'm not convinced though, that accepting a single channel wide endorsement policy for chaincode instantiation is the best idea.  It seems to defeat the purpose of not requiring chaincode to be installed everywhere.

Consider a channel which contains two different orgs, each of which author a chaincode, and each wish to make the chaincode service available on the channel (but importantly, not share the chaincode bytes with the channel).  What would be a secure instantiation endorsement policy in this case?  To make either chaincode available, the default endorsement policy must be a ""one of"" type policy, which creates a security problem (as an org without the chaincode could trick the network into believe it did).

Instead, if we go the other direction, where all chaincode policy (not only for instantiation, but also for invocation) is defined through a resource transaction, then I think the complexity is reduced, without sacrificing flexibility.

In the proposal from the description, (5) would no longer carry any policy information specified by the client (though a read dependency on the state of the resources tree could be injected by the endorsement).  There is only one place the client need specify chaincode metadata or policies, but the actual lifecycle state of the chaincode remains in the traditional state database.;;;","05/Dec/17 12:01 AM;muralisr;[~jyellick] 
{quote}Consider a channel which contains two different orgs, each of which author a chaincode, and each wish to make the chaincode service available on the channel (but importantly, not share the chaincode bytes with the channel). What would be a secure instantiation endorsement policy in this case? To make either chaincode available, the default endorsement policy must be a ""one of"" type policy, which creates a security problem (as an org without the chaincode could trick the network into believe it did).
{quote}
Right, that really is the question: in a channel will there be different subsets of orgs hosting different chaincodes ? [~binhn] model assumes one subset hosts all the chaincodes so one EP would be crafted with that assumption. This EP could be ""one from each org"" (as opposed to ""any one of these orgs"" which, as you point out, is what it'll have to be if we want to keep the one EP _and_ have multiple subsets of peers hosting chaincodes).

To be clear, I'm not suggesting the simpler model is the right one. All I'm saying is that the reduction in complexity at different levels (usability, code maintenance) at least makes it worth finding out if this model will work. If this works most of the times, it might be worth it I think. Maybe we can even try this for 1.1 and if its limiting relax it in the next rev ?
{quote}-Instead, if we go the other direction, where all chaincode policy (not only for instantiation, but also for invocation) is defined through a resource transaction, then I think the complexity is reduced, without sacrificing flexibility.-
{quote}
-I don't think that buys simplicity - not much at least. Moving the Invoke EP from instantiation to definition TX would mean more code to change and more difference to explain. Also, when we upgrade the chaincode we have to send two TXs, correct ? In a way, keeping the configuration all instantiation-specific at least limits the scope of the config TX. When we upgrade the current endorsment policy for instantiation could be used and so the upgrade would just be an endorsement TX (as it is now).-

 ;;;","05/Dec/17 1:03 AM;muralisr;Strikethru above after chatting with [~jyellick]... the suggestion was NOT 2 EPs one for instantiation and another for invoke as I understood it but 1 EP for both instantiation and invoke.

Both instantiation and invoke transactions should really be governed by the same endorsement policy and so could be specified once when defining the chaincode with the config TX...so the smart contract is governed by 1 endorsement policy for all its transactions.

This _would_ simplify the model.. instantiation and invokes are treated the same way with just chaincode args and no policy args.\

What do you think [~binhn] ? This separates out policy from state execution (having two EPs was one of your concerns) and might make more sense to users ?;;;","05/Dec/17 3:50 AM;ChristopherFerris;[~jyellick] wrote: ""(but importantly, not share the chaincode bytes with the channel)"". 

I can certainly see a chaincode bytes/source that is not shared outside the channel, but with members of the channel? Can you provide a use case for this?  How is one to endorse something that they cannot validate?;;;","05/Dec/17 4:28 AM;jyellick;[~ChristopherFerris] This was a fairly fundamental architectural change that occurred between v0.x and v1.0.  The chaincode bytes are made available explicitly to peers via the 'install' command which is executed by a local peer administrator.  Not all peers need have the chaincode, and consequently, not all peers are able to endorse for all chaincodes in a channel.  Note, this is nothing new in the new lifecycle proposal in this and the parent issue, this is existing chaincode semantics.

Consider a relatively simple example.  There is a channel with two banks which have some sort of exchange contract established between them, and then a number of large customers for these banks.  The customers will invoke the chaincode on both banks' peers, but, they are not privy to the exact agreement between the banks, nor should they be.  In this case, the customers will want to deploy their own peers in the network (so that they have the audit history, and have own peers performing transaction validation), but those peers do not have the chaincode and could/would not be involved in the endorsement policy for that chaincode.

This comes back to the fundamental principle in v1.0 that all peers may validate transactions by applying the endorsement policy to the endorsements, without any knowledge of the chaincode.;;;","06/Dec/17 11:50 PM;muralisr;[~jyellick]  

Here's another solution that we were discussing - best of both. 
# a default ""for all chaincodes in a channel"" policy created at the time of channel create
# a chaincode specific override sent via an config tx if necessary

We don;t have to change the CLI instantiate to do the config+instantiate atomically. If the user wants to override that for a chaincode in the channel, they can send a update config tx with the endorsement policy for the chaincode. 

([~jyellick] is that something that the resource config tree can accommodate ?)

Also with both default and chaincode specific config, we will go with [~jyellick] proposal for one endorsement policy for instantiate and invoke. 

[~mastersingh24] [~binhn] what do you think ?
;;;","07/Dec/17 1:04 AM;denyeart;For what it's worth, there are other benefits to *consistently* defining the chaincode on the channel prior to instantiation/Init() in my opinion.

* The chaincode definition would be the ideal hook for ledger to create resources required for commits (as well as resources required for endorsements if chaincode is installed). In the case of CouchDB, ledger intends to utilize the chaincode definition config transaction as the trigger for creating state database on all peers, as well as indexes (if chaincode is installed). Init() time may be too late, for example in chaincode upgrade scenarios Init() may require the indexes already be in place for data migration logic. In the case of other state databases such as relational, the new chaincode define step would be an ideal time to create the database schema. No such channel-scoped hook was available previously.
* The chaincode definition step could also be used in the future to distribute chaincode, for those networks that want auto-install capability (config tx would have to meet some signature-based installation policy).

I don't mean to distract with other requirements/ideas, beyond pointing out that *consistently* defining chaincode on the channel has additional benefits, now and in future. That's one reason I keep my upvote as written.;;;","07/Dec/17 8:36 AM;binhn;[~muralisr] I am ok with the compromise by making the default as simple as possible and leave the option available. So I am voting for this item with this modification in implementation.

 

We should consider the rest of other things out side of this item, such as below:

[~denyeart] 
{quote}""No such channel-scoped hook was available previously""
{quote}
Wouldn't channel related ledger activities be done at join-channel time rather than per chaincode in the channel? During Instantiate, the peer and lscc control the entire flow, so I think if we want to set up additional things on the ledger, we have that opportunity. 
{quote}The chaincode definition step could also be used in the future to distribute chaincode, for those networks that want auto-install capability
{quote}
What drives this requirement?  It sounds like feature-creep that we should do our best to avoid. ;;;","07/Dec/17 11:40 AM;denyeart;[~binhn] Some of the ledger / statedb setup is per channel/chaincode rather than per channel.  We'll see this more and more as additional state database options get added over time.  The first example of this is the many community requests for chaincode-specific CouchDB indexes required to support chaincode queries - see the full explanation in FAB-3067 description.

Again, I don't mean to distract things with discussion of specific feature proposals here, for now my only point is that with built-in and consistent chaincode ""definition"" on the channel we'll have a solid foundation in place that enables these types of features, now and in the future.  ;;;","08/Dec/17 7:53 AM;jyellick;TLDR; I can support the modifications as endorsed by [~binhn] and [~muralisr]

For more detail, see below.

----
I had an opportunity to speak directly with [~muralisr] and then [~mastersingh24] directly about the modification to this proposal to add 'defaults' for undefined chaincodes.

In short, I'm a little concerned that this proposal is adding an option in an attempt to reduce complexity (and consequently, actually creating complexity).

That being said, from an implementation perspective, adding the ability to enable and specify default chaincode endorsement and validation policies is something that's not terribly difficult to do.  Additionally, since defining the defaults would be optional, for networks which wish to strictly manage their chaincodes, this modification causes those networks no harm.  Because of all of this, I think it's reasonable to adopt this modification and I believe it can be contained as an addition to the existing lifecycle CRs which are presently pending against master.

For use cases like [~denyeart] for deploying chaincode indices along with chaincode definitions, I would suggest that a stance of ""If you want advanced features like indices, you must define your chaincode explicitly.""  Of course this is only a suggestion and something that can and should be discussed directly in the proposal for such features.;;;","09/Dec/17 1:48 AM;elli-androulaki;Hi,

So reading this flow, it seems that a threat model is adopted where instantiation policy is redundant.

It seems to me that in the design above one trusts the endorsement policy to be the right one for that particular chaincode. This trust would derive from the trust one has to the resources/chaincodes mod-policy to properly choose an honest endorsement policy for the chaincode with a specific name and hash (version is implied). 
But then Trust Chaincodes mod_policy -> Trust the chaincode is properly instantiated -> Instantiation policy (if exists) would always match based on our assumption that the mode_policy is trusted.

If on the other hand resouces/chaincodes mod_policy is not (completely) trusted, and there is an instantiation policy to protect not-properly authorised chaincodes from being deployed, then I would say that this way of enforcing the honouring of the instantiation policy can be attacked. How to do that is have the endorsement policy controlled partially by the attacker's endorsers which would make step (5) complete successfully, and force the rest of endorsers of the chaincode into setting the instantiation bit of this chaincode to 1. 

One could argue now that mod_policy is not trusted but it is the endorsement policy that is trusted for the chaincode proposed to be instantiated. However endorsement policy is not attached to the chaincode, but rather is a chaincode/channel combination, and not sure how a client deciding to invoke that can know that it can trust it.. So two things:
* Perhaps how the trust flows in such cases is worth discussing.
* Also notice that endorsement policy is only relevant means of protecting the validation of init, for an endorsement policy-based parameterization of vscc that may or may not be the case for custom vsccs. ;;;","09/Dec/17 2:30 AM;ChristopherFerris;[~jyellick] I understand all that, but the use case you were describing, in the comment I cited suggested that a channel where Org 1 had chaincode and Org2 had chaincode but that they did not share the bytes. Yes, I totally get that they COULD do this. What I was asking is what possible use case there might be for this shielding of the chaincode. That's kind of like you and I participating in a channel where I execute the transaction *that you cannot see* and me saying ""trust me, I didn't skim off some of the profits or add in hidden fees"".

Again, I can appreciate that we want to have endorsing and validating peers where we don't need every node in a channel to execute the transaction. What is less clear to me is what use cases would motivate explicitly shielding the code from participants in the channel. It just seems unnecessarily convoluted.;;;","09/Dec/17 4:30 AM;jyellick;[~elli-androulaki] I agree, that as presented above, instantiation policy is in many ways redundant now.  My belief was that the instantiation policy was already checked during invocation of {{Init}} so I left that in the proposal above attempting to minimize the changes from the old lifecycle model.  In particular, since chaincodes might have been designed which treated {{Init}} as a privileged operation requiring some specific user to invoke it, it seemed worth preserving the check.  I'm a little concerned with overloading this JIRA with a new thread on instantiation policy -- what would you think of opening a new JIRA about it and posting it here?

[~ChristopherFerris]

{quote}
Again, I can appreciate that we want to have endorsing and validating peers where we don't need every node in a channel to execute the transaction. What is less clear to me is what use cases would motivate explicitly shielding the code from participants in the channel. It just seems unnecessarily convoluted.
{quote}

Some users have expressed the desire to keep their chaincode implementation confidential from other members in the channel.  For this model to work, it generally requires that the channel members place additional trust in the chaincode holder or holders.  Often-times these networks can be thought of as ""dictator networks"" where one party has much more power than the other participants.  Although the non-chaincode holding members cannot see the implementation, they still have an immutable record of transactions and their validity.  Although hiding the contract logic is perhaps not 'pure blockchain', to my understanding, it is a model which fabric decided to support or v1. ;;;","09/Dec/17 5:40 AM;ChristopherFerris;[~jyellick] my concern is that the operational model for supporting this is rather cumbersome and really doesn't scale. I could see it being an optional governance model (install chaincode on each peer, then instantiate). However, I have been discussing with some the idea that we support a docker registry-based ""install"" approach where the chaincode image is constructed by the user, uploaded to DTR (could be a private one for the network) and then have the instantiate reference that image. With multi-arch docker support, this should be doable. ;;;","09/Dec/17 6:51 AM;yacovm;{quote}[~jyellick] my concern is that the operational model for supporting this is rather cumbersome and really doesn't scale. I could see it being an optional governance model (install chaincode on each peer, then instantiate). However, I have been discussing with some the idea that we support a docker registry-based ""install"" approach where the chaincode image is constructed by the user, uploaded to DTR (could be a private one for the network) and then have the instantiate reference that image. With multi-arch docker support, this should be doable. 
{quote}
Now we can actually support that, since we don't bake any TLS certificates anymore into the shim container image, like we did in v1.0. 
I agree that the current deployment model, isn't good in the scale aspect. Especially in the part that it takes 15 seconds for the image to be built in the first invocation of the peer.
We really need to just build the image at install, and not at instantiate/invoke.;;;","09/Dec/17 6:57 AM;ChristopherFerris;[~yacovm] or have it pre-built and installed into DTR and then just docker pull(ed) at invocation.;;;","09/Dec/17 7:20 AM;yacovm;I meant of course - to either build, or pull it at install. I see no reason to wait for invocation. Having a slow first-invocation only impairs user experience.;;;","09/Dec/17 7:58 AM;muralisr;[~ChristopherFerris] The idea of registry-based install is orthogonal to all the approaches to ""life-cycle"" issues such as endorsement policies  discussed in this JIRA or as implemented currently ? I think it deserves its own JIRA. Should we open one and continue discussion there ?
;;;","13/Dec/17 11:43 PM;jyellick;For anyone following this thread, there is another proposal in response to this one: FAB-7444.;;;","04/Jan/18 3:12 AM;jyellick;Closing this as WON'T FIX as it has been abandoned.;;;"
Remove unused data type in coordinator module,FAB-7115,24488,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,28/Nov/17 9:57 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,29/Nov/17 9:34 AM,,,,,,,v1.1.0,,,fabric-gossip,,,,0,gossip,,,,,,"There is a datatype defined in {{coordinator.go}}, which no longer in use and could be omitted:

https://github.com/hyperledger/fabric/blob/master/gossip/privdata/coordinator.go#L240

{code}
type dataSources map[rwSetKey][]*peer.Endorsement
{code}
",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo7z:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 10:00 AM;C0rWin;https://gerrit.hyperledger.org/r/15759;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6122 v1.1 upgrade CA subtask 6124,FAB-7116,24489,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,Nishi,scottz,scottz,28/Nov/17 12:02 PM,30/Jul/19 11:36 AM,28/Oct/23 3:01 AM,30/Jul/19 11:36 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this.

First verify steps to upgrade fabric-CA by itself.

Next: by using fabric v1.0.* and fabric-CA v1.0.*, *Ensure network is stable, secure, and able to correctly handle transactions while upgrading fabric CA network component from v1.0.* to v1.1. Then upgrade the fabric to v1.1.

Also: repeat tests, first upgrading the fabric and then the fabric-CA.",,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6124,FAB-6122,,,,,,,,,,,,,,,,,,,,,FAB-6511,,,FAB-6446,FABC-396,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy92v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-3067 v1.1 CouchDB index management,FAB-7117,24490,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,scottz,scottz,28/Nov/17 12:29 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,22/Jun/18 2:40 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,release-planning-1.1,,,,,,"[https://gerrit.hyperledger.org/r/#/c/19945/] addresses all these subtasks testcases:
 * FAB-7251
 * FAB-7252
 * FAB-7253
 * FAB-7254
 * FAB-7255
 * FAB-7256
 * FAB-7263
 * FAB-7264
 * FAB-7265
 * FAB-7266
 * FAB-7267
 * FAB-7268
 * FAB-7269
 * FAB-7270
 * FAB-7271
 * FAB-7272",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3067,FAB-8244,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzyo87:",,,,Unset,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"24/Jan/18 5:21 AM;AdnanChoudhury;Notes:
Are there logs present when each time a index gets created and/or used?

Are there logs when peer uses leveldb but the index is attached with the CC?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6715 mutual TLS,FAB-7118,24491,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,latitiah,scottz,scottz,28/Nov/17 12:38 PM,01/Aug/19 10:07 AM,28/Oct/23 3:01 AM,01/Aug/19 10:07 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Some helpful env vars when testing:

- CORE_PEER_TLS_ENABLED=true
- CORE_PEER_TLS_CERT_FILE=/data/tls/server_wild_vme_sk_dev.pem
- CORE_PEER_TLS_KEY_FILE=/data/tls/server_wild_vme_sk_dev-key.pem
- CORE_PEER_TLS_ROOTCERT_FILE=/data/tls/ca_root.pem

- CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
- CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem
- CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem
- CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6715,,,,,,,,,,,,,,,,,,,FAB-7150,FAB-7153,FAB-7759,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy933:",,,,Unset,,,,,,,Unset,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 2:27 AM;latitiah;Further work on these subtasks are *blocked* until the following questions are answered/delivered:
* API docs for mutual TLS
* process for enabling on an existing network when TLS was initially turned off
* clarification on certificate requirements (flags, etc)
* what are the expected behaviors when there is a mismatch between nodes? Expected error messages?
* What is expected behavior when a channel is updated to have TLS enabled?
* orderer ENV var? ;;;","23/Jan/18 1:39 AM;latitiah;{code}
# Regular TLS settings
- CORE_PEER_TLS_ENABLED=true
- CORE_PEER_TLS_CERT_FILE=/data/tls/server_wild_vme_sk_dev.pem
- CORE_PEER_TLS_KEY_FILE=/data/tls/server_wild_vme_sk_dev-key.pem
- CORE_PEER_TLS_ROOTCERT_FILE=/data/tls/ca_root.pem

# Mutual TLS enabled
- CORE_PEER_TLS_CLIENTAUTHREQUIRED=true (needed to be set on the client and server - not sure why on the client esp. if the node will always be a client??)
# The following env vars are only needed on the client. The cert and key are needed when performing mutual TLS:
- CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem (This is the root CA for the current peers org. The other rootCAs for the other peers in the channel will be added upon config update to the config block.)
# The cert and key are needed when requested by the server when performing mutual TLS:
- CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem
- CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem
{code};;;","23/Jan/18 5:14 AM;latitiah;If an organization wants to have separate channels one of which uses mutual TLS and another which doesn't, the organization can have separate peers with one with mutual TLS enabled and the other without. ;;;","01/Aug/19 10:07 AM;scottz;covered in behave tests.
Also we will be adding a k8s system test network with mutual tls.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6042 chaincode lifecycle management,FAB-7119,24492,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,Ratnakar,scottz,scottz,28/Nov/17 12:40 PM,30/Jul/19 11:37 AM,28/Oct/23 3:01 AM,30/Jul/19 11:37 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Recent decision: this is NOT a v1.1 feature.

FYI:
-Release 1.1 will be delivered with existing 1.0 lifecycle behavior. Target 1.1 Alpha in January.
-We do nothing to break clients in 1.1, or otherwise make fixing lifecycle more difficult for ourselves or painful for our users in the future.
-Fix a couple relatively minor security bugs in 1.1, which can be done without breaking applications.
-Implement the improved endorsement-based lifecycle with multi-sig in 1.2 (or potentially call that release 2.0 to indicate that there are changes).",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6042,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzyo8f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-2005 Identity mixer,FAB-7120,24493,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,latitiah,scottz,scottz,28/Nov/17 12:44 PM,30/Jul/19 11:42 AM,28/Oct/23 3:01 AM,30/Jul/19 11:42 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,,,dubovitskaya,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzyo8n:",,,,Unset,,,,,,,Unset,,,,,,,,,,,dubovitskaya,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jan/18 12:14 AM;dubovitskaya;The code from 2005 is ready to be tested (the only TODO issue in epic 2005 is add 1 missing paragraph to the documentation).

In fact, it was already tested by running e2e demo and also during the integration with Java client-sdk.

This commit adds idemix to the e2e demo:

[https://gerrit.hyperledger.org/r/#/c/15707/]

 

This commit (merged) allows to support local idemix MSP for go CLI: This change set enables local MSP support for the idemix MSP type. A new core.yaml option (localMspType) is used to determine the MSP type. The default is 'bccsp', but it can be set to 'idemix' to support idemix:

https://gerrit.hyperledger.org/r/#/c/14541/20;;;","30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-1973 java chaincode,FAB-7121,24494,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,scottz,scottz,28/Nov/17 12:47 PM,30/Jul/19 11:42 AM,28/Oct/23 3:01 AM,30/Jul/19 11:42 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1973,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzyo8v:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-5781 chaincode start/stop full lifecycle support,FAB-7122,24495,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,,scottz,scottz,28/Nov/17 12:54 PM,30/Jul/19 11:42 AM,28/Oct/23 3:01 AM,30/Jul/19 11:42 AM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.2,,,,,,"This development feature is still in development. It will affect v1.1, but the feature fix-version is not assigned to v1.2 yet, so for now this is just a placeholder and this test work can be deferred.

I am putting this in our v1.1 systest epic, but probably it will be moved to backlog or to v1.2 systest epic after one is created.",,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzyo93:",,,,Unset,,,,,,,Unset,,,,,,,,,,,mastersingh24,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove golint warning from gossip packages,FAB-7123,24496,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,28/Nov/17 5:12 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,29/Nov/17 9:35 AM,,,,,,,v1.1.0,,,fabric-gossip,,,,0,,,,,,,"There are quite a few golint warning on several gossip packages, such as 

{quote}
src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:529:11: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
src/github.com/hyperledger/fabric/gossip/comm/crypto.go:38:1: exported function GenerateCertificatesOrPanic should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/common/common.go:26:1: receiver name should be a reflection of its identity; don't use generic names such as ""this"" or ""self""
src/github.com/hyperledger/fabric/gossip/gossip/certstore.go:47:2: var selfIdMsg should be selfIDMsg
src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:239:2: var selfId should be selfID
src/github.com/hyperledger/fabric/gossip/gossip/gossip_test.go:271:2: var selfId should be selfID
src/github.com/hyperledger/fabric/gossip/gossip/orgs_test.go:115:2: var selfId should be selfID
src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:102:6: exported type Fetcher should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:106:6: exported type Support should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:574:3: var sId should be sID
src/github.com/hyperledger/fabric/gossip/privdata/coordinator_test.go:223:3: var sId should be sID
src/github.com/hyperledger/fabric/gossip/privdata/dataretriever.go:1:1: package comment should be of the form ""Package privdata ...""
src/github.com/hyperledger/fabric/gossip/privdata/dataretriever.go:43:1: exported function NewDataRetriever should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/privdata/pull.go:30:2: exported const MembershipPollingBackoff should have comment (or a comment on this block) or be unexported
src/github.com/hyperledger/fabric/gossip/privdata/pull.go:35:6: exported type PrivateDataRetriever should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/privdata/pull.go:70:1: exported function NewPuller should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/privdata/pull.go:70:107: exported func NewPuller returns unexported type *privdata.puller, which can be annoying to use
src/github.com/hyperledger/fabric/gossip/privdata/pull.go:357:1: receiver name dig2Filter should be consistent with previous receiver name dig2f for digestToFilterMapping
src/github.com/hyperledger/fabric/gossip/privdata/pull_test.go:155:11: if block ends with a return statement, so drop this else and outdent its block
src/github.com/hyperledger/fabric/gossip/privdata/util.go:75:3: var sId should be sID
src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:200:6: exported type Support should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:207:6: exported type DataStoreSupport should have comment or be unexported
src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:655:2: var selfId should be selfID
src/github.com/hyperledger/fabric/gossip/state/state.go:157:1: comment on exported function NewGossipStateProvider should be of the form ""NewGossipStateProvider ...""
src/github.com/hyperledger/fabric/gossip/state/state_test.go:1249:11: should omit type map[uint64]*testData from declaration of var data; it will be inferred from the right-hand side
src/github.com/hyperledger/fabric/gossip/state/state_test.go:1425:11: should omit type map[string]testPeer from declaration of var peers; it will be inferred from the right-hand side
{quote}

Need to take care to reduce and remove those warnings.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyo9b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Nov/17 5:18 PM;C0rWin; https://gerrit.hyperledger.org/r/15763;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Toggle on autodetect address in core.yaml,FAB-7125,24502,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Nov/17 11:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,01/Dec/17 11:15 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"Currently when the peer is started via peer node start, it crashes because it cannot detect an endpoint to be used as the address that a chaincode shim will connect to the peer, because all config endpoints point to 0.0.0.0 

we need to make the peer fallback to an auto-detected address in this case.",,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyo9z:",,,,,,,,,,,,,,,,,,,,,,kchristidis,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Dec/17 11:15 PM;kchristidis;https://gerrit.hyperledger.org/r/c/15769/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vagrant env is missing fabric-ca,FAB-7126,24503,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lehors,lehors,lehors,29/Nov/17 12:05 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,21/Jan/18 5:55 PM,v1.0.4,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,"The fabric-samples repo needs to be mounted into vagrant if it exists, just like fabric-ca and fabric-test.

 ",,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyoa7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,lehors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decision Task: Determine CouchDB database naming based on channel and chaincode,FAB-7130,24509,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,29/Nov/17 12:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 10:38 PM,,,,,,,,,,fabric-ledger,,,,1,review-needed,,,,,,"This work item proposes to change max channel name and max chanincode name length to be 118 characters each.  If this is adopted it would make CouchDB database naming a simple concatenation of channel_chaincode. Note that ‘_’ is a valid separator since channel names are not allowed to contain underscore.

In 1.0 channel name was allowed to be 249 characters. channel_chaincode may therefore exceed the 238 characters allowed in CouchDB database names (assuming unix max filename of 255 plus 17 characters overhead). If we can limit channel and chaincode name to be 118 characters each as of 1.1, then channel_chaincode can simply be used for the CouchDB database name.

If there is not agreement to make this change in 1.1 due to 1.0 compatibility reasons (even though it would be extremely rare to have a channel name or chaincode name exceeding 118 characters),  the fallback would be to implement some complex name mapping for CouchDB database names.  Database physical names would need to be derived from the channel and chaincode names (shortened and uniqueified).  The channel_chaincode to physical database name would have to be stored in a global metadata database.  The name mapping algorithm may result in different names on different peers, depending on the channels that have been joined.  It would be preferred to avoid these complications altogether by simply enforcing that channel and chaincode names must be less than 118 characters each.

For reference: 

Channel naming rules: ""[a-z][a-z0-9.-]*""

Chaincode naming rules: ""[A-Za-z0-9_-]+""

CouchDB database naming rules:
A database must be named with all lowercase letters (a-z), digits (0-9), or any of the _$()+-/ characters and must end with a slash in the URL. The name has to start with a lowercase letter (a-z). 
Fabric enforces ""[a-z][a-z0-9.-]*""  ( replace any . in channel name with $ )

Therefore, we would be good with the simple channel_chaincode database naming convention, assuming the length restriction of channel and chaincode name to be 118 characters each is enforced.

A naming restriction change like this can only be made prior to a long-term support release.  A release note would be required to highlight the change for anybody that has been doing a POC or pilot project on Fabric 1.0.",,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7754,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoav:",,,,,,,,,,,,,,,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 6:21 AM;jyellick;The description indicates that it would be 'rare' that anyone would have created a channel with an ID longer than 118 characters.   But how would this case be handled? The orderer currently enforces a length limit of 249 characters on channel names, so there is certainly nothing which prevents this.;;;","29/Nov/17 10:55 AM;denyeart;[~jyellick] Agreed, we would have to document in release notes that there would be no upgrade path for existing 1.0 channel names longer than 118 characters.

Alternatively, we could decide to enforce not at the channel level but at the ledger level when state database is CouchDB, since CouchDB was not positioned as a production option in 1.0 (due to lack of bulk processing and indexes).  That would also provide some more headroom since it would be the combined channel_chaincode length of 236 that would be the restriction, rather than a strict 118 character restriction on each.  But of course it would be better to do the validation at channel creation and chaincode installation time so that an error can be returned sooner than later in the deployment process.

Obviously these options are not great (hence review-needed), and would be impossible to make in later Fabric releases which have production deployments.  The judgement call here is whether to potentially impact a tiny fraction of 1.0 to 1.1 upgrades, or to implement a special solution to handle 1.0 deployments with extremely long channel names, but adds complexity and risk to Fabric that would be around forever.;;;","30/Nov/17 12:33 PM;jyellick;With the last round of additional restrictions to accommodate Couch, we lost the ability to include mixed case in channel names, as well as the ability for channel names to start with a number.

As [~jeffgarratt] can attest, losing the ability to begin channel names with a number broke the UUID generation scheme that the bdds were using for their channel names (but frustratingly only when the UUID randomly began with a number).  Now we find ourselves in a situation where we must change the channel name restrictions again to accommodate a backend storage limitation.  Would we simply be better off building a general channel name to storage name mapping layer so that when we (inevitably?) find some new storage naming problem (say in a new DB backend) that we do not have to weigh the benefits and costs of breaking existing users again?

Maybe adding a generic mapping layer isn't practical, I'm not sure how our users consume DBs like Couch, so please enlighten me if it is not.;;;","04/Dec/17 9:04 PM;denyeart;[~jyellick] After looking at various options I agree with you.

Let's keep the channel naming rules as is (allow up to 249 characters).  For the CouchDB channel_chaincode database name we can make it unique without complex name mapping by using a hash of channel_chaincode name. I'd recommend if channel_chaincode name exceeds 238 characters then make the CouchDB database name shortened and unique based on the following:

<First 64 characters of provided channel name> _ <First 64 characters of provided chaincode name> _ <SHA256 Hash base64 encoded (channel_chaincode)>;;;","05/Dec/17 1:44 AM;jyellick;Mostly makes sense to me.  Out of curiosity, where does the 238 character limit come from?;;;","05/Dec/17 3:30 AM;denyeart;[~jyellick] The 238 character limit is based on 255 character limit for file system, minus 17 characters overhead that CouchDB uses.  I believe this is similar to how the 249 character limit for channels came into being (255 minus some Kafka overhead). ;;;","05/Dec/17 3:57 AM;jyellick;Ah, I see, thanks [~denyeart], you have my support/vote on this mapping proposal.;;;","20/Dec/17 2:52 AM;denyeart;In the case of private data, there can also be a collection db, so how about these db names:

Channel metadata db:
{quote}{{channel_   // underscore required to distinguish from 1.0 channel db names}}
{quote}
Channel chaincode db:
{quote}channel_chaincode  // note: this works since channel cannot have underscore)
{quote}
Channel chaincode collection db:
{quote}channel_chaincode/collection  // note: use slash since chaincode can have underscore, neither can have slash
{quote}
And if any of these are longer than 238 characters then take the first 50 characters for each part and append a hash of the combined parts at the end, for example for a long channel_chaincode/collection the mapped name which is both user friendly and unique would be:
{quote}<First 50 characters of provided channel name> _ <First 50 characters of provided chaincode name> / <First 50 characters of provided collection name> (  <SHA256 Hash base64 encoded (channel_chaincode/collection)> )  

// note: parenthesis can not be included in any parts and can therefore denote the hash
{quote}
Also note that in 1.0 any channel name with a dot (.) was changed to an underscore (_) in couchdb database name.  In 1.1 any channel name with a dot (.) should be changed to a dollar ($) in couchdb database name, since we want to use underscore as the main separator between channel name and chaincode name.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB state database - database per <channel_chaincode>,FAB-7131,24510,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,29/Nov/17 1:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Jan/18 9:31 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,,,AdnanChoudhury,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyob3:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/17 7:38 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/16151/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add couchdb index definition to chaincode installation package (go chaincode),FAB-7132,24511,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,29/Nov/17 1:02 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Jan/18 7:46 AM,,,,,,,,,,fabric-ledger,,,,0,Release-planning-1.1,,,,,,"Allow indexes that support chaincode queries to be defined

alongside chaincode.  Any index defined in chaincode directory

/statedb/couchdb/indexes will get added to the chaincode

deployment spec code package, so that when the chaincode

is both installed on a peer and instantiated on a channel,

the indexes can be automatically deployed to couchdb.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7696,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyobb:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Jan/18 2:08 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16697/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatically deploy indexes upon processing chaincode instantiation transaction,FAB-7133,24512,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,29/Nov/17 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/Jan/18 1:52 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,"If chaincode is already installed on peer, when chaincode gets instnatiated (or upgraded), the indexes are automatically deployed upon processing the chaincode instantiate (or upgrade) transaction.",,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyobj:",,,,,,,,,,,,,,,,,,,,,,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/18 1:52 AM;manish-sethi;Handled as part of https://jira.hyperledger.org/browse/FAB-7581;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatically deploy CouchDB indexes upon chaincode install,FAB-7134,24513,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,29/Nov/17 1:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Jan/18 2:15 PM,,,,,,,,,,fabric-ledger,,,,0,Release-planning-1.1,,,,,,"If chaincode is not yet installed on peer, the chaincode definition step would create the channel_chaincode database to supports commits, but would not created indexes since the peer cannot yet execute chaincode.  If the chaincode is installed at a later time, the install step would iterate through the peer’s CouchDB channel_chaincode databases and automatically deploy the default chaincode indexes that are included in the chaincode installation package.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyobr:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Jan/18 5:05 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16835/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NOT NEEDED - Node JS SDK support for CouchDB index management,FAB-7135,24514,20844,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,29/Nov/17 1:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Dec/17 8:41 PM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,No longer needed per FAB-3067 design.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyobz:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NOT NEEDED - Java SDK support for CouchDB index management,FAB-7136,24515,20844,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,denyeart,denyeart,29/Nov/17 1:04 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/Mar/18 2:17 AM,,,,,,,,,,fabric-sdk-java,,,,0,,,,,,,No longer needed per FAB-3067 design.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoc7:",,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI does not support TLS connectivity for Peer Endpoint Operations,FAB-7137,24516,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rhegde,rhegde,29/Nov/17 1:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,02/Dec/17 11:40 AM,,,,,,,,,,fabric-peer,fabric-tools,,,0,won't-fix,,,,,,"As per Peer CLI documentation - the support for TLS connectivity is only with Orderer Endpoint that means all operation like Join/Install/Endorsement Proposal Request will be sent unsecured.

```      --cafile string    Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
       --tls              Use TLS when communicating with the orderer endpoint

```

 

In our implementation - all operation related to fabric-network setup is performed using Peer CLI.

CC: [~snehas] [~yacovm]",,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyocf:",,,,,,,,,,,,,,,,,,,,,,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 1:40 AM;yacovm;{quote}As per Peer CLI documentation - the support for TLS connectivity is only with Orderer Endpoint
{quote}
Can you please tell how you infer this? Because If the peer is running with TLS_ENABLED=true, then you won't be able to connect to it without using TLS.;;;","29/Nov/17 6:00 AM;rhegde;I just looked at the script once again, may be there is confusion in our understanding, So [https://github.com/hyperledger/fabric/blob/release/examples/e2e_cli/scripts/script.sh#L36] ==> is the TLS root of trust for Peer Node and `{{ --cafile }}` is the root of trust for orderer node.
 
And Join and Install are operations explicitly on Peer where orderer is not involed and hence `{{ --cafile }}` is not specified. [https://github.com/hyperledger/fabric/blob/release/examples/e2e_cli/scripts/script.sh#L91]
 
Discussed with [~yacovm] for confirmation. This issue can be marked as not-a-defect.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports connection profile,FAB-7138,24517,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,29/Nov/17 1:44 AM,17/Oct/19 2:51 AM,28/Oct/23 3:01 AM,12/Jun/19 4:54 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"PTE supports connection profile, see FAB-5363, FAB-6438",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12514,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15671,FAB-15687,FAB-15690,FAB-15701,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyocn:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,true,"31/Jan/18 4:56 AM;dongming;connection profile information: [https://fabric-sdk-node.github.io/tutorial-network-config.html|https://urldefense.proofpoint.com/v2/url?u=https-3A__fabric-2Dsdk-2Dnode.github.io_tutorial-2Dnetwork-2Dconfig.html&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=SsNbBkOgjTKbtnDCVTqkJIt7kaJhnn_FDMxCtWxY2TQ&m=UKNvm1H15tjroTaEHmKEjn5i8xNh-CO02oUDKNAubxc&s=eMArLjVZRaMWZzP5wg6kKPK_fTrr1WZ4nIazAAT_5XM&e=];;;","06/Jun/19 4:44 AM;dongming;https://gerrit.hyperledger.org/r/c/fabric-test/+/31727;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports channel event service,FAB-7139,24519,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,29/Nov/17 1:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,10/Jan/18 6:47 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"PTE supports event per channel, see FAB-6451, FAB-6911",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyocv:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE supports filtered block event service,FAB-7140,24520,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,29/Nov/17 1:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,25/Jan/18 3:56 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"PTE supports filtered block events, see FAB-6450, FAB-5481",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7333,FAB-7334,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyod3:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable smoke test jobs until duration is reduced.,FAB-7141,24521,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Nov/17 1:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,29/Nov/17 7:45 AM,v1.0.0-alpha2,,,,,,v1.1.0-alpha,,,fabric-ci,,,,0,fabric-ci,,,,,,"disable smoke test verify and merge job until the duration of the build is reduced to 10 mins. To make sure functional tests works as expected, will run smoke tests as cron job may  be 4 or 5 times a day.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyodb:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 7:45 AM;rameshthoomu;patch set has been submitted and merged. With this, we have disabled smoke test verify and merge job on every patch set but to make sure smoke tests are working as expected with every fabric change. So, we run smoke tests (from fabric-test repository) for every 4 hours in Production jenkins.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
samplecc node JS chaincode,FAB-7142,24522,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,dongming,dongming,29/Nov/17 2:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,29/Nov/17 10:46 PM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"Need samplecc Node JS chaincode for performance test.

The samplecc golang chaincode is in https://github.com/hyperledger/fabric-test/tree/master/chaincodes/samplecc/go",,dongming,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyodj:",,,,,,,,,,,,,,,,,,,,,,dongming,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"29/Nov/17 9:17 AM;Ratnakar;[https://gerrit.hyperledger.org/r/#/c/15791/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript general path testing with Kafka and LevelDB and golang chaincode,FAB-7143,24523,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,AdnanChoudhury,AdnanChoudhury,29/Nov/17 2:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,14/Jul/18 1:49 PM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,"This test will exercise the general path of a sample app and use the typescript API, in an end-to-end scenario where it will:
 1) Register itself with a CA (interface userconfig)
 2) Creates network with Kafka Orderer and LevelDB as stateDB, Creates and joins a channel (interface channelRequest, )
 3) install and instantiate golang chaincode (interface ChaincodeInstallRequest, interface ChaincodeInstantiateUpgradeRequest)
 4) Invoke and query (interface ChaincodeInvokeRequest, interface ChaincodeQueryRequest, interface ChaincodeQueryResponse)",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyodr:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 1:49 PM;AdnanChoudhury;see main task.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
docs reference incorrect short link redirect target,FAB-7144,24524,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,29/Nov/17 3:39 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,01/Dec/17 2:31 AM,v1.1.0-preview,,,,,,,,,fabric-release,,,,0,,,,,,,"docs should reference raw file, not GH page for bootstrap.sh script",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyodz:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - remove fabric-z verify and merge jobs from production Jenkins,FAB-7146,24526,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Nov/17 3:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,29/Nov/17 7:43 AM,,,,,,,v1.1.0-alpha,,,fabric-ci,,,,0,fabric-ci,,,,,,remove fabric-z verify and merge jobs from production Jenkins. This has been moved to fabric-s390x verify and merge jobs.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoef:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 7:43 AM;rameshthoomu;patch set has been submitted and merged. With this, fabric-verify-z and fabric-merge-z jobs have been deleted from Jenkins production.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a hyperledger member   I want to understand the rules for introducing new features into the hyperledger fabric system,FAB-7147,24527,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,jeffgarratt,jeffgarratt,jeffgarratt,29/Nov/17 4:25 AM,23/Jan/20 7:17 AM,28/Oct/23 3:01 AM,23/Jan/20 7:17 AM,,,,,,,,,,,,,,0,stale-item,,,,,,"Introduce a proposed governance model wrt to new features/improvements to fabric system.

 

Acknowledgement:

    originator: [~jeffgarratt]",,jeffgarratt,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyoen:",,,,Unset,,,,,,,Unset,,,,,,,,,,,jeffgarratt,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:17 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer Service failed in Message Payloads due to wrong Assertion length.,FAB-7148,24528,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,latitiah,sambhavdutt,sambhavdutt,29/Nov/17 4:39 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,05/Jan/18 10:11 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"Observed the following errors in Orderer Service for
*FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3 * ,

Error Message

Expected response to be of length 1024; received length 17; Result: Query Result...

Failing step: Then a user receives a response containing a value of length 1024 ... failed in 0.000s
Location: orderer.feature:72
Assertion Failed: Expected response to be of length 1024; received length 17; Result: Query Result: """"

And a user queries on the chaincode named ""mycc"" with args [""get"",""a""] ... passed in 2.976s
    Then a user receives a response containing a value of length 1024 ... failed in 0.000s
    And a user receives a response with the random value ... skipped in 0.000s.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/564/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_solo_orderer_using_the_NodeJS_SDK_interface_____1_3_/


",,latitiah,mastersingh24,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/17 12:51 AM;sambhavdutt;ft.png;https://jira.hyperledger.org/secure/attachment/13949/ft.png",,,,,,,,,,,,,,,,,,,,,,"1|hzyoev:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,sambhavdutt,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 9:48 PM;sambhavdutt;The same error is showing up in the fabric-test merge job now.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/111/consoleFull;;;","01/Dec/17 1:19 AM;sambhavdutt;Observed the following errors in fabric-test-verify-x86_64, Build 577,

Scenario Outline: FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3 # orderer.feature:94 

2:08:52     And I use the NodeJS SDK interface                                                                                  # steps/basic_impl.py:25
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.cpp: In function ‘void declare_attributes(v8::Local<v8::Object>)’:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:6:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_CLASS);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:6:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_CLASS);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:27:56: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33    static_cast<PropertyAttribute>(ReadOnly | DontDelete));
02:09:33                                                         ^
02:09:33 ../src/const.cpp:6:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_CLASS);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:7:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_TOKEN);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:7:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_TOKEN);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:27:56: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33    static_cast<PropertyAttribute>(ReadOnly | DontDelete));
02:09:33                                                         ^
02:09:33 ../src/const.cpp:7:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_TOKEN);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]


*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/577/consoleFull;;;","01/Dec/17 7:12 AM;latitiah;This error is sporatic and not consistent. I believe this issue is related to the CI slowness issues. The same test passes for a kafka based orderer network using NodeSDK.

I'm going to lower the priority, but leave the issue open for now.;;;","02/Dec/17 12:37 AM;latitiah;In the meantime while these issues are being looked at in CI, I will increase the 2 minute timeouts to 5 minute timeouts. When it comes to the query and invoke timings, I need to be careful about increasing those times because that could impact tests and env settings and expectations for these settings.
;;;","05/Dec/17 5:10 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/15923/;;;","09/Dec/17 5:47 AM;scottz;[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/test_results_analyzer/] job 613 failed just one iteration of one CI test: this one. 

If the deploy (instantiate) is really all done, then the subsequent invoke should always pass. But it is not always passing.

How long do we arbitrarily wait after the deploy?

I am sure I asked this previously, but I will ask again: Rather than guessing at sleep time, is there anything else we can check, during the deploy verification, before returning successfully from that step?

Would it help if we have it dump out the actual returned status and the data value (instead of simply stating the length is incorrect)?;;;","09/Dec/17 8:41 AM;scottz;[~latitiah] And I noticed that most of the tests in gossip.feature file contain a 5 second wait (minimum) after the deploy. Or, I should say, that is true for all testcases that try an invoke first. For the others the first thing they do is a query (instead of an invoke). All the tests in that file seem to be passing regularly.;;;","14/Dec/17 3:55 AM;scottz;[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/test_results_analyzer/]

Occasionally it still fails. See my previous comments. It is typically the 1.3 test that fails.;;;","20/Dec/17 1:01 AM;sambhavdutt;*Merge test failed for fabric-test-merge-x86_64 - Build # 129*

orderer.Orderer Service.FAB-3852: Message Payloads Less than 1MB, for kafka orderer using the CLI interface -- @1.2

Failing for the past 1 build (Since Unstable#129 )
Took 6 min 33 sec.

Error Message

The containers are not ready in the allotted time (300 seconds)
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 393.344s
Location: orderer.feature:64
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/0c388bcce44011e78ad6fa163ede05d7

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/129/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_kafka_orderer_using_the_CLI_interface_____1_2_/
;;;","27/Dec/17 1:26 AM;sambhavdutt;This test case (wrong deployment size) has failed in the last build  #27 for *fabric-smoke-test-daily-verify-x86_64* 

orderer.Orderer Service.FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3

Error Message:
Expected response to be of length 1024; received length 17; Result: Query Result...

And a user queries on the chaincode named ""mycc"" with args [""get"",""a""] ... passed in 2.986s
    Then a user receives a response containing a value of length 1024 ... failed in 0.000s


*Build Log*

https://jenkins.hyperledger.org/view/fabric-smoke/job/fabric-smoke-test-daily-verify-x86_64/27/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_solo_orderer_using_the_NodeJS_SDK_interface_____1_3_/;;;","28/Dec/17 12:51 AM;sambhavdutt;The *fabric-smoke-test-daily-verify-x86_64* has passed successfully in the last build #28 without any error in the Ordering tests.

 !ft.png|thumbnail! ;;;","28/Dec/17 11:52 PM;mastersingh24;So is there a defect on Fabric or is this a failure due to CI taking too long?;;;","29/Dec/17 4:29 AM;latitiah;This error is not consistent and seems to happen during ""CI slowdowns"". This is indicated from the statement 
{code}
Assertion Failed: The containers are not ready in the allotted time (300 seconds){code}

If there is a different error signature, it would indicate a different issue from timing.;;;","06/Jan/18 2:29 AM;sambhavdutt;This CI slowdown is not happening and the orderer test has been successful from the last six builds. Closing the bug for now as no error observed in this department.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Create cron job to trigger fabric-smoke tests,FAB-7149,24529,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,29/Nov/17 4:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,02/Dec/17 2:54 AM,,,,,,,v1.1.0-alpha,,,fabric-ci,,,,0,fabric-ci,,,,,,"Create a cron job to trigger fabric-smoke-test CI job. This job has to run for every 4 hours irrespective of the changes merged in fabric repository.

Existing [fabric-smoke-tests-verify-x86_64|https://jenkins.hyperledger.org/view/fabric/job/fabric-smoke-tests-verify-x86_64/] and  [fabric-smoke-tests-verify-x86_64|https://jenkins.hyperledger.org/view/fabric/job/fabric-smoke-tests-verify-x86_64/] jobs have been disabled and make it work as cron job. That means, we don't trigger these jobs for every patch set but to make sure smoke tests are working as expected on fabric changes.

 ",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyof3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Update CORE_PEER_TLS_CLIENTAUTHREQUIRED env var - Happy Path,FAB-7150,24530,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Nov/17 4:53 AM,01/Aug/19 10:07 AM,28/Oct/23 3:01 AM,02/Feb/18 12:29 AM,,,,,,,,,,,,,,0,,,,,,,"Be sure to run test with this flag set to true and set to false. 

(See configtx.yaml file) Be sure to verify that user's tls ca certificates are populated and tagged correctly.",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyofb:",,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"23/Jan/18 4:46 AM;latitiah;When a server sends a request for a clientauth certificates and the client does not send them (because it is not configured for mutual TLS - clientauthrequired is set to false), then the handshake fails. If the server requires clientauth, then every client must comply. It is not optional.

 

This will be seen for sdk clients and the current cli node.;;;","27/Jan/18 5:17 AM;scottz;https://gerrit.hyperledger.org/r/#/c/17225/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Set some peers with CORE_PEER_TLS_CLIENTAUTHREQUIRED set true and some set false,FAB-7151,24531,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,29/Nov/17 4:55 AM,28/Jul/19 1:35 AM,28/Oct/23 3:01 AM,28/Jul/19 1:35 AM,,,,,,,,,,,,,,0,,,,,,,"Should receive errors from those with mutual TLS turned off
",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyofj:",,,,,,,,,,,,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 1:35 AM;mastersingh24;no longer needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Verify that cryptogen populates with the client CAs in the user's tls directory,FAB-7152,24532,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Nov/17 4:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Dec/17 4:19 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyofr:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 4:20 AM;latitiah;Changes included a rename of the TLS certificate for the orderer user from server.crt to client.crt.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Update the root certificates to use mutual TLS - updating a channel ,FAB-7153,24533,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Nov/17 5:05 AM,01/Aug/19 10:07 AM,28/Oct/23 3:01 AM,13/Feb/18 6:40 AM,,,,,,,,,,,,,,0,,,,,,,"This should be for clients based on channel membership. (See configtx.yaml file) After performing a config update, the CAs should be dynamically updated.

The environment var
 - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem

is set using the client's organization certificate. The root CAs from the other organizations should be added to the RootCA list dynamically in code. Such that there is no need to add the RootCA certificate file for all organizations to the environment variable.

We need to verify on a network with mutual TLS turned off initially, then turned on and verify that mutual TLS is attained.

Questions:
 - How can I verify that the node has the updated RootCA list besides the ability to communicate with a node in a separate organization? Look in the config update block.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyofz:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"02/Feb/18 12:29 AM;latitiah;https://gerrit.hyperledger.org/r/17413;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Use mutual TLS using NodeSDK,FAB-7154,24534,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,29/Nov/17 5:06 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Feb/18 2:21 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyog7:",,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/18 2:20 AM;scottz;This is a duplicate of FAB-6936. The node sdk team is writing an IT test. We can close this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Use mutual TLS using JavaSDK,FAB-7155,24535,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,latitiah,latitiah,29/Nov/17 5:06 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Feb/18 2:24 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6935,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyogf:",,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/18 2:23 AM;scottz;This is a duplicate of FAB-6935. The java sdk team has an IT test. We can close this task.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-Deterministic Processing of Ledger Transaction by Peer,FAB-7156,24540,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,rhegde,rhegde,29/Nov/17 6:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,10/Dec/17 1:08 AM,v1.0.4,v1.0.5,,,,,v1.0.6,,,fabric-peer,,,,0,,,,,,,"Release - Fabric 1.0.4, Provided by IBMBlockChain

*Setup*
 # Orderer-Kafka-Zookeer
 # Non-TLS Setup
 # 6 Organization Setup, around 15+ channel,
 # 5 Organization with 1 Peer, 1 Organization with 2 Peers.

*Steps*
 # Sent sequential endorsed ledger transaction for around 5mins on a single channel, with a sufficient gap in between (not a stress test)
 # Couch DB docker container of 2 organization were continuously restarted.
  

*Actual Result*
 # Mismatch in the JSON document count for that channel , verified through Couch DB interface.
 # Peer Container went down due to unavailability of Couch DB container (https://jira.hyperledger.org/secure/attachment/13428/peer.81a5c6861ea2.log)
  ",,baohua,C0rWin,denyeart,manish-sethi,mastersingh24,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/17 5:38 AM;rhegde;peer.8ae99f2c3e9c.log;https://jira.hyperledger.org/secure/attachment/13429/peer.8ae99f2c3e9c.log",,,,,,,,,,,,,,,,,,,,,,"1|hzyogn:",,,,,,,,,,,,,,,,,,,,,,baohua,C0rWin,denyeart,manish-sethi,mastersingh24,rhegde,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/17 6:41 AM;Clayton Sims;This comes from CLS.   [~kchristidis]  or [~sanchezl]  could one of you triage this.  ;;;","29/Nov/17 7:41 PM;kchristidis;Does not seem to be orderer related. /cc [~denyeart];;;","29/Nov/17 9:09 PM;denyeart;[~rhegde]
 In order to analyze, you would need to look at the statedb_savepoint documents in couchdb to understand current 'height' of state db, identify which documents (keys) in CouchDB are out of sync, and then look for those keys in peer debug on the various peers to understand the differences. With the existing recovery logic, we would not expect state dbs of the same 'height' to have different key documents, since the key documents for a given block get committed to disk prior to the savepoint being written.

Please identify the keys in question and point to the lines in the trace related to those keys, in the two peers that are not in sync.;;;","30/Nov/17 5:37 AM;rhegde;*Response 1*

I have used the couch-db version field to figure the block number that went missing
 # Block 576 which translates in creation of 1 JSON Document
 # Block 635 which translates in creation of 2 JSON Document and multiple updates to existing JSON documents. 

*Response 2*

Please refer to the log added - *peer.8ae99f2c3e9c.log* indicating Peer also went down during commit processing of Block 576.

 

*Response 3*

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41005/node1-node2/statedb_savepoint]
 \{""_id"":""statedb_savepoint"",""_rev"":""644-fdff898d3f70d6facb04ad04736a8287"",""BlockNum"":644,""TxNum"":1,""UpdateSeq"":""2050-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PytxCw4FSQpAMskerGYpLjUOIDXxYDWbcalJAKmpB6tZjkNNHguQZGgAUkBl87MSd-NVtwCibn9W4ga86g5A1N3PStyIV90DiLr_WUkMDMzGWQC2pmf8""}

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41005/node1-node2]
 \{""db_name"":""node1-node2"",""update_seq"":""2051-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PytxCw4FSQpAMskerGYpLjUOIDXxYDWbcalJAKmpB6tZjkNNHguQZGgAUkBl87MSd-NVtwCibn9W4ga86g5A1N3PStyIV90DiLr_WUkMDMwmWQC2qGf9"",""sizes"":\{""file"":23070179,""external"":1183642,""active"":2125584},""purge_seq"":0,""other"":\{""data_size"":1183642},""doc_del_count"":0,""doc_count"":1109,""disk_size"":23070179,""disk_format_version"":6,""data_size"":2125584,""compact_running"":false,""instance_start_time"":""0""}

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41006/node1-node2]
 \{""db_name"":""node1-node2"",""update_seq"":""2518-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PyvxPQ4FSQpAMskerOYeLjUOIDXxYDVfcKlJAKmpB6u5hUNNHguQZGgAUkBl87MSP-FVtwCibn9W4ju86g5A1N0nZN4DiLr_WUkMDMyZWQC5l2nQ"",""sizes"":\{""file"":25273827,""external"":1190561,""active"":3046761},""purge_seq"":0,""other"":\{""data_size"":1190561},""doc_del_count"":0,""doc_count"":1113,""disk_size"":25273827,""disk_format_version"":6,""data_size"":3046761,""compact_running"":false,""instance_start_time"":""0""}

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41006/node1-node2/statedb_savepoint]
 \{""_id"":""statedb_savepoint"",""_rev"":""645-60eae372ea44f412bf5627284cc560df"",""BlockNum"":644,""TxNum"":1,""UpdateSeq"":""2517-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PyvxPQ4FSQpAMskerOYeLjUOIDXxYDVfcKlJAKmpB6u5hUNNHguQZGgAUkBl87MSP-FVtwCibn9W4ju86g5A1N0nZN4DiLr_WUkMDMwZWQC5lWnP""};;;","30/Nov/17 6:47 AM;denyeart;[~rhegde] Great find.  In order to troubleshoot we will need the peer log at debug level at the time of crash and upon the next start.  In the peer start you will see two INFO messages like this:

2017-11-29 21:28:47.892 UTC [ledgermgmt] OpenLedger -> INFO 1c5 Opening ledger with id = myc
2017-11-29 21:28:47.909 UTC [ledgermgmt] OpenLedger -> INFO 1e5 Opened ledger with id = myc

Between these two messages, if debug is enabled you will see recovery logic that checks the savepoint and if the savepoint doesn't match block height, it should re-apply the valid transactions from the blocks that are missing in state db.  You would see this in peer debug messages, right before the ""Opened ledger"" message.

In our trials, we are not able to reproduce the lost data issue (it always gets recovered correctly), therefore we need to read your debug logs.  Are you able to reproduce with debug level?  Please post the debug log, as well as block number and key that are missing.;;;","01/Dec/17 7:48 AM;rhegde;[Update]

[~denyeart] after some retries - we are again able to reproduce this issue by putting peer in debug mode. I will share all the logs, state db snapshot soon.;;;","07/Dec/17 12:16 AM;rhegde;[~denyeart]

*Log Attachments*

All logs are uploaded for reference @ [http://dts.cls-group.com/] (filename: FAB7156-NonDeterministicTransactionProcessing-5Dec2017.zip) and the credential to access is available with [~Clayton Sims] or [~altharp]. Please check for logs.

Following is the folder structuring used for capturing the logs, bar2xxxx and ibm2xxxx are the 2 organization node folder.  bar2xxxx node's couchdb container was continuously shutdown in this logs capture.

bar2XXXX
 * docker.ps.XXX (contains the snapshot of docker ps at that point of time)
 * f4dc769a87b9.log (where f4dc769a87b9 is the container ID and can be mapped from docker.ps)
 * statedb_savepoint.json
 * all_docs.log (all documents from the couch db)

Same logs naming convention is used for the other node ibm2XXXX

*Summary of the mismatch*
 # Block 848, can be checked as this is missing json documents in bar2xxx and present in ibm2xxxx.
 # Please note - we have done multiple runs on same channel (peer-2-peer channel) which is bar2XXX-ibm2XXX.

 

Let me know for questions.;;;","08/Dec/17 9:05 AM;denyeart;[~rhegde] I have analyzed the debug for block 848. No data was applied to bar2ldn1 for three keys because their transactions were marked as invalid. They were marked invalid on this node because the associated keys were not found in state db at validation time, but the read set indicated they should have already existed in state db. I can only assume the prior transaction(s) state db write for these keys got missed. Unfortunately the prior transactions for these keys are not included in the provided debug logs so we cannot be sure of root cause. Do you have debug logs for the prior blocks/transactions that included these keys? You can find the keys below as well as the version mismatch and invalidation messages.

You could also do a fresh run and provide debug logs from genesis block until the problem occurs.
{noformat}
[36m2017-11-30 22:24:06.830 CET [statevalidator] validateKVRead -> DEBU d227[0m Version mismatch for key [p2pcls:CLS002_GC0C5608G100127D]. Committed version = [%!s(*version.Height=<nil>)], Version in readSet [block_num:806 tx_num:2 ]
[33m2017-11-30 22:24:06.830 CET [statevalidator] ValidateAndPrepareBatch -> WARN d228[0m Block [848] Transaction index [0] TxId [1a16218e7fbfcbdbfe9c4e92a3d22cf566123327f72d5a5ffda7d4dd6b35a514] marked as invalid by state validator. Reason code [11]
...
[36m2017-11-30 22:24:06.834 CET [statevalidator] validateKVRead -> DEBU d23b[0m Version mismatch for key [p2pcls:CLS002_GC0C5608G100127E]. Committed version = [%!s(*version.Height=<nil>)], Version in readSet [block_num:806 tx_num:3 ]
[33m2017-11-30 22:24:06.834 CET [statevalidator] ValidateAndPrepareBatch -> WARN d23c[0m Block [848] Transaction index [1] TxId [35979ad62c0bbc58297e48baf796c17d93c66acdd94dc651866be26076337494] marked as invalid by state validator. Reason code [11]
...
[36m2017-11-30 22:24:06.838 CET [statevalidator] validateKVRead -> DEBU d24f[0m Version mismatch for key [p2pcls:CLS002_GC0C5608G100127F]. Committed version = [%!s(*version.Height=<nil>)], Version in readSet [block_num:807 ]
[33m2017-11-30 22:24:06.838 CET [statevalidator] ValidateAndPrepareBatch -> WARN d250[0m Block [848] Transaction index [2] TxId [ef1a47db16d9b1c9da3d70831a1d79e2e33afe729b2909898008858509c13c6b] marked as invalid by state validator. Reason code [11]
{noformat}
There is also a CouchDB setting that may be worthwhile to try to see if it fixes the problem, change
 delayed_commits = true
 to
 delayed_commits = false
 in CouchDB local.ini (change in both /opt/couchdb/etc and /opt/couchdb/etc/local.d directories to ensure the change is effective). This will ensure CouchDB flushes changes to disk even if the peer flushing/savepoint/recovery logic is not working correctly. This would help pinpoint the problem.
 For more details on the config see: [http://docs.couchdb.org/en/2.0.0/config/intro.html];;;","09/Dec/17 12:50 AM;manish-sethi;I browsed through the validation and commit path of the code in order to get some hint for this problem. I bumped into a bug in the code that seems a a potential reason for this problem.

In this line (https://github.com/hyperledger/fabric/blob/release/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L200), an error is being ignored which would result in marking the transaction invalid.

If this version of the code is being used in the above environment, then in my opinion the best option would be to try with a fix for this.;;;","09/Dec/17 2:52 AM;rhegde;[~manish-sethi]

As discussed, we have uploaded another archive, FAB7156-NonDeterministicTransactionProcessing-8Dec2017.zip which represents for comment added (https://jira.hyperledger.org/browse/FAB-7156?focusedCommentId=35653&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-35653). Please check if this represents the same root-cause. Thanks.

Archive: please note this snapshot was taken little earlier - however the document lost count difference is the same:
 * Diff-file1-file2*.txt contains the missing documents
 * file1.json - list of all json documents from node1
 * file2.json - list of all json documents from node2
 * bar2xxx, ibm2xxx - contains the peer log at INFO level;;;","09/Dec/17 8:25 AM;manish-sethi;Submitted the bug fix for the release branch. It's already fixed in master branch.

https://gerrit.hyperledger.org/r/#/c/16059/;;;","09/Dec/17 10:18 AM;baohua;[~manish-sethi], thanks for the fix.

While in this case, if for only some peers, there is error, what could happen in the network?

There will be still inconsistency in the stateDB among peers?

Is there any way to recovery?

Thanks!;;;","09/Dec/17 11:04 AM;manish-sethi;[~baohua] - with the fix, the peer that encounters an error, does not commit the block and propagates the error upward path. Which means that the block can again be tried for commit. There won't be a data inconsistency but the peer may be well behind others till the error is fixed.;;;","09/Dec/17 6:04 PM;baohua;[~manish-sethi], got the idea.

And how many times for retry?

If the error continue happens, will the peer stop committing, or ignore the block?

I think all these problems need to be addressed?;;;","09/Dec/17 7:31 PM;mastersingh24;https://gerrit.hyperledger.org/r/16059;;;","09/Dec/17 10:38 PM;denyeart;[~baohua] There are already configurable retries between peer and couchdb.  Here is a more complete explanation I added to gerrit:

So at the couchdb layer, any 404 not found error will get turned into nil versionedValue, which matches the read set nil when the key has never been created by prior tran in state db. So that means any errors coming from couchdb layer (after retries are exhausted) is a true unexpected error which should cause block processing to halt. And the error here gets propagated all the way up to gossip state.go when it calls to commitBlock(), which will panic the peer:

logger.Panicf(""Cannot commit block to the ledger due to %s"", err).

Then once the couchdb system problem is corrected (e.g. restart couchdb), then when you bring the peer back up it will process the block successfully.

Now, gossip's block processing may also want to add a retry before panic at that layer.  What do you think [~yacovm]?;;;","10/Dec/17 2:13 AM;yacovm;{quote}Now, gossip's block processing may also want to add a retry before panic at that layer.  What do you think [~yacovm]?
{quote}
 

I would disagree. 
 The retry logic should be different for different types of DB providers, i.e in couchDB it would make sense to have a long sleep between retries, and multiple retries, but in an embedded DB that just writes to the disk like levelDB/rocksDB it wouldn't make any sense to retry for a long period of time.

 For this reason - it doesn't make sense to put that in gossip.

 

I would also add and say that if such a retry logic is implemented (in a lower layer than gossip) then the panic should be moved there.

[~C0rWin] wdyt?;;;","10/Dec/17 7:28 AM;C0rWin;I do not think that gossip should handle re-tries logic in case of DB failures and inability of ledger to commit the block and yes this is sounds reasonable that panic would be moved into lower layers rather than gossip.;;;","10/Dec/17 3:05 PM;denyeart;[~yacovm] [~C0rWin]   Right - ledger layer should and does handle retry and error logic based on the specific state db.  Other non-database errors such as during block validation or block unmarshalling also can return an unexpected error up to gossip layer, triggering peer panic since block processing cannot continue. I was curious if anybody thought some of these types of errors may be recoverable upon retry rather than panic. [~baohua] raised the question of retries here, but let's discuss in rocket.chat since it is not directly related to this JIRA item.;;;","10/Dec/17 4:43 PM;C0rWin;[~denyeart] if failure is due to inability to unmarshal structure or due to validation, there is very unlikely that after re-try it will succeed. On contrary if the failure is due some disk or temporary database dis-connectivity re-trying makes a lot of sense to me. Therefore if you saying that DB and disk related failure has been handled by ledger with respect to giving it another try, I do not see what else could be done. wdyt [~yacovm]?  ;;;","10/Dec/17 5:50 PM;yacovm;Agreed;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript general path testing with Solo and LevelDB with golang chaincode,FAB-7157,24542,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,29/Nov/17 6:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Jan/18 4:03 AM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,"This test will exercise the general path of a sample app and use the typescript API, in an end-to-end scenario where it will:
1) Register itself with a CA (interface userconfig)
2) Creates network with Solo Orderer and LevelDB as stateDB, Creates and joins a channel (interface channelRequest, )
3) install and instantiate chaincode (interface ChaincodeInstallRequest, interface ChaincodeInstantiateUpgradeRequest)
4) Invoke and query (interface ChaincodeInvokeRequest, interface ChaincodeQueryRequest, interface ChaincodeQueryResponse)",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyogv:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript general path testing with Kafka and CouchDB with golang chaincode,FAB-7158,24543,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,AdnanChoudhury,AdnanChoudhury,29/Nov/17 6:57 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,14/Jul/18 1:49 PM,,,,,,,,,,,,,,0,,,,,,,"This test will exercise the general path of a sample app and use the typescript API, in an end-to-end scenario where it will:
 1) Register itself with a CA (interface userconfig)
 2) Creates network with Kafka Orderer and CouchDB as stateDB, Creates and joins a channel (interface channelRequest, )
 3) install and instantiate golang chaincode (interface ChaincodeInstallRequest, interface ChaincodeInstantiateUpgradeRequest)
 4) Invoke and query (interface ChaincodeInvokeRequest, interface ChaincodeQueryRequest, interface ChaincodeQueryResponse)",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoh3:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 1:49 PM;AdnanChoudhury;See main task.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript general path testing with Kafka and LevelDB and node chaincode,FAB-7159,24544,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,AdnanChoudhury,AdnanChoudhury,29/Nov/17 6:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,14/Jul/18 1:50 PM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,"This test will exercise the general path of a sample app and use the typescript API, in an end-to-end scenario where it will:
1) Register itself with a CA (interface userconfig)
2) Creates network with Kafka Orderer and LevelDB as stateDB, Creates and joins a channel (interface channelRequest, )
3) install and instantiate chaincode in node language(interface ChaincodeInstallRequest, interface ChaincodeInstantiateUpgradeRequest)
4) Invoke and query (interface ChaincodeInvokeRequest, interface ChaincodeQueryRequest, interface ChaincodeQueryResponse)",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyohb:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/18 1:50 PM;AdnanChoudhury;see main task.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Samples - Balance Transfer - readme commands do not work,FAB-7160,24545,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,29/Nov/17 7:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 2:24 AM,,,,,,,,,,,,,,0,,,,,,,Some of the readme commands do not work. Update the readme sample commands and supporting sample application code.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyohj:",,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Optimize build processes for fabric-verify job,FAB-7169,24554,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Nov/17 7:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Apr/18 12:42 AM,,,,,,,v1.2.0,,,fabric-ci,,,,0,fabric-ci,,,,,,"Optimize build processes for fabric-verify job. Existing fabric-verify jobs builds docker images and binaries at each job level (fabric-unit-tests, fabric-behave, fabric-smoke-tests, fabric-e2e-tests, etc..)  this is consuming lot of build time and wasting lot of resources. The below proposed approach should fix above said issues.
 * Create a build job which checks doc changes (.md or .rst or .txt) from the git commit messages
 * If patch set is related to above mentioned changes, then don't trigger any build and send +1 to Gerrit patch set.
 * If patch set is not related to above said changes, then build fabric and fabric-ca docker images also builds binaries. upon successful, push these images and binaries to nexus repository.
 * once the above job is successfully executed, trigger smoke job (byfn with sample channel) as downstream by pulling published images from nexus repository.
 * if successful, then run other verify test jobs in parallel (max 20-30 mins), including verifying basic tests for fabric-sdk-* and fabric-ca (and possibly soon to be added) cello and other tools:
 ** fabric UT tailored for the specific types and locations of files
 ** e2ecli
 ** behave tests
 ** fabric-ca ACL e2e integration test with fabric",,agrimberg,bramwelt,harsha544,rameshthoomu,ryjones,sambhavdutt,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/18 5:29 AM;ryjones;Screen Shot 2018-02-27 at 12.29.24 PM.png;https://jira.hyperledger.org/secure/attachment/14701/Screen+Shot+2018-02-27+at+12.29.24+PM.png","28/Feb/18 5:31 AM;ryjones;Screen Shot 2018-02-27 at 12.30.23 PM.png;https://jira.hyperledger.org/secure/attachment/14702/Screen+Shot+2018-02-27+at+12.30.23+PM.png",,,,,,,,,,,,,,,,,,,,,"1|hzyojj:",,,,,,,,,,,,,,,,,,,,,,agrimberg,bramwelt,harsha544,rameshthoomu,ryjones,sambhavdutt,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 6:52 AM;rameshthoomu;Patch set has been submitted. looks like patch set is good but some testing is required on this. Will update the status once done.;;;","05/Dec/17 9:31 AM;rameshthoomu;Posting [~ChristopherFerris] comments here:

Just so we are clear, I thought I would document what I believe we need to be doing, based on the discussion we just had.
 
1. break down the jenkins jobs:
   a. - build x86 - cache images and binaries in a tarball tagged with the commit sha (abbreviated)
   b. - if 1.a succeeds, trigger end-2-end ""smoke test"" using just the CLI (no java or node sdk passes) using the cached images and binaries from 1.a (see note below regarding dependent images)
   c. - if 1.b succeeds, trigger x86-verify (UT) and x86-behave (BDD) tests with images and binaries cached from 1.a
          (note, we will run the full set of UT tests here, not the desk-check)
 
2. since we are not building and testing Z on every CI pass, we should do this once daily. If it fails, notify the maintainers. At least we know the set of CRs to examine for the failure on Z and we can assign someone to fix it (would need to be someone from Systems anyway).
 
3. we should select a stable build each day to be designated the daily-stable-build from the cache (could be one from previous day) and tag it as something like ""daily-stable"". This will be the set of images and binaries that we use for the integration and svt tests.
 
If we need images/binaries from a dependent repo (e.g. fabric-ca, or fabric-sdk-* etc) then we should use either the published image, or the one that will be tagged as ""daily-stable"" once we adopt the pattern across all repos.
 
Note also that this will greatly facilitate publishing a release because we can advance a specific tagged set of images and binaries through the gauntlet of tests etc and we can simply publish those to DockerHub etc whenthe maintainers decide that we are at end of job.
 
As soon as [https://gerrit.hyperledger.org/r/c/15637/] is merged, I can submit the CR for fabric to remove couchdb and kafka etc from the fabric build and have it use the latest published images instead.;;;","19/Jan/18 12:00 AM;rameshthoomu;*CI Status:*

Comment based triggers are not working in production Jenkins. We have created fabric-verify-build-check-x86_64 job which verifies the changes in the commit message and trigger other jobs based on the condition/comment posted in the Custom Build Message. Below are the conditions

                 – If the change is about WIP, Ignores the patch set and sends success back to gerrit with +1

                 – If the change is doc change (only .md or .rst or .txt) then the build check job posts ""Build DOCS"" and which triggers fabric-docs-build-x86_64 job.

                 – If any other change like (go files with doc changes) then build check job verifies basic checks and build and publish docker images & binaries to Nexus2 and nexus3.

                          – Once these checks are passed, build check job triggers ""fabric-verify-byfn-checks-x86_64"" which runs e2e tests from fabric-samples repository by pulling images and binaries from nexus.

                          – After the byfn tests are passed, this job posts ""Build functional"" comment to ""fabric-verify-unit-tests-x86_64"" job which executes unit-tests by pulling images and binaries from nexus.

Pushed above jobs to production Jenkins and skipping the failure Vote on Gerrit patch sets. Above *approach is not working* with the existing Gerrit/Jenkins Configuration and the same is working in personal Gerrit/Jenkins setup. I have informed Linux Foundation team about this issue and yet to get response from them.;;;","23/Jan/18 11:16 PM;rameshthoomu;Gerrit Trigger is not working to post comments to Jenkins jobs. We had discussion with LF team (@andy, [~jwagantall], @ry and Tongli on this issue and it seems issue is with Gerrit running in production mode and it don't allow to post comment and listen on the same user. I have verified this in Gerrit running in developer mode (no restrictions applied on user) and it's working as expected.

We are still working on this and let you know the update soon.;;;","02/Feb/18 12:22 AM;rameshthoomu;We had discussion with LF developer (Tanhaa) on the issue (Jobs are not triggering for the comments posted in the gerrit patchset) .

He agreed that, existing Jenkins/Gerrit configuration has an issue. He said he will work on this to understand what is the exact issue causing here. He suggested another solution to unblock us while he is working on finding the root cause of the issue.

I have submitted multiple patches to trigger parametrized builds. This is still an experimental change;;;","08/Feb/18 3:08 AM;rameshthoomu;*latest update:*

CI flow is now working as expected: removed the docs job from this flow,

On every patch set submitted, Below is the flow working right now

-- Trigger ""fabric-build-checks"" job (fabric-verify-build-checks-x86_64), which checks the commit message first and do the below steps

       – If commit has ""WIP"", Jenkins Ignore the build and notifies gerrit patch set with +1

       – If it is non documentation changes, do basic checks like ""license, linter, spelling"" if successful, build docker images & binaries and push them to nexus2 & nexus3

       – upon successful, triggers ""smoke"" test job (fabric-verify-byfn-checks-x86_64)

-- Smoke test job pulls docker images and binaries from the previous job and run the fabric-samples e2e tests

    – upon successful, this triggers downstream job (fabric-verify-unit-tests-x86_64)

-- Unit-tests job pulls docker images, binaries and trigger the unit-tests.

Above flow is working as expected, and we are seeing build time is reduced by 10 mins in each build. As we have only two jobs (smoke and unit-tests) not seeing huge advantage with build time.

*Issues:*

  **  1)  Downstream job results are not posting back to gerrit after execution. i.e it shows only the build-checks job result on gerrit patch set.

  2) Upstream job result is overriding by the downstream job results. i.e you will always see +1 immediately after execute the build-checks job irrespective of the downstream job result

  3) Downstream jobs may fail when a developer accidentally post a comment without checking success result of upstream job. This process will fail to pull the images and binaries when a developer triggers a downstream job by posting comments in the gerrit patch set.

[~tongliofcary] ^^;;;","10/Feb/18 4:57 AM;rameshthoomu;[~tongliofcary] [~jwagantall] [~rjones-lf] I have submitted patch to disable this flow from production Jenkins system.. Will enable, once the above *issues* are addressed/resolved. We are also waiting for an update on Jenkins plugin issue (not able to trigger the Jenkins jobs after a comment is posted to gerrit patchset) from Linux Foundation team. 

I don;t see Thanh ha JIRA ID.;;;","14/Feb/18 1:02 AM;tongliofcary;[~jwagantall] [~ry] We really need to get these problems resolved to move forward. Invoking downstream jobs from upstream jobs creates multiple entries to a job because downstream jobs can be invoked by comments from a developer, and from upstream job, multiple ways of invoking a job creates a lot more code and making the voting process very complicated. I think that the LF systems really need to make sure that the comment can invoke the jobs, this is very basic and I have tried on so many version of jenkins and systems, they all worked perfectly. Without this basic function, we can not really put these new jobs in place. It is very urgent for your team to resolve this problem.;;;","14/Feb/18 3:12 AM;tongliofcary;[~ry] [~jwagantall] please also see this ticket which has been open for a long time. https://rt-sso.linuxfoundation.org/Ticket/Display.html?id=51058
;;;","14/Feb/18 9:45 AM;ryjones;[~tongliofcary] [~rameshthoomu] [~ChristopherFerris] This is our plan. The assumption is some plugin interaction in production is causing this failure. We are:

# standing up a new Jenkins system, with only the minimum number of plugins required to run
# asking you to publish a set of jobs we can debug with on this new jenkins
# slowly adding more of the needed plugins until we can support all of the jobs we use today, correctly, until your job either breaks or works
# if it works, we will replace the current production Jenkins system with the new one. If it breaks, we will know which plugin exactly is causing the issue.

Once the new Jenkins instance exists, the exploration of the plugins will be time boxed to one week.
;;;","15/Feb/18 12:02 AM;tongliofcary;[~ryjones][~jwagantall]Thanks for doing this. Please let me know as soon as the env is up.;;;","19/Feb/18 10:49 PM;rameshthoomu;[~ryjones] any update on the new jenkins environment setup and testing on the patch [https://gerrit.hyperledger.org/r/#/c/17939/] ?;;;","27/Feb/18 6:01 AM;ryjones;the ""build on comment"" issue is resolved. there is still work to atomize the builds.;;;","27/Feb/18 8:08 AM;bramwelt;Hi [~rameshthoomu] and [~tongliofcary], I just wanted to chime in to comment on how OPNFV is already doing something similar to this.

We use the multijob plugin to trigger on changes to gerrit, using [phases|https://build.opnfv.org/ci/job/compass-verify-xenial-master/] (some in parallel) to easily identify parts of the build (basic, verify, smoke, etc). You can see the underlying JJB [here|https://github.com/opnfv/releng/blob/master/jjb/compass4nfv/compass-verify-jobs.yml#L52].

We have a single docs job for all projects that watch '/docs/*', and we just ensure builds for projects don't trigger on changes to docs using the Gerrit file-path. Some of our projects don't need CI, but still need to have +1 verified, so we have a simple [hello-world|https://github.com/opnfv/releng/blob/master/jjb/global/basic-jobs.yml#L8] job that does that.

Our artifacts are also generally built in the first step, then pulled down in the next step, since we don't build & deploy on the same machines. All of this is managed through the build scripts through, and isn't Jenkins specific.;;;","28/Feb/18 1:16 AM;tongliofcary;[~ryjones]please add the solution why it was not working and now it is working so that when others having similar issues they can refer to this one easily. Thanks.;;;","28/Feb/18 1:17 AM;tongliofcary;[~bramwelt]Thanks a lot Trevor for chiming in on the matter. your help is greatly appreciated.;;;","28/Feb/18 5:31 AM;ryjones;[~tongliofcary] the email address the gerrit plugin in Jenkins used to return results was the same one used to trigger builds. This was changed, but it did not change the performance of the trigger. The next step is you need to stop and start the gerrit plugin - it does not read the config changes you make in real time, only on startup.

!Screen Shot 2018-02-27 at 12.29.24 PM.png|thumbnail!

once you make this change you need to click the blue ball here to stop the plugin, then the red ball to start it so it respects the config change

!Screen Shot 2018-02-27 at 12.30.23 PM.png|thumbnail!;;;","16/Apr/18 12:38 AM;rameshthoomu;This has been implemented few weeks back and it's working as expected in production. Thanks to everyone.. (y);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Create build job to publish images and binaries to nexus after successful run,FAB-7173,24558,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Nov/17 7:38 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Dec/17 2:03 AM,,,,,,,v1.1.0-alpha,,,fabric-ci,,,,0,fabric-ci,,,,,,"Create a build job to publish images and binaries after execute daily tests from fabric-test repository. Once the tests are executed successfully, tag binaries and images as ""DAILY_STABLE"" and trigger downstream job to publish tagged images and binaries to nexus repository.

Once the images are successfully published, pull these images to test integration tests. Will create a separate task for this.",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyokf:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/17 3:34 AM;rameshthoomu;Patch has been submitted and merged.. observed 400 reason code error from sandbox.. Working on the fix;;;","14/Dec/17 11:31 PM;rameshthoomu;Patch has been submitted to publish fabric, fabric-ca images to nexus3 docker repository and fabric-binaries to nexus2 with DAILY_STABLE tag.;;;","15/Dec/17 2:03 AM;rameshthoomu;patchset has been created and it got merged. [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/]

fabric-test-daily is an upstream job which triggers downstream job after successful execution. Downstream job publishes images and binaries to nexus repository for SVT and IT tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[CI] - Create downstream jobs to trigger smoke, e2e, unit-tests, behave tests after successful build job",FAB-7174,24559,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,29/Nov/17 7:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/Jan/18 12:06 AM,,,,,,,v1.1.0-alpha,,,fabric-ci,,,,0,fabric-ci,,,,,,"configure downstream jobs (e2e, unit-tests, behave tests, smoke test) and trigger after successfully execute the build job (upstream) and send the vote (+1 or -1) to gerrit patch set.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyokn:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/17 1:12 AM;rameshthoomu;Patch has been submitted and it's in-review. Right now this is blocked as we don't have nexus credentials stored in sandbox environment. checking with LF team on this. https://gerrit.hyperledger.org/r/#/c/15877/;;;","11/Jan/18 12:06 AM;rameshthoomu;This process has been pushed to production Jenkins and able to trigger upstream and downstream jobs. Below is the process in experimental stage in production CI.

- upon every patch set submitted to fabric, Jenkins trigger fabric-build-checks-x86_64 CI job and verify the commit message first, if the commit message says WIP, says success +1 on gerrit ignoring build result. If the commit says documentation changes, trigger documentation build job and send the result back to gerrit. If the commit contains code changes like go files, then trigger smoke test job and run the downstream jobs (unit-tests and behave tests ) parallel.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systest FAB-6122 v1.1 upgrade SDK subtask 6125,FAB-7175,24560,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,scottz,scottz,29/Nov/17 8:09 AM,27/Jul/19 9:29 PM,28/Oct/23 3:01 AM,27/Jul/19 9:29 PM,v1.1.0,,,,,,,,,fabric-quality,,,,0,Release-planning-1.1,,,,,,"Refer to [https://wiki.hyperledger.org/projects/fabric/proposedv1_1] and the New Feature JIRA blocking this.

Start by using fabric v1.0.* and fabric-SDK v1.0. *Ensure network is stable, secure, and able to correctly handle transactions while upgrading fabric SDK network component from v1.0.* to v1.1. Then upgrade the fabric to v1.1.

Also: repeat tests, first upgrading the fabric and then the fabric-SDK.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6125,FAB-6122,,,,,,,,,,,,,,,,,,,,,,,,FAB-7212,FAB-6446,FAB-8230,FAB-8231,,,,,,,,,,,,Unset,,,FAB-6434,,,,,,,,,"1|hzy92n:",,,,Unset,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript negative testing with incorrect channels,FAB-7176,24561,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,29/Nov/17 8:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Mar/18 12:28 AM,,,,,,,,,,fabric-sdk-node,,,,0,,,,,,,"This test will exercise an error path of a sample app and use the typescript API, in an end-to-end scenario where it will:
1) Register itself with a CA (interface userconfig)
2) Creates network with Kafka Orderer and LevelDB as stateDB, 
3) Creates a channel (interface channelRequest, )
4) Attempt to join an incorrect channel

 Expected result: Should fail with proper error message",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyokv:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript negative testing with instantiating chaincode without installing,FAB-7177,24562,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,29/Nov/17 8:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Mar/18 12:34 AM,,,,,,,,,,,,,,0,,,,,,,"This test will exercise an error path of a sample app and use the typescript API, in an end-to-end scenario where it will:
1) Register itself with a CA (interface userconfig)
2) Creates network with Kafka Orderer and LevelDB as stateDB, 
3) Creates a channel (interface channelRequest, )
4) joins channel
5) instantiate chaincode

Expected result: Should fail to instantiate with proper error msg.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyol3:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Typescript negative testing with temporarily downed peer,FAB-7178,24563,21377,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,29/Nov/17 8:19 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Mar/18 12:43 AM,,,,,,,,,,,,,,0,,,,,,,"This test will exercise an error path of a sample app and use the typescript API, in an end-to-end scenario where it will:
1) Register itself with a CA (interface userconfig)
2) Creates network with Kafka Orderer and LevelDB as stateDB, 
3) Creates a channel (interface channelRequest, )
4) joins channel
5) install+instantiates chaincode
6) Downs a peer and queries the peer

Expected result: Should fail with proper error message.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyolb:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorporate using configtxlator for updating channel,FAB-7179,24564,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Nov/17 10:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/Apr/18 2:50 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyolj:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add the inclusion of the user's mutual tls certificates with cryptogen,FAB-7180,24565,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Nov/17 10:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,26/Jan/18 11:19 AM,,,,,,,,,,,,,,0,,,,,,,Verify the cryptogen files are generated for mutual TLS.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyolr:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 1:21 AM;latitiah;It seems that there were no changes to cryptogen to allow for mutual TLS. The only change was a file name change. There is an outstanding question in FAB-6716 to verify that this is in fact the case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add mutual TLS to the default config setup,FAB-7181,24566,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,29/Nov/17 10:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/Dec/17 5:28 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyolz:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,true,"01/Dec/17 1:41 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/15831/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add the NodeSDK API calls for using mutual TLS,FAB-7182,24567,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,29/Nov/17 10:45 AM,28/Jul/19 1:34 AM,28/Oct/23 3:01 AM,28/Jul/19 1:34 AM,,,,,,,,,,,,,,0,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyom7:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderer (solo), but no peers, send transactions successfully (from 1.0.x to 1.1)",FAB-7184,24569,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:47 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderer (solo), but no peers, send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyomn:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderer (solo), and peers, send transactions successfully (from 1.0.x to 1.1)",FAB-7185,24570,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:47 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderer (solo), and peers, send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyomv:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderer (solo), but no peers, send channel config updates to enable new capabilities, and peers should panic (from 1.0.x to 1.1)",FAB-7186,24571,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:47 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderer (solo), but no peers, send channel config updates to enable new capabilities, and peers should panic (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyon3:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderer (solo), and all peers, send channel config updates to enable new capabilities, and send transactions successfully (from 1.0.x to 1.1)",FAB-7187,24572,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:47 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderer (solo), and all peers, send channel config updates to enable new capabilities, and send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyonb:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderers (kafka), but no peers, send transactions successfully (from 1.0.x to 1.1)",FAB-7188,24573,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:47 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderers (kafka), but no peers, send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyonj:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderers (kafka), and peers, send transactions successfully (from 1.0.x to 1.1)",FAB-7189,24574,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:48 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderers (kafka), and peers, send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyonr:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderers (kafka), but no peers, send channel config updates to enable new capabilities, and peers should panic (from 1.0.x to 1.1)",FAB-7190,24575,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:48 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderers (kafka), but no peers, send channel config updates to enable new capabilities, and peers should panic (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyonz:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade orderers (kafka), and all peers, send channel config updates to enable new capabilities, and send transactions successfully (from 1.0.x to 1.1)",FAB-7191,24576,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:48 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade orderers (kafka), and all peers, send channel config updates to enable new capabilities, and send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoo7:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade all orderers(kafka), upgrade 2 peers out of 4, and send invokes before and after config update to enable new capabilities (from 1.0.x to 1.1). Two peers (v1.0) panic at last step. After upgrading those 2 peers, they recover.",FAB-7192,24577,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:48 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Upgrade all orderers(kafka), upgrade 2 peers out of 4, and send invokes before and after config update to enable new capabilities (from 1.0.x to 1.1). Two peers (v1.0) panic at last step.{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoof:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DEFER - Test scenario: Upgrade kafka/zk, leave orderers as is, and send transactions successfully (from 1.0.x to 1.1)",FAB-7193,24578,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,29/Nov/17 11:26 AM,30/Jul/19 11:41 AM,28/Oct/23 3:01 AM,30/Jul/19 11:41 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,,,,,,"{color:#000000}Upgrade kafka/zk, leave orderers as is, and send transactions successfully (from 1.0.x to 1.1){color}",,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyoon:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DEFER - Test scenario: Upgrade 2 of 4 kafka, leave orderers as is, and send transactions",FAB-7194,24579,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,29/Nov/17 11:27 AM,30/Jul/19 10:47 AM,28/Oct/23 3:01 AM,30/Jul/19 10:47 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Upgrade 2 of 4 kafka, leave orderers as is, and send transactions
{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyoov:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DEFER - Test scenario: Upgrade kafka, reconfig orderers to use new kafka version, and send transactions successfully (using v1.0 orderers, and again using v1.1 orderers)",FAB-7195,24580,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,29/Nov/17 11:28 AM,30/Jul/19 10:47 AM,28/Oct/23 3:01 AM,30/Jul/19 10:47 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Upgrade kafka, reconfig orderers to use new kafka version, and send transactions successfully (using v1.0 orderers, and again using v1.1 orderers){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyop3:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DEFER - Test scenario: Upgrade kafka, upgrade orderers, reconfig orderers to use new kafka version, and send transactions successfully (from 1.0.x to 1.1)",FAB-7196,24581,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,29/Nov/17 11:28 AM,30/Jul/19 10:47 AM,28/Oct/23 3:01 AM,30/Jul/19 10:47 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Upgrade kafka, upgrade orderers, reconfig orderers to use new kafka version, and send transactions successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyopb:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test scenario: Upgrade one orderer(kafka) out of 3 orderers, no peers, and send invokes successfully (from 1.0.x to 1.1)",FAB-7197,24582,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,suryalnvs,suryalnvs,29/Nov/17 11:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:48 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Upgrade one orderer(kafka) out of 3 orderers, no peers, and send invokes successfully (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyopj:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DEFER POST v1.1 - Test scenario: Upgrade one orderer(kafka) out of 3 orderers, no peers, and send channel config update to enable new capabilities, send transactions and confirm other (v1.0) orderers panic (from 1.0.x to 1.1)",FAB-7198,24583,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,29/Nov/17 11:29 AM,30/Jul/19 10:47 AM,28/Oct/23 3:01 AM,30/Jul/19 10:47 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Upgrade one orderer(kafka) out of 3 orderers, no peers, and send channel config update to enable new capabilities, send transactions and confirm other (v1.0) orderers panic (from 1.0.x to 1.1){color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyopr:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DEFER POST v1.1 - After non-upgraded orderers had panicked when enabled new orderer capability, upgrade them",FAB-7199,24584,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,29/Nov/17 11:29 AM,30/Jul/19 10:47 AM,28/Oct/23 3:01 AM,30/Jul/19 10:47 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"After non-upgraded orderers panic when enabled new orderer capability (as in FAB-7198), then upgrade them too, and send invokes and queries successfully. Confirm no errors in orderers or peers. Confirm all orderers delivered everything consistently (no forks).",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyopz:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Sending in traffic while upgrading the orderers (from 1.0.x to 1.1),FAB-7200,24585,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:48 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,{color:#000000}Sending in traffic while upgrading the orderers (from 1.0.x to 1.1){color},,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoq7:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Sending in traffic while upgrading the peers (from 1.0.x to 1.1),FAB-7201,24586,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:49 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,{color:#000000}Sending in traffic while upgrading the peers (from 1.0.x to 1.1){color},,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoqf:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade to new binaries using old config files,FAB-7202,24587,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Jul/18 5:44 AM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"One test case for upgrade – we should make sure that the new binaries work with the old config files. Some new mandatory config fields could cause problems if unset. The one that made me think of this is the new timestamp checking on transactions. I saw a log where it was complaining that the timestamp was more than 0s from the current time so was being rejected. I'm hoping this was simply a misconfiguration, but I'm concerned it may have been a default.

{color:#000000}Generally speaking though, if a user cannot simply use their existing config file and expect things to work, we need to document it (as was done for the ORDERER_KAFKA_VERSION) (and I think the only way we can discover these problems is through test){color}",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-8013,FAB-8524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyug7:",,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/18 5:45 AM;suryalnvs;Invalid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: Send traffic while upgrading peers and orderers on 4 channels and enable capabilities on 2 of 4 channels during traffic,FAB-7203,24588,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,29/Nov/17 11:31 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 4:49 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,{color:#000000}Send traffic while upgrading peers and orderers (5 minutes in between each node) on 4 channels and enable capabilities on 2 of 4 channels during traffic{color},,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoqn:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
12 hr longrun sample_cc nodeJS,FAB-7204,24589,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,dongming,dongming,29/Nov/17 12:04 PM,29/Aug/18 7:13 AM,28/Oct/23 3:01 AM,13/Jun/18 1:02 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,,"12 hr longrun sample_cc nodeJS

 

Test Name: -FAB-7204- performance benchmark: long run - constant

Component: Performance

Description: Performance 12 hr constant long run

    chaincode: each channel has one chaincode, sample_cc NodeJS, instantiated

    transactions: 4 threads, each thread sends 1 invoke per 100 ms to the anchor peer of an org of each channel for 12 hours as the following:
 # thread 1 sends to org1 peer1 on channel 1
 # thread 2 sends to org2 peer1 on channel 1
 # thread 3 sends to org1 peer1 on channel 2
 # thread 4 sends to org2 peer1 on channel 2

    Each invoke has payload size of 1kb-2kb.

Artifact Location: crypto-config

Network Topology: docker containers; 2 channels, 2 organizations, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, with TLS enabled

Event:
          service: channel
          listener: block

Client Driver: PTE

Input: ./-FAB-7204--4i.sh

Output:
 # The benchmark passes if it completes without any error.
 # The benchmark fails if it encounters error or does not complete, or any query fails.

 

On Feb 14, this testcase was changed (to send 10 tx per sec, up from of 1 / sec, and to use channel events delivery of blocks):  [https://gerrit.hyperledger.org/r/#/c/17913/]",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10080,,,,,,,,,"1|hzyoqv:",,,,,,,,,,,,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"17/May/18 1:42 AM;scottz;This multihost test was reopened to be rerun in v1.2 as part of regression. Move to ""Done"" once the testcase is executed in v1.2.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query network topology info from orderer,FAB-7205,24590,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,baohua,baohua,29/Nov/17 4:32 PM,23/Jan/20 7:17 AM,28/Oct/23 3:01 AM,23/Jan/20 7:17 AM,,,,,,,Future,,,,,,,0,orderer,stale-item,,,,,"As consortium admin/member, we may allow he get some network topology information, e.g.,
 * Channels in the network, including creator, joiner, time, etc;
 * Orgs in the network, and creating/joining channels, peers, chaincodes, etc.

The only way to provide such complete information can be from the orderer part.

Hence we may add some query API at orderer.

 

Welcome everyone to help drop ur thoughts, thanks!",,baohua,C0rWin,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5451,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyor3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,C0rWin,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 4:49 PM;C0rWin;Seems that this proposal might be closely related to the FAB-5451 work item.;;;","29/Nov/17 5:02 PM;baohua;Add related to FAB-5451, thanks to [~C0rWin];;;","23/Jan/20 7:17 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validate correct CRL generation within expire and revoke window,FAB-7206,24598,21298,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,rennman,rennman,29/Nov/17 10:37 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Feb/18 5:17 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"CRLs are generated within a sliding window with respect to expiry time and revocation time. This test will ensure that the appropriate CRL is generated within the parameters described below.

{code:java}
    A. Expiry windows
            etime1  etime2
   | | | | | | | | | | | | | | | | | | | | | 
             |       |
             c1      c2
   a-----b includes neither
         a-------b  only includes c1
         a---------------b includes both c1 and c2
                 a-------b only includes c2
                         a-----b includes neither
   
    B. Revoke windows
           rtime1  rtime2
   | | | | | | | | | | | | | | | | | | | | 
             |       |
             c1      c2
   a-----b includes neither
         a-------b  only includes c1
         a---------------b includes both c1 and c2
                 a-------b only includes c2
                         a-----b includes neither
   

 intersection of expiry window (A), and revoke window (B)
        B1  B2  B3  B4  B5
   A1   0   0   0   0   0 
   A2   0   1   1   0   0
   A3   0   1  1,2  2   0
   A4   0   0   2   2   0
   A5   0   0   0   0   0
{code}
 ",,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7799,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyosf:",,,,,,,,,,,,,,,,,,,,,,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"05/Dec/17 3:23 AM;rennman;[CRL generation expire/revoke parms|https://gerrit.hyperledger.org/r/#/c/15915/];;;","13/Dec/17 7:57 AM;rennman;Blocked by https://gerrit.hyperledger.org/r/#/c/15999/;;;","09/Feb/18 5:17 AM;rennman;This particular task is done, though a new issue was opened for the automation that is currently under review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate CRL as part of revoke action,FAB-7207,24599,21298,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,rennman,rennman,29/Nov/17 10:39 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Jan/18 7:09 PM,,,,,,,v1.1.0,v1.1.0-alpha,,fabric-quality,,,,0,,,,,,,"The revocation command include an option to generate the CRL when the certificate is revoked. 

Ensure that the appropriate CRL is generated when:
-The issuer has appropriate access (hf.GenCRL)
-The revoke is issued for a single certificate
-The revoke is issued for all certificates for a specific user",,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-367,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyosn:",,,,,,,,,,,,,,,,,,,,,,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Dec/17 3:34 AM;rennman;[Test CRL as part of revoke|https://gerrit.hyperledger.org/r/#/c/15917/];;;","13/Dec/17 7:57 AM;rennman;-Blocked by [https://gerrit.hyperledger.org/r/#/c/15999/]-

 

Blocked by https://jira.hyperledger.org/browse/FAB-7464;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getChannelConfig is failed in PTE tests on multihost environment using Ansible playbooks,FAB-7208,24601,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,rameshthoomu,rameshthoomu,30/Nov/17 12:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Dec/17 12:36 AM,,,,,,,v1.1.0-alpha,,,fabric-quality,,,,0,quality,,,,,,"Observed below error while running [FAB-3989-4q-TLS|https://jenkins.hyperledger.org/sandbox/job/fabric-test-multihost/7/artifact/Logs/FAB-3989-4q-TLS_1128205324.log] test case in multihost environment using Ansible playbooks. 

https://jenkins.hyperledger.org/sandbox/job/fabric-test-multihost/7/artifact/Logs/FAB-3989-4q-TLS_1128205324.log

 
{code:java}
[32minfo[39m: [PTE 1 main]: stderr: [31merror[39m: [Orderer.js]: sendDeliver - rejecting - status:NOT_FOUND [32minfo[39m: [PTE 1 main]: stderr: [31merror[39m: [Channel.js]: getChannelConfig - Failed Proposal. Error: Error: Invalid results returned ::NOT_FOUND at ClientDuplexStream.<anonymous> (/root/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:224:22){code}
 ",jenkins sandbox,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyot3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: fabric-ca upgrade basic  (1.0.x- 1.1) on each supported DB,FAB-7209,24602,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Nov/17 12:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 4:53 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyotb:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 5:02 AM;Nishi;Tested on fabric-ca commit level {color:#000000}e47038f7028b065102cbb23a40138909ef4443ab{color}.

Pre Migration - fabric_ca 1.0.4 executable

Post Migration - fabric_ca 1.1 executable

Successfully tested register and enroll of new users by admin that was enrolled premigration after a migration on

postgres & mysql

but

on sqlite3 admin did not carry over required attributes  for a successful migration.

 

after support was added to sqlite3, migration tests were executed successfully on sqliite3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: revoke an existing user from older version and ensure user cannot be enrolled after upgrade,FAB-7210,24603,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Nov/17 12:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 4:53 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyotj:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 5:05 AM;Nishi;Tested on fabric-ca commit level {color:#000000}e47038f7028b065102cbb23a40138909ef4443ab{color}.

Pre Migration - fabric_ca 1.0.4 executable

Post Migration - fabric_ca 1.1 executable

DB Tested: postgres and mysql

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: make sure an admin from older release can register and enroll users after upgrade,FAB-7211,24604,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Nov/17 12:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 4:53 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyotr:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 5:05 AM;Nishi;Tested on fabric-ca commit level {color:#000000}e47038f7028b065102cbb23a40138909ef4443ab{color}.

Pre Migration - fabric_ca 1.0.4 executable

Post Migration - fabric_ca 1.1 executable

DB tested: postgres and mysql

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: add and remove users via the node sdk on the new version,FAB-7212,24605,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Nov/17 12:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,21/Feb/18 2:34 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7175,,,FABC-503,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyotz:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: use a mismatched version of the ca client and the ca server.  ,FAB-7213,24606,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Nov/17 12:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 4:54 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyou7:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 5:06 AM;Nishi;Tested on fabric-ca commit level {color:#000000}e47038f7028b065102cbb23a40138909ef4443ab{color}.

Pre Migration - fabric_ca 1.0.4 executable

Post Migration - fabric_ca 1.1 executable

DB Tested: postgres and mysql

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: add a new user in the config file before the upgrade.  Make sure the new user is reported after the upgrade.,FAB-7214,24607,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,30/Nov/17 12:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 4:54 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyouf:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 5:13 AM;Nishi;Tested on fabric-ca commit level {color:#000000}e47038f7028b065102cbb23a40138909ef4443ab{color}.

Pre Migration - fabric_ca 1.0.4 executable

Post Migration - fabric_ca 1.1 executable

DB Tested: postgres and mysql;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: drive the CA server with inbound connections during the upgrade ,FAB-7215,24608,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,Nishi,Nishi,30/Nov/17 12:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Feb/18 12:38 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoun:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: setup a cluster of CA servers and upgrade one instance of CA-server,FAB-7216,24609,24489,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rennman,Nishi,Nishi,30/Nov/17 12:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Feb/18 5:52 AM,,,,,,,,,,,,,,0,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyouv:",,,,,,,,,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Life CC install should return protobuf instead of ""OK""",FAB-7219,24614,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,30/Nov/17 1:26 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,24/Apr/18 1:05 AM,v1.0.0,v1.1.0,,,,,v1.3.0,,,fabric-peer,,,,0,ARCH,,,,,,"Currently CC install API just returns SUCCESS with an the text String ""OK"" as bytes.
None of the current SDK I know actually looks at that string/byte.  They just validate it's SUCCESS.

 

The API should be be change add a byte encode protobuf.

This is more flexible and can be add to in the future.

 

For v1.1 it should have 

message CCInstallResponse \{

  string ID = 1;   // The ID aka hash for the CC.
}

 

old peer response could be check if it's just ""OK"" and release this needs to be ignored as the peer probably does not support the new CC life cycle.",,denyeart,jeffgarratt,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCT-60,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-11237,,,,,,,,,"1|hzyovr:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,jeffgarratt,jyellick,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/17 1:37 AM;jeffgarratt;The proposal response payload should be a marshaled protobuf structure to support extension, as is demonstrated by the issue arising here.  Currently the behave system does NOT leverage the payload during the install invocation, but simply checks the status for 200, which seems redundant in the context of the current response.  I would side towards changing the payload to a marshaled protobuf to allow for future extension.

 

I added the ARCH label as the move to a protobuf case would indicate a change in the realtionship between fabric clients and the peer in this case.;;;","30/Nov/17 1:39 AM;jyellick;I agree with this in principal.  As [~jeffgarratt] points out, this seems like a good reminder going forward that we should be careful _never_ to return raw strings as part of an API, to only ever return an encapsulating protobuf message.

I would suggest that the message should actually look like:


{noformat}
message CCInstallRsponse {
    bytes hash = 1;
}
{noformat}

simply because we overload the notion of 'id' already and hash is more specific.  Additionally, as hashes are bytes, encoding it as a string is space inefficient and the receiver must know the string encoding, so bytes seem generally easier to work with this case.

Assuming there are currently no consumers of this API, then modifying the message should not cause problems with old clients, but, new clients will have to take into account the old peer response.  I would expect logic that looks something like:

{noformat}
if bytes.equal([]byte(""OK""), resp) {
  // Ignore this, it's a v1.0 peer
} else {
  // decode the proto response
}
{noformat};;;","23/Mar/18 2:07 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Mar/18 11:06 PM;jyellick;This can and should be addressed with the new lifecycle effort, moving back to v1.2;;;","24/Apr/18 1:05 AM;jyellick;By utilizing chaintool for implementing the APIs of the new LSCC, we enforce that functions have proto inputs and outputs.  Closing as a duplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove test.coverprofile flag,FAB-7220,24617,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,30/Nov/17 4:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,30/Nov/17 9:03 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,The peer flag *--test.coverprofile* is not used anywhere so it should be removed,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyovz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Nov/17 4:31 AM;mastersingh24;https://gerrit.hyperledger.org/r/15817;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request for PTE to have the same payload for multiple transactions,FAB-7221,24619,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,lounsbur,lounsbur,30/Nov/17 5:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,14/Dec/17 4:45 AM,,,,,,,,,,fabric-quality,,,,0,performance,PTE,,,,,"Request is being made to have PTE send the same payload on requests to the peers.    Since PTE spawns multiple client threads,  each client thread could have it's own unique payload that is send with each request to an endorsing peer.  Alternatives would be to have a single common payload that is send to all endorsing peers for all PTE threads, or the PTE user could specify the payload in a file,  that payload would be sent to all endorsing peers.   Preferred implementation would be each PTE client thread having it's own unique payload that was used with all requrests. ",,dongming,lounsbur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzyow7:",,,,,,,,,,,,,,,,,,,,,,dongming,lounsbur,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"30/Nov/17 5:53 AM;lounsbur;Adding [~dinotone] [~tanyana];;;","02/Dec/17 4:29 AM;dongming;PTE can generate the payload to be used for any transactions. Each thread can have its own payload.  Is there any specification of the payload? Or can you give an example of the fixed payload that PTE can generate before sending any invoke?;;;","13/Dec/17 3:50 AM;dongming;Add a new key, payLoadType, in ccOpt in user input json to indicate the payload type.  Two payLoadType are supported: fixed and random.  For random, the payload will be the same as it is today. For fixed, then the payload size will have the same string of length payLoadMin for all transactions in the same process.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Network Launcher to remove --peer-defaultchain flag while launching peer,FAB-7222,24620,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,30/Nov/17 6:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,19/Dec/17 3:45 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Peer is getting exited when launching with Network Launcher with following error:
{code:java}
Error: unknown flag: --peer-defaultchain
Usage:
  peer node start [flags]

Flags:
  -o, --orderer string      Ordering service endpoint (default ""orderer:7050"")
      --peer-chaincodedev   Whether peer in chaincode development mode

Global Flags:
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
      --test.coverprofile string   Done (default ""coverage.cov"")
  -v, --version                    Display current version of fabric peer server

{code}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6742,,,,,,,,,"1|hzyowf:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CRL pem file should wrap at 64 characters,FAB-7223,24623,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,rennman,rennman,30/Nov/17 8:41 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,20/Dec/17 6:47 AM,,,,,,,v1.1.0,,,fabric-ca,,,,0,,,,,,,The pem files that are generated by fabric-ca should wrap at 64 chars. It can cause intermittent problems with parsing the file. ,,aambati,mastersingh24,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 7:22 AM;rennman;0.user50.crl;https://jira.hyperledger.org/secure/attachment/13601/0.user50.crl","12/Dec/17 7:22 AM;rennman;1.user89.crl;https://jira.hyperledger.org/secure/attachment/13602/1.user89.crl","12/Dec/17 7:22 AM;rennman;2.user342.crl;https://jira.hyperledger.org/secure/attachment/13600/2.user342.crl",,,,,,,,,,,,,,,,,,,,"1|hzyown:",,,,,,,,,,,,,,,,,,,,,,aambati,mastersingh24,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/17 7:29 PM;mastersingh24;[~rennman] - do you have an example of where this is happening?

[~aambati] - do we use anything other than the Go libs for serializing certs to PEM format?;;;","12/Dec/17 6:29 AM;rennman;The test that was failing isn't merged, but I came up with a pared-down way to re-create. Just kick this bad boy off and wait for it to fail:

{code:java}
#!/bin/bash -e
crl=$HOME/.fabric-ca-client/msp/crls/crl.pem

rm -rf ca-cert.pem fabric-ca-server-config.yaml fabric-ca-server.db msp/ $HOME/.fabric-ca-client/
kill $(ps -C fabric-ca-server|awk '{print $1}') 2>/dev/null
fabric-ca-server start -b a:b >/dev/null 2>&1 &
sleep 3
fabric-ca-client enroll -u http://a:b@127.0.0.1:7054 >/dev/null 2>&1
fabric-ca-client gencrl >/dev/null 2>&1
i=0; while openssl crl -in $crl -noout; do
   u=user$((i++))
   echo $u
   fabric-ca-client register --id.name $u --id.secret $u  >/dev/null 2>&1
   fabric-ca-client enroll -u http://$u:$u@127.0.0.1:7054 -H /tmp/user >/dev/null 2>&1
   fabric-ca-client revoke -e $u >/dev/null 2>&1
   fabric-ca-client gencrl >/dev/null 2>&1
done
openssl crl -in <(fold -w 64 $crl)
echo -e ""\033[31m ****** ERROR ****** $crl \033[0m""

{code}
;;;","12/Dec/17 7:24 AM;rennman; [^2.user342.crl]  [^0.user50.crl]  [^1.user89.crl] 
I have looked, but can't find any statistical anomalies. If it helps, here are some examples generated by running something like the above.;;;","12/Dec/17 12:36 PM;aambati;[~mastersingh24] Gari, we just use go libs. ;;;","13/Dec/17 7:42 AM;aambati;https://gerrit.hyperledger.org/r/c/16167/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance custom tx processor support in ledger,FAB-7224,24626,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,30/Nov/17 2:22 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 3:16 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,"Enhance custom tx processor support in ledger such that when the custom tx processor is invoked with a transaction, it is aware whether the transaction is getting in an online processing or as a part of the ledger initialization. Here ledger initialization refers to two situations 1) constructing ledger from genesis block and 2) replaying the transactions from block storage in the event of a restart of peer after system crash such that the crash left the statedb in an inconsistent state in respect to the block storage.

During ledger initialization, it is guaranteed to pass only valid transactions to the processor and hence it can skip any validations. On the other hand, More importantly, this enhancement would be useful for situation where the processor is to consult some structure in the peer memory which could not be available during ledger initialization.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyowv:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Governance model for New Feature/Improvement process,FAB-7226,24633,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,jeffgarratt,jeffgarratt,jeffgarratt,30/Nov/17 11:58 PM,23/Jan/20 7:17 AM,28/Oct/23 3:01 AM,23/Jan/20 7:17 AM,,,,,,,,,,,,,,0,A&D,stale-item,,,,,"h1. Proposing this model as a mechanism for governance with respect to New Features and Improvements.

 

Acknowledgement:

    originator: [~jeffgarratt]

 
h2. Architecture Definition and Component Model

 I would propose the following definitions for architecture for the purposes of discriminating which proposals comprise an architectural impact (Hence forth labeled ARCH).  The components of the fabric system are illustrated along with their relationships.  This is of importance as the labeling of changes having an architectural impact will be a condition of the proposed governance model.

 

!gov_components_and_arch_def.png|thumbnail!

 
h2.  Fabric Community Governance Model

 Below is a class diagram depicting the proposed governance model for the fabric community.   It conveys the concepts of voting and the variant Roles participants can have, as well as the type of Votes that can be made.  The key concept is the 'GoverningArtifact' which includes at the highest level the New Feature and Improvement JIRA types, and the secondary level, Analysis and Design (A&D) issues as JIRA Tasks.  I propose that these issues utilize Gherkin syntax (or at least be written without technical details) as to allow for the greatest level of comprehension across participants and to force the verbalization of the actual value before delving into technical details.

 

!gov_fabric_community_model.png|thumbnail!

 

 
h2. Governing Artifact State Machine (Voting Workflow)

Below is a state machine indicating the workflow of GoverningArtifcats (e.g. New Feature/Improvement and A&D documents).

 

!gov_state_machine.png|thumbnail!

 ",,jeffgarratt,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7147,,,,,,,,,,,,,,,,,,,,"01/Dec/17 12:26 AM;jeffgarratt;gov_components_and_arch_def.png;https://jira.hyperledger.org/secure/attachment/13436/gov_components_and_arch_def.png","01/Dec/17 1:34 AM;jeffgarratt;gov_fabric_community_model.png;https://jira.hyperledger.org/secure/attachment/13438/gov_fabric_community_model.png","01/Dec/17 2:36 AM;jeffgarratt;gov_state_machine.png;https://jira.hyperledger.org/secure/attachment/13439/gov_state_machine.png",,,,,,,,,,,,,,,,,,,,"1|hzyoy7:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:17 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer must manage relay attack surface,FAB-7229,24640,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jeffgarratt,jeffgarratt,01/Dec/17 1:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Jan/18 5:53 AM,v1.0.5,,,,,,v1.1.0,v1.1.0-alpha,,fabric-peer,,,,1,Security,,,,,,,,jeffgarratt,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-4824,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyoyf:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/18 5:53 AM;wlahti;Marking this complete for now. If we handle any of the other entry points to the peer for v1.1, I will likely move those tasks into this task and reopen this JIRA.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer chaincode list --installed requires channel parameter,FAB-7236,24648,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,jyellick,jyellick,01/Dec/17 3:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,12/Dec/17 5:03 AM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"The peer chaincode list command complains when no channel parameter is specified, even though listing installed chaincodes is not a channel scoped operation.  This requirement should be removed (and I believe is a new bug in v1.1)
{noformat}
root@29a9cba83246:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode list --installed
Error: The required parameter 'channelID' is empty. Rerun the command with -C flag
Usage:
  peer chaincode list [flags]

Flags:
  -C, --channelID string   The channel on which this command should be executed
      --installed          Get the installed chaincodes on a peer
      --instantiated       Get the instantiated chaincodes on a channel

Global Flags:
      --cafile string          Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string   Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string         Ordering service endpoint
      --tls                    Use TLS when communicating with the orderer endpoint
      --transient string       Transient map of arguments in JSON encoding
  -v, --version                Display current version of fabric peer server

{noformat}
 ",,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp0v:",,,,,,,,,,,,,,,,,,,,,,jyellick,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Dec/17 10:49 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/16105/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support ability to specify a separate client x509 cert and key for mutual TLS,FAB-7237,24649,22733,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,gbolo,gbolo,01/Dec/17 3:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,03/Dec/17 9:50 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,Currently the same cert/key is used for both the grpc server endpoint and for client use. Ideally there should be the option to specify a separate cert for each purpose.,,gbolo,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp13:",,,,,,,,,,,,,,,,,,,,,,gbolo,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Dec/17 7:51 PM;mastersingh24;One of the main reasons I see for doing this is that nodes may choose to use TLS server certificates issued by a public certificate authority and we would therefore not want to allow any client certificate issued by that CA to connect via TLS.

At this point, this is only required for the peer since the orderer does not make any client connections.;;;","03/Dec/17 6:48 AM;mastersingh24;https://gerrit.hyperledger.org/r/15879;;;","04/Dec/17 1:55 AM;gbolo;Excellent work, this definitely helps improve the security posture of the peer!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update sarama Kafka client version,FAB-7239,24651,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,01/Dec/17 6:44 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,07/Dec/17 4:40 PM,,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,,"The current sarama client library embedded in the Kafka consensus implementation does not support Kafaka 0.11 or 1.0.

Actual fabric support of Kafka 0.11 or 1.0 to be determined as a separate issue (no issues expected).",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyp1b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeSDK - implement new changecode lifecycle,FAB-7240,24652,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,01/Dec/17 6:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 3:17 AM,,,,,,,WON'T FIX,,,fabric-sdk-node,,,,0,Release-planning-1.2,,,,,,Implement new changecode lifecyce,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp1j:",,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode-docker-devmode : Certs expired,FAB-7241,24656,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dsanchezseco,dsanchezseco,01/Dec/17 9:34 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Dec/17 10:15 PM,v1.1.0-preview,,,,,,v1.1.0,,,fabric-samples,,,,0,,,,,,,"Hi!

I'm testing the node chaincode development with `chaincode-docker-devmode` tag `v1.1.0-preview` and latest master after some fight with the docker images (on the docs the curl for the v1.1.0-preview is outdated, the good one is -> [https://goo.gl/6xS3cd] ).

After fixing this i'm getting a panic on the peer execution that i think is the same problem as happened with  #--FAB-6969--.

In the case of  chaincode-docker-development the certs are already generated and no config files are supplied, so i'm not sure about  the config to regenerate the certs.

 

Edit: According to [https://certlogik.com/decoder/] the expired certs are `admincert/admincert.pem` and `signcert/peer.pem`  which had expired on Nov 11th",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp1r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
restore bootstrap-1.1.0-preview.sh,FAB-7242,24657,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ChristopherFerris,ChristopherFerris,01/Dec/17 10:39 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Dec/17 7:47 PM,v1.1.0-preview,,,,,,,,,fabric-build,,,,0,,,,,,,"when we merged FAB-7144 CR, we removed old bootstrap scripts. the 1.1.0-preview docs still reference the old scripts/bootstrap-1.1.0-preview.sh script so it needs to be restored.",,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp1z:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/17 7:48 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/15863/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend the e2e demo documentation with the Identity Mixer e2e test description,FAB-7243,24659,,Documentation,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,ales,dubovitskaya,dubovitskaya,01/Dec/17 11:03 PM,29/Aug/18 1:42 AM,28/Oct/23 3:01 AM,29/Aug/18 1:42 AM,,,,,,,v1.3.0,,,fabric-docs,,,,0,Documentation,,,,,,"Since the Identity Mixer scenario is integrated in the e2e demo (https://gerrit.hyperledger.org/r/#/c/15707/), the corresponding documentation needs to be extended.",,ChristopherFerris,dubovitskaya,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10120,,,,,,,,,"1|hzwtsf:",,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dubovitskaya,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/18 7:31 AM;ChristopherFerris;We need to stop adding to e2e. It is not a sample. If we want to extend a sample, please use fabric-samples. If instead this is an integration test, please work with [~scottz] and implement in Ginko in the fabric-test repository. Also, please update fixVersion.;;;","29/Aug/18 1:42 AM;dubovitskaya;OK, closing this one - we will provide docs for the Ginko ones and for the e2e in Java SDK;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[Build] - publish dependent images (couchdb, kafka, zookeeper) to hyperledger docker hub account",FAB-7245,24663,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,02/Dec/17 12:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 12:44 AM,,,,,,,,,,fabric-build,fabric-ci,,,0,fabric-ci,,,,,,"Publish dependent (couchdb, kafka and zookeeper) images to hyperledger dockerhub account from Jenkins fabric-baseimage CI job. This is based on the ARCH, so the job has to trigger on all the supported ARCH's. (X,Z and P (optional))",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp2n:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/18 12:44 AM;rameshthoomu;patch has been submitted and merged. https://gerrit.hyperledger.org/r/#/c/16855/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"performance test: channel events, 2 ch NodeJS cc",FAB-7246,24664,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,02/Dec/17 12:08 AM,31/Aug/18 8:35 AM,28/Oct/23 3:01 AM,31/Aug/18 8:28 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,SystemTestcase,,,,,,"Test name: Performance test: channel events, 2 channels

Component: Performance test

Description: performance events per channel with levelDB

    chaincode: each channel has one chancode, sample_cc, instantiated

    transactions: 4 threads, each thread sends 10000 invokes concurrently

        thread 1 sends to org1 peer1 on channel 1, registers events for channel1

        thread 2 sends to org2 peer1 on channel 1, registers events for channel1

        thread 3 sends to org1 peer1 on channel 2, registers events for channel2

        thread 4 sends to org2 peer1 on channel 2, registers events for channel2

 

Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with both channels

Client Driver: PTE

Results:

The test passes if

    the execution completes without error

    each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself

    each thread does not receive any event that not associated with the channel it registered

The TPS (transactions per second) will be calculated and documented.",,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7331,,,FAB-7333,,,,,"08/Jun/18 4:13 AM;suryalnvs;FAB-7246-4i-FAB-7204-4q.log;https://jira.hyperledger.org/secure/attachment/15079/FAB-7246-4i-FAB-7204-4q.log",,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyp2v:",,,,,,,,,,,,,,,,,,,,,,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,true,"06/Dec/17 8:38 AM;scottz;This is test for events using per-channel delivery service.

Compare with baseline test FAB-7331 using per-transaction events.

Compare also with FAB-7333 which uses filtered blocks and channel delivery.;;;","08/Jun/18 4:13 AM;suryalnvs;Tested at Commit level 186ae9f;;;","29/Aug/18 6:51 AM;scottz;I reopened this one by mistake. Close it now. We need to add a different one to the daily test suite.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Build] - Cache published fabric-baseimage dependent docker images in Jenkins VM's while instantiating,FAB-7247,24665,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,02/Dec/17 12:11 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 10:34 AM,,,,,,,,,,fabric-build,fabric-ci,,,0,fabric-build,,,,,,Cache the fabric-baseimage dependent docker images in Jenkins VM. This saves time while instantiating Jenkins VM instead of pulling these images on every build.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp33:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance CSCC with local MSP update capabilities using configuration information passed in request,FAB-7249,24667,14575,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,mathiasb303,mathiasb303,mathiasb303,02/Dec/17 1:08 AM,23/Jan/20 7:17 AM,28/Oct/23 3:01 AM,23/Jan/20 7:17 AM,,,,,,,,,,fabric-crypto,fabric-peer,,,1,Security,stale-item,,,,,"Here we assume that the peer's administrator has a local copy of the configuration of the local MSP that he/she wishes to modify, and send to the peer with which to update its own local MSP configuration. The peer stores the new configuration locally, and reloads the local MSP using the received configuration.

Considerations include:
* How to ensure that the peer will start with a valid local MSP configuration, in the case that it crashes while updating the local MSP configuration files
* Initially, we assume that the peer's administrator has a local copy of the local MSP configuration. Is necessary/desirable to also add functionality for retrieving the current local MSP configuration from the peer?",,mathiasb303,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwrxb:",,,,Unset,,Sprint 12 - Crypto,Sprint 13 - Crypto,,,,Unset,,,,,,,,,,,mathiasb303,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 1:24 AM;mathiasb303;CR: https://gerrit.hyperledger.org/r/15871;;;","02/Dec/17 1:26 AM;yacovm;Can we piggyback on this the TLS certificates and keys?  Goes well with https://gerrit.hyperledger.org/r/#/c/15577/ 

 [~mastersingh24] wdyt?;;;","23/Jan/20 7:17 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario:GoCC-Install-Instantiate-1index-1selector-1channel,FAB-7251,24671,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/May/18 5:15 AM,,,,,,,,,,fabric-ledger,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp3z:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"31/Jan/18 7:29 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-Install-Instantiate-1index-3selector-3channels,FAB-7252,24672,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:09 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/May/18 5:54 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp47:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:54 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-Install-Instantiate-3index-1selector-3channels,FAB-7253,24673,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:12 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/May/18 5:16 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp4f:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"31/Jan/18 7:29 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario:NodeCC-Install-Instantiate-1index-1selector-1channel,FAB-7254,24674,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/May/18 5:16 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp4n:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"31/Jan/18 7:29 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-Install-Instantiate-1index-3selector3channels,FAB-7255,24675,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/May/18 5:54 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp4v:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:54 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-Install-Instantiate-3index-1selector-3channels,FAB-7256,24676,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:23 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/May/18 5:16 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp53:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"31/Jan/18 7:30 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/17357/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-Instantiate-Install-1index-1selector-3channels,FAB-7257,24677,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:24 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Jun/18 2:39 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp5b:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"11/May/18 11:31 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/21705/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-Instantiate-Install-1index-3selector-3channels,FAB-7258,24678,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:26 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Jun/18 2:39 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp5j:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"11/May/18 11:32 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/21705/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-Instantiate-Install-3index-1selector-3channels,FAB-7259,24679,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Jun/18 2:39 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp5r:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"11/May/18 11:32 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/21705/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-Instantiate-Install-1index-1selector-3channels,FAB-7260,24680,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Jun/18 2:39 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp5z:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"11/May/18 11:32 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/21705/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-Instantiate-Install-1index-3selector-3channels,FAB-7261,24681,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:44 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Jun/18 2:40 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp67:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"11/May/18 11:33 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/21705/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-Instantiate-Install-3index-3selector-3channels,FAB-7262,24682,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,22/Jun/18 2:40 AM,,,,,,,,,,,,,,0,,,,,,,"CouchDB index management: Test with new CC version with added new index, 1 CC 1 channel, 2 index with 2 selector each. 

Expected result: Indexing successful 
  ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp6f:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"11/May/18 11:33 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/21705/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario:NodeCC-UpgradeIn1Channel-1channels,FAB-7263,24683,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:47 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp6n:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:26 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-UpgradeIn1Channel-3channels,FAB-7264,24684,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:48 AM,02/Oct/18 2:05 AM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp6v:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:26 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-UpgradeIn3Channel-3channels,FAB-7265,24685,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:49 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp73:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:26 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: NodeCC-UpgradeIn3Channel-sameIndex-3channels,FAB-7266,24686,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp7b:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 6:08 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: NodeCC-UpgradeIn3Channel-addedIndex-3channels,FAB-7267,24687,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:55 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp7j:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 6:09 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario:GoCC-UpgradeIn1Channel-1channels,FAB-7268,24688,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:57 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,," 

 ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp7r:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:27 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-UpgradeIn1Channel-3channels,FAB-7269,24689,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 4:59 AM,02/Oct/18 2:05 AM,28/Oct/23 3:01 AM,11/May/18 1:00 AM,,,,,,,,,,,,,,0,,,,,,," 

 ",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp7z:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:27 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GoCC-UpgradeIn3Channel-3channels,FAB-7270,24690,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 5:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:01 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp87:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 5:28 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: GoCC-UpgradeIn3Channel-sameIndex-3channels,FAB-7271,24691,24490,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,02/Dec/17 5:00 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/May/18 1:01 AM,,,,,,,,,,,,,,0,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp8f:",,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"05/May/18 6:09 AM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/19945/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update deliver to facilitate usage by peer and orderer ,FAB-7273,24694,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,03/Dec/17 12:33 AM,16/Aug/18 8:44 AM,28/Oct/23 3:01 AM,08/Dec/17 5:10 AM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,A&D,,,,,,"Analysis:

The current deliver logic relies on the fact that the orderer directly appends to its file ledger via [https://github.com/hyperledger/fabric/blob/master/orderer/common/ledger/file/impl.go#L124] and then sends a signal that a new block is ready. The orderer is able to do so because it has direct access to its blockstore, which it uses to add blocks to the ledger. The peer's blocks are added via the committer logic, which (I'm assuming) can't and shouldn't have to know that an interested party (here, a deliver server), is waiting for new blocks. The peer can only interact with its ledger via the PeerLedger interface: [https://github.com/hyperledger/fabric/blob/master/core/ledger/ledger_interface.go#L45|https://github.com/hyperledger/fabric/blob/master/core/ledger/ledger_interface.go#L45.] .

We need to determine a non-blocking way that the peer can be signaled (but I'm not suggesting we have to continue using the exact signal logic that's in place) when a new block is added while still ensuring the orderer's use case is satisfied.

Useful links: 
 * the deliver code that waits for the signal before retrieving the next block can be found here: [https://github.com/hyperledger/fabric/blob/master/orderer/common/deliver/deliver.go#L175] 
 * pending CR that moves deliver (and the ledger wrapper structs deliver uses) into fabric/common can be found here:  [https://gerrit.hyperledger.org/r/#/c/15673]

 

One side note to keep in mind: the deliver functionality currently supports not only file ledgers but also a RAM and JSON ledger implementation. These are only used in unit tests but its worth keeping in mind that a redesign of the file ledger will either require a redesign of those implementations or perhaps removing them from the codebase. ",,C0rWin,denyeart,holocron,Ratnakar,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp8n:",,,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,holocron,Ratnakar,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Dec/17 1:22 AM;denyeart;[~manish-sethi] As author of PeerLedger and BlockStore, what is your opinion?;;;","03/Dec/17 9:17 AM;yacovm;The *deliverServer* receives in the constructor a *SupportManager* which has a *Reader() ledger.Reader* method which is:
{code:java}
// Reader allows the caller to inspect the ledger
type Reader interface {
	// Iterator returns an Iterator, as specified by a cb.SeekInfo message, and
	// its starting block number
	Iterator(startType *ab.SeekPosition) (Iterator, uint64)
	// Height returns the number of blocks on the ledger
	Height() uint64
}
{code}
You can implement this easily (I think) via the existing ledger interface the peer has access to:
{code:java}
// PeerLedger differs from the OrdererLedger in that PeerLedger locally maintain a bitmask
// that tells apart valid transactions from invalid ones
type PeerLedger interface {
	commonledger.Ledger
{code}
Notice the common ledger here is embedded in the *PeerLedger* and has:
{code:java}
// Ledger captures the methods that are common across the 'PeerLedger', 'OrdererLedger', and 'ValidatedLedger'
type Ledger interface {
	// The iterator is a blocking iterator i.e., it blocks till the next block gets available in the ledger
	// ResultsIterator contains type BlockHolder
	GetBlocksIterator(startBlockNumber uint64) (ResultsIterator, error)
	// Close closes the ledger
	Close()
}
{code}
This is implemented in the peer via:
{code:java}
// GetBlocksIterator returns an iterator that starts from `startBlockNumber`(inclusive).
// The iterator is a blocking iterator i.e., it blocks till the next block gets available in the ledger
// ResultsIterator contains type BlockHolder
func (l *kvLedger) GetBlocksIterator(startBlockNumber uint64) (commonledger.ResultsIterator, error) {
	return l.blockStore.RetrieveBlocks(startBlockNumber)

}
{code}
Now lets go back to the orderer and see:
{code:java}
type fileLedgerIterator struct {
	ledger         *fileLedger
	blockNumber    uint64
	commonIterator cl.ResultsIterator
}
type fileLedger struct {
	blockStore blkstorage.BlockStore
	signal     chan struct{}
}
{code}
And you can see that it uses the very same *BlockStore* as the peer, and returns an iterator that is hidden within:
{code:java}
	iterator, err := fl.blockStore.RetrieveBlocks(startingBlockNumber)
	if err != nil {
		return &ledger.NotFoundErrorIterator{}, 0
	}

	return &fileLedgerIterator{ledger: fl, blockNumber: startingBlockNumber, commonIterator: iterator}, startingBlockNumber
{code}
So I think that you can just implement the needed interface for initializing the deliver instance, using the peer's ledger and unless I'm missing something (as [~denyeart] said - [~manish-sethi] is really the expert here - we should get confirmation from him) - you should be good to go and you don't need a notification signal whenever a block is appended into the ledger, because the ledger should take care of that for you because every ledger's block iterator has a reference to the ledger's block manager which broadcasts via a condition variable a signal that the iterator waits on (but again - lets wait for [~manish-sethi] to confirm ;) )

 

 ;;;","05/Dec/17 6:14 AM;wlahti;With help from [~sanchezl] and [~manish-sethi], I think we have a working solution. 

The reason we can't simply reuse the ledger's block iterator as-is is that the orderer has the error condition for when it's backing consenter is no longer functioning for whatever reason. When this is the case, we need the deliver client to break out of its block retrieval loop and close. 

To achieve this, the delivery client will use a separate go function that uses the ledger's block iterator to wait for the next block and signals when it retrieves it. While looping for blocks, the code also checks for the signal that a background error has occurred (which in this case is the backing consenter error), at which point it will close the block retrieval loop and the delivery client. ;;;","07/Dec/17 9:56 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16007;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Comm test intermittent failure,FAB-7275,24696,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,03/Dec/17 11:21 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,24/Dec/17 11:01 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,," 
{code:java}
13:20:15 unit-tests_1 | --- FAIL: TestClientConnections (0.00s) 13:20:15 unit-tests_1 | --- FAIL: TestClientConnections/ValidConnectionTLS (0.00s) 13:20:15 unit-tests_1 | connection_test.go:107: Running test ValidConnectionTLS ... 13:20:15 unit-tests_1 | connection_test.go:117: Error [listen tcp 127.0.0.1:9053: bind: address already in use] creating test server for address [localhost:9053] 13:20:15 unit-tests_1 | FAIL 13:20:15 unit-tests_1 | coverage: 86.3% of statements 13:20:15 unit-tests_1 | FAIL github.com/hyperledger/fabric/core/comm 9.401s{code}
 ",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp8v:",,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test-daily-x86_64 failed in ACL due to permissioning error,FAB-7276,24697,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,04/Dec/17 3:10 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,16/Dec/17 3:27 AM,,,,,,,,,,fabric-quality,,,,0,ci-failure,,,,,,"fabric-test-daily-x86_64 is failing in  'test_FAB6490_Using_FCA_With_ACL_Permissioning' due to the following error,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest)

Error Message
CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1

self.assertTrue(os.path.exists(fca_sample_directory), msg=""The fabric-ca chaincode test does not exist in this directory setup"")

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/179/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/
",,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp93:",,,,,,,,,,,,,,,,,,,,,,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 12:00 AM;latitiah;This is not a permissions error, but a resource issue. 
{code}
IOError: [Errno 11] Resource temporarily unavailable
{code}

The CI server resources should be checked. I see this same error across multiple tests.;;;","07/Dec/17 12:32 AM;rameshthoomu;I see this is test cases is failing consistently and I don't think it is related to CI server resources. [~latitiah] who is right person to analyze errors in below logs https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/182/artifact/gopath/src/github.com/hyperledger/fabric-test/fabric-samples/fabric-ca/data/logs/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define and expose an identity's owner identifier,FAB-7278,24704,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,angelo.decaro,elli-androulaki,elli-androulaki,04/Dec/17 5:34 PM,23/Jan/20 7:17 AM,28/Oct/23 3:01 AM,23/Jan/20 7:17 AM,v1.1.0-alpha,,,,,,Future,,,fabric-crypto,,,,1,stale-item,,,,,,"h2. Motivation 

In case of enrollment identities, being able to extract the identity of the identity's owner would allow for deduplication of identities of the same user. This is something to be needed when expiration of identities is considered in Fabric, in which case it will be necessary that there is an overlapping period between expired and renewed identities of the same user.  

 
h2. MSP interface extension 

MSP interface would be extended to include the capability of extracting the identifier of the owner of an identity. Notice that in a public verifier setting such a capability is only meaningful for non-privacy-preserving identities.

MSP would be extended with this function:

{{// GetIdentifier returns the provider identifier}}
 {{GetOwnerIdentifier(ValidatedIdentity) (OwnerIdentifier, error)}}

Exposed by the identity interface as:
{code:java}
// GetOwnerIdentifier returns the identity's owner identifier
GetOwnerIdentifier() (OwnerIdentifier, error)
{code}
h2. Identity Owner Identifier Format

OwnerIdentifier represents the owner of an identity, and as such there are multiple ways to construct it.

 
{code:java}
type OwnerIdentifier struct {
{{   // ProviderIdentifier  is the identifier of the MSP this Owner is    //a member of }}{{   
}}{{  MspId string }}

  // {{Value is a representation to uniquely identify that user within 
}}{{  //the MSP and certifier; for X.509 based }}{{   
  // identities value can be derived as the concatenation of “DN” 
  // field of the certificate (or its combinations }}{{with 
  // enrollment identifier, and/or OUs  included in the 
  // certificate), with a string uniquely identifying the }}{{   
  // signing CA in the MSP.}}{{  
  Owner []byte
}}}

{code}
 

One can set OwnerIdentifier.Owner to be a hashed value including
 # An identifier of the CA issuing certificates for that user (CertifierIdentifier)
 # An identifier of the user inside the signing  CA’s namespace/area

 

_CertifierIdentifier_ should be uniquely identifying the identity issuer for the identity (or identities) of that user. In the standard X.509 based MSP, CertifierIdentifier can be set to
 * Certifier’s identity IdentityIdentifier
 * Certifier’s OwnerIdentifier (this could cause nested owner identifiers’ chain)
 * Certifier’s namespace, i.e., a label attached to a CA’s definition inside the MSP definition to represent a specific CA(to be discussed later)

Options (1) and (2) have the property that if the CA’s identity (certifier’s certificate) ownerIdentifier of the identities produced by it are still valid.

 

There are multiple ways of defining _OwnerIdentifier.Value_, but to keep it of fixed size, we leverage a hash function H on information that could uniquely identify a user. For the standard X.509 based MSP this information can be the value of the X.509 certificate's DN field. DN stands for Distinguished Name and should be unique among the certificates signed by the same CA). In particular, DB derives from the combination of
 * CN field, Common Name
 * OU field, Organisational Unit
 * O field, Organisation",,angelo.decaro,elli-androulaki,mastersingh24,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,FAB-7616,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwrun:",,,,Unset,,,,,,,Unset,,,,,,,,,,,angelo.decaro,elli-androulaki,mastersingh24,smithbk,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 2:20 AM;smithbk;To get the DN, you'll need to use all name fields (i.e. RDNs) of the certificate to guarantee uniqueness, not just CN, OU, and O.;;;","08/Jan/18 5:54 PM;angelo.decaro;[~smithbk], Am I correct in saying that in golang, the certificate's Subject field is the DN?;;;","09/Jan/18 2:58 AM;elli-androulaki;Related CR: [https://gerrit.hyperledger.org/r/#/c/16657/]

 ;;;","11/Jan/18 4:10 AM;mastersingh24;Why are we not using the public key bytes in the X509 certificate?  I'm not sure I agree with using the DN as unique identifier here.;;;","12/Jan/18 4:52 AM;Clayton Sims;Per discussion in Gerrit deferring to 1.2.;;;","23/Jan/20 7:17 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut v1.0.5 release,FAB-7279,24706,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Dec/17 6:50 PM,,,,,,,v1.0.5,,,fabric-release,,,31/Aug/17 12:00 AM,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6790,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp9r:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.5 for fabric bugs to be included in 1.0.5 release,FAB-7280,24707,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/Dec/17 12:25 AM,,,,,,,v1.0.5,,,fabric-release,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=11612,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyp9z:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/17 8:11 PM;mastersingh24;https://jira.hyperledger.org/issues/?filter=11612;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric v1.0.5,FAB-7281,24708,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 12:51 AM,,,,,,,v1.0.5,,,fabric-release,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
 Check for clean CI passes
 Update Makefile
 BASE_VERSION = 1.0.5
 PREV_VERSION = 1.0.4
 IS_RELEASE = true
 release_notes/v1.0.5.txt should be updated
 docs/source/releases.rst should be updated with prose and link to GH release page
 change log should be generated just after rebasing to pick up the last minute merged CRs and linked from docs/source/releases.rst",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypa7:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/golang.org/x/crypto-0.1.0,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,release-1.0,main,dependabot/go_modules/golang.org/x/net-0.7.0,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Hyperledger Fabric CA v1.0.5,FAB-7282,24709,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 12:52 AM,,,,,,,v1.0.5,,,fabric-release,,,,0,,,,,,,"MUST BE REBASED JUST BEFORE MERGING
 Check for clean CI passes
 Update Makefile
 BASE_VERSION = 1.0.5
 PREV_VERSION = 1.0.4
 IS_RELEASE = true
 change log should be generated just after rebasing to pick up the last minute merged CRs 
 update release_notes/v1.0.5.txt",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypaf:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update fabric samples docs with new short URL for release,FAB-7283,24710,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 12:53 AM,,,,,,,v1.0.5,,,fabric-docs,fabric-release,,,0,,,,,,,"curl -sSL https://goo.gl/u5oW4c | bash -s 1.0.5",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypan:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric for v1.0.6 release,FAB-7284,24711,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,08/Dec/17 7:52 PM,,,,,,,,,,fabric-release,,,,0,,,,,,,"Bump version to 1.0.6
 Previous version to 1.0.5
 is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypav:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare fabric-ca for v1.0.6 release,FAB-7285,24712,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,08/Dec/17 7:51 PM,,,,,,,,,,fabric-release,,,,0,,,,,,,"Bump version to 1.0.6
 Previous version to 1.0.5
 is_release = false",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypb3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update samples to work with v1.0.5 release,FAB-7286,24713,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 4:21 PM,,,,,,,v1.0.5,,,fabric-samples,,,,0,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypbb:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 4:22 PM;mastersingh24;nothing to do - testing passed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set fix version to v1.0.5 for fabric-ca bugs to be included in 1.0.5 release,FAB-7287,24714,24706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 7:44 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Dec/17 8:39 PM,,,,,,,v1.0.4,,,fabric-release,,,,0,,,,,,,https://jira.hyperledger.org/issues/?filter=11305,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypbj:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/17 8:14 PM;mastersingh24;https://jira.hyperledger.org/issues/?filter=11613;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revert back to Kafka 0.9.0.1,FAB-7288,24718,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 9:40 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/Dec/17 6:59 PM,,,,,,,v1.0.5,,,fabric-orderer,,,,0,,,,,,,"FAB-7046 modified the download URL used to build Kafka images to the Apache archive site but since it was a cherrypick, it also updated the Kafka version to 0.10.2.1.

For the v1.0.x releases, we need to stay with Kafka 0.9.0.1",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypbz:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a common cleanup script for all jobs in Jenkins,FAB-7289,24723,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,05/Dec/17 12:18 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 10:33 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"Create a single script for all jobs.

Almost every job in Jenkins has its own cleanup script. Create a single cleanup script to work for all jobs which would make it easier.",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypc7:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 10:33 AM;rameshthoomu;Patch has been submitted and merged. Common cleanup script is now configured in all hyperledger Jenkins jobs. This patch has been removed all the duplicated scripts from jenkins CI configurations.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nil pointer panic in block iterator,FAB-7290,24725,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,05/Dec/17 12:46 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,05/Dec/17 7:00 PM,v1.0.4,v1.1.0,,,,,v1.0.5,v1.1.0,,fabric-ledger,,,,0,,,,,,,The block storage iterator causes a nil pointer panic when the iterator is closed without calling `Next` function even once or some error happens when the `Next` is invoked for the first time.,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypcn:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,release-1.0,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test-daily-x86_64 failed as there is problem in CaClusterTest,FAB-7291,24740,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,sambhavdutt,sambhavdutt,05/Dec/17 1:27 AM,19/Mar/19 8:12 PM,28/Oct/23 3:01 AM,09/Dec/17 6:27 PM,v1.1.0,,,,,,v1.1.0,,,fabric-quality,,,,0,ci-failure,,,,,,"The following error was observed in  test_FAB6863_BasicCAClustering

ca_cluster.CaClusterTest.test_FAB6863_BasicCAClustering (from pytest) 

Error Message
CalledProcessError: Command '['mkdir -p /tmp/logs; chmod 777 /tmp/logs;docker run -v /tmp/logs:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8 128']' returned non-zero exit status 58

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/179/testReport/ca_cluster/CaClusterTest/test_FAB6863_BasicCAClustering/",,aambati,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypcv:",,,,,,,,,,,,,,,,,,,,,,aambati,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Dec/17 4:51 AM;aambati;https://gerrit.hyperledger.org/r/c/15999/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change incorrect instructions for using PTE,FAB-7293,24750,,Task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,StevenWolff,StevenWolff,StevenWolff,05/Dec/17 2:33 AM,23/Jan/20 7:18 AM,28/Oct/23 3:01 AM,23/Jan/20 7:18 AM,v1.1.0-preview,,,,,,,,,fabric-tools,,,04/Dec/17 12:00 AM,0,Documentation,stale-item,,,,,{{In step 2 of the PTE Setup section the command 'git submodule foreach git pull origin master' fails (when retrieving Cello).}},"PTE Setup/Run Instructions located at:

[https://github.com/hyperledger/fabric-test/tree/master/tools/PTE]

 ",StevenWolff,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzwux3:",,,,,,Week ending 2019-Feb-01,,,,,,,,,,,,,,,,StevenWolff,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:18 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix download / bootstrap script,FAB-7295,24753,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,05/Dec/17 4:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Dec/17 6:50 PM,,,,,,,v1.1.0,,,fabric-release,,,,0,,,,,,,"scripts/bootstrap.sh is designed to allow you to specify specific versions of fabric and fabric-ca for download or it will download a default (latest) version.
There are 2 issues with the script:

1) The wrong variable are used to set the image tags for downloading fabric and fabric-ca images (they are reversed)

2) If the fabric-ca version is not specified, it should default to the same version as fabric",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7327,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypdr:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Dec/17 4:23 AM;mastersingh24;https://gerrit.hyperledger.org/r/15921;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Conceptual documentation,FAB-7296,24754,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joe-alewine,joe-alewine,joe-alewine,05/Dec/17 5:01 AM,26/Aug/19 6:09 PM,28/Oct/23 3:01 AM,26/Aug/19 6:09 PM,,,,,,,Future,,,fabric-docs,,,,0,Documentation,,,,,,"Document key concepts. Certain topics have some conceptual documentation in currents docs. These need to be improved. 

*Current vision for topics include:* 

*Identity

*Membership

*Peers

*Ledgers

*Orderers

*Chaincode/Smart Contracts

*Organizations

*Consortia

*Principals",,denyeart,joe-alewine,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1728000,1728000,,0%,1728000,1728000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwtu7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,denyeart,joe-alewine,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/17 6:20 AM;joe-alewine;https://gerrit.hyperledger.org/r/c/15933/;;;","16/Dec/17 9:08 PM;mastersingh24;[~joe-alewine] - Is the CR content published to a staging site?;;;","17/Dec/17 2:23 PM;joe-alewine;[~mastersingh24] Not a staging site per se but it is staged here (in identical form to the latest CR): [https://github.com/joealewine/FabricTOC/blob/master/docs/RST_Preview/Identitypreview.rst]

 ;;;","10/Feb/18 3:13 AM;joe-alewine;[~odowdaibm];;;","20/Mar/18 5:07 AM;denyeart;Some topics delivered in v1.1, work on-going for v1.2.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[CI] - pull kafka, couchdb and zookeeper images from dockerhub",FAB-7297,24756,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,05/Dec/17 5:48 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 10:31 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,pull thirdparty docker images from hyperledger docker hub account. This patch set removes all the thirdparty image building from fabric repo. https://gerrit.hyperledger.org/r/c/15861/,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzype7:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 10:31 AM;rameshthoomu;Patch has been submitted and merged. Verify and merge unit-test (x86, s390x) jobs pull these images and tag it as latest images.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
disable two-staged-ci-check job from verify builds,FAB-7298,24757,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,05/Dec/17 5:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 3:11 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,disable two-staged-ci-check job from verify builds.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypef:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 3:11 AM;rameshthoomu;patch has been submitted and merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[CI] - cache kafka, couchdb, zookeeper 1.1.0-preview images in x86_64 VM",FAB-7299,24758,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,05/Dec/17 6:21 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Dec/17 10:29 AM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"[CI] - cache kafka, couchdb, zookeeper 1.1.0-preview images in x86_64 VM. This reduces build time while instantiating x86_64 VM",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypen:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 10:29 AM;rameshthoomu;Patch has been submitted and merged. Now x86_64 minions are available with all the above mentioned docker images.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - disable fabric-verify-s390x job and publish email to maintainers if the build fails on merge,FAB-7301,24760,24554,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,05/Dec/17 7:03 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Jan/18 11:01 AM,,,,,,,,,,fabric-ci,,,,0,fabric-ci,,,,,,"[CI] - disable fabric-verify-s390x job and publish email to maintainers if the build fails on merge.

In the current process, we run fabric unit-tests on x86_64 and s390x platforms this is taking huge time and sometimes developers are no clue why the builds are failing on s390x machines and success on x86. As mentioned by @cbf disable unit-tests job for every verify and send the mail to maintainers if fabric-merge-s390x job fails.",,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypf3:",,,,,,,,,,,,,,,,,,,,,,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 3:13 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/15937/] patch has been submitted and it's in-review. Waiting for reviewers to accept.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Demonstrate connecting to deliver service on peer,FAB-7302,24761,23839,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,05/Dec/17 7:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Dec/17 2:09 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypfb:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 2:09 AM;wlahti;This is covered by the behave portion of [https://gerrit.hyperledger.org/r/#/c/15957/.] ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: shim upgrade: ensure old chaincode containers are deleted after upgrade (verify FAB-5676),FAB-7303,24762,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,05/Dec/17 9:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Feb/18 7:00 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,"Shim test suggestion:
 # take peer down
 # delete cc images on peer, manually or automatically(?)  Doing this should trigger new ones to be created during next steps.
 # update peer binaries
 # start peer
 # invoke and query",,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5676,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzypfj:",,,,,,,,,,,,,,,,,,,,,,Nishi,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 5:27 AM;Nishi;Note: It was observed that when the same chaincode was instantiated from two different channels with same name only one container was created.;;;","23/Jan/18 2:15 PM;scottz;Nishi, That is as expected.

[https://gerrit.hyperledger.org/r/#/c/17017/] includes a statement in the upgrade.feature file to remove the docker chaincode containers and images (in other words, it must be done manually by the peer admins). I saw an open JIRA but no plans to fix in v1.1-alpha, to get the fabric to do it automatically. Not sure when it will happen.;;;","09/Feb/18 3:51 AM;scottz;FAB-5676 is not done in v1.1, so this is an invalid testcase in v1.1. The upgrade doc now specifies the need for the operator (out of band) to delete the chaincode images while the peer is stopped when changing the peer version. When we did that, things worked. It is now a part of the fabric-test/features/upgrade.feature test If and when FAB-5676 is done in future releases, then we will need to modify this testcase upgrade.feature) to remove the step that manually removes the images (and enhance verify steps as needed,;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test scenario: shim downgrade: ensure unneeded cc containers are deleted after downgrade peer software (verify FAB-5676 abort-upgrade scenario),FAB-7304,24763,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,05/Dec/17 9:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Feb/18 7:00 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzypfr:",,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/18 3:52 AM;scottz;FAB-5676 is not done in v1.1, so this is an invalid testcase in v1.1. The upgrade doc now specifies the need for the operator (out of band) to delete the chaincode images while the peer is stopped when changing the peer version. When we did that, things worked. It is now a part of the fabric-test/features/upgrade.feature test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have delivery-client OSN black-listing abort if only 1 OSN endpoint is left,FAB-7306,24770,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,05/Dec/17 11:30 PM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,06/Dec/17 10:20 AM,v1.1.0,,,,,,v1.1.0,,,fabric-peer,,,,0,,,,,,,"When the peer receives a bad status (i.e UNAVAILABLE) from an ordering service node that it connects to, it disconnects from it and tries another ordering service node.

FAB-5006 introduced an optimization for v1.1 that makes the peer *temporarily* black-list ordering service nodes that send a bad status (i.e UNAVAILABLE) in order for the peer to prioritize selection of other OSNs, instead of connecting to them with the same probability.

 

This might be problematic in cases where the OSNs are behind a LB/NAT where only 1 endpoint is actually known to the peer, but in practice - several endpoints exist behind.

This would result the peer in always disabling immediately *all* OSNs because it only knows 1 endpoint.

 

We can easily overcome this if we don't black-list an endpoint if it is the last one remaining.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzypgn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/17 1:13 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/15951/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve sample delivery client for commonality across peer and orderer,FAB-7308,24775,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,wlahti,wlahti,06/Dec/17 1:31 AM,21/Jul/18 3:49 AM,28/Oct/23 3:01 AM,19/Apr/18 2:19 AM,,,,,,,Abandoned,,,fabric-samples,,,,0,A&D,,,,,,"The sample delivery client for the orderer ([https://github.com/hyperledger/fabric/tree/release/orderer/sample_clients/deliver_stdout)] can be reused as-is to connect to the deliver service on a peer. However, it will be more user friendly if it is moved/copied into fabric/examples and has a few names changed to make it clear that it is compatible with the peer. It should also work with TLS enabled and have a readme to describe the basic functionality. 
  ",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6911,,,,,,,,,,,,,,,,,,,,,,FAB-6451,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzypj3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make default mod_policy for resources tree configurable in configtx.yaml,FAB-7322,24789,20623,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Dec/17 3:09 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 3:10 AM,,,,,,,,,,,,,,0,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypm7:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PTE enhances peer stats with channel option,FAB-7325,24792,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Dec/17 3:56 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Dec/17 7:00 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"Enhance PTE peer stats tool, get_peerStats.sh, with channels option.

This will add an option for channel TPS in addition to TPS for ALL blocks.

  ",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2247,,,,,,,,,"1|hzypmn:",,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write synopsis document for upgrade process to drive end user documentation,FAB-7326,24793,20760,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,jeffgarratt,jeffgarratt,06/Dec/17 4:08 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Dec/17 2:35 AM,,,,,,,,,,,,,,0,,,,,,,See google doc https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?usp=sharing,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypmv:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 3:13 AM;jeffgarratt;Created google doc https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?usp=sharing;;;","09/Dec/17 2:35 AM;jeffgarratt;Updated doc to include step to remove existing chaincode images.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to download platform specific binaries from RTD script from master or latest branch,FAB-7327,24794,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,06/Dec/17 4:10 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Dec/17 7:28 PM,,,,,,,DUPLICATE,,,fabric-docs,,,,0,,,,,,,"Unable to download tagged images from the below script . [http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries]
 curl -sSL [https://goo.gl/6wtTN5] | bash -s 1.1.0--preview** This script is downloading 1.0.4 fabric images and 1.1.0-preview fabric-ca images.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypn3:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode instantiation returns timeout expired ,FAB-7328,24798,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,blintgit,blintgit,blintgit,06/Dec/17 6:15 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,06/Apr/18 4:07 PM,,,,,,,Not a Bug,,,fabric-samples,,,,0,chaincode,fabric-samples,nodejs-chaincode,,,,"Dear Community,

I've been working around with Fabric for a a few months now, and I've been trying to run a somewhat complex virtual machine, the Ethereum Virtual Machine within a chaincode. It is written in JavaScript so I worked with the nodeJS chaincode version.

I packed the the VM with my chaincode in a directory that i install and instantiate onto the peer. The install completes and exits with no errors, however the instantiation after hanging for a few minutes returns me an error:

 
{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = timeout expired while starting chaincode mychaincode:1.0(networkid:dev,peerid:peer0.org1.example.com,tx:.... {code}
 It should run for quite a few minutes at least as the added packages are ~15MB, according to the example nodejs chaincode runs for a minute at least.

 

The example nodejs chaincode (chaincode_example02) runs perfectly on both BYFN network from the tutorial and on a basic-network that I've started. My environment was set up according to the documentation (v1.1.0) from the fabric-samples repository (v1.1.0). Even if I only add one package to the example chaincode with the require method, it hangs, than return error.

I've been searching for a flag or config where I can set the timeout value for chaincode instantiation, but with no luck. Where could I increase the timeout value? Which log should I provide to search for the soution?

Thanks is advance,

Balint",,blintgit,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypnz:",,,,,,,,,,,,,,,,,,,,,,blintgit,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/18 7:12 PM;mastersingh24;[~blintgit] - See the executeTimeout parameter here:  https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L494

You can either set it in the core.yaml or set the CORE_CHAINCODE_EXECUTETIMEOUT environment variable.
 
You should also check the logs for your chaincode container to ensure that there was no error actually launching it as well;;;","06/Apr/18 2:35 AM;ChristopherFerris;[~blintgit] do you wish to keep this open or, can it be closed? Thanks;;;","06/Apr/18 5:52 AM;ChristopherFerris;[~blintgit] I would also refer you to the #fabric-evm channel in RocketChat... there is a collaboration between Fabric and Burrow engineers to implement an EVM in Fabric. https://jira.hyperledger.org/browse/FAB-6590;;;","06/Apr/18 4:06 PM;blintgit;Thank you for the reference and the reminder. I close it now :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"performance test: channel events, 1 ch NodeJS cc, 4 thrds",FAB-7329,24799,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,06/Dec/17 7:05 AM,05/Oct/18 11:07 PM,28/Oct/23 3:01 AM,05/Oct/18 11:07 PM,,,,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,,"Test name: Performance test: channel events, 1 channel
 Component: Performance test
 Description: performance events per channel with levelDB
    chaincode: each channel has one chancode, sample_cc, instantiated
    transactions: 4 threads, each thread sends 10000 invokes concurrently
        thread 1 sends to org1 peer1 on channel 1, registers events for channel1
        thread 2 sends to org2 peer1 on channel 1, registers events for channel1
        thread 3 sends to org1 peer1 on channel 1, registers events for channel1
        thread 4 sends to org2 peer1 on channel 1, registers events for channel1

Network Topology: docker containers; 1 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with both channels
 Client Driver: PTE
 Results:
 The test passes if
    the execution completes without error
    each thread receives all events associated with the channel it registered, and verifies events        received for every transaction it sent itself
    each thread does not receive any event that not associated with the channel it registered
 The TPS (transactions per second) will be calculated and documented.",,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7332,,,FAB-7334,,,,,"08/Jun/18 4:13 AM;suryalnvs;FAB-7329-4i-FAB-7204-4q.log;https://jira.hyperledger.org/secure/attachment/15080/FAB-7329-4i-FAB-7204-4q.log",,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzypo7:",,,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,true,"06/Dec/17 8:37 AM;scottz;This is test for events using per-channel delivery service.

Compare with baseline test FAB-7332 using per-transaction events.

Compare also with FAB-7334 which uses filtered blocks and channel delivery.;;;","08/Jun/18 4:13 AM;suryalnvs;Tested at Commit level 186ae9f;;;","31/Aug/18 8:30 AM;scottz;Test is done. Just need to add this to daily CI tests, runPteDailyTestSuite.sh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka/ZK nodes should be shutdown gracefully and in a rolling fashion during upgrade,FAB-7330,24800,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,kchristidis,kchristidis,06/Dec/17 7:29 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Jan/18 6:59 AM,,,,,,,v1.1.0,,,fabric-docs,,,,0,kafka,,,,,,"*Definitions*

Assume that _*f*_ is the number of failures (broker crashes) that your Kafka cluster can tolerate.

*Problem*

If more than _*f*_ brokers are shutdown abruptly at around the same time, data that was acknowledged as received and committed by the Kafka cluster may be lost and resumption of normal operation may be hindered.

*Explanation*

Kafka by default does not flush data to disk continuously for performance reasons ([source|http://www.allprogrammingtutorials.com/tutorials/configuring-log-flush-interval-in-kafka.php]). This includes both [received messages|https://kafka.apache.org/documentation/#impl_writes] and metadata such as the high watermark (see: {{replica.high.watermark.checkpoint.interval.ms}} configuration setting). From [an older Kafka replication doc|https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Replication#KafkaReplication-Writes]:
{quote}""There is no guarantee that any replica has persisted the commit message to disks though. Given that correlated failures are relatively rare, this approach gives us a good balance between response time and durability.""
{quote}
An abrupt, i.e. non-graceful, shutdown of a broker then constitutes a failure.

Therefore, during an upgrade, we should not be terminating the brokers abruptly — we currently do a {{docker stop}} on the Kafka containers which [translates to a SIGTERM/SIGKILL|https://docs.docker.com/engine/reference/commandline/stop/] on the Kafka process. We should also not be terminating more than _*f*_ brokers at a time.

When we do that, we may come up with a situation similar to what [~jeffgarratt] observed in one of his test runs. I am attaching the logs of this run here for future reference.

Here's what we observe in the logs:
 # Before the upgrade, channel1 was assigned to replicas 2, 3, and 0. 13 messages were committed to the channel's partition.
 # After the upgrade, replica 2 is assigned as the leader of the channel1 partition. _Its *committed* high watermark (HW) is 0._
 # Replicas 0 and 3 have a log end offset (leo) _and_ a HW of 12 for the channel1 partition. The former is documented in the logs ({{[2017-12-04 18:25:30,534] INFO Completed load of log com.acme.blockchain.jdoe.channel1-0 with 1 log segments and log end offset 12 in 32 ms (kafka.log.Log)}}), while the latter can be inferred by the log printouts ({{[2017-12-04 18:26:36,244] INFO Truncating log com.acme.blockchain.jdoe.channel1-0 to offset 12. (kafka.log.Log)}}) and our knowledge of the fact that a replica truncates its log to its checkpointed HW ([source|https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Replication] – see ""Leader failure"", bullet point 3a).
 # Replicas 0 and 3 now issue a {{ReplicaFetchRequest}} ([source|https://cwiki.apache.org/confluence/display/KAFKA/Kafka+replication+detailed+design+V2]) to the channel1 leader (replica 2) in order to catch up. This request starts from offset 12. But replica 2 does not have offset 12 in its log segment. Replicas 0 and 3 treat this as a fatal error ({{[2017-12-04 18:26:36,937] FATAL [ReplicaFetcherThread-0-2], Exiting because log truncation is not allowed for partition com.acme.blockchain.jdoe.channel1-0, Current leader 2's latest offset 0 is less than replica 3's latest offset 12 (kafka.server.ReplicaFetcherThread)}}) and exit.
 # We now have a partition that is both read-only (because there are not enough live in-sync replicas) and has suffered data loss.

Here's an explanation for the above:
 # Note that the default values for {{log.flush.interval.messages}}, {{log.flush.interval.ms}}, and {{log.flush.scheduler.interval.ms}} practically disable an explicit fsync and instant rely on the background flush done by the OS ([source|https://community.hortonworks.com/articles/80813/kafka-best-practices-1.html]). This makes us prone to losing committed messages during an abrupt restart. Also note that the default value for {{replica.high.watermark.checkpoint.interval.ms}} is set to 5 seconds. This is the frequency with which the HW is saved out to disk. This means there is a significant chance of a not persisting the most recent HW to disk.
 # 13 messages were posted to the channel1 successfully before the upgrade.
 # Replicas 0 and 3 persisted that info to disk. (Technically, replica 3 didn't do so cleanly, but it managed to retrieve that data w/o issues upon restarting, see {{[2017-12-04 18:25:30,511] WARN Found a corrupted index file due to requirement failed: Corrupt index found, index file (/var/hyperledger/bddtests/volumes/kafka/fe661a26d91f11e7863e02d158fa0198/kafka3/filestore/com.acme.blockchain.jdoe.channel1-0/00000000000000000000.index) has non-zero size but the last offset is 0 which is no larger than the base offset 0.}. deleting /var/hyperledger/bddtests/volumes/kafka/fe661a26d91f11e7863e02d158fa0198/kafka3/filestore/com.acme.blockchain.jdoe.channel1-0/00000000000000000000.timeindex, /var/hyperledger/bddtests/volumes/kafka/fe661a26d91f11e7863e02d158fa0198/kafka3/filestore/com.acme.blockchain.jdoe.channel1-0/00000000000000000000.index and rebuilding index... (kafka.log.Log)}} message in its log.)
 # Replica 2 was shut down before it could persist the high watermark or the messages to disk.
 # As far as the Kafka cluster is concerned, replica 2 was part of the ISR set for channel1 when we stopped its container. Given that [the number of remaining live replicas|https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature#L420] is less than [the minimum ISR requirement for channel1|https://github.com/jeffgarratt/fabric-prototype/blob/master/dc-orderer-kafka.yml#L78], channel1 becomes read-only when replica 2 goes down, and replica 2 remains at the ISR set.
 # When the Kafka/ZK cluster is upgraded and rebooted, replica 2 is the first one to complete loading its log for channel1, since it's practically empty. It is therefore the first one among the brokers in the assigned replica (AR) set of channel1 to go live. Given that it is also the preferred replica for channel1 (recall that: {{[2017-12-04 18:26:35,750] INFO Topic creation \{""version"":1,""partitions"":\{""0"":[2,3,0]}} (kafka.admin.AdminUtils$)}}), it is assigned as the leader of channel1 post-upgrade. This results in data loss.

*Solution*

For the purposes of demonstrating upgrade we should ignore any tweaking of flushing-related settings. Our main objective here should be to just shut down up to _*f*_ brokers at a time, and do so gracefully. The latter part is technically optional ([source|https://kafka.apache.org/documentation/#basic_ops_restarting]: ""Syncing the logs will happen automatically whenever the server is stopped other than by a hard kill"") but is the correct practice during an upgrade — refer to the ""Graceful shutdown"" [section on the Kafka documentation website|https://kafka.apache.org/documentation/#basic_ops_restarting], and on the ""Implementing a graceful shutdown"" section of the [Apache Kafka Cookbook|https://www.safaribooksonline.com/library/view/apache-kafka-cookbook/9781785882449/ch06s04.html].

With that in mind, we should be doing the following:
 # Ensure that {{controlled.shutdown.enable}} is set to true. This is the default.
 # Execute the {{kafka-server-stop.sh}} script provided by Kafka on replica 0.
 # Confirm the replica has shut down.
 # Upgrade replica to latest Kafka binary.
 # Bring up replica.
 # Ensure that replica is part of the ISR set again. (How? We want the cardinality of the ISR set to be equal to the replication factor so we _could_ use [the kafka-utils Python package|http://kafka-utils.readthedocs.io/en/latest/kafka_check.html#checking-in-sync-replicas]: {{$kafka-check --cluster-type=foo min_isr --default_min_isr 3}} where 3 is our replication factor. Is there an easier / more scriptable way of getting this data though?)
 # Repeat steps 2 to 6 for replicas 1 to 3.

We should be adopting a similar strategy for the ZooKeeper ensemble:
 # Execute the {{zkServer.sh}} script on ZK node 1: {{zkServer.sh stop}}
 # Confirm the node has shut down.
 # Upgrade node to latest ZooKeeper binary.
 # Bring up node.
 # Ensure it is part of the ensemble. (How? Perhaps via the {{stat}} command, and checking whether the mode is ""leader"" or ""follower""? Is there an easier / more scriptable way of going at it?)
 # Repeat step 1 to 5 for nodes 2 and 3.",,bjwswang,grapebaba,jeffgarratt,kchristidis,qiang0723,sanchezl,scottz,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6123,,,,,,,,,,,,,,,FAB-7712,,,,,"06/Dec/17 7:28 AM;kchristidis;logs.zip;https://jira.hyperledger.org/secure/attachment/13441/logs.zip",,,,,,,,,,,,,FAB-6122,,,,,,,,,"1|hzypof:",,,,,,,,,,,,,,,,,,,,,,bjwswang,grapebaba,jeffgarratt,kchristidis,qiang0723,sanchezl,scottz,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 7:42 AM;kchristidis;[~sanchezl]: Let me know if you spot any issues with the description above. I'm also interested in any tools/APIs that we could use to confirm that the Kafka broker / ZK node is a working part of the cluster / ensemble. What I found above is the result of a cursory search, but you may have given it a more thorough look in the past, and thus have better tooling in mind.

[~jeffgarratt]: We will need to update {{upgrade.feature}}  accordingly. Making it so that each of the steps above is _actually_ implemented in {{fabric-prototype}} however may be an overkill, and beyond your domain of concern. In this case, we should use the feature to at least _allude_ to the right process (i.e. have the step implementations be no-ops). However, if we do so, how do we ensure that the feature passes? Do we sleep for enough time between each step and _hope_ that the step has completed successfully? Seems unorthodox. Let me know your thoughts.;;;","06/Dec/17 11:12 AM;jeffgarratt;Updated in [https://github.com/jeffgarratt/fabric-prototype] to place 6s sleeps after each shutdown of Kafka and ZK instances.  Then ran successfully 3 times consecutively.  Will discuss in the AM with [~kchristidis];;;","31/Dec/17 1:32 AM;grapebaba;I faced this issue too on kubernetes ;;;","04/Jan/18 11:38 AM;bjwswang;Met same problem in IBM Blockchain Platform update procedures... After we upgrade our IBP version, we need to shut down all of the containers , including peers,orderer,kafka,zookeeper ... When we finished , we tried to recover our network  by sending new transactions , but we found SERVICE_UNAVAILABLE in peers and  error log just like this issue in kafka ;;;","05/Jan/18 7:17 AM;scottz;[~bjwswang] I think the answer is that you should NOT stop all the kafka containers at once when upgrading. That is not a rolling upgrade. We can talk about that separately, but I believe we are already planing to document the recommended upgrade procedures for fabric and its use of kafka with this JIRA task. In addition, would you be interested in creating a separate JIRA to ask for some documentation of best practices such as the recommended steps to take when trying to limit data loss during recovery, after finding yourself in a situation where more than 'f' kafka brokers got stopped at once for any reason, gracefully or otherwise.;;;","09/Jan/18 4:32 AM;Clayton Sims;Change from subtask to task and moved to doc after talking to kostas and luis.;;;","13/Jan/18 6:59 AM;sanchezl;• The problem described in the issue should be resolved in Kafka 0.11 and later by [KIP-101|https://cwiki.apache.org/confluence/display/KAFKA/KIP-101+-+Alter+Replication+Protocol+to+use+Leader+Epoch+rather+than+High+Watermark+for+Truncation].

• I have updated the [draft upgrade doc|https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?usp=sharing] and the Fabric documentation with the information needed when upgrading orderer (with or without a corresponding Kafka broker upgrade).

• The Kafka upgrade process is documented in [the official Apache Kafka docs|https://kafka.apache.org/0101/documentation.html#upgrade] and I don't think we need to repeat them in our own documentation. Orderer specific considerations to be aware of when upgrading either the orderer binary, orderer docker image, or the Kafka brokers are documented in the links found in the previous bullet.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"performance test: peer event service, 1 ch NodeJS cc",FAB-7331,24801,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,06/Dec/17 7:32 AM,30/Jul/19 11:42 AM,28/Oct/23 3:01 AM,30/Jul/19 11:42 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,,"Test name: Performance test: transaction events, 1 channel
 Component: Performance test
 Description: performance events per channel with levelDB
     chaincode: each channel has one chancode, sample_cc, instantiated
     transactions: 4 threads, each thread sends 10000 invokes concurrently
         thread 1 sends to org1 peer1 on channel 1, registers events for channel1
         thread 2 sends to org2 peer1 on channel 1, registers events for channel1
         thread 3 sends to org1 peer1 on channel 1, registers events for channel1
         thread 4 sends to org2 peer1 on channel 1, registers events for channel1

Network Topology: docker containers; 1 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with both channels
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies events
 The TPS (transactions per second) will be calculated and documented.",,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7246,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypon:",,,,,,,,,,,,,,,,,,,,,,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,true,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"performance test: peer event service, 2 ch NodeJS cc",FAB-7332,24802,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,dongming,dongming,dongming,06/Dec/17 7:34 AM,30/Jul/19 11:41 AM,28/Oct/23 3:01 AM,30/Jul/19 11:41 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,,"Test name: Performance test: transaction events, 2 channels
Component: Performance test
Description: performance events per channel with levelDB
    chaincode: each channel has one chancode, sample_cc, instantiated
    transactions: 4 threads, each thread sends 10000 invokes concurrently
         thread 1 sends to org1 peer1 on channel 1, registers events for channel1
         thread 2 sends to org2 peer1 on channel 1, registers events for channel1
         thread 3 sends to org1 peer1 on channel 2, registers events for channel2
         thread 4 sends to org2 peer1 on channel 2, registers events for channel2
 
Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with both channels
Client Driver: PTE
Results:
The test passes if
    the execution completes without error
    each thread receives all events associated with the channel it registered, and verifies            events received for every transaction it sent itself
The TPS (transactions per second) will be calculated and documented.",,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7329,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzypov:",,,,,,,,,,,,,,,,,,,,,,dongming,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,release-1.1,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,release-1.3,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.4,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,true,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"performance test: filtered block events, 1 ch NodeJS cc, 4 thrds",FAB-7333,24803,,Test Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,dongming,dongming,06/Dec/17 7:36 AM,05/Oct/18 11:07 PM,28/Oct/23 3:01 AM,05/Oct/18 11:07 PM,,,,,,,v1.1.0,v1.3.0,,fabric-quality,,,,0,ContinuousDelivery,SystemTestcase,,,,,"Test name: Performance test: filtered block events, 1 channel
 Component: Performance test
 Description: performance events per channel with levelDB
     chaincode: each channel has one chancode, sample_js, instantiated
     transactions: 4 threads, each thread sends 10000 invokes concurrently
          thread 1 sends to org1 peer1 on channel 1, registers events for channel1
          thread 2 sends to org2 peer1 on channel 1, registers events for channel1
          thread 3 sends to org1 peer1 on channel 1, registers events for channel1
          thread 4 sends to org2 peer1 on channel 1, registers events for channel1
 Network Topology: docker containers; 1 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with the channel
 Client Driver: PTE
 Results:
 The test passes if
     the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself
     each thread does not receive any event that not associated with the channel it registered
 The TPS (transactions per second) will be calculated and documented.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7246,FAB-7140,,,,,,,"08/Jun/18 4:10 AM;suryalnvs;FAB-7333-4i-FAB-7204-4q.log;https://jira.hyperledger.org/secure/attachment/15076/FAB-7333-4i-FAB-7204-4q.log",,,,,,,,,,,,,FAB-10083,,,No,,,,,,"1|hzypp3:",,,,,,,,,,,,,,,,,Pass,"Passed 9/29 (post V1.3 RC1) in verify job; soon to be automated as part of daily test suite.",Unset,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,release-1.1,release-1.2,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,release-1.3,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-1.4,release-2.5,release-2.4,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,true,"06/Dec/17 8:31 AM;scottz;Compare results with FAB-7246;;;","26/Jan/18 12:13 PM;scottz;https://gerrit.hyperledger.org/r/#/c/17159/;;;","31/Aug/18 8:30 AM;scottz;Test is done. Just need to add this to daily CI tests, runPteDailyTestSuite.sh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Performance test: filtered block events, 2 ch NodeJS cc",FAB-7334,24804,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dongming,dongming,06/Dec/17 7:38 AM,31/Aug/18 8:34 AM,28/Oct/23 3:01 AM,31/Aug/18 8:27 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,SystemTestcase,,,,,,"Test name: Performance test: filtered block events, 2 channels
Component: Performance test
Description: performance events per channel with levelDB
    chaincode: each channel has one chancode, sample_cc, instantiated
    transactions: 4 threads, each thread sends 10000 invokes concurrently
        thread 1 sends to org1 peer1 on channel 1, registers events for channel1
        thread 2 sends to org2 peer1 on channel 1, registers events for channel1
        thread 3 sends to org1 peer1 on channel 2, registers events for channel2
        thread 4 sends to org2 peer1 on channel 2, registers events for channel2
 
Network Topology: docker containers; 2 channels, 2 org, 2 peers per org, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with both channels
Client Driver: PTE
Results:
The test passes if
    the execution completes without error
     each thread receives all events associated with the channel it registered, and verifies events received for every transaction it sent itself
    each thread does not receive any event that not associated with the channel it registered
The TPS (transactions per second) will be calculated and documented.",,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7329,FAB-7140,,,,,,,"08/Jun/18 4:12 AM;suryalnvs;FAB-7334-4i-FAB-7204-4q.log;https://jira.hyperledger.org/secure/attachment/15078/FAB-7334-4i-FAB-7204-4q.log",,,,,,,,,,,,,FAB-10083,,,,,,,,,"1|hzyppb:",,,,,,,,,,,,,,,,,,,,,,dongming,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"06/Dec/17 8:33 AM;scottz;This testcase uses filtered blocks. Compare results with FAB-7329, same but with unfiltered blocks.;;;","26/Jan/18 12:13 PM;scottz;https://gerrit.hyperledger.org/r/#/c/17159/;;;","08/Jun/18 4:12 AM;suryalnvs;Tested at Commit level 186ae9f;;;","29/Aug/18 6:52 AM;scottz;Hmmm. I reopened this one by mistake. Close it now. We need to add a different one to the daily test suite.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-verify-s390x failed as some packages couldn't be fetched due to url failure..,FAB-7335,24805,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,rameshthoomu,sambhavdutt,sambhavdutt,06/Dec/17 8:00 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,06/Dec/17 11:49 PM,,,,,,,,,,fabric-ci,,,,0,ci-failure,,,,,,"fabric-verify-s390x has failed as a url returns a 404 error, and fails to fetch some build packages, 

*Error Message*
21:14:30 W: Failed to fetch http://ftp.us.debian.org/debian/dists/sid/main/binary-s390x/Packages  Hash Sum mismatch
21:14:30 
21:14:30 E: Some index files failed to download. They have been ignored, or old ones used instead.
21:14:30 Fetched 20.0 MB in 4s (4491 kB/s)
21:14:31 The command '/bin/sh -c bash /tmp/install-softhsm2.sh && rm -f install-softhsm2.sh' returned a non-zero code: 100
21:14:31 Makefile:291: recipe for target 'build/image/testenv/.dummy-s390x-1.1.0-alpha-snapshot-3689c5a' failed
21:14:31 make: *** [build/image/testenv/.dummy-s390x-1.1.0-alpha-snapshot-3689c5a] Error 100
21:14:31 Build step 'Execute shell' marked build as failure

*Build Log*
https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-s390x/514/console",,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyppj:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 11:49 PM;rameshthoomu;[~sambhavdutt] don't create bugs when a verify build is failed. Usually verify build may fail for any reason and if you observe the above error consistently pls file a bug but I observed this is caused by the network error. Same build got passed on the reverify.

https://jenkins.hyperledger.org/job/fabric-verify-s390x/515/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer should not check `aclmgmt.LSCC_GETDEPSPEC` policy when attempting to endorse a proposal,FAB-7337,24819,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,06/Dec/17 10:12 PM,23/Jan/20 7:18 AM,28/Oct/23 3:01 AM,23/Jan/20 7:18 AM,v1.1.0,,,,,,Future,,,fabric-peer,,,,0,stale-item,,,,,,"The current peer code contains a check for compliance of the proposal against the `aclmgmt.LSCC_GETDEPSPEC` policy that is executed before a chaincode invocation is executed. This check is there because 
 * if cc lifecycle is in LSCC, LSCC is invoked to retrieve the deployment spec, and the check is inlined in the LSCC invocation
 * if cc lifecycle is in the config tree, the check was introduced to mirror the legacy code path.

The purpose of this JIRA is twofold:
 # remove the invocation of aclmgmt.LSCC_GETDEPSPEC if the cc lifecycle is in the config tree
 # remove the invocation of aclmgmt.LSCC_GETDEPSPEC if the cc lifecycle is managed through LSCC

[~yacovm]",,ales,denyeart,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyq4f:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,denyeart,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:08 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 7:18 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: Upgrade fabric-ca before upgrading fabric,FAB-7338,24820,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,Nishi,Nishi,06/Dec/17 11:28 PM,23/Jan/20 7:18 AM,28/Oct/23 3:01 AM,23/Jan/20 7:18 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyq4n:",,,,,,,,,,,,,,,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:18 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: upgrade fabric-ca after upgrading fabric,FAB-7339,24821,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Nishi,Nishi,Nishi,06/Dec/17 11:29 PM,23/Jan/20 7:18 AM,28/Oct/23 3:01 AM,23/Jan/20 7:18 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyq4v:",,,,,,,,,,,,,,,,,,,,,,Nishi,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:18 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: add and remove users via the java sdk's on the new version,FAB-7340,24822,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Nishi,Nishi,06/Dec/17 11:30 PM,30/Jul/19 11:59 AM,28/Oct/23 3:01 AM,30/Jul/19 11:59 AM,,,,,,,,,,,,,,0,,,,,,,,,mastersingh24,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyq53:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Separate validation and commit steps for transactions of types common.HeaderType_CONFIG and common.HeaderType_PEER_RESOURCE_UPDATE,FAB-7341,24823,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,ales,ales,06/Dec/17 11:46 PM,30/Jul/19 12:03 PM,28/Oct/23 3:01 AM,30/Jul/19 12:03 PM,,,,,,,,,,,,,,0,,,,,,,"Transactions of types common.HeaderType_CONFIG and common.HeaderType_PEER_RESOURCE_UPDATE should be:
 * validated by the validator (in ./core/committer/txvalidator/validator.go) 
 * committed (if valid) after validation, following the pattern that exists for common.HeaderType_ENDORSER_TRANSACTION transactions

The current implementation is not consistent with respect to that. Indeed:
 * common.HeaderType_CONFIG are validated and committed in ./core/committer/txvalidator/validator.go
 * common.HeaderType_PEER_RESOURCE_UPDATE are neither validated nor committed in ./core/committer/txvalidator/validator.go

The approach should be aligned so that the code is modular and can easily be maintained.",,ales,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyq5b:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ales,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 11:46 PM;ales;adding [~jyellick];;;","30/Jul/19 12:03 PM;mastersingh24;superseded by validation refactor ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System Test: Verify mutual TLS using fabric-ca instead of cryptogen,FAB-7342,24824,24491,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,aambati,latitiah,latitiah,07/Dec/17 1:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/Feb/18 3:39 AM,,,,,,,,,,,,,,0,,,,,,,,,aambati,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq5j:",,,,,,,,,,,,,,,,,,,,,,aambati,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/18 1:41 AM;aambati;https://gerrit.hyperledger.org/r/c/17037/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 2. Connect deliver clients to peers after channel creation & joining the peer to the channel and listen forever,FAB-7343,24827,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 1:33 AM,23/Jan/20 7:18 AM,28/Oct/23 3:01 AM,23/Jan/20 7:18 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq5r:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 2:08 AM;holocron;The deliver clients used in this test will retrieve full blocks, not filtered blocks. Compare this to << MISSING FAB >> which will retrieve filtered blocks.;;;","23/Jan/20 7:18 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer fails to connect to Kafka's partition consumer channel,FAB-7352,24838,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,rhegde,rhegde,07/Dec/17 6:42 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,27/Dec/17 12:05 AM,,,,,,,,,,fabric-orderer,,,,0,kafka,,,,,,"On one of our setup, orderer fails to connect with `Connecting to the Kafka cluster` and looking at its log, it is for `setupChannelConsumerForChannel`. We see only 1 channel able to successfully complete `setupChannelConsumerForChannel` however rest channels (including system channel) is having this issue.

The other connect points `setupParentConsumerForChannel` and `setupProducerForChannel` has received the connect message response - assuming they are good.

This is a new setup and initially for ~3days, everything was good. There was 1 orderer (out of 3) which got restarted, and above problem was seen. The other 2 orderers were running w/o any problem. We restarted the other 2 orderer (docker service), and this problem started for remaining too.

I have uploaded the required logs of orderer, kafka, zookeeper on secureFTP site ([http://dts.cls-group.com/)|http://dts.cls-group.com/] who's credential are available [~Clayton Sims] and [~altharp]

filename: FAB-7352-OrdererChannelPartitionError-6Dec2017.zip

[~sanchezl] [~kchristidis]",,kchristidis,rhegde,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq7j:",,,,,,,,,,,,,,,,,,,,,,kchristidis,rhegde,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/17 2:49 AM;sanchezl;[~rhegde], please provide:
 # the output of {{docker inspect}} for the containers involved
 # an overview of the networking configuration (e.g. docker networks or host networking?
 # I see that you can ping kafka from orderer container (please confirm that is what I'm seeing in the logs), can you try accessing the kafka ports themselves, e.g.: {{$ cat < /dev/tcp/kafka01.clsorder.sitnf.clsnet/9092}}  (success if you don't get Connection refused message).

I suspect the docker networking (specifically its iptables config) has somehow gotten into a bad state. You can use commands like {{route}}, and  {{iptables --list}}  on the host machines to debug (provide this output also if you can). If there is a problem in this area, re-starting the docker daemons usually cleans the networking configuration up.;;;","08/Dec/17 7:18 AM;rhegde;# I will get back with the docker inspect for OSN containers + network. This will take some time as this is a restricted/controlled environment at our place.
 # This is Docker Swarm network. OSN is hosted on a single host, where as there are other peer nodes distributed on 2 different host systems.
 # Right - Kafka containers are accessible, this is proved with the ping snapshot. And at the same time there is Producer and Parent Consumer connection getting established however it is the Partition Consumer channel that doesn't go through. We also ran a netstat on orderer container to see multiple connections established on port 9092 by orderer with kafkas. We will provide a snapshot of netstat too.

The only exception to the above is the public channel which is allowed to create Partition Consumer channel connection.

We even tried restarting docker-daemon of the OSN hosting node only (before filing JIRA), this didn't help.;;;","09/Dec/17 12:19 AM;sanchezl;The Kafka logs show a number of attempts to access a partition from the wrong broker:
{noformat}
[2017-12-06 13:46:53,026] ERROR [ReplicaFetcherThread-0-2], Error for partition [cls2obo,0] to broker 2:org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition. (kafka.server.ReplicaFetcherThread){noformat}
{noformat}
[2017-12-06 13:51:32,674] ERROR [ReplicaFetcherThread-0-3], Error for partition [testchainid,0] to broker 3:org.apache.kafka.common.errors.NotLeaderForPartitionException: This server is not the leader for that topic-partition. (kafka.server.ReplicaFetcherThread){noformat}
This would explain the {{Consumer}} (a.k.a. parent) connection succeeding, but not being able to create a {{PartitionConsumer}}.

This type of error would indicate that the kafka metadata is out of sync. So you will need to figure out if this is a result of problems with:
 * Kafka-kafka communication
 * Kafta-Zookeeper communication
 * Zookeeper-Zookeeper communication.

Another area to look into is the persistence in your docker swarm network, for example if one of the zookeeper services was re-stared, did the replacement service pick up the same volume mapped to $ZOO_DATA_DIR and possibly $ZOO_DATA_LOG_DIR ? A problem here could explain the initial occurrence of the problem (""out-of-nowhere""). ;;;","11/Dec/17 8:24 AM;rhegde;We are getting this problem on another dev-environment now, this started with following message from orderer. All 3 orderers went down with below panic message

*Snippet from Orderer (s)*

2017-12-09 01:21:46.304 UTC [orderer/kafka] startThread -> CRIT 94d9 [channel: testchainid] Cannot set up channel consumer = kafka server: The requested offset is outside the range of offsets maintained by the server for the given topic/partition.
panic: [channel: testchainid] Cannot set up channel consumer = kafka server: The requested offset is outside the range of offsets maintained by the server for the given topic/partition.

goroutine 65 [running]:
panic(0xa7f820, 0xc4221037b0)
        /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201c6600, 0xbc08c3, 0x31, 0xc421e7f1e0, 0x2, 0x2)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/kafka.startThread(0xc42156d7a0)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/chain.go:173 +0xafb
created by github.com/hyperledger/fabric/orderer/kafka.(*chainImpl).Start
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/chain.go:94 +0x3f

 

*All 4 Kafka Logs* (they have same print during the same time period - doesn't show any problem)

[2017-12-09 01:31:56,841] INFO [Group Metadata Manager on Broker 3]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-12-09 01:41:56,841] INFO [Group Metadata Manager on Broker 3]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-12-09 01:51:56,841] INFO [Group Metadata Manager on Broker 3]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)

 

*Log after Orderer Restart*

2017-12-10 23:19:26.628 UTC [orderer/kafka] try -> DEBU 981 [channel: testchainid] Connecting to the Kafka cluster;;;","12/Dec/17 4:52 AM;sanchezl;[~rhegde], this message seems to be a separate issue:
{code:java}
panic: [channel: testchainid] Cannot set up channel consumer = kafka server: The requested offset is outside the range of offsets maintained by the server for the given topic/partition.{code}
For this check the logs for a previous message of the form:
{code:java}
""[channel: %s] Starting chain with last persisted offset %d and last recorded block %d""{code};;;","12/Dec/17 5:07 AM;sanchezl;After spending some time with the CLS team on a remote debug session, the main issue appears to be that the nodes in the Kafka/Zookeeper cluster do not seem to agree on the state of the various topics.

The error messages I pointed out in a previous comment come from the Kafka replication thread. The broker is trying to contact the leader for the partitions, in order to bring itself into sync, but the broker that it believes is the leader does not believe it is the leader (or even contain some of the partitions at all!). I'm not sure how this disconnect between the brokers and their meta-data occurred, but it has not self corrected after numerous restarts. The orderer will not function until this is resolved.

The brokers and zookeeper nodes are being run on a Docker swarm network using overlay networks. I witnessed some inconsistencies in the ip addresses of the zookeeper nodes when trying to access them from the Kafka nodes: The zookeeper nodes had ip address _xxx.xxx.xxx._5, _xxx.xxx.xxx._7, and _xxx.xxx.xxx._8, but the zookeeper hostnames did not resolve to any of those addresses. I found this disconcerting, but I don't know if this is expected when using docker swarm mode and overlay networks.

I don't think there is anything else we can do from a Fabric/Orderer perspective until the Kafka cluster is fixed. Fixing the Kafka cluster might require the assistance of Docker (for swarm support) and/or Confluence (for Kafka support).;;;","26/Dec/17 7:41 AM;rhegde;Further investigation -

Kafka setup is run by not disabling time based pruning, causing the log segment to prune. This has caused the orderer node to have a offset which is already pruned by Kafka and result in a  continuous attempt to connect to the consumer channel (kafka cluster) using short/long interval setting and eventually give-up with the above error.

Upon discussion on RC with [~jyellick], this seems not repairable using a normal operational procedure means.

Kafka time based pruning needs to be disabled by setting KAFKA_LOG_RETENTION_MS=-1.;;;","27/Dec/17 12:05 AM;kchristidis;{quote}Kafka time based pruning needs to be disabled by setting KAFKA_LOG_RETENTION_MS=-1.
{quote}

This is _precisely_ what our documentation dictates, no?

https://hyperledger-fabric.readthedocs.io/en/latest/kafka.html#steps

Step 6, substep 5:

{quote}log.retention.ms = -1. Until the ordering service adds support for pruning of the Kafka logs, you should disable time-based retention and prevent segments from expiring. (Size-based retention —see log.retention.bytes— is disabled by default in Kafka at the time of this writing, so there’s no need to set it explicitly.)
{quote};;;","27/Dec/17 12:29 AM;rhegde;True - this is part of documentation. 

I would suggest until pruning is supported and to avoid any other users ending up in the same situation, can we make this variable as part of Kafka container environment variable setup for e2e-example which is  the starting reference for any fabric user (https://github.com/hyperledger/fabric/blob/release-1.1/examples/e2e_cli/base/docker-compose-base.yaml#L17).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 4: retrieve all historic blocks,FAB-7360,24847,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 8:22 AM,23/Jan/20 7:18 AM,28/Oct/23 3:01 AM,23/Jan/20 7:18 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq9b:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:18 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 6: Retrieve all blocks after some time,FAB-7361,24848,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 8:22 AM,23/Jan/20 7:19 AM,28/Oct/23 3:01 AM,23/Jan/20 7:19 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq9j:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:19 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 7: receive specific historic block,FAB-7362,24849,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 8:23 AM,23/Jan/20 7:19 AM,28/Oct/23 3:01 AM,23/Jan/20 7:19 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq9r:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:19 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 8: receive block on additional channel,FAB-7363,24850,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 8:23 AM,23/Jan/20 7:19 AM,28/Oct/23 3:01 AM,23/Jan/20 7:19 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyq9z:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:19 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 9: confirm that block events on additional channel are only retrievable by the peer joined to that channel,FAB-7364,24851,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 8:23 AM,23/Jan/20 7:19 AM,28/Oct/23 3:01 AM,23/Jan/20 7:19 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqa7:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:19 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: step 10: join peer to channel2 and re-run step 9,FAB-7365,24852,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,holocron,holocron,07/Dec/17 8:23 AM,23/Jan/20 7:19 AM,28/Oct/23 3:01 AM,23/Jan/20 7:19 AM,,,,,,,,,,,,,,0,stale-item,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqaf:",,,,,,,,,,,,,,,,,,,,,,holocron,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:19 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sending on closed channel during CI test,FAB-7366,24853,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,kchristidis,kchristidis,07/Dec/17 2:02 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,26/Jan/18 9:34 AM,v1.0.4,,,,,,v1.1.0,,,fabric-orderer,,,,0,kafka,,,,,,"Kafka's unit tests failing on CI, see: https://jenkins.hyperledger.org/job/fabric-verify-s390x/524/console",,kchristidis,sanchezl,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqan:",,,,,,,,,,,,,,,,,,,,,,kchristidis,sanchezl,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 2:56 AM;sanchezl;Is this still valid?;;;","26/Jan/18 3:42 AM;kchristidis;[~yacovm] you usually keep a closer tab on CI than I do. Has this shown up again recently?;;;","26/Jan/18 3:50 AM;yacovm;not that I've seen;;;","26/Jan/18 9:34 AM;kchristidis;Thanks for the update. Luis, I say we close.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtering blocks using a filter application,FAB-7367,24854,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jeffgarratt,jeffgarratt,07/Dec/17 2:26 PM,23/Jan/20 7:19 AM,28/Oct/23 3:01 AM,23/Jan/20 7:19 AM,,,,,,,,,,fabric-samples,,,,1,A&D,stale-item,,,,,"Demonstrate an application layer filter.

 

Acknowledgement:

    Originator: [~jeffgarratt]

Below is a communication diagram illustrating the proposed design.

 

!filter_app_comm_diagram.png|thumbnail!   

 

A simple relay application connects to the deliver function and forwards the blocks in the transient field to another channel's filter chaincode application.  The filtered block is returned and broadcasted to the filtered channel.  The target recipient connects to the deliver on the filtered channels and receives the filtered blocks through the standard deliver mechanism.  The existing ACL mechanism can be leveraged to control access to the filtered channel.  In addition, the added benefit of an audit trail of all filtered blocks delivered is maintained.  Another added benefit is that the filter function (i.e. the chaincode) can be signed and verified and chaincode lifecycle can be used to manage it's evolution.

 ",,C0rWin,denyeart,jeffgarratt,kchristidis,mastersingh24,rickr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7088,,,,,,,,"07/Dec/17 2:29 PM;jeffgarratt;filter_app_comm_diagram.png;https://jira.hyperledger.org/secure/attachment/13445/filter_app_comm_diagram.png",,,,,,,,,,,,,,,,,,,,,,"1|hzyqav:",,,,,,,,,,,,,,,,,,,,,,C0rWin,denyeart,jeffgarratt,kchristidis,mastersingh24,rickr,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 3:51 PM;mastersingh24;[~jeffgarratt] - I'm not sure what the point of this is.  One can clearly also build a client application which does this as well.  That's not really the point at all of the requirement.  I also 100% disagree with these mentions of the existing ACL mechanism - none of that comes for free by just writing more chaincode.  
And this ""solution"" now adds the filtered blocks to the ledger (again).  So we are now adding more data to the ledger for no apparent reason.  

Maybe we need to add more detail to FAB-7022 ?  It seems the proposed solution to FAB-7022 (where all I want as a client is to know the status of transactions) is once again to send full blocks to the clients.  
FAB-7069 adds a ""broader"" requirement to actually filter blocks as well.  IMHO, FAB-7022 is a subset of FAB-7069 (i.e. a specific filter).

I also think we might have missed on requirement which is that Fabric v1.0.x is currently missing a channel-based event service.  That's really what adding something like the Deliver Service to the peer solves.  I don't believe that simply sending ""full"" blocks is the solution to FAB-7022.

;;;","07/Dec/17 4:55 PM;yacovm;I second Gari's comment.

 

If our current infrastructure is lacking, we should change the infrastructure and improve it instead of re-using parts of it to built itself.;;;","07/Dec/17 7:54 PM;denyeart;I would have to agree with Gari and Yacov.  Given the asynchronous nature of transaction submission, there should be a built-in peer API to deliver transaction statuses back to client applications.;;;","07/Dec/17 8:25 PM;C0rWin;Joining comments above and I'm failing to see how developing an independent side application could be possible alternative for integrative solution as requested by FAB-7022.
Overall I'd -1, proposed alternative as it defeats the purpose, IMO.;;;","08/Dec/17 8:23 PM;kchristidis;I have some thoughts on the suggested proposal and some of the comments here but, as Murali would say (:)), ""let me make sure I got this right.""

You write:
{quote}I also 100% disagree with these mentions of the existing ACL mechanism - none of that comes for free by just writing more chaincode.
{quote}
Could you elaborate on this?

This is in response to the original statement:
{quote}The existing ACL mechanism can be leveraged to control access to the filtered channel.
{quote}
Is there something inaccurate or misleading about that statement? Perhaps an example could help.;;;","23/Jan/20 7:19 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make cryptogen tool generate new artifacts on existing crypto directory,FAB-7368,24856,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,07/Dec/17 10:04 PM,21/Jul/18 3:47 AM,28/Oct/23 3:01 AM,13/Dec/17 8:12 PM,v1.0.5,v1.1.0,,,,,v1.1.0,,,fabric-tools,,,,0,Usability,,,,,,"Right now cryptogen tool can only be used to initialize the crypto artifacts, however we have some requirements for adding new peer/orderer/user/org. To support that, we add a extend command to generate new artifacts on existing crypto directory.",,baohua,grapebaba,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6078,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqb3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,baohua,grapebaba,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/17 12:21 AM;baohua;Maybe can add some option to enable using existing root cert/key file.

 ;;;","13/Dec/17 8:13 PM;mastersingh24;We'll just do this for v1.1 as we don't add new functionality to patch releases;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: Verify the channel mod policy (=admins) after enabling the capability on /Channel/Orderer after upgrading from 1.0.X to 1.1 on a newly created channel,FAB-7369,24857,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,2020Nishi,suryalnvs,suryalnvs,07/Dec/17 11:04 PM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,stale-item,,,,,{color:#000000}Verify the channel mod policy (=admins) after enabling the capability on /Channel/Orderer after upgrading from 1.0.X to 1.1 on a newly created channel{color},,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyqbb:",,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"27/Jan/18 5:16 AM;scottz;Refer to FAB-7929 for more information about the V1.1 capabilities - especially the /Channel/Application config update, after the upgrade, to allow creating new channels WITH the new capabilities;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: Verify the channel mod policy (=admins) after enabling the capability on /Channel/Orderer after upgrading from 1.0.X to 1.1 on the existing channels,FAB-7370,24858,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,07/Dec/17 11:06 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Jul/18 5:32 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,{color:#000000}Verify the channel mod policy (=admins) after enabling the capability on /Channel/Orderer after upgrading from 1.0.X to 1.1 on the existing channels{color},,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 2:29 AM;suryalnvs;config_block.json;https://jira.hyperledger.org/secure/attachment/13714/config_block.json","15/Dec/17 2:29 AM;suryalnvs;config_block1.json;https://jira.hyperledger.org/secure/attachment/13715/config_block1.json",,,,,,,,,,,,,,,,,,,,,"1|hzyqbj:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 2:31 AM;suryalnvs;Tested this scenario by upgrading the orderers and peers, manually fetched the config update blocks and converted to .json files using configtxlator tool and verified the mod policies

config_block1.json refers to block after anchor peer update and peers joining the channel.

config_block.json refers to block after enabling /Channel/Orderers capabilities 

and observed the changes in mod policies set to Admins in the latest config update after enabling /Channel/Orderers capabilities in the config_block.json;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: Enable /Channel/Orderer capabilities (set V1_1=true), including Resubmission, with traffic running, and verify no lost TX",FAB-7371,24859,21297,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,07/Dec/17 11:07 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Jul/18 5:54 AM,v1.1.0-alpha,,,,,,v1.1.0,,,fabric-quality,,,,0,Quality,SVT,SystemTestcase,,,,"{color:#000000}Enable /Channel/Orderer capabilities (set V1_1=true), including Resubmission, with traffic running, and verify no lost TX{color}",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqbr:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: Enable /Channel capabilities, including MSPVersion. To test, create policies (endorsement or otherwise) utilizing the new Node.OUs such as Org1.Peer, Org2.Client, Org3.Orderer, etc.",FAB-7372,24860,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,07/Dec/17 11:08 PM,01/Aug/19 11:14 AM,28/Oct/23 3:01 AM,01/Aug/19 11:14 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Enable /Channel capabilities, including MSPVersion. To test, create policies (endorsement or otherwise) utilizing the new Node.OUs such as Org1.Peer, Org2.Client, Org3.Orderer, etc.{color}

 

{color:#000000}This test is for FAB-5664, an EXPERIMENTAL feature, so we can defer this testing after v1.1 until the next release.{color}",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyqbz:",,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/19 11:14 AM;scottz;This was done in behave by latitia with other test tasks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: After enable MSPVersion capability, Additionally, test defining a network with identity mixer MSPs in the orderer consortium definition, then defining new channels. (per JYellick)",FAB-7373,24861,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,07/Dec/17 11:09 PM,01/Aug/19 11:15 AM,28/Oct/23 3:01 AM,01/Aug/19 11:15 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}After enable MSPVersion capability, Additionally, test defining a network with identity mixer MSPs in the orderer consortium definition, then defining new channels. (per JYellick){color}

{color:#000000}This test is for FAB-2005, an EXPERIMENTAL feature, so we can defer this testing after v1.1 until the next release.{color}",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyqc7:",,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/19 11:15 AM;scottz;Idemix basic tests were done later via other means.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: Enabling /Channel/Applivation capabilities to test transaction validation with same transaction ID,FAB-7374,24862,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,suryalnvs,suryalnvs,07/Dec/17 11:09 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Feb/18 2:43 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Enable /Channel/Application capabilities, including forbidDupliateTxIdInBLock. To test, set the batch count to be high for higher probability. Submit a tx with no readset (only write-set) and then without waiting, immediately resubmit it. You should see two txes in the block, the first marked valid and the second invalid. In v1.0, they would both be marked valid.{color}",,jyellick,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyqcf:",,,,,,,,,,,,,,,,,,,,,,jyellick,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 11:26 PM;scottz;Is this covered by UnitTest? If so, I would like to close this.;;;","09/Feb/18 2:42 AM;jyellick;Yes, this is covered by unit test.  I see limited value in it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Scenario: upgrade a chaincode version after fabric upgrade and enabling /Channel/Application cababilities,FAB-7375,24863,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,suryalnvs,suryalnvs,07/Dec/17 11:11 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,21/May/18 7:20 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}After enable /Channel/Application cababilities, including the new LifecycleCC approach: use chaincodes, upgrade a chaincode version in a channel (will it continue to work? impact other channels?){color}",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyqcn:",,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"01/Mar/18 10:57 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/17963/]

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test Scenario: Abort Upgrade at PONR: after upgrading all fabric components to v1.1, before any orderer channel reconfiguration (every step up to the point of no return), roll back to v1.0.x version again.",FAB-7376,24864,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,suryalnvs,suryalnvs,07/Dec/17 11:14 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,27/Jan/18 5:16 AM,v1.1.0-alpha,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"{color:#000000}Abort Upgrade prior to PONR: after upgrading orderer service and peers to v1.1, but before any orderer channel reconfiguration (everything up to the point of no return), roll back the peers and orderers/kafkas/zks to v1.0.x version again.{color}

{color:#000000}References:{color}

[https://docs.google.com/document/d/16ZogU_InYeLZZ8lTGNdBhd4Iosi7T4KP3ppFSEUcI30/edit?ts=5a285ab9#heading=h.gfha2pfdu0uz]

[https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature#L519|https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature]

{color:#444444}Point Of No Return should be at line 519 in the upgrades file, before the ordering system channel update.{color}

 ",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7915,,,,,,,,,,,,,,,,,,,,,FAB-6434,,,,,,,,,"1|hzyqcv:",,,,,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"27/Jan/18 5:15 AM;scottz;https://gerrit.hyperledger.org/r/#/c/17185/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer eventing services provide next an acknowledge on connections,FAB-7377,24865,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,rickr,rickr,08/Dec/17 12:23 AM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,,,,,,,,,,fabric-peer,,,,0,stale-item,,,,,,"This API should have been a replacement for the event hub service. It's lacking in at least two ways over this previous API. There is no means to know the services is ready and connected until it receives the first block. Current EH API first delivered as Status block with a success to make sure the connection is fully established and from the then on would start receiving blocks. This allowed SDK to easily make this synchronous.

Second this API does not offer an option to return the next block is sees added, but always returns the last block on the ledger regardless if that block may be a year old. This also has the consequences that if for example bad network connections result in reestablishment of the connection it will see that same block repeatedly if there were no new blocks added.

It was first suggested that to me that the SDKs should address these short comings. I don't think each SDKs should have to do this. I plan for the JSDK to expose it for what it is. Let applications deal with this behavior.

Given a chance to vote I'd go back to the old API as I think it was better suited for an eventing service. It only lacked one needed feature that would allow it to start receiving blocks from a specific block number.",,rickr,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqd3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,rickr,sykesm,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:20 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create graph package to compute subsets of principle endorsement policy,FAB-7378,24866,19464,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Dec/17 12:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,10/Apr/18 5:21 PM,,,,,,,v1.2.0,,,,,,,0,,,,,,,Given an endorsement policy we compute subsets of principles that each subset is enough for the endorsement policy to be fulfilled.,,eragnoli,vramaiitkgp,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqdb:",,,,,,May2018 - NextGen Endorsement,,,,,,,,,,,,,,,,eragnoli,vramaiitkgp,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Dec/17 10:30 AM;vramaiitkgp;Hi Yacov,

[~eragnoli] (Dublin Research Lab) and I (ICBI Singapore) are trying to understand and enhance the way endorsement policies are framed in Hyperledger Fabric, so this issue caught our eyes.

Can you elaborate on what precisely you mean by ""computing subsets of principles""? Maybe with an example?

Also, I guess you mean ""principal"", right?

Rama;;;","08/Dec/17 6:18 PM;yacovm;Yeah, I meant principals.

 

So as you know, an endorsement policy is a tree, with vertices of either NoutOf or principals.
This tree has sub-trees, that the leaf level is composed only of principals, and these principals - if collected signatures from peers that satisfy these principals, then the endorsement policy is fullfilled.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Delete fabric-daily-tests-x86_64 CI job,FAB-7380,24868,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,08/Dec/17 1:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,08/Dec/17 6:27 AM,,,,,,,,,,fabric-ci,,,,0,,,,,,,"Delete fabric-daily-tests-x86_64 CI job as we are executing the same in *""fabric-test-daily-x86_64""*",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqdr:",,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rework FileLedger interface and implementation to remove ReadyChan(),FAB-7382,24870,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,08/Dec/17 1:23 AM,16/Aug/18 8:45 AM,28/Oct/23 3:01 AM,16/Aug/18 8:45 AM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,hygiene,,,,,,"Now that the FileLedger's signaling logic no longer uses the ReadyChan() method and its underlying signal channel, the interface and implementations should be reworked to remove this function entirely. 

Comments from the CR (https://gerrit.hyperledger.org/r/c/16009/) that led to this item, which cover the goals of this task: 
1. Removes ReadyChan() from the blockledger/ledger.go interface -- it is not used anywhere anymore
2. Removes the implementation of ReadyChan() from the other ledger implementations, including the file ledger
3. Removes this fileLedger definition (https://gerrit.hyperledger.org/r/c/16009/3/core/peer/peer.go#66), and instead, simply creates a new FileLedger wrapper the ledger definition above anytime the Reader() call is invoked.
",,haibbo,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqe7:",,,,Unset,,,,,,,Unset,,,,,,,,,,,haibbo,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Aug/18 4:42 AM;wlahti;https://gerrit.hyperledger.org/r/c/25171/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify the merge jobs in fabric-ca to pull the latest committed changes.,FAB-7384,24872,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,08/Dec/17 1:35 AM,19/Mar/19 8:13 PM,28/Oct/23 3:01 AM,14/Dec/17 6:31 AM,,,,,,,,,,fabric-ci,,,,0,ci-failure,,,,,,"The merge jobs is fabric-ca are updated to the commit that the developer submits at that time and not the latest merged commit, in this case the fabric-ca repository. I have changed the merge jobs to skip the REFSPEC' parameter that would overwrite the developer's commit in the workspace over the latest commit merged.",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqen:",,,,,,,,,,,,,,,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Verify behavior of chaincodes post upgrade wrt images,FAB-7389,24879,20760,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,jeffgarratt,jeffgarratt,08/Dec/17 6:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Dec/17 2:34 AM,,,,,,,,,,,,,,0,,,,,,,,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqfr:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/17 2:34 AM;jeffgarratt;Updated behave tests to include a step to remove existing chaincode images which is currently required (else you will receive TLS cert failure in chaincode log).

 

See https://github.com/jeffgarratt/fabric-prototype/blob/master/features/upgrade.feature#L676-L693;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken Master,FAB-7390,24880,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,08/Dec/17 8:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,15/Dec/17 1:08 PM,,,,,,,,,,,,,,0,,,,,,,encoder.go references a symbol which doesn't exist.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqfz:",,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
resource based ACL using config resource bundle,FAB-7391,24882,16240,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,08/Dec/17 11:09 AM,30/Jul/19 10:53 AM,28/Oct/23 3:01 AM,30/Jul/19 10:53 AM,,,,,,,Future,,,fabric-peer,,,,0,,,,,,,"FAB-6227 processes resource changes and updates resource bundle atomically. In order to do this, it has to set the resource information in ledger state which is currently being done in RSCC.  This tasks removes the duplication in RSCC and changes RSCC to directly use the resource bundle.

The side-effect of FAB-6227 is to process updates as well at one stroke (this was a TODO in the FAB-3621 work)",,denyeart,JonathanLevi,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqgf:",,,,,,,,,,,,,,,,,,,,,,denyeart,JonathanLevi,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/17 4:29 AM;muralisr;It makes more sense to make this a subtask of FAB-3621. ;;;","22/Dec/17 4:39 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/16037/;;;","03/Jan/18 11:50 PM;JonathanLevi;I have updated the Fix Version to be ""v1.1"" tentatively so that we don't miss this from the stats - as per the scrum chat today.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong log information in fabric/gossip/gossip/channel/channel.go line 375,FAB-7393,24884,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,meinvzou,meinvzou,meinvzou,08/Dec/17 1:16 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,19/Dec/17 5:50 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,,"the code in  fabric/gossip/gossip/channel/channel.go line 375

line374 if gc.joinMsg.SequenceNumber() > (joinMsg.SequenceNumber()) \{
line375 gc.logger.Warning(""Already have a more updated JoinChannel message("", gc.joinMsg.SequenceNumber(), "") than"", gc.joinMsg.SequenceNumber())
line376 return
 }

line 375 should changed to :

gc.logger.Warning(""Already have a more updated JoinChannel message("", gc.joinMsg.SequenceNumber(), "") than"", joinMsg.SequenceNumber())",,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqgv:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/17 6:56 PM;mastersingh24;[~meinvzou] - Do you want to try to fix this?;;;","12/Dec/17 3:16 PM;meinvzou;gerrit committed :

https://gerrit.hyperledger.org/r/#/c/16141/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
reinitialization of setupAdmins in fabric/msp/mspimpl.go Setup() function,FAB-7394,24885,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,mastersingh24,meinvzou,meinvzou,08/Dec/17 1:26 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Dec/17 6:55 AM,,,,,,,v1.1.0,,,,,,,0,,,,,,," in fabric/msp/mspimpl.go Setup() function, from line code 289~306, with sequence call of setupCAs and setupAdmins function. 

The setupCAs function's following codes are the same in setupAdmins function. I suppose that there're unnecessary duplicated codes?

// make and fill the set of admin certs (if present)
 msp.admins = make([]Identity, len(conf.Admins))
 for i, admCert := range conf.Admins \{
 id, _, err := msp.getIdentityFromConf(admCert)
 if err != nil \{
 return err
 }

msp.admins[i] = id
 }

 ",,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqh3:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/17 10:23 PM;mastersingh24;I'll fix this in master.  Not sure it's worth a backport to the release branch;;;","16/Dec/17 10:28 PM;mastersingh24;https://gerrit.hyperledger.org/r/16247;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Makefile: Redundant Dependencies,FAB-7395,24886,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,ynamiki,ynamiki,ynamiki,08/Dec/17 4:31 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,11/Dec/17 10:37 AM,v1.1.0-preview,,,,,,v1.1.0,,,fabric-build,,,,0,,,,,,,"In Makefile as of current master branch (c44491a74ad1dd751497c211a446189ec20cb8e3, 2017-12-08), `clean-all` target has redundant dependencies: `release-clean` and `unit-test-clean`. The first dependency, `clean` depends on these targets.

`Makefile` 
{code}
.PHONY: clean
clean: docker-clean unit-test-clean release-clean
	-@rm -rf build ||:

.PHONY: clean-all
clean-all: clean gotools-clean dist-clean release-clean unit-test-clean
	-@rm -rf /var/hyperledger/* ||:
{code}
",,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqhb:",,,,Unset,,,,,,,Unset,,,,,,,,,,,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/17 1:38 PM;ynamiki;https://gerrit.hyperledger.org/r/16041;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use most recent version of milagro-crypto library,FAB-7396,24889,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,mdr,mdr,08/Dec/17 8:02 PM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,04/Jan/18 11:04 PM,,,,,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,,"The apache milagro crypto library (amcl) is a library currently used to implement identity mixer. Currently there is a fork vendored (namely [https://github.com/manudrijvers/amcl/)|https://github.com/manudrijvers/amcl/).], as at the time the original amcl was in package main and the authors were not willing to change that. Now amcl has been updated and no longer uses package main, so we should vendor the most recent original version of amcl. ",,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2005,,,,,,,,,"1|hzyqhj:",,,,,,,,,,,,,,,,,,,,,,mdr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Dec/17 9:35 PM;mdr;https://gerrit.hyperledger.org/r/#/c/16045/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer deliver panics when channel does not exist,FAB-7397,24895,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,09/Dec/17 4:52 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Dec/17 7:19 AM,,,,,,,,,,fabric-peer,,,,0,,,,,,,Peer deliver panics when it receives a seek info request for a channel that does not exist. ,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqif:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/17 4:59 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16051/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validate incoming deliver envelopes,FAB-7398,24896,24640,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,09/Dec/17 5:01 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,16/Dec/17 9:19 PM,,,,,,,,,,fabric-orderer,fabric-peer,,,0,,,,,,,This item will be used to ensure the server validates the timestamp and TLSCertHash in the channel header of envelopes sent by clients as they perform SeekInfo requests. ,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqin:",,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/17 2:01 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16159/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update to Fabric 1.1 from Fabric 1.0.3 Fails When Enabling Fabric 1.1 Capabilities on the Channel,FAB-7399,24898,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jeffgarratt,jeffgarratt,09/Dec/17 6:59 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,19/Jan/18 11:24 PM,v1.1.0,,,,,,v1.1.0,v1.1.0-alpha,,fabric-peer,,,,0,Upgrade,,,,,,"The log contains:

 

2017-12-08 21:50:18.281 UTC [peer] Initialize -> WARN 1f0 Failed to load chain com.acme.blockchain.jdoe.channel1(config cannot be nil)",,jeffgarratt,jyellick,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6123,,,,,,,,,,,,,,,,,,,,"19/Jan/18 6:50 AM;suryalnvs;orderer.log;https://jira.hyperledger.org/secure/attachment/14330/orderer.log","19/Jan/18 6:50 AM;suryalnvs;peer2new.log;https://jira.hyperledger.org/secure/attachment/14331/peer2new.log",,,,,,,,,,,,,,,,,,,,,"1|hzyqiv:",,,,,,,,,,,,,,,,,,,,,,jeffgarratt,jyellick,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/17 7:00 AM;jeffgarratt;[~wlahti] [~scottz] got this error when trying to upgrade to latest master branch.

 

The latest commit that actually passed had a docker label of x86_64-1.1.0-alpha-snapshot-8becdf0;;;","12/Dec/17 12:01 AM;suryalnvs;Reproduced the same on latest commit 446bf75d20a4df0a89b5c31f804e1f63ae56749c, Date:   Mon Dec 11 12:13:05 2017 +0000;;;","06/Jan/18 12:31 AM;jyellick;Fix in review via: https://gerrit.hyperledger.org/r/c/16599/;;;","13/Jan/18 6:52 AM;suryalnvs;[~jyellick] I am still be able to reproduce the above qscc check failure on commit level 60fc1e99f863bb5c47c1dde78e5e32acf9e7e203;;;","15/Jan/18 2:40 AM;jyellick;[~suryalnvs] can you please include the logs/panic for what you reproduced with 60fc1e99f863bb5c47c1dde78e5e32acf9e7e203 ?  Perhaps there is some other failure occuring, looking at the code the particular panic reported earlier should no longer be possible.;;;","16/Jan/18 1:00 AM;suryalnvs;[~jyellick] When I am running the upgrade feature, I see the following errors
{code:java}
And user ""dev0Org0"" using cert alias ""consortium1-cert"" sends proposal ""queryGetChainInfoProposal1"" to endorsers with timeout of ""60"" seconds with proposal responses ""queryGetChainInfoProposal1Responses"" # steps/endorser_impl.py:140 0.015s
| Endorser |
| peer0 |
| peer1 |
| peer2 |
| peer3 |
Traceback (most recent call last):
File ""/home/surya/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1456, in run
match.run(runner.context)
File ""/home/surya/Envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1903, in run
self.func(context, *args, **kwargs)
File ""steps/endorser_impl.py"", line 155, in step_impl
resultsDict = dict(zip(endorsers, [respFuture.result() for respFuture in proposalResponseFutures]))
File ""/home/surya/Envs/behave_venv/local/lib/python2.7/site-packages/grpc/_channel.py"", line 279, in result
raise self
_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, Failed to deserialize creator identity, err MSP peerOrg0 is unknown)>

Captured stdout:
Will copy gensisiBlock over at this point
configAdminOrdererOrg0 received reply: status: SUCCESS
, counter = 1
Done
dev0Org0 received reply: status: SUCCESS
, counter = 1
Done
Start and end = 0/0

ProposalResponse:
response {
status: 200
}



ProposalResponse:
response {
status: 200
}



configAdminPeerOrg0 received reply: status: SUCCESS
, counter = 1
Done
Start and end = 1/1

ProposalResponse:
response {
status: 200
}



ProposalResponse:
response {
status: 200
}



ccSpec = type: GOLANG
chaincode_id {
path: ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02""
name: ""example02""
version: ""1.0""
}
input {
args: ""init""
args: ""a""
args: ""100""
args: ""b""
args: ""200""
}

Endorsers = [u'peer0'], rsults keys = [u'peer0']
Endorsers = [u'peer2'], rsults keys = [u'peer2']
Endorsers = [u'peer0', u'peer2'], rsults keys = [u'peer0', u'peer2']
configAdminPeerOrg0 received reply: status: SUCCESS
, counter = 1
Done
Start and end = 2/2

Endorsers = [u'peer0', u'peer2'], rsults keys = [u'peer0', u'peer2']
Endorsers = [u'peer0', u'peer2'], rsults keys = [u'peer0', u'peer2']
dev0Org0 received reply: status: SUCCESS
, counter = 1
Done
Start and end = 3/3

Endorsers = [u'peer0', u'peer2'], rsults keys = [u'peer0', u'peer2']
dev0Org0 received reply: status: SUCCESS
, counter = 1
Done
Start and end = 4/4

configAdminOrdererOrg0 received reply: status: SUCCESS
, counter = 1
Done
configAdminOrdererOrg0 received reply: status: BAD_REQUEST
, counter = 1
Done
configAdminOrdererOrg0 received reply: status: SUCCESS
, counter = 1
Done
ccSpec = type: GOLANG
chaincode_id {
path: ""/""
name: ""qscc""
version: ""1.0""
}
input {
args: ""GetChainInfo""
args: ""com.acme.blockchain.jdoe.channel1""
}

{code}
and strangely only orderer1 (out of three orderers) is showing the following logs with identity mismatch like
{code:java}
the identity is a member of a different MSP (expected ordererOrg0, got peerOrg1)
the identity is a member of a different MSP (expected ordererOrg0, got peerOrg0)
the identity is a member of a different MSP (expected peerOrg0, got peerOrg1){code}
and part of orderer1 logs are
{code:java}
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7d5 == Evaluating *cauthdsl.policy Policy /Channel/Orderer/ordererOrg0/Readers ==
2018-01-15 15:38:48.332 UTC [msp] DeserializeIdentity -> INFO 7d6 Obtaining identity
2018-01-15 15:38:48.332 UTC [cauthdsl] func1 -> DEBU 7d7 0xc42000e108 gate 1516030728332289159 evaluation starts
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7d8 0xc42000e108 signed by 0 principal evaluation starts (used [false])
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7d9 0xc42000e108 processing identity 0 with bytes of 0a08706565724f72673012d3052d2d2d2d2d424547494e202d2d2d2d2d0a4d4949422b444343415a2b674177494241774943412b6777436759494b6f5a497a6a304541774977565445524d41384741315545417777496347566c636b39790a5a7a4178437a414a42674e5642415954416c56544d517777436759445651514844414e53564641784444414b42674e5642416f4d41306c43545445584d4255470a413155454341774f546d3979644767675132467962327870626d45774868634e4d5467774d5445314d54557a4e444d795768634e4d546b774d5445314d54557a0a4e444d79576a42534d5134774441594456515144444156775a5756794d44454c4d416b474131554542684d4356564d784444414b42674e564241634d41314a550a5544454d4d416f47413155454367774453554a4e4d52637746515944565151494441354f62334a306143424459584a7662476c755954425a4d424d47427971470a534d34394167454743437147534d343941774548413049414247724f7a584f3948372f3038776d3956576736526a75336f4977447a485a6d4c7174566e4773660a4c4b613232694f484e5762736f73734c5a764b643570786566567a6352703563513259592f7245714758695a4e61476a596a42674d41774741315564457745420a2f7751434d414177485159445652304f424259454642772f454650705357573533466f64776e5a7659305058636b6a504d42384741315564497751594d4261410a464850382b7030632f4554706f672b4d534d4e334b544d4a774370334d424147413155644551514a4d4165434258426c5a5849774d416f4743437147534d34390a42414d43413063414d45514349476d4d556e6f31706d547a306d332f516861576d53495054576b343846556c6a6e2f4a624d5a3641556e3841694251346366520a587362586677673856477135777667577164737573434162556e4b6d647668386d3255454a673d3d0a2d2d2d2d2d454e44202d2d2d2d2d0a
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7da 0xc42000e108 identity 0 does not satisfy principal: the identity is a member of a different MSP (expected ordererOrg0, got peerOrg0)
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7db 0xc42000e108 principal evaluation fails
2018-01-15 15:38:48.332 UTC [cauthdsl] func1 -> DEBU 7dc 0xc42000e108 gate 1516030728332289159 evaluation fails
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7dd Signature set did not satisfy policy /Channel/Orderer/ordererOrg0/Readers
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7de == Done Evaluating *cauthdsl.policy Policy /Channel/Orderer/ordererOrg0/Readers
2018-01-15 15:38:48.332 UTC [policies] func1 -> DEBU 7df Evaluation Failed: Only 0 policies were satisfied, but needed 1 of [ ordererOrg0.Readers ]
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7e0 Signature set did not satisfy policy /Channel/Orderer/Readers
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7e1 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Orderer/Readers
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7e2 == Evaluating *policies.implicitMetaPolicy Policy /Channel/Application/Readers ==
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7e3 This is an implicit meta policy, it will trigger other policy evaluations, whose failures may be benign
2018-01-15 15:38:48.332 UTC [policies] Evaluate -> DEBU 7e4 == Evaluating *cauthdsl.policy Policy /Channel/Application/peerOrg0/Readers ==
2018-01-15 15:38:48.332 UTC [cauthdsl] func1 -> DEBU 7e5 0xc42000e118 gate 1516030728332526720 evaluation starts
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7e6 0xc42000e118 signed by 0 principal evaluation starts (used [false])
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7e7 0xc42000e118 processing identity 0 with bytes of 0a08706565724f72673012d3052d2d2d2d2d424547494e202d2d2d2d2d0a4d4949422b444343415a2b674177494241774943412b6777436759494b6f5a497a6a304541774977565445524d41384741315545417777496347566c636b39790a5a7a4178437a414a42674e5642415954416c56544d517777436759445651514844414e53564641784444414b42674e5642416f4d41306c43545445584d4255470a413155454341774f546d3979644767675132467962327870626d45774868634e4d5467774d5445314d54557a4e444d795768634e4d546b774d5445314d54557a0a4e444d79576a42534d5134774441594456515144444156775a5756794d44454c4d416b474131554542684d4356564d784444414b42674e564241634d41314a550a5544454d4d416f47413155454367774453554a4e4d52637746515944565151494441354f62334a306143424459584a7662476c755954425a4d424d47427971470a534d34394167454743437147534d343941774548413049414247724f7a584f3948372f3038776d3956576736526a75336f4977447a485a6d4c7174566e4773660a4c4b613232694f484e5762736f73734c5a764b643570786566567a6352703563513259592f7245714758695a4e61476a596a42674d41774741315564457745420a2f7751434d414177485159445652304f424259454642772f454650705357573533466f64776e5a7659305058636b6a504d42384741315564497751594d4261410a464850382b7030632f4554706f672b4d534d4e334b544d4a774370334d424147413155644551514a4d4165434258426c5a5849774d416f4743437147534d34390a42414d43413063414d45514349476d4d556e6f31706d547a306d332f516861576d53495054576b343846556c6a6e2f4a624d5a3641556e3841694251346366520a587362586677673856477135777667577164737573434162556e4b6d647668386d3255454a673d3d0a2d2d2d2d2d454e44202d2d2d2d2d0a
2018-01-15 15:38:48.332 UTC [msp] SatisfiesPrincipal -> DEBU 7e8 Checking if identity satisfies MEMBER role for peerOrg0
2018-01-15 15:38:48.332 UTC [msp] Validate -> DEBU 7e9 MSP peerOrg0 validating identity
2018-01-15 15:38:48.332 UTC [msp/identity] newIdentity -> DEBU 7ea Creating identity instance for cert -----BEGIN CERTIFICATE-----
MIIB+DCCAZ+gAwIBAwICA+gwCgYIKoZIzj0EAwIwVTERMA8GA1UEAwwIcGVlck9y
ZzExCzAJBgNVBAYTAlVTMQwwCgYDVQQHDANSVFAxDDAKBgNVBAoMA0lCTTEXMBUG
A1UECAwOTm9ydGggQ2Fyb2xpbmEwHhcNMTgwMTE1MTUzNDMyWhcNMTkwMTE1MTUz
NDMyWjBSMQ4wDAYDVQQDDAVwZWVyMjELMAkGA1UEBhMCVVMxDDAKBgNVBAcMA1JU
UDEMMAoGA1UECgwDSUJNMRcwFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTBZMBMGByqG
SM49AgEGCCqGSM49AwEHA0IABCsFJZcMI4lgRiG14qWnPVs1aByLJ+O3hxq8+6qr
7OW7teBMxnc/Z/FcEiXx7dD5o7pYL9W7Y0HsOBBPusP8EEmjYjBgMAwGA1UdEwEB
/wQCMAAwHQYDVR0OBBYEFDEgIFwddEYr/C1MqmSAEsWjvWpBMB8GA1UdIwQYMBaA
FFKan01RzrtqyloL314YOF6JSw/yMBAGA1UdEQQJMAeCBXBlZXIyMAoGCCqGSM49
BAMCA0cAMEQCIHFxHtjmNmdbL9tjqyyOU9OJNT9qzYX1PdNo5Dpq+2BzAiBXQwtb
Bn7RoZmfgdbiDLxHOI0CsQFytmvjkD7duSwPZA==
-----END CERTIFICATE-----
2018-01-15 15:38:48.332 UTC [cauthdsl] func1 -> DEBU 7ec 0xc4201361d8 gate 1516030728332921027 evaluation starts
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7ed 0xc4201361d8 signed by 0 principal evaluation starts (used [false])
2018-01-15 15:38:48.332 UTC [cauthdsl] func2 -> DEBU 7ee 0xc4201361d8 processing identity 0 with bytes of 0a08706565724f72673112d3052d2d2d2d2d424547494e202d2d2d2d2d0a4d4949422b444343415a2b674177494241774943412b6777436759494b6f5a497a6a304541774977565445524d41384741315545417777496347566c636b39790a5a7a4578437a414a42674e5642415954416c56544d517777436759445651514844414e53564641784444414b42674e5642416f4d41306c43545445584d4255470a413155454341774f546d3979644767675132467962327870626d45774868634e4d5467774d5445314d54557a4e444d795768634e4d546b774d5445314d54557a0a4e444d79576a42534d5134774441594456515144444156775a5756794d6a454c4d416b474131554542684d4356564d784444414b42674e564241634d41314a550a5544454d4d416f47413155454367774453554a4e4d52637746515944565151494441354f62334a306143424459584a7662476c755954425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424373464a5a634d49346c67526947313471576e505673316142794c4a2b4f33687871382b3671720a374f57377465424d786e632f5a2f466345695878376444356f3770594c395737593048734f4242507573503845456d6a596a42674d41774741315564457745420a2f7751434d414177485159445652304f424259454644456749467764644559722f43314d716d53414573576a765770424d42384741315564497751594d4261410a46464b616e3031527a727471796c6f4c333134594f46364a53772f794d424147413155644551514a4d4165434258426c5a5849794d416f4743437147534d34390a42414d43413063414d4551434948467848746a6d4e6d64624c39746a7179794f55394f4a4e5439717a59583150644e6f354470712b32427a41694258517774620a426e37526f5a6d6667646269444c78484f49304373514679746d766a6b443764755377505a413d3d0a2d2d2d2d2d454e44202d2d2d2d2d0a
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 7ef 0xc4201361d8 identity 0 does not satisfy principal: the identity is a member of a different MSP (expected ordererOrg0, got peerOrg1)
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 7f0 0xc4201361d8 principal evaluation fails
2018-01-15 15:38:48.333 UTC [cauthdsl] func1 -> DEBU 7f1 0xc4201361d8 gate 1516030728332921027 evaluation fails
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f2 Signature set did not satisfy policy /Channel/Orderer/ordererOrg0/Readers
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f3 == Done Evaluating *cauthdsl.policy Policy /Channel/Orderer/ordererOrg0/Readers
2018-01-15 15:38:48.333 UTC [policies] func1 -> DEBU 7f4 Evaluation Failed: Only 0 policies were satisfied, but needed 1 of [ ordererOrg0.Readers ]
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f5 Signature set did not satisfy policy /Channel/Orderer/Readers
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f6 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Orderer/Readers
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f7 == Evaluating *policies.implicitMetaPolicy Policy /Channel/Application/Readers ==
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f8 This is an implicit meta policy, it will trigger other policy evaluations, whose failures may be benign
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 7f9 == Evaluating *cauthdsl.policy Policy /Channel/Application/peerOrg0/Readers ==
2018-01-15 15:38:48.333 UTC [cauthdsl] func1 -> DEBU 7fa 0xc420136378 gate 1516030728333330015 evaluation starts
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 7fb 0xc420136378 signed by 0 principal evaluation starts (used [false])
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 7fc 0xc420136378 processing identity 0 with bytes of 0a08706565724f72673112d3052d2d2d2d2d424547494e202d2d2d2d2d0a4d4949422b444343415a2b674177494241774943412b6777436759494b6f5a497a6a304541774977565445524d41384741315545417777496347566c636b39790a5a7a4578437a414a42674e5642415954416c56544d517777436759445651514844414e53564641784444414b42674e5642416f4d41306c43545445584d4255470a413155454341774f546d3979644767675132467962327870626d45774868634e4d5467774d5445314d54557a4e444d795768634e4d546b774d5445314d54557a0a4e444d79576a42534d5134774441594456515144444156775a5756794d6a454c4d416b474131554542684d4356564d784444414b42674e564241634d41314a550a5544454d4d416f47413155454367774453554a4e4d52637746515944565151494441354f62334a306143424459584a7662476c755954425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424373464a5a634d49346c67526947313471576e505673316142794c4a2b4f33687871382b3671720a374f57377465424d786e632f5a2f466345695878376444356f3770594c395737593048734f4242507573503845456d6a596a42674d41774741315564457745420a2f7751434d414177485159445652304f424259454644456749467764644559722f43314d716d53414573576a765770424d42384741315564497751594d4261410a46464b616e3031527a727471796c6f4c333134594f46364a53772f794d424147413155644551514a4d4165434258426c5a5849794d416f4743437147534d34390a42414d43413063414d4551434948467848746a6d4e6d64624c39746a7179794f55394f4a4e5439717a59583150644e6f354470712b32427a41694258517774620a426e37526f5a6d6667646269444c78484f49304373514679746d766a6b443764755377505a413d3d0a2d2d2d2d2d454e44202d2d2d2d2d0a
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 7fd 0xc420136378 identity 0 does not satisfy principal: the identity is a member of a different MSP (expected peerOrg0, got peerOrg1)
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 7fe 0xc420136378 principal evaluation fails
2018-01-15 15:38:48.333 UTC [cauthdsl] func1 -> DEBU 7ff 0xc420136378 gate 1516030728333330015 evaluation fails
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 800 Signature set did not satisfy policy /Channel/Application/peerOrg0/Readers
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 801 == Done Evaluating *cauthdsl.policy Policy /Channel/Application/peerOrg0/Readers
2018-01-15 15:38:48.333 UTC [policies] Evaluate -> DEBU 802 == Evaluating *cauthdsl.policy Policy /Channel/Application/peerOrg1/Readers ==
2018-01-15 15:38:48.333 UTC [cauthdsl] func1 -> DEBU 803 0xc420136380 gate 1516030728333603127 evaluation starts
2018-01-15 15:38:48.333 UTC [cauthdsl] func2 -> DEBU 804 0xc420136380 signed by 0 principal evaluation starts (used [false])

{code};;;","19/Jan/18 1:24 AM;jyellick;The errors reported from the ordering log are not errors at all.  They are simple debugging statements for the policy evaluation.  Effectively, the policy asks ""Did a member of ordererOrg, or peerOrg0, or peerOrg1 sign? Necessarily, a member is only from one of those orgs, so there will be log messages indicating the failure for the member to part of the other orgs.

It sounds to me like a user with authority from peerOrg0 is attempting to make a call to peers from peerOrg1 which it is not authorized to do.  Are you certain this step passes _before_ upgrade?;;;","19/Jan/18 6:52 AM;suryalnvs;Able to pass the above step 1) before upgrading 2) after upgrading and before enabling capabilities. But failing after enabling capabilities. Attached the peer2 logs and orderer logs.

 ;;;","19/Jan/18 7:48 AM;jyellick;Believe I have found the underlying problem.  Fix submitted for review here: https://gerrit.hyperledger.org/r/c/16969/;;;","19/Jan/18 8:18 AM;suryalnvs;[~jyellick] I ran the tests with the [https://gerrit.hyperledger.org/r/c/16969/] and passed. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement BlockDecoder for Config Blocks,FAB-7403,24906,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,david_dornseifer,david_dornseifer,11/Dec/17 11:40 AM,20/Jun/19 6:17 PM,28/Oct/23 3:01 AM,20/Jun/19 6:17 PM,,,,,,,,,,,,,,0,,,,,,,,,apurvmehra,david_dornseifer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABP-152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqk7:",,,,,,,,,,,,,,,,,,,,,,apurvmehra,david_dornseifer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix misleading in Comments,FAB-7405,24908,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Jing.Cao,Jing.Cao,Jing.Cao,11/Dec/17 4:39 PM,21/Jul/18 3:48 AM,28/Oct/23 3:01 AM,11/Dec/17 7:24 PM,,,,,,,,,,,,,,0,,,,,,,"Comment in fabric/gossip/state/state.go Line:706, should be ""Select peer to ask for blocks"" rather than ""Select peers to ask for blocks"", since it just selects one peer, so ""peers"" in this comment will be misleading. ",,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqkn:",,,,Unset,,,,,,,Unset,,,,,,,,,,,Jing.Cao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Control over chaincode container Creation,FAB-7406,25000,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,amandahla,chawlanikhil24,chawlanikhil24,11/Dec/17 10:27 PM,07/Aug/19 1:43 AM,28/Oct/23 3:01 AM,07/Aug/19 1:42 AM,v1.0.0,v1.1.0,,,,,Future,,,fabric-peer,,,,11,,,,,,,"When I deployed Fabric Blockchains over Kubernetes, there was  problem which continuously persisted that, after the peers has joined the channel on Kubernetes, the next was to create a chaincode container which will carry out the transactions. Now, we can't control this chaincode container creation, and it will be created over docker itself. 

So, what I want to suggest is, whatif we could control this part of Blockchain deployment, and provide a choice to deploy a chaincode POD in Kubernetes other than chaincode container in Docker. With this feature, the dependency to share docker endpoints with Kubernetes Peer Pods will be diminished. ",,alexcrownus,amandahla,bur,cagdast,chawlanikhil24,ChristopherFerris,denyeart,fberzolla-ibm,greg.haskins,huxd,jgdomine,john.d.sheehan,mffrench,msteiner,mtessler,nagap,nyet,paranjan,raft 3,SebCasanova,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13582,,,FAB-3339,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqkv:",,,,Unset,,,,,,,Unset,,,,,,,,,,,alexcrownus,amandahla,bur,cagdast,chawlanikhil24,ChristopherFerris,denyeart,fberzolla-ibm,greg.haskins,huxd,jgdomine,john.d.sheehan,mffrench,msteiner,mtessler,nagap,nyet,paranjan,raft 3,SebCasanova,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Dec/17 2:55 AM;amandahla;What would be better here? A parameter in ""peer chain package"" so we can set this on the CDS? Or ""peer chain instantiate"" passing a parameter to indicate Kubernets usage?;;;","31/Dec/17 4:55 PM;chawlanikhil24;I would suggest a parameter in ""peer chaincode instantiate"" , and if the parameter is not passed then by default the chaincode instantiation execute in Docker. ;;;","02/Jan/18 8:24 PM;amandahla;Great.

I started some work here:

[https://github.com/hyperledger/fabric/pull/92]

I don't know why didn't appear here at Jira.;;;","02/Jan/18 8:48 PM;yacovm;Hey [~amandahla] 
Pull requests are being done via gerrit, not github. The github is used only for mirroring gerrit.
Just in case it is useful for anyone I will link here a [tutorial|https://hyperledger-fabric.readthedocs.io/en/latest/submit_cr.html].

[~chawlanikhil24] , [~amandahla] - I personally think that adding a new field to the chaincode package isn't the right way to go, and instead it should be defined via local configuration (core.yaml, or the environment variable equivalent config).

Let me elaborate: 
# If you extend the chaincode package to support k8s , since most likely the peer would need credentials to connect to k8s , that would mean the credentials would be stored in the chaincode package. IMO credentials should be avoided to be passed over the network as much as possible.
# Another reason for not doing it, is that we store the hash of the chaincode package inside the ledger, and this is public knowledge to anyone in the channel - meaning that if you put credentials inside the chaincode package then you incentivize channel members to try and guess the credentials, since they know the input to the hash except from the credentials.
# This leads to another problem - the peer ensures the hash of the chaincode package in the ledger is equal to the hash of the chaincode package in its file system.
If you have 2 organizations that use 2 different deployments of Kubernetes that means that they can never do that, since only 1 definition in the ledger is possible, however you have 2 inputs (different credentials per k8s deployment), and as we know - a hash function should be collision resistant...
# The chaincode, is in a way - an extension of the peer. The peer controls the chaincode lifecycle, and not the administrator.

Therefore I suggest it should be configured locally in the peer's core.yaml config.

Others might also want to chime in:  [~C0rWin] [~mastersingh24] , [~greg.haskins] , [~muralisr] ,
;;;","02/Jan/18 9:24 PM;amandahla;Thanks [~yacovm] !

Sorry, I'll try to remove the PR.

I agree with your suggestion. What do you think about using inClusterConfig system, by default, to connect to kubernetes API?

Like Ingress-nginx does:

https://github.com/kubernetes/ingress-nginx/blob/dcf4a4595eb558d9b8ed3eb48db08ad5c9d82a34/cmd/nginx/main.go#L211;;;","02/Jan/18 9:34 PM;ChristopherFerris;I like the direction this is headed. Agree with [~yacovm] that it should be part of the core.yaml config. I suspect that there may be use cases where there may be multiple chaincode deployment options in play in a network that leverages different platform for deployment of the peer nodes (e.g. some may choose k8s and others docker swarm or something else).;;;","02/Jan/18 9:37 PM;ChristopherFerris;Note that I think this should be a post 1.1 feature, and adapted the affectsVersion and fixVersion accordingly. We really need to lock down 1.1 function for now.;;;","02/Jan/18 9:44 PM;yacovm;Obviously it would be a post v1.1 feature :) 

[~amandahla] I don't know much about kubernetes but I'd guess that having core.yaml just point to the kubeConfig path would make sense... 
We don't want to have core.yaml baloon to an even more bigger size ;) ;;;","02/Jan/18 9:51 PM;amandahla;[~yacovm] my team just notice another thing here... Kubernetes needs the image available in a Docker hub. So...if we want to use Kubernetes, we need the Docker hub configuration also (url and certificate path). Can we put this on core.yaml? (sorry, bigger and bigger ;) );;;","02/Jan/18 10:03 PM;yacovm;My  guess would be that docker hub exposes some API for docker and Kubernetes calls this too, and if you want to host a private instance of docker hub you can still do that

{quote} 
Can we put this on core.yaml?
{quote}

Can't this be part of the same k8s-only config file?;;;","02/Jan/18 10:40 PM;amandahla;I'm not sure.

The workflow would be something like this:

1) peer chaincode install -> create the image in the docker registry

2) peer chaincode instantiate -> create the pod at kubernetes instead of container at docker

 ;;;","02/Jan/18 11:01 PM;yacovm;So assuming the upload process doesn't need to store any unique identifier returned from the API call, 
I think that install should:
# Place the chaincode inside the peer's file system
# Upload it to docker-hub (or the equivalent in the organization) 

Therefore it would make sense to store both the dockerhub credentials and the k8s credentials inside the peer's configuration, be it in the same file, or separate file... I guess we can have 2 lines in the core.yaml - 1 to point to the k8s file and the other to docker hub file

Now, the instantiate actually has nothing to do with whether the chaincode is launched or not.
In fabric, chaincodes are launched by demand and the launch is orthogonal to the channel.
For example- if you have a chaincode that is instantiated in 2 different channels and the peer joined both of these channels, then it would only launch once, not twice, though it has been instantiated twice. 

Also, chaincode is also launched at invoke (since it's by demand).
The instantiate process is actually 2 different things which are entangled into 1:
# Create an association between the chaincode package to the channel (hash, version, VSCC, ESCC, etc.)
# Invoke the Init() method of the chaincode 

The chaincode is launched in instantiate because of the 2nd reason but it may also not launch if it's already running because a previous instantiate/invoke in a context of a different channel. 
;;;","03/Jan/18 2:20 AM;amandahla;If I get it right, we need:
 * check if user selected kubernetes instead of docker
 * if positive, the chaincode install process will publish the image using the repository (docker hub for example) configuration at core.yaml
 * add a kubernetes controller as exists for docker (fabric/core/container/)

If this controller works fine, the chaincode instantiate and/or launch process doesn't need any changes.;;;","03/Jan/18 2:45 AM;amandahla;It might be a little off topic but...Do you think that using [Cello|https://github.com/hyperledger/cello] would be a faster solution for that?;;;","03/Jan/18 2:56 AM;yacovm;We need to check if the peer has been configured to use K8s instead of docker.
correct about the 2nd and 3rd bullets.

{quote}If this controller works fine, the chaincode instantiate and/or launch process doesn't need any changes.{quote}
Right, that would be my assumption.;;;","03/Jan/18 2:57 AM;yacovm;{quote}It might be a little off topic but...Do you think that using Cello would be a faster solution for that?{quote}


Cello is a project for deploying fabric, it has nothing to do with the fabric core.;;;","04/Jan/18 1:47 AM;amandahla;We noticed something...If we create the container at the chaincode install, we would be stilll using the /var/run/docker.sock. The security problem persists.

We need a way to not use this and use only kubernetes.

Has this been discussed before?

References:

[https://raesene.github.io/blog/2016/03/06/The-Dangers-Of-Docker.sock/]

https://www.lvh.io/posts/dont-expose-the-docker-socket-not-even-to-a-container.html;;;","04/Jan/18 1:51 AM;yacovm;I think you can configure the peer to use an HTTP(S) endpoint...  https://github.com/hyperledger/fabric/blob/release/sampleconfig/core.yaml#L269-L271;;;","04/Jan/18 3:25 AM;ChristopherFerris;[~yacovm], I'm unclear on why we need the peer to build the image. I was thinking that could be independent and that we would have a local [DTR|https://docs.docker.com/datacenter/dtr/2.4/guides/] for the network to which network participants would upload images. The peer would then simply ask Docker (or K8s) to spin up the image. Installing chaincode would just be a ledger transaction then (the reference to the chaincode image would be stored in the blockchain).;;;","04/Jan/18 3:30 AM;amandahla;According to our security team, using HTTPS is even worse... :(

So, another idea:
 1) check if user selected kubernetes instead of docker
 2) if positive, the chaincode install process will create a pod using the already published image at chaincode.builder and chaincode.golang.runtime using the repository (docker hub for example) configuration at core.yaml
 2.1) we made the customizations via Kubernetes API
 2.2) This pod will have two containers: builder and runtime. Both access the same volume. If build is ok, the executable will be available for the runtime container. The builder will be a init container.

Reference: [https://kubernetes.io/docs/concepts/workloads/pods/init-containers/];;;","04/Jan/18 3:43 AM;yacovm;[~ChristopherFerris] , I'm not against the peer not building the image and just having a reference to where its hosted. Though I think we should not require users to install another dependency (DTR) if they want to just run fabric on ""easy mode"".

{quote}Installing chaincode would just be a ledger transaction then (the reference to the chaincode image would be stored in the blockchain).{quote}
The current lifecycle is that the you put data in the ledger at instantiate, not installation. 
I'm also not sure why we would want to store a reference for the chaincode image on the blockchain. What if multiple orgs use different DTRs? You can only store a single reference, which one do you pick?


[~amandahla] :
{quote}According to our security team, usings HTTPS is even worse... {quote}
Can you ask them for some reasoning and security concerns? If there is a security concern I think it is interesting and you should raise it.

{quote}
1) check if user selected kubernetes instead of docker
2) if positive, the chaincode install process will create a pod using the already published image at chaincode.builder and chaincode.golang.runtime using the repository (docker hub for example) configuration at core.yaml
2.1) we made the customizations via Kubernetes API
2.2) This pod will have two containers: builder and runtime. Both access the same volume. If build is ok, the executable will be available for the runtime container.{quote}
I'm missing why we should have 2 containers? Do you mean just for the build process? I guess we can delete the old one once the ""runtime"" container is built... ;;;","04/Jan/18 4:23 AM;amandahla;With this feature of InitContainer, the builder container will be deleted after he completes his task. :)

I'm just afraid of what you said about ""the peer ensures the hash of the chaincode package in the ledger is equal to the hash of the chaincode package in its file system."" I didn't find where this happen and if we need to review this.;;;","04/Jan/18 6:01 AM;ChristopherFerris;[~yacovm] DTR would only be needed for actual deployments. A dev could simply use their local Docker registry. Hence, I don't think it complicates things more than they already are.

As to the point about using different DTRs. I believe that you can use it just as regular registry and cache images from a central source. So, we could have yacovchris/ourchaincode that we each cache in our respective DTRs from some shared central registry (DockerHub or a shared DTR).;;;","05/Jan/18 5:01 AM;amandahla;[~ChristopherFerris] Following your idea, should the operator  upload the images and then set the names at core.yaml in chaincode.builder and chaincode.golang.runtime (for example) ?;;;","06/Jan/18 2:09 AM;amandahla;Just to share: I'm trying to do something at github before send to gerrit.

https://github.com/estaleiro/fabric/tree/issue-7406;;;","10/Jan/18 8:34 PM;john.d.sheehan;[~amandahla], would it be better to use k8 jobs instead of pods for building and running chaincode?;;;","11/Jan/18 9:08 PM;amandahla;[~john.d.sheehan] Actually I'm not sure...What would be the advantages? I'm afraid to add too much complexity.

I found a example at this project to have an idea.

[Pachyderm|[https://github.com/pachyderm/pachyderm/blob/805e63e561a9eab4a9c52216f228f0f421714f3b/src/server/pps/server/api_server.go#L169]];;;","15/Jan/18 10:09 PM;amandahla;I'm working with the ideia of deployments. Instead of create a builder container, get the binary and create a runtime container that will receive this file, we'll create a deployment with two containers that will share a volume.
First I'll assume that the base images are already deployed in a docker registry.

What do you think?

Working here
https://github.com/estaleiro/fabric/tree/issue-7406;;;","15/Jan/18 11:22 PM;john.d.sheehan;Hi [~amandahla], the reason I suggested jobs over pods is, with pods you will always need at least one running, but jobs; start, run to completion, then exit (or retry if failed to complete).

So the peer would start a job which would
 * build the cc
 * create a docker image
 * upload that image to docker registry
Once uploaded the job would be complete

The peer would then use this image in another job (or pod);;;","13/Feb/18 1:11 AM;ublubu;Hi! I'm interested in helping out with this feature. What's the current state and how are you running the code?;;;","15/Feb/18 1:17 AM;amandahla;Hi, great to hear that you wanna help!

Our idea:
 - Create a deployment with two containers: one for build and other for run the chaincode. They will share a volume so when the build container finish, the run container will have the executable.

Right now, I'm trying to think in a way put the code available to the build container. In some peer directory mapped as a volume, for example.

Another thing it's to make the chaincode comunicate with the peer.

I was working at here:
 [https://github.com/estaleiro/fabric/commit/61e519bfdf53ebec8bcb9bf2c7aaf7867177a012]

But currently I'm doing local changes because the team warned me that they use version 1.0.4.

I've made changes to set this configuration variables:
{code:java}
 CORE_PEER_USEKUBERNETES=true
 CORE_PEER_KUBERNETES_NAMESPACE=default
 CORE_PEER_KUBERNETES_KUBECONFIG=/home/user/.kube/config{code}
Then, just to check if the peer create the chaincode using kubernetes, I have fixed on the code a deployment plan. This is it:
{code:none}
 deployment := &appsv1beta1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name: deploymentID,
		},
		Spec: appsv1beta1.DeploymentSpec{
			Replicas: int32Ptr(1),
			Template: apiv1.PodTemplateSpec{
				ObjectMeta: metav1.ObjectMeta{
					Labels: map[string]string{
						""app"": ""fabric"",
						""org.hyperledger.fabric.base.version"":         ""0.3.2"",
						""org.hyperledger.fabric.chaincode.id.name"":    ""mycc"",
						""org.hyperledger.fabric.chaincode.id.version"": ""1.0"",
						""org.hyperledger.fabric.chaincode.type"":       ""GOLANG"",
						""org.hyperledger.fabric.version"":              ""1.0.4"",
					},
				},
				Spec: apiv1.PodSpec{
					Containers: []apiv1.Container{
						{
							Name:    ""fabric-chaincode-mycc-container"",
							Image:   ""myhub.com/fabric-chaincode-mycc:1.0"",
							Command: []string{""chaincode"", ""-peer.address=peer0:7051""},
							Env: []apiv1.EnvVar{
								{Name: ""CORE_CHAINCODE_ID_NAME"", Value: ""mycc:1.0""},
								{Name: ""CORE_PEER_TLS_ENABLED"", Value: ""true""},
								{Name: ""CORE_CHAINCODE_LOGGING_LEVEL"", Value: ""info""},
								{Name: ""CORE_CHAINCODE_LOGGING_SHIM"", Value: ""warning""},
								{Name: ""CORE_CHAINCCORE_CHAINCODE_LOGGING_FORMATODE_ID_NAME"", Value: ""%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}""},
								{Name: ""PATH"", Value: ""/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin""},
								{Name: ""CORE_CHAINCODE_BUILDLEVEL"", Value: ""1.0.4""},
								{Name: ""CORE_PEER_TLS_ROOTCERT_FILE"", Value: ""/etc/hyperledger/fabric/peer.crt""},
							},
						},
					},
				},
			},
		},
	}
{code}
I couldn't make the unit tests work so I compile using:
{code:java}
 make configtxgen configtxlator cryptogen peer orderer
 make peer-docker{code}
Then I installed minikube and test using this Dockerfile:
{code:none}
 version: '2'
 networks:
 bridge:

services:
 orderer:
 container_name: orderer
 image: hyperledger/fabric-orderer
 environment:
 - ORDERER_GENERAL_GENESISPROFILE=SampleDevModeSolo
 - ORDERER_GENERAL_LEDGERTYPE=ram
 - ORDERER_GENERAL_BATCHTIMEOUT=10s
 - ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT=10
 - ORDERER_GENERAL_MAXWINDOWSIZE=1000
 - ORDERER_GENERAL_ORDERERTYPE=solo
 - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
 - ORDERER_RAMLEDGER_HISTORY_SIZE=100
 - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/fabric/msp/sampleconfig
 working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
 command: orderer
 volumes:
 - ../sampleconfig/msp/:/etc/hyperledger/fabric/msp/sampleconfig/
 ports:
 - 7050:7050
 networks:
 - bridge

peer0:
 container_name: peer0
 image: hyperledger/fabric-peer
 environment:
 - CORE_PEER_ADDRESSAUTODETECT=true
 - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
 - CORE_PEER_NETWORKID=peer0
 - CORE_NEXT=true
 - CORE_PEER_ENDORSER_ENABLED=true
 - CORE_PEER_ID=peer0
 - CORE_PEER_PROFILE_ENABLED=true
 - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
 - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp/sampleconfig
 - CORE_PEER_USEKUBERNETES=true
 - CORE_PEER_KUBERNETES_NAMESPACE=default
 - CORE_PEER_KUBERNETES_KUBECONFIG=/home/user/.kube/config
 working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
 command: peer node start
 links:
 - orderer:orderer
 volumes:
 - /var/run/:/host/var/run/
 - /home/user/.kube/config:/home/user/.kube/config
 - /home/user/.minikube/:/home/user/.minikube/
 #in the ""- <HOST>:/opt/gopath/src/github.com/hyperledger/fabric/examples/"" mapping below, the HOST part
 #should be modified to the path on the host. This will work as is in the Vagrant environment
 - /opt/gopath/src/github.com/hyperledger/fabric/examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
 - ../sampleconfig/msp/:/etc/hyperledger/fabric/msp/sampleconfig/
 depends_on:
 - orderer
 networks:
 - bridge

peer1:
 container_name: peer1
 image: hyperledger/fabric-peer
 environment:
 - CORE_PEER_ADDRESSAUTODETECT=true
 - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
 - CORE_PEER_NETWORKID=peer1
 - CORE_NEXT=true
 - CORE_PEER_ENDORSER_ENABLED=true
 - CORE_PEER_ID=peer1
 - CORE_PEER_PROFILE_ENABLED=true
 - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
 - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp/sampleconfig
 - CORE_PEER_USEKUBERNETES=true
 - CORE_PEER_KUBERNETES_NAMESPACE=default
 - CORE_PEER_KUBERNETES_KUBECONFIG=/home/user/.kube/config
 working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
 command: peer node start
 links:
 - orderer:orderer
 volumes:
 - /var/run/:/host/var/run/
 - /opt/gopath/src/github.com/hyperledger/fabric/examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
 - ../sampleconfig/msp/:/etc/hyperledger/fabric/msp/sampleconfig/
 depends_on:
 - orderer
 networks:
 - bridge

cli:
 container_name: cli
 image: hyperledger/fabric-tools
 tty: true
 environment:
 - GOPATH=/opt/gopath
 - CORE_PEER_ADDRESSAUTODETECT=true
 - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
 - CORE_NEXT=true
 - CORE_PEER_ID=cli
 - CORE_PEER_ENDORSER_ENABLED=true
 - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
 - CORE_PEER_ADDRESS=peer0:7051
 - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp/sampleconfig
 working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
 command: /bin/sh
 links:
 - orderer:orderer
 - peer0:peer0
 volumes:
 - /var/run/:/host/var/run/
 - /home/user/Documentos/ESTALEIRO/hyperledger-fabric-git/src/github.com/hyperledger/fabric/examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
 - ../sampleconfig/msp/:/etc/hyperledger/fabric/msp/sampleconfig/
 depends_on:
 - orderer
 - peer0
 - peer1
 networks:
 - bridge
{code};;;","15/Feb/18 1:55 AM;amandahla;Update: I have uploaded the branch that I'm working with version 1.0.4

[https://github.com/estaleiro/fabric/tree/issue-7406-1.0.4 | https://github.com/estaleiro/fabric/tree/issue-7406-1.0.4];;;","16/Feb/18 4:01 AM;amandahla;Hi, another update: I needed to change the idea because of the ""platform"" concept.

1) Create a pod with one container using image in ""chaincode.builder""
2) Extract chaincode code to ""/chaincode/input"" (kubectl cp? [Issue open|https://github.com/kubernetes/client-go/issues/369] )
3) Build
4) If ok, create tar file with ""/chaincode/output""
5) A targz file will have a Dockerfile, a cert (if TLS is set) and the binpackage.tar
6) Create a deployment with 1 container using args/envs received
// to think: read dockerfile in targz received to get LABELs and ENV CORE_PEER_TLS_ROOTCERT_FILE
7) Upload and extract targz in /usr/local/bin
8) Command received in envs must be executed;;;","18/Feb/18 12:08 PM;ublubu;Thanks for all the info! I'm just starting to look through it.

I wonder if it might be useful to split the chaincode management into its own set of services. That way, the core of Fabric doesn't have to depend on the Kubernetes client libraries. It might also make it easier to support other orchestration frameworks in the future. 

 

I also think the right packaging for ready-to-run chaincode is a Docker image. If that's the way to go, then the `build` step should create a Docker image with the chaincode and upload it to an image registry. The `run` step is then just a Pod (or similar) using the image in the registry.

IIUC, that's similar to what the plain-Docker version does today. It builds an image for the local registry and runs that image.;;;","18/Feb/18 1:47 PM;ublubu;Another option that I'll try first is to use a Docker-in-Docker (dind) sidecar container to build and run chaincode. The Peer pod will have two containers, a sidecar running Docker-in-Docker and a main container running the `peer` executable. Instead of talking to host Docker, the `peer` will talk to the Docker running in the sidecar.

 

Here's some info about how dind works with Kubernetes: [https://applatix.com/case-docker-docker-kubernetes-part-2/] 

TL;DR: If the `peer` container runs chaincode using a `dind` sidecar, the chaincode container will be in the same network namespace as the `peer` container. The chaincode can then access the peer on `localhost` (and vice versa).

 

Additionally:
 * Chaincode image doesn't need to be uploaded to a remote registry. (If chaincode runs as a Pod, k8s needs to pull the image from a registry)
 * If the `peer` pod dies, the chaincode containers (and `dind` sidecar) are cleaned up.;;;","19/Feb/18 2:40 AM;greg.haskins;Hi All,

I havent had a chance to catch up on this thread, but a quick comment as one of the maintainers of the chaincode platform abstraction:

I had been contemplating solving the k8s support using the DIND sidecar approach myself, so I support this direction.;;;","19/Feb/18 6:55 AM;ublubu;Here are the relevant fields of a Pod template I've used for a peer: (omitted a bunch of things for conciseness)
{code:java}
spec:
  containers:
  - command:
    - peer
    - node
    - start
    env:
    - name: CORE_VM_ENDPOINT
      value: http://localhost:2375
    - name: CORE_PEER_TLS_ENABLED
      value: ""false""
    image: someregistry/fabric-peer
    name: peer
  - image: docker:dind
    name: dind
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/lib/docker
      mountPropagation: """"
      name: docker-graph-storage
  volumes:
  - emptyDir: {}
    name: docker-graph-storage
{code}
 It seems to work for me.

 ;;;","19/Feb/18 10:35 PM;amandahla;I'm not familiar with the DIND approach. I'll study that. :)

 

[~greg.haskins] so are you already working in a way to create chaincode in kubernetes?;;;","19/Feb/18 11:46 PM;greg.haskins;[~amandahla] The only work I have to date is captured here:

 

[https://gerrit.hyperledger.org/r/c/12159/]

 

Note that this is fully functional, however, and I can run Fabric on k8s today.  The DIND conversation is merely an optimization.;;;","07/Dec/18 6:41 AM;mtessler;Is this ongoing?

It looks like development on this feature has stopped.

I'd like to be able to replace the call to docker.sock with different REST API calls to use say Kubernetes or Azure container as a service, or Amazon container as a service.

It would be nice if there was a way to have a pluggable way to instantiate the chaincode container.;;;","09/Dec/18 1:45 AM;denyeart;[~mastersingh24] [~sykesm] Will this be part of the upcoming chaincode refactoring?;;;","19/Jan/19 3:25 AM;nyet;Removing DinD is not an optimization, it is a hard and fast requirement for production k8s deployment. DinD might be an ok hack for CI or PoC, but it does not belong in production..;;;","29/Apr/19 5:30 PM;SebCasanova;Hello,

As said previously, DinD is not an option with K8S use and Production ready environment.  Did some progress made on this topic ?

Thank very much

 ;;;","01/Jul/19 10:08 PM;jgdomine;Hi

Is there anything new on this topic? Because we used Dind as a workaround on our K8S cluster and we have eviction problems of the peer because the docker daemon uses more and more space after some days of running (while the network is idle, by that I mean there are no new transactions).

So Dind is definitely not suitable for production purposes.

Thank you for your feedback;;;","07/Aug/19 1:42 AM;denyeart;Tracked in FAB-13582 now.;;;",
System Behave Framework: Allow channel updates,FAB-7407,25100,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 12:14 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,20/Jul/18 1:24 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"The system behave framework needs to allow for the testing of config updates to a channel. This includes both system channel and application channel updates. In theory, there are 2 ways that a user would update a channel - using configtxlator and using the SDKs. The SDK implementations are not complete at the time of opening this issue, so the focus will be on using configtxlator.

The following are the possible updates that may occur on a channel:
* add an organization
* remove an organization
* add a policy (Different policies for system and application channels)
* modify a policy (Different policies for system and application channels)
* change batch size
* change channel restriction
* change orderer consensus type

Backend process:
* channel fetch of the block -> saved to a file (pb format)
* start configtxlator
* POST to configtxlator to convert to json
* Figure out what portion of the config data needs to be updated
* A diff between updated config and original config will be needed and sent to configtxlator in order to generate a new config block -> saved to file (pb format) (can we get json output instead so we don't have to convert back to json?)
* ??? POST to configtxlator to convert to json
* Add envelope headers
* POST to configtxlator to generate block file -> saved to a file (pb format)
* peers should sign the block
* channel should be updated with signed block

http://hyperledger-fabric.readthedocs.io/en/latest/channel_update.html",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyql3:",,,,Unset,,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add new system feature statement,FAB-7408,25101,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 12:20 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,07/Mar/18 7:27 AM,,,,,,,,,,fabric-quality,,,,0,,,,,,,"{code}
When an {peer|orderer} admin updates a channel {channelName} with {args}
{code}

There will be a few iterations of this statement that don't include a channel name or just says ""system"" (at which point you would use the framework's default system channel name)",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqlb:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"07/Mar/18 7:27 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/16239/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel fetch of the block,FAB-7409,25102,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 12:22 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,17/Jan/18 3:15 AM,,,,,,,,,,,,,,0,,,,,,,"Save the channel block to a file using the CLI ""peer channel fetch"" command. 

The only work that should be needed here is to verify the current implementation currently works when passing a specified channel name.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqlj:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Start the configtxlator for use in the system behave framework,FAB-7410,25103,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 12:25 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/Apr/18 2:44 AM,,,,,,,,,,,,,,0,,,,,,,Implement using the configtxlator in the system behave framework such that the framework can send and receive requests from the tool. This includes updating the README and/or scripts to include any gotchas or prerequisites. ,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqlr:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,,,,,,,,true,"02/Apr/18 11:12 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/19787/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Change ""user"" to user correct player in the process",FAB-7411,25104,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 12:28 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,11/Jul/18 12:25 AM,,,,,,,,,,,,,,0,,,,,,,There are certain actions that only an admin can do and certain actions that a user can do. This should be cleared up.,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqlz:",,,,,,,,,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"13/Dec/17 3:26 AM;latitiah;Should be capable of performing the equivalent POSTs via request:
https://github.com/asararatnakar/dynamic_add_org3/blob/master/scripts/script.sh#L250-L345;;;","01/May/18 2:03 AM;latitiah;https://gerrit.hyperledger.org/r/#/c/21059;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer chaincode install doesn't return error if no .js files in directory,FAB-7412,25105,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,dsanchezseco,dsanchezseco,12/Dec/17 12:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,21/Dec/17 9:46 PM,,,,,,,v1.1.0,,,fabric-peer,,,,0,install,nodejs-chaincode,,,,,"{{While installing a *node* chaincode with the command:}}
{{}}
{code:java}
peer chaincode install -n $CHAINCODE_NAME -v $CHAINCODE_VERSION -l node -p /opt/gopath/src/github.com/user/${CHAINCODE_LANG}/${CHAINCODE_NAME}/
{code}
{{""Installed remotely response:<status:200 payload:""OK"" >"" it's returned always even if there's no .js files in the location}}",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";17/Dec/17 5:54 AM;mastersingh24;1200",,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqm7:",,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Dec/17 5:54 AM;mastersingh24;https://gerrit.hyperledger.org/r/16255;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build envelope for update,FAB-7414,25107,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 12:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,18/Apr/18 2:46 AM,,,,,,,,,,,,,,0,,,,,,,"The envelope in the end should look like the following:
{code}
{""payload"":
   {""header"":
      {""channel_header"":
         {""channel_id"":""mychannel"",
          ""type"":2}
      },
      ""data"":
         {""config_update"": CONFIG_UPDATE_DATA_HERE}
   }
}
{code}

The config update data depends on the args that are passed and the expected input based on the args passed.

For example, when adding a new org, the CONFIG_UPDATE_DATA_HERE should look like the following:
{code}
{""channel_group"":{""groups"":{""Application"":{""groups"": {""Org3MSP"":.[1]}}}}}
{code}",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqmn:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Apr/18 11:13 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/19787/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compute semantic-delta changes from two subsequent versions of the resource tree,FAB-7415,25108,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,manish-sethi,manish-sethi,12/Dec/17 12:58 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,12/Dec/17 2:47 AM,,,,,,,,,,,,,,0,,,,,,,"The resource tree updates are enabled by applying 'delta' on the existing resource tree. 
 However, this 'delta' has a specific notion in the context of 'how the updates mechanism is implemented' - which could be changed in the future. For instance, it carries the details such as read-set, write-set, and versions etc. Also, if a new child is added the whole subtree under the parent is present in this 'delta'

These implementation level details are not meaningful for someone who is interested in knowing the actual changes semantically. 
 For instance, another sibling sub-task (FAB-7133) requires to know what new chaincode has been defined (if any) or the versions of existing chaincodes changed (if any). Taking an example, if a new chaincode 'CC1' is defined, the observer will be interested to see only one node in the delta - i.e., <resources>/<chaincodes>/<CC1>

One definition to represent such a delta-tree could be - a minimal tree whose canonical paths if applied to the existing tree gives the updated tree. In this minimal tree, the deleted items can be represented as nil modified with `nil` values. 
 Though, there are some 'more accepted' ways of representing diffs in terms of exact operations ([https://tools.ietf.org/html/rfc6902#page-4]), but not sure whether we want to go that far yet.

So far this was not very important because, the consequences of applying changes were limited to in-memory content. 
 However, if we use this to trigger specific actions, for example creating, manipulating, or dropping the db artifacts (such as db indexes), it will be suggestive to work with semantic deltas rather than deltas as implemented.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqmv:",,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 2:43 AM;manish-sethi;Closing this task in the favor of a more tactical approach defined in FAB-7418;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peers should sign the update,FAB-7416,25109,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 1:05 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,02/Apr/18 11:08 PM,,,,,,,,,,,,,,0,,,,,,,"There are 2 different ways to indicate policies:
* explicit
* implicit

The explicit policy format is more complicated and this effort is out of scope for this work.
The implicit consists of ""ANY"", ""ALL"", or ""MAJORITY"".

For simplicity, when signatures are needed for updates, have all the peers sign so that any of the policies are fulfilled. (a separate issue can look at the policy and determine which peers should sign).

The CLI command that needs to be implemented for a peer signing the config file.
{code}
peer channel signconfigtx -f config_update_in_envelope.pb
{code}",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqn3:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,"06/Mar/18 8:54 AM;latitiah;https://gerrit.hyperledger.org/r/18761;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update channel with config update,FAB-7417,25110,25100,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,12/Dec/17 1:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,10/Mar/18 5:30 AM,,,,,,,,,,,,,,0,,,,,,,"Based on generated and signed config blocks, update the specified channel.
{code}
peer channel update -f config_update_in_envelope.pb -c $CHANNEL_NAME -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
{code}",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqnb:",,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"06/Mar/18 9:11 AM;latitiah;https://gerrit.hyperledger.org/r/18763;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
API for identifying the chaincode defintions present in the resource tree,FAB-7418,25111,15648,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,manish-sethi,manish-sethi,12/Dec/17 2:38 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,09/Jan/18 1:28 AM,,,,,,,WON'T FIX,,,,,,,0,,,,,,,An API is required on the resource tree that gives the list of all the chaincodes defined in the resource tree. The intended use of this API is to compute the Add/Delete/Modify of the chaincodes in the two subsequent versions of the resource tree so that the indexes can be managed accordingly.,,jyellick,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqnj:",,,,,,,,,,,,,,,,,,,,,,jyellick,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,"09/Jan/18 1:29 AM;jyellick;Resource tree based chaincodes have been abandoned.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtering blocks using a new API that leverages the underlying deliver implementation,FAB-7419,25112,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,jeffgarratt,jeffgarratt,12/Dec/17 2:51 AM,02/Jan/19 4:29 PM,28/Oct/23 3:01 AM,12/Jan/18 6:25 AM,,,,,,,v1.1.0-alpha,,,fabric-peer,,,,4,A&D,ARCH,Release-planning-1.1,review-needed,sdk,,"As discussed in FAB-7069 comments, the current design proposal for streaming transaction validation/invalidation status back to clients: 
 Take the existing events service and implement it on top of the Deliver service 
 using an associative relationship between the subscription topic enumeration and
 the policy references for the purposes of ACL implementation.

The function is implemented via a new API e.g. {{DeliverWithFilter}} or {{peer.Deliver}} (as opposed to {{ab.Deliver}}), which accepts an 
 extension of the existing SeekInfo request to include the subscription declaration.

Pros:
 - If the current Eventhub subscription model is well understood and utilized, then it would support this direction (consumability)
 - From client perspective, consistent with new block Deliver API interaction pattern (consumability)
 - Built-in peer API support for typical client tx pattern (async tx submission and listen for tx validation/invalidation status).
 - No external components/applications need to be bolted on for typical client tx pattern - fewer moving parts to coordinate and synchronize reduces complexity/risk; improves performance/testability/maintainability.
 - Leverage peer resource ACL model - greater specificity of ACL declaration compared to current Eventhub.

Cons:
 - No audit trail in ledger of filtered messages delivered to clients
 - architectural change (ARCH) as evidenced by protobuf extension
 - a common signature that varies only in parameter classification is not considered a good design practice by some
 - supports control of ACL and selection of preexisting (hard-coded) filters, but
 filters cannot be edited nor can new filters be defined through configuration

 

Acknowledgement:

     Originator:  [~kchristidis] [~C0rWin] [~denyeart]

 ",,C0rWin,ChristopherFerris,denyeart,jeffgarratt,jyellick,kchristidis,muralisr,rickr,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7088,,,FAB-7069,FAB-5481,FAB-7698,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqnr:",,,,,,,,,,,,,,,,,,,,,,C0rWin,ChristopherFerris,denyeart,jeffgarratt,jyellick,kchristidis,muralisr,rickr,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/17 7:40 AM;jeffgarratt;[David Enyeart|https://jira.hyperledger.org/secure/ViewProfile.jspa?name=denyeart], I disagree with your additions to the pro's list as follows:

 
 * From client perspective, consistent with new block Deliver API interaction pattern (consumability)

 

I would disagree.  Per the con, the parameter supplied is not consistent with the orderer deliver API.  Someone who submits the same request to the orderer and the peer will NOT get the same expected results.  We will need to document this difference and explain why, which I believe will be difficult to justify.

 
 * Built-in peer API support for typical client tx pattern (async tx submission and listen for tx validation/invalidation status).

 

This functionality is pre-existing per the already merged deliver functionality.  If however you mean just the TX and status, then this is encapsulated in the first PRO bullet point of ""If the current Eventhub subscription model...."", in which case this would be redundant as a PRO.

 
 * No external components/applications need to be bolted on for typical client tx pattern - reduces complexity/risk; improves performance/testability/maintainability.

 

Non of the pro's or cons in the original description form as a comparison with any alternative solution.  They were made within the context of this design.  I would also disagree with you on almost every aspect of your qualitative assessments.  How does this reduce complexity?  How is risk reduced?  How is maintainability improved? How is testability improved? Performance I will not debate, but I can not with certainty tell you one option will be more performant than the other.;;;","12/Dec/17 4:48 PM;C0rWin;This is sounds ok to me as pretty aligned with the comments inside initial proposal FAB-7069, which I think should linked and mention here in description. 

{quote}
No audit trail in ledger of filtered messages delivered to clients
{quote}

I do not think this is listed as a requirement, hence not a cons at all, moreover I do not think this is good idea to store filtered messages trace inside the ledger, looks like an overhead, so I would state that not having audit trail is rather a pros in that sense.

{quote}
supports control of ACL and selection of preexisting (hard-coded) filters, but filters cannot be edited nor can new filters be defined through configuration
{quote}

Again, proposed approach is fully aligned with current implementation and if you think we should support editing or insertion of new filters, IMO it's worth open additional JIRA item and discuss it there as completely separate feature request.


{quote}
I would disagree.  Per the con, the parameter supplied is not consistent with the orderer deliver API.  Someone who submits the same request to the orderer and the peer will NOT get the same expected results.  We will need to document this difference and explain why, which I believe will be difficult to justify.
{quote}

This is incorrect, if you submit same request to the orderer or to the peer will experience exactly the same behavior. Unless I'm missing something, but if you think there are differences could you please elaborate? The only difference I could imagine is with respect to the filtered content which no one expect to be supported by ordering service and therefore I liked [~kchristidis] proposal outlined in comments for FAB-7069 that mitigates this difference by wrapping around original delivery API.;;;","12/Dec/17 5:01 PM;yacovm;Why do we need an audit trail in the peer side? What are we trying to accomplish? There is no way to prove that the client received a message without the client signing it (or recprding the TLS traffic, right?) anyway. If the peer is not byzantine we dont need an audit trail because it is honest, and if the peer is byzantine then it may just write there whatever it wants without the client having a say in it;;;","12/Dec/17 8:44 PM;ChristopherFerris;Why are we voting on an argument? Why are we voting at all? To the best of my understanding, there are still open switches, for starters. 

Just to be clear, I am fine if we have an open discussion about design decisions... I just don't think that we should be voting... we should be coming to consensus. Then, barring that, we should be asking those on both sides if they can live with a proposal, or what it would take to get them to live with it (agree to disagree and move on). ;;;","12/Dec/17 8:51 PM;denyeart;[~jeffgarratt] If the logic is entirely encapsulated in a peer API, rather than spread across peer API and bolted-on applications, there are less moving parts to coordinate and synchronize, which in my opinion reduces complexity/risk, and improves performance/testability/maintainability. I've clarified description.  I didn't think that would be a controversial assertion, but people are free to disagree.;;;","12/Dec/17 9:18 PM;denyeart;[~ChristopherFerris] The intent is to come to consensus on general approach (API vs external application) and then depending on the general approach complete the more detailed design (e.g. use Block proto or a more streamlined proto for txid / status).  Comments are the best way to provide feedback and build consensus, an upvote is just an easy way to indicate agreement.;;;","12/Dec/17 11:29 PM;jeffgarratt;[~C0rWin]

""""""This is incorrect, if you submit same request to the orderer or to the peer will experience exactly the same behavior. Unless I'm missing something, """"""

 

You will not.  The orderer will NOT send you the filtered version of blocks.  ;;;","12/Dec/17 11:33 PM;jeffgarratt;[~C0rWin] 

    """"""I do not think this is listed as a requirement, hence not a cons at all,""""""

 

This changes the current behavior of deliver in that we have an audit trail of all messages delivered to the client in the channel.;;;","12/Dec/17 11:41 PM;C0rWin;{quote}
""""""This is incorrect, if you submit same request to the orderer or to the peer will experience exactly the same behavior. Unless I'm missing something, """"""

You will not.  The orderer will NOT send you the filtered version of blocks.  
{quote}

What I meant to say is that is you will send same message as it defined right now it will be supported out of box, of course new filtering capabilities will not, this is why I think [~kchristidis] proposal is the best option which combines two proposed solutions.


{quote}
    """"""I do not think this is listed as a requirement, hence not a cons at all,""""""

This changes the current behavior of deliver in that we have an audit trail of all messages delivered to the client in the channel.
{quote}

I must be missing that part, but what audit trail do we currently have? Can you give an example?;;;","13/Dec/17 12:43 AM;jeffgarratt;[~C0rWin] our deliver is tantamount to Amazon's deliver operation, that is to say, Amazon would never take a package as it is going out the door and remove some items (without log) then send it as they would have no way to verify what was delivered.;;;","13/Dec/17 2:16 AM;jeffgarratt;I am concerned that the current design does not meet the requirements as currently documented in  https://jira.hyperledger.org/browse/FAB-7088

Will add comments here asap.;;;","13/Dec/17 7:27 AM;jeffgarratt;With respect to https://jira.hyperledger.org/browse/FAB-7419

Considering the context of the feature as defined in https://jira.hyperledger.org/browse/FAB-7088

 

A) If there are multiple organizations in the channel (a pre condition not currently defined), then I believe the feature cannot be satisfied as written using the solution proposed here.  The config admin of channel 'A' can NOT individually configure the filter assuming a majority style admin policy, as they would need a signature of at least one of the other members. The only remedy I can conceive of is to redefine the feature, which would cause me pause as the adjustment of requirements per the design is troubling.

 

B) It appears possible that in the situation of multiple organizations in a channel with a chaincode with a endorsement policy of ALL orgs, that 
 the majority could decide to create/redefine the filter and still acquire endorsement from all organizations, while changing what the uninvolved member's clients would receive (a filtered block) without notice possibly causing their applications to fail, while additional transactions can continue to be added with their peer's endorsement.  The only current remedy I could conceive is to detect this state, and then remove oneself from the channel or proactively shut down the peer.

 

Issue B in my mind would force me to question my desire to involve myself as a member organization of the network.;;;","13/Dec/17 2:57 PM;denyeart;[~jeffgarratt] I do not believe that FAB-7088 as written is the gospel, nor FAB-5481 that came before it, as these were simply re-interpretations of the original requirement.  The original requirement that triggered all these ideas was captured in FAB-3134, and it doesn't specify anything about how the requirement would be implemented or how the configuration would be governed.

The exact mechanics of the proposed API ACL approach have not been ironed out, but from the FAB-7069 discussion it sounded like the general framework would be as follows:

ACL for channel-scoped APIs would be managed on resource config tree for the channel, implying a configurable mod_policy for each resource's access control. Different levels of filtered content within channel-scoped APIs could be modeled as different resources.  Access control changes for a given resource would require a config transaction meeting the mod_policy for that resource. When a specific level of filtered content was requested via an API call at runtime, it would be checked against the access control for that resource and fail if not met, returning an error rather than dynamically altering the response as B suggests.

I believe the concerns A and B would be addressed via the modification policy.

[~jyellick] and [~ales] , please keep me honest with respect to API ACL configuration on resource config tree and modification policies. We've discussed that API ACL (FAB-3621) in general needs to be finalized/documented, now that the resource config tree is available. I believe that needs to be done for API ACL in general, regardless of the current event filtering design discussion.

 ;;;","13/Dec/17 10:55 PM;jeffgarratt;[~denyeart] from https://jira.hyperledger.org/browse/FAB-3134 -> """"""This is required for fabric deployers that require confidentiality such that the ledger is restricted to the peers.""""""

 

How do I accomplish this in the context of multiple organizations in the channel?;;;","13/Dec/17 11:16 PM;denyeart;[~jeffgarratt] The ACL policies can reference organizations, OUs, role types (clients vs peers vs orderers as of FAB-5664), and individual identities.  And then the mod policy for the ACL dictates which combination of organizations/roles is required to change the ACL.  This is consistent with all the other API ACLs that are already in place.   To answer the specific question, if you want peers to have full access to ledger but want clients to have restricted access, you would issue clients certs with 'client' OUs and then restrict 'client' OUs in the resource ACLs.  I'm not an expert in this space though, we'd need to talk to  [~adc] / [~ales] if you'd like to go deeper.;;;","14/Dec/17 12:35 AM;kchristidis;Assume channel {{foo}} with member orgs {{Org1}}, {{Org2}}, {{Org3}} in its {{Admins}} group. Member org {{Org4}} is not an administrator but has full read/write access (I.e. belongs to the channel's {{Readers}} and {{Writers}} group).

Who is the client that receives the filtered events here?

We take FAB-3134 as our starting point and want to generalize as possible.

Here are all the options I see:
 # It's one of the member orgs with full read/write access.
 # It's a client org ({{Org5}}) that's tied to the hip with one of the orgs with full read/write access to the channel. {{Org5}} is not trusted to read {{foo}}.
 # As above but client {{Org5}} is not tied to the hip with any of the orgs and distrusts all of them equally.

(The latter two options are related to FAB-3621.)

Any other option I'm missing?

For all the options above, can we identify what could constitute a sensible default for:
 # the recipient policy, and
 # the {{mod_policy}} for the {{DeliverWithFilter}} API.

(Put differently: express in terms of policies who can invoke the API, and how this rule can be modified.)

If the recipient is a member org with full read access, any {{mod_policy}} that doesn't include the explicit approval of said member org makes this API useless. This is what Jeff is touching on with the example in point B.

If it's option 2, why don't we let the member org that enjoys the full trust of client {{Org5}} set up their own filter in a separate channel, as FAB-7367 suggests, and invite client {{Org5}} over? (There are potential drawbacks to FAB-7367, as there are in this very proposal that I co-authored right here, and I'll get to those but let's take it one step at a time.)

If it's option 3:
 * How does FAB-7367 play out? Does {{Org5}} hope that a quorum of member orgs in {{foo}} set up their own notification/filter channels and invite {{Org5}} over? (And then {{Org5}} needs to monitor them all for fear of censorship?)
 * How does this proposal here play out? The {{mod_policy}} for the API is set to {{foo}}'s {{Admins}}, and the API can be invoked by a set that includes {{Org5}}? Does this sound right? But if it does, how does this affect my trust issues? (I'm {{Org5}}.) The member org's peer I'm connected to (for the {{DeliverWithFilter}} API call) can easily censor an event. Which means I either issue this API request to one peer and hope for the best (i.e. I ""trust"" this member org and fall back to Option 2), or I issue this API request to multiple member orgs, which is exactly what one would do in FAB-7367.

So if I'm getting this right, there's no scenario in which this proposal has an edge over FAB-7367. (The one undeniable drawback of the application-based approach is latency.);;;","14/Dec/17 1:25 AM;jeffgarratt;[~denyeart] , you say...
 
{quote}I do not believe that FAB-7088 as written is the gospel, nor FAB-5481 that came before it, as these were simply re-interpretations of the original requirement.  The original requirement that triggered all these ideas was captured in FAB-3134, and it doesn't specify anything about how the requirement would be implemented or how the configuration would be governed.{quote}
 
Could you explain to me in which way FAB-7088 does NOT fully encapsulate the stated requirement from FAB-3134 
 
     """"""There needs to be a mechanism to restrict block events and block events with RW sets to a subset of clients and/or disable.""""""
 
or in which way it expands it in which you disagree?;;;","14/Dec/17 2:50 AM;denyeart;[~kchristidis] Thanks for the detailed analysis.  Now that I understand where you (and [~jeffgarratt]) are coming from, it seems that you are fundamentally against peer API ACLs in general that limit client access.  That is, you disagree with the underlying feature:

{{FAB-3621 As a member of a network who runs a peer, I want to be able to support clients who transact with the network with a limited scope of permissions}}

For example, I assume you would make the same argument that GetBlockByNumber API should not be access controlled in peer, but rather in an application in front of peer.

I think you have valid debate points against FAB-3621, but ones which were already considered earlier in the release.

FAB-3621 was debated, approved, developed, and demonstrated earlier in 1.1 release.  With that understanding, FAB-7419 proposed to utilize similar access control mechanism for Deliver content.  It would be inconsistent to have access control in peer for some APIs, but in external applications for other APIs.

If you want to re-visit the decision about limiting client access in peer APIs, I think the place to bring that up would be in FAB-3621.

Kostas wrote:

>>Any other option I'm missing?

 Yes, you are missing from the analysis organizations that have different types of identities within the org.  For example an organization that maintains a peer in a secured environment (e.g. a hosting service), but has client applications and/or organizational units with more restricted access.  This is the pattern that drives user enrollments in CA, OU support, client vs peer vs orderer identities (FAB-5664), and FAB-3621 (taken together, major release themes for 1.1).

 

[~jeffgarratt] My problems with FAB-7088 are:
 * It is redundant with FAB-3621 in general.
 * It is specifically redundant with FAB-3134.
 * It is missing information about the core use case (submitting a transaction asynchronously and wanting to send back transaction status only)
 * It is phrased from the perspective of a channel admin, disregarding the existing resource config tree and governance provided by modification policy.

 ;;;","14/Dec/17 8:04 AM;jyellick;[~denyeart]
{quote}Jason Yellick and Alessandro Sorniotti , please keep me honest with respect to API ACL configuration on resource config tree and modification policies. We've discussed that API ACL (FAB-3621) in general needs to be finalized/documented, now that the resource config tree is available. I believe that needs to be done for API ACL in general, regardless of the current event filtering design discussion.
{quote}
Without attempting to take any stance on the issue at hand, I thought I would quickly try to chime in with respect to the resources tree.

 To steal a comment from FAB-6147 (unrelated to this issue), the resources config is a good place to store information if:
 # The configuration is needed by all peers
 # The configuration may be jointly administered
 # The configuration is channel scoped
 # The configuration requires total order relative to other transactions

For ACLs, (1)/(3)/(4) are fairly obviously satisfied. All peers have these functions which should be protected (1), the ACLs are scoped by channel (3), and the current state of the channel (such as its membership) is important (4).

The biggest question is (2), should ACLs be jointly administered? Should an org require permission from the entire network to modify ACLs for its clients? If not, how does the network have assurances that the org only modifies the policy for its clients and not for the whole network? This is very much the question which was asked by the channel configuration for the orderer {{Broadcast}} and {{Deliver}} interfaces. Each org should usually be able to determine which of its clients are authorized to use these services, but no org should be able to lock the others out by itself. To satisfy these requirements, the channel config defines a hierarchy of policies, such that the {{/Channel/Readers}} is the union of {{/Channel/Orderer/Readers}} and {{/Channel/Application/Readers}}, which are in turn unions of the {{Readers}} policies for the respective orgs. In this way each org may always modify its subset of the union, while not being able to harm other orgs.

For the resources tree, the individual ACL API entries are simply references to policies defined elsewhere in the tree. And, the default values for these references are the default policies in the channel config. For a network which wishes to implement more fine grained ACLs, they will likely need to construct a policy hierarchy similar to the channel config which meets their needs. At some point, we may wish to supply a default hierarchy, but this has not been discussed.

So, to quickly summarize. Policies in the resources tree can be configured in such a way that some higher threshold is required to modify the base policy, with individual orgs being able to independently manage subsets of policy. Today there are no defaults, and this hierarchical policy style must be implemented manually, unless you utilize the defaults in the channel config. Perhaps in the resources tree, it would make more sense to require that _all_ admins agree to set the base policy (rather than a majority) so that in order to break an org's ACLs, the org must effectively be ejected from the network.;;;","19/Dec/17 8:19 AM;muralisr;Seems to me the biggest concerns around embedding filtered events in fabric were around ACL support. Let me try to clarify this with an example (pretty much using the above comment from [~jyellick] as basis).

Currently there are predefined resources such as PROPOSAL (who can send proposals to create TXs). These have 1.0 defaults based on ChannelReaders and ChannelWriters but can be modified by sending a config tx using configtxlator and some manual JSON editing.

We will add a new DELIVER_BLOCK and DELIVER_FILTERED_BLOCK resources for this item.

Lets say user defines the following policies
 Policy Name - TRANSACTORS, Maps to - Org1.Admin || Org2.Admin  || Org1.Member || Org2.Member
 Policy Name - BLOCK_NOTIFICATION, Maps to - Org1.Admin || Org2.Admin

Transaction and transaction notification use TRANSACTORS policy
{code:java}
DELIVER_FILTERED_BLOCK,PROPOSAL
 ===> 
TRANSACTORS
{code}
 Block events use BLOCK_NOTIFICATION policy
{code:java}
DELIVER_BLOCK, QSCC.GetBlockByNumber, QSCC.GetBlockByHash, QSCC.GetTransactionByID, QSCC.GetBlockByTxID
====>
BLOCK_NOTIFICATION
{code}
The idea is that one can easily create conceptual policies (TRANSACTORS, etc) that all resources for that concept to satisfy. In particular, those who create TXs should be able to read those TXs. 

The above address how the resources and policies can be used to control broad ACL requirements.

*If we are saying ""other channel orgs should not control what my peer can read"", it seems to me the argument is actually much more general than for ""filter events"". I can easily see it apply to any ""reads"". ie, ""this is my peer, why should the channel impose restrictions via ChannelReaders ? I can understand we need to control what goes in via ChannelWriters but I own the data on my peer and I control who I give it to... ie, we should not apply any channel based ACL on ANY read operations"".  So if we are making that argument, that's got to be taken to a level higher than ""filtered events"" to any sort of ""read"".* 

*(Of course the prima facie counter to that is the read policies control to all peers in the channel, not just ""my"" peer.)*

*The above seems to be close to what* [~denyeart] *wrote ""If you want to re-visit the decision about limiting client access in peer APIs, I think the place to bring that up would be in* FAB-3621*."" ... but is actually stronger than that, as it basically says any read ACLs should then be completely outside channel, ie, not even the pre 3621 ChannelReaders policies exercised around reads.*

[~jeffgarratt] [~kchristidis]  (and [~jyellick] based on the previous comment) do let me know if I'm missing something or if I got everything completely wrong :) ?;;;","19/Dec/17 12:42 PM;denyeart;As it looks like the approach in Description here is consistent with approved/implemented feature FAB-3621, work will proceed here to implement event filtering in peer on top of Deliver API.

[~C0rWin] has kicked things off with [https://gerrit.hyperledger.org/r/#/c/16179/] .;;;","20/Dec/17 12:05 AM;C0rWin;Implementing required functionality I've realized that adding a new {{DeliverWithFilter}} API to handle {{FilteredBlock}} events, makes me to repeat most of the code which already exist and tested within {{Deliver}} API, therefore in my CR [~denyeart] mentioned above I'm suggesting much simpler solution with extension of {{SeekInfo}} proto message to differ between whenever we should be returning a normal block versus filtered blocks. After all there are only about 10 lines of code added into {{Handle}} message to take care of this. 

While this is diverges from the details in description I think this allows to leverage existing code, since I believe this was main motivation of moving events producer to reuse deliverer code. Feedback/thoughts are welcome: [~jyellick], [~kchristidis], [~denyeart], [~yacovm], [~mastersingh24].;;;","03/Jan/18 5:27 AM;C0rWin;Since I've proposed the CR to address the current ticket, https://gerrit.hyperledger.org/r/#/c/16179/, while implemented an alternative approach which I'd describe in more details so we can make any further progress.

The main motivation behind FAB-7069, was to enable code reuse since there are common logic between delivery protocol of {{AtomicBroadcast}} service and the events producer. In order to facilitate reuse there was a atomic broadcast implementation was introduced for peer side, e.g.:

{code}
type server struct {
	dh deliver.Handler
}

// Broadcast is not implemented/supported on a peer
func (s *server) Broadcast(srv ab.AtomicBroadcast_BroadcastServer) error {
	return srv.Send(&ab.BroadcastResponse{
		Status: common.Status_NOT_IMPLEMENTED,
	})
}

// Deliver sends a stream of blocks to a client after commitment
func (s *server) Deliver(srv ab.AtomicBroadcast_DeliverServer) error {
	logger.Debugf(""Starting new Deliver handler"")
	defer func() {
		if r := recover(); r != nil {
			logger.Criticalf(""Deliver client triggered panic: %s\n%s"", r, debug.Stack())
		}
		logger.Debugf(""Closing Deliver stream"")
	}()
	return s.dh.Handle(srv)
}

// NewAtomicBroadcastServer creates an ab.AtomicBroadcastServer based on the
// ledger Reader. Broadcast is not implemented/supported on the peer.
func NewAtomicBroadcastServer(timeWindow time.Duration, mutualTLS bool) ab.AtomicBroadcastServer {
	s := &server{
		dh: deliver.NewHandlerImpl(DeliverSupportManager{}, policies.ChannelReaders, timeWindow, mutualTLS),
	}
	return s
}
{code} 

where there deliver handler is a core component which is being reused:

{code}
	s := &server{
		dh: deliver.NewHandlerImpl(DeliverSupportManager{}, policies.ChannelReaders, timeWindow, mutualTLS),
	}
{code} 

which is also used for ordering service as well. Now the only difference between the delivering blocks and delivering filtered blocks is the following:

{code}
		if err := sendBlockReply(srv, block); err != nil {
			logger.Warningf(""[channel: %s] Error sending to %s: %s"", chdr.ChannelId, addr, err)
			return err
		}
{code}

while for {{FilteredBlock}} we need to replace this by something like following:

{code}
		if err := sendFilteredBlockReply(srv, block); err != nil {
			logger.Warningf(""[channel: %s] Error sending to %s: %s"", chdr.ChannelId, addr, err)
			return err
		}
{code}

in order to differentiate whenever we need to deliver block and filtered we just need to extend {{SeekInfo}} with enum to differ type of information we would like to receive at deliver. The above turns to be less intrusive than  adding separate API which seems to re-implement most of the already existing logic this also important considering client side which will only need to add support to handle the new enum field of {{SeekInfo}} message.;;;","03/Jan/18 5:33 AM;C0rWin;In addition to support this change I've opened following FAB-7521, since we need to differentiate how we treat policy lookup at peer and orderer side. Since at peer side we need to use resource name to lookup policy name based on it and then binary policy itself, while on ordering service there is no notion of resources and we simply need to use policy name to lookup binary policy rule. Here is the CR which implements required change to support correct policy lookup based on whenever we are using delivery API on peer vs ordering service. https://gerrit.hyperledger.org/r/#/c/16341/;;;","03/Jan/18 7:21 AM;yacovm;{quote}While this is diverges from the details in description I think this allows to leverage existing code, since I believe this was main motivation of moving events producer to reuse deliverer code. Feedback/thoughts are welcome: Jason Yellick, Kostas Christidis, David Enyeart, Yacov Manevich, Gari Singh.{quote}

My opinion is that sending back to the client a regular common.Block that has only the filtered data, and doesn't have the rest of the data (i.e RWSets) is:
# Awkward: The peer needs to unwrap the marshaled bytes, filter out the fields, then wrap it all back up, and then the client needs to unwrap each transaction again. 
# Risky in terms of ""security"" bugs- What if we miss a field? What if the filtering has a bug? If we just send a data structure that only has the filtered fields in the first place, the compiler ensures that there is no information leakage. 
;;;","03/Jan/18 8:58 PM;denyeart;I agree with Artem's and Yacov's comments.  Reusing the API with a different SeekInfo for FilteredBlocks is a good compromise for maximum code reuse, which as Artem pointed out was the ultimate objective here.  And having a streamlined FilteredBlock proto (already merged) for just the filtered information will be more intuitive and usable for clients that just need the filtered information.  I am in support of CR [https://gerrit.hyperledger.org/r/#/c/16179/] approach.;;;","03/Jan/18 11:45 PM;kchristidis;{quote}Reusing the API with a different SeekInfo for FilteredBlocks is a good compromise for maximum code reuse, which as Artem pointed out was the ultimate objective here.{quote}

The objective was to maximize code reuse while preventing any peer-specific information from leaking into the orderer. I do not get why we deviate from the design that we suggested when this issue was written up. The accompanying sketch is: [https://user-images.githubusercontent.com/14876848/33777738-f75a2ee2-dc13-11e7-88ba-09ed6d200be4.png];;;","04/Jan/18 7:54 AM;C0rWin;Well, that it's easy, simply because once you will follow scketch design most of the logic to handle incoming request to hold filtered event will re-do, almost most of the code which already exist inside {{deliver.NewHandlerImpl(...)}}. Also once this code being abstracted out and moved outside scope of the ordering service I do not see why you call it as leaking peer specific into orderer as now this is a common package which is capable to treat both the peer side and the orderer side. For example with current approach with Blocks delivery on peer vs ordering service, you still have to differentiate how you lookup the policy inside the peer versus how you do it for orderer, since for the peer you need to use resource name to lookup the policy name and then the policy itself, while on the orderer you just using the policy name. And this could be solved by a abstraction of policy name provider versus bringing a new RPC API to handle peer side block delivery.

BTW, I can redo the whole CR according to your sketch while I think this is a bit redundant as it will produce unnecessary portion of code, which could be simply reused since 99% already there and required feature could be implemented by small and non intrusive addition which closes the deal.;;;","04/Jan/18 9:06 AM;kchristidis;{quote}I do not see why you call it as leaking peer specific into orderer as now this is a common package which is capable to treat both the peer side and the orderer side.
{quote}
I say this because the ordering service does not do events/filters.

This solution will involve more code, but this is exactly the trade-off for maintaining the separation of concerns between the two binaries. We were (or at least, I was) aware of this from the get-go. (In fact, this is why I was asked to chime in on FAB-7069.)

Just for reference (though I know you don't need it), I whipped up a quick proof of concept for the sketch above: [https://github.com/kchristidis/nested]

{{    common}}:{{orderer}} :: {{extended}}:{{events}}

So, by following the proposal put forth in this JIRA item, we build all of our custom processing logic in {{extended}}, and leave {{common}} as is.;;;","04/Jan/18 9:16 AM;yacovm;What if we have 2 different protobuf definitions: 
# The regular orderer service definition, which only delivers blocks
# The peer service definition, which is what the peer has now in Artem's change set

If we have this, can't we still reuse code that is now in common?
We would preserve the orderer API and the peer would be able to send blocks and events. 
The only thing duplicated here is the proto schema, which is pretty cheap to duplicate, and the pb.go is machine-generated anyway.

[~kchristidis], [~C0rWin] wdyt? 

Note - I do not mean here the translation approach that Kostas advocates, but simply taking the code in common and putting it in 2 different server-side method somehow;;;","04/Jan/18 5:20 PM;C0rWin;[~yacovm] let me evaluate it and I will try to refactor based on your suggestion, will post here the update.;;;","05/Jan/18 1:42 AM;rickr;Is there a gerrit CS for this in progress ?  Can it be _cherrypicked_ and run against _(relatively complete)_ ?  If not, any ETA when it can be ?;;;","05/Jan/18 1:46 AM;rickr;[https://gerrit.hyperledger.org/r/#/c/16179/] ? 
SDK's start looking at ?;;;","08/Jan/18 9:07 AM;C0rWin;updated CR which keeps orderer code clean of leaking peer abstraction inside: https://gerrit.hyperledger.org/r/#/c/16645/

there is still UT which need to be added, will update once WIP will be removed.;;;","09/Jan/18 5:30 AM;kchristidis;Had a look at the latest changeset.

Is the underlying claim here that the sum of these two new changesets (https://gerrit.hyperledger.org/r/c/16569/ and https://gerrit.hyperledger.org/r/c/16645/) is both (a) a simpler approach, and (b) less LOC than the ""nested server"" approach that we originally put out?

I think I'm questioning (a) for one.The dancing we have to do in https://gerrit.hyperledger.org/r/c/16569/8/orderer/common/server/server.go for instance in order to accommodate a generalized Deliver API is giving me pause.;;;","09/Jan/18 5:37 AM;rickr;Not sure about the other SDKs but for Java grpc generates two streaming services for this. Making it rather painful. 
Also with this there is no way the application to request Block or FilterBlock  and get Block if they're authorized and FilterBlock if they're not. 

 ;;;","09/Jan/18 6:31 AM;C0rWin;[~kchristidis]
{quote}
Is the underlying claim here that the sum of these two new changesets (https://gerrit.hyperledger.org/r/c/16569/ and https://gerrit.hyperledger.org/r/c/16645/) is both (a) a simpler approach, and (b) less LOC than the ""nested server"" approach that we originally put out?
{quote}

That is not the claim, they key point from my perspective is to being able (a) to enable proper code reuse for common parts, (b) provide clear abstraction and separation of concerns which I think was a main motivation behind the ""nested server"" approach. Currently I'm able to achieve both these points, deliver handler could be reused both to deliver a block events as well as the filtered events, while no peer abstraction is leaking into orderer code (same is also true for orderering code leaking into peer).

{quote}
I think I'm questioning (a) for one.The dancing we have to do in https://gerrit.hyperledger.org/r/c/16569/8/orderer/common/server/server.go for instance in order to accommodate a generalized Deliver API is giving me pause.
{quote}

The generalization of Deliver API enables us to reuse most of these code and separate the peer deliver abstraction from the orderer, which IMO more clear and open for future extensions, since peer related code for deliver could be extended w/o influencing the orderer side.;;;",,,,,,,,,
"Orderer ""Error reading from stream"" after beginning batch timer",FAB-7420,25200,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,alexanderlhicks,alexanderlhicks,12/Dec/17 3:50 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,25/Jan/18 1:00 AM,v1.0.5,,,,,,Not a Bug,,,fabric-orderer,,,,0,,,,,,,"I'm trying to set up a network of four organisations, each with one peer (set as admin), and an orderer with kafka ordering service along with a client, which makes 7 VMs.

Setting up the cryptographic material, starting every channel (two of them), joining them with the appropriate peers and installing/instantiating chaincode happens with no trouble.

When trying to invoke chaincode, the chaincode can be successfully invoked (status:200) however the results do not seem to be recorded on the ledger. When running chaincode which returns the value for a/multiple key(s), the resulting payload is simply null. This seems to be due to a fault in the ordering service: I get keeping the error message ""Error reading from stream: rpc error: code = Canceled desc = context canceled"".

Here are logs for the orderer and endorsing peers of the transaction (which returns status:200)
 * Orderer: [https://gist.github.com/alexanderlhicks/91f32fb5ed2b6d5d232dcdad0572ffee]
 * Peer1 (initiating transaction): [https://gist.github.com/alexanderlhicks/a2c7a37d3e692336dbc9a8a9f7fd66ba]
 * Peer2 (has the chaincode installed): [https://gist.github.com/alexanderlhicks/75c76b11a26963d7a6962f51295ea816]
 * Peer3 (on channel but does not have that chaincode installed): [https://gist.github.com/alexanderlhicks/951757e880d8c2f658d2d188e25b9274]

What could be causing the ""Error reading from stream"" message which seems to be the only error happening? I'm tried playing around with peer and orderer configurations but to no avail. Searching for this error also returns issues in channel creation, or joining channels, which I assume has gone fine since I can invoke chaincode on the channels with my peers.

This is the first time I create an issue on JIRA so let me know if you would like more information. I am using the latest images (1.0.5) which I updated to a few days ago, the same error happened with 1.0.4.

 ",Ubuntu 16.04 AWS virtual machines.,alexanderlhicks,kchristidis,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqnz:",,,,,,,,,,,,,,,,,,,,,,alexanderlhicks,kchristidis,mastersingh24,meinvzou,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 1:39 AM;kchristidis;Alexander, thanks for submitting this. There does not seem to be an issue with the orderer as best as I can tell. The line that you see in the orderer log is what gets posted when the broadcast session that is established between the client and the ordering service is terminated.;;;","13/Dec/17 1:58 AM;alexanderlhicks;Thanks for taking a look. I agree that the issue is not necessarily with the orderer, if it cannot ""read from stream"" it's likely because of an issue with the stream. However the peer logs don't seem to contain errors or warning which makes it hard to see where it is coming from.;;;","13/Dec/17 2:06 AM;kchristidis;Can I suggest my usual approach? Try to go for the simplest possible network at first. One org with two peers, a solo orderer. See if you can deploy, instantiate, invoke, and query without issues. Then start iterating, making your network more complicated (and closer to your final setup), one step at a time. Let us know what is the precise change that is bringing about the issue and we can take it from there.;;;","13/Dec/17 8:28 AM;alexanderlhicks;That seems like a good idea. I'll try this tomorrow.

For reference everything worked fine on a dev network (running everything on one machine), i suspect the issue arises when trying to communicate between VMs. I rebuilt the network and the same rpc error appears when creating channels, installing chaincode etc... Although the channels are created and the chaincode does get installed and instantiate to some extent since I can invoke it on channels. I figured I should provide some more information on how I set things up in case there's something obvious I missed:

I have 7 VMs: one for each peer of each organization, a kafka VM, an orderer VM and a client VM from which I execute comands.

Crypto material is generated the standard way using cryptogen and copied on each VM (just a git pull). I then start each peer using a script in the form of
{code:java}
CORE_PEER_ENDORSER_ENABLED=true \
CORE_PEER_PROFILE_ENABLED=true \
CORE_PEER_ADDRESS=peer:7051 \
CORE_PEER_CHAINCODELISTENADDRESS=peer:7052 \
CORE_PEER_ID=peer \
CORE_PEER_LOCALMSPID=PeersMSP \
CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer:7051 \
CORE_PEER_GOSSIP_USELEADERELECTION=true \
CORE_PEER_GOSSIP_ORGLEADER=false \
CORE_PEER_TLS_ENABLED=false \
CORE_PEER_TLS_KEY_FILE=pathto/crypto-config/peerOrganizations/Peers/users/Admin@Peers/tls/server.key \
CORE_PEER_TLS_CERT_FILE=pathto/crypto-config/peerOrganizations/Peers/users/Admin@Peers/tls/server.crt \
CORE_PEER_TLS_ROOTCERT_FILE=pathto/crypto-config/peerOrganizations/Peers/users/Admin@Peers/tls/ca.crt \
CORE_PEER_TLS_SERVERHOSTOVERRIDE=agent \
CORE_VM_DOCKER_ATTACHSTDOUT=true \
CORE_PEER_MSPCONFIGPATH=pathto/crypto-config/peerOrganizations/Peers/users/Admin@Peers/msp \
peer node start --peer-defaultchain=false
{code}
where the peer address corresponds to an ip mapping in /etc/hosts (which is on every VM).

I then start the kafka service using docker-compose up, with the docker-compose file as follows:
{code:java}
version: '2'
services:
    zookeeper:
        image: hyperledger/fabric-zookeeper:x86_64-1.0.5
        ports:
            - ""2181""
            - ""2888""
            - ""3888""
    kafka:
        image: hyperledger/fabric-kafka:x86_64-1.0.5
        restart: always
        environment:
            - KAFKA_ADVERTISED_HOST_NAME=ip of the VM here
            - KAFKA_ADVERTISED_PORT=9092
            - KAFKA_BROKER_ID=0
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_NUM_REPLICA_FETCHERS=1
            - KAFKA_DEFAULT_REPLICATION_FACTOR=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        ports:
            - ""9092:9092""
        depends_on:
            - zookeeper
{code}
finally I start the orderer using a script similar to the peer script:
{code:java}
ORDERER_GENERAL_LOGLEVEL=debug \
ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 \
ORDERER_GENERAL_GENESISMETHOD=file \
ORDERER_GENERAL_GENESISFILE=genesis.block \
ORDERER_GENERAL_LOCALMSPID=OrdererMSP \
ORDERER_GENERAL_LOCALMSPDIR=pathto/crypto-config/ordererOrganizations/Orderer/users/Admin@Orderer/msp \
ORDERER_GENERAL_TLS_ENABLED=false \
ORDERER_GENERAL_TLS_PRIVATEKEY=pathto/crypto-config/ordererOrganizations/Orderer/orderers/Orderer.Orderer/tls/server.key \
ORDERER_GENERAL_TLS_CERTIFICATE=pathto/crypto-config/ordererOrganizations/Orderer/orderers/Orderer.Orderer/tls/server.crt \
ORDERER_GENERAL_TLS_ROOTCAS=[pathto/crypto-config/ordererOrganizations/Orderer/orderers/Orderer.Orderer/tls/ca.crt, pathto/crypto-config/peerOrganizations/Peers/users/Admin@Peers/tls/ca.crt, similarly for every other peer organization] \
CONFIGTX_ORDERER_BATCHTIMEOUT=1s \
CONFIGTX_ORDERER_ORDERERTYPE=kafka \
CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka:9092] \
orderer
{code}
I then run a script with the standard create/join channel and install/instantiate chaincode commands for the relevant peers.

My configtx and crypto-config files look like:
{code:java}
---
Profiles:

    OrdererGenesis:
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *Orderer
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *Agents
                    - *DataProviders
                    - *Auditors
                    - *Users

    MainChannel:
        Consortium: SampleConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Peers
                - *other orgs
    AgentDpChannel:
        Consortium: SampleConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Peers
                - *subset of other orgs
Organizations:
    - &Orderer
        Name: Orderer
        ID: OrdererMSP
        MSPDir: /home/ubuntu/verifiable-access-code/HLF-network/crypto-config/ordererOrganizations/Orderer/msp/
        AdminPrincipal: Role.ADMIN

    - &Peers
        Name: Peers
        ID: PeersMSP
        MSPDir: pathto/crypto-config/peerOrganizations/Agents/msp/
        AdminPrincipal: Role.ADMIN
        AnchorPeers:
            - Host: agent
              Port: 7051
    similarly for the other orgs 

Orderer: &OrdererDefaults
    OrdererType: kafka
    Addresses:
        - orderer:7050
    BatchTimeout: 5s
    BatchSize:
        MaxMessageCount: 30
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB
    MaxChannels: 0
    Kafka:
        Brokers:
            - kafka:9092
    Organizations:


Application: &ApplicationDefaults

    Organizations:
{code}
{code:java}
 OrdererOrgs:
  - Name: Orderer
    Domain: Orderer
    Specs:
      - Hostname: Orderer

PeerOrgs:
  - Name: Peers
    Domain: Peers
    Users:
      Count: 0
similar for other orgs


{code}
Let me know if this highlights anything.

Cheers!;;;","13/Dec/17 11:26 PM;alexanderlhicks;Update: is it possible that the issue stems from docker containers? I use a script to launch my peers rather than a docker container, but it also appears that the containers for my chaincode have no IP address?

 

edit: actually it seems reasonable that the chaincode containers should not have an IP address.;;;","14/Dec/17 11:17 PM;alexanderlhicks;Another update: I suspect it's some form of networking issue, I tried running the ordering service on the same VM as the one I invoked some chaincode with but the same error happened. So I suspect it might have to do with the docker containers? Although there is clearly is some information flowing between then machines, clearly the rpc stream is not going through. Is there any way to try and tweak the container settings with regards to that?;;;","06/Jan/18 10:16 PM;mastersingh24;[~alexanderlhicks]  You can try setting 
{code:java}
CORE_LOGGING_GRPC=debug
{code} for the peer and the cli

and 
{code:java}
ORDERER_LOGGING_GRPC=debug
{code} for the orderer

;;;","08/Jan/18 5:57 AM;alexanderlhicks;[~mastersingh24] Thanks for the suggestion, unfortunately it seems like this doesn't highlight anything new.

The error is still an error reading from the rpc stream which happens when the orderer wants to enqueue the message into the batch, and in the case of a state update when it wants to broadcast the block. Clearly there's an issue with networking/grpc there but nothing shows up with the grpc commands given above. The orderer also clearly receives information about the transactions as it does everything before and after ( ! ) the rpc errors seemingly fine. I'm wondering if it's possibly whatever should be transmitted with grpc that isn't right and causing the rpc stream to not be readable? I've previously tried using different block formats (file/json) but with no success.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: Check if events are delivered succcessfully for Invalid transactions,FAB-7421,25202,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,Ratnakar,Ratnakar,12/Dec/17 4:34 AM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,,,,,,,,,,fabric-quality,,,,0,stale-item,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqo7:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:20 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: confirm that block events on a channel are retrievable even after peer restart,FAB-7422,25203,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,Ratnakar,Ratnakar,12/Dec/17 4:37 AM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,,,,,,,,,,fabric-quality,,,,0,stale-item,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqof:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:20 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Interface Test: confirm that block events on a peer are retrievable, when peer joined the channel late (after several transactions)",FAB-7423,25204,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,Ratnakar,Ratnakar,12/Dec/17 4:40 AM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,,,,,,,,,,fabric-quality,,,,0,stale-item,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqon:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:20 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: multiple clients connect to 1 peer on 1 channel and ensure all the blocks are retrieved  successfully,FAB-7424,25205,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,Ratnakar,Ratnakar,12/Dec/17 4:41 AM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,,,,,,,,,,fabric-quality,,,,0,stale-item,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqov:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:20 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Test: multiple clients connects to 1 peer on two channels and ensure all the blocks are retrieved successfully,FAB-7425,25206,21302,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,Ratnakar,Ratnakar,Ratnakar,12/Dec/17 4:42 AM,23/Jan/20 7:20 AM,28/Oct/23 3:01 AM,23/Jan/20 7:20 AM,,,,,,,,,,fabric-quality,,,,0,stale-item,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqp3:",,,,,,,,,,,,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 7:20 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrating fabric-prototype to fabric-test,FAB-7426,25400,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,12/Dec/17 7:06 AM,21/Jul/18 3:50 AM,28/Oct/23 3:01 AM,13/Jul/18 5:55 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,Integrating fabric-prototype to fabric-test,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzyqpj:",,,,Unset,,,,,,,Unset,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate fabric-prototype to fabric test repository for upgrade feature,FAB-7427,25401,25400,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,12/Dec/17 7:07 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,13/Dec/17 7:33 AM,,,,,,,,,,fabric-quality,,,,0,quality,,,,,,"Submit fabric-prototype to fabric-test repository.

https://gerrit.hyperledger.org/r/#/c/16131/",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqpr:",,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getPemMaterialFromDir does not properly evaluate symlinks,FAB-7428,25402,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sykesm,ysim,ysim,12/Dec/17 7:30 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,12/Jan/18 3:55 AM,v1.1.0,,,,,,v1.1.0,,,fabric-crypto,,,,0,,,,,,,"This issue was discovered while attempting to set up a fabric network using Kubernetes, though I suspect making the requisite changes might be helpful for other deployment setups down the line.

[Kubernetes' Secrets management|https://kubernetes.io/docs/concepts/configuration/secret/] is well-suited to store the crypto material (e.g. the contents of the msp and tls directories) of the various peer/orderer/CA components. However, in Kubernetes, Secrets are made available via symlinks. For instance, this is what the msp/cacerts directory looks like when mounted as a volume populated by Kubernetes secrets:

 
{code:java}
root@orderer:/var/hyperledger/orderer/msp/cacerts# ls -al 
total 4 
drwxrwxrwt 3 root root 100 Dec 11 20:04 . 
drwxr-xr-x 7 root root 4096 Dec 11 20:04 .. 
drwxr-xr-x 2 root root 60 Dec 11 20:04 ..129812_11_12_20_04_36.809431284 
lrwxrwxrwx 1 root root 33 Dec 11 20:04 ..data -> ..129812_11_12_20_04_36.809431284 
lrwxrwxrwx 1 root root 31 Dec 11 20:04 ca.example.com-cert.pem -> ..data/ca.example.com-cert.pem
{code}
The problem is that getPemMaterialFromDir does not traverse symlinks, and if it does, it should also check that the source of the symlink is not a directory. In other words, it should only read from regular files and links to regular files.

This change would make deploying the fabric network using Kubernetes a lot smoother.

 ",,elli-androulaki,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,0,,0%,3600,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqpz:",,,,,,,,,,,,,,,,,,,,,,elli-androulaki,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Dec/17 12:12 AM;mastersingh24;https://gerrit.hyperledger.org/r/16133;;;","09/Jan/18 3:14 AM;elli-androulaki;Hi, I updated its Fix-version to 1.1 best effort :);;;","11/Jan/18 12:46 AM;sykesm;After looking at the CR for a few minutes, I'm confused. The original issue implies that secrets management did not work because of symlinks.

Prior to any changes, the code would issue a warning when readPemFIle failed but it would carry on enumerating over the rest of the directory entries. That means if we try to read from a symlink to a dir, the operation will fail but it's non-fatal.

Since ioutil.ReadDir is using os.Lstat under the covers[1], the IsDir check done at the top of the loop will return false for links to directories. Given how the loop is coded, this means we'll attempt to read the link as a cert, fail, and create some noise, but it should still read and resolve the file.

At the end of the day, I think we're just trying to avoid the warning message.

[1]: https://github.com/golang/go/blob/release-branch.go1.9/src/os/dir_unix.go#L27;;;","11/Jan/18 1:36 AM;sykesm;Possible alternative to 16133: https://gerrit.hyperledger.org/r/16735;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix Readme for feature-upgrade,FAB-7430,25404,25400,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,12/Dec/17 9:43 AM,20/Jul/18 11:15 PM,28/Oct/23 3:01 AM,19/Dec/17 4:35 AM,,,,,,,v1.1.0,,,fabric-quality,,,,0,,,,,,,"README requires editing, since we moved/copied it over into fabric-test/feature-upgrade

https://gerrit.hyperledger.org/r/#/c/16165/",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzyqq7:",,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
