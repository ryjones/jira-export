Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Issue split),Inward issue link (Issue split),Outward issue link (Issue split),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Remove request inspection and processing from the hot path in the Broadcast function,FAB-1000,13331,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,07/Nov/16 1:05 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,20/Nov/16 1:12 AM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-819,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx95r:",,,,,,Sprint 5 - Consensus,,,,,,,,,,,,,0.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Nov/16 1:12 AM;kchristidis;No longer relevant, I have a design (and finishing a changeset) that uses common components (for both the solo and kafka packages) to take care of that. Setting to 0 points and marking as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove membership services from fabric repo,FAB-1001,13332,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Nov/16 1:31 AM,05/Dec/18 5:49 AM,28/Oct/23 2:57 AM,09/Nov/16 9:11 PM,,,,,,,,,0,,,,,,,,,"For Fabric v1, the artist known as membership services is now in its own repository (fabric-cop).
Need to remove membership services from the master branch of the fabric repository",,inatatsu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";09/Nov/16 9:10 PM;mastersingh24;18000",57600,0,18000,31%,64800,7200,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxe6f:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,inatatsu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Nov/16 8:59 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/2273/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove / comment out any code which calls membersrvc package,FAB-1002,13333,13332,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Nov/16 2:03 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,09/Nov/16 9:11 PM,,,,,fabric-peer,,,,0,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe6n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove membersrvc code from repo,FAB-1003,13334,13332,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Nov/16 2:03 AM,05/Dec/18 5:49 AM,28/Oct/23 2:57 AM,09/Nov/16 9:11 PM,,,,,,,,,0,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe6v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"remove membersrvc ""bootstrap"" code from peer",FAB-1004,13335,13332,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Nov/16 2:04 AM,05/Dec/18 5:49 AM,28/Oct/23 2:57 AM,09/Nov/16 9:11 PM,,,,,,,,,0,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe73:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove membersrvc client code from crypto package,FAB-1005,13336,13332,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Nov/16 2:05 AM,05/Dec/18 5:49 AM,28/Oct/23 2:57 AM,09/Nov/16 9:11 PM,,,,,,,,,0,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe7b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Retrieve Docker container logs from failed chaincode deployments,FAB-1006,13337,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mastersingh24,mastersingh24,07/Nov/16 9:42 PM,05/Sep/20 1:44 AM,28/Oct/23 2:57 AM,14/Oct/17 3:00 AM,,,,,fabric-peer,,,,0,chaincode,Usability,,,,,,,"There are a number of cases where the peer is able to create chaincode containers and then attempts to start them.  However, if the chaincode container fails to communicate with the peer within a specified timeout, the peer considers the deployment to be a failure and will actually attempt to delete the container.   When this happens, access to the container logs is lost and it is difficult to debug what cause the communication error.

It should be possible to use the remote API to retrieve the logs (if they exist) prior to deleting a container.  This would greatly improve usability and help with operations",,ChristopherFerris,k93uwmrkxc3j5fr78wy7myj8k76p9c,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxe7j:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,k93uwmrkxc3j5fr78wy7myj8k76p9c,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 3:00 AM;ChristopherFerris;closing, please reopen if still relevant;;;","04/Sep/20 4:08 AM;k93uwmrkxc3j5fr78wy7myj8k76p9c;[~ChristopherFerris]

Edit: Oops, just figured out that the peer dumps the chaincode container's logs to it's own logs, so that gave me the info I needed to debug properly. Sorry for the bother.

-I'm struggling with the exact same problem, the most information I get is that the container exited with code 0 and it all happens in about 1 or 2 seconds so I just cannot type fast enough to do a `docker logs ...` on the terminal because the container gets deleted right away. This is on Fabric v1.4.8.-;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an application developer I want to define an interface for an application library to offer invocation access management of chaincode logic.,FAB-1007,13338,13136,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,07/Nov/16 10:32 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,23/Feb/17 6:54 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,,,elli-androulaki,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe7r:",,,,,,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 12 - Crypto,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an application developer I want to implement an application library offering basic invocation access control capabilities on application chaincodes,FAB-1008,13339,13136,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,07/Nov/16 10:34 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,06/Jul/18 10:47 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,At a first stage this can be attribute-based invocation access control policies.,,elli-androulaki,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe7z:",,,,,,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 12 - Crypto,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer I want to document a replay attack protection mechanism on all types of protocol messages.,FAB-1009,13340,12885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,07/Nov/16 10:37 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,31/Jan/17 6:13 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe87:",,,,,,Sprint 6 - consensus,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 11 - Crypto,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer i want to document the high-level sequence of operations for channel ACL,FAB-1010,13341,12935,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,elli-androulaki,elli-androulaki,07/Nov/16 10:47 PM,23/Jan/20 3:40 AM,28/Oct/23 2:57 AM,23/Jan/20 3:40 AM,,,,,,,,,0,stale-item,,,,,,,,"Describe what information needs to be specified at bootstrap time, what policies to be supported after bootstrap for (channel) configuration changes, etc.",,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/16 10:48 PM;elli-androulaki;multi-channel-ACL-v6.pdf;https://jira.hyperledger.org/secure/attachment/10219/multi-channel-ACL-v6.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe8f:",,,,,,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:40 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer I want to specify the channel ACL related interfaces,FAB-1011,13342,12935,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,07/Nov/16 10:48 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,06/Jul/18 10:46 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe8n:",,,,,,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setup Jenkins job for fabric-cop repository,FAB-1012,13343,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Nov/16 11:40 PM,13/Nov/18 3:13 PM,28/Oct/23 2:57 AM,08/Nov/16 11:18 PM,,,,,,,,08/Nov/16 12:00 AM,0,build-system,,,,,,,,"As requested by [~smithbk], setup Jenkins job for fabric-cop repository. ",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe8v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/16 6:39 AM;rameshthoomu;Patch has been created and submitted for review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Turn validated new-chain configuration envelope into proper genesis block,FAB-1013,13344,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,kchristidis,kchristidis,08/Nov/16 2:16 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,21/Nov/16 12:52 AM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"The ordering node should be able to turn a validated new-chain configuration envelope into a proper genesis block. The ordering logic will then be able to get that block directly and push it to the new chain, and also set-up all the related logic (cutBlock goroutine, etc.) based on the parameters extracted from that genesis block (batchTimeout, batchSize), etc.",,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-819,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-686,,,,,,,,,"1|hzx8e7:",,,,,,Sprint 5 - Consensus,,,,,,,,,,,,,0.0,,,,,,,,,,,,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/16 11:09 PM;tuand;This is similar to what I'm trying to do with FAB-665 and FAB-666 ? We have a tool that creates the genesis block and writes to a file.

I'm updating the orderer to then read that file, pull out and apply configuration items then write the block to the chain.;;;","10/Nov/16 12:31 AM;kchristidis;I haven't reviewed your changeset yet, but the genesis block tool gets certificate files and config parameters written in a file (I guess) as inputs, and outputs a block and the hash. (Let me know if my understanding is way off.)

What I'm looking for here is a function (not a script) that gets, a ConfigurationEnvelope (specifically, not certs and config files) as input and outputs a genesis block (as a data structure, in memory, no write-to-file) needed.

These look like two different things to me, but let me know if you think I'm wrong.;;;","10/Nov/16 2:04 AM;tuand;in my https://gerrit.hyperledger.org/r/#/c/2259 changeset,  method serializeBlock() does exactly that.  I would have to reorganize it a bit to get input/output right but the code is there.;;;","11/Nov/16 4:39 AM;kchristidis;Right, I see the overlap now.

Please note that we'll need this function exported so that the broadcast code (https://gist.github.com/kchristidis/72b957547489e2331e8dbb346cb65a00#file-broadcast-go-L236) can call it.

It may also make sense to rename the function accordingly and/or modify your interfaces and/or move it to the orderer's common package.

;;;","21/Nov/16 12:52 AM;kchristidis;Now that the flow becomes clearer, we can abandon this. The incoming chain-creation configuration transaction itself will be the genesis block for the new chain, so no extra logic needs to be added. Setting to 0 story points and marking as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gopath and goroot errors while executing make cop in fabric-cop repository,FAB-1014,13345,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,rameshthoomu,rameshthoomu,08/Nov/16 3:12 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,08/Nov/16 3:47 AM,,,,,,,,,0,,,,,,,,,"I have followed the cop readme documentation and executed `make cop`. Observed below error from fabric-cop repository.

vagrant@hyperledger-devenv:v0.1.0-8e94f33:/opt/gopath/src/github.com/hyperledger/fabric/fabric-cop$ make
Checking go files for license headers ...
All go files have license headers
Building cop in bin directory ...
cop.go:43:2: cannot find package ""github.com/hyperledger/fabric-cop/cli/cop/client/enroll"" in any of:
        /opt/gopath/src/github.com/hyperledger/fabric/fabric-cop/vendor/github.com/hyperledger/fabric-cop/cli/cop/client/enroll (vendor tree)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-cop/cli/cop/client/enroll
        /opt/go/src/github.com/hyperledger/fabric-cop/cli/cop/client/enroll (from $GOROOT)
        /opt/gopath/src/github.com/hyperledger/fabric-cop/cli/cop/client/enroll (from $GOPATH)
cop.go:44:2: cannot find package ""github.com/hyperledger/fabric-cop/cli/cop/client/register"" in any of:
        /opt/gopath/src/github.com/hyperledger/fabric/fabric-cop/vendor/github.com/hyperledger/fabric-cop/cli/cop/client/register (vendor tree)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-cop/cli/cop/client/register
        /opt/go/src/github.com/hyperledger/fabric-cop/cli/cop/client/register (from $GOROOT)
        /opt/gopath/src/github.com/hyperledger/fabric-cop/cli/cop/client/register (from $GOPATH)
cop.go:45:2: cannot find package ""github.com/hyperledger/fabric-cop/cli/cop/server"" in any of:
        /opt/gopath/src/github.com/hyperledger/fabric/fabric-cop/vendor/github.com/hyperledger/fabric-cop/cli/cop/server (vendor tree)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-cop/cli/cop/server
        /opt/go/src/github.com/hyperledger/fabric-cop/cli/cop/server (from $GOROOT)
        /opt/gopath/src/github.com/hyperledger/fabric-cop/cli/cop/server (from $GOPATH)
cop.go:46:2: cannot find package ""github.com/hyperledger/fabric-cop/cli/cop/server/tcert"" in any of:
        /opt/gopath/src/github.com/hyperledger/fabric/fabric-cop/vendor/github.com/hyperledger/fabric-cop/cli/cop/server/tcert (vendor tree)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-cop/cli/cop/server/tcert
        /opt/go/src/github.com/hyperledger/fabric-cop/cli/cop/server/tcert (from $GOROOT)
        /opt/gopath/src/github.com/hyperledger/fabric-cop/cli/cop/server/tcert (from $GOPATH)
make: *** [cop] Error 1",,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe93:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/16 3:38 AM;mastersingh24;I think this assumes you already have GOPATH and GOROOT set and that the code has been cloned properly into GOPATH/src.  {{make}} and {{make cop}} both seem to work for me;;;","08/Nov/16 3:54 AM;rameshthoomu;[~keithsmith] fabric-cop repository should be in hyperledger directory. I have cloned this in fabric directory and observed the mentioned error. So, we have to clone fabric-cop in hyperledger directory. Closing this issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable cobertura code coverage report in CI for fabric-cop repository,FAB-1015,13346,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,08/Nov/16 5:08 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,28/Dec/16 12:58 AM,,,,,,,,,0,build-system,,,,,,,,Enable cobertura code coverage report in CI for fabric-cop repository.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxe9b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/16 7:41 AM;rameshthoomu;Added Cobertura Coverage report in Sandbbox Jenkins CI. Will submit patch after merge of this patch https://gerrit.hyperledger.org/r/#/c/2417/;;;","17/Nov/16 12:26 AM;rameshthoomu;Patch has been submitted;;;","28/Dec/16 12:58 AM;rameshthoomu;Cobertura coverage reported implemented for fabric-cop repository https://jenkins.hyperledger.org/view/fabric-cop/job/fabric-cop-verify-x86_64/214/cobertura/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip communication layer send buffers,FAB-1016,13347,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Nov/16 5:56 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,08/Nov/16 4:15 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"We Need to add send buffers to gossip comm layer.
Currently the send is used by queue-ing a goroutine, which doesn't preserve FIFO order (due to not having scheduling guarantees) and also may stack too much goroutines.

This also contains a small but important fix to the handshake test in the comm tests, that sometimes fails the test. 
",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzx8jj:",,,,,,Sprint 4 - Gossip,Sprint 5 - gossip,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Identify and write System and Feature tests with a backend support structure for future tests,FAB-1017,13348,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,bmos299,scottz,scottz,08/Nov/16 6:02 AM,01/Aug/19 10:09 AM,28/Oct/23 2:57 AM,01/Aug/19 10:09 AM,,,v1.0.0,,fabric-quality,,,,1,quality,,,,,,,,"TEAM:
Read all these architecture and design docs, and discuss each one amongst the team at regular review meetings.
 [https://wiki.hyperledger.org/community/fabric-design-docs]
Determine what and how to test v1.0 fabric. (all - breakdown by component endorsers, committers, consenter/orderers, ledger, SDKs, etc.)
Get the current fabric v1.0 testbed running on our laptops with correct readme instructions (Ratnakar and Barry).

Catchup phase: Examine stories completed to date in each component area to identify missing feature tests, and work with developers to identify use-cases and write baseline feature file tests using gherkin language.

Backend utilities for functions that drive the feature files will be identified and written as needed. When writing the underlying code behind the feature files, certain details of implementation should be understood and used, but this should not stop the initial setup of the tests.

Functional and behavior driven tests should be written based on the understanding of a fabric requirement (story) and not on the implementation of the requirement. These and future tests can then be executed to verify that the implementation was completed as expected.

These stories should cover existing behavior and allow for the basic setup of functional and behavior tests for the Hyperledger Fabric project.

Components for focused testing of configuration and operation may include (but may not be limited to) the following:
 * COP
 * Orderer
 * Endorser
 * Gossip
 * MSP
 * Peer
 * Ledgers",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3280,,,FAB-3504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-3,,create functional and system tests,To Do,,,Unset,,,,"1|hzx30v:",,,,Unset,Unset,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,Sprint 18 - Quality,Sprint 19 - Quality,,,,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Dec/16 2:19 AM;latitiah;Moving forward: Developers will ensure that the stories will contain a general description of the scenario that they are working on. Testers should work with developers to expand the feature file tests as needed.;;;","28/Apr/17 8:21 AM;scottz;This v1.0 testplan guide may be useful:
https://docs.google.com/spreadsheets/d/1_IdXCuYMKkqXr3Za0pVnFP3sP1jBcNbYnTJGV-nSkxI/edit#gid=442991954;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip MultiChannel Support API,FAB-1018,13349,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Nov/16 6:20 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,28/Dec/16 6:37 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 2:55 AM;C0rWin;Screen Shot 2016-11-10 at 12.55.29.png;https://jira.hyperledger.org/secure/attachment/10223/Screen+Shot+2016-11-10+at+12.55.29.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzx83r:",,,,,,Sprint 4 - Gossip,Sprint 5 - gossip,Sprint 6 - Gossip,Sprint 7 - Gossip,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add unit tests for ledger applications on Fabric 1.0,FAB-1019,13350,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,Nishi,Nishi,08/Nov/16 6:34 AM,21/Jul/18 3:55 AM,28/Oct/23 2:57 AM,10/Jul/18 3:23 AM,,,v1.0.0,,fabric-quality,,,,0,Ledger,quality,,,,,,,Add unit tests to example.go application in ledger examples.,,ChristopherFerris,inatatsu,Nishi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-758,,,,,,,,,"1|hzx2wv:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,2.0,Unset,,,,,,,,,,,ChristopherFerris,inatatsu,Nishi,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Dec/16 6:34 AM;Nishi;Test code failed on assertion when testing tryDoubleSpend() function in ""/github.com/hyperledger/fabric/core/ledger/kvledger/examples/accounts""
Submitted a patchset in Gerrit and code is under review by Dave.
;;;","25/Apr/17 10:32 PM;ChristopherFerris;I can find no CRs that match this. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration system chaincode,FAB-1020,13351,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,binhn,binhn,binhn,08/Nov/16 7:35 AM,21/Jul/18 3:56 AM,28/Oct/23 2:57 AM,17/Dec/16 11:17 AM,,,,,fabric-peer,,,,0,Endorser,,,,,,,,"We need to process CONFIGURATION transactions from orderer (not from client as in transaction proposals). We need to convert configuration items into a write-set for ledger to commit to the datastore. The configuration data will be cached in the state db.

This chaincode also provides query functions to access configuration. It also process join channel request from client.",,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1022,FAB-1023,FAB-1024,FAB-1025,FAB-1033,FAB-497,FAB-495,FAB-1378,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-757,,,,,,,,,"1|hzxe9r:",,,,Unset,,Sprint 6 - Endorser,Sprint 7 - Endorser,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Associate a transaction type with a system chaincode,FAB-1021,13352,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,binhn,binhn,08/Nov/16 7:51 AM,12/Jul/19 8:32 PM,28/Oct/23 2:57 AM,12/Jul/19 8:32 PM,,,Future,,fabric-peer,,,,0,Endorser,,,,,,,,"A transaction type can be handled by a system chaincode so that a custom type may be associated with a system chaincode to be called when the transaction is to be validated and committed to the ledger. The association is defined as part of the system chaincode configuration data (call this chaincode for this transaction type).

Example is the Configuration System Chaincode (CSCC), which is called for every CONFIGURATION transaction.",,binhn,muralisr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1038,,,,,,,,,,,,FAB-2440,,,FAB-1152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-757,,,,,,,,,"1|hzx89r:",,,,Unset,,Sprint 5 - Endorser,Sprint 6 - nodeSDK,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,muralisr,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 1:20 AM;muralisr;[~binhn] added this to the rework comitter JIRA FAB-1038 assuming you are ok with this.

Also added Sprint 5. Once you have the CSCC, this is just the committer calling the CSCC based on the transaction type. The CSCC itself will do the rest of the configuration work.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Call gossip when a peer join channel,FAB-1022,13353,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,binhn,binhn,binhn,08/Nov/16 8:02 AM,03/Dec/20 10:44 PM,28/Oct/23 2:57 AM,06/Jul/18 10:49 PM,,,Future,,fabric-peer,,,,0,Endorser,,,,,,,,Client calls CSCC to tell the peer to join a channel. The parameter contains the channel genesis block. CSCC then calls gossip to join the channel gossip group,,binhn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1547,FAB-1580,,,,,,,FAB-1020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeaf:",,,,,,Sprint 6 - Endorser,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,binhn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/golang.org/x/crypto-0.1.0,release-2.5,release-2.4,dependabot/go_modules/test/performance/golang.org/x/net-0.7.0,dependabot/go_modules/golang.org/x/net-0.7.0,main,dependabot/go_modules/github.com/prometheus/client_golang-1.11.1,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Jan/17 2:17 AM;muralisr;moved it to in progress to complete the hook up. The ""call gossip from CSCC"" is indeed complete. However the gossip needs to be hooked up to the orderer to enable transaction flows.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Commit configuration block to ledger,FAB-1023,13354,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,binhn,binhn,08/Nov/16 8:07 AM,12/Jul/19 8:34 PM,28/Oct/23 2:57 AM,12/Jul/19 8:34 PM,,,Future,,fabric-peer,,,,0,Endorser,,,,,,,,Parse configuration block and create a write-set containing the configuration items such that the ledger can store and index the configuration transaction.,,binhn,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx89z:",,,,,,Sprint 5 - Endorser,Sprint 6 - nodeSDK,,,,,,,,,,,,,,,,,,,,,,,,binhn,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/19 8:34 PM;mastersingh24;not the way it works although config blocks are stored on the ledger of course;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query members of a chain,FAB-1024,13355,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,binhn,binhn,08/Nov/16 8:10 AM,12/Jul/19 8:35 PM,28/Oct/23 2:57 AM,12/Jul/19 8:35 PM,,,Future,,fabric-peer,,,,0,Endorser,,,,,,,,Provide a query function on the CSCC to return the members of a chain specified in the parameter so that the authorized applications may learn about who are in the channel,,binhn,Clayton Sims,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7i7:",,,,,,Sprint 6 - Endorser,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,Sprint 12 - Endorser,Sprint 13 - Endorser,Sprint 14 - Endorser,,,,,,,,,,,,,,,,,binhn,Clayton Sims,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 6:16 AM;denyeart;[~muralisr][~binhn]
Is this item still needed for v1.0?;;;","06/Apr/17 10:46 PM;Clayton Sims;[~binhn] moving to post v1.  wanted to confirm with you.;;;","12/Jul/19 8:35 PM;mastersingh24;this should not be a peer API ... this info can be parsed from a config block ... user linkable library should be provided to parse config block;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query configuration block of a chain,FAB-1025,13356,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,binhn,binhn,binhn,08/Nov/16 8:13 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,17/Dec/16 11:15 AM,,,,,fabric-peer,,,,0,Endorser,,,,,,,,Implement a function on CSCC to return the current configuration block so that the application may modify and resubmit a new configuration.,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxea7:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip discovery tests CC improvements,FAB-1029,13360,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,08/Nov/16 5:25 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,08/Nov/16 6:18 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"current discovery module tests have only 70% CC.
I improved them to have 84% CC.

Commit id: fe4a4c992a63884a0c013f066c373d52bd0d8e81
https://gerrit.hyperledger.org/r/#/c/2281/",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxebb:",,,,,,Sprint 5 - gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade CI's Go to 1.7,FAB-1031,13362,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,09/Nov/16 12:47 AM,21/Jul/18 3:54 AM,28/Oct/23 2:57 AM,25/Nov/16 12:47 PM,,,,,,,,,0,,,,,,,,,"Creating this issue and (adding myself as a watcher) so that I don't have to bug Ry to see when the upgrade will happen.

I'd like to see the CI getting upgraded for two reasons:

# t.Run: support for sub-tests was added in 1.7 (and I'm using it for the Kafka orderer)
# context: the location of the package changed from 1.6 to 1.7",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1368,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxebr:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK tells peers to join a channel,FAB-1033,13364,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,binhn,binhn,09/Nov/16 1:13 AM,12/Jul/19 8:05 PM,28/Oct/23 2:57 AM,12/Jul/19 8:05 PM,,,v1.0.0,,,,,,0,node-sdk,,,,,,,,"SDK should provides a function ""JoinChannel"" for the application to call. The parameters should include a hash of the genesis block and a list of peers belonging to the channel.

In turns, SDK send TX Proposal to each peer invoking CSCC.joinChannel, passing the genesis block hash and the list of peers.

See this document for an overview of the interactions among the various roles (app, SDK, orderer, peer): https://docs.google.com/document/d/1R5RtIBMW9fZpli37E5Li5_Q9ve3BnQ4q3gWmGZj6Sv4/edit#",,binhn,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-690,,,,,,,,,"1|hzx8yf:",,,,,,Sprint 7 - nodeSDK,,,,,,,,,,,,,4.0,,,,,,,,,,,,binhn,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 1:55 AM;ChristopherFerris;[~jimthematrix@gmail.com] is this still relevant? Seems like it is existing capability and this can be closed (and its sub-task) ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement mapping of peer certificate to PKI-ID,FAB-1034,13365,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ellaki,yacovm,yacovm,09/Nov/16 2:24 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,09/Apr/17 8:18 PM,,,,,,,,,0,,,,,,,,,"The gossip uses PKI-ID to authenticate between peers.
In 0.5 it was simply the hash of the cert given by the membership service.
Now it is no more, but the gossip layer still needs a PKI-ID, so I'd like a method that deterministically and w.h.p without collisions maps a certificate to a PKI-ID.

Many thanks in advance.


I created the following JIRA item on our side:
https://jira.hyperledger.org/browse/FAB-1047",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxec7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"move fabric specific protos to use ""peer"" folder",FAB-1035,13366,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,09/Nov/16 2:36 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,12/Nov/16 5:53 AM,,,,,fabric-peer,,,,0,Endorser,,,,,,,,"A series of work consolidating protos has been submitted to fabric
# https://gerrit.hyperledger.org/r/#/c/2081/ - first version of new fabric/protos
# https://gerrit.hyperledger.org/r/#/c/2075/ - creation of higher level proto structures such as Envelope 
# https://gerrit.hyperledger.org/r/#/c/2337/ - consolidation of protos from orderer into fabric/protos/orderer and the creation of a common protos into fabric/protos/common

As the next step
* we need to move remained of protos (endorser specific) into fabric/protos/peer
* cleanup unwanted protos

The final step would be to get rid of old Transaction and Block type so we don't need Transaction2 and Block2. This will be done in a future task as they involve deeper cleanup in chaincode and ledger respectively. 

We likely don't need the old Message at all. That may be one ""cleanup"" we could do as part of this task.
",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-631,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxecf:",,,,,,Sprint 5 - Consensus,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ledger consistent simulation (Block height option): As a consumer or ledger APIs (endorser), I want to perform proposal simulation using a consistent view of ledger state",FAB-1036,13367,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,09/Nov/16 2:58 AM,23/Jan/20 3:41 AM,28/Oct/23 2:57 AM,23/Jan/20 3:41 AM,,,Future,,fabric-ledger,,,,0,Ledger,stale-item,,,,,,,"Consistent reads has been implemented by using locks between readers and writers.  This task would implement consistent reads by using block height approach, so that reads and writes can occur in parallel.",,denyeart,grapebaba,inatatsu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-442,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-758,,,,,,,,,"1|hzwtok:",,,,Unset,,,,,,,,,,,,,,,4.0,Unset,,,,,,,,,,,denyeart,grapebaba,inatatsu,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:41 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rework committer to be more general,FAB-1038,13369,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,binhn,binhn,09/Nov/16 3:18 AM,21/Jul/18 3:55 AM,28/Oct/23 2:57 AM,31/Jan/17 11:25 PM,,,,,fabric-peer,,,,0,endorser,,,,,,,,"The committer currently only works with solo to support the skeleton path. We need to generalize it with the following:

# As an object to be instantiated by the gossip to handle incoming blocks on a channel (1 committer object per channel)
# Process block of transactions, where each transaction type associated with a system chaincode, call the system chaincode to process the transaction (the association is declared in the yaml system chaincode section)
# For CHAINCODE type, call the chaincode's VSCC to validate the transaction
# Handle invalid transactions (have a policy on whether to store or not;  default is not to store)
# Commit block to ledger
# Emit events if any

We probably need a queue here to hold the blocks to be processed.",,binhn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1021,FAB-187,FAB-1384,FAB-1533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/16 7:37 AM;muralisr;Gossip committer flows.png;https://jira.hyperledger.org/secure/attachment/10247/Gossip+committer+flows.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-37,,,,,,,,,"1|hzx7tj:",,,,Unset,,Sprint 5 - Endorser,Sprint 6 - nodeSDK,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,Sprint 10 - Endorser,,,,,,,,,Unset,,,,,,,,,,,binhn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Dec/16 7:37 AM;muralisr; !Gossip committer flows.png|thumbnail! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer administration: Ledger rebuild state and indexes from block storage - test and document,FAB-1039,13370,,Story,To Do,FAB,Fabric,software,denyeart,,,Highest,,Senthil1,denyeart,denyeart,09/Nov/16 4:09 AM,07/Feb/20 4:48 AM,28/Oct/23 2:57 AM,,,,v2.1.0,,fabric-ledger,,,,0,Ledger,,,,,,,,"If the blockstorage indexes and/or state database gets corrupted, we need to rebuild from the blockstorage on the file system.
",,denyeart,inatatsu,mplisov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14592,,,,FAB-609,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzwqrk:5iwr4rb0zz",,,,Unset,,,,,,,,,,,,,,,4.0,Unset,,,,,,,,,,,denyeart,inatatsu,mplisov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,release-1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Mar/18 10:44 PM;denyeart;[~manish-sethi] Anything remaining to do here in terms of test?

We'll also need to document what can be dropped/rebuilt.;;;","12/Mar/19 11:11 AM;denyeart;Note that as of v2.0, when dropping statedb to rebuild, the redo logs will also need to be dropped. For more context see {color:#444444}FAB-14592{color}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Error getting tx(proto: bad wiretype for field protos.Transaction2.Version: got wiretype 2, want 0)...dropping block",FAB-1040,13371,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,muralisr,denyeart,denyeart,09/Nov/16 4:24 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,10/Nov/16 2:13 AM,,,,,,,,,0,,,,,,,,,"Upon receiving a block from ordering service, committer peer throws error message:
Error getting tx(proto: bad wiretype for field protos.Transaction2.Version: got wiretype 2, want 0)...dropping block

It looks like proto block definition was refactored, and committer peer needs corresponding changes.",,denyeart,nikileshsa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxalb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,nikileshsa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[node-SDK]  Remove hard coded addresses, passwords, etc from unit tests",FAB-1041,13372,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jjjjibm,jjjjibm,jjjjibm,09/Nov/16 4:51 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,10/Jul/18 3:23 AM,,,v1.0.0,,fabric-quality,,,,0,node-SDK,quality,,,,,,,"1.sdk/node/test/unit test cases make liberal use of hard coding in ways that make these tests difficult to execute on nonVagrant platforms such as HSBN and Bluemix.

Examples:
chain.setMemberServicesUrl('grpc://localhost:7054');  <-- hard coded protocol, address, and port
 chain.enroll('admin', 'Xurw3yU9zI0l') <--- hard coded password

2.Key value stores are named randomly, which makes it hard for automation to clean up prior to execution:

Examples: 
var keyValStorePath = path.join(getUserHome(), 'kvsTemp');
headless-tests.js:var keyValStorePath1 = 'tmp/keyValStore1';  <-- project directory not /tmp
headless-tests.js:var keyValStorePath2 = '/tmp/keyValStore2';
headless-tests.js:var keyValStorePath3 = '/tmp/keyValStore3';
headless-tests.js:var keyValStorePath4 = '/tmp/keyValStore4';  <-- arbitrary names

3.Test cases need to be sensitive to the possibility TLS is enabled.  

Example of correct test: 

//
// Configure the test chain
//
if (tutil.tlsOn) {               <=== checks for TLS 
    // set up test case for TLS enabled
}
else {
     // set up test case for TLS disabled
}



",,bmos299,ChristopherFerris,jjjjibm,v_thirugnanam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2zr:",,,,,,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,,,,,,,,,,,,bmos299,ChristopherFerris,jjjjibm,v_thirugnanam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 2:25 AM;ChristopherFerris;[~bmos299] this seems like there should be lots of discrete fixes submitted as change requests, yet while it says in progress, hard to tell that any progress has been made.;;;","14/Apr/17 12:35 AM;bmos299;Thanks Chris.  We will update. ;;;","17/Apr/17 1:15 PM;jimthematrix;it's a worthy task and we'd like to get to it by the end of v1.0 for sure. but it's definitely not of ""Highest"" priority. Lowering to ""Medium"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a sample program similar to end-to-end.js in NodeSDk using FabricV1.0,FAB-1043,13374,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,09/Nov/16 8:47 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,11/Nov/16 1:32 AM,,,,,fabric-quality,,,,0,Quality,,,,,,,,"Create a sample program to use FabricV0.1 using NodeSDk.
Also make sure quality team can have the similar environment and execute the tests.",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1059,,,,,,,,,"1|hzx8zb:",,,,,,Sprint 5 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 1:31 AM;Ratnakar;Made the changes and pushed to my github repo

Sample program works when switched to old commit , where membersrvc exists
*git checkout reset --hard 0edd927*

Refer the code here

{panel}
https://github.com/ratnakar-asara/fabric-sdk-node.
{panel}


Once *orderer* *peer* and *membersrvc* containers started  use the below command to run the program


*node hello-world-ui.js*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor and generalize gossip message handling mechanism,FAB-1045,13376,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yacovm,yacovm,09/Nov/16 4:59 PM,30/Jul/19 11:59 AM,28/Oct/23 2:57 AM,30/Jul/19 11:59 AM,,,Future,,fabric-gossip,,,,0,gossip,,,,,,,,"Currently the message handling mechanism in gossip handles data blocks and alive messages differently, and gossip pull mechanism can only pull data blocks.

This might needs to be generalized to support a various set of message types, such as validations (for raw ledger blocks), etc. ",,C0rWin,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx70f:",,,,,,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,,,,,,,,,,,,C0rWin,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Apr/17 7:29 PM;yacovm;The missing thing here is generalization of mutable entities, as immutable entities are generalized via the pull module. 
[~C0rWin] Do we want to do this for GA? ;;;","10/Apr/17 6:59 AM;C0rWin;I think we'd better move it to post GA.;;;","30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip remote peer authentication certificate learning,FAB-1046,13377,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,09/Nov/16 5:07 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,18/Dec/16 10:42 PM,,,,,,,,,0,,,,,,,,,"The current gossip component assumes the upper layers are able to fetch each remote peer's certificate by its corresponding PKI-ID (i.e hash of the cert), this is true for 0.5 but this might not be the case in v1, so this mechanism needs to be changed in the following way:

* The certificate is going to be passed in the gossip handshake along with the PKI-ID and the certificate is going to be hashed and compared to the PKI-ID the remote peer claims to be.
* The certificate is going to be cached locally in a crypto module which will be a new module of the gossip component that'll invoke methods passed from upper layers (i.e- the peer's native crypto methods) with the parameters of the in-memory certificate cache. In example- it'll invoke 
{code:java}
verify(certificate, sig, text) 
{code}
where *verify* is a method from the peer's crypto module, but *certificate*, *sig*, *text* are parameters fetched from the gossip layer.

* Whenever the gossip layer of a peer learns of a peer it doesn't have a certificate of, it'll initiate a handshake with it to learn about it. 


 [~mastersingh24] ,  [~adc] , [~ellaki] , [~ales] --> your comments are welcome!
",,ales,elli-androulaki,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxedr:",,,,,,Sprint 5 - gossip,,,,,,,,,,,,,,,,,,,,,,,,,ales,elli-androulaki,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/16 7:24 PM;ales;Hi Yacov, thanks for sharing. Let me ask you a one question that should help me understand the scenario a bit better: why are PKI-IDs still needed? If you the remote peer always initiates a TLS connection and they always present a TLS certificate (which is automatically validated for you by the TLS layer). what is the use of the PKI-ID?

Also, the TLS provider needs some work - its CA list should be updated as the config is updated (both locally for the peer only - e.g. rekeying) or globally through the ledger (e.g. cert. expiration). Do you know whether this is already in place? If not (or if you don't know), could you please let me know who's taking care of that?

Thanks!
Ale;;;","10/Nov/16 8:21 PM;yacovm;{quote}why are PKI-IDs still needed{quote}
we need them to identify a peer. We periodically send messages with the peer's identity. I don't want to send the whole certificate each time, so I'd rather send the hash of it, or any other []byte that deterministically and collision-free identifies the peer's cert.

{quote}If you the remote peer always initiates a TLS connection and they always present a TLS certificate (which is automatically validated for you by the TLS layer). what is the use of the PKI-ID?{quote}
That assumption is wrong. The gossip layer doesn't assume anything of this kind. We're doing a challenge-response handshake in the application layer using the certificate. 
The PKI-ID is used for the peer to identify itself to a different peer. 

{quote}Also, the TLS provider needs some work - its CA list should be updated as the config is updated (both locally for the peer only - e.g. rekeying) or globally through the ledger (e.g. 
cert. expiration). Do you know whether this is already in place? If not (or if you don't know), could you please let me know who's taking care of that?{quote}
You should read the follow-up on slack:
https://hyperledgerproject.slack.com/archives/fabric-crypto/p1478623733002108
TLDR- this is how this is going to work:
When I connect to remote peer I send him my certificate and my PKI-ID. He translates the certificate to the PKI-ID based on the function you'll provide (I assume it'll simply hash fields of the certificate) and will put this certificate into a local in-memory cache. Whenever the peer gets a message with a PKI-ID it doesn't know, it attempts to reach that peer and to handshake with it too, resulting in the peer's certificate added to its cache. 

;;;","11/Nov/16 3:29 AM;elli-androulaki;Hi, thanks Yacov for sharing. 

So, is there a reason why you chose the hash of the certificate as its identifier and not something else? E.g., some identity that is guaranteed inside the certificate to be unique?
Also, how do you get the list of certificates of the rest of the gossip peers? Is it through genesis block that you are given the list of available gossip peer certificates?

In general I see how the gossip peer network could have its own MSP as the one defined here MSP interface  https://gerrit.hyperledger.org/r/#/c/2385/. Here there is the notion of ""identity"" that maps to the one of a certificate, and setup takes this orignal list of gossip peer certificates (fed by the genesis block). Then ""decerializeIdentity(byte serializedcerthash)"" would return one of the pre-inserted certificates if it maps to one of these, and error otherwise. But this would be up to the internal implementation of the gossip network MSP.
Do you think this would suffice?

Also adding @keithsmith here as it falls under the area of membership service provider.
;;;","11/Nov/16 4:04 AM;yacovm;Hi Elli.

{quote}So, is there a reason why you chose the hash of the certificate as its identifier and not something else? E.g., some identity that is guaranteed inside the certificate to be unique?{quote} I actually don't know what the hash of the certificate means. I assumed if I say that you'd think I meant the hash of the public key, isn't that unique? 
When I talked with *adc *and *aso * on the phone I suggested having the encryption algorithm's string casted into bytes, and concatenated with the public key hash. But I really don't know, I think you guys know much better than me these sort of things.

{quote}Also, how do you get the list of certificates of the rest of the gossip peers? Is it through genesis block that you are given the list of available gossip peer certificates?{quote}
Well, the code currently doesn't do that because I didn't know the security provider can't fetch the certificate itself, but now that I know- I'm going the have the peer send its certificate to the other peer as part of the gossip handshake. Whenever a the gossip layer of your peer ""senses"" a peer it's not familiar with, it'll connect to it and will obtain its certificate (or fail if something goes wrong).

{quote}In general I see how the gossip peer network could have its own MSP{quote} that was the plan all along and I even had a code inside that was an assertion of a needed ""contract"" from the security layer of the peer and I asked on slack and I was promised that the methods in the following link would be preserved:
https://github.com/hyperledger/fabric/blob/master/gossip/api/api.go#L59
But alas- the floor underneath the gossip layer has been shattered so I'm trying to adapt to the new conditions (which I think is a good thing, because previously I required a stronger ability from the crypto layer- to be able to fetch the certificate itself, and now my new requirements of it are very modest).

what is: {quote}decerializeIdentity{quote}? did you mean de-serialized identity?  
{quote}
Then ""decerializeIdentity(byte serializedcerthash)"" would return one of the pre-inserted certificates if it maps to one of these, and error otherwise. But this would be up to the internal implementation of the gossip network MSP.{quote}
I'm sorry but I don't understand what this means. where is this method (don't see something like this in msp.go) and why would I want a certificate from you? I just need you to implement the needed methods in the commit https://gerrit.hyperledger.org/r/#/c/2353/ ;;;","11/Nov/16 7:43 PM;elli-androulaki;Ok, thanks. Here are some more questions: 

_""When I connect to remote peer I send him my certificate and my PKI-ID. He translates the certificate to the PKI-ID based on the function you'll provide (I assume it'll simply hash fields of the certificate) and will put this certificate into a local in-memory cache.""_ 

So, my question was after you send that peer your certificate, how would you trust the certificate? Isn't there a chain of trust? Is this part that is provided by the genesis block? 
Also, if the PKI-ID is the hash of the PK included in the certificate why would one send that along with the certificate? 
The translation function that you refer to is a function resolving the mapping between a PKI-ID and a certificate, assuming that the certificate you had already received from a previous connection? 

For the function i referred to, sorry for the typo :-) It is indeed de-serialization function called ""deserializeIdentity(idbytes bytes)"". Aims to essentially give you back the instance of an Identity/Certificate given a series of bytes. At the same time, we can extend the interface with a lookup mechanism for ""trusted"" identities, though not sure this is strictly speaking a membership service provider operation ... [~ales][~adc] what do you think?

For the APIs that you refer to here https://github.com/hyperledger/fabric/blob/master/gossip/api/api.go#L59 and here https://gerrit.hyperledger.org/r/#/c/2353/, can be implemented with code that is included in our tests (listed here https://gerrit.hyperledger.org/r/#/c/2385/6/msp/peermsp-test.go): 
 - VerifyBlock => using Block as message and using code included in function ""peer_signature_verification""
 - Sign => usign code included in function ""escc_signature_test""
 -  Verify => using code included in function ""peer_signature_verification""
 - GetPKIidOfCert => using the implementation of ""Identity.Identifier()"" of https://gerrit.hyperledger.org/r/#/c/2385/6/msp/msp.go.
Also notice that there are two files associated to the MSP interface. The msp.go, and peermsp.go.

Also, [~ales] mentioned that you use bindings for your TLS enabled connections between gossip peers. Is there a reason for you to do that? 


;;;","11/Nov/16 10:32 PM;yacovm;{quote}So, my question was after you send that peer your certificate, how would you trust the certificate?{quote}
I was under the impression that if I call a method provided by you - 
{code:java}
verify(certificate, signature, plaintext) 
{code}
I would get an error if the certificate is considered invalid. Isn't that a reasonable assumption? (I'm not being sarcastic, I'm asking to understand. I know that you may invoke simply the encryption algorithm of the public key but I assumed that if I pass a *certificate* then you would also check if you trust the certificate).
{quote}Isn't there a chain of trust?{quote} I assume that's how you validate it. I thought you guys provide these capabilities for all the other squads.
{quote}Is this part that is provided by the genesis block? {quote} Our layer is ignorant of the genesis blocks in this aspect. I assume that your layer is initialized before our component initializes and that all calls provided by you can be invoked by our layer at any time during the program's life.
{quote}Also, if the PKI-ID is the hash of the PK included in the certificate why would one send that along with the certificate? {quote}
I would prefer to treat the certificate as a byte slice, and not to know the inner and outs of it, because I have no use in using the data inside the certificate. I only need it to pass it to your methods as a parameter, that's all. 
Another reason is: this provides more flexibility. If in the future you wanted the PKI-ID to be computed in a different way without changing the certificate structure, you could do it easily by providing a different function that computes the PKI-ID from the cert. 
{quote}The translation function that you refer to is a function resolving the mapping between a PKI-ID and a certificate, assuming that the certificate you had already received from a previous connection? {quote} 
Yes. I'll build an in-memory map of PKI-ID ---> certificate, and will populate it by having your function that maps certificate to PKI-ID applied on the certificate and used as a key to the map and the certificate as the value.

{quote}For the function i referred to, sorry for the typo It is indeed de-serialization function called ""deserializeIdentity(idbytes bytes)"". Aims to essentially give you back the instance of an Identity/Certificate given a series of bytes. At the same time, we can extend the interface with a lookup mechanism for ""trusted"" identities, though not sure this is strictly speaking a membership service provider operation ... Alessandro SorniottiAngelo De Caro what do you think?{quote}
I'm starting to lose you here. Can we discuss this in a more real-time manner?

{quote}For the APIs that you refer to here https://github.com/hyperledger/fabric/blob/master/gossip/api/api.go#L59 and here https://gerrit.hyperledger.org/r/#/c/2353/, can be implemented with code that is included in our tests (listed here https://gerrit.hyperledger.org/r/#/c/2385/6/msp/peermsp-test.go): {quote}
Did the other squads also implement their needed crypto capabilities themselves?

{quote}Also, Alessandro Sorniotti mentioned that you use bindings for your TLS enabled connections between gossip peers. Is there a reason for you to do that? {quote}
Of course. When I designed and coded the communication layer I was told that:
* We may use different pub/priv key pairs for the SSL layer and for the application layer, so if this is the situation and a peer connects to me, I can't infer his identity from the gRPC layer only.
* We may use self-signed certificates in the SSL layer, so in order to combat that I used what is suggested in https://mitls.org/pages/attacks/3SHAKE . I hope I didn't get that wrong but I understand that:
                       - The TLS Unique value is pseudo-random from session to session (therefore can be used as a NONCE)
                       - It is transferred after the encyption layer of the SSL kicks in, so it is transferred securely
                       - It is the same on both sides of the SSL session, hence it can be used to detect a MITM.
     So I use the TLS-Unique as a challenge plaintext that I expect to be signed by the other side, therefore proving its identity.
* In testing, I want to simulate the environment as close as possible to production, so in my communication tests I generate self-signed certificates for all peers and use that. 
I don't want to use pre-prepared certificates, and I don't know how to make them authentic and signed by a CA.
* This is probably a stupid reason, but- when I played around with fabric 0.5 to explore authentication I initialized the peers with SSL via adding the pem files to the file system and enabling the SSL in the core.yaml, and I printed the AuthInfo struct that is extracted from the server-side gRPC stream, and I didn't see there a certificate, only the TLS-Unique. Therefore I concluded that there must be a code flaw in grpc-go and the certificate can't be extracted.... 

;;;","17/Nov/16 9:22 PM;yacovm;Thanks [~elli-androulaki] and [~adc] for https://gerrit.hyperledger.org/r/#/c/2353/, I'm working now on using this api in the gossip comm layer to implement the needed capabilities of https://github.com/hyperledger/fabric/blob/master/gossip/comm/comm.go#L69-L82.
Now, can you guys provide with an object that implements all methods in
https://github.com/hyperledger/fabric/blob/master/gossip/api/crypto.go#L25-L42
Except from the following method
{code:java}
VerifyBlock(signedBlock SignedBlock) error
{code}
Which will be implemented by someone else?;;;","26/Nov/16 3:43 PM;yacovm;{quote}Whenever the gossip layer of a peer learns of a peer it doesn't have a certificate of, it'll initiate a handshake with it to learn about it.{quote}

Actually, this might give a malicious peer its own private DDOS army, not a good idea.
I think that a better way of making peer learn of remote peer certificates is simply via gossiping the certificates, that way they can verify them because they are signed by CAs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip crypto dependancy API,FAB-1047,13378,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,09/Nov/16 6:37 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,18/Dec/16 10:42 PM,,,,,,,,,0,,,,,,,,,"The gossip uses PKI-ID to authenticate between peers.
In 0.5 it was simply the hash of the cert given by the membership service.
Now it is no more, but the gossip layer still needs a PKI-ID, so this JIRA item's purpose is to assert the needed crypto abilities the gossip expects to get from the peer's crypto layer.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxedz:",,,,,,Sprint 5 - gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean up RocksDB code artifacts (gorocksdb db wrapper and vendor) and installation artifacts (vagrant/docker),FAB-1054,13385,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,greg.haskins,denyeart,denyeart,10/Nov/16 4:13 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,02/Dec/16 11:16 PM,,,,,fabric-ledger,,,,0,help-wanted,Ledger,,,,,,,"After the switch to goleveldb is complete, clean up the RocksDB code (the vendor code as well as the fabric db wrapper and associated tests) and installation artifacts (vagrant and docker) from v1.

Also these core.yaml db options need to be removed:
        maxLogFileSize: 10485760
        keepLogFileNum: 10
        logLevel: ""warn""

But first, FAB-1061 needs to be resolved since it uses RocksDB.",,denyeart,grapebaba,greg.haskins,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxefj:",,,,,,Sprint 6 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,grapebaba,greg.haskins,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/16 4:30 AM;denyeart;Since FAB-1061 is complete, this work can proceed at any time.;;;","01/Dec/16 12:17 AM;greg.haskins;Submitted as CR 2853.  Please review and +1/+2 when convenient.

https://gerrit.hyperledger.org/r/#/c/2853/;;;","01/Dec/16 12:19 AM;greg.haskins;I should also add: CR 2853 only address the fabric.git portion.  We will need a related follow-up CR to fabric-baseimage.git to complete this work, though there is no urgency to cut a release of baseimage.  It will be fine to let the extra librocksdb.so artifacts dangle in v0.2.1 until we need to cut a release for a different reason.  We will leave this ticket open until all work is completed.;;;","02/Dec/16 11:16 PM;greg.haskins;Work completed with CR 2903: https://gerrit.hyperledger.org/r/#/c/2903/;;;","01/Feb/17 4:21 PM;grapebaba;[~muralisr]
There are two problems with *pb.go.
First, see https://github.com/grpc/grpc-go/issues/711, it still doesn't support 1.7 context.
Second, If we have interfaces in *pb.go which use context as a arg, then we have impl in fabric code, it will throw error when use 1.7 context.
For example
 !comm_impl.go.jpg|thumbnail!  !message.pb.go.jpg|thumbnail! 
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove Query from chaincode interface,FAB-1055,13386,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,binhn,binhn,10/Nov/16 4:24 AM,21/Jul/18 3:56 AM,28/Oct/23 2:57 AM,10/Dec/16 5:46 AM,,,,,fabric-peer,,,,0,Endorser,,,,,,,,"We no longer need Query interface in the chaincode, so we should remove it and fix up the examples so that developers can follow",,binhn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-757,,,,,,,,,"1|hzxe9j:",,,,Unset,,Sprint 7 - Endorser,,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Dec/16 5:58 AM;muralisr;thanks [~jiangyaoguo] done in https://gerrit.hyperledger.org/r/#/c/2773/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hyperledger CI fails to complete goimports verification due to recent SBFT changes.,FAB-1056,13387,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,10/Nov/16 4:54 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,10/Nov/16 5:37 AM,,,,,,,,,0,,,,,,,,,"While running verification on CI for my recent CR: https://gerrit.hyperledger.org/r/#/c/2369/ it appears to fail due to: 
{code}
19:16:25 orderer/sample_clients/single_tx_client/single_tx_client.go orderer/sbft/backend/backend.go orderer/sbft/backend/events.go orderer/sbft/main.go
19:16:25 The goimports command must be run for these files
19:16:25 make: *** [linter] Error 1
{code}

While CR has nothing to do with these files.
These files need to be reformatted to enable CR verification path. 

PS. Same problem appears here: https://jenkins.hyperledger.org/job/fabric-verify-x86_64/2577/console",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxefr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Nov/16 4:59 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/2375/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
install basic dev-testing environment in v1.0 sprint4 using vagrant and memberservices,FAB-1057,13388,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,scottz,scottz,10/Nov/16 5:01 AM,21/Jul/18 3:55 AM,28/Oct/23 2:57 AM,22/Nov/16 6:16 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Get a working version of fabric v1.0 testbed running on our laptops on vagrant environment.

0edd927
or
git checkout -b <branch> 182a867

Ensure the correct readme instructions are available: bugs were created for the older readme file: 1026 1027 1028

However, memberservices is gone from more recent commit levels in fabric. A new readme will be written once reimplemented, and new steps.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx8z3:",,,,Unset,,Sprint 5 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade docker-compose version to 1.8.1 in Jenkins,FAB-1058,13389,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Nov/16 5:08 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,28/Dec/16 1:01 AM,,,,,,,,,0,build-system,,,,,,,,Upgrade docker-compose version to 1.8.1 in Jenkins. Observed version service in some of the fabric docker-compose files which doesn't support v1.5.2.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxefz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 1:23 AM;rameshthoomu;Requested ""ry jones"" to update required docker-compose version in Jenkins build image and push it to Production environment. ;;;","28/Dec/16 1:01 AM;rameshthoomu;Docker compose version upgraded to 1.8.1 in CI images and this changes was implemented.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create testing framework and tests and support scripts,FAB-1059,13390,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bmos299,scottz,scottz,10/Nov/16 5:10 AM,21/Jul/18 4:08 AM,28/Oct/23 2:57 AM,28/Apr/17 4:03 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,Reference design docs here:  https://wiki.hyperledger.org/community/fabric-design-docs,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-5,,fabric 1.0 alpha docker image testing,Done,,,Unset,,,,"1|hzxl2f:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make KVLedger to implement RawLedger interface,FAB-1060,13391,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,10/Nov/16 6:30 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,10/Nov/16 10:55 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,Currently {{KVLedger}} implements only {{ValidatedLedger}} interface while it also should be able to provide {{RawLedger}} interface capabilities. As {{KVLedger}} used by committer service and currently gossip component distributes raw blocks {{KVLedger}} has to comply with {{RawLedger}} iterface,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxeg7:",,,,,,Sprint 5 - gossip,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/16 6:32 AM;C0rWin;https://gerrit.hyperledger.org/r/#/c/2381/;;;","10/Nov/16 10:56 PM;C0rWin;This issue no more valid, please refer to the comment in the CR 2381.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean up RocksDB usage during peer start for discovery persistence,FAB-1061,13392,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jeffgarratt,denyeart,denyeart,10/Nov/16 8:43 AM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,24/Nov/16 10:20 PM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,"RocksDB is being removed from v1 in favor of goleveldb.  /fabric/core/db/db.go will therefore go away.  I see that peer startup uses this for discovery persistence.  We need to remove that or port it to use goleveldb.

start.go needs to remove db.Start().
peer.go needs to remove StoreDiscoveryList() and LoadDiscoveryList().

[~jeffgarratt] [~manish-sethi] Is this discovery persistence still needed?",,denyeart,inatatsu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxegf:",,,,,,Sprint 6 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,inatatsu,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 10:19 PM;mastersingh24;I believe this is done with https://gerrit.hyperledger.org/r/#/c/2715/  so marking as done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to collect the chain security components that need to be initialized at setup time,FAB-1063,13394,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,10/Nov/16 9:39 PM,21/Jul/18 3:54 AM,28/Oct/23 2:57 AM,22/Feb/17 4:24 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,"This includes the research on the items that need to be configured on multiple components of the system :
 - protobuf crypto algorithms, e.g., hash function
 - used MSPs, e.g., what are the parameters one would need to set per MSP
 - MSPManager, e.g., policies that govern addition or removal of an MSP/Member
Doing this will help us identify the content of respective configuration transactions.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1329,,,,,,,,,"1|hzxk4n:",,,,Unset,,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to specify which setup configuration parameters are needed for BC-CSP,FAB-1064,13395,13394,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,angelo.decaro,elli-androulaki,elli-androulaki,10/Nov/16 9:42 PM,23/Jan/20 3:41 AM,28/Oct/23 2:57 AM,23/Jan/20 3:41 AM,,,,,fabric-crypto,,,,0,Security,stale-item,,,,,,,"From this information is necessary that we identify the ones that need to be included in the genesis block (globally available) from the ones that the peer only knows and relates to its internal setup.
",,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxegv:",,,,,,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 1:18 AM;elli-androulaki;Related documentation: https://docs.google.com/document/d/1Qg7ZEccOIsrShSHSNl4kBHOFvLYRhQ3903srJ6c_AZE/edit?usp=sharing
Related changeset: https://gerrit.hyperledger.org/r/#/c/2677/;;;","23/Jan/20 3:41 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Leader Election,FAB-1065,13396,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,yacovm,yacovm,10/Nov/16 10:19 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,07/Feb/17 5:55 PM,,,,,,,,,0,,,,,,,,,"We need to give the capability of having peers in the same organization decide on a selection of a single peer, in order for that peer to connect to the orderer and call Deliver in the names of the peers in the organization.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxeh3:",,,,,,Sprint 5 - gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to specify configuration parameters of the default MSP ,FAB-1066,13397,13394,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,10/Nov/16 10:25 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,09/Dec/16 9:31 PM,,,,,,,,,0,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxehb:",,,,,,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
define reqmts for v1.0 test framework,FAB-1067,13398,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,scottz,scottz,10/Nov/16 11:17 PM,21/Jul/18 3:55 AM,28/Oct/23 2:57 AM,23/Nov/16 2:43 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Guide team in defining reqmts for new test framework for v1.0

- demo existing perf test framework
- determine config parameters needed for testing
- determine format of json or yml file, and create one for network config parms and a sedond for test config parms and teststeps (and share with team)
- work with Ratnakar to construct the engine, which may simply build on what he is doing for FAB-1043 or FAB-1069
",,dongming,scottz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1059,,,,,,,,,"1|hzxevb:",,,,Unset,,Sprint 6 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,dongming,scottz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 7:18 AM;dongming;Completed the initial phase of creating orderer and peers based on a previous composer file.;;;","22/Nov/16 7:20 AM;dongming;will continue the wrk with FAB-1178;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate v1.0 docker images,FAB-1068,13399,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Nov/16 11:17 PM,20/Jul/18 11:10 PM,28/Oct/23 2:57 AM,28/Dec/16 1:09 AM,,,,,fabric-quality,,,,0,build-system,quality,,,,,,,Generate v1.0 docker images and push it to test docker hub account,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxehj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/16 1:09 AM;rameshthoomu;Created jobs for ""Fabric app images"" in production CI https://jenkins.hyperledger.org/view/fabric-app/job/fabric-app-image-verify-docker-x86_64/ fabric-app. Right now these jobs are disabled but we can enable them.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"create flexible test framework, a simple sdk",FAB-1069,13400,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,scottz,scottz,10/Nov/16 11:20 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,28/Apr/17 3:15 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"
- create our own raw sdk layer in go using gRPC
- func calls direct to v1.0 fabric code in peer (endorsers/committers) and orderer (consenters)
- determine languages to use for config files, and format of config files ",,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1059,,,,,,,,,"1|hzx927:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,Ratnakar,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/17 3:15 AM;Ratnakar;ChaincodeChecker  and OTE (Orderer Traffic Engine)  tools covers the similar functionality.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update or create spinup peer network script with v1.0 changes,FAB-1070,13401,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Nov/16 11:23 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,28/Dec/16 1:12 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Update or create spinup peer network script with v1.0 changes. Membersrvc.yaml file has been removed and this change has been moved to fabric-cop repository but this doesn't have membersrvc.yaml file.

Discussing with fabric-cop team on how to fetch user credentials with this  new change. 

Will update spinup peer network once receive details.
",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxehr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/16 1:11 AM;rameshthoomu;We have a docker compose file to create v1.0 network. https://github.com/dongmingh/v1framework. Please refer given URL here to create v1.0 network.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
functional test engine happy path demo,FAB-1071,13402,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,scottz,scottz,10/Nov/16 11:27 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,10/Dec/16 3:59 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"First major step (later can add config params and create tests):
Provide a demo to team for our functional test framework tool to be used for testing v1.0 hyperledger fabric code, specifically using simple configuration one endorser with default policy, one solo orderer, default policies, which reads in config parameters (can be default) and talks to fabric using go language and using gRPC calls.",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1059,,,,,,,,,"1|hzx84f:",,,,Unset,,Sprint 7 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/16 3:59 AM;dongming;add a perf.js and update README.md in repo:
https://github.com/dongmingh/v1framework;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create 4 peer network on different remote host machines on each data centers 1.0,FAB-1072,13403,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Nov/16 12:03 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,28/Apr/17 11:54 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Create 4 peer network in remote host machines on each data center (London, Melbourne, Singapore, Washington DC and Dallas) and perform tests and make sure they consensus is working between peers.",,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx86v:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 12:45 AM;mastersingh24;[~rameshthoomu] - which SL account are you planning to use for this?;;;","11/Nov/16 1:10 AM;rameshthoomu;[~mastersingh24]: Barry created 4 peer network using QA account. I have installed docker and make sure environment is ready for testing. Unfortunately, Internet is disabled in these machines as they are created outside of DALLAS09 DC's. Checking with DST team on how to get access to these machines.. 

QAPeerMelbourne.blockchain.sl.edst.ibm.com
QAMemSvcSanJose.blockchain.sl.edst.ibm.com
QAPeerWashington.blockchain.sl.edst.ibm.com
QAPeerMontreal.blockchain.sl.edst.ibm.com;;;","28/Apr/17 11:54 PM;rameshthoomu;Unable to access public ips of softlayer machines. it required some firewall changes and permissions to setup public ips in softlayer.. Same work is being take here https://jira.hyperledger.org/browse/FAB-3338

Closing this issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explore converting auction chaincode to use JSon files to test with CouchDB,FAB-1074,13405,13350,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,11/Nov/16 12:57 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Jul/18 10:47 PM,,,,,fabric-quality,,,,0,Ledger,quality,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxehz:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add unit tests to example.go application in ledger examples.,FAB-1075,13406,13350,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,11/Nov/16 12:59 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Dec/16 6:05 AM,,,,,fabric-quality,,,,0,Ledger,quality,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxei7:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add unit tests to marble_example.go application in ledger examples.,FAB-1076,13407,13350,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Nishi,Nishi,11/Nov/16 1:01 AM,12/Jul/19 8:47 PM,28/Oct/23 2:58 AM,12/Jul/19 8:47 PM,,,,,fabric-quality,,,,0,Ledger,quality,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeif:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,,,,,,,,,,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to provide a nop implementation of peerMSP and plain peerMSPProvider (defined in FAB-829),FAB-1077,13408,13129,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,11/Nov/16 1:32 AM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,05/Dec/16 6:27 PM,,,,,fabric-peer,,,,0,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxein:",,,,,,Sprint 6 - Crypto,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to integrate the nop implementation of peerMSP and plain peerMSPProvider into the endorser logic,FAB-1078,13409,13129,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,11/Nov/16 1:33 AM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,16/Jan/17 11:31 PM,,,,,fabric-peer,,,,0,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeiv:",,,,,,Sprint 6 - Crypto,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer protocol update,FAB-1079,13410,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,markparz,markparz,11/Nov/16 1:45 AM,12/Jul/19 8:37 PM,28/Oct/23 2:58 AM,12/Jul/19 8:37 PM,,,Future,,fabric-peer,,,,0,committer,Endorser,ledger,,,,,,"As an owner of a peer on the BC network, I need the ability to upgrade the peer if there is a change in the protocol without loss of data. 

With lifecycle chaincode, I can upgrade the chaincode. I also have the ability to apply patches/fixes if it does not apply to the protocol change itself via the SCC. Eventually I will have to accommodate this sort of change, in case there is a security vulnerability or something else that requires a major alteration. ",,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxazr:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Publish Release notes for each release tag,FAB-1080,13411,,Task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,rameshthoomu,rameshthoomu,11/Nov/16 2:01 AM,12/Jul/19 8:22 PM,28/Oct/23 2:58 AM,12/Jul/19 8:22 PM,,,v1.0.0,,,,,,0,build-system,,,,,,,,"_emphasized text_Publish release notes for each tag submitted in github gives more flexibility for user to quickly review new features or issues fixed in each release

We are submitting release notes here,  http://hyperledger-fabric.readthedocs.io/en/latest/releases/ but it gives more flexible to the user to quickly check the release notes for each tag we publish for these hyperledger/fabric-* repositories.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxen3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need an editor to create/edit policies,FAB-1081,13412,12487,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,tuand,tuand,11/Nov/16 2:13 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Oct/17 2:58 AM,,,,,fabric-peer,,,,0,chaincode,consensus,endorser,,,,,,"From a discussion with [~muralisr]. We wanted to document this here. Depending on further discussion, this task might get moved elsewhere.

Users need an editor to create/modify policies.  We do not want them to have to write a go program to generate protobufs and call the cauthdsl policy manager.

This editor can be GUI driven or CLI as long as it can guide a user through the steps needed. The output should be a blob that can be imported into hyperledger fabric.",,ChristopherFerris,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeon:",,,,,,Sprint 4 - Endorser,Sprint 5 - Consensus,Sprint 8 - Endorser,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 2:58 AM;ChristopherFerris;closing, please reopen if still relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a syntax for specifying policies,FAB-1082,13413,12487,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,tuand,tuand,11/Nov/16 2:20 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Oct/17 2:57 AM,,,,,fabric-peer,,,,0,consensus,endorser,node-SDK,,,,,,"This is from a discussion with [~muralisr]. We just want to document it here. Depending on further discussion, this issue might get moved to another spot in JIRA

We need a syntax to describe a policy such that we can describe what the policy does as listed in FAB-187.

Use of this syntax include describing the VSCC policy attached to a chaincode deploy and describing the ingress/egress policies created for the bootstrap genesis block.",,ChristopherFerris,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeov:",,,,,,Sprint 4 - Endorser,Sprint 5 - Consensus,Sprint 8 - Endorser,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 2:57 AM;ChristopherFerris;closing, please reopen if still relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need unit tests for fabric/protos/*/*.proto after stabilization of proto files,FAB-1085,13416,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,11/Nov/16 3:08 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Oct/17 2:10 AM,,,,,fabric-peer,,,,0,Protos,,,,,,,,"After stabilization, need to keep to contro and track changes to proto structures. This start with unit tests for every structure in the proto files. ",,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxep3:",,,,,,Sprint 6 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 1:52 AM;ChristopherFerris;[~muralisr] is this still relevant? Can it be closed?;;;","14/Oct/17 2:10 AM;ChristopherFerris;closing, please reopen if still relevant;;;","14/Oct/17 5:04 AM;muralisr;[~ChristopherFerris] ok to close. For the records, all the UT work we did pre 1.0 cover a lot of area (including proto/utils for example).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add history database config option ,FAB-1087,13418,12500,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MariWade,MariWade,MariWade,11/Nov/16 5:37 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Dec/16 1:14 AM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,Add a config option in order to enable and disable the history database.  By default the option will be enabled.,,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxepj:",,,,,,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Orderer repository in hyperledger docker hub account,FAB-1088,13419,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Nov/16 6:33 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,11/Nov/16 6:57 AM,,,,,,,,,0,build-system,,,,,,,,Create Orderer repository in hyperledger docker hub account,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxepr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 6:57 AM;rameshthoomu;Ry created ""orderer"" repository in Docker hub https://hub.docker.com/r/hyperledger/fabric-orderer/. I am working on generating orderer image for v1.0 and will push orderer image here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka orderer: Illegal genesis message,FAB-1092,13423,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,kchristidis,bcbrock,bcbrock,12/Nov/16 4:18 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,21/Nov/16 12:53 AM,,,,,fabric-orderer,,,,0,Consensus,,,,,,,,"After the proto updates a couple of days ago, the genesis message created by the Kafka orderer is no longer valid. This was probably not noticed because I assume none of the current tests look inside the blobs that are being delivered. The genesis message needs to be an Envelope.

",,bcbrock,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/16 4:19 AM;bcbrock;kafka_patch.txt;https://jira.hyperledger.org/secure/attachment/10225/kafka_patch.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx95z:",,,,,,Sprint 5 - Consensus,,,,,,,,,,,,,,,,,,,,,,,,,bcbrock,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Nov/16 1:07 AM;kchristidis;Thanks as always for pointing these out.

In review here: https://gerrit.hyperledger.org/r/#/c/2633/

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need utilities to break out a Block and get the ConfigurationEnvelope,FAB-1094,13425,12968,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tuand,tuand,tuand,12/Nov/16 6:57 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,20/Nov/16 2:10 AM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"We have multiple places in the code where we need to unmarshall multiple things to get from Block to ConfigurationEnvelope.

Create a set of utility functions that can be called from anywhere",,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-996,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeqv:",,,,,,Sprint 5 - Consensus,Sprint 9 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Nov/16 3:00 PM;kchristidis;Hi Tuan, keep FAB-996 in mind. It seems like there will be no overlap since you talk about unmarshaling functions.

I have written a bunch of unmarshaling functions for the same process here [1], so you may want to extract them from there, and move them to the same common/util package (file util.go) in the orderer as the one that FAB-996 uses.

It may also make sense to go for unmarshaling functions that return just the proto.Message w/o error to make the calling code cleaner. We should panic inside the e.g. UnmarshalEnvelope() function if need be. (See gist [2] for how I envision this to work for the Marshal function in the same package.)

[1] https://gerrit.hyperledger.org/r/#/c/2179/7/orderer/common/bootstrap/static/static_test.go
[2] https://gist.github.com/kchristidis/d03761fcf37b12af45f99366fe53fd1a;;;","13/Nov/16 3:09 PM;kchristidis;Actually, I take it back -

ExtractEnvelope and ExtractPayload in FAB-996 overlap with some of the functionality that you wish to add, so I'll try to push a changeset during the weekend so as not to block you. Feel free to extend it as you see fit.;;;","13/Nov/16 6:23 PM;kchristidis;There you go: https://gerrit.hyperledger.org/r/#/c/2455/

I'd build on top of that.;;;","14/Nov/16 11:25 PM;tuand;Thanks [~kchristidis] !

I also started on this because Binh wanted something Friday night ... https://gerrit.hyperledger.org/r/#/c/2451/

I'll combine both our code sets .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
atomic broadcast client needs to receive Deliver'ed batches from more than one orderer peer,FAB-1095,13426,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,corecode,corecode,14/Nov/16 9:51 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,08/Dec/16 6:24 AM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"For both crash fault tolerance and byzantine fault tolerance, a committer needs to connect to more than one single atomic broadcast server to ensure being up to date.",,corecode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxer3:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,corecode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system needs to handle (sbft) orderer with gaps in raw ledger,FAB-1096,13427,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,corecode,corecode,14/Nov/16 10:01 PM,12/Jul/19 8:22 PM,28/Oct/23 2:58 AM,12/Jul/19 8:22 PM,,,Future,,fabric-gossip,,,,0,consensus,gossip,sbft,,,,,,"the sbft implementation currently creates gaps in its raw ledger.  The system as a whole needs to handle this situation.  There are several options to achieve this:

# committer connects to all consensus peers.  Deliver() receives a ""only report headers"" option (probably needed anyways for FAB-1095), and the committer retrieves batches selectively from different atomic broadcast services so that the committer assembles one contiguous block chain.
# sbft orderers use their established grpc connections to actively fill gaps in their own raw ledger.  This implementation would live outside of sbft.
# committer gossip automatically propagates missing batches so that the atomic broadcast client can advance its window beyond the gap in the atomic broadcast server's raw ledger.  Does this only work probabilistically?  What happens if no atomic broadcast client is connected to those replicas that have a batch which can fill the gap of all connected atomic broadcast servers?",,corecode,troyronda,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxerb:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,corecode,troyronda,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sbft orderer must not block when sending a message to a peer,FAB-1097,13428,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,corecode,corecode,14/Nov/16 10:21 PM,20/Jul/18 11:17 PM,28/Oct/23 2:58 AM,20/Jul/18 11:05 PM,,,Future,,fabric-orderer,,,,0,bft,,,,,,,,"Currently the sbft orderer backend will block if the channel to a peer is full.  This can be exploited by a byzantine network or byzantine peers.

The backend should disconnect the peer when its channel fills up.  The channel capacity needs to be selected so that this happens only under adverse conditions and not during normal operation.",,ChristopherFerris,corecode,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxerj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,corecode,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/18 2:14 AM;ChristopherFerris;no longer valid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spinup peer network (Generate docker-compose file) for v1.0,FAB-1109,13441,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,rameshthoomu,rameshthoomu,15/Nov/16 12:55 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,15/Sep/17 3:27 AM,,,v1.0.0,,fabric-quality,,,,0,build-system,quality,,,,,,,"Create a shell script to feed the environment variables data into docker-compose.yml file provided by user while executing shell script.  Docker-compose file should provide peer and orderer network for v1.0. 

Convert from json to yanl.",,ChristopherFerris,dongming,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx873:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dongming,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 9:25 PM;ChristopherFerris;if this is in-progress, why isn't it in the sprint? Also, it has no sizing. [~bmos299];;;","15/Sep/17 3:27 AM;dongming;completed in FAB-3475;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setup CI process for Test Automation scripts,FAB-1111,13443,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,15/Nov/16 1:00 AM,10/Oct/18 8:52 PM,28/Oct/23 2:58 AM,13/Apr/17 9:26 PM,,,v0.6,,fabric-quality,,,,0,build-system,quality,,,,,,,"Create Jenkins jobs to setup CI process for fabric test automation scripts. Will create Jobs in LF community Jenkins, once Quality team submits patches for ""go-sdk"", ""behave"" and ""performance"" and ""node-sdk"" test suites. ",,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeun:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 9:26 PM;ChristopherFerris;This has been done for a long while.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
End-to-end story for proposal/endorsement/ordering/validation/commitment/ + event sender - 1.0,FAB-1113,13445,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,nickgaski,nickgaski,15/Nov/16 1:32 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,17/Feb/17 6:51 AM,,,,,fabric-quality,,,,0,Documentation,quality,,,,,,,"Compose new story for the full flow of a v1 transaction.  proposal chaincode deployment.  LCCC, transaction proposal.  -> endorsement -> ESCC -> SDK -> orderer -> validation -> VSCC -> commitment -> BCP.  

This is in conjunction with the new animation video being done by Design.  ",,markparz,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx87j:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,,,,,,,,,,,,,Unset,,,,,,,,,,,markparz,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/16 3:49 AM;nickgaski;This is being worked through and will go hand in hand with new series of animated shorts from the design folks;;;","17/Feb/17 6:51 AM;markparz;This was done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode Developer Documentation ,FAB-1114,13446,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,nickgaski,nickgaski,15/Nov/16 1:40 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,15/Nov/16 5:16 AM,,,,,fabric-quality,,,,0,Documentation,quality,,,,,,,"Prioritize docker over vagrant in our HL Community docs.  This is submitted via 2329 and 2327, but still ongoing. 

Developers will need to pull the fabric-baseimage:[TAG] and rename to fabric-baseimage:[LATEST] using a ```docker-tag``` command.  These steps have been added.   

Developers can now execute a cURL to retrieve a single-peer or four-peer Docker Compose .yaml file.  Once they have this file locally, a simple ```docker-compose -f <compose-file.yaml> up will spin up their containers.  ",,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeuv:",,,,,,Sprint 5 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/16 1:40 AM;nickgaski;This is submitted through 2329, however as we progress to v1.0 it seems that the process will need to be changed and updated substantially.  (As a result this issue is really only applicable to v0.6 level ).  There is the option of manually building the images for COP and OS through the fabric; they are not produced by the CI yet.  The ""connect a thon "" should help us achieve a simple setup with an endorser image, couchDB image, COP, OS, ccenv image, etc...  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Review and update npm documentation,FAB-1115,13447,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angrbrd,nickgaski,nickgaski,15/Nov/16 1:49 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Dec/16 12:56 AM,,,,,fabric-quality,,,,0,Documentation,quality,,,,,,,"Work with SDK team to upgrade external HFC doc in npm

Broken links pointing at master branch, references to old code, etc...  Should now refer to and reflect the independent sdk repo in incubation.  ",,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx87r:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,,,,,,,,,,,,,,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/16 12:35 AM;nickgaski;Line 233 - change {color:#d04437}http://hyperledger-fabric.readthedocs.io/en/latest/nodeSDK/node-sdk-guide{color} to {color:#14892c}http://fabric-sdk-node.readthedocs.io/en/latest/node-sdk-guide/{color}

Line 244 - typos of configuration and administrative.  Broken link to membersrvc.yaml (I assume this got replaced by the COP implementation; however I'm not sure if there is still an equivalent to the membersrvc.yaml file - for Keith or Anya to comment on)

Line 246 - change {color:#d04437}http://hyperledger-fabric.readthedocs.io/en/latest/nodeSDK/sample-standalone-app{color} to {color:#14892c}http://fabric-sdk-node.readthedocs.io/en/latest/sample-standalone-app/{color}

Line 249 - change {color:#d04437}http://hyperledger-fabric.readthedocs.io/en/latest/nodeSDK/node-sdk-indepth/#chaincode-deployment{color} to {color:#14892c}http://fabric-sdk-node.readthedocs.io/en/latest/node-sdk-indepth/#chaincode-deployment{color}

Line 251 - change {color:#d04437}http://hyperledger-fabric.readthedocs.io/en/latest/nodeSDK/node-sdk-indepth/#enabling-tls{color} to {color:#14892c}http://fabric-sdk-node.readthedocs.io/en/latest/node-sdk-indepth/#enabling-tls
{color}

Line 253 - change {color:#d04437}https://github.com/hyperledger/fabric/tree/master/sdk/node{color} to {color:#14892c}https://github.com/hyperledger/fabric-sdk-node{color}

Line 253 - change {color:#d04437}http://hyperledger-fabric.readthedocs.io/en/latest/nodeSDK/node-sdk-indepth/#hfc-objects{color} to {color:#14892c}http://fabric-sdk-node.readthedocs.io/en/latest/node-sdk-indepth/#hfc-objects{color}

Appears that the ""Unit Tests"" section needs to be updated to reflect your new library - https://github.com/hyperledger/fabric-sdk-node/tree/master/test/unit;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric v1 alpha - user experience ,FAB-1116,13448,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,nickgaski,nickgaski,15/Nov/16 1:53 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,17/Apr/17 11:01 PM,,,v1.0.0,,fabric-docs,,,,1,Documentation,quality,Usability,,,,,,"Will need a readme on GitHub that explains how to 
- write chaincode
- connect to testnet lite
- use cert to connect (TBD: we may be able to automate this)

*Documentation:*
- There is a question of how much we can support with documentation in HF Docs
- we need to add at a minimum a way to get started with HF v1.0 december alpha
- We’ll want Jim to document the SDK updates. If need be put placeholders that can be added to. We’ll look to see what we can support with the Java SDK
- We won't be able to submit queries through REST API.
- We'll need to notify users of the REST compatibility and how it won't work with V1
- Need to hook up latest SDK to marbles for this demo and update documentation
- Have the leads on each squad start to document what the sprints are releasing at a high level/outline. Then Josh + Nick can smooth it out so humans can understand it.

*Before Dec 16, Gari will cut the code that will go into the Dec. 17th Birthday release. Most likely we'll cut it for the 15th, which is a Thursday (Gari likes Thursday releases).*

_Next steps:_ Develop a delivery schedule for the birthday extravanza, including a demo of the code working.
- *We'll shoot for Dec. 2nd for a demo of the testnet lite. This will also be a go/no go indicator.*",,nickgaski,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,633600,633600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx647:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,Unset,,,,,,,,,,,nickgaski,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/17 11:01 PM;nickgaski;This story was centered around our 2016 connect-a-thon event.  Very dated, will close.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Codify documentation for a simplified dev environment,FAB-1117,13449,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,nickgaski,nickgaski,15/Nov/16 2:02 AM,13/Feb/19 4:04 AM,28/Oct/23 2:58 AM,19/Feb/17 3:03 AM,,,,,fabric-docs,,,,0,Documentation,,,,,,,,"done via - https://gerrit.hyperledger.org/r/#/c/6119/

Synchronized with 2321 and [~greg.haskins] work .  

With the new build based on docker, there is a simplification that can happen for fabric development - fabric/devenv.  This is correlated with the deprecation/de-emphasize approach being applied toward vagrant.  

Only need basic support for git, make, docker and docker-compose.

Also need to articulate that this is optional.  Need to confirm - does an OSX env with homebrew satisfy the above requirements.  

Must have gnu-tar for archiving purposes.  

",,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx63z:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Documentation,,,,,,,Unset,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Junit-tests for v1.0,FAB-1119,13451,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,suryalnvs,suryalnvs,15/Nov/16 4:34 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,28/Apr/17 10:16 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,Develop junit-tests for v1.0 code base.,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx87b:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,,,,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/17 10:16 PM;suryalnvs;made the following changes: 
1) configuration changes in pom.xml 
2) changes in EndtoEndIT.java
3) changes to orderer unit tests

provided changes to Rick.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
port performance Node SDK to v1.0,FAB-1120,13452,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,15/Nov/16 4:56 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,06/Jan/17 7:27 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,Port performance Node SDK from v0.6 to v1.0,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,performance Node SDK v1.0,,,,,,,,"1|hzx7yv:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,,,,,,,,,,,Unset,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/16 3:12 AM;dongming;This will take few weeks to complete.;;;","05/Jan/17 7:03 AM;dongming;Completed based on the following commit levels:
fabric: b0e902ea482a5dd4f5a82b8051052c2915811e59
fabric-sdk-node: a7f57baca0ece7111f74f7b9174c2083df7cda86

Now working with the latest commit levels.;;;","06/Jan/17 7:16 AM;dongming;The update is tracked in FAB-1529;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] Merge Fab 1.0 and Fab 0.6 unit test frame works ,FAB-1121,13453,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jjjjibm,jjjjibm,jjjjibm,15/Nov/16 5:11 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Jul/18 10:46 PM,,,,,fabric-quality,,,,0,node-SDK,quality,,,,,,,"Fabric  0.6 unit test tools have useful capabilities such as providing host names, ports, and protocols at run time.  

Fabric 1.0 unit tests are driven from a gulp file. 

These two schemes need to be merged into one. ",,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx893:",,,,,,Sprint 6 - nodeSDK,Sprint 6 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Defined experience for clients building a dynamic network,FAB-1122,13454,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,nickgaski,nickgaski,nickgaski,15/Nov/16 5:25 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,20/Jul/18 11:06 PM,,,,,fabric-docs,,,,0,Documentation,quality,,,,,,,"This is in conjunction with design and fabric/chaincode development for v1; also with the Design team.  

Need to describe at a high level the functional changes to the fabric - e.g. query is now encapsulated within the invoke function, how to bootstrap a peer, how to remove a peer, how to plug into an ordering service, how the event sender works in conjunction with SDK, what's the basic flow of a transaction, what's the structure of a proposal, how to customize endorsement policies, how to customize validation policies, etc...",,ChristopherFerris,nickgaski,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,432000,432000,,0%,432000,432000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx32n:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 17 - Documentation,,,Unset,,,,,,,,,,,ChristopherFerris,nickgaski,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/17 12:15 PM;ChristopherFerris;[~nickgaski] I would suggest we can close this as DUPLICATE as the BYFN should serve the function that this story outlines.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How do I structure a chaincode deployment proposal?,FAB-1123,13455,13448,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,nickgaski,nickgaski,15/Nov/16 5:33 AM,12/Jul/19 8:38 PM,28/Oct/23 2:58 AM,12/Jul/19 8:38 PM,,,Future,,fabric-docs,,,,0,Documentation,quality,,,,,,,"using the SDK, how do I structure and submit a chaincode deployment proposal? How do I specify which endorsing peers I want to receive this deployment?  What system chaincodes are involved (LCCC, ESCC, VSCC)?  How do I modify the system chaincodes?  What happens when my chaincode deployment succeeds/fails?  ",,ChristopherFerris,cloudedcliff,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxevj:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,ChristopherFerris,cloudedcliff,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 1:54 AM;ChristopherFerris;Not sure how this slipped through the cracks... we definitely need more and better examples of using the SDK(s).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How do I structure a transaction proposal?,FAB-1124,13456,13448,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Duplicate,,nickgaski,nickgaski,15/Nov/16 5:57 AM,12/Jul/19 8:37 PM,28/Oct/23 2:58 AM,12/Jul/19 8:37 PM,,,Future,,fabric-docs,,,,0,Documentation,quality,,,,,,,"What are the basic steps to submit a transaction using the SDK?  Have the ESCC and VSCC already been defined during the deployment step?  What configuration parameters exist in the ESCC?  What configuration parameters exist in the VSCC?  What happens if my transaction doesn't pass endorsement?  Does the SDK pass an event to my application?  What happens if my transaction passes endorsement?  Does the SDK pass an event to my application? 

What happens if my transaction(s) fail validation?  Are they thrown out?  Does the SDK pass an event to my app?  What happens if the batch passes?  Does the SDK pass an event to my app?  ",,cloudedcliff,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxevr:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,cloudedcliff,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How do I submit a query?,FAB-1125,13457,13448,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joshhus,nickgaski,nickgaski,15/Nov/16 6:03 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Jul/18 10:48 PM,,,v1.0.0,,fabric-quality,,,,0,Documentation,quality,,,,,,,"Define the fabric changes to the query function (i.e. it's now a part of Invoke).

Does query arrive as a proposal?
What is the fundamental structure of a query?
Does query rely on ESCC and VSCC?
Does the endorsing peer or committing peer read from the ledger?
",,cloudedcliff,inatatsu,joshhus,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxevz:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,cloudedcliff,inatatsu,joshhus,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/16 7:30 AM;joshhus;Got it, thanks. We could build a ""What's New in 1.0"" topic right into the existing Hyperledger RTD TOC. ... This could be one example sub-topic.;;;","02/Feb/17 8:52 AM;joshhus;There are two distinct types of queries. Query of chaincode and query of the ledger. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"deploy execute ""go install"", which cannot find packages and thus fails build",FAB-1126,13458,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,kletkeman,kletkeman,15/Nov/16 6:03 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,04/Dec/16 9:58 PM,,,,,fabric-peer,,,,0,build,chaincode,deploy,failure,,,,,"I have split our chaincode samples into an iot contract platform -- consisting of a fair amount of code to model asset classes and efficiently support state history, recent states, filters on read all, delete all and read history, and so on -- and a contract sample, which is pretty small for what it can do.

It all works swimmingly in the dev environment, and it works to perform go get of the platform and then go install of the contract.

But when I deploy to Bluemix using v0.6, it fails because the peer uses ""gi install"" instead of ""go get"", which means that only packages already on the peer can participate. This forces us to vendor everything we use, which is a bit of a barrier to development at this early stage.

Would it be possible to get the script that builds chaincode -- see step 4 in the included text below -- to call go get for now instead? The Go docs are rather ambiguous, but stackexchange seems to say that go get is go install++ in that it will not download what already exists, but will find what does not exist on the server.

NOTE: This can be a temporary stop gap until we have a chaincode build / deploy solution that avoids the vendoring hassle.

OUT - ********************
OUT - Step 1 : FROM hyperledger/fabric-baseimage
OUT -  ---> 21cb00fb27f4
OUT - Step 2 : COPY src $GOPATH/src
OUT -  ---> 3710794ab177
OUT - Step 3 : WORKDIR $GOPATH
OUT -  ---> Running in b43f98b91790
OUT -  ---> 9ac881f80192
OUT - Step 4 : RUN go install github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatformsample && cp src/github.com/hyperledger/fabric/peer/core.yaml $GOPATH/bin && mv $GOPATH/bin/iotcontractplatformsample $GOPATH/bin/0fec010c8c2d70c764cac5796bf0c3ac74817a3237a70bf30e26c60c210dc6d8d5cbeac36b80c779158fb518f29113f4098ff391fcd8b176152ce7d734c51dd3
OUT -  ---> Running in 320b56849672
OUT - [91msrc/github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatformsample/assetContainer.go:23:2: cannot find package ""github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform"" in any of:
OUT -     /opt/go/src/github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform (from $GOROOT)
OUT -     /opt/gopath/src/github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform (from $GOPATH)
OUT - [0m
OUT - ********************",,kletkeman,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxew7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,kletkeman,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/16 9:49 PM;mastersingh24;This is not a ""bug"" as things are working as designed and actually vendoring is the preferred (and really only) method in Golang for ensuring that you always package proper versions of your dependencies.

That being said, in V1, there are a couple of changes in both the Fabric and the SDK(s):

1) Fabric now produces two base images for chaincode:  [https://hub.docker.com/r/hyperledger/fabric-ccenv/] (for Golang) and [https://hub.docker.com/r/hyperledger/fabric-javaenv/] (for Java) which include all of the Fabric dependencies so for example will no longer need to vendor the Fabric src when deploying Go-based chaincode

2) The SDK(s) now provide an option to specify your own Dockerfile (which is wnat ends up in the tarball that actually is the payload of a deploy transaction).  For example, here's the property in the the Node SDK for V1:  https://github.com/hyperledger/fabric-sdk-node/blob/master/hfc/config/default.json#L11

I will say that you really do not want to be doing {{go get}} for production deployment unless you have used something like gopkg.in for versioning and have locked down dependencies across versions.  For development, this is likely OK.  But in V1, peers can now change after the fact and you would not want them to end up with different versions of chaincode due to {{go get}} always pulling from the master branch;;;","04/Dec/16 9:56 PM;mastersingh24;I'm going to mark this done as we are not going to do anything about this for v0.6 but I believe that V1 addresses these concerns;;;","05/Dec/16 3:15 AM;kletkeman;Thanks for the explanation. I did convert our contracts to vendoring and it does work perfectly fine. One issue with vendoring is that builds are much slower when the vendor folder is present, so this is mildly annoying during development. But all in all, I am very pleased with how this all works out when deploying to external fabrics such as Bluemix. Looking forward to working with the v1 deployment mechanism.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How do I customize the SDK demo repo,FAB-1127,13459,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,nickgaski,nickgaski,nickgaski,15/Nov/16 6:18 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,17/Feb/17 6:50 AM,,,,,fabric-quality,,,,0,Documentation,quality,,,,,,,"I want to use the application with multiple versions of the fabric and multiple versions of bluemix networks (for example, I may still have an old bmx network running on v0.5-dev-preview).
I want to add my own chaincode into the application.
I want to use the application interchangeably with a local network and a bluemix network.
I want to configure the application code to increase/decrease deploy/invoke/query time delays
",,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx64f:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,nickgaski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
final post refactoring cleanup of protos,FAB-1128,13460,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,15/Nov/16 8:05 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,03/Apr/17 12:36 AM,,,,,fabric-peer,,,,0,,,,,,,,,"*.proto has been split into `common`, `peer` and `orderer` and has been integrated for most part into the fabric. In this task we will complete the cleanup
* remove peer/fabric_transaction_header.proto (use Header in common)
* move to use Header in common/common.proto
* remove  old Message
* remove old Transaction",,ChristopherFerris,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1198,,,,,,,,FAB-631,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxewf:",,,,,,Sprint 5 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Apr/17 12:33 AM;ChristopherFerris;This is marked as blocking FAB-631 but I think both this and FAB-631 are completed, i reality.;;;","03/Apr/17 12:36 AM;muralisr;[~ChristopherFerris] it is complete. Marking as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding new parameters to pom.xml(maven),FAB-1130,13462,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,suryalnvs,suryalnvs,16/Nov/16 5:03 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,19/Nov/16 3:32 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,Adding new parameters for failsafe plugin to maven pom.xml fro running infrastructure tests other than junit-tests.,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxewn:",,,,,,Sprint 5 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sbft needs to retransmit view change message on reconnect,FAB-1131,13463,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,corecode,corecode,16/Nov/16 8:47 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,17/Nov/16 6:09 PM,,,,,,,,,0,,,,,,,,,,,corecode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxewv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,corecode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"While deploying a chaincode using a path http:// , enable to point to branch or tag repository",FAB-1133,13465,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bfuentes@fr.ibm.com,bfuentes@fr.ibm.com,17/Nov/16 12:51 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,25/Nov/16 2:10 AM,,,v0.6,,,,,,0,,,,,,,,,"I want to point a specific path on a tag in Github to deploy my chaincode.

Today I can only point to the root repository not a specific tag or branch

Please add this feature for :
- a tag : i.e a zip or .tar.gz file URL
- a branch : add a way to include ""branch"" parameter if a git pull is done from the repo ",,bfuentes@fr.ibm.com,greg.haskins,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx8pj:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,bfuentes@fr.ibm.com,greg.haskins,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Nov/16 6:43 AM;mastersingh24;[~bfuentes@fr.ibm.com] - 

We don't really have any plans to make any changes in this area given this is v0.6 and also that we really want to remove the ability to deploy chaincode in this manner (basically via the REST API).

The best thing to do is to start using something like gpkg.in URLs for your packages rather than directly using github URLs in your packages.   You can checkout https://github.com/IBM-Blockchain/cc-commercialpaper   for an example of how you can use gpkg.in in combination with github branches and/or tags to actually ""version"" Go packages
;;;","22/Nov/16 10:13 PM;bfuentes@fr.ibm.com;Thank you [~mastersingh24] for quick answer.
I will do some tests with gpkg.in in the next days so

:);;;","25/Nov/16 2:09 AM;bfuentes@fr.ibm.com;What I have seen is that HTTP API is going to be deprecated, so I have to find a way to download the code on the local filesystem where the peer is running. Using Docker, I could mount a volume to do that;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Postgres support to cop server,FAB-1134,13466,12412,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,skarim,skarim,17/Nov/16 1:59 AM,14/Feb/19 1:48 AM,28/Oct/23 2:58 AM,05/Jan/17 4:36 AM,,,,,,,,,0,,,,,,,,,Add support for cop server to be able to connect to a Postgres database,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxexb:",,,,,,Sprint 5 - Membership Services,Sprint 6 - Membership Services,Sprint 7 - Memship Services,,,,,,,,,,,,,,,,,,,,,,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add mysql support to cop server,FAB-1135,13467,12412,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,skarim,skarim,17/Nov/16 1:59 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Jan/17 4:36 AM,,,,,,,,,0,,,,,,,,,Add support for cop server to be able to connect to a Postgres database,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxexj:",,,,,,Sprint 5 - Membership Services,Sprint 6 - Membership Services,Sprint 7 - Memship Services,,,,,,,,,,,,,,,,,,,,,,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
vi is not available in the peer image for v1.0,FAB-1136,13468,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,bmos299,bmos299,17/Nov/16 2:13 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Jan/17 12:08 AM,v1.0.0,,,,fabric-peer,,,,0,,,,,,,,,"I built the images via the make images.  I then deploy a container and get into the container with docker exec -it name /bin/bash.   I then try to vi the core.yaml file and receive:
bash: vi: command not found.

Do we need small editor in the image?

Barry",,bmos299,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxexr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bmos299,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/17 12:08 AM;greg.haskins;This was fixed, inadvertently I should add, by https://github.com/hyperledger/fabric/commit/b61723f9ddcc91cafd4f3a8c3634bd8d32388b32

vi seems to be included with busybox, so we have it now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer exited with error: panic: Network unable to find stable certificate for seqNo 8 (3 different values observed already),FAB-1139,13471,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,bryanhuang,bryanhuang,17/Nov/16 9:17 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,17/Nov/16 11:01 PM,,,v0.6,,fabric-orderer,,,,0,Consensus,,,,,,,,"Running fabric with docker-compose-4-consensus-batch.yml and set CORE_SECURITY_PRIVACY=true

Branch: fabric/v0.6

When invoking the chaincode, 2 peer containers exit, and found following error in peer log:

11:54:36.653 [consensus/pbft] recvCheckpoint -> CRIT 2107 Network unable to find stable certificate for seqNo 8 (3 different values observed already)
panic: Network unable to find stable certificate for seqNo 8 (3 different values observed already)

goroutine 38 [running]:
panic(0xc13e20, 0xc820aa8f00)
	/opt/go/src/runtime/panic.go:464 +0x3e6
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc820161d40, 0x103cce0, 0x5d, 0xc8209f47a0, 0x2, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x11e
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).recvCheckpoint(0xc8202c0680, 0xc8209f4760, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:1185 +0xcc7
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).Checkpoint(0xc8202c0680, 0x8, 0xc820c35680, 0x86, 0xa0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:988 +0x57e
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).execDoneSync(0xc8202c0680)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:997 +0x215
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).ProcessEvent(0xc8202c0680, 0xc30220, 0x15ffd38, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:386 +0x1843
github.com/hyperledger/fabric/consensus/pbft.(*obcBatch).ProcessEvent(0xc820388240, 0xc30220, 0x15ffd38, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/batch.go:367 +0xbc6
github.com/hyperledger/fabric/consensus/util/events.SendEvent(0x7f81732a0078, 0xc820388240, 0xda3a60, 0xc8209f4660)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:113 +0x45
github.com/hyperledger/fabric/consensus/util/events.(*managerImpl).Inject(0xc820390c80, 0xda3a60, 0xc8209f4660)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:123 +0x4f
github.com/hyperledger/fabric/consensus/util/events.(*managerImpl).eventLoop(0xc820390c80)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:132 +0xdb
created by github.com/hyperledger/fabric/consensus/util/events.(*managerImpl).Start
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:100 +0x35
",,bryanhuang,fouad.aberkane,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeyf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bryanhuang,fouad.aberkane,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/16 11:01 PM;bryanhuang;Found the root cause is the chaincode, so closing this issue.;;;","02/Mar/17 12:44 AM;fouad.aberkane;Hi, I am observing the same issue. What did you do to fix the issue...? Or could you pls provide more information regarding your finding...
Thx;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Framework for saving transactions to the history database,FAB-1140,13472,12500,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MariWade,MariWade,MariWade,17/Nov/16 10:55 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Dec/16 11:04 AM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,Create the shell that will iterate over the transactions in order to write them to the history database.,,kletkeman,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxeyn:",,,,,,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,kletkeman,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/May/17 12:17 PM;kletkeman;Is this FAB obsolete? Or do we have history with an API?

One thing that I notice here is that it appears that the stub is not involved, which means that history is not a part of the read/write set. Is this true? If so, can we really consider the history to have the same authority as the ledger itself, which was passed through endorsement and has consent? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bootstrap BDD,FAB-1141,13473,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,jeffgarratt,jeffgarratt,jeffgarratt,18/Nov/16 4:49 AM,21/Jul/18 4:08 AM,28/Oct/23 2:58 AM,20/Jul/18 11:05 PM,,,v1.0.0,,fabric-peer,,,30/Nov/16 12:00 AM,0,,,,,,,,,Implement bootstrap BDD feature.  This feature will for the basis from which all future features will be based wrt to system composition.,,binhn,ChristopherFerris,harsha544,inatatsu,jeffgarratt,kchristidis,oldsharp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-359,,,FAB-1729,FAB-1508,FAB-2728,FAB-2732,FAB-2800,FAB-2801,FAB-2862,FAB-2863,FAB-2893,FAB-3203,FAB-3430,FAB-3494,FAB-3551,FAB-3667,"30/Nov/16 2:06 AM;jeffgarratt;Pasted image at 2016_11_29 10_17 AM.png;https://jira.hyperledger.org/secure/attachment/10245/Pasted+image+at+2016_11_29+10_17+AM.png","15/Apr/17 5:25 AM;kchristidis;Screen Shot 2017-04-14 at 16.23.56.png;https://jira.hyperledger.org/secure/attachment/10665/Screen+Shot+2017-04-14+at+16.23.56.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Bootstrap BDD,,,,Unset,,,,"1|hzxeyv:",,,,Unset,Unset,Sprint 5 - Endorser,,,,,,,,,,,,,3.0,,,,,,,,,,,,binhn,ChristopherFerris,harsha544,inatatsu,jeffgarratt,kchristidis,oldsharp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Dec/16 12:08 AM;jeffgarratt;Now create the genesis block (still need to verify with orderer --bootstrap).  Had to update several pip installs.  The pysha3 is required to compute the has of the blockData using sha3 256.

1)  sudo pip install --upgrade grpcio
2)  sudo pip install ""pysha3==1.0b1""
3) sudo pip install pyopenssl
;;;","18/Dec/16 2:25 AM;jeffgarratt;Pushed update in https://gerrit.hyperledger.org/r/#/c/3357/

Now creates orderer geneisis block file and feeds to orderer.  Waiting on orderer to actually pick this file up in future change set.;;;","07/Jan/17 4:10 AM;jeffgarratt;Now working on linking in orderer with generated genesis block and creating local msp config. ;;;","11/Jan/17 11:28 PM;jeffgarratt;New change set now creates the local MSP configuration, places it into a shared volume for access by peer containers, and supplies the proper env variable settings per peer container.

https://gerrit.hyperledger.org/r/#/c/3823/;;;","12/Jan/17 4:07 AM;jeffgarratt;Changing to ECDSA keys for signing.   Need to install another python module:

sudo pip install ecdsa;;;","13/Jan/17 7:09 AM;jeffgarratt;Met today from 10-2 to discuss bootstrap for peers and orderes.  Updated the feature file to include additional steps for the ordererBootstrapAdmin to create the chainCreatorsPolicy prior to starting network, and to create the orderer configuration template after the network has been composed.  Will work to update the behave to accomodate these newly defined steps.  
;;;","16/Jan/17 10:44 AM;jeffgarratt;Following change set now creates the bootstrap genesis file and passes to orderer.  Creates the peer's local MSPs, and then successfully broadcasts the config TX to create a new channel, and receives the new block from the channel.

https://gerrit.hyperledger.org/r/#/c/3985/

Still need to work on the peer join step and subsequent chaincode deploy (endorsments) etc.;;;","18/Jan/17 1:00 AM;jeffgarratt;Now working on join channel and adding the mspConfigPath usage to peer so behave tests can configre MSPs per generated key materials.;;;","19/Jan/17 2:43 AM;jeffgarratt;Modified signing to use sha256 digest and proposal now passes validation.  Working on putting proper MSPConfig info into the Create channel request so it will be in the delivered block for join.;;;","21/Jan/17 1:16 AM;jeffgarratt;Just submitted https://gerrit.hyperledger.org/r/#/c/4629/

This gets the bootstrap.feature all the way to join channel where we fail in the peer.  Going to work with [~ales] to fix the peer now.;;;","21/Jan/17 3:00 AM;jeffgarratt;After working with [~ales], join channel now succeeds!!!!  Resubmitted patch 3 to change set, waiting for verify and reviews.   Will now move on to deployment on top of this change set.;;;","23/Jan/17 12:29 AM;jeffgarratt;https://gerrit.hyperledger.org/r/#/c/4629/ merged.  Added anchor items to signed config envelope for gossip.  Now going to work on deployment and then doc gen.;;;","24/Jan/17 7:10 AM;jeffgarratt;Made change set https://gerrit.hyperledger.org/r/#/c/4715/ to fix an issue that Kosta's now requires 4 block metadata entries.  Added for now, need to more fully understand ramifications with respect to orderer type (solo v. kafka).;;;","31/Jan/17 12:55 PM;jeffgarratt;Latest change set adds deployment to bootstrap feature : https://gerrit.hyperledger.org/r/#/c/5095/

Here are the latest steps to insure all python modules are available:

From fabric folder:

make peer
make peer-docker
make orderer-docker
#Now the pip installs
sudo pip install --upgrade grpcio-tools
sudo pip install ""pysha3==1.0b1""
sudo pip install pyopenssl
sudo pip install ecdsa
sudo pip install python-slugify;;;","20/Feb/17 6:52 AM;jeffgarratt;Latest change set adds document generation to bootstrap feature: https://gerrit.hyperledger.org/r/#/c/6257/

Also updates to latest Configuration mechanisms for bootstrap.

Here are the latest steps to insure all python modules are available:
From fabric folder:
make peer
make peer-docker
make orderer-docker
#Now the pip installs
sudo pip install --upgrade grpcio-tools
sudo pip install ""pysha3==1.0b1""
sudo pip install pyopenssl
sudo pip install ecdsa
sudo pip install python-slugify
sudo pip install b3j0f.aop;;;","21/Feb/17 6:32 AM;binhn;I also needed to 

sudo pip install -U ""jinja2"";;;","23/Feb/17 7:02 AM;jeffgarratt;Pushed new CR https://gerrit.hyperledger.org/r/#/c/6389/

Fails with:  The proposal does not comply with the channel writers for channel com.acme.blockchain.jdoe.Channel1, error No such policy type: Application/Writers)

Pushed to allow [~rameshthoomu] to verify fix for https://jira.hyperledger.org/browse/FAB-2406;;;","03/Mar/17 11:48 PM;jeffgarratt;Patched https://gerrit.hyperledger.org/r/#/c/6389/

Now complete.

Here are the latest steps to insure all python modules are available:
From fabric folder:
make peer
make peer-docker
make orderer-docker
#Now the pip installs
sudo pip install --upgrade grpcio-tools
sudo pip install ""pysha3==1.0b1""
sudo pip install pyopenssl
sudo pip install ecdsa
sudo pip install python-slugify
sudo pip install b3j0f.aop
# You may also need
sudo pip install -U ""jinja2"";;;","05/Mar/17 1:51 AM;jeffgarratt;Patched https://gerrit.hyperledger.org/r/#/c/6389/ and walked through succesfully with [~binhn].

There is a new README.md file that can be followed for behave setup using Python virtual environments.;;;","06/Mar/17 11:57 PM;jeffgarratt;Spoke with [~binhn], looking to do the following asap.

Base Fabric
* Enhance bootstrap to include TLS
* Policy:  Add reader, writer and admin policies to 1, and exercise different users in those policies calling chaincodes
* Endorsement:  Add endorsement policies to each chaincodes in 2;;;","09/Mar/17 8:02 AM;jeffgarratt;Pushed latest CR:  https://gerrit.hyperledger.org/r/#/c/7055/

Now works correctly.  Still need to make sure gossip configuration utilizes leader vs static.;;;","10/Mar/17 5:20 AM;jeffgarratt;Update TLS setting and gossip config.  Now works as closely to correctly as currently possible.

https://gerrit.hyperledger.org/r/#/c/7085/;;;","15/Mar/17 11:47 AM;jeffgarratt;Now TLS is used by default as of https://gerrit.hyperledger.org/r/#/c/7219/

Plan to work on next few items next:

1) Kafka integration into BDD with [~kchristidis]
2) Add ability to disable TLS 
3) Policy: Add reader, writer and admin policies to 1, and exercise different users in those policies calling chaincodes
4) Endorsement: Add endorsement policies to each chaincodes in 2;;;","23/Mar/17 12:04 AM;jeffgarratt;Added support to mix and match various configs including Solo/Kafka and couchdb.  Also bumped the default orderer count to 3 as this is the mimimal set we would use in a real environment.  For solo, this is simulated through the use of orderer aliasing in the examples table.  Orderer1 and orderer2 alias back to orderer0.  So in fact for solo, there is still a single orderer, though artifacts are created for 2 additional orderers and display in the composition diagram.

https://gerrit.hyperledger.org/r/#/c/7227/;;;","15/Apr/17 4:34 AM;kchristidis;[~jeffgarratt]: Running this with the latest master (tip: fe8c71da0fe52867ee91be188e2480056f820682) and running into issues on Step 39 (And user ""dev0Org0"" using cert alias ""dev0Org0App1"" sends proposal ""instantiateProposal1"" to endorsers with timeout of ""90"" seconds with proposal responses ""instantiateProposalResponses"").

This is the traceback:

{noformat}
Traceback (most recent call last):
  File ""/home/ubuntu/envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1456, in run
    match.run(runner.context)
  File ""/home/ubuntu/envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py"", line 1903, in run
    self.func(context, *args, **kwargs)
  File ""steps/endorser_impl.py"", line 124, in step_impl
    resultsDict =  dict(zip(endorsers, [respFuture.result() for respFuture in proposalResponseFutures]))
  File ""/home/ubuntu/envs/behave_venv/local/lib/python2.7/site-packages/grpc/_channel.py"", line 294, in result
    raise self
_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INVALID_ARGUMENT, Received message larger than max (24430277 vs. 4194304))>

Captured stdout:
Will copy gensisiBlock over at this point 
ipAddress in getABStubForComposeService == 0.0.0.0:32777
Returning GRPC for address: 0.0.0.0
dev0Org0 received reply: status: SUCCESS
, counter = 1
Done
Start and end = 0/0

SeekInfo = start {
  specified {
  }
}
stop {
  specified {
  }
}
behavior: FAIL_IF_NOT_READY


Done receiving blocks
Returning GRPC for address: 0.0.0.0
Returning GRPC for address: 0.0.0.0
ProposalResponse: 
response {
  status: 200
}



Returning GRPC for address: 0.0.0.0
Returning GRPC for address: 0.0.0.0
ProposalResponse: 
response {
  status: 200
}



ccSpec = type: GOLANG
chaincode_id {
  path: ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02""
  name: ""example02""
  version: ""test""
}
input {
  args: ""init""
  args: ""a""
  args: ""100""
  args: ""b""
  args: ""200""
}

Returning GRPC for address: 0.0.0.0
Returning GRPC for address: 0.0.0.0
Endorsers = [u'peer0', u'peer2'], rsults keys = [u'peer0', u'peer2']
Returning GRPC for address: 0.0.0.0
Returning GRPC for address: 0.0.0.0
{noformat}

Are you expecting this?

If not, do any suggestions for fixing this come off the top of your head? (If not no worries, will attempt to debug.)

I followed the instructions in bddtests/README.md to a T and also made sure the binaries and Docker images are fresh:

{noformat}
fabric$ docker images
REPOSITORY                                            TAG                             IMAGE ID            CREATED             SIZE
fb97334c214711e7972002dafa61222d-vp2-example02-test   latest                          f0ac3a23035b        9 minutes ago       177MB
fb97334c214711e7972002dafa61222d-vp0-example02-test   latest                          9bfb672c7f72        9 minutes ago       177MB
c68fe70c214711e7972002dafa61222d-vp0-example02-test   latest                          5257f3cf2e1b        10 minutes ago      177MB
c68fe70c214711e7972002dafa61222d-vp2-example02-test   latest                          58ddb524faf3        10 minutes ago      177MB
hyperledger/fabric-orderer                            latest                          f667fddf67b2        12 minutes ago      182MB
hyperledger/fabric-orderer                            x86_64-1.0.0-snapshot-fe8c71d   f667fddf67b2        12 minutes ago      182MB
hyperledger/fabric-peer                               latest                          6e58450fa5a5        12 minutes ago      185MB
hyperledger/fabric-peer                               x86_64-1.0.0-snapshot-fe8c71d   6e58450fa5a5        12 minutes ago      185MB
hyperledger/fabric-javaenv                            latest                          e87578e57b08        18 minutes ago      1.43GB
hyperledger/fabric-javaenv                            x86_64-1.0.0-snapshot-fe8c71d   e87578e57b08        18 minutes ago      1.43GB
hyperledger/fabric-ccenv                              latest                          23bf9a40fa7f        18 minutes ago      1.3GB
hyperledger/fabric-ccenv                              x86_64-1.0.0-snapshot-fe8c71d   23bf9a40fa7f        18 minutes ago      1.3GB
hyperledger/fabric-orderer                            x86_64-1.0.0-snapshot-0f3c9f9   a0548216d766        29 minutes ago      182MB
hyperledger/fabric-peer                               x86_64-1.0.0-snapshot-0f3c9f9   26226d06de29        2 hours ago         185MB
dev-peer3-mycc-1.0                                    latest                          0b52cb2fe814        3 days ago          177MB
dev-peer0-mycc-1.0                                    latest                          4e4f5647d639        3 days ago          177MB
dev-peer2-mycc-1.0                                    latest                          854bddac7cc5        3 days ago          177MB
busybox                                               latest                          00f017a8c2a6        5 weeks ago         1.11MB
hyperledger/fabric-baseimage                          x86_64-0.3.0                    f4751a503f02        2 months ago        1.27GB
hyperledger/fabric-baseos                             x86_64-0.3.0                    c3a4cf3b3350        2 months ago        161MB
{noformat}
;;;","15/Apr/17 5:25 AM;kchristidis;Upon further inspection, something seems to be up with the local MSP configuration.

A ""docker-compose logs"" on the network brings this up:

{noformat}
peer0_1     | panic: Fatal error when setting up MSP from directory /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig: err Could not load a valid signer certificate from directory /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig/signcerts, err Could not read directory open /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig/signcerts: no such file or directory, err /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig/signcerts
...
orderer0_1  | 2017-04-14 20:13:31.013 UTC [orderer/main] main -> INFO 001 Starting orderer with TLS enabled
orderer0_1  | 2017-04-14 20:13:31.013 UTC [orderer/main] main -> CRIT 002 Failed to load ServerCertificate file '/var/hyperledger/bddtests/volumes/orderer/e30da748214c11e7972002dafa61222d/orderer0/tls_config/orderer0Signer-orderer0-ordererOrg0-tls.crt' (open /var/hyperledger/bddtests/volumes/orderer/e30da748214c11e7972002dafa61222d/orderer0/tls_config/orderer0Signer-orderer0-ordererOrg0-tls.crt: no such file or directory)
{noformat}

I've included only the peer0_1 output for brevity but the same message applies to all peers.

 !Screen Shot 2017-04-14 at 16.23.56.png|thumbnail!

Related to that, the `bddtests/volumes` directory seems to carry no files, just folders.;;;","06/Jul/18 9:43 PM;ChristopherFerris;no longer relevant;;;",,,,,,,
Sprint 5 demo,FAB-1142,13474,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,jimthematrix,jimthematrix,jimthematrix,18/Nov/16 6:28 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,28/Nov/16 1:00 PM,,,,,fabric-peer,,,,0,consensus,Endorser,Ledger,node-SDK,,,,,"creating a demo that coordinates the accomplished work in Sprint 5:
- use CouchDB for ledger and SDK keystore and enrollment storage
- mention that LevelDB now replaces RocksDB
- use Kafka orderer
- use COP server for acquiring ECerts
- sign proposals and transactions in node.js SDK with ECerts
- verify signatures in proposal responses in node.js SDK (run-at)
- use Java SDK to show end-to-end flow without sign or verify

*From Ledger perspective, here are the instructions to demonstrate CouchDB with Marbles chaincode:*
1) Start CouchDB in Vagrant by doing ""couchdb start"" from fabric directory.  This will also download the CouchDB docker the first time it is done.

2) Switch ledger to use CouchDB instead of LevelDB in /fabric/peer/core.yaml by setting ""stateDatabase"" to ""CouchDB""

3) start orderer
./orderer

4) start peer
CORE_PEER_COMMITTER_LEDGER_ORDERER=0.0.0.0:5151 CORE_LOGGING_LEVEL=DEBUG peer node start

5) Deploy chaincode
CORE_PEER_COMMITTER_LEDGER_ORDERER=0.0.0.0:5151 peer chaincode deploy -p https://github.com/denyeart/marbles/chaincode -n marbles -c '{""Args"":[""init"",""1""]}'

6) Invoke chaincode to create marble owned by ‘tom’
CORE_LOGGING_LEVEL=debug CORE_PEER_COMMITTER_LEDGER_ORDERER=0.0.0.0:5151 peer chaincode invoke -n marbles -c '{""Args"":[""init_marble"",""marble1"",""blue"",""35"",""tom""]}'

7) Invoke chaincode to transfer marble to ‘jerry’
CORE_LOGGING_LEVEL=debug CORE_PEER_COMMITTER_LEDGER_ORDERER=0.0.0.0:5151 peer chaincode invoke -n marbles -c '{""Args"":[""set_owner"",""marble1"",""jerry""]}'

8) See state variables (JSON documents) in CouchDB UI by going to http://localhost:5984/_utils
Databases --> system --> All Documents

9) Query data using a REST client, for example to query for all marbles owned by Jerry, perform this query:
POST http://127.0.0.1:5984/system/_find
Header: Content-Type:application/json
{""selector"":{""docType"":""Marble"",""owner"":""jerry""}}",,binhn,jimthematrix,kchristidis,v_thirugnanam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxf3r:",,,,Unset,,Sprint 5 - nodeSDK,Sprint 6 - nodeSDK,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,jimthematrix,kchristidis,v_thirugnanam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 12:46 PM;binhn;""verify signatures in proposal responses in node.js SDK"" 
This is probably ""run-at"";;;","18/Nov/16 12:47 PM;binhn;Should mention LevelDB now replaces RocksDB;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Peer ""cant find snapshot-xxxxx"" while deploying chaincode",FAB-1145,13477,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,pmullaney,pmullaney,18/Nov/16 11:22 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,02/Dec/16 11:18 PM,,,,,fabric-build,,,,0,,,,,,,,,"Peer returns the following error at times while deploying chaincode:

""vp1_1     | 01:41:42.880 [peer] beforePeers -> DEBU 8c3 Received PeersMessage with Peers: peers:<ID:<name:""vp1"" > address:""172.17.0.4:7051"" type:VALIDATOR > 
vp0_1     | 01:41:43.117 [dockercontroller] deployImage -> ERRO b15 Error building images: Tag x86_64-0.7.0-snapshot-8c2064e not found in repository docker.io/hyperledger/fabric-ccenv
vp0_1     | 01:41:43.117 [dockercontroller] deployImage -> ERRO b16 Image Output:
""",,greg.haskins,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxezb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,greg.haskins,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Dec/16 11:18 PM;greg.haskins;Fixed with CR 2895: https://gerrit.hyperledger.org/r/#/c/2895/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Probe method in gossip Comm interface can use RemotePeer as an input argument,FAB-1146,13478,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,18/Nov/16 5:55 PM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,19/Nov/16 6:38 PM,,,v0.6,,fabric-peer,,,,0,,,,,,,,,"In the comm package, it exist a struct 'RemotePeer' which already take endpoint and PKIID properties. It match the input arguments in the Probe method and could be replaced.",,grapebaba,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxezj:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,grapebaba,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Nov/16 6:02 PM;grapebaba;talked with[~yacovm], I can take this one.;;;","19/Nov/16 6:38 PM;yacovm;Thanks [~grapebaba] ! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete / remove chaincode,FAB-1149,13482,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,markparz,markparz,19/Nov/16 6:28 AM,23/Jan/20 3:41 AM,28/Oct/23 2:58 AM,23/Jan/20 3:41 AM,,,Future,,fabric-peer,,,,2,chaincode,Endorser,stale-item,,,,,,A chaincode developer needs the ability to clean up old chaincode by delete or 'undeploy' so that unneeded or unwanted chaincode no longer is using up system resources,,akuma921,davidkhala,jiangyaoguo,markparz,sstone1,sykesm,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxf07:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,akuma921,davidkhala,jiangyaoguo,markparz,sstone1,sykesm,toddinpal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/17 1:29 PM;akuma921;Any update on this? is it still pending?;;;","09/Aug/17 12:15 AM;davidkhala;A hacker way of doing this might be 

[https://stackoverflow.com/questions/36915343/remove-stored-blockchain-when-developing-chaincode]

This seems reasonable. But I have not tested yet

 

 ;;;","21/Aug/17 11:51 AM;jiangyaoguo;what about new  “chaincode stop/start”  in FAB-5781？ ;;;","23/Jan/20 3:41 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need unit test for peer/msgvalidation.go,FAB-1150,13483,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,muralisr,muralisr,19/Nov/16 6:58 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,16/Jan/17 11:34 PM,,,,,fabric-peer,,,,0,,,,,,,,,"https://gerrit.hyperledger.org/r/#/c/2581/ introduces some exported functions in peer/msgvalidation.go. These are excercised in ESCC unit tests, the endorser so its not totally terrible to not have a test case. As the code has already been rebased a few times, in the interest of avoiding more churn we could add the test case to be added after the merge. Creating this item to track that.",,ales,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf0f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ales,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/17 11:34 PM;ales;I'll mark this as done - all methods exported by core/common/validation/msgvalidation.go are tested by the 2 test files in the same package that exercise good and bad path;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Side DB - Channel Private Data - experimental feature,FAB-1151,13484,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,markparz,markparz,19/Nov/16 9:47 AM,21/Jul/18 4:09 AM,28/Oct/23 2:58 AM,08/Mar/18 9:18 PM,,,v1.1.1,,fabric-ledger,,,,24,chaincode,Endorser,Ledger,Release-planning-1.1-TechPreview,,,,,"* As a Fabric deployer, I would like to maintain data such that only its evidence is exposed to the chain, ordering service, and channel peers while the data itself is disseminated to peers based on policy, so that we can achieve finer-grained data confidentiality for transactions while still maintaining ledger consistency and still being able to leverage Fabric for both data evidence and dissemination of the data (but in a more private fashion).

*Design* 

Slides attached.",,AaronChung,AdnanChoudhury,alburt,andrasfe,AshishkumarLakshmanan,atakada,baohua,cassolato,ChristopherFerris,daijianw,denyeart,divina10,DrVadson,edwardsun9,elli-androulaki,flyinox,fredbi,Gauravimpro,GavinPacini,gennadyl,grapebaba,guillaume.a,hamza113,Hangyu_FJH,Jan_Rzepecki,jarvis26,jexek,jiangyaoguo,jmcnevin,lfeagan,luomin,marek5050,markparz,matingwei,mfrank,MichaelWang,mne,nhrishi,nnao,OBrezhniev,philT,pvrbharg,rmohta,romain_griffiths,SjirNijssen,spipes,ssaddem,stanliberman,toddinpal,troyronda,vdods,vigneswaran.r,vladyslavmunin,warm3snow,wutongtree,xixuejia,xuanyue202,yacovm,zRich,,1728000,1296000,,0%,1728000,1296000,,,,,,,,,,,FAB-2869,FAB-6454,,,,FAB-1234,,,,,,,FAB-1234,FAB-5082,FAB-6600,FAB-1526,FAB-1154,FAB-2961,FAB-5108,FAB-6545,FAB-7746,FAB-8718,,,,,,,,"23/Oct/17 10:51 PM;denyeart;PrivacyEnabledLedger20171022.pptx;https://jira.hyperledger.org/secure/attachment/12720/PrivacyEnabledLedger20171022.pptx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Side DB - Private Data ,,,,Unset,,,,"1|hzxf0n:",,,,Unset,Unset,,,,,,,,,,,,,,40.0,,,,,,,,,,,,AaronChung,AdnanChoudhury,alburt,andrasfe,AshishkumarLakshmanan,atakada,baohua,cassolato,ChristopherFerris,daijianw,denyeart,divina10,DrVadson,edwardsun9,elli-androulaki,flyinox,fredbi,Gauravimpro,GavinPacini,gennadyl,grapebaba,guillaume.a,hamza113,Hangyu_FJH,Jan_Rzepecki,jarvis26,jexek,jiangyaoguo,jmcnevin,lfeagan,luomin,marek5050,markparz,matingwei,mfrank,MichaelWang,mne,nhrishi,nnao,OBrezhniev,philT,pvrbharg,rmohta,romain_griffiths,SjirNijssen,spipes,ssaddem,stanliberman,toddinpal,troyronda,vdods,vigneswaran.r,vladyslavmunin,warm3snow,wutongtree,xixuejia,xuanyue202,yacovm,zRich,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Mar/17 3:20 AM;yacovm;{quote}Potentially the secret write set could be written directly to Gossip memory cache, so that it is readily available for non-endorsing peers to retrieve.{quote}
I don't think we should think in this high granularity. Gossip has message caches for delivery and they are maintained regardless of the message types.

Validation phase:
{quote}therefore efficiencies can be built into the gossip to retrieve a batch of secret write sets, potentially an entire blocks worth of secret write sets.{quote}
Although that's true, I don't see a reason to gossip them as blocks:
* If the Wset is disseminated without the corresponding ""non-secret"" block sequence number - you have no way of grouping secret transactions into blocks because you do not have the block sequence number yet.
* If the Wset is disseminated with the corresponding ""non-secret"" block sequence number - it means you have waited until the block was created in the ordering service and then reached your peer. This, is a very dangerous thing to do because your peer might die until that happens and they you're left with blocks with ""zombie"" transactions in them (transactions that have hash, and no corresponding secret plaintext)

If you mean to gossip them in a single batch associated to the same transaction then it's a good idea. 

I actually think that latency is much more important here than efficiency* at the first stage* and we can optimize if we see performance problems. 

First and foremost, I think that write sets need to be batched as transactions (secret transactions) and maybe even signed by the endorsing peer.

*So for the rest of the comment if I say secret transaction I meant a batch of secret Wsets in the same Txn*

The thing that worries me here, is the flow of the validation:
(d) says more or less: 
*if the FLAG is set for a k-v pair in the Wset (i.e primary), retrieve the secret value either from (i) locally (piece of cake) or from (ii) some peer that endorsed the transaction, whether directly, or transitively.*
So, (ii) is a problem because it may never happen. That peer might be dead and didn't have a chance to send to anyone its transaction.
The main reason for this is actually not that you're out of luck but rather that the peer that endorsed might have not even known you at the time of endorsement, and therefore- didn't send the transaction message to *anyone*.
I haven't thought of that for too long at the time of writing the comment, but an approach that springs to my mind is that could help is:
* Always send transactions to multiple endorsers, for redundancy.
* Somehow, send to the endorser the number of endorsers that the transaction was sent to. If the peer's gossip layer doesn't know anyone else in the channel from some reason, but you actively tell the peer that it should have known at least another peer, it gives that peer a sanity check and perhaps some countermeasures needs to be applied in such a case- for example- the peer will deny an endorsement if you send it one with private data, and tell in the request that it needs to know another 2 peers, and it actually doesn't know any peer at all, etc.

I also have a question- what happens now when you get a block (from what I remember from the code) is that you immediately go over its transactions and mark some as valid and some are not, right?
Here, it is suggested to halt the commit until all private data for transactions with flags has reached the peer. 
Perhaps it's worth to save the block in any case to the disk, without committing it to the state DB, and:
whenever a secret transaction comes:
* Put it into the tempDB just like you were doing for a transaction endorsed from you 
* Search in the blocks you saved on disk for this transaction, and whenever you finally get a block that you can find for each FLAGGED transaction in that block- a corresponding transaction in tempDB - only then you commit that block to the stateDB? 
I think it can be more efficient from a distributed system convergence point of view. 
{quote}4.	Irrespective of the transaction state (valid/invalid), we preserve the secret write-set in the private temp DB in case other committers still need it. {quote}
So, I think we should be able to _link_ between gossip and this stateDB somehow, and we have to do it anyway because we currently only gossip ledger blocks which are signed by the ordering service. 
For a transaction endorsement I think a gossip broadcast needs to be used (invocation of the Gossip API call) that performs a best effort dissemination to the target audience of peers.
Now, for synchronizing secret data between peers I think the following approach should be employed:
* If the transaction has a corresponding block, you batch it with other transactions that have a corresponding block, and use the existing state transfer mechanism that exists now. I guess we'll need to somehow flag the messages as ""for secret data"" but it's not an issue from what I think
* If the transaction doesn't have a corresponding block, you don't use state transfer but instead you use the existing pull mechanism (I can elaborate if needed, but it's outlined [here|https://github.com/hyperledger/fabric/blob/master/gossip/gossip/algo/pull.go#L29-L45]. The messages in the pull ""cache"" can expire in a peer after it gets a new block committed, because that ensures that these messages can be transferred via state transfer.

{quote}3.1. Gossip of private write-sets
How to handle scenarios when private data write-sets cannot be retrieved from remote peers. Is there a precedent for gossip timeouts and error handling that can be used here?{quote}
I am wondering, if something can be done in case you got a block and didn't get the corresponding secret transactions for that block for a long time. The transaction has the endorsement inside, which has the identity of the peer. Perhaps, you could use that in order to directly contact that peer and ask for its stuff in tempDB? ([~C0rWin] ?  what do you think?)

{quote}It was assumed above that private data should be copied to all non-endorsing peers on the channel (via gossip).  However, there may be use cases where the private data should not be made available to all peers on the channel. Two options are possible:{quote}
Generally- I guess it's possible to have a custom different routing policy in gossip for secret messages, but - who sets the restriction, who signs it, and- do the peers that are not in the privileged group know about this? because otherwise... they'd keep begging other peers for secret data won't they?
Personally- I think this needs to be solved via having 2 different channels, and 2 transactions from the client SDK instead of 1. 
;;;","28/Mar/17 5:51 AM;denyeart;[~yacovm]

I have updated the document per your comments. 

bq. Potentially the secret write set could be written directly to Gossip memory cache, so that it is readily available for non-endorsing peers to retrieve.

Removed from document now, just wanted to run the idea of updating temp DB and 'priming' the gossip cache during endorsement.

bq. therefore efficiencies can be built into the gossip to retrieve a batch of secret write sets, potentially an entire blocks worth of secret write sets.

Removed. And yes, write sets would be gossiped at the transaction level, e.g. a block with 5 secret transactions would get gossiped as 5 items, each having 1 to N key updates in the transaction's write-set.

About the concerns with private transactions not being gossiped, or not being gossiped quick enough - I share those concerns as being a primary risk, and added your ideas to the document's Open Questions section so that we can iterate them there.

bq. 4. Irrespective of the transaction state (valid/invalid), we preserve the secret write-set in the private temp DB in case other committers still need it. 

Are you suggesting we attempt to gossip the secret data at endorsement time to non-endorsers, with the assumption that the non-endorsers will need it eventually?  That will certainly help to minimize delays at validation/commit time.  And is actually in line with my idea of 'priming' the gossip at endorsement time.

On your other two bullets, yes, I was thinking if the block already exists, that the block and private write-sets could be gossiped together. That is in line with my idea of batching transactions associated with a block, if a peer has all of them.  I'd suggest go ahead and update the document directly with these proposed gossip details, since you can explain it better than me.

bq. It was assumed above that private data should be copied to all non-endorsing peers on the channel (via gossip). However, there may be use cases where the private data should not be made available to all peers on the channel. Two options are possible:

I agree the idea of subchannels solves many of the same problems as channels themselves, therefore it may be better to simply handle this via existing channel design. If we do move forward with it, I was thinking the subchannel membership would be done in a config transaction just like channel membership.  The peers that are not in the privileged group would be aware of this and would not ask other peers for the secret data.;;;","28/Mar/17 6:49 AM;yacovm;{quote}Are you suggesting we attempt to gossip the secret data at endorsement time to non-endorsers, with the assumption that the non-endorsers will need it eventually? That will certainly help to minimize delays at validation/commit time. And is actually in line with my idea of 'priming' the gossip at endorsement time.{quote}
Of course. All peers are committers, right? They would need these Wsets very soon- once the block would be sent to them. If you can send them the Wsets before that, there isn't a problem since the block would get to them unless the client crashes (and if it does- then you can clean up the tempDB, right?)

{quote}I'd suggest go ahead and update the document directly with these proposed gossip details, since you can explain it better than me.{quote}
Will do (I guess tomorrow) and send you. This needs to be carefully thought, because if we want to gossip signed Wsets, we need to represent the Wset batch of a transaction as a tuple of Txn id and peer identifier, but for blocks of such transactions we'd also need not only the sequence number of the block, but also a *set* of peer IDs (because, if the block has been committed, it means the validation policy has been satisfied, and this means we got a threshold signature, right?)

{quote}I agree the idea of subchannels solves many of the same problems as channels themselves, therefore it may be better to simply handle this via existing channel design{quote}
{quote} Each subchannel group has access to private data associated with the subchannel. Whereas channels define which organizations can share/maintain chains, subchannels define which organizations can share/maintain which private data alongside the chain.  For example Subchannel A members have access to private data relating to A keys, while Subchannel B members have access to private data relating to B keys.  A data will only be gossiped to A members, B data will only be gossiped to B members.  {quote}
This doesn't list an option, this list a wanted feature and doesn't say how it is to be implemented in fabric.
We currently have channels and we know how they work. We don't have sub-channels and it is not clear to me how they are to be implemented should we choose this option.

Now, for option 1:
{quote}As part of channel membership configuration, a flag can indicate which organizations should receive private data and which organizations should not. Peers and the gossip layer would honor the configuration.  Additionally, for peers that do not have access to private data, chaincode privateData APIs would not be available.  That is, these peers could not act as endorsers for transactions working with private data.{quote}
This is somewhat similar to how gossip works at the moment:
We have a list of organizations of a channel at each point of time.
We route channel-related messages based on whether a peer in question belongs to an org in the channel or not, while for blocks we also do a more strict check- we consult the channel readers policy for the peers.

I guess, a similar thing can be done here, but it needs to be defined where this information (which organizations are eligible) is taken from, how is it signed, and who decides on it, etc.;;;","28/Mar/17 8:10 PM;denyeart;[~yacovm]
Agreed, we can start gossiping write-sets at endorsement time, we dont have to wait until commit time.  This is what I was alluding to when I wrote that endorsement should update gossip, in addition to writing to the local temp db. And yes, we will have a way to clean up orphaned temp db entries regardless.

I didn't follow all your comments about signatures required in gossip. Partially because I don't understand existing gossip security and state transfer. I guess update the doc with your gossip design aspects and then maybe it will become clear.

Concerning the options to restrict private data to select peers, these are not in plan currently and as you mention not designed yet.  They are just add-on ideas for consideration at this point.  If it is determined that these are important aspects, we'll move forward to the design phase, and will likely need help from Jason and others on the configuration design aspects. At a high level, I was thinking it would be similar in nature to existing channel membership configuration design.

I'll let you add gossip design to the document, before I make any further changes.;;;","29/Mar/17 1:01 AM;denyeart;[~yacovm][~C0rWin]
Here is the document in google docs for collaboration: https://docs.google.com/document/d/1OOoE062XMsZr-T5S-JvxG7ujkU10dipx9r1CCBqi8NE/edit;;;","29/Mar/17 5:43 AM;yacovm;{quote}I'll let you add gossip design to the document, before I make any further changes.{quote}
I don't think that a gossip-aspect design should be added at this stage, until we discussed this internally and thoroughly. The things I outlined here were merely to help point out problems and concerns, not to plan/design it.

{quote}I didn't follow all your comments about signatures required in gossip. Partially because I don't understand existing gossip security and state transfer. I guess update the doc with your gossip design aspects and then maybe it will become clear.{quote}
I can elaborate and it'll be clear why I want to sign:
* The task that the gossip layer needs to do is: given K endorsers for the same transaction, you want to disseminate K secret Wset sets
* Each such a set, can be batched into a message, identified by the TxId and the peer that endorsed this.
* When a peer in the channel receives such a message, it needs to know whether this message indeed came out of the endorser, or that some byzantine peer tricked you, and for example- changed some value, or omitted a Wset from the batch, etc. etc.
* These problems above can only be discovered later on, after it passes gossip to the validation layer of the peer, therefore- making it hard to protect against, and fix.
* If we sign the batches with the endorsers, the only possibility of attack is having the endorser itself byzantine- but, there is no reason for it to even send the message in the first place. ;;;","10/Apr/17 8:30 PM;elli-androulaki;Hi, [~denyeart] [~yacovm]

So a few questions/comments on the deck:
 - you mention that the relationship between the data stored on the side db and the data stored on the blockchain (e.g., hash, keyed-hash, ciphertexts / encryption keys) may vary. For some of these scenarios you may need to access the data from the sideDB directly, i.e., without having some evidence or commitment being stored on the blockchain state db. For this, we would need to extend the db access API to allow for direct access to the sideDB, no?
 - given the above point, it may make sense to work on libraries that would leverage this sideDB for these three cases at least: 
   1. Hashes of state values go to the blockchain, pre-images to the sideDB
   2. Keyed-hashes of state values go to the blockchain, pre-images and hash key go to the sideDB
   3. Ciphertexts of state values go to the blockchain, keys are stored to the sideDB
   4. Hashes of ciphertexts of the data go to the blockchain, ciphertexts, and decryption keys stored to the sideDB
 - proposals referring to queries to the sideDB could also merit special access control mechanisms 
 - confidentiality of sideDB content; from what I understand it may be that not all peers participating in a channel should have the same content within their sideDB. However peers who see a tx on the blockchain should be able to tell whether there is sideDB content associated to this tx that the peers should receive, and peers who have received an update should be able to verify such an update, and filter out which peers it should be sending it too. For this there can be an additional policy defined at chaincode instantiation time, defining the set of entities (peers or clients) that should be able to receive sideDB updates referring to a chaincode. Gossip propagation mechanism of sideDB content could consult such policies.

Adding [~marko.vukolic],[~ales],[~adc].
;;;","11/Apr/17 5:31 AM;yacovm;{quote}and peers who have received an update should be able to verify such an update, and filter out which peers it should be sending it to{quote}
You mean- to know which peers, out of the peers they know- are eligible of receiving such updates?

{quote} For this there can be an additional policy defined at chaincode instantiation time, defining the set of entities (peers or clients) that should be able to receive sideDB updates referring to a chaincode.
 Gossip propagation mechanism of sideDB content could consult such policies.{quote}
My only concern here is that all your policy frameworks, work with signature verification.
That means, that (unless optimizations of memoizations are employed) gossip would need to verify signatures when they do these routing decisions. 
Currently we have similar things for channels, but only for blocks. 
Now, when you increase the granularity for chaincodes- that makes it much more signature verifications, no?;;;","13/May/17 11:19 AM;baohua;This design will help protect data leakage at the orderer side, and also enhance the protection in peer side.

At the sdk sides, we need support of adding an option to specify the tx confidence level.

e.g., raw to use normal db, while hash, encrypted to use other types of db.;;;","25/May/17 8:34 PM;denyeart;[~C0rWin]

Manish has created a repository to collaborate on the Side DB work: https://github.com/manish-sethi/fabric-sidedb
This repo has three branches
1) master
2) sidedb-dev
3) manish-sidedb-dev

Following is the plan:
- We will not submit anything to the master branch and will keep this in sync with hyperledger master.
- We would submit the pull requests to sidedb-dev branch and will merge after review
- manish-sidedb-dev is a personal branch for Manish

Others would need to do the following:
- create a fork from the above repo
- delete the branch manish-sidedb-dev from your fork
- push your changes to sidedb-dev in your fork
- create a PR on sidedb-dev in the above repo in my area;;;","13/Jun/17 3:29 AM;pvrbharg;This is bvperepa@us.ibm.com - an IBMer @ customer giving voice to customer requirements. We believe this capability to be of interest to my customer use case today. I need the following assumptions and understandings clarified:

A)

The above capability enables Peer N and Peer N+1 for any arbitrary N value to engage in a private conversation on the side that can not be understood by any other peers in the network other than Peer N and Peer N+1. At the same time, in the same scope/context of Ledger/Channel/Peer Node Visibility/policies, other peers can engage in private side conversations in parallel and concurrently - such as Peer N+1 & Peer N+2, with this conversations  not accessible to Peer N (non-transitive). The private conversations are taking place in parallel and concurrently - in the context of ledger/channel/peer members on channel/ledger/policies. If so - we have a need for this capability with my customer use case today.

B)

This concept of Side DB - Private Channel Data has some context and overlap with Quorum's private transactions??

[https://github.com/jpmorganchase/quorum/wiki/QuorumChain-Consensus]

 

Any clarifications or explanations are welcome. Thanks.;;;","13/Jun/17 11:57 AM;baohua;bhargav, thanks for the feedback from customers.

This side db design is actually to help protect the tx content from orderers, which only require tx id info to offer the ordering result.

Similar design idea was seen (even in bitcoin network) to only put encrypted data on chain, instead of everything.;;;","27/Jun/17 5:23 AM;vdods;It seems like there are two independent concerns here:

1) privacy of ledger keystore values

2) external storage of data (using a hash of said data for data provenance/validation as described in the design doc)

 

In this proposal, it seems like they're coupled, but they don't need to be – I would suggest decoupling them, as there are use cases where one might want each possible combination:

Neither 1 nor 2) This is what we have now, and should obviously be kept available.

1 but not 2) Storage of private data but that must be kept in the blockchain, say for later decryption, or for regulatory audit.  My company is personally interested in this specific configuration.

2 but not 1) Storage of non-sensitive data that's deemed too large to be kept within the chain itself, but still needs to be verified via the hashing scheme.  My company is personally interested in this specific configuration.

1 and 2) Storage of sensitive data such that no ""adversarial"" peers have access to it, even though it's encrypted – this is what is being proposed in the design document, as far as I understand.  My company is personally interested in this specific configuration.

 

Thus there would be two independent configuration flags for storing/retrieving/deleting data:

1) private (i.e. encrypted)

2) external

 ;;;","08/Aug/17 1:36 AM;ChristopherFerris;This has the requisite 5 maintainer votes and can proceed.;;;","08/Aug/17 8:48 AM;andrasfe;[~baohua] , you mentioned in your comment to Bhargav that the goal is strictly to protect info from orderers. My understanding is that it does not only protect data from orderers, but also from subset peers. Also sensitive data is not present on the blockchain. 

 

Please correct me if I'm wrong.

 

thanks!!;;;","08/Aug/17 8:56 AM;andrasfe;Also, it appears that Quorum offers a higher level of granularity, as transaction visibility can be set at the time of smart contract invocation, by specifying select nodes that would have access. What would be the proposed solution for such need?;;;","18/Aug/17 8:52 AM;denyeart;Collaboration on the design has been ongoing here:

[https://docs.google.com/document/d/1ShrgrYPWLznZSZrl5cnvmFq9LtLJ3tYUxjv9GN6rxuI/edit# |https://docs.google.com/document/d/1ShrgrYPWLznZSZrl5cnvmFq9LtLJ3tYUxjv9GN6rxuI/edit] 

Due to the evolution of collaboration the document itself has become somewhat messy.  I intend to draft a shorter more cohesive document now that the design is stabilizing.

 

 ;;;","08/Mar/18 9:18 PM;denyeart;Marking as Done as experimental feature in 1.1.

Promoting to a production feature will be tracked in FAB-8718.;;;",,,,,,,,,,,,,,,,
Custom transaction workflow type,FAB-1152,13485,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,markparz,markparz,19/Nov/16 9:52 AM,12/Jul/19 8:32 PM,28/Oct/23 2:58 AM,12/Jul/19 8:32 PM,,,,,,,,,1,chaincode,,,,,,,,Define and implement a custom transaction type WORKFLOW. This includes a system chaincode WSCC to orchestrate transaction flow and event handling.,,markparz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,576000,576000,,0%,576000,576000,,,,,,,,,,,,,,,,,,,,,,,FAB-1021,,,FAB-2440,FABN-641,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxf0v:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,markparz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Append Only Endorsement,FAB-1154,13487,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,markparz,markparz,19/Nov/16 10:04 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,25/May/17 11:48 PM,,,Future,,fabric-peer,,,,1,chaincode,Endorser,,,,,,,"The ability to have endorsements from peers that are not part of the target channel.

+*Rationale*+

* There may be a channel where there are a limited number of peers.
* There is a need to require more endorsements than there are reliably peers in the channel.
* There are other peers that may see the data, but should not store it.

+*Restrictions*+

* The writes are append only (no updates, and no deletes to existing data).
* If there is a version problem (2 transactions attempt to append the same key value) then it would fail at commit time.

+*Changes to the Client SDK*+

The client needs a way to request append-only endorsement for a channel that is different than the endorsement channel.

+*Changes to the Endorser+*

The endorser should be able to create a write set without having access to the target ledger.

+*Changes to the Committer*+

The committer should raise exception if an attempt to commit fails due to a duplicate key.
",,binhn,denyeart,markparz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,864000,864000,,0%,864000,864000,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxbuf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,denyeart,markparz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/17 3:50 AM;binhn;[~markparz] We need some use-cases for this one. It seems to list a bunch of conflicting requirements. For example, somehow a peer endorses a transaction without seeing the data;;;","25/May/17 11:48 PM;denyeart;This item has been superseded by FAB-1151, specifically partitioning aspect of FAB-1151 Side-DB.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GossipStateProvider unit test case is failing with timeout message,FAB-1158,13491,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,20/Nov/16 12:26 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,08/Apr/17 6:29 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"Master build is broken with one of the unit-test case failure. Change has been implemented in this patch set https://gerrit.hyperledger.org/r/#/c/2505/

gossip/state/state_test.go

case <-time.After(timeout):
		t.Fatal(""Timeout has expired"")
		break",Jenkins CI,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf1j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Nov/16 4:42 AM;rameshthoomu;@yacovm mentioned in slack channel that this test ""TestNewGossipStateProvider_GossipingOneMessage"" test has been disabled in patch: https://gerrit.hyperledger.org/r/#/c/2575 but we observed this test still running and failing with timeout.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Push genesis block upon setting up broadcaster,FAB-1161,13494,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,21/Nov/16 2:08 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,23/Nov/16 4:42 PM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"Current logic: hold off on pushing genesis block until first broadcast request comes in.

New logic: push genesis block as soon as orderer is brought up. The side-effect of this is that any deliver requests that come up now won't panic, because they will reach an existing topic.

Related: https://hyperledgerproject.slack.com/archives/fabric-consensus-dev/p1479533150004175",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-32,,,,,,,,,"1|hzx9mn:",,,,,,Sprint 5 - Consensus,Sprint 6 - consensus,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Nov/16 7:17 AM;kchristidis;https://gerrit.hyperledger.org/r/2657

Proof: https://hyperledgerproject.slack.com/archives/fabric-consensus-dev/p1479680213004224

Can be tested with this docker-compose file https://hyperledgerproject.slack.com/archives/fabric-consensus-dev/p1479533769004179 by doing a simple docker-compose up.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP peer config file should be read from a global config path,FAB-1162,13495,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,21/Nov/16 5:01 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,01/Dec/16 7:34 AM,,,,,fabric-peer,,,,0,,,,,,,,,Currently peer-config.json is being read from GOPATH. This will break environments where GOPATH is not the root of the fabric. One option is to use PEER_CFG_PATH which has been used to deal with similar issue with core.yaml.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf1z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query timeout crash a chaincode [v0.6],FAB-1163,13496,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,stylix,stylix,21/Nov/16 10:50 AM,05/Mar/19 12:04 PM,28/Oct/23 2:58 AM,10/May/17 10:16 PM,v0.6,,v1.0.0-alpha2,,fabric-peer,,,,2,alpha2,chaincode,help-wanted,,,,,,"*Issue*
With some heavy process, e.g. query with a very time consuming function,
I found that when the query time is over 30 seconds, the chaincode will got crashed

*Chaincode *log
------------------------------------------------------------------------------
09:01:43.342 [shim] DEBU : [eecae41e]Sending RANGE_QUERY_STATE
09:01:46.983 [shim] DEBU : [eecae41e]Received message RESPONSE from shim
09:01:46.983 [shim] DEBU : [eecae41e]Handling ChaincodeMessage of type: RESPONSE(state:ready)
09:01:46.983 [shim] DEBU : [eecae41e]before send
09:01:46.983 [shim] DEBU : [eecae41e]after send
09:01:46.983 [shim] DEBU : [eecae41e]Received RESPONSE, communicated (state:ready)
09:01:46.983 [shim] DEBU : [eecae41e]Received RESPONSE. Successfully got range
Removed: 368
09:01:46.984 [shim] DEBU : [eecae41e]Sending RANGE_QUERY_STATE
2016/11/18 09:01:47 transport: http2Client.notifyError got notified that the client transport was broken EOF.
09:01:47.027 [shim] ERRO : Received error from server: rpc error: code = 13 desc = transport is closing, ending chaincode stream
Error starting AML chaincode: rpc error: code = 13 desc = transport is closing
------------------------------------------------------------------------------



However, on the *validator peer,* it’s still there, but shown some segmentation fault.
------------------------------------------------------------------------------
NFO 0a5 Successfully queried chaincode: []
08:59:53.631 [rest] ProcessChaincode -> INFO 0a6 REST successfully query chaincode: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""[]""},""id"":0}
09:01:13.693 [rest] ProcessChaincode -> INFO 0a7 REST processing chaincode request...
09:01:13.693 [rest] processChaincodeInvokeOrQuery -> INFO 0a8 REST query chaincode...
09:01:13.693 [devops] invokeOrQuery -> INFO 0a9 Transaction ID: eecae41e-05fc-4175-aedb-0a2aa96db4ac
09:01:43.694 [rest] processChaincodeInvokeOrQuery -> ERRO 0aa Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)
09:01:43.694 [rest] ProcessChaincode -> INFO 0ab REST successfully query chaincode: {""jsonrpc"":""2.0"",""error"":{""code"":-32003,""message"":""Query failure"",""data"":""Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)""},""id"":0}
panic: runtime error: invalid memory address or nil pointer dereference
        panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x6f21be]

goroutine 1481284 [running]:
panic(0xb82c00, 0xc4200160b0)
        /usr/local/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState.func1.1(0xc420268b80, 0xc428d7d040, 0xc4202e2e48)
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:689 +0x4e
panic(0xb82c00, 0xc4200160b0)
        /usr/local/go/src/runtime/panic.go:458 +0x243
github.com/hyperledger/fabric/core/chaincode.(*Handler).putRangeQueryIterator(0xc420268b80, 0x0, 0xc4257eb830, 0x24, 0x11da2a0, 0xc42015a1c0)
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:149 +0x8f
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState.func1(0xc420268b80, 0xc428d7d040)
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:727 +0x2de
created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:774 +0x49
------------------------------------------------------------------------------



And here is what the *other validator peers* keep talking about
------------------------------------------------------------------------------
09:13:12.002 [peer] ensureConnected -> WARN 171 Touch service indicates dropped connections, attempting to reconnect...
2016/11/18 09:13:13 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 11.44.0.7:7051: getsockopt: connection refused""; Reconnecting to {""11.44.0.7:7051"" <nil>}
2016/11/18 09:13:14 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 11.44.0.7:7051: getsockopt: connection refused""; Reconnecting to {""11.44.0.7:7051"" <nil>}
09:13:15.003 [peer] chatWithPeer -> ERRO 172 Error creating connection to peer address 11.44.0.7:7051: grpc: timed out when dialing
2016/11/18 09:13:15 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 11.44.0.7:7051: getsockopt: connection refused""; Reconnecting to {""11.44.0.7:7051"" <nil>}
------------------------------------------------------------------------------


*To reproduce it*
Run a query more than 30 secs on v0.6 branch",,aelmanaa,ChristopherFerris,denyeart,jojocheung,muralisr,shibo.lin,stylix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3040,,,,,,,,,,,,,,,FAB-2788,,,,,,,,,,,,,,"09/May/17 3:43 AM;muralisr;read_ledger.go;https://jira.hyperledger.org/secure/attachment/10803/read_ledger.go",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf27:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,aelmanaa,ChristopherFerris,denyeart,jojocheung,muralisr,shibo.lin,stylix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Apr/17 8:32 PM;ChristopherFerris;this needs to be validated against current master (v1.0-alpha) and if relevant, tagged with v1.0.0. If not, mark WON'T FIX and close (DONE). [~Clayton Sims];;;","11/Apr/17 12:36 PM;jojocheung;With recent master branch of fabric up till commit 
{code}
commit cacb292921553900ea808344599b9914632bf1d3
Author: Gregory Haskins <gregory.haskins@gmail.com>
Date:   Tue Apr 4 09:21:17 2017 -0400

    [FAB-2865] Set the chaincode file mode bits
    
    We should force the mode bits, rather than accepting what the
    filesystem just happened to present.
    
    Fixes FAB-2865
    
    Change-Id: I02618026927607cc78fd5545e05880bf01bea5af
    Signed-off-by: Gregory Haskins <gregory.haskins@gmail.com>
{code}
I'm still getting a similar issue
{code}
===================== Querying on PEER0 on channel 'MarblesTradingAlliance'... ===================== 
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/cacerts/peerOrg0.pem
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/keystore/peer0Signer.pem
CORE_PEER_LOCALMSPID=Org0MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/signcerts/peer0Signer.pem
CORE_PEER_ADDRESSAUTODETECT=true
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0:7051
CORE_PEER_ENDORSER_ENABLED=true
CORE_NEXT=true
Attempting to Query PEER0 ...3 secs
Attempting to Query PEER0 ...7 secs
Attempting to Query PEER0 ...10 secs
Attempting to Query PEER0 ...13 secs
Attempting to Query PEER0 ...16 secs
Attempting to Query PEER0 ...31 secs
Attempting to Query PEER0 ...35 secs
Attempting to Query PEER0 ...38 secs
Attempting to Query PEER0 ...41 secs
Attempting to Query PEER0 ...44 secs
Attempting to Query PEER0 ...47 secs
Attempting to Query PEER0 ...50 secs
Attempting to Query PEER0 ...53 secs
Attempting to Query PEER0 ...57 secs
Attempting to Query PEER0 ...61 secs

2017-04-11 03:13:17.849 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-04-11 03:13:17.856 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-04-11 03:13:17.856 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-04-11 03:13:17.857 UTC [msp] Sign -> DEBU 004 Sign: plaintext: 0A9C050A66080322164D6172626C6573...0A04726561640A0873656C6674657374 
2017-04-11 03:13:17.857 UTC [msp] Sign -> DEBU 005 Sign: digest: B74C8F48331E979F8E1C390AA783686EF35EB876B720E24A680C95D309EEF6C1 
2017-04-11 03:13:17.863 UTC [msp] Sign -> DEBU 006 Sign: plaintext: 0A9C050A66080322164D6172626C6573...9D944B2F11B70B8D17343ED36FE8AAA7 
2017-04-11 03:13:17.863 UTC [msp] Sign -> DEBU 007 Sign: digest: C2458E142A38E25CACC9996C2B62CDA755CB67F318321043356D2048FF7BA95F 
Error: Error sending transaction invoke: Could not send :rpc error: code = 13 desc = transport is closing)
Usage:
  peer chaincode invoke [flags]

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
  -C, --chainID string             The chain on which this command should be executed (default ""testchainid"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -E, --escc string                The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode
  -o, --orderer string             Ordering service endpoint
  -p, --path string                Path to chaincode
  -P, --policy string              The endorsement policy associated to this chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
      --tls                        Use TLS when communicating with the orderer endpoint
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version string             Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string                The name of the verification system chaincode to be used for this chaincode

!!!!!!!!!!!!!!! Query result on PEER0 is INVALID !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

{code};;;","12/Apr/17 6:15 AM;denyeart;The original problem description would not happen on v1.0.  But a similar problem may happen.  
[~jojocheung]Please provide replication steps and peer log at debug level.;;;","13/Apr/17 5:02 PM;muralisr;As [~denyeart] mentions the crash should be fixed (due to a timeout anyway). Also we now expose an ""executetimeout"" parameter to control timeout on invokes and inits. Can you check this again and close if agree [~stylix] ?
;;;","13/Apr/17 5:54 PM;stylix;It seemed the problem was escaped by exposing the CORE_CHAINCODE_EXECUTETIMEOUT parameter in https://jira.hyperledger.org/browse/FAB-2767.
However, in the case we do not know how long time for the process, or if we do not properly set the timeout enough, then it will crash again, right?

Can anyone confirm this? If the chaincode run over a defined timeout will not goes crash ending, I'm happy to close this issue.;;;","13/Apr/17 6:42 PM;muralisr;[~stylix] I should have been clearer. Your test case was originally on 0.6 (the ""Affect Version"" field) while  the ""Fix Version"" points to 1.0.  My suggestion was to try in 1.0 and close if it does not crash there ? Also, note that the ""executetimeout"" parameter is in 1.0 mentioned in my comment refers to 1.0. ;;;","13/Apr/17 8:05 PM;stylix;Yes, I'm talkig about 1.0 in the previous comment as I gave up on this 0.6 bug already.
Now I'm asking for comfirmation if 1.0 will not have the same issue even if it runs over timeout?

Note: Sorry, I cannot test any fabric 0.6 and 1.0. As I do not have access to the test environment  now. That why I'm asking confirmation from the other guys.;;;","13/Apr/17 9:22 PM;ChristopherFerris;So, having a property that one can expose to set the timeout value doesn't fix the problem. It simply masks it. The problem is that the process crashes, unless I am mistaken (and if I am, then the description is incorrect). A timeout should not cause a crash, otherwise there's potential for a DoS attack.

Please verify that the process DOES NOT CRASH if the timeout expires before the query is completed.;;;","14/Apr/17 11:36 PM;muralisr;_> Now I'm asking for comfirmation if 1.0 will not have the same issue even if it runs over timeout ?_

[~stylix] Likely it should not crash in 1.0 but cannot confirm 100% based on the docs provided. Can you share the test case and recreate steps ?

 [~ChristopherFerris] the timeout property was pointed out as an aside... just an additional means of control available in 1.0 in case it could be used to unblock while this problem is being looked at.;;;","20/Apr/17 4:22 PM;jojocheung;The crash can be replicated in v1 by running http://fabric-rtd.readthedocs.io/en/latest/getting_started.html against https://github.com/IBM-Blockchain/marbles (i.e. replace chaincode_example02.go chaincode with marbles.v3/chaincode/src/marbles/* chaincode and try to run the chaincodeQuery test specified in github.com/hyperledger/fabric/examples/e2e_cli/scripts/script.sh).;;;","09/May/17 3:44 AM;muralisr;[~stylix] [~jojocheung] the chaincode wouldn't build against latest code. That could be the problem.... 

Attaching [^read_ledger.go] so marbles builds against the latest fabric. With that change, I was able to get invokes and queries to work. Can you check with this please ?;;;","10/May/17 12:25 AM;muralisr;[~stylix] [~jojocheung] I'm going to do some more tests and will update by EOD.;;;","10/May/17 8:27 AM;muralisr;[~stylix] [~jojocheung] Can recreate the problem... working on a fix.;;;",,,,,,,,,,,,,,,,,,,,,
Retrieve partition leader for a given topic and partition,FAB-1164,13497,13221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,21/Nov/16 3:15 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Dec/16 10:32 PM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"Some of the metadata for a given topic partition is only retrievable from the partition leader, so let's always use the partition leader when performing operations that require a broker connection.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-890,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf2f:",,,,,,Sprint 4 - Consensus,Sprint 5 - Consensus,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Produce/Consume to configured PartitionID,FAB-1165,13498,13221,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,21/Nov/16 3:26 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,30/Nov/16 1:24 PM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"Use the value of config.Kakfa.PartitionID when producing to, or consuming from, topics.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf2n:",,,,,,Sprint 4 - Consensus,Sprint 5 - Consensus,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip leader election,FAB-1166,13499,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,C0rWin,C0rWin,22/Nov/16 12:12 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,26/Jan/17 1:06 AM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,Gossip layer should expose capability to indicate which of the organization nodes suppose to connect to the ordering service and use delivery protocol to pull out new blocks. In order to enable gossip to choose the peer which will maintain connection with consensus service and take care of its high availability new leader election layer should be implemented on top of current gossip infrastructure.,,C0rWin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1285,FAB-1287,,,,,,,FAB-1286,,,,,,,,,,,,,,,FAB-1930,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7sv:",,,,Unset,,Sprint 5 - gossip,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,Unset,,,,,,,,,,,C0rWin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Increase robustness of gossip state transfer test and refactor them,FAB-1167,13500,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,22/Nov/16 12:14 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,10/Apr/17 6:55 AM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"Current gossip state transfer test is too brittle which cause many false positive failure on CI, hence need to be refactored and revisited.",,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6zz:",,,,Unset,,Sprint 5 - gossip,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,Unset,,,,,,,,,,,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/17 7:40 PM;yacovm;[~C0rWin] is it still brittle? :);;;","10/Apr/17 6:55 AM;C0rWin;Doesn't looks so :);;;","10/Apr/17 6:55 AM;C0rWin;Moving it to done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add multi chain support for gossip state transfer mechanism,FAB-1168,13501,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,C0rWin,C0rWin,22/Nov/16 12:15 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,31/Jan/17 11:27 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,Gossip state transfer layer need to provide support for multi chain architecture.,,C0rWin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7t3:",,,,Unset,,Sprint 5 - gossip,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,Unset,,,,,,,,,,,C0rWin,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Abstract out anti entropy mechanism out of current gossip state transfer implementation.,FAB-1169,13502,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,C0rWin,C0rWin,22/Nov/16 12:18 AM,23/Jan/20 3:41 AM,28/Oct/23 2:58 AM,23/Jan/20 3:41 AM,,,Future,,fabric-gossip,,,,0,gossip,stale-item,,,,,,,"Currently anti entropy is highly coupled together with gossip state transfer, to increase maintainability and testability of this unit the anti entropy need to be extracted into separate interface and structure.",,C0rWin,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx707:",,,,Unset,,Sprint 5 - gossip,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,Unset,,,,,,,,,,,C0rWin,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/17 8:06 PM;yacovm;Shall we put this in the backlog?;;;","23/Jan/20 3:41 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cut blocks based on size, not based on the number of TX",FAB-1171,13504,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,bcbrock,bcbrock,22/Nov/16 1:25 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,17/Jan/17 6:33 PM,,,,,fabric-orderer,,,,1,common-components,,,,,,,,"I have been doing some benchmarking of the Kafka orderer, and as part of this I did a rough parameter sweep to find the best number of transactions-per-block under various conditions. I was surprised to find that the best way to cut blocks is based on the size of the block (in bytes), not based on the number of transactions in the block. This result held in 2 different system configurations, with varying numbers of simultaneous clients and different blob sizes. The attachments show that the highest throughput for System 1 is always obtained with a block size around 400KB. For System 2, a block size of about 800KB is best. (Note - I did not go above 800KB for System 2 because the Kafka configuration has a limit of 1MB messages).

Based on these results I would suggest that all orderers implement a block-size target in addition to or in lieu of the current transactions-per-block target.  One nice thing about a size target vs. the current number-of-transactions target is that it allows a system administrator to tune throughput of an ordering service without having to run the actual blockchain application.

Note: This issue is related to https://jira.hyperledger.org/browse/FAB-904. Since the Kafka orderer _requires_ a block size limit, this limit should at least be documented as a way to optimize throughput as well.",,bcbrock,kchristidis,kenzhang,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1232,FAB-1241,FAB-1242,FAB-1243,,,,,FAB-904,,,,,,,,,,,,,,,FAB-1253,,,,,,,,,,,,,,"22/Nov/16 1:24 AM;bcbrock;System1.png;https://jira.hyperledger.org/secure/attachment/10241/System1.png","22/Nov/16 1:25 AM;bcbrock;System2.png;https://jira.hyperledger.org/secure/attachment/10240/System2.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-32,,,,,,,,,"1|hzx9h3:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,bcbrock,kchristidis,kenzhang,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Nov/16 3:29 AM;kchristidis;Thank you for providing these benchmarks. [~mastersingh24] noted we usually see 100-200 kB transactions, and the largest one was 1MB. So, that would imply 2-8 transactions per block. That itself is not much of a problem, but I would note that the more blocks we have, the more signing we (as orderers) have to do. (On the receiving side, this doesn't necessarily translate to more signature verifications, since when you replay a chain you only need to verify the tip, and from thereon it's matter of checking the hashes.)

At any rate, a ""desired"" block size, and ""max"" block size is a good suggestion. I'll see how we can accommodate it, without increasing the complexity of the offering. Perhaps mark the desired block size option as optional?;;;","22/Nov/16 5:57 AM;bcbrock;What use case or benchmark needs or sees 100K to 200K transactions? Are you sure you're not off by 2 orders of magnitude? I would have expected 1K - 2K per transaction for a simple transaction. If there is so much overhead in the V1 architecture that a single, simple transaction requires 100KB of data then one might consider the V1 protocols to be in need of a major overhaul. With 100K blobs and 8 blobs/block, my very capable 2-socket server can only order and deliver less than 500 TX per second. So if this is true then we remain more than an order of magnitude away from meeting customer performance requirements, just in the ordering service. ;;;","30/Nov/16 2:04 PM;sanchezl;h5. Existing configuration property:

{{config.General.BatchSize}}
# The maximum number of tx to permit in a block
# Do we still need this?

h5. Proposed configuration properties:
{{config.General.BlockSizeBytes}}
# The _optimal_ size of block data payload in bytes
# Block data payload will be no larger than this size, unless a single tx exceeds this size.

{{config.General.BlockMaxBytes}}
# The absolute maximum size of a block's data payload in bytes
# Required for {{OrdererType: kafka}} (maybe others?)
# otherwise, if not specified, it's not enforced (or should there be a sensible default?)

h5. Other
# We'll need to understand the overhead of the block structure, so that we can provide guidance to users on what exactly to expect when setting these values.
# It would be great if we can agree ASAP if {{config.General.BatchSize}} should be removed (or not). ;;;","30/Nov/16 11:23 PM;bcbrock;I would vote for keeping the {{config.General.Batchsize}}, at least for now. You never know what will turn out to be best for any end-to-end application - my experiments were only looking at orderer performance. The added complexity of supporting both seems very minor to me. 

BTW, in some quick experiments yesterday I also saw that 400K blocks were optimal even with transactions of size 100K. This may be a function of the default 1MB message size in Kafka - at some point I'll need to increase this and see what happens.;;;","01/Dec/16 1:44 AM;kchristidis;+1 to what Bishop says, let's aim to support both. (I don't see us succeeding in removing the `BatchSize` option any time soon even if we tried too, as well.);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advanced simulation functions for CouchDB,FAB-1172,13505,12492,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,22/Nov/16 2:37 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Dec/16 1:10 AM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf2v:",,,,,,Sprint 6 - Ledger,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vagrant tries to expose port 5984 (CouchDB) which might conflict with local env,FAB-1173,13506,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,22/Nov/16 4:12 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,28/Nov/16 11:08 PM,,,,,fabric-ledger,,,,0,build-system,Ledger,,,,,,,"Vagrant tries to expose port 5984 (CouchDB) which might conflict with local environment should it already have CouchDB installed.

Should bind to another port (eg bind 5984 to 15984)",,bobbiejc,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxalj:",,,,,,Sprint 6 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,bobbiejc,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Nov/16 3:15 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/2717/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specify path to orderer.yaml via an environment variable,FAB-1174,13507,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tuand,tuand,tuand,22/Nov/16 4:34 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,23/Nov/16 4:38 PM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"Allow an user to specify where on the file system the orderer configuration yaml file is located.

This makes orderer consistent with peer ( and its PEER_CONFIG_PATH ) and allows for easier creation of the docker image.",,GuillaumeCisco,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx9nj:",,,,,,Sprint 5 - Consensus,Sprint 6 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,GuillaumeCisco,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Nov/16 4:38 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/2693/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test many subledgers - leveldb with 1000s of databases,FAB-1175,13508,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,denyeart,denyeart,22/Nov/16 6:34 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,16/Jan/17 8:24 PM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,"Our intent is to have one database per ‘subledger’.  A subledger is a private ledger shared by a subset of network participants, often times just two trading partners in the network having their own subledger, and perhaps a regulator as a 3rd member of the private subledger.  In large networks, there could be thousands of subledgers that the regulator would be involved in, and therefore the regulator's CouchDB instance may have thousands of databases within it.  So we need to determine if this would cause problems on a single machine.  Basically, how much memory and other overhead is there per database.  Is it feasible to have thousands of databases? ",,bobbiejc,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/17 2:35 AM;Nishi;levelDB_testOutput_500DB_1_To_1000tx_Each;https://jira.hyperledger.org/secure/attachment/10372/levelDB_testOutput_500DB_1_To_1000tx_Each","07/Jan/17 2:34 AM;Nishi;leveldb_1DB_1_To_10000TX_benchmark_Output;https://jira.hyperledger.org/secure/attachment/10371/leveldb_1DB_1_To_10000TX_benchmark_Output","07/Jan/17 2:33 AM;Nishi;mdb_mtx_leveldb_benchmark_test.go;https://jira.hyperledger.org/secure/attachment/10369/mdb_mtx_leveldb_benchmark_test.go",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgen:",,,,,,Sprint 8 - Ledger,Sprint 9 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,bobbiejc,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/17 2:48 AM;Nishi;It was observed that with 1000databases inserting 1000records in each DB, test crashed eventually with OutOfMemory error.

More Details on memory error can be found at: https://ibm.ent.box.com/notes/108909449546

Hence ran following benchmark tests with 1->500 databases w.r.t. leveldb performance.  
1->10000 writes/reads were performed during these tests.
Each write/read is 1000bytes in length.
Writes were done using batch and applying these batches on db with a savepoint.


Please find attached 3 files:

1. mdb_mtx_leveldb_benchmark_test.go (go benchmark test program)

2. ""levelDB_testOutput_500DB_1_To_1000tx_Each"" has results on:
    Creation 1-500 databases
    Write 1-1000 transactions in each of these 500 databases (writes/reads happen after 500DBs are created successfully)
    Read 1-1000 transactions from each of these 500 databases.

3. ""leveldb_1DB_1_To_10000TX_benchmark_Output"" has results on:
     1 DB
     Write 1-10000 transactions from single DB
     Read 1-10000 transactions from single DB


;;;","16/Jan/17 8:23 PM;denyeart;Due to the overhead per database on leveldb, it was decided to refactor the code to have one database store the data for all the chains.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add checksums to block file storage to ensure no file corruption,FAB-1176,13509,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,22/Nov/16 7:06 AM,23/Jan/20 3:42 AM,28/Oct/23 2:58 AM,23/Jan/20 3:42 AM,,,Future,,fabric-ledger,,,,0,ledger,stale-item,,,,,,,,,denyeart,grapebaba,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxaof:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,grapebaba,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 5:46 PM;grapebaba;[~denyeart]Can I help this one? What it the design for this feature such as how we store the checksum and when we validate checksum?;;;","23/Jan/20 3:42 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add the ability to view Fabric packet structures using Wireshark,FAB-1177,13510,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,latitiah,latitiah,22/Nov/16 7:16 AM,12/Jul/19 8:18 PM,28/Oct/23 2:58 AM,12/Jul/19 8:18 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Using the protobuf files for fabric, setup a Wireshark config such that Fabric traffic can be easily viewed and debugged in Wireshark.",,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx887:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,,,,,,,,,,,,,Unset,,,,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/19 8:18 PM;mastersingh24;if we have not done this yet, not going to happen;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
V1.0 framework,FAB-1178,13511,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,22/Nov/16 7:19 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,02/Dec/16 5:46 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,create a fame work of creating orderor/peers/transactions etc for v1.0 ,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxev3:",,,,Unset,,Sprint 6 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/16 5:45 AM;dongming;The work is completed and pushed to github repo https://github.com/dongmingh/v1framework;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create docker-compose files that allow addition of peer to existing network,FAB-1179,13512,13398,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,22/Nov/16 7:20 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,23/Nov/16 2:43 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"2 docker compose files:
1. with orderer, membersrvc, 2 peers
2. add another peer to the existing network setup via #1
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf33:",,,,,,Sprint 6 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support storage and transmission of pre-serialized DeliverResponse objects,FAB-1180,13513,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,bcbrock,bcbrock,22/Nov/16 9:44 AM,23/Jan/20 3:42 AM,28/Oct/23 2:58 AM,23/Jan/20 3:42 AM,v1.0.0,,,,fabric-orderer,,,,0,performance,stale-item,,,,,,,"The V1 consensus network has the potential to become the bottleneck in V1 deployments, since by definition it must serialize transactions on a channel.  The ""deliver"" side of consensus is probably the most straightforward application in the entire V1 architecture: Binary blobs are simply pulled from ordered storage and then transmitted to multiple clients using token-based flow control.

Profiling the current Kafka orderer in deliver-only contexts shows almost nothing but serialization overhead, generically malloc()/memset()/memcpy(). Serialization and deserialization is pure overhead, adding no value to the data other than allowing it to be transmitted on the wire. For example the curent Kafka orderer stores blocks as the serialized form of the ""Block"" proto. To transmit a block:

1. The block is deserialized from Kafka storage (malloc()/memset()/memcpy())
2. Trivally converted to a DeliverResponse
3. Serialized again during gRPC transmission (malloc()/memset()/memcpy())
4. Copied yet again by the gRPC implementation in order to add a 5-byte header
to the serialized proto (malloc()/memset()/memcpy()).

The overhead of Steps 1 and 3 can be eliminated by storing and transmitting pre-serialized DeliverResponse objects. This is possible by modifying the DeliverResponse proto to implement a 3rd recursive type. This recursive type stores a pre-serialized DeliverResponse as a byte vector.

{code:java}
message DeliverResponse {
    oneof Type {
        common.Status Error = 1;
        common.Block Block = 2;
	bytes SerializedDeliverResponse = 3;
    }
}
{code}

Servers can take advantage of this type by using a custom grpc.Codec for the DeliverResponse server. This Codec recognizes the recursive type and simply returns the pre-serialized response:

{code:java}
type Codec struct{}

func (Codec) Marshal(v interface{}) ([]byte, error) {
	switch t := v.(type) {
	case *DeliverResponse:
		switch x := t.Type.(type) {
		case *DeliverResponse_SerializedDeliverResponse:
			return x.SerializedDeliverResponse, nil
		default:
			return proto.Marshal(v.(proto.Message))
		}
	default:
		return proto.Marshal(v.(proto.Message))
	}
}

func (Codec) Unmarshal(data []byte, v interface{}) error {
	return proto.Unmarshal(data, v.(proto.Message))
}

func (Codec) String() string {
	return ""proto""
}
{code}

Now, deliver servers can transmit pre-serialized responses without the overhead of 1 and 3. _Note that absolutely no change to the client is required, and this behavior is completely optional on the server side as well_.

I have modfied the Kafka orderer to store serialized DeliverResponse objects (instead of Block objects), and to then transmit them directly with the custom Codec. The results of these experiments appear in the attached slide.

My argument is that we should go ahead and modify the DeliverResponse proto and add the custom codec in order to support the most efficient delivery services possible.


",,bcbrock,guoger,jyellick,kchristidis,manish-sethi,sykesm,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 9:35 AM;bcbrock;Pre-Serialization Only.pdf;https://jira.hyperledger.org/secure/attachment/10243/Pre-Serialization+Only.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx91z:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,bcbrock,guoger,jyellick,kchristidis,manish-sethi,sykesm,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 11:33 PM;kchristidis;The bar graphs are definitely interesting. I'd be curious to see how they look like with your modified goroutine scheduler.

We'll always be to the right of the area that you graph, so it makes sense for us to support this.

As is the case with FAB-1171, we'll go for it. Thank you for submitting this.;;;","08/Aug/17 1:13 PM;guoger;Given current code, I feel the changes needed are too invasive (especially for fsblkstorage, which is not available at the time of this JIRA if my archaeological knowledge is correct), comparing to the performance gain. I'm not sure if we should sacrifice readability and code genericness for such improvement. I tried to implement custom codec and modify deliver path, but not finished with block storage yet. If you think it is something worth pursuing, I could continue.
cc [~kchristidis] [~bcbrock] [~jyellick];;;","11/Aug/17 8:31 AM;kchristidis;[~manish-sethi]: What are your thoughts on this? Would it be easy (and/or a useful exercise) to experiment with storing SerializedDeliverResponse in the ledger instead of blocks?;;;","14/Aug/17 2:44 AM;jyellick;This is not containable for v1.1, moving to backlog.;;;","15/Sep/17 7:00 AM;manish-sethi;This is how I would have approached this personally -

First, we are not using protos to their best possible manner. By default protos in golang uses reflection instead of code generation based approach. I had done some measurement and found the code generation based approach performs twice as fast when compared to the default refection based approach. Dave had created a JIRA on this (https://jira.hyperledger.org/browse/FAB-2784).

Second, for the most recent blocks (that are expected to be delivered most of the time), I can always cache the serialized delivery response.

Third, in order to measure any potential performance benefits, (assuming, the above two optimization in place) - I would measure how much gain I get  under the normal workload scenario (not just 100% `deliver` workload scenario).... may be a mix workload of 50% arrival of new trans + 50% of deliver to see the real gain I may get in the production. If I see the significant benefits, then only I would go for this change.

BTW, just for the sake of an interesting read - I came across this [https://capnproto.org/] which does not require marshal/unmarshall at all...

 ;;;","23/Jan/20 3:42 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Evolve from Vagrant to Docker based build,FAB-1185,13519,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,ChristopherFerris,ChristopherFerris,23/Nov/16 5:43 AM,09/Jun/19 10:31 PM,28/Oct/23 2:58 AM,17/Apr/17 8:43 AM,,,,,,,,,0,build-system,,,,,,,,Docker based build and test eliminating need for vagrant.,,ChristopherFerris,grapebaba,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-7,,Docker based build,To Do,,,Unset,,,,"1|hzxf47:",,,,Unset,Unset,,,,,,,,,,,,,,8.0,,,,,,,,,,,,ChristopherFerris,grapebaba,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/16 5:46 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/2659
https://gerrit.hyperledger.org/r/#/c/2469
https://gerrit.hyperledger.org/r/#/c/2311
https://gerrit.hyperledger.org/r/#/c/2315
https://gerrit.hyperledger.org/r/#/c/2317
https://gerrit.hyperledger.org/r/#/c/2319
;;;","03/Feb/17 11:04 PM;greg.haskins;Only remaining task is to convert behave over to use $(DRUN)+testenv.;;;","17/Apr/17 8:43 AM;ChristopherFerris;behave runs natively without vagrant so I am going to consider this done. Thanks [~greg.haskins];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove Read-Your-Writes sematics from goleveldb implementation,FAB-1187,13521,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,23/Nov/16 6:20 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,20/Jan/17 1:28 AM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,"As a developer, I do not want RYW semantics for `GetKey` API in KV ledger. Because, chaincode execution is a proposal to update the ledger, it does not actually update the ledger and therefore the writes are not available for query.  Also, this will not be available for couch, and therefore we need to be consistent across state databases.  For the sake of consistency and simplicity, I would like to remove RYW semantics from 'GetKey' API.",,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5833,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxah3:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"03/Jan/17 11:17 PM;denyeart;Since FAB-1257 (remove table API) is a prereq for this work, I have moved this task to be part of FAB-1257.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CORE_SECURITY_ENABLED variable is not passed to chaincode container,FAB-1188,13522,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,vineet.timble,vineet.timble,23/Nov/16 10:09 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,15/Apr/17 8:07 PM,v1.0.0,,WON'T FIX,,fabric-crypto,,,,0,chaincode,Security,,,,,,,"I have chaincode which does security checks when security is enabled. It checks if security is enabled through core.SecurityEnabled() api. I enable / disable security using docker-compose env. variable CORE_SECURITY_ENABLED.

This works fine in dev mode. However when I deploy chaincode in non-dev mode, I get core.SecurityEnabled() as false although my env variable is passed as true. I examined the docker containers. Docker container running peer, returns env variable CORE_SECURITY_ENABLED=true on env command. However docker container running chaincode does not have env variable CORE_SECURITY_ENABLED. It would be picking up value from core.yaml which is set as false.
",,elli-androulaki,mastersingh24,vineet.timble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf4n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,mastersingh24,vineet.timble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/17 3:51 AM;elli-androulaki;Hi, does this refer to 0.6 ?;;;","15/Apr/17 8:07 PM;mastersingh24;no longer valid as security is always enabled and this config parameter has been removed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChaincodeSpec  attributes are not passed to QueryChaincode  and InvokeChaincode methods,FAB-1189,13523,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,vineet.timble,vineet.timble,23/Nov/16 10:12 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,24/Apr/17 4:22 PM,v0.6,,WON'T FIX,,fabric-crypto,,,,0,Security,,,,,,,,"I have implemented a chaincode. I am trying to implement functionality where deployment of new version of chaincode migrates the ledger data from old version of chaincode. It does so by calling QueryChaincode method of ChaincodeStub and passing chaincodeID of old version. I have built the access control in all query and invoke function which uses securitycontext and metadata. However I found that QueryChaincode method does not pass attributes of ChaincodeSpec like SecureContext, ConfidentialityLevel, Metadata and Attributes. Due to this QueryChaincode is failing the access control implemented in old version of chaincode.
I think it is necessary that above attributes should be passed to QueryChaincode  and InvokeChaincode",,ChristopherFerris,elli-androulaki,vineet.timble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx5if:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,elli-androulaki,vineet.timble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/17 3:52 AM;elli-androulaki;Hi, does this bug refer to 0.6?;;;","11/Apr/17 5:59 PM;vineet.timble;Yes this was raised for 0.6. haven't got chance to verify if same issue is present in 1.0.0 preview;;;","14/Apr/17 9:38 AM;ChristopherFerris;[~ellaki] Please verify that this is either specific to v0.6 or relevant for v1.0.0 and add affectedVersion accordingly. If v0.6 only, please mark fixVersion WON'T FIX and close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make Rawledger API usable by SBFT,FAB-1190,13524,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,hgabre,hgabre,23/Nov/16 11:16 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,18/Jan/17 10:31 PM,,,,,,,,,0,,,,,,,,,"SBFT needs to persist its own batch headers and signatures on its ledger (Rawledger, implementations: Fileledger, Ramledger). Rawledger interface needs to be modified to accept custom metadata where those objects can be stored.",,hgabre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf4v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hgabre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Jan/17 10:30 PM;hgabre;https://gerrit.hyperledger.org/r/#/c/2667/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Behave test failures in v1.0,FAB-1191,13525,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,rameshthoomu,rameshthoomu,23/Nov/16 11:25 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Apr/17 8:40 AM,v1.0.0,,DUPLICATE,v1.0.0,fabric-quality,,,,0,,,,,,,,,"Observed below behave test cases are failing consistently in v1.0 (fabric master branch)

features/endorser.feature:37  Basic deploy endorsement for chaincode through GRPC to multiple endorsers -- @1.1 Orderer Options
features/orderer.feature:29  Basic orderer function -- @1.5 Orderer Options

Below are the build references:

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-behave-x86_64/254/
or check any verify or merge behave builds

",Jenkins ,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1742,,,,,,,,,,,,,FAB-898,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf53:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Solo orderer not cutting blocks after first batch,FAB-1192,13526,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,24/Nov/16 6:01 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,24/Nov/16 7:23 AM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,A missing timer reset is stopping a batch from getting triggered.,,kchristidis,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf5b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Nov/16 10:33 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/2741/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"***Rejected***: For Node SDK, please let the possibility to use JAVA language for code deployment",FAB-1194,13528,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,bfuentes@fr.ibm.com,bfuentes@fr.ibm.com,24/Nov/16 11:14 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,02/Mar/17 12:40 PM,,,WON'T FIX,,,,,,0,,,,,,,,,"Everywhere on the NodeSDK source code, i see that GOLANG is hard coded for all requests.
Can you add the possibility to specify the language, then to use this for all request relative to this chaincode deployed ?",,bfuentes@fr.ibm.com,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21600,21600,,0%,21600,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx5xj:",,,,Unset,,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 12 - SDK node,Sprint 13 - SDK node,,,,,,,,,,Unset,,,,,,,,,,,bfuentes@fr.ibm.com,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/16 12:35 AM;bfuentes@fr.ibm.com;I submitted a patch here for review :

https://gerrit.hyperledger.org/r/#/c/2977/;;;","15/Dec/16 12:09 AM;bfuentes@fr.ibm.com;i submitted another one after comments from Jim

https://gerrit.hyperledger.org/r/#/c/3089/
https://gerrit.hyperledger.org/r/#/c/3091/

Could you check it ?;;;","02/Mar/17 12:40 PM;jimthematrix;this was accomplished by the recent work from [~greg.haskins];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI solo orderer broadcast fails sporadically ,FAB-1195,13529,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,25/Nov/16 8:35 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,01/Dec/16 7:34 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The CLI broadcast client implemented for sending deploy and invoke transactions does not receive acknowledgement to Sends. This seems to trip up the orderer which seems to expect broadcast clients to be well behaved. Make the CLI orderer to be wellbehaved by receiving the ACK.

As a side note we need to look at the assumption on the part of the orderer which expects the broadcast client that called Send to Recv acks.",,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf5j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Solo orderer test case fails,FAB-1196,13530,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,25/Nov/16 11:56 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,01/Dec/16 7:35 AM,,,,,,,,,0,,,,,,,,,Change to ramledger API ramledger.New needs to be reflected in orderer/consensus/consensus_test.go,,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf5r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"protos - remove Transaction message, cleanup ChaincodeXXX message",FAB-1198,13532,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,muralisr,muralisr,27/Nov/16 7:40 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Dec/16 6:56 AM,,,,,fabric-peer,,,,0,Endorser,,,,,,,,"h5. Remove old *Transaction* and rename *Transaction2* 

Primary user of the original *Transaction* protobuf message is the chaincode framework.  But chaincode interaction in V1.0 is with Proposals and not Transactions. Chaincode used *Transaction* in old release for these purposes
* keep track of chaincode requests using TXID in *Transaction*
* use context from *Transaction* for roles and attributes

{quote}
NOTE - the use of *Transaction* for roles and attributes was half-baked. With Proposals we have the opportunity to implement this correctly. A Proposal should encapsulate all the ACL support needed for the Chaincode and the Proposal should be passed to the chaincode directly ([~adc]).
{quote}

Removal of the old *Transaction* protobuf message type results in the following changes
* TXID is passed as parameter to chaincode methods
* roles and attributes have been removed from chaincode
* a temporary stub for setting Proposal in a Chaincode request (on the peer side) has been added. Its not currently used. (NOTE - need to work with Java chaincode folks before we can send Proposal to the chaincode)
* unit tests have been modified to reflect the changes
* endorser expects TID to be non-empty string (uniqueness check is a TODO)

h5. Cleanup of Chaincode protobuf message

The main clean up was getting rid of QUERY  enums. The impact of this is as follows
* the chaincode and chaincode/shim state messages do not deal with QUERY elements from protobuf messages
* Query and QueryChaincode have been removed from chaincode stub interface (but many examples still implemented them)
* some examples such as chaincode_example02 and chaincode_example05 have been modified to expose the old Query implementation via the Invoke method
",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1128,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxf5z:",,,,,,Sprint 6 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove dependency of ledger unit tests on security and fix remaining ledger code for new block structure,FAB-1199,13533,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,27/Nov/16 8:53 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,20/Apr/17 2:09 AM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,"As a developer, I want to fix the other portions in the ledger code and ledger tests that still use old block structure. This did not get caught in https://gerrit.hyperledger.org/r/#/c/2581 because, the construction of transaction for tests was also being done with in ledger tests.

I also want to remove the explicit dependency of ledger unit test on msp security related stuff.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxf67:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
range query asserting panic,FAB-1200,13534,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,28/Nov/16 8:47 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,01/Dec/16 7:34 AM,,,,,fabric-peer,,,,0,chaincode,,,,,,,,"When using Tables, getting assertion 

{quote}
*panic: interface conversion: interface is *ledger.KV, not ledger.KV*
        panic: runtime error: invalid memory address or nil pointer dereference

goroutine 6147:
panic(0xa3a0e0, 0xc4200100b0)
        /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState.func1.1(0xc420282180, 0xc420d64ec0, 0xc4200c0e40)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:598 +0x4e
panic(0xa3f3a0, 0xc420b9a740)
        /opt/go/src/runtime/panic.go:458 +0x243
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState.func1(0xc420282180, 0xc420d64ec0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:640 +0x32f
created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:666 +0x49
{quote}


core/chaincode/handler.go needs to assert *ledger.KV",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf6f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
protos - merge common.Block and peer.Block2,FAB-1201,13535,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,muralisr,muralisr,28/Nov/16 10:29 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,02/Dec/16 10:40 PM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,"The final work to replace Block2 with Block will complete the major revisions to protos. In addition to ledger, the other components affected by it are
* core/committer
* tools/dbutility
* core/chaincode/exectransaction_test.go (one line...I think)
* core/endorser/endorser.go (only one line for testing)
* events/producer/eventhelper.go, protos/peer/events.proto (just need to move to Block) after conversion
* protos/peer and protos/utils",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-631,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxf6n:",,,,,,Sprint 6 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
running 4peers + CA on PBFT fails if we change PEER_ID ,FAB-1203,13537,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,bfuentes@fr.ibm.com,bfuentes@fr.ibm.com,28/Nov/16 6:22 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,04/Dec/16 7:12 AM,,,v0.6,,fabric-orderer,,,,0,consensus,pbft,,,,,,,"I have changed PEER_ID in the compose files, then I tried to run with PBFT.

While deploying a chaincode on *node1*, the nodes do not synchronized.
Here is the WARN message i see on logs :

*node1_1* | 08:56:35.018 [consensus/pbft] recvViewChange -> WARN 7eb Replica 0 found incorrect signature in view-change message: Could not verify message from *vp0* (unknown peer)

I do not have any *vp0* anymore in my config files. Actually, *node1* is the new name of *vp0*

If I run the network on NOOPS consensus , I have no problem

Here is the config of peer-secure-pbft-base.yaml :

version: '2'
services:
  peer-secure-pbft-base:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CORE_PEER_DISCOVERY_PERIOD=60s
      - CORE_PEER_DISCOVERY_TOUCHPERIOD=61s
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_PKI_ECA_PADDR=membersrvc:7054
      - CORE_PEER_PKI_TCA_PADDR=membersrvc:7054
      - CORE_PEER_PKI_TLSCA_PADDR=membersrvc:7054
      - CORE_SECURITY_ENABLED=true
      - CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=pbft 
      - CORE_PBFT_GENERAL_N=4
      - CORE_PBFT_GENERAL_K=1
      - CORE_PBFT_GENERAL_BATCHSIZE=1

    command: sh -c ""sleep 10; peer node start""
and full-peer-ca.yaml :

version: '2'
services:
  baseimage:
    build: ./baseimage
    image: hyperledger/fabric-baseimage:latest

  membersrvc:
    image: hyperledger/fabric-membersrvc:${ARCH_TAG}-0.6.1-preview
    extends:
      file: base/membersrvc.yaml
      service: membersrvc

  node1:
    image: hyperledger/fabric-peer:${ARCH_TAG}-0.6.1-preview
    extends:
      file: base/peer-secure-pbft-base.yaml
      service: peer-secure-pbft-base
    ports:
      - ""7050:7050""
      - ""7051:7051""
      - ""7053:7053""
    environment:
      - CORE_PEER_ID=node1
      - CORE_SECURITY_ENROLLID=test_vp0
      - CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT
    links:
      - membersrvc
...",,bfuentes@fr.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfg7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bfuentes@fr.ibm.com,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/16 7:08 AM;mastersingh24;out of interest, why did you want to change the name?

the problem is that in v0.6 when using PBFT PEER_IP must must start or end with {{vpX}}, e.g. {{vp0, vp1, vp2, vp3 ... vpX}};;;","05/Dec/16 6:04 PM;bfuentes@fr.ibm.com;On a network launched by docker-compose, is quite convenient on the logs to distinguish the peers using other names 
Nevermind :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer I want to implement a replay attack protection mechanism for proposals,FAB-1205,13539,12885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,29/Nov/16 1:10 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,13/Apr/17 5:02 PM,,,,,fabric-peer,fabric-sdk-node,,,0,,,,,,,,,,,elli-androulaki,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf73:",,,,,,Sprint 6 - consensus,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 11 - Crypto,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 3:56 PM;muralisr;[~ellaki] this is done I think ? If agree please close..;;;","13/Apr/17 5:02 PM;elli-androulaki;Hi [~muralisr], not sure we specifically addressed this, but in any case we currently don't need it since everything runs on top of TLS.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer I want to implement a replay attack protection mechanism on the orderer side for transactions,FAB-1206,13540,12885,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,angelo.decaro,elli-androulaki,elli-androulaki,29/Nov/16 1:11 AM,30/Jul/19 12:51 PM,28/Oct/23 2:58 AM,30/Jul/19 12:51 PM,v1.0.0,,Future,,fabric-crypto,fabric-orderer,fabric-peer,,0,,,,,,,,,"Here we need to check at the orderer side:
 # check tx creator signature, and
 # check that txid matches tx creator and tx nonce",,angelo.decaro,elli-androulaki,kchristidis,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf7b:",,,,,,Sprint 6 - consensus,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 11 - Crypto,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,elli-androulaki,kchristidis,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 3:55 PM;muralisr;[~angelo.decaro] [~ellaki] believe this is done ? If you agree can you close please ?;;;","13/Apr/17 4:56 PM;elli-androulaki;Hi [~muralisr], I do not believe we have replay attack protection on the orderer side, but only on the committing peer side.
Protecting orderers from replays is not critical since duplicate transactions will have conflicts in read/write sets and same txid sets and will not be considered for processing by committing peers.
We can add this feature later, that could slightly increase the performance of ordering. 

For now marking this for v1.1.;;;","12/Jul/17 11:55 AM;kchristidis;[~angelo.decaro]: Are you tackling this for v1.1?;;;","12/Jul/17 5:02 PM;elli-androulaki;Adding likely correct identity of Angelo's [~angelo.decaro].;;;","28/Jul/17 8:28 AM;kchristidis;Elli, thanks for the correction.

[~angelo.decaro]: Please see question above.;;;","28/Jul/17 9:45 AM;angelo.decaro;Hi [~kchristidis], not clear yet. We are still discussing what's the best way to achieve that given that the ordering service is not supposed to store the entire ledger necessarily. Therefore, we need some other mechanisms to put in place. I will keep you up-to-date on this. Thanks for the reminder, anyway.;;;","28/Jul/17 11:04 AM;kchristidis;Sounds good. Thanks for the heads up.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
typo in core.yaml for peer.gossip.bootstrap,FAB-1207,13541,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,29/Nov/16 4:42 AM,10/Dec/18 8:59 PM,28/Oct/23 2:58 AM,09/Dec/16 10:11 PM,,,,,,,,,0,,,,,,,,,"{quote}
\# Gossip related configuration
    gossip:
        boostrap: 0.0.0.0:7051
{quote}

should be

{quote}
\# Gossip related configuration
    gossip:
        bootstrap: 0.0.0.0:7051
{quote}",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf7j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/16 10:11 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/2811/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric v1.0 demo Dec 5 - prep charts, test kit, docs, glossary",FAB-1209,13543,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,nickgaski,scottz,scottz,29/Nov/16 7:09 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,13/Dec/16 8:16 AM,,,,,fabric-quality,,,,0,Documentation,quality,,,,,,,"As a hyperledger fabric project representative, I would like to explain and show with visual aids and scripts to collaborators and potential customers the present architecture and behavior of fabric v1.0 (as of the end of Nov, approx sprint 6).",,scottz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx84n:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,,,,,,,,,,,,Unset,,,,,,,,,,,scottz,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"10/Dec/16 4:53 AM;scottz;Assigning to Nick; he owns the last task in this story.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fabric v1.0 documentation, glossary",FAB-1210,13544,,Story,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,nickgaski,scottz,scottz,29/Nov/16 7:14 AM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,29/Apr/17 1:29 AM,,,v1.0.0,,fabric-quality,,,,0,quality,,,,,,,,"I would like to be able to point to documentation notes/videos/etc that describes v1.0 architecture and behavior. Submit v1.0 (beta) documentation to gerrit readme, videos or other as needed.",,bmos299,ishihara.shun,nickgaski,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx31b:",,,,Unset,,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,Unset,,,,,,,,,,,bmos299,ishihara.shun,nickgaski,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/16 1:56 AM;nickgaski;This is being reviewed.  We have the SDK videos and ledger videos too from Jim and Dave for the last 5-6 sprints.  I think we should point to these in the doc too and then I am going to start doing a short series of interviews with Wolpert;;;","29/Apr/17 1:29 AM;bmos299;This work is complete. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
build and integration presentation slides for fabric v1.0 beta,FAB-1211,13545,13543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,rameshthoomu,scottz,scottz,29/Nov/16 7:16 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Dec/16 11:46 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,I would like to explain with visual aids to collaborators and potential customers how the community team has made use of automated project repository loadbuilds / continuous integration / unit testing.,,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf7z:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 7:46 AM;rameshthoomu;[~scottz]: Is this specific to v1.0? or on overall Continuous Integration build process? Barry mentioned about the overall process. Could you please confirm?

;;;","29/Nov/16 9:42 AM;scottz;Ramesh, I am not sure yet because I have not spoken to Barry - but I suspect that it is the overall process for the CI. I say this because he also wants slides describing the regression testing (which do not exist yet in v1.0). The assumption is that the similar things will be used in v1.0, so it will probably be presented as ""this is what we are doing in hyperledger fabric"" development. I have asked him via our slack channel for clarification tomorrow.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test overview presentation slides for fabric v1.0 beta,FAB-1212,13546,13543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,scottz,scottz,scottz,29/Nov/16 7:17 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Dec/16 11:45 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,"I would like to explain with visual aids to collaborators and potential customers how the community team has employed testing, including regression tests.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf8f:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bdd test overview presentation slides for fabric v1.0 beta,FAB-1213,13547,13543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,latitiah,scottz,scottz,29/Nov/16 7:18 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Dec/16 11:46 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,I would like to explain with visual aids to collaborators and potential customers how the community team has employed behavior-driven-development testing.,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf87:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
docker file test startup kit for fabric v1.0 beta,FAB-1214,13548,13543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,latitiah,scottz,scottz,29/Nov/16 7:29 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,21/Dec/16 3:14 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"I would like to have scripts that allow me to easily demonstrate the software by using COP service to create a two-organization (2 peers) network with one orderer node, and adding a third peer organization. For this jira task, create docker file to do this.
",,bcbrock,ishihara.shun,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1178,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxf8n:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,bcbrock,ishihara.shun,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Leader Election for same Chain,FAB-1216,13550,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Clayton Sims,Clayton Sims,29/Nov/16 8:52 AM,23/Jan/20 3:42 AM,28/Oct/23 2:58 AM,23/Jan/20 3:42 AM,,,Future,,fabric-gossip,,,,0,gossip,stale-item,,,,,,,"Similar to FAB-1065, the only difference is that it has to elect the leader per channel and not per org.

Implement peer leader election within a channel gossip group, such that, at any moment, we may call Peer.IsLeader(chainID) to learn whether the peer is the leader or not (true|false result). Consider cases such as leader dies, network partitions.",,binhn,Clayton Sims,grapebaba,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx71z:",,,,Unset,,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,Clayton Sims,grapebaba,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 6:49 PM;yacovm;Did you perhaps mean to say, peers of the same channel?;;;","09/Dec/16 5:23 AM;Clayton Sims;Binh that this requirement could  be met with the understanding that a single leader could not be guaranteed in V1.   Can you connect with Binh.   I added Binh to this lira item.

 ;;;","23/Jan/20 3:42 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate peer logging with gossip logging,FAB-1217,13551,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,oldsharp,yacovm,yacovm,29/Nov/16 5:01 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,13/Feb/17 5:58 PM,,,,,,,,,0,,,,,,,,,"The gossip layer uses a self-setup logger. 
It would be good if it could be integrated with the peer's logging.",,alburt,oldsharp,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/16 11:27 AM;alburt;屏幕快照 2016-12-01 上午10.26.17.png;https://jira.hyperledger.org/secure/attachment/10248/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7+2016-12-01+%E4%B8%8A%E5%8D%8810.26.17.png","02/Dec/16 2:45 PM;alburt;屏幕快照 2016-12-02 下午1.17.51.png;https://jira.hyperledger.org/secure/attachment/10249/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7+2016-12-02+%E4%B8%8B%E5%8D%881.17.51.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxf93:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,alburt,oldsharp,wlahti,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Nov/16 7:37 PM;alburt;As I know that logging in gossip is just a wrapper of logging used in peer, so  is the integration means that just use the logging the same in peer? 
;;;","29/Nov/16 7:47 PM;yacovm;It's not really as you said. We both use go-logging, but the peer configures its logging in multiple ways, i.e- via viper and it can also change during runtime from what I know, and our logging is configured statically at compilation time, because we never had the time to integrate it with the logging framework [~wlahti] wrote.
We also use different logging formatters. ;;;","29/Nov/16 10:11 PM;alburt;I think I got your idea, you want more flexible configuration of logging like the log level, but keep the format you defined?

I have two more questions:
1). still keep the module name constructed by(module = module + ""-"" + peerId) , or I can just use the module name itself?
2). logger, _ := logging.GetLogger(""GossipStateProvider""), leave this kind of logging as it was in gossip component?

thanks.;;;","29/Nov/16 10:52 PM;yacovm;I would like to be able to know from which peer instance a log entry is emitted. 
Notice that when I initialize the logger inside gossip/comm/comm_impl and gossip/gossip/gossip_impl.go I pass some identifier. 
This is very useful for debugging gossip unit tests, since I have multiple gossip instances running inside them.


{quote}I think I got your idea, you want more flexible configuration of logging like the log level, but keep the format you defined?{quote}
I don't care much about the format, I just want to somehow preserve the identifier of the gossip instance that emits the log entry.

{quote} 1). still keep the module name constructed by(module = module + ""-"" + peerId) , or I can just use the module name itself?{quote}
I would say that constructing a module name with something like: 
moduleName := < gossip module name > + < gossip instance identifier > would be good. 
For example- in gossip/comm_impl, for instance with endpoint *localhost:8000* when you have
{code:java}
 logger.Debug(""bla bla bla"")
{code}
The logger would output:
DEBUG [gossip/comm][localhost:8000] bla bla bla
The question is- will something like that even work? I guess it would be worthwhile to check.
{quote}  2). logger, _ := logging.GetLogger(""GossipStateProvider""), leave this kind of logging as it was in gossip component?{quote}
If you're talking about only the state provider, in 
{code:java}
gossip/state/state.go
{code}
 then yes. But I think maybe we can make it to something like gossip/state instead;;;","01/Dec/16 5:00 PM;yacovm;1) Is the format in the picture you uploaded the same format as in the peer? ([~wlahti] maybe you can answer too?) 
2) What about millis and nanoseconds? ;;;","02/Dec/16 4:27 AM;wlahti;The formatting looks the same as the peer with the exception of the IP address in the brackets with the module name. I do have a pending changeset that will add the date and timezone to the formatter that will hopefully be merged into master soon.;;;","02/Dec/16 2:45 PM;alburt;Because the flogging just can define the logging level by module not instance level,
My solution now can specify the module logging level in core.yaml, and the instance with different ip or port will share the logging level within same module at initial time.

And at run time, you can send [peer node logging setlevel ""module_instance_name""
level] to change the individual instance logging level.

By the way, the previous picture still have something with the logging message, 
which cased by 

{color:#707070}func (l *Logger) Info(args ...interface{}) {
	lock.Lock()
	defer lock.Unlock()
	l.logger.Info(args)
}{color}

Now I changed it into 

{color:#8eb021}func (l *Logger) Info(args ...interface{}) {
	lock.Lock()
	defer lock.Unlock()
	l.logger.Info(args...)
}{color}
;;;","04/Dec/16 11:52 PM;yacovm;Thanks for the work so far. I commented in gerrit on the locks thing.
I also would like [~gennadyl] and [~C0rWin] to express their opinion about the PR (2865). ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Implement simple gossip communication mockup.,FAB-1218,13552,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,29/Nov/16 10:30 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,06/Dec/16 10:43 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,In order to provide better testability of gossip components there is a need to implement very basic mockup for communication layer which will not involve real gRPC communication. Gossip component which may require communication mock for example are: state transfer and leader election.,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxf9b:",,,,Unset,,Sprint 6 - Gossip,,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Support access control policies for chaincode (creation, termination, invocation - in terms of chaincode library)",FAB-1219,13553,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,angelo.decaro,muralisr,muralisr,29/Nov/16 11:09 PM,23/Jan/20 3:42 AM,28/Oct/23 2:58 AM,23/Jan/20 3:42 AM,,,v1.0.0,,fabric-crypto,,,,0,Security,stale-item,,,,,,,"From [~adc] -

In 0.5/0.6, we had two ways to perform access control. 

1) The first was based on signatures. The metadata field contained 
a signature of the invocation payload concatenated to the transaction binding.
The chaincode was in charge to check the signature against a set of locally
stored certificates in order to evaluate access control.
An example of this mechanism was the chaincode asset_management.go.

2) The second solution was based on TCert's attributes. The chaincode
was in charge to get the caller certificate and evaluate the attributes carried
by the certificate. An example of this mechanism was the chaincode 
asset_management_with_roles.go

Now, the implementation of the above mechanisms was mainly based on two
fields extracted from the transaction. Namely, the caller certificate and the metadata.

In order to have the same mechanisms in v1, the chaincode needs a way
to extract again the caller certificate and, this time, the transient field. 

In addition the Shim also provides a way to access  the transaction binding (will the Unique TXID be sufficient for this purpose ?). We would need the same in v1 to implement  solution1) and also for the confidentiality library.

Within this epic, one would also need to enhance proposal structure with (transient) data field, i.e., a field that appears in the proposal, but not in the subsequent endorsed actions/transaction.

Also for [~ales] [~ellaki] [~binhn] [~mastersingh24]
",,ChristopherFerris,elli-androulaki,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Chaincode Invocation Access Control,,,,Unset,,,,"1|hzx6lb:",,,,Unset,Unset,Sprint 6 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,elli-androulaki,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/16 6:59 PM;elli-androulaki;Changed this to an ""epic"" as there are a couple of stories below it :);;;","06/Jul/18 9:36 PM;ChristopherFerris;[~elli-androulaki] are we still tracking this?;;;","23/Jan/20 3:42 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support pruning for the ordering service,FAB-1223,13557,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Clayton Sims,Clayton Sims,30/Nov/16 2:21 AM,23/Jan/20 3:43 AM,28/Oct/23 2:58 AM,23/Jan/20 3:43 AM,v1.0.0,,,,fabric-orderer,,,,0,common-components,stale-item,,,,,,,"Policy to keep log or limited amount of time (day or couple of days) on the OS, and peers would have to communicate to each other to get the data (Kafka can prune or remove if older than x time). Work around is to configure Kafka to prune. ",,Clayton Sims,guoger,IngoRammer,kchristidis,logannwu,luomin,mastersingh24,rhegde,sanchezl,seokm0,sheehan,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxalr:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,Clayton Sims,guoger,IngoRammer,kchristidis,logannwu,luomin,mastersingh24,rhegde,sanchezl,seokm0,sheehan,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 8:35 PM;kchristidis;Luis working on spec draft for this, original JIRA description to be updated.;;;","23/Feb/18 6:15 AM;mastersingh24;[~sanchezl] [~kchristidis] - What's the status / game plan here?  I recall that a design doc was in progress as were some experiments?  

1) Allowing people to prune Kafka logs - do we feel this is now safe?  OSN code changes needed?
2) Pruning the OSN file ledgers - this entails more work for sure

I'm going to move this out to 1.3.  If any part of this fits within the 1.2 development cycle, we can reconsider


;;;","21/May/18 11:31 PM;kchristidis;We might hit two birds with one stone here with the Raft work. Setting it to Backlog for now, but this is on our radar, and will update when we have a clearer picture of where everything fits.;;;","23/Jan/20 3:43 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make gossip employ mutual TLS + bind the cert hash,FAB-1224,13558,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,30/Nov/16 2:32 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,08/Jan/17 8:00 PM,,,,,,,,,0,,,,,,,,,"After a discussion with [~elli-androulaki] , [~adecaro] , [~ales] it appeared that the challenge that the gossip comm layer signs (TLS-Unique) isn't long enough and therefore, vulnerable to replay attacks.

It was proposed to bind the TLS cert to the session by hashing the cert, and signing it instead of signing the TLS-Unique field.

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxfa7:",,,,,,Sprint 6 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolve the secret data from the write set and store it in the secret data store.,FAB-1225,13559,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Clayton Sims,Clayton Sims,30/Nov/16 2:48 AM,23/Jan/20 3:43 AM,28/Oct/23 2:58 AM,23/Jan/20 3:43 AM,,,Future,,fabric-peer,,,,0,endorser,stale-item,,,,,,,Resolve the secret data from the write set and store it in the secret data store.,,Clayton Sims,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfaf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,Clayton Sims,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:43 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Demo end to end execution using the latest network setup,FAB-1227,13561,13543,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,latitiah,latitiah,30/Nov/16 4:30 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,10/Dec/16 4:01 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Demonstratable capabilities should include transactions to deploy, invoke, and query - using Marbles chaincode. (However, another jira issue (FAB-1178) will track the creation and use of a test engine to do these things.)
(Another team may use the GUI for HelloWorld(example02) chaincode to demonstrate transactions.)",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfan:",,,,,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhancing Admin service API  to accomodate more operational commands,FAB-1229,13563,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,suryalnvs,suryalnvs,30/Nov/16 8:39 AM,30/Jul/19 11:41 AM,28/Oct/23 2:58 AM,30/Jul/19 11:41 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"In v1.0, Admin service API can be used to accommodate more operational commands to pass and get back the operational statistics and configurations. ",,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7xr:",,,,Unset,,Sprint 6 - Crypto,Sprint 6 - Quality,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,,,,,,,,,Unset,,,,,,,,,,,mastersingh24,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:41 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Solo orderer requires default **TEST_CHAINID** while multichain work is in progress,FAB-1230,13564,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,30/Nov/16 8:56 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,01/Dec/16 7:32 AM,,,,,fabric-peer,,,,0,,,,,,,,,Solo orderer is initialized with a default **TEST_CHAINID** while multichain work is being built around it. Proposals and Gossip need to use that chain for the end-end flows.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfav:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add 413 Request Entity Too Large status code,FAB-1232,13566,13504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,01/Dec/16 1:20 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Dec/16 4:19 AM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"Add REQUEST_ENTITY_TOO_LARGE, corresponding to HTTP Status code 413, to the common Status enum. 

This will be used in support of FAB-1171 as a status code when a transaction is too large.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfbb:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add state database recovery logic upon ledger initialization at peer startup,FAB-1233,13567,12902,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,denyeart,denyeart,01/Dec/16 2:22 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,14/Dec/16 1:09 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,Add state database recovery logic upon ledger initialization at peer startup,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfbj:",,,,,,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip to transfer secret data,FAB-1234,13568,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,01/Dec/16 6:15 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,10/Apr/17 6:57 AM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,Implement gossip protocol to transfer secret data value from a given key in the secret data store.,,C0rWin,Clayton Sims,vbortnik,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,,,,,,,,FAB-1151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx71r:",,,,Unset,,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,Clayton Sims,vbortnik,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/17 12:29 AM;vbortnik;Gossip will broadcast secret data in the channel by calling _broadcast(Channel, SecretData sd)_. Each peer will store the accepted record in the side DB. In addition, state transfer will transfer secret data when it transfers transactions block. Transaction without secret data will be considered incomplete.;;;","09/Apr/17 7:34 PM;yacovm;[~C0rWin] I believe this is covered by other JIRA issues, should we deprecate this? ;;;","10/Apr/17 6:57 AM;C0rWin;As [~yacovm] mentioned current issue duplicated by more updated one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bootstrap chain creation - chaincode framework initialization,FAB-1236,13570,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,,muralisr,muralisr,01/Dec/16 8:45 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,07/Feb/17 6:35 AM,,,,,fabric-peer,,,,0,,,,,,,,,"When a peer starts up it will come up without a chain or ledger. The ""join"" chain command to the peer will set up the chain (ie, ledger, MSP Manager, config block).

This story is about the initialization of the chaincode framework that follows the creation of the ledger for the chain.
",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1256,FAB-1281,FAB-1295,FAB-1297,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6b3:",,,,Unset,,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,,,,,,,,,,Unset,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"new ""upgrade"" command to CLI ",FAB-1237,13571,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,muralisr,muralisr,01/Dec/16 1:06 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,09/Dec/16 10:26 AM,,,,,fabric-peer,,,,0,,,,,,,,,"Peer supports ""deploy"", ""invoke"" and ""query"". This task would add an ""upgrade"" command to the CLI. 

The task needs to follow the deploy pattern to create the command under fabric/peer/chaincode in a new file called ""upgrade.go"". The Command itself can just be a stub for now while the upgrade function gets implemented in the fabric. 

A minimal ""upgrade_test.go"" would need to be written to check the user provided parameters.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfbz:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"implement ""upgrade"" command in Life Cycle System Chaincode (lccc.go)",FAB-1238,13572,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jiangyaoguo,muralisr,muralisr,01/Dec/16 1:16 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,09/Dec/16 10:26 AM,,,,,fabric-peer,,,,0,,,,,,,,,"lccc currently supports ""deploy"" in its Invoke method.  lccc needs to be modified to implement an ""upgrade"" function which will
* check for existence of chaincode (upgrade will error out if chaincode does not exist)
* replace the ChaincodeDeploymentSpec
* bump the version
* return the new version of the chaincode

Note that the actual starting of the chaincode is done in the endorser outside of the lccc and is outside the scope of this task.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfc7:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename BatchSize configuration parameter,FAB-1241,13575,13504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,01/Dec/16 11:22 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,04/Jan/17 9:50 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Rename {{General.BatchSize}} to {{General.BatchMaxMessageCount}} for clarity.

In support of FAB-1171, we will introduce some more configuration parameters to control the size of the batch of messages included in a block. Current thoughts on the future configuration parameters are:

* {{General.BatchSizeBytes}} – Preferred size (in bytes) of a batch 
* {{General.BatchMaxSizeBytes}} – Absolute maximum size (in bytes) of a batch.
",,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfcn:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Dec/16 11:30 PM;sanchezl;[~kchristidis],

Since we are going to possible have at least 4 ""Batch"" configuration parameters, I can use this task to introduce a {{Batch}} level in the {{General}} config. e.g.:

{code}
General:
  Batch:
    Timeout: 10s
    MaxMessageCount: 10
    SizeBytes: 400000
    MaxSizeBytes: 999000
{code}

Let me know what you think.;;;","02/Dec/16 12:29 AM;kchristidis;Strong yes on `BatchSize` (or Size) becoming `BatchMaxMessageCount` (or MaxMessageCount). If we are to keep the old term around, this ""Size"" term is going to throw us off (we will always be wondering whether we are talking about number of messages, or filesize, etc.)

We'll obviously have to get others to agree on it, but the ""Batch"" level proposal in the comments sounds like a great way of going at it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Limit batch size to a maximum size,FAB-1242,13576,13504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,02/Dec/16 12:17 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,15/Jan/17 5:54 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"* Add {{General.BatchMaxSizeBytes}} configuration parameter.
* Invocation of {{Broadcast()}} will reject any individual message > {{BatchMaxSizeBytes}}
* Batches will be limited to {{BatchMaxSizeBytes}}.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1171,FAB-1243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfcv:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Limit batch size to a preferred size,FAB-1243,13577,13504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,02/Dec/16 12:22 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,17/Jan/17 6:33 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"* Add the {{Genesis.BatchSize.PreferredMaxBytes}} configuration property.
* Cut blocks to no more than {{PreferredMaxBytes}}, regardless of number of messages.
* Messages that exceed {{PreferredMaxBytes}} will result in a batch of 1 (just that message), as long as message does not exceed {{AbsoluteMaxBytes}}.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1242,,,,,,,,FAB-1171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfd3:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode user, I would like to get or set multiple keys in one API call, so that bulk gets/sets are more efficient",FAB-1244,13578,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Duplicate,,denyeart,denyeart,02/Dec/16 1:44 AM,24/Oct/21 11:33 PM,28/Oct/23 2:58 AM,24/Oct/21 11:33 PM,,,Future,,fabric-ledger,,,,2,Release-planning-1.2,stale-item,,,,,,,Ledger has APIs for GetStateMultipleKeys() and SetStateMultipleKeys().  These APIs could be used by chaincode to more efficiently get or set multiple keys in one API call.,,alburt,C0rWin,denyeart,Hangyu_FJH,liuwenliang0632,muralisr,smartheye,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6336,,FAB-3243,FAB-9970,,,,FAB-18507,,,,,,,,,,,,,,,,,"17/Sep/21 6:33 AM;C0rWin;screenshot-1.png;https://jira.hyperledger.org/secure/attachment/19126/screenshot-1.png","17/Sep/21 6:34 AM;C0rWin;screenshot-2.png;https://jira.hyperledger.org/secure/attachment/19127/screenshot-2.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-757,,,,,,,,,"1|hzx00n:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,alburt,C0rWin,denyeart,Hangyu_FJH,liuwenliang0632,muralisr,smartheye,sykesm,troyronda,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jun/17 1:22 AM;muralisr;[~denyeart] would you say GetStateByPartialCompositeKey and other APIs fulfill this requirement ?;;;","19/Sep/17 1:43 PM;liuwenliang0632;hi , can i relate it to FAB-3243?;;;","20/Sep/17 12:29 AM;denyeart;[~liuwenliang0632] Yes, I've changed the link to 'duplicates', you can work it under FAB-3243.;;;","20/Sep/17 12:32 AM;denyeart;[~muralisr] GetStateByPartialCompositeKey does not meet this requirement.  In some cases you know specific keys that should be get/put all together.  See FAB-3243 for more details.  That is a different requirement than GetStateByPartialCompositeKey, where you know a single key and want to retrieve 'child' items.;;;","23/Jan/20 3:43 AM;sykesm;Stale;;;","17/Sep/21 6:38 AM;C0rWin;Would it be possible to reconsider this ticket? There are cases wherein one chaincode cal there is a need to update/retrieve several keys. To get the key, there is a need for chaincode to peer communication which comes costly with 100+ writes.

See graphs for comparison.

!screenshot-1.png|thumbnail! !screenshot-2.png|thumbnail!

IMO, it's worth considering adding new APIs to support batching operations with that state, as it obviously has performance implications.

 

WDYT? [~denyeart], [~yacovm], [~manish-sethi]...

 ;;;","24/Oct/21 11:33 PM;denyeart;[~C0rWin] we'll use FAB-9970 for this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Configure TLS for Kafka Broker,FAB-1246,13580,13003,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tuand,tuand,tuand,02/Dec/16 6:23 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Feb/17 10:29 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,Determine and document what needs to configured for a Kafka broker to communicate with clients and other brokers via TLS.,,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfdj:",,,,,,Sprint 9 - consensus,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/16 6:46 AM;tuand;Configuration is manual  as it's a matter of editing server.properties
# Assume all brokers use one certificate authority so we have one CA cert distributed to all brokers
# Create cert for broker and sign with CA
# add broker cert and CA cert to keystore
# add CA cert to truststore
# add CA cert for client orgs to truststore
# in server.properties, set following values:
# # listeners=SSL://host:port
# # ssl.client.auth=required
# # ssl.keystore.location and ssl.truststore.location
# # ssl.key.password and ssl.truststore.password ( passwords in clear text.  Kafka admin will have to secure server.properties)
# # ssl.keystore.type and ssl.truststore.type ( kafka docs use JKS. Will need to see what else Kafka supports )
# # ssl.enabled.protocols - TLS v1, 1.1 or 1.2   ( need to decide on what version to recommend )
# # ssl.inter.broker.protocol=SSL;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configure TLS for Kafka client/orderer shim,FAB-1247,13581,13003,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tuand,tuand,tuand,02/Dec/16 6:25 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Feb/17 10:29 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,Determine and document what is needed to configure a client (either producer or consumer) to communicate with a broker using TLS,,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfdr:",,,,,,Sprint 9 - consensus,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/16 7:07 AM;tuand;We will need to define a set of config values for orderer.yaml ( or whichever format we decide to use for passing config to an orderer ) and map them to a sarama.Config struct.  
sarama.Config uses a struct of type crypto/tls.Config  to define TLS configuration so we should be able to bypass setting up the various .properties files that Kafka uses for its clients;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Currently system chaincode does support security,FAB-1251,13585,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,tanykj,tanykj,02/Dec/16 1:33 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,12/Apr/17 6:17 AM,,,v0.6,,fabric-peer,,,,0,,,,,,,,,"Seeing the below warning when peers are starting even though I am using consensus/PBFT :

04:12:36.694 [sysccapi] RegisterSysCC -> WARN 00d Currently system chaincode does support security(noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop)

Using the IBM docker peer and membersrvc images (Fabric 0.6.1)",,denyeart,py,tanykj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfen:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,py,tanykj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/17 6:17 AM;denyeart;Resolved in v1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chain ID in protos should be string,FAB-1252,13586,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,02/Dec/16 9:23 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Dec/16 6:56 AM,,,,,fabric-peer,,,,0,,,,,,,,,"Chain ID, Chaincode name and Transaction ID should all be human readable strings. The later two already are. Convert chain ID to string.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-845,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfev:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't send Tx larger than 1000000 bytes to Kafka,FAB-1253,13587,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,sanchezl,sanchezl,sanchezl,03/Dec/16 5:38 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Dec/16 11:13 PM,,,,,fabric-orderer,,,,0,consensus,,,,,,,,"Even after configuring the Kafka server to accept messages larger than 1,000,000 bytes, default configuration provided by the sarama kafka library rejects any attempts to send kafka messages larger than 1,000,000 bytes.

Since deploy transactions are typically, >1MB in size, this limitation basically makes it difficult to use the Kafka orderer in an end-to-end scenario.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-904,FAB-1171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxff3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a common GRPC server component,FAB-1255,13589,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,03/Dec/16 8:17 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,07/Jun/17 5:57 PM,,,v1.0.0,v1.0.0-beta,fabric-peer,,,,1,,,,,,,,,"Both the peer and the orderer shims leverage GRPC.  Given that we will need to do a number of things like handle root certificates which will be stored in per chain config, it makes sense to create a common server component similar to the client which already exists in the comm package",,kchristidis,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxffj:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,mastersingh24,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/16 4:34 PM;yacovm;{quote}If there are specific setting that you need to pass in (e.g. max message size, etc), please add them to the JIRA.{quote}
Can we please have mutual TLS? 
After/if the following commit will be merged [https://gerrit.hyperledger.org/r/#/c/2841/3/gossip/comm/comm_impl.go] The gossip layer (when running inside the peer and not inside unit tests) uses mutual TLS to bind the TLS cert to the MSP identity. ;;;","04/Dec/16 7:54 PM;mastersingh24;yep - that's one of the key things on the list.  I'll add a task to ensure it gets done;;;","13/Apr/17 4:23 PM;muralisr;[~mastersingh24] this is complete, no ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove DefaultChain from chaincode framework (and hence force chain to be specified),FAB-1256,13590,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,03/Dec/16 10:18 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Dec/16 6:56 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The fabric runs on single chain held together by the ""DefaultChain"" defined in chaincode framework. This assumes the fabric can start with a ledger and all components can rely upon it being there.

With multichannels (chains)
* there is no one priviledged chain
* chains (and hence ledgers associated with them) are created after join

Given the above, we need to sequence chain creation so we can build up the chain. This task begins that work by removing DefaultChain from chaincode framework. This will expose the points in the flow influenced by the chainname (starting from the Proposal into the Endorser).",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxffr:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer, I want to use JSON-based data structures instead of table-based data structures, so that I have more control over queries",FAB-1257,13591,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,denyeart,denyeart,04/Dec/16 1:00 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,17/Jan/17 5:50 PM,,,v1.0.0,,fabric-ledger,,,,1,help-wanted,Ledger,,,,,,,"Remove Table API from Hyperleger Fabric in v1.
* The v0.5/v0.6 Pseedo-table API does not map well to current or next generation Fabric capabilities 
* Project teams have been confused and frustrated with table API limitations

Encourage all new chaincode to use JSON-based data structures
* Additional query benefits when using CouchDB state database
* Provide JSON-based samples to help community update table-based chaincode
* Initial sample: https://github.com/denyeart/table_to_json/blob/master/chaincode/table_to_json_chaincode.go

In the future Fabric may add support for relational state databases
* At that time it will make sense to introduce a ‘real’ table API without the limitations of the current pseudo-table API
",,denyeart,inatatsu,kenzhang,nextisd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/16 1:02 AM;denyeart;Chaincode_TableToJSON.pptx;https://jira.hyperledger.org/secure/attachment/10250/Chaincode_TableToJSON.pptx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-758,,,,,,,,,"1|hzxfxr:",,,,Unset,,Sprint 9 - Ledger,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,denyeart,inatatsu,kenzhang,nextisd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChancodeID inconsistent types,FAB-1258,13592,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,rickr,rickr,04/Dec/16 3:14 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,04/Dec/16 3:33 AM,,,,,fabric-peer,,,,0,,,,,,,,,"ChaincodeID was changed from bytes that were a  ChaincodeID object serialzied to a String in common.proto.

In chaincode_proposal.proto and in chaincode_proposal.proto ChainCodeID object is still referenced.  This seems to be an unneeded  inconsistency.  ",,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxffz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/16 3:33 AM;rickr;Found they are different. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create wrappers for basic TLS-enabled GRPC server,FAB-1259,13593,13589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/16 7:58 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,21/Dec/16 12:00 AM,,,v1.0.0,v1.0.0-alpha1,fabric-peer,,,,0,,,,,,,,,"The basic idea is to create a common config structure which exposes the core options we need for our TLS-based GRPC servers

",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfgf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for mutual TLS,FAB-1260,13594,13589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/16 8:00 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,31/Dec/16 9:22 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Need to support mutual TLS - aka client certificates

Minimally will need to be able to configure the TLS endpoint with a list of trusted issuers for client certificates",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfgn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Dec/16 3:13 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/3523/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add health checking endpoint,FAB-1261,13595,13589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/16 8:21 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Jun/17 5:56 PM,,,v1.0.0,v1.0.0-beta,fabric-peer,,,,0,,,,,,,,,"Useful for a variety of reasons, but primarily this is useful in the case where a GRPC server sits behind a proxy.  Most proxies have read/write timeouts on the front and backsides so if we have a long-lived GRCP connection with no traffic flowing the connection will be terminated by the proxy.  Looking to implement something like https://github.com/grpc/grpc/blob/master/doc/health-checking.md",,gbolo,mastersingh24,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfgv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gbolo,mastersingh24,troyronda,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Apr/17 11:16 AM;mastersingh24;upgrading to the latest version of the grpc package would allow us to use it's built-in keepalive mechanisms;;;","22/Apr/17 4:35 AM;yacovm;We could also use the gRPC version upgrade because it fixes a bug in mutual TLS that gossip uses for TLS-identity binding
https://github.com/grpc/grpc-go/issues/934;;;","07/Jun/17 5:56 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/10071/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to temporarily disable hash check in committer code to allow SDK to pass,FAB-1262,13596,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,jimthematrix,jimthematrix,05/Dec/16 5:06 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,16/Jan/17 11:35 PM,,,,,fabric-peer,,,,0,node-SDK,,,,,,,,"in msgvalidator.go the committer checks the proposal payload against the proposal hash included in the transaction. for some reason the transaction message sent by node SDK can't pass this check. it's going to take some more time to figure this one out (it's very difficult to debug). In the meanwhile, we'd like this to be disabled in the peer temporarily to allow the rest of the SDK team and general community to progress.

The simplest hack is like below (so that you don't get linter complaints about unused imports and variables:

// ensure that the proposal hash matches
if bytes.Compare(pHash, pHash) != 0 &&
   bytes.Compare(prp.ProposalHash, prp.ProposalHash) != 0 {
   return nil, fmt.Errorf(""proposal hash does not match"")
}
",,ales,jimthematrix,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfh3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ales,jimthematrix,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/16 2:10 PM;muralisr;[~ales] I've done some investigation and can update you with whatever I know.;;;","16/Jan/17 11:35 PM;ales;This was solved jointly with the SDK team - we have identified what the problem was and fixed it;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to create a keystore component within software bccsp,FAB-1265,13599,12984,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,adc,elli-androulaki,elli-androulaki,05/Dec/16 5:59 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Dec/16 6:03 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,"Keystore aims to be a modular component of the BCCSP that manages key the software BCCSP handles.

Its interface aims to satisfy plain <getKey, setKey, deleteKey> functions. 
",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfhb:",,,,,,Sprint 6 - Crypto,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to enable configurable key location for software BC-CSP,FAB-1266,13600,12984,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,05/Dec/16 6:00 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,05/Dec/16 6:03 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,This task relates to enable the Keystore object created in Sub-Task (1) to take as argument the location where the key-files reside.,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfhj:",,,,,,Sprint 6 - Crypto,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer i want to enable configuration of the software bccsp w.r.t. where the keys are stored,FAB-1267,13601,12984,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,05/Dec/16 6:03 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,08/Apr/17 2:23 AM,,,,,,,,,0,,,,,,,,,"Within this task, BCCSP is to take as input at peer/orderer setup time the type of BCCSP provider is to instantiate. Also in the case of software BCCSP, it should be provided with the keystore configuration information. For the default keystore, the location of where the keys are to reside should be passed to bccsp. ",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfhr:",,,,,,Sprint 6 - Crypto,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric deployer I want to be able to bootstrap the orderer's crypto components,FAB-1268,13602,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,05/Dec/16 6:18 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,25/Mar/17 10:16 AM,,,,,fabric-crypto,,,,0,security,,,,,,,,"This is associated to the orderer-setup phase, where all components of the orderers are initialized. Orderers take as input during their setup, local config data, and the orderer channel bootstrap information. 

Security setup of the orderer relates to the parsing and setup of SignerMSP info (including orderer's signing identity), as well as the parsing and setup of orderer channel VerifierMSPs / channel readers/writer/admin policies. 

More info to follow here.

",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1324,,,,,,,,,"1|hzx6j3:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Feb/17 6:47 PM;elli-androulaki;Likely to be already covered by @jyellick's configuration work. In this case we can review the security component setup.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric deployer I want to be able to bootstrap the security components of the peer ,FAB-1269,13603,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,05/Dec/16 6:23 PM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,24/Feb/17 3:12 AM,,,,,,,,,0,,,,,,,,,"This is associated to the peer-setup phase, where all components of the peers are initialized. Peers take as input during their setup local config data, that requires the parsing and setup of SignerMSP info (including orderer's signing identity). 

This is to consume config files defined within FAB-1063.
More info to follow here.

",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxacn:",,,,Unset,,Sprint 7 - Crypto,,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/17 6:45 PM;elli-androulaki;Hi Ale, this is already done, correct?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer i want to enable the peers to create security context for a new chain,FAB-1270,13604,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,05/Dec/16 6:26 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,09/Jan/17 9:41 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,"At new chain setup time, a peer is requested to parse a JoinChannel request that contains a chain genesis block. The peer then needs to process this genesis block, and use configuration items listed within it to setup the security context of that chain: 
 - the MSPManager of the chain consisting of the VerifierMSPs of all the organizations of the chain
 - the chain readers/writers and admins of the chain to enforce chain access control",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1329,,,,,,,,,"1|hzx807:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate MSP with orderer,FAB-1274,13608,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,adc,tuand,tuand,05/Dec/16 11:34 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,07/Feb/17 3:23 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Placeholder user story until [~adc] comes back with the JIRA issue he's using for MSP/orderer work.

This involves:
# passing configuration to MSP component
# using MSP to authenticate peers and verifying blocks on Broadcast() and Deliver() calls
# handling responses when authentication/authorization fails",,ishihara.shun,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6e7:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,Unset,,,,,,,,,,,ishihara.shun,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/17 3:24 PM;kchristidis;The hooks for MSP have been added to the orderer code. Waiting for the MSP policies from the crypto team, and then we'll be able to wrap this up.;;;","05/Feb/17 10:31 AM;kchristidis;Folks, where do we stand here? As far as I can tell this should be marked as done. Please update accordingly.;;;","07/Feb/17 3:23 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4781/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer does not stop after receiving SIGINT signal,FAB-1275,13609,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,xixuejia,xixuejia,xixuejia,05/Dec/16 11:41 PM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,08/Dec/16 9:49 AM,,,,,,,,,0,,,,,,,,,"after starting a new peer with command `peer node start` and then I want to stop peer process by pressing 'ctrl+C', the logger for GossipStateProvider still prints out logs and peer process doesn't stop

How to reproduce this bug?
issue `peer node start` without starting orderer, and then press 'ctrl+C'",,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfi7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to enhance BCCSP with non-malleable ECDSA signatures,FAB-1276,13610,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,06/Dec/16 12:58 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,19/Jan/17 4:29 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,,,angelo.decaro,binhn,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-353,,,,,,,,,"1|hzx7un:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 3:20 AM;mastersingh24;[~adc] Would you mind adding the details about the actual issue and then the solution?  If you can provide a fairly detailed explanation of the solution it will help the various SDKs understand the changes they'll need to implement;;;","19/Jan/17 1:39 AM;binhn;I took the content from the commit https://gerrit.hyperledger.org/r/#/c/2983/

{quote}ECDSA signatures do not have unique representation and this can facilitate
replay attacks and more. In order to have a unique representation,
this change-set forses BCCSP to generate and accept only signatures
with low-S.
Bitcoin has also addressed this issue with the following BIP:
https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki
Before merging this change-set, we need to ensure that client-sdks
generates signatures properly in order to avoid massive rejection
of transactions.

{quote};;;","19/Jan/17 1:49 AM;angelo.decaro;Thanks [~binhn]. [~mastersingh24], I apologize for not having put the details in before.

So, essentially, an ECDSA signature consists of two elements usually called R and S. By the properties of the elliptic curve, fixed R, there are two possible values that S can take that satisfy the signature verification algorithm. Of course, this does not help breaking the security of the signature scheme itself but may cause problems to protocols that uses it. An example is the malleability of transactions that can result in replay attacks. 

One way to fix it is to decide which value among the two possible values that S can take is to be enforced. What Bitcoin has also done is go for what is called low-S values. Meaning that if S is larger than half of the order of the elliptic curve group, it is rejected. At signing time, if the generated S is larger than the modulo halved then, S is reduced.

This is enough to avoid malleability :)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to integrate MSP logic into the orderers for signing,FAB-1277,13611,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,06/Dec/16 1:00 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,19/Jan/17 6:00 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1324,,,,,,,,,"1|hzx7uf:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce generic notion of execution in the orderer,FAB-1278,13612,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Dec/16 6:18 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,03/Jan/17 11:11 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"For the impending chain creation work, a second type of transaction will need to be 'executed' beyond a configuration transaction. This store is to generalizes the old configuration specific code paths into a re-usable path.

In particular, the broadcast filters must be generalized to be a more generic filtering mechanism.  Instead of replying with the matched rule type, and then having the invoker make decisions based on the match, the filters should return a Committer which can perform those actions with no specific knowledge from the caller.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-816,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-686,,,,,,,,,"1|hzxfif:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create orderer generic multichain creation mechanism,FAB-1279,13613,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Dec/16 6:30 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,03/Jan/17 11:10 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Because every consensus type (Kafka, SBFT, Solo) will need to handle chain creation and management, it makes sense to write this as a layer outside of the actual consensus implementation.

This should include intercepting chain creation requests and routing them to the ordering system channel, and invoking the constructors for the backing resources once the request has been ordered.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-816,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-686,,,,,,,,,"1|hzxfin:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,4.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create fabric common components directory and move orderer shared components there,FAB-1280,13614,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Dec/16 7:23 AM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,03/Jan/17 11:10 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The orderer has some common code which is of broader use to the fabric at large, not just the orderer.

In particularly, the configuration block parsing, and the policy parsing and evaluation are prime candidates for being shared in a modular way between the orderer and peer (and possibly other components).

This is being created in part by the request of [~muralisr] to faciliate some VSCC ESCC work.",,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-37,,,,,,,,,"1|hzxfiv:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,jyellick,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/16 8:55 AM;muralisr;thanks, [~jyellick].  Was discussing with [~ales] re the policy in VSCC and the thought was to get the groundwork in place so it'll be ready for use as soon as we get there. Seems getting the policy to a common ground for all the components to use is the right thing to do.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"add escc, vscc, policy fields to lifecycle system chaincode ",FAB-1281,13615,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,06/Dec/16 7:25 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,07/Dec/16 9:16 AM,,,,,fabric-peer,,,,0,chaincode,,,,,,,,"As part of getting chaincode framework ready for multi chain, we need to start populating the right fields in the LCCC. The basis needs to be correct before we open up the framework for multichain.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfjb:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
testing JIRA,FAB-1282,13616,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,06/Dec/16 8:30 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,06/Dec/16 8:32 AM,,,,,fabric-peer,,,,0,,,,,,,,,ust a test,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfjj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create new gossip message underlined for leader election.,FAB-1285,13620,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,C0rWin,C0rWin,06/Dec/16 7:20 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,11/Dec/16 10:33 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"Since leader election process will run on top of gossip communication layer to make decision which peers within organization has to connect to the ordering service, there is a need to broadcast customized message which indicate leadership decision of concrete peer. Message should include following information:

1. Information about peer which decided to become a leader
2. timestamp
3. Signature of the peer

Leader election mechanism need to make sure that *leader* peer will take care to periodically send this message to make rest of the peers aware of its aliveness.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx83z:",,,,Unset,,Sprint 6 - Gossip,Sprint 7 - Gossip,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Dec/16 10:43 PM;C0rWin;Gerrit CR link: https://gerrit.hyperledger.org/r/#/c/3017/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add gossip support for new type of messages related to leader election.,FAB-1286,13621,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,C0rWin,C0rWin,06/Dec/16 7:36 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,31/Jan/17 11:27 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,Because nature of the new gossip leader election message is not immutable there is additional logic has to be added to provide support for dissemination of leader election message type.,,C0rWin,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7tb:",,,,Unset,,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/17 7:09 PM;gennadyl;https://gerrit.hyperledger.org/r/#/c/4119/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write down document describing gossip based leader election.,FAB-1287,13622,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,C0rWin,C0rWin,06/Dec/16 7:44 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,07/Feb/17 8:14 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"In order to make clear what are the guaranties leader election based on the gossip will provide and to communicate the actual algorithm need to provide high level description plus pseudo code of the proposed solution.

Document will include assumption it requires from gossip layer and also will clarify expectations and guaranties leader election will provide. ",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/17 10:17 PM;gennadyl;Gossip Leader election.docx;https://jira.hyperledger.org/secure/attachment/10365/Gossip+Leader+election.docx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx70n:",,,,Unset,,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose gossip API for system chain code.,FAB-1288,13623,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,C0rWin,C0rWin,06/Dec/16 9:07 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,09/Jan/17 4:16 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"In order to allow chain code to leverage gossip capabilities, we need to expose and design API for system chain code usages. Such that it will allow to broadcast messages and receive messages from gossip communication layer.",,C0rWin,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/16 10:06 PM;C0rWin;Screen Shot 2016-12-12 at 15.05.56.png;https://jira.hyperledger.org/secure/attachment/10308/Screen+Shot+2016-12-12+at+15.05.56.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx7zz:",,,,Unset,,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,mastersingh24,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Dec/16 10:32 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/3175/;;;","12/Dec/16 8:19 PM;mastersingh24;[~C0rWin] [~muralisr] Can we add some details / diagrams on the overall flow of how things are supposed to work in terms of connecting to the orderer, posting to gossip, committing blocks, etc?  Without some type of flow diagram, it is really hard to review any of these changes.  If there is an external document, that's fine but please add a link to this requires and/or create a higher level epic which brings all of these together;;;","12/Dec/16 9:23 PM;C0rWin;[~mastersingh24] There is no new functionality added, the whole design and component interactions remained the same. All intent of current item and attached commit is to expose current gossip implementation in form of single static instance e.g. singleton, such that CSCC will be easily exposed to it. Moreover it provides decoupling facade for future work described here: FAB-1356.

For example now writting CSCC join function might look like:

{code}
func joinChain(blockBytes []byte) ([]byte, error) {
    if blockBytes == nil {
        return nil, fmt.Errorf(""Genesis block must not be nil."")
    }

    block, err := getBlockFromBlockBytes(blockBytes)
    if err != nil {
        return nil, fmt.Errorf(""Failed to reconstruct the genesis block, %s"", err)
    }

    // We cache the genesis block here so that we can do the work until
    // we get the config transaction back from the orderer, at which time, we
    // follow the normal commit flow via updateConfigBlock call.
    peer.CacheConfigBlock(block)

    committer := // Initialize committer here

    service.GetGossipService().JoinChannel(committer, block)

    return nil, nil
}
{code};;;","12/Dec/16 9:28 PM;mastersingh24;fair point - perhaps I should have asked for this on an earlier change set  / JIRA entry.    But I still think it would be helpful to have a flow diagram somewhere that we could reference to understand the change where gossip actually handles committing of blocks;;;","12/Dec/16 9:43 PM;C0rWin;Agree will work to sketch something, there is diagram in FAB-1038 which might explain the interaction with gossip.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose the ability to query whenever it was choosen to be a leader for system chaincode.,FAB-1289,13624,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,C0rWin,C0rWin,06/Dec/16 9:10 PM,05/Aug/18 10:37 PM,28/Oct/23 2:58 AM,20/Jul/18 11:05 PM,,,Future,,fabric-gossip,,,,0,gossip,,,,,,,,Gossip & Leader election layer has to expose the API to provide chain code with ability to ask whenever current peer is chosen to be a leader.,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzxfjz:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move gossip proto files under protos folder.,FAB-1290,13625,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,C0rWin,C0rWin,06/Dec/16 11:28 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,07/Feb/17 8:14 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,Need to consolidate all gossip protobuf related files under project protos folder.,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx70v:",,,,Unset,,Sprint 6 - Gossip,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add savepont to state database,FAB-1291,13626,12902,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,balaji.viswanathan,denyeart,denyeart,07/Dec/16 1:07 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,09/Dec/16 12:15 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,Add savepoint to state database so that upon recovery we know the latest state that was written and can recovery from there.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfk7:",,,,,,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip pull refactoring,FAB-1292,13627,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,07/Dec/16 1:23 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,28/Dec/16 6:38 PM,,,,,,,,,0,,,,,,,,,"In order to sync immutable entities in gossip one needs to implement an entire interface (the pullAdapter in gossip/algo/pull.go) and keep an in-memory store of messages that are synced using the pull mechanism.
This is cumbersome.  It would be good to be able to have a container class that holds the messages and also implementes the pull adapter, and can be instantiated for any type of immutable gossip message.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxfkf:",,,,,,Sprint 6 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use chain ID to create chaincode objects,FAB-1295,13702,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,muralisr,muralisr,07/Dec/16 9:20 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,10/Dec/16 8:20 AM,,,,,fabric-peer,,,,0,,,,,,,,,"Chaincode objects are
* containers
* images
* system chaincodes

Using chain ID as part of the namespace naturally provides instantiation of chaincodes across chains. This is especially important for system chaincodes for which the code is inbuilt into the fabric (this was anticipated in the notion of ""instance"" for system chaincodes (see core/container/inproccontroller/inproccontroller.go)",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfkv:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable BDD tests to run outside of Vagrant env,FAB-1296,13703,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,08/Dec/16 2:01 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,16/Jan/17 6:13 AM,,,,,,,,,0,,,,,,,,,"BDD tests make assumptions about networking the that prevent them from running successfully outside of the Vagrant environment.

Update the BDD tests to allow them to be run natively without Vagrant on any Linux/macOS environment.",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfl3:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Dec/16 11:46 PM;sanchezl;Current BDD test framework does not start up docker images with exposed ports.
Instead, it relies on the fact that, on Linux, the docker daemon creates a bridge network for each new docker network and that network is then reachable from the host.
e.g:
{code}
vagrant@hyperledger-devenv $ docker network ls
NETWORK ID          NAME                                       DRIVER              SCOPE
0b27fbe815f1        2a53e202bd5211e6891408002790a540_default   bridge              local               
08b4d7b23046        bridge                                     bridge              local               
fc18e2f3079a        host                                       host                local               
faa1279a798d        none                                       null                local               
 
vagrant@hyperledger-devenv $ ifconfig br-0b27fbe815f1
br-0b27fbe815f1 Link encap:Ethernet  HWaddr 02:42:51:7b:11:90  
          inet addr:172.20.0.1  Bcast:0.0.0.0  Mask:255.255.0.0

{code}

On macOS these bridge networks are created, but they are hidden and not routable from the host.

As part of this item I will do the following:
# Have the docker-compose.yml files map the exposed ports to the local host.
# The ports will be mapped to a random local port so that:
## Multiple docker containers can expose the same port at the same time.
## The ports will not conflict with the Vagrant forwarded ports.
# The BDD tests framework will be updated to use the mapped host and port for the exposed ports.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add tests to excercise multichain in chaincode framework,FAB-1297,13704,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,08/Dec/16 3:54 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,10/Dec/16 8:19 AM,,,,,fabric-peer,,,,0,,,,,,,,,FAB-1295 added chainID to the chaincode namespace so chaincodes can be launched per chain. This task adds tests to excercise that feature.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxe9z:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove queueing concept from Broadcast,FAB-1298,13705,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Dec/16 5:54 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,04/Jan/17 3:32 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The broadcast API suffers from a deficiency today, that it immediately returns success/failure before the request has actually entered consensus.

The desired behavior would be to return success only after the request has entered consensus, but, this poses a problem when the broadcast queue overflows.  In the event that the broadcast queue overflows, incoming requests should be rejected to alert the client to slow down.

This results in the situation of:
1. Wait until after the queue drains to return the failure (which will not throttle the client and not provide immediate feedback, this is bad)
2. Return the success before the queue drains (which will not inform the client if for whatever reason the consensus system never actually accepts the request)

Since these options both have drawbacks and are mutually exclusive, a different solution is required.

This story is to add windowing to the broadcast API to mirror the deliver API.  If the client knows how big the buffer is at the server, then the client can delay sending new messages until it receives the success/failure after processing the queue.  If the client violates the protocol and overflows the queue, the client can be dismissed as malicious and hung-up on.",,bcbrock,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-686,,,,,,,,,"1|hzxflb:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,2.0,Unset,,,,,,,,,,,bcbrock,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/16 12:35 AM;jyellick;Per some feedback from [~bcbrock] it sounds like we can rely on gRPC to do our windowing for us, so I am repurposing this story for removing the queue and windowing from broadcast.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support orderer multichain restart,FAB-1299,13706,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Dec/16 6:26 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The multichain work introduced a significant amount of state tracking and updating on a per chain basis.  This state needs to be stored in such a way that when the orderer restarts, it can restart all of the chains which were created and do so with their correct config.

This should additionally support whatever metadata that a consenter needs for restart, such as in the kafka case the last offset committed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1623,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-686,,,,,,,,,"1|hzxflj:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,4.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide metrics for the common orderer service endpoints,FAB-1300,13707,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,08/Dec/16 6:55 AM,14/Dec/18 1:17 AM,28/Oct/23 2:58 AM,14/Dec/18 1:17 AM,,,v1.4.0,,fabric-orderer,,,,0,common-components,operations,,,,,,,"In order to assess the health of the ordering service, we should expose basic metrics about the state of the ordering network like number of clients connected, transaction rates, chains and chain heights, etc.",,jyellick,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-3388,,,,,,,,,"1|hzzq7j:",,,,Unset,,,,,,,,,,,,,,,5.0,Unset,,,,,,,,,,,jyellick,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/17 11:02 PM;scottz;Refer also to FAB-841, for more perspective.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add config inspection validation on chain creation transaction,FAB-1302,13709,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,08/Dec/16 7:00 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,27/Apr/17 4:57 AM,,,v1.0.0,,fabric-orderer,,,,0,common-components,,,,,,,,"Today, chain creation requests are only validated based on the fact that they are well formed, and signed according to the policy for chain creation.

There is no checking to make sure that the orderers are specified correctly, that the orderer MSPs are included, etc.

What these checks are need to be determined as part of this story, as well as their implementation.  There is a plug point in the multichain systemChain.go code which is meant to handle this, but it currently is mostly a no-op.",,grapebaba,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx4hj:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,Sprint 13 - Consensus,Sprint 14 - Consensus,Sprint 15 - Consensus,Sprint 16 - Consensus,,,,,,,3.0,Unset,,,,,,,,,,,grapebaba,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Apr/17 11:06 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/7105/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hook into fabric ledger for rawledger implementation,FAB-1304,13711,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,jyellick,jyellick,08/Dec/16 7:10 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,10/Mar/17 5:41 AM,,,,,fabric-orderer,,,,0,common-components,ledger,,,,,,,"The orderer currently relies on its own rawledger implementations, a simple ram based ledger (which does not persist anything to disk) and a simple file based ledger which uses a very naive JSON encoding with 1 block per file.

Neither of these are likely to scale well for real systems and have always been intended to be testing tools while the real ledger is developed.

A shim needs to be written between the orderer rawledger API and the fabric ledger api to support deploying with the fabric backing ledger for production deployments.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx60v:",,,,Unset,,Sprint 11 - consensus,Sprint 12 - consensus,Sprint 13 - Consensus,,,,,,,,,,,13.0,Unset,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/17 2:09 PM;kchristidis;Peer work takes priority, pushing this back by a sprint.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modifying fabric code and rebuilding docker target(make docker) fails,FAB-1305,13712,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,pmullaney,pmullaney,08/Dec/16 8:08 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,12/May/17 5:36 AM,v1.0.0,,Unverifiable,,fabric-build,,,,0,,,,,,,,,"Updating fabric code and rebuilding with the docker target doesn't seem to update fabric binaries - here is a log:
vagrant@hyperledger-devenv:v0.2.1-3ea19f3:/opt/gopath/src/github.com/hyperledger/fabric$ touch events/producer/eventhelper.go
vagrant@hyperledger-devenv:v0.2.1-3ea19f3:/opt/gopath/src/github.com/hyperledger/fabric$ make docker      
Building build/docker/bin/peer
mkdir -p build/image/peer/payload
cp build/docker/bin/peer peer/core.yaml msp/peer-config.json build/image/peer/payload
Building build/docker/bin/orderer
mkdir -p build/image/orderer/payload
cp build/docker/bin/orderer orderer/orderer.yaml build/image/orderer/payload
vagrant@hyperledger-devenv:v0.2.1-3ea19f3:/opt/gopath/src/github.com/hyperledger/fabric$",,ChristopherFerris,greg.haskins,pmullaney,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxflz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,greg.haskins,pmullaney,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/17 10:06 PM;greg.haskins;Workaround should be ""make clean"" first, thus marking lower priority.;;;","19/Apr/17 10:11 AM;smithbk;Greg, assigning to Anil.  If you want to do this, pls feel free to grab it back.

Anil, I think the only thing needed here is to make the binaries dependent upon the source files, so a change to the source files triggers a rebuild of the binaries which should then trigger a rebuild of the docker image.  You can reproduce the problem as follows:

# make fabric-ca-server
   to build the executable
# touch cmd/fabric-ca-server/main.go
# make fabric-ca-server
   will say it is up-to-date, but it should rebuild
;;;","12/May/17 5:36 AM;ChristopherFerris;this currently works as expected. closing;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create BDD tests for adding/removing orderers from a Kafka network,FAB-1306,13713,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,tuand,tuand,08/Dec/16 8:13 AM,12/Jul/19 8:36 PM,28/Oct/23 2:58 AM,12/Jul/19 8:36 PM,,,Future,,fabric-quality,,,,0,kafka,,,,,,,,"Create tests scenarios for
# letting orderers from a new org connect to Kafka
# removing connect authorization for all orderers from an org from Kafka

Tests should handle both single broker/multi brokers cases",,latitiah,sanchezl,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2t3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,latitiah,sanchezl,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/17 4:51 AM;sanchezl;This seems to just be a test of Kafka functionality, basically adding/removing trusted CA certs from Kafka. Please help me understand if there is more to it than that.;;;","26/Jan/17 5:36 AM;tuand;My intention was to test the orderer's behavior if a CA cert is added/removed from the broker's truststore.

in single or multiple broker setups, I believe the broker has to be recycled after the add/remove cert. What's the expected behavior of the orderer when the connection is broken and when the connection is re-established ?
;;;","22/Mar/17 12:59 AM;kchristidis;This should leverage [~jeffgarratt]'s BDD work. I suggest we proceed with a feature file that is posted as a WIP changeset, then work with Jeff to make sure the missing functionality is added to his _impl files.;;;","12/May/17 1:13 AM;latitiah;Testing the orderer's behavior if a CA cert is added/removed from the broker's trust store.
In single and multiple broker setups, the broker has to be recycled after modifying the certificate. 
The orderer should stop sending data to kafka broker when CA cert is changed or removed.
The network should resume when the acceptable certificate is reinstated.;;;","12/May/17 5:45 AM;latitiah;* +Component+:  orderer
 * +Description+:  Testing the orderer's behavior if a certificate is added or removed
 * +Artifact Locations+:  test/feature/peer.feature
 * +Network Topology+:  1 orderer, 3 kafka brokers
 * +Client Driver+: behave;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The ""errors"" unit test fails on both the z and p architectures",FAB-1307,13714,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,harrijk,harrijk,08/Dec/16 11:31 PM,02/Dec/19 6:16 PM,28/Oct/23 2:58 AM,12/Apr/17 6:19 AM,v1.0.0,,v1.0.0,,fabric-peer,,,,0,build-system,,,,,,,,"Ever since CR  2685, https://gerrit.hyperledger.org/r/#/c/2685/, was merged into the fabric code base, the *github.com/hyperledger/fabric/core/errors* unit test fails on both the z and p architectures.

When I checkout the commit (ae9f2f2 FAB-816 Clean multichain integration interfaces) before the commit mentioned in CR 2685 , all unit tests pass on all architectures.

When I checkout the commit (2dc82e0 Enhance and begin using error handling framework) mentioned in CR 2865, the *github.com/hyperledger/fabric/core/errors* unit test fails on both the z and p architectures.

Unit Test Output is attached.

",,denyeart,harrijk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/16 11:27 PM;harrijk;errors-unit-test-failure.txt;https://jira.hyperledger.org/secure/attachment/10305/errors-unit-test-failure.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfm7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,harrijk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Dec/16 12:43 AM;harrijk;Duplicate of FAB-1307.  Had issues with JIRA.;;;","12/Apr/17 6:18 AM;denyeart;I believe this has been fixed.  Please re-open if you still see the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I want to be able to read from CouchDB state database as an 'external' user (not using the peer's admin user),FAB-1308,13715,,Story,Backlog,FAB,Fabric,software,denyeart,,,High,,,denyeart,denyeart,09/Dec/16 12:10 AM,01/May/21 3:31 AM,28/Oct/23 2:58 AM,,,,Future,,fabric-ledger,,,,2,ledger,stale-item,,,,,,,"Currently only two modes are available when using CouchDB - completely open (no user security) and completely locked down (user security enabled).  Production environments utilize the locked down configuration, while development environments may decide to skip user security in order to allow direct access.

If user security is enabled, only the peer's admin user can read/write to CouchDB.  No other 'external' users can access CouchDB - access is locked down and all requests must go through the peer's CouchDB user.

If it is desired to have 'external' users be able to read (only) CouchDB directly, two changes would be required:

1) Add the 'external' users to the CouchDB database security object as members.  See http://docs.couchdb.org/en/2.2.0/api/database/security.html .  Currently peer writes the database security object with just the peer's admin user upon each startup (allowing for the ability to change the username).  Note - it may be possible to use a server admin instead of setting the admins role on each database, and only populate the members role. 

2) Any database 'member' would have both read and write access.  To lock it down for read access only, a CouchDB 'validation function' (deployed as a design document to CouchDB) would be required, it could enforce that only the peer's admin user could perform writes.",,chrisconway,denyeart,jrosmith,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-10048,,,FAB-11155,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-60,,,,,,,,,"1|hzx7kf:",,,,Unset,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,8.0,Unset,,,,,,,,,,,chrisconway,denyeart,jrosmith,rhegde,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Aug/18 6:34 AM;rhegde;Can we have a fix for the point 1 as any provisioning done on the _security object for additional capability (like read-only user) would result peer rewriting it with default. There could be other organization, which already has the _security object defined and would result to break it. We would be in the same state once we run with Fabric v.1.2.

[~sanchezl] [~ashkumar]

Utilizing the couch database for all type of production related operational support is another benefit (avoids going through the peer) an organization can use for using couch database as world state ledger.

After changing the description for the current Jira - FAB-11155 looks related.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger performance system test: LevelDB,FAB-1309,13716,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,denyeart,denyeart,09/Dec/16 12:12 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,11/May/17 12:52 AM,,,v1.0.0,,fabric-ledger,,,,0,endgame,ledger,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1316,,,,,,,FAB-3426,,,,,,,,,,,,,,,,,"10/Apr/17 11:05 PM;denyeart;ExperimentsResults.xlsx;https://jira.hyperledger.org/secure/attachment/10652/ExperimentsResults.xlsx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzx4jr:",,,,,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Apr/17 12:55 AM;denyeart;Test harness is in review: https://gerrit.hyperledger.org/r/#/c/6793/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger performance system test: CouchDB,FAB-1310,13717,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,denyeart,denyeart,09/Dec/16 12:13 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,25/May/17 11:48 PM,,,v1.0.0,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3427,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-60,,,,,,,,,"1|hzx7jb:",,,,,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The ""errors"" unit test fails on both the z and p architectures",FAB-1311,13718,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,wlahti,harrijk,harrijk,09/Dec/16 12:17 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,10/Jan/17 5:32 AM,v1.0.0,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Ever since CR  2685 https://gerrit.hyperledger.org/r/#/c/2685/ was merged into the fabric code base, the *github.com/hyperledger/fabric/core/errors* unit test fails on both the z and p architectures.

When I checkout the commit (ae9f2f2 FAB-816 Clean multichain integration interfaces) before the commit mentioned in CR 2685 , all unit tests pass on all architectures.

When I checkout the commit (2dc82e0 Enhance and begin using error handling framework) mentioned in CR 2685, the *github.com/hyperledger/fabric/core/errors* unit test fails on both the z and p architectures.

Unit Test Output is attached.",,elisafla,harrijk,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/16 12:16 AM;harrijk;errors-unit-test-failure.txt;https://jira.hyperledger.org/secure/attachment/10306/errors-unit-test-failure.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfmf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elisafla,harrijk,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system test crashed when processing 1000 records in 1000 databases in leveldb ,FAB-1312,13719,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,Nishi,Nishi,09/Dec/16 1:45 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,08/Apr/17 3:09 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"In my stress test program(multidb_multitx_test.go) for ledger.

Test1: Created 1000 databases in leveldb 
Test2: Insert 1000 records each in each db
Test3: Read 1000 inserted records from each db

Test crashed with following errors:

goroutine 3755 [select, 9 minutes]:
github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.(*DB).compactionError(0xc4cc5d5b00)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db_compaction.go:90 +0x5e1
created by github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.openDB
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db.go:139 +0x592
",,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/16 6:46 AM;Nishi;Report on Memory Usage from MemProfiling.ods;https://jira.hyperledger.org/secure/attachment/10320/Report+on+Memory+Usage+from+MemProfiling.ods","15/Dec/16 3:59 AM;Nishi;multidb_multitx_test 1000 X 1000  report 12-14;https://jira.hyperledger.org/secure/attachment/10315/multidb_multitx_test+1000+X+1000++report+12-14","16/Dec/16 6:47 AM;Nishi;multidb_multitx_test.go;https://jira.hyperledger.org/secure/attachment/10321/multidb_multitx_test.go","14/Dec/16 2:01 AM;Nishi;multidb_multitx_test.go;https://jira.hyperledger.org/secure/attachment/10310/multidb_multitx_test.go","14/Dec/16 3:02 AM;Nishi;pkg_test.go;https://jira.hyperledger.org/secure/attachment/10311/pkg_test.go",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx56n:",,,,,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,,,,,,,,,,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/16 12:27 AM;Nishi;After increasing timeout on test ""go test -timeout 240m"" all 1000 records were inserted successfully into each of the 1000 databases.

Upon subsequent reading of these 1000 records from each database test ended abruptly with ""signal killed"" message

from web on ""signal killed"" : ""If the user or sysadmin did not kill the program the kernel may have. The kernel would only kill a process under exceptional circumstances such as extreme resource starvation (think mem+swap exhaustion).""

On running - dmesg | grep -E -i -B100 'killed process'
[15679.524422] Out of memory: Kill process 5195 (lockbasedtxmgmt) score 942 or sacrifice child
[15679.524641] Killed process 5195 (lockbasedtxmgmt) total-vm:5570356kB, anon-rss:3815248kB, file-rss:1104kB

After increasing vagrant base memory inside virtual box from 4096MB to 8192MB at the time of vagrant startup, test ran for a little longer time and processed/read few extra records but eventually crashed without completing processing/reading all 1000 records from 1000 databases.

;;;","14/Dec/16 1:58 AM;Nishi;updated /etc/sysctl.conf to include 
vm.overcommit_memory=1
vm.overcommit_ratio=50

Resulting in out of memory errors. Looks like VM has to be fine tuned with right set of parameters to be able to use and swap memory efficiently

Processed so far 20 databases
Processing/Reading record 0 in db db_336:
fatal error: runtime: out of memory

runtime stack:
runtime.throw(0x989bbb, 0x16)
        /opt/go/src/runtime/panic.go:566 +0x95
runtime.sysMap(0xc595290000, 0xf6d0000, 0x0, 0xc3e458)
        /opt/go/src/runtime/mem_linux.go:219 +0x1d0
runtime.(*mheap).sysAlloc(0xc239a0, 0xf6d0000, 0x0)
        /opt/go/src/runtime/malloc.go:407 +0x37a
runtime.(*mheap).grow(0xc239a0, 0x7b63, 0x0)
        /opt/go/src/runtime/mheap.go:726 +0x62
runtime.(*mheap).allocSpanLocked(0xc239a0, 0x7b63, 0x8000)
        /opt/go/src/runtime/mheap.go:630 +0x4f2
runtime.(*mheap).alloc_m(0xc239a0, 0x7b63, 0x100000000, 0x7fc6bba59288)
        /opt/go/src/runtime/mheap.go:515 +0xe0
runtime.(*mheap).alloc.func1()
        /opt/go/src/runtime/mheap.go:579 +0x4b
runtime.systemstack(0x7fc6bdceee18)
        /opt/go/src/runtime/asm_amd64.s:314 +0xab
runtime.(*mheap).alloc(0xc239a0, 0x7b63, 0x100000000, 0x4235ae)
        /opt/go/src/runtime/mheap.go:580 +0x73
runtime.largeAlloc(0xf6c6000, 0x7fc6bdceee00, 0x454d6a)
        /opt/go/src/runtime/malloc.go:774 +0x93
runtime.mallocgc.func1()
        /opt/go/src/runtime/malloc.go:669 +0x3e
runtime.systemstack(0xc42001b500)
        /opt/go/src/runtime/asm_amd64.s:298 +0x79
runtime.mstart()
        /opt/go/src/runtime/proc.go:1079

goroutine 5094 [running]:
runtime.systemstack_switch()
        /opt/go/src/runtime/asm_amd64.s:252 fp=0xc517711b70 sp=0xc517711b68
runtime.mallocgc(0xf6c6000, 0x0, 0x0, 0x1)
        /opt/go/src/runtime/malloc.go:670 +0x903 fp=0xc517711c10 sp=0xc517711b70
runtime.growslice(0x8baa20, 0xc588d20000, 0xc5690e8, 0xc56a000, 0xc56b8b4, 0x27b8, 0x3000, 0xc540fa3200)
        /opt/go/src/runtime/slice.go:126 +0x24e fp=0xc517711ca0 sp=0xc517711c10
testing.(*common).log(0xc42007a180, 0xc540fa3200, 0x27b8)
        /opt/go/src/testing/testing.go:460 +0x15a fp=0xc517711d10 sp=0xc517711ca0
testing.(*common).Logf(0xc42007a180, 0x98febc, 0x20, 0xc540e9fbc0, 0x3, 0x3)
        /opt/go/src/testing/testing.go:473 +0x75 fp=0xc517711d58 sp=0xc517711d10
github.com/hyperledger/fabric/core/ledger/testutil.AssertEquals(0xbfc180, 0xc42007a180, 0x8b2a20, 0xc540ecf4e0, 0x8b2a20, 0xc540ecf500)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/testutil/test_util.go:136 +0x128 fp=0xc517711dc8 sp=0xc517711d58
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/lockbasedtxmgmt.TestDBTxGet(0xc42007a180)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/lockbasedtxmgmt/multidb_multitx_test.go:128 +0x4dd fp=0xc517711f78 sp=0xc517711dc8
testing.tRunner(0xc42007a180, 0x9c7680)
        /opt/go/src/testing/testing.go:610 +0x81 fp=0xc517711fa0 sp=0xc517711f78
runtime.goexit()
        /opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc517711fa8 sp=0xc517711fa0
created by testing.(*T).Run
        /opt/go/src/testing/testing.go:646 +0x2ec

goroutine 1 [chan receive]:
testing.(*T).Run(0xc420236e40, 0x982b6d, 0xb, 0x9c7680, 0xc42014bd01)
        /opt/go/src/testing/testing.go:647 +0x316
testing.RunTests.func1(0xc420236e40)
        /opt/go/src/testing/testing.go:793 +0x6d
testing.tRunner(0xc420236e40, 0xc42014ae30)
        /opt/go/src/testing/testing.go:610 +0x81
testing.RunTests(0x9c8310, 0xc16880, 0xe, 0xe, 0xc42023aad0)
        /opt/go/src/testing/testing.go:799 +0x2f5
testing.(*M).Run(0xc42014aef8, 0xc42014bef8)
        /opt/go/src/testing/testing.go:743 +0x85
main.main()
        github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/lockbasedtxmgmt/_test/_testmain.go:80 +0xc6

goroutine 17 [syscall, 84 minutes, locked to thread]:
runtime.goexit()
        /opt/go/src/runtime/asm_amd64.s:2086 +0x1

goroutine 899 [select, 84 minutes]:
github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.(*DB).tCompaction(0xc4499a6180)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db_compaction.go:804 +0x83c
created by github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.openDB
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db.go:146 +0x73a;;;","15/Dec/16 3:54 AM;Nishi;Reran test after modifying util/db.go (line: 79) as
""dbOpts := &opt.Options{OpenFilesCacheCapacity: -1, BlockCacheCapacity: 2 * 1024 * 1024}""

All writes (1000/1000) were successful. 
Reads were processed only in 61/1000 databases and then test exited with ""signal killed process"".

dmesg | grep -E -i -B100 'killed process'

resulted in 

[ 5792.005255] Out of memory: Kill process 2675 (lockbasedtxmgmt) score 950 or sacrifice child
[ 5792.005553] Killed process 2675 (lockbasedtxmgmt) total-vm:9523480kB, anon-rss:7748680kB, file-rss:944kB

same as in previous run.

;;;","16/Dec/16 6:46 AM;Nishi;With default db options: dbOpts := &opt.Options{}
Ran go test to generate memprofile on different sample sets 1 X 1 , 2 X 2, 100 X 100, 100 X 200, 200 X 100, 200 X 200 (databses X records) using following command:
go test -c && ./commontests.test -test.memprofile=tmp.pprof
Uploaded file ""Report on Memory Usage from MemProfiling.ods"" after consolidating memory profiling on these samples.
Also uploading new multidb_multitx_test.go (updated after txmgr code refactoring)
;;;","08/Apr/17 3:09 AM;denyeart;Recent stress tests in LevelDB did not see this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I need an API to get a list of chains of which a MSP is a member,FAB-1313,13720,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,smithbk,smithbk,09/Dec/16 1:47 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,21/Apr/17 3:40 PM,,,WON'T FIX,,fabric-orderer,,,,0,,,,,,,,,"I need an API to get a list of chains of which a MSP is a member.
COP requires this in order to manage the CRL list in the chain's MSP configuration.",,kchristidis,smithbk,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-613,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfmn:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,smithbk,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 12:34 AM;tuand;unassigning as I'll be spending more time on the java sdk.

;;;","13/Jan/17 12:35 AM;tuand;Also, is this still  needed ? From December discussion, I thought this is no longer a V1.0 item.;;;","12/Apr/17 3:16 AM;kchristidis;[~keithsmith] can you please update this or mark it as done if not needed?;;;","21/Apr/17 3:39 PM;kchristidis;As we have discussed the orderer will not be providing this functionality. Instead this should be taken care of by the clients. Closing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mv endorser and committer code to peer packag,FAB-1314,13721,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,muralisr,muralisr,09/Dec/16 2:22 AM,12/Jul/19 8:24 PM,28/Oct/23 2:58 AM,12/Jul/19 8:24 PM,,,Future,,fabric-peer,,,,0,,,,,,,,,"Having endorser and committer in separate packages causes these issues
* stutter (endorser.Endorser, committer.Committer)
* raises doubts about endorser and committers in relationship to peer - can a peer come up without endorser or committer etc.",,ishihara.shun,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfmv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 5:36 PM;muralisr;this is wontfix or backlog;;;","12/Jul/19 8:24 PM;mastersingh24;not the way we are headed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stress tests for ledger db performance,FAB-1316,13723,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,09/Dec/16 5:40 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,10/Apr/17 11:02 PM,,,DUPLICATE,,fabric-quality,,,,0,,,,,,,,,"Write stress tests to measure open file handle and memory usage, with variable number of databases and transaction sets.",,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1309,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx347:",,,,Unset,,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,Unset,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 11:02 PM;denyeart;Done by Manish.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
db performance tests for leveldb,FAB-1317,13724,13723,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,Nishi,Nishi,09/Dec/16 5:41 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,10/Apr/17 11:02 PM,,,,,fabric-ledger,fabric-quality,,,0,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfn3:",,,,,,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 11:02 PM;denyeart;Done by Manish.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use version to disambiguate running version from upgraded version,FAB-1318,13725,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,09/Dec/16 10:47 AM,20/Jul/18 11:10 PM,28/Oct/23 2:58 AM,22/Dec/16 5:17 AM,,,,,fabric-peer,,,,0,,,,,,,,,"with [~jiangyaoguo] change to FAB-1237 and FAB-1238, upgrade is hooked into the fabric and is executed by the LCCC and deployed by the endorser.

However, to complete the flow, we need to use the version to run the upgraded chaincode in a different container. This is done by using the version in the registering name of the chaincode. This is a transient name that is not saved or remembered beyond the life of the running container and is used only as a unique registration ID.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1357,,,,,,,,FAB-183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfnb:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to be able to (re)configure a chain MSP through a (re)configuration transaction,FAB-1320,13727,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,09/Dec/16 6:00 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,17/Jan/17 5:07 PM,,,,,fabric-crypto,,,,0,,,,,,,,,"Chain MSPs are setup using a chain's genesis block that contains a configuration transaction.
Hence, MSPs (or MSP Manager) takes as input a configuration block, and instantiates the MSPs associated to the chain according to the content of the configuration block.

Chain MSPs are re-configured in a similar manner. Re-configuration blocks (containing configuration transactions) are announced through the blockchain. MSPManager Reconfig function would need to take as input such a block, check authorization of the creators of this signatures, and then apply the changes imposed therein.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx81j:",,,,Unset,,Sprint 9 - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pluggable interface for a membership service provider to accommodate alternative implementations,FAB-1321,13728,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,09/Dec/16 6:07 PM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,14/Apr/17 1:15 AM,,,v1.0.0,,fabric-crypto,,,,0,,,,,,,,,"This epic consists of all the work needed to implement the default MSP supported by the fabric. 

MSP enables the fabric to support multiple roots of trust, among other things.

This, includes two major components: 

 - one sitting on the node/peer/orderer side, that does plain X.509 certificate parsing, and associated signature generation/verification, 

 - one sitting on the client (application) side that registeres/enrolls users, generates transaction certificates, incorporates attributes in transaction certificates and is used to perform tcert signature verification/generation. 

Note, that MSP implementation should consider the BCCSP of the peer/orderer/client code the MSP is running on.",,elli-androulaki,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-2,,Multi-MSP management,To Do,,,Unset,,,,"1|hzxfnr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an application developer i want to document an interface of a user-friendly library for invocation access control,FAB-1322,13729,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,09/Dec/16 7:01 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,11/Apr/17 7:31 AM,,,WON'T FIX,,fabric-crypto,,,,0,security,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-810,,,,,,,,,"1|hzxc33:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to enable the chaincode to obtain access to the proposal-transient data.,FAB-1323,13730,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Dec/16 7:12 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,19/Jan/17 4:28 PM,,,v1.0.0,,fabric-crypto,fabric-peer,,,0,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1219,,,,,,,,,"1|hzxp8f:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,Sprint 16 - Crypto,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to enhance orderers with security context,FAB-1324,13731,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,09/Dec/16 7:24 PM,21/Jul/18 4:08 AM,28/Oct/23 2:58 AM,29/Mar/17 3:33 AM,,,,,fabric-crypto,fabric-orderer,,,0,,,,,,,,,"This is to label the security work around orderers operations. That is:
 - orderer setup 
 - orderer message authentication (signature abilities)
 - orderer channel setup / incorporation of access control mechanisms ",,elli-androulaki,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Orderer security operations enabling,,,,Unset,,,,"1|hzx8jz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to create a schema for representing the needed ACL information in a chain setup configuration block,FAB-1325,13732,13394,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,09/Dec/16 7:40 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Oct/17 3:00 AM,,,,,fabric-crypto,,,,0,,,,,,,,,"This is an item in collaboration with [~tuand], [~jyellick], [~ales]. ",,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfnz:",,,,,,Sprint 5 - Crypto,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 3:00 AM;ChristopherFerris;*closing, please reopen if still relevant*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to enhance fabric client with HSM support for ECerts,FAB-1326,13733,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,vpaprots,elli-androulaki,elli-androulaki,09/Dec/16 7:50 PM,28/Jul/19 1:22 AM,28/Oct/23 2:58 AM,28/Jul/19 1:22 AM,,,,,fabric-ca,fabric-crypto,fabric-sdk-node,,0,,,,,,,,,"This epic includes two groups of issues mainly given that a BCCSP factory has already been built in nodejs: 
 1) building a BCCSP for PKCS11 (leveraging the nodejs P11 bindings)
 2) ensuring that crypto calls within the client infrastrucure are all routed through the BCCSP

Item (2) we can do in two steps: 
 2.1) refactor the code in the client to expose an application MSP interface as the one defined in FAB- ..., and
 2.2.) enforce that the refactored code's crypto operations leverage BCCSP 


",,binhn,elli-androulaki,grapebaba,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,ghx-label-4,,HSM support on fabric client,To Do,,,,,,,"1|hzx6g7:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,elli-androulaki,grapebaba,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/17 4:15 AM;binhn;I made the following changes:
# remove "" and TCerts"" in the title since tcert support is post 1.0
# change Type from Epic to Story
# set version to 1.0 as [~vpaprots] has been working on this;;;","29/Mar/18 4:24 AM;skarim;[~elli-androulaki] Hi Elli, is this work item completed? Seems like the only outstanding task is documentation?;;;","12/Sep/18 6:46 PM;elli-androulaki;[~vpaprots@ca.ibm.com] do you guys have produced any documentation around this?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to setup and test P11 provider on java sdk for eCerts,FAB-1327,13734,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,vpaprots,elli-androulaki,elli-androulaki,09/Dec/16 8:00 PM,23/Jan/20 3:44 AM,28/Oct/23 2:58 AM,23/Jan/20 3:44 AM,,,Future,,fabric-crypto,,,,0,stale-item,,,,,,,,This is to setup and confirm that P11 csp on Java SDK works. ,,elli-androulaki,rickr,sykesm,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6jb:",,,,Unset,,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,rickr,sykesm,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/17 10:02 AM;vpaprots;Assigning to Jim for redistribution.

Notes from discussion with Jim
https://github.com/hyperledger/fabric-sdk-java/blob/WIP_fabric_v1/src/main/java/org/hyperledger/fabric/sdk/security/CryptoPrimitives.java
That file needs to remove mentions to bouncycastle (as possible, discuss which are not, and how to solve). Lets use the default JCE that comes with the SDK (which will let us install PKCS11Impl provider in sdk/jre/lib/security/java.security provider list)
;;;","17/Jan/17 10:16 AM;vpaprots;Had this link from my own searching, might be useful for other people. PKCS11Impl java provider

https://www.ibm.com/support/knowledgecenter/SSYKE2_8.0.0/com.ibm.java.security.component.80.doc/security-component/pkcs11implDocs/pkcs11.html;;;","13/Apr/17 3:05 AM;elli-androulaki;[~vpaprots@ca.ibm.com], is this completed?;;;","17/Apr/17 3:30 PM;vpaprots;This is post v1.0, Need to refactor https://github.com/hyperledger/fabric-sdk-java/blob/master/src/main/java/org/hyperledger/fabric/sdk/security/CryptoPrimitives.java to not to refer to bouncycastle, but use JCE directly. [~jimthematrix] [~rickr];;;","17/Apr/17 10:06 PM;rickr;[~vpaprots]  Are you going to work on this ?  Can you get started today on WIP and maybe get it in for v 1.0.0 ?   But for 1.0.0. it would be real important we only refactored CryptoPrimitives 
;;;","11/Aug/17 6:36 PM;elli-androulaki;Hi,[~rickr], [~vpaprots], [~vpaprots@ca.ibm.com]. is this done?;;;","23/Jan/20 3:44 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
As a membership service provider developer I want to decide which identifier makes sense to use within Fabric,FAB-1328,13735,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,09/Dec/16 9:08 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,22/Feb/17 2:22 AM,,,,,fabric-crypto,,,,0,,,,,,,,,"This is a work item aiming to explore alternatives for MSP identifiers within Fabric and finalize the ones supported by the default MSP provider. 
Current alternatives
  - Use a dedicated field inside the identity structure that is checked by the related MSP at identity import/deserialization/creation time.
  - Use an existing field of the identity structure, e.g., 
     * the OU field inside the X.509 certificates
     * a subset of the OU field inside the X.509 certificate
",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-2090,,,,,,,,,"1|hzx67z:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,Sprint 11 - Crypto,Sprint 12 - Crypto,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Support access control policies for channels (creation, read, write)",FAB-1329,13736,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,09/Dec/16 9:23 PM,21/May/19 6:47 PM,28/Oct/23 2:58 AM,06/Jul/18 9:39 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"This relates to the design and implementation of the components of the system that allow for orderers to perform access control on a channel's data, and peers to enforce access control on a chain's transactions and events.

Therefore, we include in this epic: 
 - design documentation on channel/chain AC structures and Configuration parameters / reconfiguration authorization
 - chain security components setup to allow for AC management at the peer side
 - channel security components setup to allow for AC management at the orderer side
 - chain access settings reconfiguration",,elli-androulaki,fredbi,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-6,,Channel/Chain Access Control Management,To Do,,,Unset,,,,"1|hzxfo7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,fredbi,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to support endorsement policies in VSCC,FAB-1330,13737,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,09/Dec/16 10:43 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,16/Jan/17 11:36 PM,,,,,fabric-crypto,fabric-peer,,,0,,,,,,,,,,,ales,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx80n:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,,,,,,,,,,,Unset,,,,,,,,,,,ales,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/17 11:36 PM;ales;This is a duplicate of https://jira.hyperledger.org/browse/FAB-187 - I'll close it as it's tracked by that ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connect-a-thon scripts development,FAB-1331,13738,13739,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,latitiah,scottz,scottz,10/Dec/16 1:58 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Dec/16 12:58 PM,,,,,fabric-quality,,,16/Dec/16 12:00 AM,0,quality,Usability,,,,,,,"Develop scripts to be used in connectathon activities Dec 17th, that must work on all hyperledger-supported-versions of required tools docker, docker-compose, bash, yaml file versions, etc.  Work with Mihir and others to use Marbles as the chaincode deployed in this workitem.
* create a script and instructions for any friendly partner to download and create their own peer on their own machine and join the network


",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfon:",,,,,,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/16 4:19 AM;scottz;And others on the team are involved, to test the solution: Nick, Scott, Surya, Ratnakar, Barry, and more...
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
connectathon - instructions and scripts for friendly partners Dec 17,FAB-1332,13739,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,scottz,scottz,10/Dec/16 2:12 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,17/Dec/16 12:59 PM,,,,,fabric-quality,,,,0,quality,Usability,,,,,,,"Develop scripts to be used in connectathon activities Dec 17th, that must work on all hyperledger-supported-versions of required tools docker, docker-compose, bash, yaml file versions, etc. Work with Mihir and others to use Marbles as the chaincode deployed in this workitem.
* create a script to start a simple hyperledger-fabric v1.0 network with cop, orderer, and first peer and deploy chaincode.
* create a script and instructions for any friendly partner to download and create their own peer on their own machine and join the network
* instructions should explain as necessary how to exercise the network functions

Also, all the team is helping test this solution before the connectathon...",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1059,,,,,,,,,"1|hzx847:",,,,Unset,,Sprint 7 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make orderer logging configurable (in a centralized way),FAB-1333,13740,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Dec/16 2:44 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"Today, the orderer initializes loggers in almost every package, and statically sets their logging levels.  This was easy to speed development along, but this really needs to be configurable for the whole ordering process in a sane way, ideally lifted from the peer flogging stuff.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx90v:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decide on block hashing specifics,FAB-1334,13741,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Dec/16 2:51 AM,31/Jul/20 1:31 PM,28/Oct/23 2:58 AM,05/Feb/17 10:36 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Today, the orderer is using the functions defined in `fabric/protos/common/block.go` for hashing the block header and data.

These functions are _definitely_ wrong, and were never intended to be long term solutions.  These functions need to be fixed to use a hashing algorithm and marshalling scheme (and possibly using a wide Merkle Tree for the BlockData).

This was discussed somewhat extensively in https://gerrit.hyperledger.org/r/#/c/1361/ but no conclusion was reached.",,davidkhala,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6dj:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,davidkhala,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/20 1:31 PM;davidkhala;relevant issue FAB-1983;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BDD tests: Kafka orderer should be resilient to faults,FAB-1335,13742,16112,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,sanchezl,sanchezl,10/Dec/16 3:13 AM,12/Jul/19 8:36 PM,28/Oct/23 2:58 AM,12/Jul/19 8:36 PM,,,Future,,fabric-orderer,fabric-quality,,,0,kafka,,,,,,,," 

The following are the details for these tests.
 * +Component+:  orderer
 * +Description+:  Test scenarios with faults in the Kafka brokers, and the orderer shims.
 * +Artifact Locations+:  test/feature/orderer.feature
 * +Network Topology+:  3 orderers, 3 zookeepers, 4 kafka brokers, 4 peers
 * +Client Driver+: behave

This test should show that as the partition leader changes, the network still functions as expected.",,latitiah,mihaig,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3848,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2tb:",,,,,,,,,,,,,,,,,,,3.0,,,,,,,,,,,,latitiah,mihaig,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,main,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,lindluni-patch-1,release-2.4,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.2/pr-3750,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.2/pr-4374,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,mergify/bp/release-2.5/pr-3782,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,mergify/bp/release-2.4/pr-3646,true,"22/Mar/17 12:59 AM;kchristidis;As is the case with [FAB-1306], this should leverage [~jeffgarratt]'s BDD work. I suggest we proceed with a feature file that is posted as a WIP changeset, then work with Jeff to make sure the missing functionality is added to his _impl files.;;;","29/Apr/17 4:08 AM;latitiah;1. Create a network containing an orderer (configured as kafka), 3 kafka brokers(, and 1 peer? Can I send transaction without the peer?)
2. Set up an authorized user (bihn) for the orderer service
3. The authorized user should ""broadcast"" 20 unique messages to the orderer
4. The authorized user should request a ""deliver"" message from the orderer starting with ??? and ending with ???
5. Within a certain amount of time , the ""deliver"" message should contain:
a. 2 blocks
b. ?
c. ?
6. Take down the kakfa network (all 3 brokers)
7. The authorized user should ""broadcast"" 40 unique messages to the orderer
8. The authorized user waits for a certain amount of time
9. Should a failed deliver message come from the orderer??
10. Bring back 2 brokers of the kafka network
11. Does a ""deliver"" message get sent at this time? 
12. The authorized user should ""broadcast"" 40 unique messages to the orderer
13. The authorized user should receive a ""deliver"" message from the orderer with a windowsize of 10
14. Within a certain amount of time , the ""deliver"" message should contain:
a. 4 blocks (or will it be 8?)
b. ?
c. ?;;;","12/May/17 1:17 AM;latitiah;Chain topic partition leader changes due to broker down.
 Orderer service should continue to function as long as it can communicate with a chain partition leader.

We need the number of replicas for the chain's topic to equal the number of brokers. We can do this by ensuring that the the default.replication.factor of the kafka brokers is set to the preferred value.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a new block storage index to be used for History,FAB-1336,13743,12500,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MariWade,MariWade,MariWade,10/Dec/16 3:44 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 11:04 AM,,,v1.0.0,,fabric-ledger,,,,0,,,,,,,,,"Add a new block storage index that will map (blocknum,trannum) to the file storage location for this block transaction, similar in concept to the other block storage indexes: 
blocknum~trannum  Transaction SegNo + offset
",,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfov:",,,,,,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to execute all ledger tests against LevelDB and CouchDB,FAB-1337,13744,13913,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,10/Dec/16 3:55 AM,01/Mar/19 10:20 PM,28/Oct/23 2:58 AM,16/Jan/17 8:45 PM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxajz:",,,,,,Sprint 9 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-1.4,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
comparison of hyperledger projects features pros and cons,FAB-1339,13746,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,scottz,scottz,10/Dec/16 4:43 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,15/Feb/17 10:22 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"fabric , corda , sawtooth , iroha",,bmos299,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx64n:",,,,Unset,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,Unset,,,,,,,,,,,bmos299,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/17 6:33 AM;bmos299;We will work on outside of Jira.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Installing Sawtooth, Iroha, Corda on a machine",FAB-1340,13747,13746,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,suryalnvs,suryalnvs,10/Dec/16 4:52 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Feb/17 8:42 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Installing Sawtooth, Iroha, Corda on a machine each on a separate partition.",,markparz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfpb:",,,,,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,,,,markparz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/17 1:03 AM;markparz;This particular issue doesn't note anything regarding Fabric. You might want to open a question or issue on stackoverflow or on Jira, under the proposals you listed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
install and evaluate Cello,FAB-1341,13748,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,scottz,scottz,10/Dec/16 5:18 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Dec/16 6:58 AM,,,,,fabric-quality,,,,0,,,,,,,,,"install and evaluate Cello, a network monitoring tool. 
(https://github.com/yeasy/cello)",,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1431,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfp3:",,,,,,Sprint 7 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/16 3:49 AM;AdnanChoudhury;Cello runs a master node that can deploy, manage and check health of multiple hosts (worker nodes) running the blockchain fabric.
The master node runs several containers 1) an http server (nginx) 2) a dashboard container 3) a mongo database and 4) a watchdog that tracks the log. The dashboard can add/delete hosts or chains by connecting to the docker daemon of the worker through a pre-defined port and running docker-compose files, as necessary, to bring up/bring down the service.   

After following the deployment guide (https://github.com/yeasy/cello/blob/dev/docs/deployment.md) there are several issues to be resolved.
1. The README file (https://github.com/yeasy/cello/blob/dev/README.md) indicates that the setup provisions worker nodes, but the setup does not contain any script for creating any worker nodes (docker containers), and {{docker ps}} does not show any peer container., and the log shows 0 hosts connected. Either my assumption is incorrect, or the setup is incomplete.
2. The dashboard can be accessed through $master_ip:8080 with the login name and password given in docker_compose.yml, maybe this info can be added to readme.
3. The dashboard fails to add hosts with the given daemon URL ""0.0.0.0:2375"", gives error ""Failed! failed to create host {name}"" 
The Watchdog log:
{code}
dashbard      | [2016-12-14 02:45:24,552] DEBUG [resources.host_api] [utils.py:71        request_debug()] - path=/api/host, method=POST
dashbard      | [2016-12-14 02:45:24,552] DEBUG [resources.host_api] [utils.py:72        request_debug()] - request args:
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:75        request_debug()] - request form:
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:77        request_debug()] - Form: log_level:DEBUG
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:77        request_debug()] - Form: log_type:local
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:77        request_debug()] - Form: capacity:1
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:77        request_debug()] - Form: name:test1
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:77        request_debug()] - Form: daemon_url:0.0.0.0:2375
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:77        request_debug()] - Form: log_server:
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:78        request_debug()] - request raw body data:
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:79        request_debug()] - b''
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [utils.py:80        request_debug()] - None
dashbard      | [2016-12-14 02:45:24,553] DEBUG [resources.host_api] [host_api.py:58          host_create()] - name=test1, daemon_url=0.0.0.0:2375, capacity=1fillup=false, schedulable=false, log=local/
dashbard      | [2016-12-14 02:45:24,554] DEBUG [modules.host] [host.py:67               create()] - Create host: name=test1, daemon_url=0.0.0.0:2375, capacity=1, log=local/, autofill=false, schedulable=false
dashbard      | [2016-12-14 02:45:24,556] ERROR [agent.docker_swarm] [docker_swarm.py:132         check_daemon()] - Exception in check_daemon Error while fetching server API version: HTTPConnectionPool(host='0.0.0.0', port=2375): Max retries exceeded with url: /version (Caused by NewConnectionError('<requests.packages.urllib3.connection.HTTPConnection object at 0x7f1cc67bbf60>: Failed to establish a new connection: [Errno 111] Connection refused',))
dashbard      | [2016-12-14 02:45:24,556] WARNING [modules.host] [host.py:83               create()] - The daemon_url is inactive:tcp://0.0.0.0:2375
dashbard      | [2016-12-14 02:45:24,557] ERROR [agent.docker_swarm] [docker_swarm.py:159   detect_daemon_type()] - Error while fetching server API version: HTTPConnectionPool(host='0.0.0.0', port=2375): Max retries exceeded with url: /version (Caused by NewConnectionError('<requests.packages.urllib3.connection.HTTPConnection object at 0x7f1cc67bb0b8>: Failed to establish a new connection: [Errno 111] Connection refused',))
dashbard      | [2016-12-14 02:45:24,557] ERROR [agent.docker_swarm] [docker_swarm.py:238 setup_container_host()] - Invalid host_type=None
dashbard      | [2016-12-14 02:45:24,557] WARNING [modules.host] [host.py:89               create()] - test1 cannot be setup
dashbard      | [2016-12-14 02:45:24,557] WARNING [resources.host_api] [host_api.py:76          host_create()] - Failed to create host test1
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:24] ""POST /api/host HTTP/1.0"" 400 -
dashbard      | [2016-12-14 02:45:26,570] DEBUG [resources.index] [utils.py:71        request_debug()] - path=/, method=GET
dashbard      | [2016-12-14 02:45:26,571] DEBUG [resources.index] [utils.py:72        request_debug()] - request args:
dashbard      | [2016-12-14 02:45:26,571] DEBUG [resources.index] [utils.py:75        request_debug()] - request form:
dashbard      | [2016-12-14 02:45:26,572] DEBUG [resources.index] [utils.py:78        request_debug()] - request raw body data:
dashbard      | [2016-12-14 02:45:26,572] DEBUG [resources.index] [utils.py:79        request_debug()] - b''
dashbard      | [2016-12-14 02:45:26,573] DEBUG [resources.index] [utils.py:80        request_debug()] - None
dashbard      | [2016-12-14 02:45:26,575] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | [2016-12-14 02:45:26,575] DEBUG [modules.cluster] [cluster.py:50                 list()] - List all released clusters
dashbard      | [2016-12-14 02:45:26,576] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | [2016-12-14 02:45:26,577] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET / HTTP/1.0"" 200 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/css/bootstrap.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/css/dashboard.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/css/paginate.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/css/dataTables.bootstrap.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/jquery-2.2.3.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/script.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/bootbox.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/bootstrap.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/bootstrap-notify.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/css/jquery.dataTables.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/validator.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/ie10-viewport-bug-workaround.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/tether.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/highcharts-more.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/highcharts.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/solid-gauge.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/jquery.dataTables.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/js/dataTables.bootstrap.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [14/Dec/2016 02:45:26] ""GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.0"" 304 -

{code}

;;;","15/Dec/16 5:51 AM;AdnanChoudhury;After some clarifications from Baohua, was able to install and deploy master node and connect with a worker node(residing on a separate server). Here's my understanding as of now:

h4. 1. What is Cello:
It claims to be a platform to provide blockchain as a service, where it can provision/manage a blockchain on a remote host(called a worker node) from the local server (called the master node).

h4. 2. What  Cello Performs:
it claims to 
1) Provision customizable Blockchains instantly, e.g., a 6-node chain using PBFT consensus.
2) Maintain a pool of running blockchains healthy with no manual operations.
3) Check the system status, scale the chain numbers, change resources... through a dashboard.

h4. 3. Cello requirements:
For worker node, a recent Ubuntu machine (14.04+) with docker daemon running, and listening on port 2375. plus some docker images.
For master node, a recent Ubuntu machine (14.04+) with docker, docker-compose, and some docker images.

h4. 4. Test and Evaluation:
Cello performs the tasks by talking with the worker'd docker daemon, and uses Python Docker SDK to achieve that. 

Was able to run a Cello master node locally and perform the following tasks:
From the dashboard,
# Add a remote server as a worker host (please see requirements for worker), 
# Initiate a 4-peer network  chain in the worker (run 4 hyperledger-peer containers in the docker)
# Stop(pause) the chain, restart the chain, and delete the chain
# observe the health check (checking if the host is up, if thre chain is ""healthy"") being perfrmed in regular interval.
h4. 5. Issues:
# Was not able to delete the host through dashboard, errors out saying that ""not enough data to delete"", heres the log from ""make log"" in master
{code}
dashbard      | [2016-12-15 04:18:20,599] DEBUG [resources.host_api] [utils.py:71        request_debug()] - path=/api/host, method=DELETE
dashbard      | [2016-12-15 04:18:20,599] DEBUG [resources.host_api] [utils.py:72        request_debug()] - request args:
dashbard      | [2016-12-15 04:18:20,599] DEBUG [resources.host_api] [utils.py:75        request_debug()] - request form:
dashbard      | [2016-12-15 04:18:20,600] DEBUG [resources.host_api] [utils.py:78        request_debug()] - request raw body data:
dashbard      | [2016-12-15 04:18:20,600] DEBUG [resources.host_api] [utils.py:79        request_debug()] - b''
dashbard      | [2016-12-15 04:18:20,600] DEBUG [resources.host_api] [utils.py:80        request_debug()] - None
dashbard      | [2016-12-15 04:18:20,600] WARNING [resources.host_api] [host_api.py:108          host_delete()] - host delete without enough data
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:20] ""DELETE /api/host HTTP/1.0"" 400 -
dashbard      | [2016-12-15 04:18:22,618] INFO [resources.host_view] [host_view.py:25           hosts_show()] - /hosts method=GET
dashbard      | [2016-12-15 04:18:22,618] DEBUG [resources.host_view] [utils.py:71        request_debug()] - path=/view/hosts, method=GET
dashbard      | [2016-12-15 04:18:22,618] DEBUG [resources.host_view] [utils.py:72        request_debug()] - request args:
dashbard      | [2016-12-15 04:18:22,618] DEBUG [resources.host_view] [utils.py:75        request_debug()] - request form:
dashbard      | [2016-12-15 04:18:22,618] DEBUG [resources.host_view] [utils.py:78        request_debug()] - request raw body data:
dashbard      | [2016-12-15 04:18:22,619] DEBUG [resources.host_view] [utils.py:79        request_debug()] - b''
dashbard      | [2016-12-15 04:18:22,619] DEBUG [resources.host_view] [utils.py:80        request_debug()] - None
dashbard      | [2016-12-15 04:18:22,620] DEBUG [resources.host_view] [host_view.py:30           hosts_show()] - [{'name': 'host_surya', 'log_type': 'local', 'clusters': ['585179be000911000191382f'], 'status': 'active', 'id': '585164ccf113a9000b4466cf', 'capacity': 1, 'schedulable': 'false', 'create_ts': datetime.datetime(2016, 12, 14, 23, 27, 8, 692000), 'type': 'single', 'log_server': '', 'daemon_url': 'tcp://9.42.137.193:2375', 'log_level': 'DEBUG', 'autofill': 'false'}]
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /view/hosts HTTP/1.0"" 200 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/css/bootstrap.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/css/paginate.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/css/dataTables.bootstrap.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/css/dashboard.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/css/jquery.dataTables.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/jquery-2.2.3.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/bootbox.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/script.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/bootstrap-notify.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/validator.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/bootstrap.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/tether.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/ie10-viewport-bug-workaround.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/highcharts.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/highcharts-more.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/solid-gauge.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/jquery.dataTables.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/js/dataTables.bootstrap.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/images/sort_both.png HTTP/1.0"" 404 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:18:22] ""GET /static/images/sort_asc.png HTTP/1.0"" 404 -
{code}
# After bringing up a chain in one of the host, the master thinks that the health of the chaincode is not satisfactory and brings down the chain and re-ups it, finds it not-healthy again, and continuously repeats the same process.
{code}
dashbard      | [2016-12-15 04:23:44,952] DEBUG [resources.index] [utils.py:71        request_debug()] - path=/index, method=GET
dashbard      | [2016-12-15 04:23:44,952] DEBUG [resources.index] [utils.py:72        request_debug()] - request args:
dashbard      | [2016-12-15 04:23:44,952] DEBUG [resources.index] [utils.py:75        request_debug()] - request form:
dashbard      | [2016-12-15 04:23:44,952] DEBUG [resources.index] [utils.py:78        request_debug()] - request raw body data:
dashbard      | [2016-12-15 04:23:44,952] DEBUG [resources.index] [utils.py:79        request_debug()] - b''
dashbard      | [2016-12-15 04:23:44,952] DEBUG [resources.index] [utils.py:80        request_debug()] - None
dashbard      | [2016-12-15 04:23:44,953] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | [2016-12-15 04:23:44,954] DEBUG [modules.cluster] [cluster.py:50                 list()] - List all released clusters
dashbard      | [2016-12-15 04:23:44,954] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | [2016-12-15 04:23:44,954] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /index HTTP/1.0"" 200 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/css/bootstrap.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/css/dashboard.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/js/jquery-2.2.3.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/css/paginate.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/css/dataTables.bootstrap.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/js/script.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/css/jquery.dataTables.min.css HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/js/bootbox.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/js/bootstrap-notify.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:44] ""GET /static/js/bootstrap.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/tether.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/validator.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/highcharts.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/ie10-viewport-bug-workaround.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/solid-gauge.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/highcharts-more.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/jquery.dataTables.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/js/dataTables.bootstrap.min.js HTTP/1.0"" 304 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:45] ""GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.0"" 304 -
dashbard      | [2016-12-15 04:23:47,944] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa4af113a900112d5cf4
dashbard      | [2016-12-15 04:23:47,950] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa4af113a900112d5cf4
dashbard      | [2016-12-15 04:23:48,407] DEBUG [resources.cluster_view] [utils.py:71        request_debug()] - path=/view/clusters, method=GET
dashbard      | [2016-12-15 04:23:48,407] DEBUG [resources.cluster_view] [utils.py:72        request_debug()] - request args:
dashbard      | [2016-12-15 04:23:48,407] DEBUG [resources.cluster_view] [utils.py:74        request_debug()] - Arg: type:active
dashbard      | [2016-12-15 04:23:48,407] DEBUG [resources.cluster_view] [utils.py:75        request_debug()] - request form:
dashbard      | [2016-12-15 04:23:48,408] DEBUG [resources.cluster_view] [utils.py:78        request_debug()] - request raw body data:
dashbard      | [2016-12-15 04:23:48,408] DEBUG [resources.cluster_view] [utils.py:79        request_debug()] - b''
dashbard      | [2016-12-15 04:23:48,408] DEBUG [resources.cluster_view] [utils.py:80        request_debug()] - None
dashbard      | [2016-12-15 04:23:48,408] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:48] ""GET /view/clusters?type=active HTTP/1.0"" 200 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:48] ""GET /static/images/sort_both.png HTTP/1.0"" 404 -
dashbard      | 172.19.0.4 - - [15/Dec/2016 04:23:48] ""GET /static/images/sort_asc.png HTTP/1.0"" 404 -
watchdog      | [2016-12-15 04:23:56,925] INFO [__main__] [watchdog.py:118            watch_run()] - Watchdog run checks with period = 15 s
watchdog      | [2016-12-15 04:23:56,926] INFO [__main__] [watchdog.py:120            watch_run()] - Found 1 hosts
watchdog      | [2016-12-15 04:23:56,934] DEBUG [__main__] [watchdog.py:102           host_check()] - Host host_surya/585164ccf113a9000b4466cf is active, start checking
watchdog      | [2016-12-15 04:23:56,934] DEBUG [__main__] [watchdog.py:66    host_check_chains()] - Host host_surya/585164ccf113a9000b4466cf: checking chains
watchdog      | [2016-12-15 04:23:56,934] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
watchdog      | [2016-12-15 04:23:56,935] DEBUG [__main__] [watchdog.py:29   chain_check_health()] - Chain test_chain_3/5851aa4af113a900112d5cf4: checking health
watchdog      | [2016-12-15 04:23:56,935] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:23:56,939] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:01,944] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:01,949] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:06,955] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:06,964] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:11,970] WARNING [__main__] [watchdog.py:50   chain_check_health()] - Chain test_chain_3/5851aa4af113a900112d5cf4 is unhealthy!
watchdog      | [2016-12-15 04:24:11,971] INFO [__main__] [watchdog.py:54   chain_check_health()] - Resetting free unhealthy chain test_chain_3/5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:11,971] DEBUG [modules.cluster] [cluster.py:475       reset_free_one()] - Try reseting cluster 5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:11,971] DEBUG [modules.cluster] [cluster.py:451                reset()] - Run recreate_work in background thread
watchdog      | [2016-12-15 04:24:11,971] DEBUG [modules.cluster] [cluster.py:208               delete()] - Delete cluster: id=5851aa4af113a900112d5cf4, forced=True
watchdog      | [2016-12-15 04:24:11,972] DEBUG [modules.host] [host.py:318 get_active_host_by_id()] - check host with id = 585164ccf113a9000b4466cf
watchdog      | [2016-12-15 04:24:11,972] DEBUG [agent.docker_swarm] [docker_swarm.py:544         compose_down()] - Compose remove 5851aa4af113a900112d5cf4 with daemon_url=tcp://9.42.137.193:2375, consensus=pbft
Stopping 5851aa4af113a900112d5cf4_vp0 ... done
Stopping 5851aa4af113a900112d5cf4_vp3 ... done
Stopping 5851aa4af113a900112d5cf4_vp1 ... done
Stopping 5851aa4af113a900112d5cf4_vp2 ... done
Removing 5851aa4af113a900112d5cf4_vp0 ... done
Removing 5851aa4af113a900112d5cf4_vp3 ... done
Removing 5851aa4af113a900112d5cf4_vp1 ... done
Removing 5851aa4af113a900112d5cf4_vp2 ... done
[2016-12-15 04:24:14,524] DEBUG [agent.docker_swarm] [docker_swarm.py:58 _clean_project_containers()] - Clean project containers, daemon_url=tcp://9.42.137.193:2375, prefix=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:14,538] DEBUG [agent.docker_swarm] [docker_swarm.py:35 _clean_chaincode_images()] - clean chaincode images with prefix=5851aa4af113a900112d5cf4
watchdog      | [2016-12-15 04:24:14,628] INFO [modules.cluster] [cluster.py:93               create()] - Create cluster test_chain_3, host_id=585164ccf113a9000b4466cf, consensus=pbft/batch, size=4
watchdog      | [2016-12-15 04:24:14,628] DEBUG [modules.host] [host.py:318 get_active_host_by_id()] - check host with id = 585164ccf113a9000b4466cf
watchdog      | [2016-12-15 04:24:14,628] DEBUG [modules.cluster] [cluster.py:104               create()] - daemon_url=tcp://9.42.137.193:2375
watchdog      | [2016-12-15 04:24:14,629] DEBUG [modules.cluster] [cluster.py:156               create()] - Start compose project with name=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:14,629] DEBUG [agent.docker_swarm] [docker_swarm.py:355           compose_up()] - Compose start: name=5851aa6e0009110001f87777, host=host_surya, mapped_port={'event': 7053, 'tcaa': 7057, 'grpc': 7051, 'ecaa': 7055, 'ecap': 7054, 'tlscaa': 7059, 'cli': 7052, 'tcap': 7056, 'rest': 7050, 'tlscap': 7058}, consensus=pbft/batch,size=4
watchdog      | [2016-12-15 04:24:19,519] DEBUG [agent.docker_swarm] [docker_swarm.py:376           compose_up()] - compose started with containers={'5851aa6e0009110001f87777_vp1': 'a29713158ef2ae077e17fcf0e1e6dc4603e8968bcc14e04d05a15df21380cc78', '5851aa6e0009110001f87777_vp2': 'c4a2feb6455a404bcd8f91ea3b12770939af51f8e8c6de2ebac29aa3aad5811e', '5851aa6e0009110001f87777_vp0': 'dba6108848498130c8d2860c31b2dd53a42d4b6e4f5e51563336d8e75cab1f2e', '5851aa6e0009110001f87777_vp3': 'a1a2d73214db330b873c2ef3211ab102f7866853a8cdb042e3f1b98a68e79a43'}
watchdog      | [2016-12-15 04:24:19,520] DEBUG [modules.cluster] [cluster.py:526      _get_service_ip()] - single host, ip = 9.42.137.193
watchdog      | [2016-12-15 04:24:19,520] DEBUG [modules.cluster] [cluster.py:526      _get_service_ip()] - single host, ip = 9.42.137.193
watchdog      | [2016-12-15 04:24:19,521] INFO [modules.cluster] [cluster.py:195               create()] - Create cluster OK, id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:24,526] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:24,535] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:29,953] INFO [__main__] [watchdog.py:118            watch_run()] - Watchdog run checks with period = 15 s
watchdog      | [2016-12-15 04:24:29,953] INFO [__main__] [watchdog.py:120            watch_run()] - Found 1 hosts
watchdog      | [2016-12-15 04:24:29,962] DEBUG [__main__] [watchdog.py:102           host_check()] - Host host_surya/585164ccf113a9000b4466cf is active, start checking
watchdog      | [2016-12-15 04:24:29,962] DEBUG [__main__] [watchdog.py:66    host_check_chains()] - Host host_surya/585164ccf113a9000b4466cf: checking chains
watchdog      | [2016-12-15 04:24:29,963] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
watchdog      | [2016-12-15 04:24:29,963] DEBUG [__main__] [watchdog.py:29   chain_check_health()] - Chain test_chain_3/5851aa6e0009110001f87777: checking health
watchdog      | [2016-12-15 04:24:29,963] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:29,967] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:34,973] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:34,978] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:39,984] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:39,988] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:44,992] WARNING [__main__] [watchdog.py:50   chain_check_health()] - Chain test_chain_3/5851aa6e0009110001f87777 is unhealthy!
watchdog      | [2016-12-15 04:24:44,993] INFO [__main__] [watchdog.py:54   chain_check_health()] - Resetting free unhealthy chain test_chain_3/5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:44,993] DEBUG [modules.cluster] [cluster.py:475       reset_free_one()] - Try reseting cluster 5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:44,993] DEBUG [modules.cluster] [cluster.py:451                reset()] - Run recreate_work in background thread
watchdog      | [2016-12-15 04:24:44,993] DEBUG [modules.cluster] [cluster.py:208               delete()] - Delete cluster: id=5851aa6e0009110001f87777, forced=True
watchdog      | [2016-12-15 04:24:44,994] DEBUG [modules.host] [host.py:318 get_active_host_by_id()] - check host with id = 585164ccf113a9000b4466cf
watchdog      | [2016-12-15 04:24:44,994] DEBUG [agent.docker_swarm] [docker_swarm.py:544         compose_down()] - Compose remove 5851aa6e0009110001f87777 with daemon_url=tcp://9.42.137.193:2375, consensus=pbft
Stopping 5851aa6e0009110001f87777_vp2 ... done
Stopping 5851aa6e0009110001f87777_vp3 ... done
Stopping 5851aa6e0009110001f87777_vp0 ... done
Stopping 5851aa6e0009110001f87777_vp1 ... done
Removing 5851aa6e0009110001f87777_vp2 ... done
Removing 5851aa6e0009110001f87777_vp3 ... done
Removing 5851aa6e0009110001f87777_vp0 ... done
Removing 5851aa6e0009110001f87777_vp1 ... done
[2016-12-15 04:24:47,710] DEBUG [agent.docker_swarm] [docker_swarm.py:58 _clean_project_containers()] - Clean project containers, daemon_url=tcp://9.42.137.193:2375, prefix=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:47,715] DEBUG [agent.docker_swarm] [docker_swarm.py:35 _clean_chaincode_images()] - clean chaincode images with prefix=5851aa6e0009110001f87777
watchdog      | [2016-12-15 04:24:47,797] INFO [modules.cluster] [cluster.py:93               create()] - Create cluster test_chain_3, host_id=585164ccf113a9000b4466cf, consensus=pbft/batch, size=4
watchdog      | [2016-12-15 04:24:47,797] DEBUG [modules.host] [host.py:318 get_active_host_by_id()] - check host with id = 585164ccf113a9000b4466cf
watchdog      | [2016-12-15 04:24:47,797] DEBUG [modules.cluster] [cluster.py:104               create()] - daemon_url=tcp://9.42.137.193:2375
watchdog      | [2016-12-15 04:24:47,798] DEBUG [modules.cluster] [cluster.py:156               create()] - Start compose project with name=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:24:47,798] DEBUG [agent.docker_swarm] [docker_swarm.py:355           compose_up()] - Compose start: name=5851aa8f0009110001f87778, host=host_surya, mapped_port={'event': 7053, 'tcaa': 7057, 'grpc': 7051, 'ecaa': 7055, 'ecap': 7054, 'tlscaa': 7059, 'cli': 7052, 'tcap': 7056, 'rest': 7050, 'tlscap': 7058}, consensus=pbft/batch,size=4
watchdog      | [2016-12-15 04:24:52,684] DEBUG [agent.docker_swarm] [docker_swarm.py:376           compose_up()] - compose started with containers={'5851aa8f0009110001f87778_vp0': 'd1769d21c6df543ea4a36c833c110e10b0e60ad4fbf91ce8fb23a3b3e6a952af', '5851aa8f0009110001f87778_vp1': '4ae388a9c07b7348cacf4be8d3d16d47305adf973847454d3f4933831263ca5e', '5851aa8f0009110001f87778_vp3': '73c7b58b002a4956c64569e63fc9827148d37ea8180d717a064ea46ad1c5ce2c', '5851aa8f0009110001f87778_vp2': 'ddb95ced5e49ea456c8577c965cb274779f49516fdd8f42d0132c3b594ad215f'}
watchdog      | [2016-12-15 04:24:52,685] DEBUG [modules.cluster] [cluster.py:526      _get_service_ip()] - single host, ip = 9.42.137.193
watchdog      | [2016-12-15 04:24:52,685] DEBUG [modules.cluster] [cluster.py:526      _get_service_ip()] - single host, ip = 9.42.137.193
watchdog      | [2016-12-15 04:24:52,686] INFO [modules.cluster] [cluster.py:195               create()] - Create cluster OK, id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:24:57,691] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:24:57,695] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:02,972] INFO [__main__] [watchdog.py:118            watch_run()] - Watchdog run checks with period = 15 s
watchdog      | [2016-12-15 04:25:02,973] INFO [__main__] [watchdog.py:120            watch_run()] - Found 1 hosts
watchdog      | [2016-12-15 04:25:02,980] DEBUG [__main__] [watchdog.py:102           host_check()] - Host host_surya/585164ccf113a9000b4466cf is active, start checking
watchdog      | [2016-12-15 04:25:02,981] DEBUG [__main__] [watchdog.py:66    host_check_chains()] - Host host_surya/585164ccf113a9000b4466cf: checking chains
watchdog      | [2016-12-15 04:25:02,981] DEBUG [modules.cluster] [cluster.py:46                 list()] - List all active clusters
watchdog      | [2016-12-15 04:25:02,981] DEBUG [__main__] [watchdog.py:29   chain_check_health()] - Chain test_chain_3/5851aa8f0009110001f87778: checking health
watchdog      | [2016-12-15 04:25:02,982] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:02,985] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:07,988] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:07,998] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:13,005] DEBUG [modules.cluster] [cluster.py:581       refresh_health()] - checking health of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:13,015] DEBUG [modules.cluster] [cluster.py:607       refresh_health()] - checking result of cluster id=5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:18,021] WARNING [__main__] [watchdog.py:50   chain_check_health()] - Chain test_chain_3/5851aa8f0009110001f87778 is unhealthy!
watchdog      | [2016-12-15 04:25:18,022] INFO [__main__] [watchdog.py:54   chain_check_health()] - Resetting free unhealthy chain test_chain_3/5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:18,022] DEBUG [modules.cluster] [cluster.py:475       reset_free_one()] - Try reseting cluster 5851aa8f0009110001f87778
watchdog      | [2016-12-15 04:25:18,023] DEBUG [modules.cluster] [cluster.py:451                reset()] - Run recreate_work in background thread
watchdog      | [2016-12-15 04:25:18,023] DEBUG [modules.cluster] [cluster.py:208               delete()] - Delete cluster: id=5851aa8f0009110001f87778, forced=True
watchdog      | [2016-12-15 04:25:18,024] DEBUG [modules.host] [host.py:318 get_active_host_by_id()] - check host with id = 585164ccf113a9000b4466cf
watchdog      | [2016-12-15 04:25:18,024] DEBUG [agent.docker_swarm] [docker_swarm.py:544         compose_down()] - Compose remove 5851aa8f0009110001f87778 with daemon_url=tcp://9.42.137.193:2375, consensus=pbft
Stopping 5851aa8f0009110001f87778_vp0 ... done
Stopping 5851aa8f0009110001f87778_vp2 ... done
Stopping 5851aa8f0009110001f87778_vp1 ... done
Stopping 5851aa8f0009110001f87778_vp3 ... done
Removing 5851aa8f0009110001f87778_vp0 ... done
{code}

h4. 5. Limitations:

# in its current state, the only customizable options for the deployed chaincode are 1) Number of peers(4 or 6), and 2) Consensus type (NOOP or pBFT)
# in its current state, every chain created must reside on a single worker node, i.e all Peer containers reside in the single worker node. There is no way to spread out the Peers of a single chain over multiple workers. 


  ;;;","20/Dec/16 6:55 AM;AdnanChoudhury;After reiewing, Chef was chosen as the tool to move forward with, because of the flexibility and the potential re-use of existing code from
https://github.ibm.com/IBM-Blockchain/blockchain-chef

The Chef jira is here:
https://jira.hyperledger.org/browse/FAB-1431
 ;;;","20/Dec/16 6:58 AM;AdnanChoudhury;Chef was chosen as the tool to move forward.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Research / draft Hyperledger Fabric 1.0 Readme/Overview,FAB-1342,13749,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joshhus,joshhus,joshhus,10/Dec/16 5:25 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 12:52 AM,,,,,fabric-quality,,,,0,,,,,,,,,"Write first draft of a 3-5 page overview of Hyperledger Fabric 1.0 - key features, ""differentiators"", explained at a mid - high level. ",,inatatsu,ishihara.shun,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115200,86400,,0%,115200,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Dec/16 9:02 AM;joshhus;FabricOverview_draft1.md;https://jira.hyperledger.org/secure/attachment/10363/FabricOverview_draft1.md","31/Dec/16 9:01 AM;joshhus;FabricOverview_draft1.pdf;https://jira.hyperledger.org/secure/attachment/10362/FabricOverview_draft1.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7v3:",,,,,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,,,,,,,,,,,,,,,,,,,,,,,inatatsu,ishihara.shun,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Dec/16 5:03 AM;joshhus;12/12 update - About 1/3 done with first draft. Looks like total will be 5 pages or so. ... Completed draft can be posted on ""Box"" this week, for review and comments, unless there's a preferred alternative. jh;;;","15/Dec/16 4:16 AM;joshhus;12/14 update - About 1/2 done with first draft, of 4-6 pages. For a complete v1.0 overview document, all 10 design documents have to be interpreted and summarized, at a mid to high level, from https://wiki.hyperledger.org/community/fabric-design-docs ;;;","17/Dec/16 6:01 AM;joshhus;1. Read/studied and notated all 9/10 component designs at: https://wiki.hyperledger.org/community/fabric-design-docs (design for block query appears to have been removed last week).
2. Drafted first-draft quality summaries for 4-5 subsections, of 10-11 subsections (9/10 design functional summaries, plus intro, plus a comparative of HL v1.0 vs. alternatives). Using a what it is and why it matters format for each subsection/design/component.
;;;","17/Dec/16 6:03 AM;joshhus;Completing first-draft quality doc that is worth the time and efforts of busy reviewers will require another week. Initial sizing incorrect. ;;;","31/Dec/16 12:22 AM;joshhus;Finishing up first draft today. Will attach copy for review. 

Let's open a new issue for Sprint 9 for ""Draft 2 ..."" ;;;","31/Dec/16 6:56 AM;joshhus;Still working. Will post the draft in order to close this first draft issue. Some topics are in still in progress, as indicated in the copy.;;;","31/Dec/16 9:01 AM;joshhus;A mostly complete first draft / ready for review and input is attached. 9 pages. 
To-dos are noted where applicable by (Ed. note: comment).
Work to do on this for draft 2 / Sprint 9 / Create new issue.
Draft 1 attached, in .md and .pdf.





;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
use a native golib for getting java chaincode ,FAB-1345,13752,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,satheeshk,muralisr,muralisr,10/Dec/16 10:10 PM,01/May/19 8:09 PM,28/Oct/23 2:58 AM,01/May/19 8:09 PM,,,Future,,fabric-peer,,,,0,,,,,,,,,"from [~ghaskins]  in https://gerrit.hyperledger.org/r/#/c/1927/ 
_I am not sure cloning a git repo vs say, pure HTTP is a good idea.  However, if people felt strongly that this is a good feature, I would advise _against_ using os.exec() and rather use a native go library (e.g. https://github.com/src-d/go-git)_

This is also applicable to go chaincodes. We could investigate the approach following a successful implementation of Java",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfpr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"as a potential Fabric application developer, I want to have up-to-date documentation while v1.0 is under development",FAB-1346,13753,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,11/Dec/16 12:00 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,13/Apr/17 12:54 AM,,,v1.0.0,WON'T FIX,,,,,0,Documentation,,,,,,,,"as a potential Fabric application developer, I want to have up-to-date documentation while v1.0 is under development. Specifically, I want to be directed to v0.6 if I am looking for stable operational platform, and I want to have documentation about how to use the v1.0 Fabric as it is being developed.",,ChristopherFerris,ishihara.shun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfpz:",,,,Unset,,Sprint 7 - Quality,,,,,,,,,,,,,2.0,Unset,,,,,,,,,,,ChristopherFerris,ishihara.shun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Apr/17 12:54 AM;ChristopherFerris;this was a colossal failure;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reject endorsements that contain conflicting actions,FAB-1348,13755,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,11/Dec/16 4:11 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,22/Apr/17 2:59 AM,,,,,fabric-peer,,,,0,,,,,,,,,"When a committer receives a transaction that contains conflicting endorsements, we should consider dropping it before it reaches VSCC. If we determine that this is not necessary because VSCC should do it, we should ensure that VSCC expressly checks for this condition (and add unit tests that verify this fact).",,ales,ChristopherFerris,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-187,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-37,,,,,,,,,"1|hzxfq7:",,,,Unset,,Sprint 16 - Crypto,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,ChristopherFerris,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 9:59 PM;ChristopherFerris;very confused about this. It blocks an issue that is Done? ;;;","22/Apr/17 2:58 AM;Clayton Sims;In today's scrum this was complete.  ;;;","22/Apr/17 2:59 AM;Clayton Sims;marking complete.  if this is not correct, please adjust accordingly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enforce restrictions on acceptable chain IDs,FAB-1349,13756,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,11/Dec/16 5:29 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,04/Feb/17 11:46 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"This is motivated by the fact that Kafka imposes restrictions on the allowed topic names:
https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/common/Topic.scala#L29

Regardless of that, we should adopt similar restrictions.

Ideally, these will be a superset of the Kafka restriction set so that we don't have to add any extra code for the Kafka consenter case.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6ef:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jan/17 2:04 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4935/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
retrieveBlockByNumber should validate blocknumber before search,FAB-1350,13757,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,muralisr,muralisr,11/Dec/16 5:55 AM,23/Jan/20 3:44 AM,28/Oct/23 2:58 AM,23/Jan/20 3:44 AM,,,Future,,fabric-ledger,,,,0,stale-item,,,,,,,,"Per [~manish-sethi] comment in https://gerrit.hyperledger.org/r/#/c/3169

{quote}can you add a general error check that the block number requested is lower than the highest available block. This is not specific to getLastBlock but somehow just noticed this now.{quote}",,denyeart,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfqf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/16 4:47 PM;denyeart;[~manish-sethi] If you ask for a block number that exceeds chain height, you already do get a ""Entry not found in index"" error.  We could certainly make that error text more descriptive, but are you simply wanting to pre-validate and return a similar error sooner?;;;","23/Jan/20 3:44 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update broadcast_config sample client so that it posts appropriate config for Kafka consenter,FAB-1351,13758,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,11/Dec/16 2:15 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,20/Dec/16 1:32 PM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"As things stand right now, the config it posts only works for solo. The client should have an extra flag that allows us to specify the consenter type, and then, by using the provisional bootstrapper, it should create the appropriate config.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfqn:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/16 12:29 PM;kchristidis;https://gerrit.hyperledger.org/r/3361;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add time-based block cutting to Kafka consenter,FAB-1352,13759,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,11/Dec/16 5:16 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,15/Jan/17 1:23 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"In the version that was rebased on top of the common components, this option was kept out in order to minimize the complexity of the changeset. The deliverable of this story is a Kafka consenter that respects the BatchTimeout config option.

",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfqv:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Dec/16 12:22 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3517/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor GossipStateProvider API.,FAB-1354,13761,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,C0rWin,C0rWin,C0rWin,11/Dec/16 11:49 PM,15/May/19 9:49 PM,28/Oct/23 2:58 AM,15/May/19 9:49 PM,,,Future,,fabric-gossip,,,,0,gossip,gossip_component,,,,,,,"Currently GossipStateProvider expose following APIs

{code}
type GossipStateProvider interface {

	// Retrieve block with sequence number equal to index
	GetBlock(index uint64) *common.Block

	AddPayload(payload *proto.Payload) error

	// Stop terminates state transfer object
	Stop()
}
{code}

Where method 
{code}
AddPayload(payload *proto.Payload) error
{code}

is used to populate local state with new block arrived, while AddPayload is not very descriptive name, moreover it enforce following usage during submission:

{code}
	payload := createPayload(seqNum, block)
	// Use payload to create gossip message
	gossipMsg := createGossipMsg(payload)

	// Add payload to local state payloads buffer
	state.AddPayload(payload)
{code}

meaning creating gossiping payload and gossip message, while it's much cleaner to simply submit new block in following way:

{code}
	payload := createPayload(seqNum, block)
	// Use payload to create gossip message
	gossipMsg := createGossipMsg(payload)

			// Add payload to local state payloads buffer
			state.AddPayload(block)
{code}

Therefore interface should be refactored into:

{code}
type GossipStateProvider interface {

	// Retrieve block with sequence number equal to index
	GetBlock(index uint64) *common.Block

	SubmitBlock(block *common.Block) error

	// Stop terminates state transfer object
	Stop()
}
{code}

And also need to make sure GossipService interface will be aligned and will look as following:

{code}
// GossipService encapsulates gossip and state capabilities into single interface
type GossipService interface {
	gossip.Gossip

	// JoinChannel joins new chain given the configuration block and initialized committer service
	JoinChannel(committer committer.Committer, block *common.Block) error
	// GetBlock returns block for given chain
	GetBlock(chainID string, index uint64) *common.Block
	// SubmitBlock submit block into local ledger
	SubmitBlock(chainID string, block *common.Block) error
}
{code}",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx713:",,,,Unset,,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make sure gossip join channel will use utilities from CR 2697,FAB-1355,13762,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,12/Dec/16 12:25 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,16/Dec/16 2:09 AM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"In CR 2697 introduced new functionality to extract chain id from configuration block, need to make sure to switching using it, once it get merged. This item created to track comment from 3175.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzxfr3:",,,,Unset,,Sprint 7 - Gossip,,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor gossip and gossip service external API,FAB-1356,13763,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,C0rWin,C0rWin,12/Dec/16 8:09 AM,23/Jan/20 3:44 AM,28/Oct/23 2:58 AM,23/Jan/20 3:44 AM,,,Future,,fabric-gossip,,,,0,gossip,stale-item,,,,,,,"Currently gossip interface is defined as follows

{code}

// Gossip is the interface of the gossip component
type Gossip interface {

	// GetPeers returns a mapping of endpoint --> []discovery.NetworkMember
	GetPeers() []discovery.NetworkMember

	// UpdateMetadata updates the self metadata of the discovery layer
	UpdateMetadata([]byte)

	// Gossip sends a message to other peers to the network
	Gossip(msg *proto.GossipMessage)

	// Accept returns a channel that outputs messages from other peers
	Accept(common.MessageAcceptor) <-chan *proto.GossipMessage

	// Stop stops the gossip component
	Stop()
}
{code}

Whereas functions

{code}
	// GetPeers returns a mapping of endpoint --> []discovery.NetworkMember
	GetPeers() []discovery.NetworkMember

	// UpdateMetadata updates the self metadata of the discovery layer
	UpdateMetadata([]byte)
{code}

Doesn't really relate to the message dissemination, therefore current gossip interface should be abstracted out in two separate interfaces:

1. Broadcast/Gossiping taking care of message delivery and reception. 
2. Discovery/Metadata managing current gossip view of available nodes/peers.

Moreover GossipService interface currently aligned with Gossip above and serves as adaptor for initialized gossip instance and encapsulates also state management. Because one of the goals for GossipService interface is to expose capabilities of disseminating messages externally, the interface which takes care of messaging and communication should be refactored to decouple the API from protobuf defined messages. 

{code}
// GossipService encapsulates gossip and state capabilities into single interface
type GossipService interface {
	gossip.Gossip

	// JoinChannel joins new chain given the configuration block and initialized committer service
	JoinChannel(committer committer.Committer, block *common.Block) error
	// GetBlock returns block for given chain
	GetBlock(chainID string, index uint64) *common.Block
	// AddPayload appends message payload to for given chain
	AddPayload(chainID string, payload *proto.Payload) error
}
{code}
 
and signature of Gossip method is

{code}
         Gossip(msg *proto.GossipMessage)
{code}

Now it should be refactored to generalize usage of gossip API and not to bound it with proto.GossipMessage.",,C0rWin,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx71b:",,,,Unset,,Sprint 7 - Gossip,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/16 4:14 PM;yacovm;I think that before we jump to do *any* work on this topic we should first agree and on the contract between the peer and the gossip, and *list* exactly what capabilities this API should expose:

* Which component in the peer (if there is such) needs to update metadata and why?
* Which component in the peer (if there is such) needs to Gossip a message and to who? What are the characteristics of the messages? Are they ""immutable""? Are they ""mutable""? Can they expire? etc. etc. Without this we *cannot* ensure optimal dissemination, if at all.
* GetPeers - Which component in the peer needs this functionality? Is it interested in all the peers of the peer's own organization? of a specific channel? 

I also fail to see the reasoning behind the breakdown of the interface into 2 different interfaces, when we only have 1 implementation of gossip that provides both of them and this will be the situation for good, since the gossip instance inside the peer was required to be a singleton. What do we gain from the separation? ;;;","12/Dec/16 9:34 PM;C0rWin;I've created this item, exactly for that purpose so we will have ground for discussion. It was not created with intent to immediate action. ;;;","23/Jan/20 3:44 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
introduced version into the chaincode context in preparation for upgrade processing,FAB-1357,13764,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,12/Dec/16 1:49 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,22/Dec/16 5:58 AM,,,,,fabric-peer,,,,0,,,,,,,,,"Chaincode started with Chainname  as part of the per-Proposal context. With multichains, we added ""chain"" to the context. We also need other structures such as a the Proposal object itself. 

In addition to adding the version to the context, the task also needs to reorganize the strucutre holding the context so we don't have to pass many arguments to the chaincode framework functions. ",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1318,FAB-183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxfrb:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert all batchSize refs to the uint32 type,FAB-1358,13765,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 1:55 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 7:35 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,Address the mismatch between the batchSize type as expressed in the localconfig package versus the sharedconfig package and the orderer configuration proto.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfrj:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:25 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3189/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Drop custom flag support for Kafka orderer,FAB-1359,13766,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 1:57 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 7:34 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"As we are slowly moving to a setup where the behavior of the orderer is controlled by the config options captured in the genesis block and the orderer YAML file (and their overrides via ENV vars), it's time to drop the flag support that the Kafka orderer provided.

* Remove all flags from the Kafka orderer.
* Add a ""verbose"" option to the YAML file to control logging for the package that we use to interact with the Kafka cluster (sarama).",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfrr:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:25 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3191/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce ChainPartition construct for Kafka,FAB-1360,13767,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 1:59 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 7:35 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,The ChainPartition construct will be used to identify the Kafka topic/partition that the ordering shims should interact with when dealing with a particular chain.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfrz:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:28 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3193/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move partitioner-related functions to own file,FAB-1361,13768,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:02 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 7:35 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfs7:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:27 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3195/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add KafkaBrokers to shared config,FAB-1362,13769,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:04 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 7:35 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,The list of Kafka brokers used for ordering needs to be shared across the shims (ordering service nodes).,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfsf:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:24 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3197/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move ChainID method to ConsenterSupport,FAB-1363,13770,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:07 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Dec/16 7:35 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"What necessitates this move is that the Kafka multichain.Chain object returned/expected by HandleChain(), needs to be able to allocate the resources necessary to keep up with its respective chain when the Start() method is invoked by the multichain manager, as the contract of the Chain interface (defined in chainsupport.go) dictates.

Keeping up with the respective chain means that the Kafka multichain.Chain object needs to bring up a producer/consumer that connects to the corresponding chain partition, so it needs to know the chain ID. The only object passed to us during the HandleChain call is an object of type multichain.ConsenterSupport. Therefore, this interface needs to be extended with the ChainID() method.

I've noted the need for this during my review of this changeset:
https://gerrit.hyperledger.org/r/#/c/2763/ (skip to the comment timestamped 11-27 18:52, and its follow-up comment)

If you want to see how this will look in action for the Kafka consenter (coming in a follow-up changeset), please see:
https://github.com/kchristidis/fabric/blob/47752ed61fcab1b26207a9e9075c1c793d723912/orderer/kafka/main.go#L128
https://github.com/kchristidis/fabric/blob/47752ed61fcab1b26207a9e9075c1c793d723912/orderer/kafka/main.go#L143",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfsn:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:27 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3199/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace static bootstrapper with provisional one,FAB-1364,13771,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:09 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Dec/16 7:46 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"All consenters read several of their config settings (think sharedconfig) from the genesis block that is generated by a bootstrapper. The only bootstrapper available so far is the static one. However, when testing we need to be able to modify several of these config values on the fly.

Therefore the bootstrapper should be able to read a config object (which is itself created by reading the orderer.yaml file and -if set- its associated ENV vars).

An example of that would be the KafkaBrokers value. For unit tests the ""right"" value is ""127.0.0.1:9092"", whereas for the current Docker Compose-based BDD tests the right value is ""kafka0:9092"".

Since this bootstrapper is no longer static, renaming the package seems appropriate.

For production we will need to introduce file-based bootstrapper that reads the genesis block created by the genesis block tool.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfsv:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,2.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:27 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3201/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce Kafka-specific container message types,FAB-1365,13772,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:11 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Dec/16 2:47 PM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"The revised Kafka consenter needs two special messages:

# A time-to-cut message that is used to mark the end of a block, and
# A no-op message that each shim posts when bootstrapped by the multichain manager to prevent the possibility of ""listening in"" (seeking and consuming) on a topic/partition that nobody has posted to yet [1]. This is an operation that panics in Kafka: ""[ERROR] Cannot retrieve required offset from Kafka cluster: kafka server: The request attempted to perform an operation on an invalid topic.""

These messages are special because they don't carry transactions, and because the Kafka consenter will treat them in a special way: it will ignore every time-to-cut message (for a specific block number) besides the first one, and it will ignore all ""no-op"" messages when processing incoming messages from the chain partition.

A preview of these in action can be found here:
https://github.com/kchristidis/fabric/blob/47752ed61fcab1b26207a9e9075c1c793d723912/orderer/kafka/main.go#L142
https://github.com/kchristidis/fabric/blob/47752ed61fcab1b26207a9e9075c1c793d723912/orderer/kafka/main.go#L164
https://github.com/kchristidis/fabric/blob/47752ed61fcab1b26207a9e9075c1c793d723912/orderer/kafka/main.go#L204",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxft3:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:26 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3203/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Docker Compose files for Kafka consenter,FAB-1366,13773,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:13 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Dec/16 2:47 PM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"We should either list only those ENV vars where we need to modify the default values, or list all possible ENV vars to allow for easy editing later on. The Docker Compose files in their present form adopt a middle-ground solution: list only some ENV vars, and have several of them set to the default values.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxftb:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:26 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3205/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rebase Kafka consenter on common components,FAB-1367,13774,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,12/Dec/16 2:15 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,16/Dec/16 2:46 PM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxftj:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Dec/16 2:26 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3207/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable golang 1.7,FAB-1368,13775,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,baohua,baohua,baohua,12/Dec/16 4:17 PM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,06/Jan/17 12:36 AM,,,v1.0.0,,fabric-orderer,fabric-peer,,,0,,,,,,,,,"The issue has been reported in #129, #289 and #1031, but it is not finished yet.

The golang:1.6 is still utilized in below places:

1) Existing travis ci;
2) Existing chaincode examples of asset_management02 and asset_management_with_roles.

Should fix to upgrade to 1.7.",,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,FAB-129,FAB-289,FAB-1031,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxftr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,baohua,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create bddtests/regression/ directory structure in v1.0,FAB-1369,13776,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,12/Dec/16 11:35 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,23/Dec/16 3:03 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"https://gerrit.hyperledger.org/r/#/c/2205/ was created for v0.6.
Put it all directly into v1.0 instead.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx85j:",,,,,,Sprint 8 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add orderer/peer binaries to fabric-testenv,FAB-1370,13777,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,13/Dec/16 12:37 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Jan/17 2:33 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"The official orderer and peer images have been stripped to a bare minimum. Add orderer and peer binaries to the hyperledger/fabric-testenv image to be used as a base for running bddtests.
",,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxftz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/16 3:49 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3261/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip pull snapshot consolidation,FAB-1371,13778,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,yacovm,yacovm,13/Dec/16 12:37 AM,23/Jan/20 3:44 AM,28/Oct/23 2:58 AM,23/Jan/20 3:44 AM,,,Future,,fabric-gossip,,,,0,gossip,stale-item,,,,,,,"In Gossip we have 2 types of entities that are sent around:
1) Entities that never change after their creation, like blocks and certificates
2) Entities that change with time, like AliveMessages (contain timestamp, that changes on a timely basis) and StateInfo (contains both timestamp and metadata what encapsulate block sequence number that change)

I did some work to generalize the pull mechanism for type-I entities:
https://jira.hyperledger.org/browse/FAB-1292
https://gerrit.hyperledger.org/r/#/c/3023/

I think it's a good idea to consolidate the mechanism that are used for type-II entities into a single mechanism.

Basically the mechanism is very simple and roughly goes like this:
A peer selects periodically a set of remote peers and sends them a request for a snapshot of all their known entities. 
It gets back a full snapshot of all entities.

Note: any work should *not* be started on this until multi-channel support in gossip is finished, as it touches the same files.",,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx6zr:",,,,Unset,,Sprint 8 - Gossip,Sprint 9 - Gossip,Sprint 10 - Gossip,,,,,,,,,,,,Unset,,,,,,,,,,,sykesm,yacovm,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:44 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle HSM when setting up TLS authentication between orderer and Kafka,FAB-1373,13780,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,tuand,tuand,13/Dec/16 3:57 AM,23/Jan/20 3:45 AM,28/Oct/23 2:58 AM,23/Jan/20 3:45 AM,,,,,,,,,0,consensus,stale-item,,,,,,,"Part of an orderer's bootstrap configuration is the certificate and private key to be used by the orderer for TLS authentication between it and Kafka.

Normally, the private key is stored in a file that is passed in to the orderer.

We need to see what to do for HSM or other scheme where the private key is stored in hardware. ",,antoniovassell,sykesm,tuand,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-701,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-32,,,,,,,,,"1|hzxfu7:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,antoniovassell,sykesm,tuand,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:45 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove bd_counter sample client,FAB-1374,13781,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,13/Dec/16 5:07 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Dec/16 2:46 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"I wrote this while developing the Kafka orderer for testing. The existing sample clients (broadcast_timestamp and deliver_stdout) provide the same functionality and in a more modular, Unix-like way. Keeping the bd_counter around just increases maintenance burden.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfuf:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Dec/16 3:41 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3269/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add LDAP capability to docker network setup,FAB-1377,13784,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,13/Dec/16 8:12 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,22/Apr/17 3:06 AM,,,v1.0.0,,fabric-quality,,,,0,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx353:",,,,Unset,,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"implement a simple ""join"" command from CLI",FAB-1378,13785,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,13/Dec/16 9:58 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,07/Feb/17 6:52 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The fabric runs on the default chain TEST_CHAINID pending proper multichain integration. Orderer is brought up to recognize TEST_CHAINID and  ""peer node start""  starts up with TEST_CHAINID.

We will implement multichain support in two phases
# start up will not create default chain but will startup waiting for ""join"". ""join"" will invoke the CSCC with the supplied genesis block. The GB will point to TEST_CHAINID.
# the default TEST_CHAINID will be removed. A separate ""Create chain"" command needs to be invoked on the orderer before the above join can be called.

This Task will implement 1. ",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzx6br:",,,,,,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove windowing concept from the Deliver API,FAB-1382,13791,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,14/Dec/16 12:48 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,05/Jan/17 3:25 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"Per some performance testing feedback from [~bcbrock] it's much more efficient if we allow HTTP2/gRPC to handle the connection data windowing rather than attempting to implement it ourselves at a higher layer.

In order to remove windowing from deliver, there must be some other mechanism supplied to allow a client to retrieve a specific number of blocks.  This means that the Deliver API must also be enhanced to allow range specification.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfvz:",,,,Unset,,Sprint 7 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change ValidatedLedger API to conform with Committer Service flow.,FAB-1384,13793,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,14/Dec/16 1:45 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,16/Dec/16 12:37 AM,,,,,fabric-peer,,,,0,Endorser,,,,,,,,"Currently ValidateLedger API defined as

{code}
// ValidatedLedger represents the 'final ledger'. In addition to implement the methods inherited from the Ledger,
// it provides the handle to objects for querying the state and executing transactions.
type ValidatedLedger interface {
	Ledger
	// GetTransactionByID retrieves a transaction by id
	GetTransactionByID(txID string) (*pb.Transaction, error)
	// GetBlockByHash returns a block given it's hash
	GetBlockByHash(blockHash []byte) (*common.Block, error)
	// NewTxSimulator gives handle to a transaction simulator.
	// A client can obtain more than one 'TxSimulator's for parallel execution.
	// Any snapshoting/synchronization should be performed at the implementation level if required
	NewTxSimulator() (TxSimulator, error)
	// NewQueryExecuter gives handle to a query executer.
	// A client can obtain more than one 'QueryExecutor's for parallel execution.
	// Any synchronization should be performed at the implementation level if required
	NewQueryExecutor() (QueryExecutor, error)
	// RemoveInvalidTransactions validates all the transactions in the given block
	// and returns a block that contains only valid transactions and a list of transactions that are invalid
	RemoveInvalidTransactionsAndPrepare(block *common.Block) (*common.Block, []*pb.InvalidTransaction, error)
	// Commit commits the changes prepared in the method RemoveInvalidTransactionsAndPrepare.
	// Commits both the valid block and related state changes
	Commit() error
	// Rollback rollbacks the changes prepared in the method RemoveInvalidTransactionsAndPrepare
	Rollback()
}
{code}

Whereas according to the flow described in FAB-1038, ValidateLedger API has to be refactored and provide following method 
{code}
	Commit(block *common.Block) error
{code}
which will take care to commit the block and validate transactions with *MVCC*.

 !flows.png|thumbnail! 

Moreover there is no longer need in
{code}
	RemoveInvalidTransactionsAndPrepare(block *common.Block) (*common.Block, []*pb.InvalidTransaction, error)
	// Rollback rollbacks the changes prepared in the method RemoveInvalidTransactionsAndPrepare
	Rollback()
{code}

As {{RemoveInvalidTransactionsAndPrepare}} will be consolidated with new commit functionality and hence there is no longer need for {{Rollback}}.

Final version of ValidatedLedger API will look as follows:

{code}
// ValidatedLedger represents the 'final ledger'. In addition to implement the methods inherited from the Ledger,
// it provides the handle to objects for querying the state and executing transactions.
type ValidatedLedger interface {
	Ledger
	// GetTransactionByID retrieves a transaction by id
	GetTransactionByID(txID string) (*pb.Transaction, error)
	// GetBlockByHash returns a block given it's hash
	GetBlockByHash(blockHash []byte) (*common.Block, error)
	// NewTxSimulator gives handle to a transaction simulator.
	// A client can obtain more than one 'TxSimulator's for parallel execution.
	// Any snapshoting/synchronization should be performed at the implementation level if required
	NewTxSimulator() (TxSimulator, error)
	// NewQueryExecuter gives handle to a query executor.
	// A client can obtain more than one 'QueryExecutor's for parallel execution.
	// Any synchronization should be performed at the implementation level if required
	NewQueryExecutor() (QueryExecutor, error)
	// Commits block into the ledger
	Commit(block *common.Block) error
}
{code}

In order to accommodate the changes TxMgr API also need to be changed into: 
{code}
// TxMgr - an interface that a transaction manager should implement
type TxMgr interface {
	NewQueryExecutor() (ledger.QueryExecutor, error)
	NewTxSimulator() (ledger.TxSimulator, error)
	ValidateAndPrepare(block *common.Block, doMVCCValidation bool) error
	GetBlockNumFromSavepoint() (uint64, error)
	Commit() error
	Rollback()
	Shutdown()
}
{code}

The function {{ValidateAndPrepare}} has to take into account transaction which already marked as invalid and skip them and extend invalid transaction filter bit array with transaction which invalid in terms of MVCC.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1038,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/16 1:45 AM;C0rWin;flows.png;https://jira.hyperledger.org/secure/attachment/10309/flows.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-37,,,,,,,,,"1|hzxfw7:",,,,Unset,,Sprint 7 - Endorser,,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't write entire contents of Blocks to orderer trace/log file.,FAB-1385,13794,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,,sanchezl,sanchezl,14/Dec/16 2:18 AM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,29/Mar/17 4:01 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"When log level is set to debug, the orderer write the entire contents of the blocks it prepares and sends twice to the log file. These blocks can get rather large and make the log file less useful. Invoking the lifecycle system chain code, for example, results in a 7MB block. The entire block is added to the log file twice, encoded in 2 different formats, for a total of about 50MB written to the log for a single Block.

These are the log entries that contain the dumps of the Blocks:

orderer_1  | [18:57:32.260]    broadcast.go:98: [DEBUG] Prepared block 1 with 1 messages
orderer_1  | [18:57:37.380] client_deliver.go:140: [DEBUG] Sent block 1 to client
",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfwf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert Auction App from Fabric v0.6 to v1.0,FAB-1388,13797,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bmos299,DanielleHancock,DanielleHancock,14/Dec/16 5:54 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Oct/17 3:13 AM,,,v1.0.0,,fabric-quality,,,,0,chaincode,,,,,,,,Modify the Art Auction Blockchain Application (at [https://github.com/ITPeople-Blockchain/auction]) for Fabric v0.6 to work with Fabric v1.0.,,bmos299,ChristopherFerris,DanielleHancock,saydulk,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2rr:",,,,,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 19 - Quality,,,,,,,,,,,,,,,,bmos299,ChristopherFerris,DanielleHancock,saydulk,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 2:47 AM;ChristopherFerris;[~bmos299] unless this is being contributed to Hyperledger, this task does not belong in the Hyperledger Fabric JIRA.;;;","23/Apr/17 11:09 PM;ChristopherFerris;[~bmos299] is IT People contributing art auction? Please follow up.;;;","24/Apr/17 3:27 AM;bmos299;Mohan as per our discussion, can you submit a PR with the auction app?  Assigning to you.
Thanks,
Barry;;;","29/Apr/17 1:44 AM;bmos299;[~ChristopherFerris] ITPeople is fine with submitting to the community.  They have the ability to drive through and CLI and are currently working to add a web-based frontend.  When complete, this is quite elaborate.  Do you see this as residing in its own repo or in the demos folder? Or somewhere else.
Thanks.  ;;;","29/Apr/17 10:26 AM;ChristopherFerris;It could be it's own repo, and would need a project proposal that included commitment to maintain, etc.;;;","14/Oct/17 3:13 AM;scottz;This was done, and merged to CI.

Note: the CI servers were hitting problems intermittently, such as with delays downloading images on the fly, so we disabled from CI daily runs. Since we also use marbles cc for testcases for the complex transactions and rich queries, tests utilizing this auction cc are not required.;;;","30/Jun/18 1:50 PM;saydulk;How i can deploy auction app [https://github.com/ITPeople-Blockchain/auction-app] ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Improvement in shim API GetRows to get rows given the range of keys,FAB-1389,13798,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,vineet.timble,vineet.timble,14/Dec/16 3:32 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,14/Apr/17 8:55 PM,,,v0.6,WON'T FIX,fabric-peer,,,,0,,,,,,,,,"Current GetRows function returns rows which matches the key (Key could be composite key). There is no provision to obtain rows between range of keys. I would like to see API to fetch range. The code should look like below. (Note: this is not tested code)
Due to formatting issues, code is removed and chaincode.go file is attached. Please look for functions GetRows, GetRowsRange and getRowsInternal",,muralisr,vineet.timble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/16 3:33 PM;vineet.timble;chaincode.go;https://jira.hyperledger.org/secure/attachment/10314/chaincode.go",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfx3:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,muralisr,vineet.timble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 4:39 PM;muralisr;[~vineet.timble] as support for table is removed in 1.0 suggest we close this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor ledger interface name for RawLedger and ValidatedLedger,FAB-1390,13799,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,xixuejia,C0rWin,C0rWin,14/Dec/16 7:39 PM,25/Oct/19 6:34 PM,28/Oct/23 2:58 AM,18/Jan/17 12:24 AM,,,,,fabric-ledger,,,,0,committer,endorser,ledger,,,,,,"As was suggested by [~denyeart] in CR (https://gerrit.hyperledger.org/r/#/c/3259/) related to FAB-1384

{quote}
The other thing I wanted to mention, is that with this changeset, the committer's ledger is no longer a 'ValidatedLedger' (invalid tx removed). Rather it is now a raw ledger (with invalid tx marked). Therefore instead of keeping the names RawLedger and ValidatedLedger in ledger_interface.go, I think the more accurate names would now be OrdererLedger and CommitterLedger, respectively. These names would be more expressive for their intended use. Let's see if Manish agrees.
{quote}

and according to [~manish-sethi]

{quote}
Yes, I'm fine with the new names proposed by Dave. But, I think that we can change that later in a separate commit - in order to keep the  conflicts with the refactoring to low.
{quote}

Creating new story to follow up on that and eventually refactor interfaces names.",,C0rWin,denyeart,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-758,,,,,,,,,"1|hzxfxz:",,,,Unset,,Sprint 9 - Ledger,,,,,,,,,,,,,4.0,Unset,,,,,,,,,,,C0rWin,denyeart,xixuejia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Dec/16 7:56 PM;xixuejia; [~C0rWin][~denyeart]
I would like to take this. Here's a few questions to be confirmed
1. Do we also need to change the package name rawledger to ordererledger in orderer directory to make it consistent?
2. Similar to question 1, I suppose we should change the names in related docs, right?
3. According to the latest NCAP(commiteId: a692f93), the ledger names should be changed to OrdererLedger on orderer and PeerLedger on peer. Which terminology should I use for the Ledger on Peer? ;;;","01/Jan/17 12:12 AM;denyeart;[~xixuejia]
1. Yes, these package names should also be updated.
2. Which docs do you refer to?  For external purpose we can simply call the CommitterLedger/PeerLedger the 'Ledger', since this is the main ledger people think about in blockchain.  
3. Yes, you can use the terms OrdererLedger and PeerLedger in the code, in order to be consistent with NCAP document.

Thanks for working on this one.;;;","03/Jan/17 9:53 AM;xixuejia;Hi [~denyeart],
I think it would be better to change the orderer package names in another commit to lower the merge conflict. Your idea?

Please review the code-> https://gerrit.hyperledger.org/r/#/c/3575/;;;","04/Jan/17 10:33 PM;denyeart;[~xixuejia] Right, the orderer package names can be changed in a later commit.  Sounds like you will have one more update to the commit, I'll do full review after your next push.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expire peers dead for a long time in gossip membership module,FAB-1391,13800,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,yacovm,yacovm,14/Dec/16 8:12 PM,09/Oct/19 7:42 PM,28/Oct/23 2:58 AM,08/Jun/17 12:46 AM,,,,,,,,,0,,,,,,,,,"The gossip membership module marks nodes that haven't sent an AliveMessage for a long time as dead.
This might cause a problem in the long run when peers are either shut down for good, or their certificates are revoked (and then, their identity changes because the public key changes and then the PKI-ID which is derived from the public key, also changes).

We need to add an expiration period after which all peers that are dead for longer than that period, are cleaned from the memory structures.

There is a corner case that needs to be handled with care:
Let peers *p0* and *p1* be alive, and let *p2* be dead for a long time. 
Lets say *p0* deletes *p2* at time *T0* and *p1* deletes *p2* at time *T1>T0*.
The following never-ending scenario is possible: 
T0: *p0* deletes *p2*
T0+(T1-T0)/2: *p1* gossips about  *p2*  to *p0*. Now *p0* starts the countdown for *p2* from 0.
T1: *p1* deletes *p2* 
T2: *p0* gossips to *p1* about *p2*
And this can go on and on for ever, and *p2* will jump from *p0*'s in-memory structures to *p1*'s in-memory structures for ever. 

This can be solved in 2 different approaches:
# After *p0* deletes *p2* from its memory structures, it will refuse to learn about *p2* unless the signed timestamp on the last AliveMessage (that's how it learns about a dead peer) is not too far in the past. This assumes that the local clock in *p2* is not in the future, else it will fail.
# Let's define *T* as the timeout period after which a peer is considered dead unless it sent an AliveMessage.
Let *T\*k* for some natural constant *k* be the period after which a dead peer is not gossiped to other peers, and let *T\*k\*2* be the period after which a peer is cleaned from the memory structures. The scenario outlined above cannot happen since if *p0* deleted *p2* from its memory structures, that means that at least *T\*k* time has passed, and that also means that *p1* will not gossip *p2*'s existence to *p2* again. 

I personally think that the 2nd method is better since it doesn't assume anything on maxium clock skew. 
Any opinions?",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxfy7:",,,,,,Sprint 7 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restructure common.Header definition,FAB-1392,13801,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,14/Dec/16 11:47 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,24/Feb/17 3:32 AM,,,,,,,,,0,protocol,,,,,,,,"We need to change the definition of common.Header to ensure that each of the two headers is serialized as bytes. This way proposalHash can be computed over each of the two byte arrays as opposed to the serialization of common.Header. This is required because at transaction time, the headers are split in two (ActionHeader has a SignatureHeader and the Transaction has a ChainHeader) and the two need to be assembled before computing the hash. If protobuf serialization is not deterministic, then we might have a problem when reconstructing the proposalHash",,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxfyf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to update gossip security interface with a Verify method that includes chainid/channelid,FAB-1394,13803,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,15/Dec/16 1:09 AM,05/Nov/19 8:03 PM,28/Oct/23 2:58 AM,21/Feb/17 6:12 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,"The gossip components uses the MessageCryptoService interface to verify the validity of ledger blocks and signatures.
Ledger blocks carry information about the chain/channel they are related to and so an implementation of MessageCryptoService can access the information related to the specific chain in order to validate a given block.

Standalone signatures refer to GossipMessages that might or might not be chain-dependent. In the case a GossipMessage is chain-dependant, the signature should be verified against the chain MSP. Therefore MessageCryptoService should be enhanced to have a verify signature method that takes in consideration also the channel. 

For non-channel related messages, the validation strategy can demand validation against any chain the gossip node belongs to.

[~yacovm] [~ellaki] [~binhn] [~muralisr] [~mastersingh24], please have your take on this. Thanks all :)
",,angelo.decaro,binhn,C0rWin,elli-androulaki,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/16 7:16 PM;angelo.decaro;IMG_1004.JPG;https://jira.hyperledger.org/secure/attachment/10317/IMG_1004.JPG",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1554,,,,,,,,,"1|hzx68v:",,,,Unset,,Sprint 7 - Crypto,Sprint 8 - Crypto,Sprint 9 - Crypto,Sprint 9  - Crypto,Sprint 10 - Crypto,Sprint 11 - Crypto,Sprint 12 - Crypto,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,C0rWin,elli-androulaki,mastersingh24,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Dec/16 1:25 AM;C0rWin;{quote}
For non-channel related messages, the validation strategy can demand validation against any chain the gossip node belongs to.
{quote}

Can you please elaborate on how it will work exactly? Also having the fact you are going to support this, what is the additional benefit of extending {{MessageCryptoService}} to include chain info?;;;","15/Dec/16 7:12 AM;binhn;First of all, we are in TLS, so why would gossip trying to verify anything?  It is a transport layer, and as such, the layer above it should do verification as appropriate; ie Endorser, Committer when each receives transactions or blocks, and which must belong to some chain.

That's said. Here is currently what happens:  MSPs, at least on the peer side, are configured/created per chain. There are no MSPs outside of chains, except a single local MSP, which has the peer's crypto material. A peer instantiates and manages chains; each chain has an MSPManager, a ledger, a committer, then tell gossip to join the chain and passing it the committer. See code in core/peer.go.

We should get rid of MessageCryptoService. 
;;;","15/Dec/16 8:12 AM;binhn;The most important things that I expect out of gossip are: 1) fast 2) scalable

Anything else will be built at layer above.;;;","15/Dec/16 4:31 PM;angelo.decaro;[~binhn] The fact the TLS is place does not say that the information flying there are valid by any means. A malicious node might send a block that is invalid. The honest recipient then has to check that it accepts only valid things.

[~C0rWin] If an honest node receives a chain-related gossip message that validates against chain A but the gossip message says it should go to chain B, then a conservative approach would recommend the honest node to validate that gossip message against chain B and not chain A. At this point, I would say that  MessageCryptoService should get in input a GossipMessage and validate it following two different strategies depending on the chain/channel field (if it is empty or not).
For non-chain-related gossip messages, we need to iterate over all the channels a node belongs to check for signature validity.

[~binhn] My understanding is that MessageCryptoService is a nice abstraction that the gossip component uses to abstract away the security checks. I think this separation is useful. At the end MessageCryptoService will be implemented using MSP anyway.;;;","15/Dec/16 6:15 PM;C0rWin;[~binhn] Well, TLS certificate is not the same certificate peers expected to sign the messages. And from the perspective of being resilient to byzantine environment, the gossip has to verify messages signatures to authenticate peer identity. Therefore I'd add to your list the third property *secure and byzantine tolerant*.

[~angelo.decaro] Gossip takes care of routing, so peer which is not subscribed to channel won't be able to create messages on that channel unless it succeeded to guess/obtain the chain id. All gossip needs is to validate peer identity. From what you are saying is looks like peer might have different certificates for different channels, is that correct?;;;","15/Dec/16 7:19 PM;angelo.decaro;[~yacovm][~C0rWin][~ellaki][~muralisr][~binhn][~mastersingh24][~jeffgarratt][~jyellick][~tuand]

After a discussion with Elli, Yacov and Artem, Elli and me came up with the following picture: 

!IMG_1004.JPG|thumbnail! 

in which we try to describe which checks a goosip node should perform to validate a signature of a channel-related gossip message. There are two nodes, A and B, that belong to the same organization but different channel. A sends a channel-related gossip message to B and B needs to validate it. On the right hand side there a flow diagram that describes how B can take this decision.

What do you think?

;;;","15/Dec/16 7:29 PM;yacovm;We have a much bigger problem here, would really like [~mastersingh24] and [~binhn] to comment:
So, in gossip we have 3 types of messages that are passed around and that are related to a channel:
# Messages regarding pull synchronization: These are not important right now, because they are only passed point-to-point and are not relayed further. They're also not signed because the peer's identity comes from the ""session"" (since it's point-to-point)
# Block messages: these are validated by the MessageCryptoService but not by the verify call Angelo refers to, but by a different call.
# StateInfo messages: these messages are relayed to *all peers in the organizations that are part of the channel*. They are signed by the peers, and they simply say ""hey, I'm a peer in channel A, this is my ledger-height"". 
# State transfer messages - for peers that were down for a long time or are new: this is not a problem since they are also point-to-point. We check if a peer is in the right org if it wants to do state-synchronization. 

Now, since we agreed with [~binhn] and [~mastersingh24] that for each organization, there will be 1 peer (the leader) that would connect to the ordering service and would ask blocks for all channels of that org *on behalf of the channel peers of that org*, if that leader peer is in channels A, B and it obtains a StateInfo message of channel C, if it will call the verify with the parameter of the channel, it won't be able to verify that message at all since it doesn't have the the channel's MSP!
This creates a problem and basically breaks down our whole block dissemination apart.
Now, it would be *very easy* to fix it if we just could not pass the channel as a parameter and then the signature of that peer would be verified by the local MSP, since both peers are *in the same organization*. 
I just want to stress out, that the routing logic in gossip is enforcing channel-related access control, but when we verify a message sent from a peer we *do not care about the channel* but we only care about the peer's organization, and the certificate of the peer (if it's valid, or not).

So, [~angelo.decaro] - regarding your diagram, what should happen is that that leader peer (it's B) would take the message, and since it is not in the channel, it'll pass it to the local MSP.

This only leaves a specific problem:
StateInfo messages are gossiped across organizations, among all peers of the channel. 
We *have to do that* because that's how we know from which peers we can replicate information from.
So, if we have for example 3 organizations, each of 100 peers and a channel with 10 peers in each org, most StateInfo messages would be simply dropped, and this imposes a serious performance and latency problem for that message dissemination.
Another solution for that, would say that we only do state-synchronization between peers of the same organization. ;;;","15/Dec/16 7:36 PM;angelo.decaro;Okay, I think we might be quite close. What we say in addition is that node 1 sends a channel-related message, let's say A, to node 2 and both are on A, then node 2 asks the MSP of channel A to verify validate the identity.

What do you think?;;;","15/Dec/16 7:42 PM;angelo.decaro;[~yacovm] Regarding your last paragraph, which check do you envision? I didn't get that.

But sorry, if the nodes belong to the same channel even though different organizations then it is fine. They will recognize each other.;;;","15/Dec/16 7:59 PM;yacovm;{quote}Okay, I think we might be quite close. What we say in addition is that node 1 sends a channel-related message, let's say A, to node 2 and both are on A, then node 2 asks the MSP of channel A to verify validate the identity.{quote}
Yeah, if they're on the same channel that'll work.
But- what if they are not in the same channel, but both are in organizations that are in the channel? then it won't. and there is a use case I described above that needs it to work. ;;;","15/Dec/16 8:58 PM;angelo.decaro;How can a node tell that who is sending the gossip message belongs to an organization that it is in some channel on which also his organization is on? This sounds weird to me. Please, may you clarify the scenario?;;;","15/Dec/16 9:02 PM;yacovm;Of course.
Each message is either sent:
* Point2Point- and then the sender is associated with its PKI-ID, and each peer maps the PKI-ID to a certificate, and each peer can call the MSP to extract the identity of an organization from a certificate. Once that identity is extracted, and since we have the list of all organizations of a channel, we know if that peer belongs to an organization that is in the channel. 
* Gossipped (can be relayed)- and then that message is signed by the peer, and the PKI-ID of the peer is inside the message. The same logic as the previous bullet is applied. ;;;","15/Dec/16 9:32 PM;angelo.decaro;This is the question: 

A and B belongs to different organizations, org1, org2 respectively. 
A sends a message to B. 
B ask itself: Does A belong to an organization that has a channel in common with org2?
But, how can B answer such a question?;;;","15/Dec/16 9:35 PM;yacovm;He can simply look at all the MSPs it has, and ask each MSP if it recognizes the certificate or A. 
It can also be smart and look at the organization of A, and lookup which MSP are relevant for that org.;;;","15/Dec/16 9:41 PM;elli-androulaki;> He can simply look at all the MSPs it has, and ask each MSP if it recognizes the certificate or A. 

But this will not answer the question of whether channel X is the channel both organizations are part of, but rather that there exists some channel that both  organizations are member of.

> It can also be smart and look at the organization of A, and lookup which MSP are relevant for that org

Organization info is built in to that MSP, that is mapping between orgs and MSPs is assumed to be known by the peers. But then we go back to Angelo's question. How do we know that organization A is a member of channel X.


;;;","15/Dec/16 9:47 PM;angelo.decaro;Why should B perform such an exhaustive search (which is costly)? Why should B have at all an MSP that can validate org2? There must be some hidden assumption that I'm missing here.;;;","15/Dec/16 9:50 PM;yacovm;{quote}But this will not answer the question of whether channel X is the channel both organizations are part of, but rather that there exists some channel that both organizations are member of.{quote}
I know. And, that is enough, since all the gossip component wants to know if whether a peer's signature is valid. That's all. Nothing to do with a channel. 

{quote}Organization info is built in to that MSP, that is mapping between orgs and MSPs is assumed to be known by the peers.{quote}
Can you decipher this message please? 

{quote}But then we go back to Angelo's question. How do we know that organization A is a member of channel X.{quote}
Why would you need to know that? that's my problem, not yours. I just need you to verify a peer's certificate, nothing more. ;;;","15/Dec/16 9:53 PM;yacovm;{quote}Why should B perform such an exhaustive search (which is costly)?{quote}
I didn't say it has to. The implementation details is yours to decide on. 
You could create a mapping between orgs and lists of MSPs if you want. 

{quote} Why should B have at all an MSP that can validate org2? There must be some hidden assumption that I'm missing here.{quote}
It may have, and it may not have.;;;","15/Dec/16 10:03 PM;angelo.decaro;Yacov, a peer only organizes MSP per channel not per organization. [~binhn][~ellaki], is this correct?

Moreover, if the probably that B has information about org2 is low, why should we bother at all? Is the scenario you are presenting a common one?;;;","15/Dec/16 10:06 PM;elli-androulaki;Correct to my knowledge. There is an MSPManager per chain/channel, plus a local MPS for the peer signing identities needs.;;;","15/Dec/16 10:10 PM;elli-androulaki;Just for the sake of time, and to make some progress. Shall we go with an approach where we have the channel listed in the verify, and would make things easier for Angelo? 
And if we see that it is too slow / conclude that this does not cover our needs we look for alternatives?

[~yacovm], [~C0rWin], [~binhn], [~mastersingh24] what do you think?;;;","15/Dec/16 10:10 PM;yacovm;{quote}Yacov, a peer only organizes MSP per channel not per organization. Binh NguyenElli Androulaki, is this correct?{quote}
But, that's how the data is structured in the code, right? That's not set in stone. If you have that information somewhere and you need it, you should be able to somehow fetch it. At least that's what I think.
{quote}
Moreover, if the probably that B has information about org2 is low, why should we bother at all? Is the scenario you are presenting a common one?{quote}
At least for now, we are asked to replicate ledger blocks (for state transfer, for peers that have been offline for a long time, or new peers) between organizations. 
The support for that, at least at this point- requires flooding *all peers in the organizations of the channel* with a certain type of message, which would be dropped with high probability  because of your restriction.;;;","15/Dec/16 10:14 PM;yacovm;{quote}Just for the sake of time, and to make some progress. Shall we go with an approach where we have the channel listed in the verify, and would make things easier for Angelo?
And if we see that it is too slow / conclude that this does not cover our needs we look for alternatives?{quote}
yep;;;","15/Dec/16 10:55 PM;binhn;Folks, I repeat again: We can't solve Byzantine problem in 1.0. We have made that decision a long time ago when we switched over to Kafka. There would be 100s of edge cases of Byzantine faults, and gossip alone is not going to solve it. So please focus on the simple things that we need now, and that is, sending a message in a network fast, efficient, and scaleable.

The message signature verification belongs to the layer above gossip (repeating). If we need to blacklist some peer, provide such function interface so that the layer above may control.;;;","15/Dec/16 11:48 PM;yacovm;We already have a method that black lists a peer, in the comm layer. ;;;","16/Dec/16 2:08 AM;yacovm;So, we talked and came to the following course of action:

Each peer would replicate its MSP information to its entire organization, and in that way- if we'll have 2 peers of different organizations, and both organizations are in the same channel, and these 2 peers are not in the same channel, they would eventually get the needed MSP information from peers in their own organization that are in the channel, and that way they could connect with each other. 

Are there any objections, [~angelo.decaro] , [~ellaki] , [~mastersingh24] , [~binhn] ? ;;;","16/Dec/16 5:39 PM;elli-androulaki;[~yacovm], how would this msp information traverse securely the gossip network? 
Assuming that bootstrapping is solved by manual setup of the peer with the initially needed MSPs, how do we make sure that these structures are securely updated? If MSP updates are advertised through the gossip network, i would need to trust the peer who is sending me this information. And if I do trust all peers that are in the same org as i am, then i can use my single local MSP to authenticate the MSPupdate message prior to applying MSP updates. 
Would this suffice as a threat model? If so, then I think we could be good to go :);;;","17/Dec/16 1:51 AM;yacovm;{quote} how would this msp information traverse securely the gossip network? {quote} You mean medium-wise? The same way we transfer everything, including ledger blocks. gRPC streams over TLS (if enabled).
That's for security. 
For authenticity we can do something similar we do in identity messages.
I think that in the end, we don't really need to grab the MSP and transfer it in bulk, we just need to transfer data such that each peer can build its own missing MSP easily.
This needs to be fine tuned but why not send the certificates themselves in separate messages and have each peer reconstruct the MSP with the info? Perhaps we can discuss that next week?
{quote}Assuming that bootstrapping is solved by manual setup of the peer with the initially needed MSPs, how do we make sure that these structures are securely updated?{quote}
The security part is not a problem since it's done in-memory and by the decision of the peer, the ""hard"" part is how to make the peer ""trust"" the certificates it gets, right? But, [~binhn] said above: {quote}Folks, I repeat again: We can't solve Byzantine problem in 1.0{quote}, so since the certificates are passed only within the org, they can be signed by the peers that gossip them, and thus- can be trusted that they came from inside the MSP of an organizational peer. How does that sound?
{quote}If MSP updates are advertised through the gossip network, i would need to trust the peer who is sending me this information {quote}
Oh, That's what happens when you process JIRA comments serially and not read the entire comment first.
I addressed this above.
{quote} And if I do trust all peers that are in the same org as i am, then i can use my single local MSP to authenticate the MSPupdate message prior to applying MSP updates. {quote}
Yeah. My thoughts too.
{quote}Would this suffice as a threat model? If so, then I think we could be good to go{quote}
I think so, but a follow-up question. I understand that we would want to gossip both enrollment certificates and TLS certs, right?
Do we have the ability to make the gRPC server and client side (since we do mutual TLS) to an ""online-update"" of the ""certificate verification trust logic""? 
I guess this problem stands also when we don't gossip certificates, after all- when a peer joins a channel it gets the root CA cert of the organizations of that channel, right? 
Does it somehow make the TLS layer of itself now trust these root CAs?
;;;","29/Jan/17 9:15 PM;angelo.decaro;[~elli-androulaki],[~ales],[~yacovm], change-set https://gerrit.hyperledger.org/r/#/c/3327/ depends on the implementation of identity.GetOrganizationUnits() and on the enforcement that DeserializeIdentity fails when the mspIDs do not match.

Please, may you comment on how to implement GetOrganizationUnits and how to perform the enforcement without breaking anything?;;;","29/Jan/17 10:54 PM;elli-androulaki;Ok, here is what I think we can consider having in place (at least for now): 

At gossip the recipient of a message always obtains a (creator/signer, signature, signedmessage) triplet within 

Is the connection/messages exchanged *chain/channel C scoped*?
      1. recipient checks if it has joined channel C and rejects if not
      2. recipient retrieves channelReader policy
      3. recipients checks that the triplet (creator/signer, signature, signedmessage) with channnelReaders ""evaluate"" accepts; it rejects the connection if it does not accept.

Is the connection/messages exchanged *organization-scoped*?: two ways (depending on the avilability or not of identity channel):
 * Option1 - identity channel not available: check the triplet against local MSP and reject if the check fails (that is, deserialize using local msp, and run msp.isMember on the given id, as well as signature verification)
 * Option2 - the identity channel is in place: check the triplet against the recipient's MSP version inside the identity channel (leverage MSP.isMember(... ) function..); reject if these checks fail

Is the message a *ConnenctionEstablished* message? Here recipient needs to check that it is not a request coming outside the blockchain network.
 * Option1 - identity channel not available: a couple of way to deal with this
      1. iterate across all channels the recipient has joined and evaluate the (creator/signer, signature, signedmessage) against channelReaders, if the check fails, check that the triplet is consistent to recipient's local MSP; reject if all these checks fail, and accept if any of them accepts.
      2. keep the triplet and accept the connection, and wait till the type of message that is to be communicated through the established connection; then apply the message authentication methods d described above based on whether the message is organization-scoped or channel-scoped.
* Option 2 - identity channel is in place: check the triplet mentioned above against the mspmanager of the identity channel 
    1. id <- mspmanager.deserialize(creator), 
    2. id.verify(message, signature)
    3. id.validate()

In any case inside the MSP implementation of deserializeIdentity  method, we would need to add a check if the mspidentifier inside the deserialized identity matches the one of the MSP that deserializes it. ;;;","29/Jan/17 11:03 PM;elli-androulaki;Policies based on OrganizationUnits we can have ass soon as we support the related principals, which we are currently not supporting.;;;","15/Feb/17 6:44 AM;yacovm;The method is already there... can we close this? (mark this done) once policies are in, Angelo can just start using them instead of the mock .;;;","15/Feb/17 6:44 PM;elli-androulaki;It is done, modulo the check with the chain's readers/writers. 
Some of it is here: https://gerrit.hyperledger.org/r/#/c/6001/;;;","21/Feb/17 6:23 PM;yacovm;Done in: https://gerrit.hyperledger.org/r/#/c/6251/;;;"
Generic query API for CouchDB,FAB-1395,13804,12504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,15/Dec/16 1:19 AM,21/Oct/19 8:03 PM,28/Oct/23 2:58 AM,03/Jan/17 11:33 PM,,,v1.0.0,,fabric-ledger,,,,0,,,,,,,,,"This task will implement the following interface:

ExecuteQuery(query string) (ResultsIterator, error)",,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfyn:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add query for history of a key - GetTransactionsForKey() API,FAB-1405,13814,12500,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MariWade,MariWade,MariWade,15/Dec/16 5:23 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Jan/17 10:54 PM,,,v1.0.0,,fabric-ledger,,,,0,,,,,,,,,GetTransactionsForKey() API uses history database to return history for a key.  It will have an option to return historical values (states) or historical transaction details for a key.,,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxfzb:",,,,,,Sprint 7 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate V1.0 Java chain code shim,FAB-1407,13816,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rickr,rickr,15/Dec/16 5:35 AM,25/Aug/18 7:14 AM,28/Oct/23 2:58 AM,12/Apr/17 11:54 PM,,,,,fabric-sdk-java,,,,0,v1.0,,,,,,,,Update shim code so it runs in v1 and support dev mode ,,Name63,rickr,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-7,,,,,,,,,"1|hzx5rj:",,,,,,Sprint 5 - Consensus,Sprint 10 - Java SDK,Sprint 11 - Java SDK,,,,,,,,,,,,,,,,,,,,,,,Name63,rickr,wutongtree,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/17 11:52 PM;rickr;This was handled by task FAB-1402;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove node's call to bootstrapper,FAB-1410,13819,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,kchristidis,kchristidis,kchristidis,15/Dec/16 2:13 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Dec/16 7:46 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The node package gets the genesis block by invoking the static bootstrapper, then uses that block for this call

{code}deliverService.JoinChannel(commit, block){code}

It should be noted that this is a temporary solution by the node package authors to test out the end-to-end integration.

However, this layering violation (which could be ignored temporarily due to the reason cited above) manifests itself in a very practical and real way:

# The static bootstrapper is being replaced by the provisional bootstrapper, for the reasons documented here: https://jira.hyperledger.org/browse/FAB-1364.
# The provisional bootstrapper loads the *orderer.yaml* file (in the *orderer* package) to determine its output.
# The fabric-peer Docker image however does not have access to this file.
# Thus, if we call the provisional bootstrapper from the node, the fabric-peer container will crash.

Upon further inspection, it seems that what the node really needs now is a configuration block with just the right chain ID, on the payload header of its first enclosed envelope.

The simplest, least invasive way to offer this is by creating a sample block via the following call: 

{code}utils.MakeConfigurationBlock(util.GetTestChainID()){code}

(Where *utils* refers to the *protos/utils* and *util* to the *core/util* package respectively.)

This is also inline with Binh's suggestion: https://hyperledgerproject.slack.com/archives/fabric-peer-dev/p1481691533000088",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg1j:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Dec/16 3:50 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3315/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""make peer"" failed when using proxy in curl-style (socks*://) protocol prefixes",FAB-1411,13820,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,oldsharp,oldsharp,oldsharp,15/Dec/16 9:08 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Apr/17 8:30 AM,v1.0.0-alpha1,,,,fabric-build,,,,0,proxy,,,,,,,,"When run ""make peer"" in the VM env with cmd like:

{{http_proxy='socks5h://socks-proxy.example.com:8080' https_proxy=$http_proxy make peer}}

the build process would fail with error info like:

{quote}make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
Building github.com/golang/lint/golint -> golint
package golang.org/x/tools/go/gcimporter15: unrecognized import path ""golang.org/x/tools/go/gcimporter15"" (https fetch: Get https://golang.org/x/tools/go/gcimporter15?go-get=1: http: error connecting to proxy http://socks5h://socks-proxy.example.com:8080: dial tcp: lookup socks5h on 10.0.2.3:53: no such host)
Makefile:51: recipe for target 'gotool.golint' failed
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
make[1]: *** [gotool.golint] Error 1
Makefile:56: recipe for target '/opt/gotools/obj/gopath/bin/golint' failed
make: *** [/opt/gotools/obj/gopath/bin/golint] Error 2
Makefile:149: recipe for target 'build/docker/gotools' failed
make: *** [build/docker/gotools] Error 2{quote}

and

{quote}Sending build context to Docker daemon 35.84 kB
Step 1 : FROM hyperledger/fabric-baseimage:x86_64-0.2.2
 ---> 4ac07a26ca7a
Step 2 : RUN wget https://services.gradle.org/distributions/gradle-2.12-bin.zip -P /tmp --quiet
 ---> Running in a65e56a36ff7
The command '/bin/sh -c wget https://services.gradle.org/distributions/gradle-2.12-bin.zip -P /tmp --quiet' returned a non-zero code: 8
Makefile:196: recipe for target 'build/image/javaenv/.dummy-x86_64-0.7.0-snapshot-4cd79b1' failed
make: *** [build/image/javaenv/.dummy-x86_64-0.7.0-snapshot-4cd79b1] Error 8{quote}

The reason could be:
1. ""go get"" doesn't understand the curl-style proxy protocol prefixes.
2. Docker doesn't understand the curl-style proxy protocol prefixes.
3. wget is used to fetch the gradle zip package from remote, which does not understand the curl-style proxy protocol prefixes.

The simplest solution would be switching to a http proxy instead of socks proxy (e.g. http://http-proxy.example.com:8080/).
The 'socks5h' prefix supported by curl which force the proxy resolve the host name could be extremely useful in some situation, however, especially when facing network env with a high DNS spoofing possibility.",,oldsharp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-308,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg1r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,oldsharp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Dec/16 10:44 PM;oldsharp;I'm working on this issue: https://gerrit.hyperledger.org/r/#/c/3325/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unstable re-compiling after `make peer` fails ,FAB-1412,13821,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,greg.haskins,baohua,baohua,15/Dec/16 9:43 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Nov/17 12:26 AM,v1.0.0,,Future,,fabric-peer,,,,0,won't-fix,,,,,,,,"With latest master branch code (0eadb03506cfde78ea790c6d98d7eb0af98e5842).

1. install those git/go env.

2. run `make peer`. It may fail on getting gcimporter15 pkg due to network problem sometimes. Or other reason to let the make progress fail once.
```sh
$ make peer                                                                                                  1 ↵
make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
Building github.com/golang/lint/golint -> golint
package golang.org/x/tools/go/gcimporter15: unrecognized import path ""golang.org/x/tools/go/gcimporter15"" (https fetch: Get https://golang.org/x/tools/go/gcimporter15?go-get=1: dial tcp 74.125.130.141:443: i/o timeout)
make[1]: *** [gotool.golint] Error 1
Makefile:51: recipe for target 'gotool.golint' failed
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
Makefile:56: recipe for target '/opt/gotools/obj/gopath/bin/golint' failed
make: *** [/opt/gotools/obj/gopath/bin/golint] Error 2
make: *** [build/docker/gotools] Error 2
```

3. Manually install the gcimporter15 pkg through `go get`, or just ignore.

4. Re-run `make peer` without `make clean`.
```sh
$ make peer
Installing chaintool
curl -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.0/chaintool > build/bin/chaintool
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   582    0   582    0     0    442      0 --:--:--  0:00:01 --:--:--   442
100 14.6M  100 14.6M    0     0   166k      0  0:01:30  0:01:30 --:--:--  288k
chmod +x build/bin/chaintool
Creating build/goshim.tar.bz2
mkdir -p build/image/ccenv/payload
cp build/docker/gotools/bin/protoc-gen-go build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
cp: cannot stat ‘build/docker/gotools/bin/protoc-gen-go’: No such file or directory
make: *** [build/image/ccenv/payload] Error 1
```
",,baohua,greg.haskins,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg1z:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,baohua,greg.haskins,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/16 9:55 PM;baohua;It seems the `make peer` cannot repeat when error happens. 

We need to run `make clean` first.

However, we may try to see how to make the progress more robust.;;;","16/Dec/16 2:47 PM;baohua;Even run `make linter`, will building the images like baseimage. 

I suggest we move those image building part to `make images`, instead of triggering implicitly.;;;","08/Feb/17 10:05 PM;greg.haskins;Moving to low priority since workaround is to ""make clean"" first.;;;","09/Feb/17 12:26 PM;baohua;Thanks, Greg.
Any idea to decouple those image building steps from the binary building?;;;","27/Oct/17 4:51 AM;jeffgarratt;[~greg.haskins] is this something we can close?;;;","02/Nov/17 12:26 AM;jeffgarratt;[~baohua] [~greg.haskins] Closing.. reopen if necessary.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer Kafka Behave tests fail for z and p architectures,FAB-1413,13822,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,harrijk,harrijk,16/Dec/16 12:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Jan/17 11:30 AM,,,v1.0.0,,fabric-orderer,,,,0,,,,,,,,,"The behave tests for the Orderer Kafka service use x86 docker images for both Kafka and Zookeeper, both of which are needed to test the Kafka ordering service.  

As a result the behave tests associated the the Kafka ordering service fail for z and p.

I would suggest building upon existing arch-specific docker images that are built during the fabric build process.",,bsmita,greg.haskins,harrijk,harsha544,kchristidis,silliman,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg27:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bsmita,greg.haskins,harrijk,harsha544,kchristidis,silliman,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/17 11:34 AM;kchristidis;This got merged already [1] but broke the Kafka orderer-related Docker Compose files.

[FAB-1656] will fix the errors that came up.

[1] https://gerrit.hyperledger.org/r/#/c/3923/1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer crashes at commit time if block's metadata is nil,FAB-1415,13824,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,C0rWin,muralisr,muralisr,16/Dec/16 1:09 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Dec/16 7:28 AM,,,,,fabric-gossip,,,,0,,,,,,,,,"Peer crashes with 

panic: runtime error: index out of range

goroutine 69 [running]:
panic(0xa6f740, 0xc42000e100)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validator/statebasedval.(*Validator).ValidateAndPrepareBatch(0xc4203122e0, 0xc420294140, 0x1, 0xc4202d41b0, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go:48 +0xba5
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*LockBasedTxMgr).ValidateAndPrepare(0xc42029c140, 0xc420294140, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go:77 +0xfb
github.com/hyperledger/fabric/core/ledger/kvledger.(*KVLedger).Commit(0xc420317440, 0xc420294140, 0x48afc2, 0xc420080dc0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:219 +0x8a
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitBlock(0xc420312990, 0xc420294140, 0x0, 0x21776bb3202c9c00)
	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:51 +0x3d
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc420086000, 0xc420294140, 0x1, 0x4, 0xc4202d40d8)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:388 +0x56
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc420086000)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:285 +0x458
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
",,C0rWin,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg2n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/16 2:09 AM;C0rWin;The block arrives from ordering service with metadata field underlined for transaction filter bit array not initialized, whereas later validator tries access that field and fails due to null pointer deference. Providing a fix which will take care to properly initialize metadata field and copy metadata fields it got from the orderer.

{code}
                        block.Metadata = t.Block.Metadata
                        if block.Metadata == nil {
                                block.Metadata = &common.BlockMetadata{ Metadata: [][]byte{[]byte{}, []byte{}, []byte{}}}
                        } else if len(block.Metadata.Metadata) < int(common.BlockMetadataIndex_TRANSACTIONS_FILTER+1) {
                                for i := int(len(block.Metadata.Metadata));  i <= int(common.BlockMetadataIndex_TRANSACTIONS_FILTER); i++ {
                                        block.Metadata.Metadata = append(block.Metadata.Metadata, []byte{})
                                }
                        }
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make policy manager pluggable with different policy providers,FAB-1416,13825,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,16/Dec/16 2:37 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Per discussion with [~ellaki] [~adecaro] and [~ales] the MSP managers would like to provide their own policy evaluation options.  This would be in addition to the NOutOf policies, but would exist within the current framework.

This story is to make the existing policy manager pluggable with different policy providers, so that the MSP manager may provide a policy provider for MSP type policies.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx913:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert Policy from oneof to enum,FAB-1418,13827,13825,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,16/Dec/16 4:53 AM,21/Nov/19 11:25 PM,28/Oct/23 2:58 AM,05/Jan/17 3:26 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The Policy type for configuration is currently oneof{ SignaturePolicyEnvelope }.

This is somewhat convenient but is not extensible without modification of the common protos.

Instead, this should be switched to be the standard enumerated type, bytes model.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg33:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set appropriate acknowledgement level,FAB-1419,13828,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,16/Dec/16 4:54 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Dec/16 12:44 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"By default the partition leader (i.e. the Kafka broker responsible for maintainig a chain) waits only for the local commit to succeed before responding.

The right setting to maximize the reliability of data delivery is to have the partition leader wait for all in-sync replicas (backups) to get a message before sending back to the producer an acknowledgement or an error.

Thanks to [~bcbrock] for bringing this to my attention.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg3b:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Dec/16 6:32 AM;kchristidis;https://gerrit.hyperledger.org/r/3345;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert signature policy to pluggable policy provider model,FAB-1420,13829,13825,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,16/Dec/16 4:55 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg3j:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ledger setInfo(): As a chaincode author, I want to pass information to VSCC for transaction validation context",FAB-1422,13831,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Won't Do,,denyeart,denyeart,16/Dec/16 5:12 AM,23/Jan/20 3:45 AM,28/Oct/23 2:58 AM,23/Jan/20 3:45 AM,,,Future,,fabric-ledger,,,,0,ledger,stale-item,,,,,,,"Proposal is to add a setInfo() on the simulator, for the chaincode to pass some transaction context that is to be used later for validation in VSCC, without anything getting written to permanent state (therefore don't want to use WriteSet).  This information would get included in the simulation results in the transaction, and VSCC would be able to reference it when performing custom validation logic.

(Murali, please fill in your immediate use case for it).",,binhn,denyeart,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-758,,,,,,,,,"1|hzxgyf:",,,,Unset,,,,,,,,,,,,,,,2.0,Unset,,,,,,,,,,,binhn,denyeart,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/16 8:35 AM;muralisr;Thanks [~denyeart].

The use case for upgrade is this.
* SDK sends Proposal{ To: ""lccc"", ChainID: ""mychain"", Function: ""upgrade"", Args: [""example01"", <newcode bytes>]}
* endorser creates r/w set from lccc to do the above upgrade.. this is basically the PutState(""example01"", <upgrade data>), ie, essentually the ""Args"" part.  NOTE that this DOES NOT contain ""input"" data such as ""Function: upgrade""
* Committer receives TX with the above r/w set
* lccc_vscc needs to extract out (1) the function to answer the question is the TX an upgrade (2) get the information such as chaincode name (example01), version 

Let us focus on the first part - needing to know the function to answer the quetion ""is the tx is an upgrade ?"" This is an input data and is not part of the r/w set. One way to get this data is to make the operation a state var and do a Put(""example01_op"", ""upgrade""). But this pollutes the state namespace with side effect data in order to make it available for VSCC processing. And would only get for more complex scenarios and basically exposes the limitation of attempt to infer TX information via r/w set introspection and side-effects.

Per understanding of the proposal from [~manish-sethi] [~denyeart] ...

It would be nice if we can tag ""metadata"" or ""information"" data along with transaction to the rw set that is accessible as a PER TRANSACTION data (as opposed to State data which is PER CHAINCODE).  The Chaincode would do a SetInfo() on the proposal which can be accessed with a GetInfo at Commit time. 

This opens the door for such processing in a natural manner and seems to be consistent with other ledger data access mechanisms and will benefit use cases far more complex than the ""upgrade"" one above.;;;","16/Dec/16 11:44 AM;denyeart;[~binhn] Do you agree with the design proposed in this user story? Any other thoughts?  Any synergy with your 'side data' ideas?;;;","03/Jan/17 11:43 PM;denyeart;[~binhn] Please review the description and comment and let us know if you agree with the approach here.;;;","04/Jan/17 4:15 AM;binhn;I have discussed with [~muralisr] and we should explore alternative rather than this proposal now.;;;","23/Jan/20 3:45 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invetigate ZooKeeper user-level KeeperException,FAB-1423,13832,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,16/Dec/16 1:34 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,18/Dec/16 2:55 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"This shows up before the creation of every chain (incl. the system chain):

{noformat}
orderer0_1   | [04:01:45.584]        main.go:142: [DEBUG] Posting the CONNECT message...
zookeeper_1  | 2016-12-16 04:01:45,589 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15905ca7c170000 type:setData cxid:0x51 zxid:0x21 txntype:-1 reqpath:n/a Error Path:/config/topics/6b6f737461735f636861696e Error:KeeperErrorCode = NoNode for /config/topics/6b6f737461735f636861696e
zookeeper_1  | 2016-12-16 04:01:45,602 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15905ca7c170000 type:create cxid:0x52 zxid:0x22 txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics
kafka0_1     | [2016-12-16 04:01:45,631] INFO Topic creation {""version"":1,""partitions"":{""0"":[0]}} (kafka.admin.AdminUtils$)
kafka0_1     | [2016-12-16 04:01:45,645] INFO [KafkaApi-0] Auto creation of topic 6b6f737461735f636861696e with 1 partitions and replication factor 1 is successful! (kafka.server.KafkaApis)
zookeeper_1  | 2016-12-16 04:01:45,663 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15905ca7c170000 type:create cxid:0x5a zxid:0x25 txntype:-1 reqpath:n/a Error Path:/brokers/topics/6b6f737461735f636861696e/partitions/0 Error:KeeperErrorCode = NoNode for /brokers/topics/6b6f737461735f636861696e/partitions/0
zookeeper_1  | 2016-12-16 04:01:45,678 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15905ca7c170000 type:create cxid:0x5b zxid:0x26 txntype:-1 reqpath:n/a Error Path:/brokers/topics/6b6f737461735f636861696e/partitions Error:KeeperErrorCode = NoNode for /brokers/topics/6b6f737461735f636861696e/partitions
kafka0_1     | [2016-12-16 04:01:45,748] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions [6b6f737461735f636861696e,0] (kafka.server.ReplicaFetcherManager)
kafka0_1     | [2016-12-16 04:01:45,756] INFO Completed load of log 6b6f737461735f636861696e-0 with log end offset 0 (kafka.log.Log)
kafka0_1     | [2016-12-16 04:01:45,759] INFO Created log for partition [6b6f737461735f636861696e,0] in /tmp/kafka-logs with properties {compression.type -> producer, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> delete, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka0_1     | [2016-12-16 04:01:45,760] INFO Partition [6b6f737461735f636861696e,0] on broker 0: No checkpointed highwatermark is found for partition [6b6f737461735f636861696e,0] (kafka.cluster.Partition)
orderer0_1   | [04:01:45.912]     producer.go:78: [DEBUG] Forwarded blob with offset number 0 to chain partition 6b6f737461735f636861696e/0 on the Kafka cluster
{noformat}

On the positive side, this doesn't seem to affect the operation of the orderer and chains are created and can be appended to normally. I'd still like to know what's going on though.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg3r:",,,,,,Sprint 7 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Dec/16 2:55 AM;kchristidis;Turns out this is a completely normal INFO message from ZK (as its log level) implies, i.e not a bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Record savepoint for history DB,FAB-1425,13834,13909,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,balaji.viswanathan,balaji.viswanathan,balaji.viswanathan,16/Dec/16 5:58 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 8:28 PM,,,v1.0.0,,fabric-ledger,,,,0,,,,,,,,,Record a savepoint when committing to history db so that it can be recovered along with block and state db,,balaji.viswanathan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg47:",,,,,,Sprint 9 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,balaji.viswanathan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatic deployment and management over a network for v1.0,FAB-1428,13837,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,AdnanChoudhury,AdnanChoudhury,16/Dec/16 11:51 PM,21/Jul/18 4:09 AM,28/Oct/23 2:58 AM,28/Apr/17 4:25 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Chef has been identified as an option to create the automatic deployment mechanism. The architecture of the mechanism needs to be specified, and then implement in Chef.",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-8,,Automatic Deployment with Chef in v1.0,Done,,,Unset,,,,"1|hzxg4n:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/17 4:25 AM;AdnanChoudhury;After exploring Chef, Currently, the team is pursuing other solutions such as Docker swarm etc. as these are found to be more suitable for the task (Current work is here: FAB-3337).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement epoch and timestamp message replay protection,FAB-1430,13839,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,17/Dec/16 12:06 AM,23/Jan/20 3:50 AM,28/Oct/23 2:58 AM,23/Jan/20 3:45 AM,,,Future,,fabric-orderer,,,,0,common-components,stale-item,,,,,,,"The envelope header contains a timestamp and epoch both of which are ignored by the ordering service today. But, these should be leveraged for message replay prevention.

This will require synchronizing with the SDK/peer team to make sure these parameters are correctly set.",,jyellick,kchristidis,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxg4v:",,,,Unset,,,,,,,,,,,,,,,5.0,Unset,,,,,,,,,,,jyellick,kchristidis,sykesm,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:45 AM;sykesm;Stale;;;","23/Jan/20 3:50 AM;yacovm;I actually think this is something still relevant. 
Right now, any malicious user can send the same transaction over and over and over again, any transaction in the past (not just his).
And since we don't have support of TLS CRLs (no one implemented it...) then there is no way to block that user, except from figuring out where he/she sends the transactions from and blocking the IP. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explore Chef as a deployment tool for v1.0,FAB-1431,13840,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,17/Dec/16 12:14 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Apr/17 3:34 AM,,,v1.0.0,,fabric-quality,,,,0,quality,,,,,,,,"Explore Chef as the automated deployment and management tool for Fabric v1.0, with the goal of subsequently using the system as a part of automated test framework.
",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,,,,,,,,,,,,,,,,,,,,,,FAB-1341,,,FAB-3337,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1428,,,,,,,,,"1|hzx313:",,,,,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 2:37 AM;AdnanChoudhury;After exploring Chef (please see attached subtask),it was found to be not a perfect fit for the job due to complexity and maintenance overhead, and the team decided to pursue other avenues (see FAB-3337). [~ChristopherFerris];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
write first feature tests for fabric components,FAB-1432,13841,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,scottz,scottz,scottz,17/Dec/16 12:19 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,30/Dec/16 3:20 AM,,,,,fabric-quality,,,,0,,,,,,,,,"Catchup phase: Examine stories completed to date in each component area to identify missing feature tests, and work with developers to identify use-cases and write baseline feature file tests using gherkin language. 

Backend utilities for functions that drive the feature files will be identified and written as needed.

Components for focused testing of configuration and operation may include (but may not be limited to) the following:
* COP
* Orderer
* Endorser 
* Gossip
* MSP
* Peer
* Ledgers
",,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABC-661,FABC-664,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx85r:",,,,Unset,,Sprint 8 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,latitiah,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Dec/16 1:03 AM;latitiah;Moving forward: Developers will ensure that the stories will contain a general description of the scenario that they are working on. Testers should work with developers to expand the feature file tests as needed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specify the architecture for the automated deployment-and-management system,FAB-1433,13842,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,AdnanChoudhury,AdnanChoudhury,17/Dec/16 12:23 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Apr/17 4:21 AM,,,v1.0.0,,fabric-quality,,,,0,quality,,,,,,,,"1. Specify the architecture for the automated blockchain network deployment/management. 
",,AdnanChoudhury,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1428,,,,,,,,,"1|hzx24f:",,,,,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,AdnanChoudhury,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/16 7:03 AM;AdnanChoudhury;An in-progress document on the architecture:
https://docs.google.com/a/itpeoplecorp.com/document/d/1FK42pFQZ7LSkB2--POjZQkb5WaiP8GUatH3qJFKhOgs/edit?usp=sharing;;;","28/Dec/16 11:13 AM;grapebaba;hi, this design doc seems not public;;;","04/Jan/17 5:20 AM;AdnanChoudhury;[~grapebaba] You should be able to see it now.;;;","28/Apr/17 4:17 AM;AdnanChoudhury;This was created with Chef tool in mind. Currently, the team is pursuing other solutions due to Chef not being deemed as appropriate for the task (Current work is here: FAB-3337).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Research JIRA stories for Ordered tests,FAB-1434,13843,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,17/Dec/16 12:28 AM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,23/Dec/16 1:04 AM,,,,,fabric-quality,,,,0,,,,,,,,,"Go through JIRA and find what stories with the consensus label and fabric-consensus component have been completed. Compare as to whether there are feature files and scenarios for each story if needed. 

If it seems that a scenario is needed, write a general description of the scenario (not steps) and the associated owner/assignee of the story.
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzx23b:",,,,Unset,,Sprint 8 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 3:39 AM;latitiah;The following were assessed to be the BDD testable consensus/orderer stories that have been completed with the corresponding developer/owner (and questions as applicable):

{quote}
Luis:
- FAB-1253: Send transactions to orderer service larger than 1M (kafka, solo, sbft, ...)
-- What size is considered too larger?
- FAB-1232: Send a ""too larger"" transaction to orderer: (Recv: REQUEST_ENTITY_TOO_LARGE- 413 error)
- FAB-890: Kafka: produce and consume a specific topic (Be sure that different topics work using the same orderer service)
- FAB-890: Kafka: multiple kafka brokers
- FAB-890: Kafka: all kafka brokers go down - what happens?
-- What is ""replication factor 3""?
- FAB-890: Kakfa: Use the partition leader when using a broker connection
- FAB-839: Create per-session buffered channel for broadcast responses
- FAB-708: TLS gRPC certificate interaction
- FAB-507: Each solo orderer client should have a separate flow control window

Kostas:
- FAB-819: Multi-chain support in ordering service
- FAB-998: Config envelope for new chain creation turns into genesis block
- FAB-995: ChainPartition and DataHolder types
-- Not sure what these are exactly...
- FAB-621: Hash-chain for Kafka orderer
-- 2 kafka partitions per chain???
- FAB-701: Authenication of connections between shims and kafka cluster
- FAB-469: Multiple shims operating in parallel
- FAB-467: Orderer config combinations
- FAB-468: Orderer changing maxwindow size and queuesize
- FAB-526: An orderer is able to reconnect, catch up as necessary and continue as if connection was not lost
- FAB-1161: Creating genesis block when setting up broadcaster
-- Be sure to verify the format of the block
- FAB-892: Peer authentication when connecting to an orderer
- FAB-821: Sizing a broadcaster batchchain
-- What may cause this to change and not be a set value for a specific network?
- FAB-899: Orderer Block timeout
- FAB-1092, FAB-1013: Valid configuration envelope created by the orderer which then creates a genesis block
- FAB-817: Add ACL support on the orderer service for channels

Tuan:
- FAB-1094: Utilities to build configuration envelope for the genesis block
- FAB-666: Orderer node should be able to retrieve the genesis block and join the network of nodes
- FAB-666: All orderer nodes should recieve the genesis block
- FAB-666: When an orderer is bootstrapped, the following should be performed: read genesis block, parse and save policies, orderer whitelist, and peer org certificates to correct locations
-- how to you specify what is the correct location? Is this dynamic?

Jason:
- FAB-918: Orderer configs should be processed correctly
-- Namely, ORDERER_KAFKA_RETRY_PERIOD - Anything else?
- FAB-761: gRPC API for broadcast and deliver with the orderer
- FAB-498: Pluggable pieces for the orderer
-- What are all of the pluggable pieces?
- FAB-498: Updating the Policy via a policy manager
-- What are some of the different policies? How can we validate if it is a valid policy?
- FAB-498: Create signature validation DSL for use by filtering framework and later more broad use
-- What is validation DSL?
- FAB-498: Orderer configuration broadcast filter
-- Not sure what this is exactly...

Murali:
- FAB-1192: Be sure that there are multiple blocks and multiple batches (Change block sizes to allow)

Simon:
- FAB-1095: atomic broadcast client needs to receive delivered batches from more than one orderer peer
-- Is this still true? I thought there was communication between 1 orderer node and a peer.
- FAB-967: View timer restarts after recieving a quorum of view change messages
-- ""Quorum"" equates to what exactly?Is this policy driven? ""#peers - 1""?
- FAB-473: SBFT: Interaction with an atomic broadcast client and SBFT orderer
- FAB-478/FAB-472/FAB-604: SBFT: Exchange Peer replica state and state transfer on new connection
-- rotate disconnects and reconnects so that all correct nodes have gaps in their ledgers.  state transfer finally manages to sync everybody to the latest batch.
-- Any other ways to get to this state?
- FAB-603: Limit the number of messages per replica
-- how is this done? Is this configurable?

- FAB-1139: Peer exit with panic when invoking the chaincode (Network unable to find stable certificate) - we do not want to see this error in log
- FAB-1203: Non-vpN peer name
{quote}
;;;","23/Dec/16 12:57 AM;latitiah;Search for this issue included the ""fabric-consensus"" and ""fabric-orderer"" components and ""orderer"" and ""consensus"" labels.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Research JIRA stories for Ledgers Tests,FAB-1435,13844,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,latitiah,latitiah,17/Dec/16 1:21 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,23/Dec/16 1:04 AM,,,,,fabric-quality,,,,0,Ledger,quality,,,,,,,"Go through JIRA and find what stories with the ""ledgers"" label and ""fabric-ledgers"" component have been completed. Compare as to whether there are feature files and scenarios for each story if needed. (may *not* be in the hyperledger/fabric repository under the bddtests directory)

If it seems that a scenario is needed, write a general description of the scenario (not steps) and the associated owner/assignee of the story.

A scenario is a one line test description.

*Output:* A list of scenarios or possible scenarios that will be discussed with a developer/owner. 
",,denyeart,latitiah,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 2:19 AM;Nishi;KVLedger Interface API.odt;https://jira.hyperledger.org/secure/attachment/10324/KVLedger+Interface+API.odt","06/Jan/17 3:21 AM;denyeart;Ledger Completed Stories from JIRA DME comments.docx;https://jira.hyperledger.org/secure/attachment/10366/Ledger+Completed+Stories+from+JIRA+DME+comments.docx","04/Jan/17 2:46 AM;Nishi;Ledger Completed Stories from JIRA.odt;https://jira.hyperledger.org/secure/attachment/10364/Ledger+Completed+Stories+from+JIRA.odt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzx23j:",,,,Unset,,Sprint 8 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,latitiah,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 2:18 AM;Nishi;Please find attached files that have stories from ledger component from JIRA that are already completed.
Here grouped these stories into different functionality/features in Ledger and identified if a BDD end user tests can be accomplished/targeted for the feature.

Also attaching KVLedger interface( has what ledger API is exposed to outside world and function calls that can be used in BDD framework may be) which would then drive most of the BDD tests(tying one or more functionality/features from Ledger component;;;","23/Dec/16 1:03 AM;Nishi;Filtered from Project  ""Fabric"",  ""All standard Issue Types"" & ""All Sub-Task Issue Types""  that have been ""Done"" on label ""Ledger"" to consider feature tests/use cases for Ledger tests.;;;","06/Jan/17 3:21 AM;denyeart;[~Nishi] I added comments to the word doc and uploaded to this jira item.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate a baseline Ledger feature test,FAB-1436,13845,13309,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Nishi,latitiah,latitiah,17/Dec/16 1:25 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Jul/18 11:05 PM,,,,,fabric-quality,,,,0,Ledger,quality,,,,,,,"From the list of Ledger test scenarios, each will be used to detail specific steps when generating behave tests. Choose a scenario or 2 for use when sitting down with a developer to determine what steps are needed in order to complete the test.

*Output:* Detailed test steps or possible scenarios for a behave test (or 2) that will be discussed with a developer/owner, and identify test utilities needed. These test scenarios will be saved (and possibly reformatted) for use as the feature files.
",,AdnanChoudhury,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/17 12:33 AM;Nishi;Ledger Completed Stories from JIRA - BDDTests.odt;https://jira.hyperledger.org/secure/attachment/10403/Ledger+Completed+Stories+from+JIRA+-+BDDTests.odt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg53:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 11:05 PM;AdnanChoudhury;Closing this as Behave ledger tests are part of the fabric-test now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Behave test common language,FAB-1438,13847,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,17/Dec/16 2:04 AM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,22/Apr/17 4:05 AM,,,v1.0.0,,fabric-quality,,,,0,,,,,,,,,"In order to allow for simple writing of feature tests, the behave backend should use common language for execution of steps for the feature files. Once the language is determined, the utilities can be written such that any new component can utilize the tests while keeping the modification of the backend to a minimum.

*Output:* Based on test steps generated, a standard language for feature file tests should be established that can be used across components. ",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Dec/16 11:58 PM;latitiah;common.txt;https://jira.hyperledger.org/secure/attachment/10359/common.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzx247:",,,,Unset,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,,,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Research JIRA stories for Endorser Tests,FAB-1439,13848,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,DanielleHancock,DanielleHancock,17/Dec/16 2:05 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,23/Dec/16 1:04 AM,,,,,fabric-quality,,,,0,endorser,quality,,,,,,,"Go through JIRA and find what stories with the ""fabric-endorsers"" component have been completed. Compare as to whether there are feature files and scenarios for each story if needed. (may not be in the hyperledger/fabric repository under the bddtests directory)

If it seems that a scenario is needed, write a general description of the scenario (not steps) and the associated owner/assignee of the story.

A scenario is a one line test description.

Output: A list of scenarios or possible scenarios that will be discussed with a developer/owner.
",,DanielleHancock,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzx23r:",,,,Unset,,Sprint 8 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,DanielleHancock,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 5:24 AM;Ratnakar;*scenarios for Component : fabric-endorser*
FAB-181: Deploy a chaincode to a Peer and make it an Endorser for the chaincode 
FAB-182: Deploy a chaincode to a Peer along with name of the custom ESCC and VSCC and make it an Endorser for the chaincode 
(FAB-314: Add ESCC and VSCC support to endorse BDD) 
FAB-183 : As an authorized user, I want to upgrade chaincode 
FAB-799 : Concurrent chaincode execution 
          (few scenarios 
           a. Deploy multiple chaincodes and send transactions concurrent to each chaincode 
           b. Invoke concurrent transactions on a single chaincode - This might not work as expected, but need to see what can be done here) 
FAB-1022: Call gossip when a peer join channel 
FAB-1025 : Query configuration block of a chain 
FAB-497: Create system chaincode at the peer to handle configuration changes 
FAB-1297: add tests to excercise multichain in chaincode framework 
FAB-756:  Endorser GRPC API (Is this valid for BDD?) 
FAB-23: As an application developer, I want to provide friendly name to identify a chain code, so I can more easily manage and debug chain code. 
FAB-434: As a Committer I want to get a batch and turn it into a Block

FAB-781: An endorser peer endorses a transaction against a certain chain according to the chain ID provided in the protocol;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate a baseline Endorser feature test,FAB-1440,13849,16637,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,DanielleHancock,DanielleHancock,17/Dec/16 2:07 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Apr/17 3:27 AM,,,,,fabric-quality,,,,0,endorser,quality,,,,,,,"From the list of Endorser test scenarios, each will be used to detail specific steps when generating behave tests. Choose a scenario or 2 for use when sitting down with a developer to determine what steps are needed in order to complete the test.

*Output:* Detailed test steps or possible scenarios for a behave test (or 2) that will be discussed with a developer/owner, and identify test utilities needed. These test scenarios will be saved (and possibly reformatted) for use as the feature files.",,DanielleHancock,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 9:33 AM;Ratnakar;endorser-new.feature;https://jira.hyperledger.org/secure/attachment/10376/endorser-new.feature",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx1un:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DanielleHancock,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,,,,,,true,"28/Dec/16 2:30 AM;Ratnakar;FAB-181: Deploy a chaincode to a Peer and make it an Endorser for the chaincode 

1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? )
2. Register an authorized user binhn with CA supplying the user credentials
3. user binhn creates a chaincode spec of type ""GOLANG"" for chaincode ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with name ""mycc1"" with args [""init"", ""a"", ""100"" , ""b"", ""200""]
( Command : ""peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{""Args"":[""init"",""1000""]}' "")
4. user ""binhn"" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize())
5. user ""binhn"" creates a deployment proposal from chaincode deployment spec created above
6. user ""binhn"" sends proposal to endorsers
7. Then user ""binhn"" expects valid proposal responses with status ""200"" from endorser vp0 

(FAB-23: As an application developer, I want to provide friendly name to identify a chain code, so I can more easily manage and debug chain code. 
         This can be part of FAB-181)
--------------------------------------------------------


FAB-182: Deploy a chaincode to a Peer along with name of the custom ESCC and VSCC and make it an Endorser for the chaincode 
There is already sub task relevant to BDD exits item FAB-314 (In progress)

--------------------------------------------------------

FAB-183 : As an authorized user, I want to upgrade chaincode.

1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? )
2. Register an authorized user binhn with CA supplying the user credentials
3. user binhn creates a chaincode spec of type ""GOLANG"" for chaincode ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01""  with name ""mycc1"" with args [""init"", ""a"", ""100"" , ""b"", ""200""]
( Command : ""peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{""Args"":[""init"", ""a"", ""100"" , ""b"", ""200""]}' "")
4. user ""binhn"" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize())
5. user ""binhn"" creates a deployment proposal from chaincode deployment spec created above
6. user ""binhn"" sends proposal to endorsers
7. Then user ""binhn"" expects valid proposal responses with status ""200"" from endorser vp0 
8. user binhn sends an query (invoke ?) request with args [""query"",""a"",""b"",""10""]
9  received an invalid response or an error (Invalid invoke function name)
10. user binhn Updates chaincode with examploe02
    peer chaincode update -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{""Args"":[""init"", ""a"", ""100"" , ""b"", ""200""]}'
11. Then user ""binhn"" received a valid deploy proposal responses with status ""200"" from endorser vp0 
12. user binhn sends an query (invoke ?) request with args [""query"",""a""] and receives the response with expected value ""100""

These covers the above
FAB-1237: new ""upgrade"" command to CLI
FAB-1238: implement ""upgrade"" command in Life Cycle System Chaincode (lccc.go)

--------------------------------------------------------

FAB-434: As a Committer I want to get a batch and turn it into a Block
1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? )
2. Register an authorized user binhn with CA supplying the user credentials
3. user binhn creates a chaincode spec of type ""GOLANG"" for chaincode ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with name ""mycc1"" with args [""init"", ""a"", ""100"" , ""b"", ""200""]
( Command : ""peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{""Args"":[""init"",""1000""]}' "")
4. user ""binhn"" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize())
5. user ""binhn"" creates a deployment proposal from chaincode deployment spec created above
6. user ""binhn"" sends proposal to endorsers
7. Then user ""binhn"" expects valid proposal responses with status ""200"" from endorser vp0
8. user ""binhn"" sends multiple (Howmany ?) invokes simultaneously and check if the Block is created successfully for all the transactions 
   (How to check the block height ?)
TODO: Need to discuss with Murali.
--------------------------------------------------------
FAB-497: Create system chaincode at the peer to handle configuration changes 
 Should this be split in to three usecases ?
 Need to discuss with Murali and Bin on the following
  1. How to send the configuration changes to the peer (Is there a list of congiguration changes defined)
  2. I could see this JIRA item is in completed state , but dependent JIRA items (FAB-914, 915 & 916) are not in completed state.
--------------------------------------------------------
FAB-799 : Concurrent chaincode execution 
          (few scenarios 
           a. Deploy multiple chaincodes and send transactions concurrent to each chaincode 
           b. Invoke concurrent transactions on a single chaincode - This won't work as expected) 
(a)
1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? )
2. Register an authorized user binhn with CA supplying the user credentials
3. user binhn creates a chaincode spec of type ""GOLANG"" for chaincode ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with name ""mycc1"" with args [""init"", ""a"", ""100"" , ""b"", ""200""]
( Command : ""peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{""Args"":[""init"",""1000""]}' "")
4. user ""binhn"" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize())
5. user ""binhn"" creates a deployment proposal from chaincode deployment spec created above
6. user ""binhn"" sends proposal to endorsers
7. Then user ""binhn"" expects valid proposal responses with status ""200"" from endorser vp0 
8. repeat steps 3 - 7 few more times with different chaincode names mycc2, mycc3 etc.,
9. user binhn sends invoke request with args [""invoke"",""a"", ""b"", ""10""] simultaneously on all the chaincodes
10. user binhn sends query (invoke ?) request with args [""query"",""a""] on all chaincodes and receives the response with expected value ""100""

(b) Need to have custom chaincode to achieve this ?
--------------------------------------------------------
*TODO*: Need to disucuss with Murali/Binhn to understand on how to call CSCC with parameters etc., (need to discuss below)

FAB-1022: Call gossip when a peer join channel 
FAB-1025 : Query configuration block of a chain 
FAB-756:  Endorser GRPC API ( allow submitting a Proposal on a edorser peer and for app to tell a peer to join a channel)
--------------------------------------------------------;;;","28/Apr/17 3:27 AM;Ratnakar;Added the required feature files, closing this task;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Behave backend utilities,FAB-1441,13850,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,17/Dec/16 2:07 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,18/Apr/18 2:53 AM,,,v1.0.0,,fabric-quality,,,,0,,,,,,,,,"A test writer should be able to write feature tests using backend utilities to drive the tests such that any new test scenario can utilize the APIs while keeping the modification of the backend to a minimum.

*Output:* back-end utility functionality that drives the feature files. These utilities will include (but not limited to): 
 * docker_util 
 * remote_util
 * grpc_util
 * shell_util
",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzx2tr:",,,,Unset,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 19 - Quality,,,,,,5.0,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dependabot/go_modules/regression/publish/golang.org/x/sys-0.1.0,dependabot/go_modules/tools/operator/k8s.io/client-go-0.20.0,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/golang.org/x/net-0.7.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/net-0.7.0,dependabot/go_modules/regression/barebones/golang.org/x/net-0.7.0,dependabot/go_modules/tools/gotools/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/smoke/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/smoke/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/publish/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/smoke/golang.org/x/text-0.3.8,release-2.5,release-2.4,lindluni-patch-1,dependabot/go_modules/regression/publish/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/barebones/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/basicnetwork/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/chaincode-integration/resources/chaincode/simple-go/golang.org/x/text-0.3.8,dependabot/go_modules/regression/publish/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/publish/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/net-0.7.0,dependabot/go_modules/regression/smoke/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/basicnetwork/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/golang.org/x/text-0.3.8,revert-342-mergify/bp/main/pr-340,dependabot/go_modules/regression/smoke/k8s.io/client-go-0.20.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/publish/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/regression/basicnetwork/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/tools/operator/golang.org/x/text-0.3.8,dependabot/go_modules/tools/operator/golang.org/x/net-0.7.0,dependabot/go_modules/regression/basicnetwork/golang.org/x/text-0.3.8,dependabot/go_modules/regression/smoke/golang.org/x/crypto-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/sys-0.1.0,dependabot/go_modules/regression/barebones/golang.org/x/crypto-0.1.0,dependabot/go_modules/tools/operator/github.com/opencontainers/runc-1.1.5,dependabot/go_modules/regression/barebones/k8s.io/client-go-0.20.0,dependabot/go_modules/tools/operator/github.com/docker/docker-20.10.24incompatible,dependabot/go_modules/chaincodes/marbles02_private/go/golang.org/x/net-0.7.0,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend sharedconfig with BatchTimeout getter,FAB-1443,13852,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,18/Dec/16 3:22 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,25/Dec/16 2:11 PM,,,,,fabric-orderer,,,,0,,,,,,,,,"The solo consenter fetches the batch timeout value from the local config file, however this value belongs to the shared config.

- Define a BatchTimeout configuration proto message
- Define a BatchTimeoutKey for the ProposeConfig mechanism
- Extend the sharedconfig.Manager interface with a BatchTimeout getter
- Modify the solo consenter so that it fetches the value from the sharedconfig manager via the ConsenterSupport object",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg5j:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/16 1:17 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3461/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move Signature of Gossip message to the GossipMessage body,FAB-1444,13853,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,18/Dec/16 5:53 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 4:13 AM,,,,,,,,,0,gossip,,,,,,,,"Currently the signatures of various messages in gossip are inside the inner type, i.e: 
{code:borderStyle=solid}
message AliveMessage {
    Member membership  = 1;
    PeerTime timestamp = 2;
    bytes signature    = 3;
    bytes identity     = 4;
}
{code}

It's better to move the messages to the above level of the GossipMessage that encapsulates all messages, so it'll be:
{code:borderStyle=solid}
message GossipMessage {

    // used mainly for testing, but will might be used in the future
    // for ensuring message delivery by acking
    uint64 nonce  = 1;

    // The channel of the message.
    // Some GossipMessages may set this to nil, because
    // they are cross-channels but some may not
    bytes channel = 2;


    enum Tag {
        UNDEFINED    = 0;
        EMPTY        = 1;
        ORG_ONLY     = 2;
        CHAN_ONLY    = 3;
        CHAN_AND_ORG = 4;
    }
    Tag tag = 3;
    oneof content {
     // This is where the inner message resides
    . . .
    }
   bytes signature = n
}
{code}

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxg5r:",,,,,,Sprint 7 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor gossip multi-channel related API,FAB-1445,13854,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,yacovm,yacovm,18/Dec/16 6:26 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,10/Apr/17 6:51 AM,,,,,,,,,0,,,,,,,,,,,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxg5z:",,,,,,Sprint 7 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/17 8:11 PM;yacovm;Shall we mark this as done? I don't think this is relevant anymore;;;","10/Apr/17 6:51 AM;C0rWin;[~yacovm] indeed, closing it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add safesql to CI for go-based components,FAB-1446,13855,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,jtclark,ChristopherFerris,ChristopherFerris,18/Dec/16 11:35 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/May/18 6:40 AM,,,v1.2.0,,fabric-quality,,,,0,build-system,Security,,,,,,,Add https://github.com/stripe/safesql to our CI pipelines for all golang components that utilize a database. This will enhance our security by finding any potential SQL injection vulnerabilities before they are merged.,,ChristopherFerris,jasondotstar,JonathanLevi,jtclark,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx2s7:",,,,,,Sprint 7 - Quality,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 19 - Quality,,,2.0,,,,,,,,,,,,ChristopherFerris,jasondotstar,JonathanLevi,jtclark,rameshthoomu,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Apr/17 10:25 PM;rameshthoomu;Will work on this;;;","31/May/17 12:30 AM;jasondotstar;[~rameshthoomu], I've taken ownership of this issue.;;;","01/Jun/17 9:16 PM;ChristopherFerris;[~jasondotstar] note that I think this is only needed for fabric-ca. fabric uses no SQL at this point.;;;","17/Jun/17 12:17 AM;jasondotstar;Currently working on identifying all of the packages within fabric-ca that use SQL.  These are the packages that will be scanned by safesql.;;;","11/Jul/17 5:26 AM;jtclark;Working on getting safesql running against the fabric-ca code.  Afterwards, a patch will be submitted to add this to the Jenkins sandbox.;;;","13/Jul/17 9:47 AM;jtclark;[https://gerrit.hyperledger.org/r/#/c/11595/] has been prepared to address this JIRA task. [~rameshthoomu], [~jwagantall], and [~ryjones] - Please review.;;;","18/Jul/17 12:53 AM;jtclark;Update:

After speaking with [~smithbk] on the #fabric-ca channel, there is an additional way to solve this issue. Invoking safesql can be achieved by running it via a script inside the FVT (fabric-ca/scripts/fvt) test directory.  I've prepped an addition patch for review:

[https://gerrit.hyperledger.org/r/#/c/11687|https://gerrit.hyperledger.org/r/#/c/11687/];;;","25/Jul/17 11:54 PM;jtclark;UPDATE: The new patch mentioned above([https://gerrit.hyperledger.org/r/#/c/11687/]) has been tested both locally, and on the Jenkins sandbox. 

Test Results display as follows:
{code:java}
13:50:59 *******************
 13:50:59 /opt/gopath/src/github.com/hyperledger/fabric-ca/scripts/fvt/safesql_test.sh
 13:50:59 *******************
 13:51:05 database/sql functions that accept queries:
 13:51:05 - func (*database/sql.DB).Prepare(query string) (*database/sql.Stmt, error) (param 0)
 13:51:05 - func (*database/sql.DB).Exec(query string, args ...interface{}) (database/sql.Result, error) (param 0)
 13:51:05 - func (*database/sql.DB).Query(query string, args ...interface{}) (*database/sql.Rows, error) (param 0)
 13:51:05 - func (*database/sql.DB).QueryRow(query string, args ...interface{}) *database/sql.Row (param 0)
 13:51:05 - func (*database/sql.Tx).Prepare(query string) (*database/sql.Stmt, error) (param 0)
 13:51:05 - func (*database/sql.Tx).Exec(query string, args ...interface{}) (database/sql.Result, error) (param 0)
 13:51:05 - func (*database/sql.Tx).Query(query string, args ...interface{}) (*database/sql.Rows, error) (param 0)
 13:51:05 - func (*database/sql.Tx).QueryRow(query string, args ...interface{}) *database/sql.Row (param 0)
 13:51:05 
 13:51:05 Did not find any commands (i.e., main functions).
 13:51:05 
 13:51:05 #########################################################################
 13:51:05 RC: 0, safesql_test.sh PASSED
 13:51:05 0 minutes, 6 seconds runtime
 13:51:05 TIMESTAMP--2017-07-25 01:51:05PM safesql_test.sh ENDED
 13:51:05 #########################################################################
 13:51:05 TIMESTAMP--2017-07-25 01:51:05PM
 13:51:05 safesql_test.sh test ended.{code}

  

 ;;;","31/Jul/17 11:16 PM;jtclark;*Status update:*

Additional reviewers have been added to [https://gerrit.hyperledger.org/r/#/c/11687/.]  Peer reviews have identified that the Safesql tool looks for main() functions inside the packages being tested for SQL injections.  The fabric-ca packages in question, lib/ and lib/dbutil, do not utilize main functions, so to the tool exits with a '2' return code.

Need to ask the maintainers of the fabric-ca project for additional guidance on this.;;;","09/Aug/17 2:29 AM;jtclark;*Status update:*

The [https://gerrit.hyperledger.org/r/#/c/11687/] patch has been amended to push a change to the *safesql_test.sh* script.  A reviewer discovered that the safesql cmd was not actually running a true test of the fabric-ca project. The safesql tool command begins scanning for sql injections by looking for the main() function in each of the go packages requested for scanning.  Since the lib/ and lib/dbutil packages do not have a main function, the safesql tool would simply exit with a return code of '2'.

The safesql_test.sh script was modified (in TEST/DEV) to run against the fabric-ca-client and fabric-ca-server directories, both containing the main() function(s) that safesql expects.  With this modification, a test was run on the Jenkins sandbox server. Below are the results:

{code:java}
15:01:22 *******************
15:01:22 /opt/gopath/src/github.com/hyperledger/fabric-ca/scripts/fvt/safesql_test.sh
15:01:22 *******************
15:01:31 database/sql functions that accept queries:
15:01:31 - func (*database/sql.DB).Prepare(query string) (*database/sql.Stmt, error) (param 0)
15:01:31 - func (*database/sql.DB).Exec(query string, args ...interface{}) (database/sql.Result, error) (param 0)
15:01:31 - func (*database/sql.DB).Query(query string, args ...interface{}) (*database/sql.Rows, error) (param 0)
15:01:31 - func (*database/sql.DB).QueryRow(query string, args ...interface{}) *database/sql.Row (param 0)
15:01:31 - func (*database/sql.Tx).Prepare(query string) (*database/sql.Stmt, error) (param 0)
15:01:31 - func (*database/sql.Tx).Exec(query string, args ...interface{}) (database/sql.Result, error) (param 0)
15:01:31 - func (*database/sql.Tx).Query(query string, args ...interface{}) (*database/sql.Rows, error) (param 0)
15:01:31 - func (*database/sql.Tx).QueryRow(query string, args ...interface{}) *database/sql.Row (param 0)
15:01:31 
15:01:39 Found 14 potentially unsafe SQL statements:
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:618:21
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:673:20
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:404:23
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/named.go:335:15
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:281:20
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:178:19
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:268:19
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:341:26
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:332:23
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:618:21
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/named.go:335:15
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:673:20
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:415:26
15:01:39 - /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/jmoiron/sqlx/sqlx.go:406:23
15:01:39 Please ensure that all SQL queries you use are compile-time constants.
15:01:39 You should always use parameterized queries or prepared statements
15:01:39 instead of building queries from strings.
15:01:39 
15:01:39 #########################################################################
15:01:39 RC: 0, safesql_test.sh PASSED
15:01:39 0 minutes, 17 seconds runtime
15:01:39 TIMESTAMP--2017-08-07 03:01:39PM safesql_test.sh ENDED
15:01:39 #########################################################################
15:01:39 TIMESTAMP--2017-08-07 03:01:39PM
15:01:39 safesql_test.sh test ended.
{code}

From this output, we can see that the safesql tool now reports with valid input. However, two new issues have come up:

1. The safesql tool does not have a 'skip' option, allowing us to simply skip the scanning of vendor packages.
2. The safesql tool does not support sqlx. An issue has been raised on the project to add sqlx support.;;;","09/Aug/17 6:46 AM;smithbk;It seems to me that we need to evaluate each of the ""14 potentially unsafe SQL statements"" above to see which pose real threats.
For all that pose a real threat, we need to fix them whether they are in vendor packages or not.
For those that don't pose a real threat, we should filter them out so the build does not fail.;;;","30/Jan/18 5:13 AM;jtclark;Currently working on exposing the ""potentially unsafe SQL statements"" as reported by the safeql tool when ran against the fabric-ca code base. Currently the FVT test that encapsulates all of the test scripts displays the test as PASSED, and does not expose the potentially unsafe queries:

{code:java}
 18:32:36 Running fvt tests ...
 18:32:36 
 18:32:36 *******************
 18:33:22 Running backwards_comp_test.sh-TLS-true PASSED
 18:33:23 *******************
 18:33:35 Running cdp_exploit_test.sh-TLS-true PASSED
 18:33:36 *******************
 18:36:29 Running cluster_test.sh-TLS-true PASSED
 18:36:29 *******************
 18:36:59 Running db_test.sh-TLS-true 2018-01-29T18:36:59.650431Z mysqld_safe mysqld from pid file /var/run/mysqld/mysqld.pid ended
 18:37:03 PASSED
 18:37:04 *******************
 18:38:04 Running dbmigration_test.sh-TLS-true PASSED
 18:38:05 *******************
 18:39:30 Running enrollments_test.sh-TLS-true PASSED
 18:39:30 *******************
 18:39:32 Running gencsr_test.sh-TLS-true PASSED
 18:39:32 *******************
 18:39:43 Running group_test.sh-TLS-true PASSED
 18:39:43 *******************
 18:40:40 Running intermediateca_test.sh-TLS-true PASSED
 18:40:41 *******************
 18:41:53 Running keys_test.sh-TLS-true PASSED
 18:41:53 *******************
 18:42:03 Running ldap_test.sh-TLS-true PASSED
 18:42:03 *******************
 18:46:12 Running multica_test.sh-TLS-true PASSED
 18:46:13 *******************
 18:46:55 Running passwordsInLog_test.sh-TLS-true PASSED
 18:46:56 *******************
 18:47:05 Running postgres_test.sh-TLS-true PASSED
 18:47:05 *******************
 18:48:49 Running reenroll_test.sh-TLS-true PASSED
 18:48:49 *******************
 18:49:34 Running reregister_test.sh-TLS-true PASSED
 18:49:35 *******************
 18:50:36 Running revoke_test.sh-TLS-true PASSED
 18:50:37 *******************
 18:52:04 Running roundrobin_test.sh-TLS-true PASSED
 18:52:04 *******************
 18:52:28 Running safesql_test.sh-TLS-true PASSED
 18:52:28 *******************
 18:52:28 Running version_test.sh-TLS-true PASSED
 18:52:29 *******************
 18:53:03 Running backwards_comp_test.sh-TLS-false PASSED
 18:53:03 *******************
 18:53:15 Running cdp_exploit_test.sh-TLS-false PASSED
 18:53:15 *******************
 18:55:46 Running cluster_test.sh-TLS-false PASSED
 18:55:46 *******************
 18:56:18 Running db_test.sh-TLS-false PASSED
 18:56:19 *******************
 18:57:10 Running dbmigration_test.sh-TLS-false PASSED
 18:57:10 *******************
 18:58:29 Running enrollments_test.sh-TLS-false PASSED
 18:58:29 *******************
 18:58:32 Running gencsr_test.sh-TLS-false PASSED
 18:58:32 *******************
 18:58:46 Running group_test.sh-TLS-false PASSED
 18:58:46 *******************
 18:59:29 Running intermediateca_test.sh-TLS-false PASSED
 18:59:30 *******************
 19:00:54 Running keys_test.sh-TLS-false PASSED
 19:00:55 *******************
 19:01:01 Running ldap_test.sh-TLS-false PASSED
 19:01:02 *******************
 19:05:52 Running multica_test.sh-TLS-false PASSED
 19:05:53 *******************
 19:06:34 Running passwordsInLog_test.sh-TLS-false PASSED
 19:06:35 *******************
 19:06:45 Running postgres_test.sh-TLS-false PASSED
 19:06:46 *******************
 19:09:06 Running reenroll_test.sh-TLS-false PASSED
 19:09:06 *******************
 19:09:47 Running reregister_test.sh-TLS-false PASSED
 19:09:48 *******************
 19:10:50 Running revoke_test.sh-TLS-false PASSED
 19:10:51 *******************
 19:12:39 Running roundrobin_test.sh-TLS-false PASSED
 19:12:40 *******************
 19:12:59 Running safesql_test.sh-TLS-false PASSED
 19:13:00 *******************
 19:13:00 Running version_test.sh-TLS-false PASSED
 19:13:00 RC: 0, backwards_comp PASSED
 19:13:00 RC: 0, cdp_exploit_test.sh-TLS-true PASSED
 19:13:00 RC: 0, cluster_test.sh-TLS-true PASSED
 19:13:00 RC: 0, db_test.sh-TLS-true PASSED
 19:13:00 RC: 0, db_migration PASSED
 19:13:00 RC: 0, enrollments_test.sh-TLS-true PASSED
 19:13:00 RC: 0, gencsr_test.sh-TLS-true PASSED
 19:13:00 RC: 0, group_test.sh-TLS-true PASSED
 19:13:00 RC: 0, intermediateca_test.sh-TLS-true PASSED
 19:13:00 RC: 0, keys_test.sh-TLS-true PASSED
 19:13:00 RC: 0, ldap_test.sh-TLS-true PASSED
 19:13:00 RC: 0, multica_test.sh-TLS-true PASSED
 19:13:00 RC: 0, passwordsInLog_test.sh-TLS-true PASSED
 19:13:00 RC: 0, postgres PASSED
 19:13:00 RC: 0, reenroll_test.sh-TLS-true PASSED
 19:13:00 RC: 0, reregister_test.sh-TLS-true PASSED
 19:13:00 RC: 0, revoke_test.sh-TLS-true PASSED
 19:13:00 RC: 0, roundrobin_test.sh-TLS-true PASSED
 19:13:00 RC: 0, safesql_test.sh-TLS-true PASSED
 19:13:00 RC: 0, version_test.sh-TLS-true PASSED
 19:13:00 RC: 0, backwards_comp PASSED
 19:13:00 RC: 0, cdp_exploit_test.sh-TLS-false PASSED
 19:13:00 RC: 0, cluster_test.sh-TLS-false PASSED
 19:13:00 RC: 0, db_test.sh-TLS-false PASSED
 19:13:00 RC: 0, db_migration PASSED
 19:13:00 RC: 0, enrollments_test.sh-TLS-false PASSED
 19:13:00 RC: 0, gencsr_test.sh-TLS-false PASSED
 19:13:00 RC: 0, group_test.sh-TLS-false PASSED
 19:13:00 RC: 0, intermediateca_test.sh-TLS-false PASSED
 19:13:00 RC: 0, keys_test.sh-TLS-false PASSED
 19:13:00 RC: 0, ldap_test.sh-TLS-false PASSED
 19:13:00 RC: 0, multica_test.sh-TLS-false PASSED
 19:13:00 RC: 0, passwordsInLog_test.sh-TLS-false PASSED
 19:13:00 RC: 0, postgres PASSED
 19:13:00 RC: 0, reenroll_test.sh-TLS-false PASSED
 19:13:00 RC: 0, reregister_test.sh-TLS-false PASSED
 19:13:00 RC: 0, revoke_test.sh-TLS-false PASSED
 19:13:00 RC: 0, roundrobin_test.sh-TLS-false PASSED
 19:13:00 RC: 0, safesql_test.sh-TLS-false PASSED
 19:13:00 RC: 0, version_test.sh-TLS-false PASSED
 19:13:00 Finished running fvt tests
 19:13:00 
 19:13:00 #########################################################################
 19:13:00 RC: 0, fabric-ca-fvt PASSED
 19:13:00 40 minutes, 24 seconds runtime
 19:13:00 TIMESTAMP--2018-01-29 07:13:00PM fabric-ca-fvt ENDED
 19:13:00 #########################################################################
 19:13:00 TIMESTAMP--2018-01-29 07:13:00PM
 19:13:00 fabric-ca-fvt test ended.
{code}

Currently working on failing this test if there are any potentially unsafe SQL statements included in the code base.
;;;","06/Feb/18 11:08 PM;jtclark;Status Update:

The safesql_test.sh now attempts to redirect the output of the test to a temporary file. This file will be analyzed to determine if any ""warnings"" or ""failures"" were received as a result of running the safesql tool against the fabric-ca-client and fabric-ca-server directories inside of the fabric-ca project. Once we are able to parse the output, we can alter the return code to ""fail"" the test if anything is received other than:
*_""You're safe from SQL injection! Yay \o/""_* (as indicated here: https://github.com/stripe/safesql#usage);;;","07/Feb/18 10:02 AM;jtclark;Update
======

The *safesql_test.sh* script was updated to check for failures while running the safesql tool, and exit with a RC of 1 if any failures were found. Output from the FVT test script that runs as part of the fabric-ca-verify job now outputs as follows:

{code:java}
23:34:29  Running safesql_test.sh-TLS-false FAILED
23:34:29  ****** ERROR ****** safesql_test.sh-TLS-false failed 
23:34:29 
23:34:29 #########################################################################
23:34:29 RC: 1, safesql_test.sh-TLS-false FAILED
23:34:29 0 minutes, 13 seconds runtime
23:34:29 TIMESTAMP--2018-02-06 11:34:29PM safesql_test.sh-TLS-false ENDED
23:34:29 #########################################################################
23:34:29 TIMESTAMP--2018-02-06 11:34:29PM
23:34:29 safesql_test.sh-TLS-false test ended.
23:34:29 RC: 1, safesql_test.sh-TLS-false FAILED
23:34:29 Finished running fvt tests
{code}

Last items we need on this task are:

1.) Display the error output on failure
2.) Attempt to provide a --skip option (in the event that the warnings or failures are false positives)
;;;","08/Feb/18 7:08 AM;jtclark;Patch has been submitted: https://gerrit.hyperledger.org/r/#/c/17649/;;;","13/Feb/18 5:53 AM;jtclark;A new patch has been submitted: https://gerrit.hyperledger.org/r/#/c/17809/.

This newest version of the script runs the SafeSql tool against the fabric-ca-client and fabric-ca-server directories inside of the fabric-ca project, passes when there are no issues, and fails when potentially unsafe SQL injections are discovered. 

The $RC is updated to a fail when this happens, thereby failing the FVT tests as a whole, which is the expected behavior. Currently when the script runs, 61 potentially unsafe SQL queries are identified within the fabric-ca codebase.

I've talked this over with [~rameshthoomu], [~rennman], and [~ry] who've asked me to review the test results with the fabric-ca development team, namely [~smithbk]. Once we have either resolved these issues and/or identified them as false positives, the above changed will be merged.;;;","13/Feb/18 6:55 PM;jtclark;Code Review +2. Waiting for Merge.;;;","27/Feb/18 11:36 PM;jtclark;Code Review +2 was removed by [~smithbk]. Checking w/ him to see what the status is on validating the test results.;;;","28/Feb/18 4:18 AM;jtclark;_Comments from [~smithbk] on the patch:_

Just looking at the safesql findings and seems like a lot of false positives ... although I haven't yet gone thru all 61 yet.
At https://github.com/stripe/safesql#how-does-it-work, it says `or incorporate them using the package's safe placeholder mechanism`
The ones found are using what I would consider the packages placeholder mechanism
For example:

{code}
        stateUpdateSQL := ""UPDATE users SET state = -1 WHERE (id = ?)""

        res, err := u.db.Exec(u.db.Rebind(stateUpdateSQL), u.GetName())
{code} 

uses ? to search for a particular user
It honestly doesn't seem very helpful if it is going to flag all of these, because it really isn't possible to make all query strings constants




 ;;;","03/Mar/18 5:26 AM;jtclark;Planning to meet with [~smithbk], [~rameshthoomu], and [~denyeart] next week to discuss next steps on this task.;;;","06/Mar/18 11:31 AM;jtclark;Still need to catch up with [~smithbk], [~rameshthoomu], and [~denyeart] about this.;;;","13/Mar/18 1:26 AM;jtclark;[~denyeart] - ""Let's wait until 1.2."" - https://gerrit.hyperledger.org/r/#/c/17809/;;;","06/Apr/18 10:18 PM;jtclark;[~ChristopherFerris] has informed us (https://gerrit.hyperledger.org/r/#/c/17809/) that we need to return working on this issue. At this point, we'll need to make a decision on what we're going to do with the ""potentially unsafe queries"".

[~denyeart], [~smithbk], [~rameshthoomu] - Please advise.;;;","11/Apr/18 3:47 AM;jtclark;Spoke about this JIRA task during the #fabric-scrum meeting on 4/6/2018. The suggestion was made by [~ashutosh_kumar] to create a non-voting job to cover these tests. 

The plan is to create a weekly job, much like the fabric-goast-weekly-x86_64 job, and run the safesql script as a test script separate from the FVT test scripts being used currently.;;;","18/Apr/18 10:03 AM;jtclark;Two patches have been prepared to test the approach mentioned above:

* https://gerrit.hyperledger.org/r/#/c/20695/ - Adds the run_safesql_scan script to the fabric-ca repo
* https://gerrit.hyperledger.org/r/#/c/20681/ - Adds the fabric-ca-safesql-weekly job to Jenkins

Both patches are in-review, and [~sambhavdutt] is testing this in our sandbox.;;;","19/Apr/18 10:21 AM;jtclark;Re-tested this today. The scan is working. Here are the results from running the run_safesql_scan script as part of the fabric-ca-safesql-weekly job:


{code:java}
21:25:53 Found 61 potentially unsafe SQL statements:
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:1016:23
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:1115:23
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:1079:23
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:944:23
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:317:20
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:421:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:425:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:429:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:92:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:210:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:238:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:299:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbutil/dbutil.go:330:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:447:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:427:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:438:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:454:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:205:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:748:21
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:774:25
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:1016:35
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/certdbaccessor.go:222:49
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:635:39
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:648:38
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:555:44
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/certdbaccessor.go:155:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/certdbaccessor.go:222:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/certdbaccessor.go:261:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:555:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/cloudflare/cfssl/certdb/sql/database_accessor.go:136:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/cloudflare/cfssl/certdb/sql/database_accessor.go:255:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/cloudflare/cfssl/certdb/sql/database_accessor.go:166:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/cloudflare/cfssl/certdb/sql/database_accessor.go:181:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/cloudflare/cfssl/certdb/sql/database_accessor.go:151:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/cloudflare/cfssl/certdb/sql/database_accessor.go:270:19
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/certdbaccessor.go:183:16
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:475:16
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:289:16
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:601:27
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:608:26
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:635:27
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:648:26
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:575:26
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:427:29
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:438:29
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:748:31
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:821:44
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:215:23
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:361:17
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:369:17
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:402:17
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:519:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:524:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:705:17
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:726:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:828:17
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:821:18
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:396:14
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:200:15
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:697:15
21:25:53 - /w/workspace/fabric-ca-safesql-weekly-x86_64/gopath/src/github.com/hyperledger/fabric-ca/lib/dbaccessor.go:803:21
21:25:53 Please ensure that all SQL queries you use are compile-time constants.
21:25:53 You should always use parameterized queries or prepared statements
21:25:53 instead of building queries from strings.
21:25:53 
21:25:53 #########################################################################
21:25:53 RC: 1, safesql FAILED
21:25:53 0 minutes, 12 seconds runtime
21:25:53 TIMESTAMP--2018-04-18 09:25:53PM safesql ENDED
21:25:53 #########################################################################
{code}

Last thing is to ensure that a log of the weekly scan is publish to Nexus.  Also need to fix the @weekly frequency on the scan job as suggested by [~bramwelt].;;;","27/Apr/18 3:12 AM;jtclark;Here is the output from the most recent version of the fabric-ca-safesql-weekly job: 

https://gist.github.com/ibm-jason/ae6300fe98f0153c00d9fe81a39c02c0;;;","30/Apr/18 9:42 PM;jtclark;Both patches are still in review:

https://gerrit.hyperledger.org/r/#/c/20695/ - Adds the run_safesql_scan script to the fabric-ca repo
https://gerrit.hyperledger.org/r/#/c/20681/ - Adds the fabric-ca-safesql-weekly job to Jenkins

Waiting for confirmation from [~skarim] and/or [~smithbk] from the fabric-ca team.
;;;","03/May/18 7:20 AM;jtclark;https://gerrit.hyperledger.org/r/#/c/20681/ - MERGED
https://gerrit.hyperledger.org/r/#/c/20695/ - Ready to Submit;;;",,,,,
Broadcaster should exit normally at EOF,FAB-1447,13856,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,inatatsu,inatatsu,19/Dec/16 6:05 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Dec/16 1:47 AM,,,v1.0.0,,fabric-orderer,,,,0,quality,,,,,,,,"When I deploy large chaincode with about 3.7K lines by using a Node SDK client, I observe the following error at closing the connection between the SDK and the orderer:
{code:java}
debug: [Orderer.js]: Orderer.sendBroadcast - on end:
  Error: Error: EOF
      at ClientDuplexStream.<anonymous> (/fabric-sdk-node/hfc/lib/Orderer.js:128:19)
      at emitOne (events.js:96:13)
      at ClientDuplexStream.emit (events.js:188:7)
      at ClientDuplexStream._emitStatusIfDone (/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:192:12)      at ClientDuplexStream._readsDone (/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:158:8)
      at readCallback (/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:229:12)
{code}
When I modify broadcast.(*broadcaster).queueEnvelopes() to exit normally at io.EOF, sendBroadcast() successfully ends.",,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg67:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Dec/16 6:50 PM;inatatsu;https://gerrit.hyperledger.org/r/#/c/3391/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Added getPkiID to the gossip comm.ReceivedMessage interface,FAB-1449,13858,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,20/Dec/16 12:53 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Dec/16 6:36 PM,,,,,,,,,0,gossip,,,,,,,,"Some messages in gossip aren't signed, because they are sent only point-to-point, so the identity of the sender can be extracted from the PKI-ID that's sent during the comm layer authentication.

In order to support multi-channel related access control for messages that are point-to-point I need to add getPkiID to the interface.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxg6n:",,,,,,Sprint 7 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unit test failure with sbft,FAB-1450,13859,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,hgabre,pmullaney,pmullaney,20/Dec/16 5:07 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Oct/17 8:55 PM,,,Future,,fabric-orderer,,,,0,sbft,,,,,,,,"I am experiencing a build failure unrelated to my change(https://gerrit.hyperledger.org/r/#/c/3307/1). Log shows failure in sbft:

19:34:04 [33munit-tests_1  |[0m 2016/12/19 19:34:04 replica 6: executing seq:2  e69469048407c1c8540cbf6553add76054d189104c8334703fd02d60c8c78f80
19:34:04 [33munit-tests_1  |[0m FAIL
19:34:04 [33munit-tests_1  |[0m coverage: 76.0% of statements
19:34:04 [33munit-tests_1  |[0m FAIL	github.com/hyperledger/fabric/orderer/sbft/simplebft	0.393s
19:34:04 [33munit-tests_1  |[0m error: exit status 1
19:34:04 [33munit-tests_1  |[0m panic: EOF
19:34:04 [33munit-tests_1  |[0m 
19:34:04 [33munit-tests_1  |[0m goroutine 1 [running]:
19:34:04 [33munit-tests_1  |[0m panic(0x4daca0, 0xc42006c020)
19:34:04 [33munit-tests_1  |[0m 	/opt/go/src/runtime/panic.go:500 +0x1a1
19:34:04 [33munit-tests_1  |[0m main.main()
19:34:04 [33munit-tests_1  |[0m 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
19:34:06 [33munittest_unit-tests_1 exited with code 2
19:34:06 [0mStopping unittest_vp_1 ... 
19:34:17 [1A[2K
Stopping unittest_vp_1 ... done",,ChristopherFerris,kchristidis,pmullaney,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxerr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,kchristidis,pmullaney,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/17 3:18 AM;kchristidis;There is no reason for this to be tagged with v1.0.0 since sbft is not a valid option for v1.0.0 to begin with.;;;","14/Apr/17 9:39 AM;ChristopherFerris;[~kchristidis] that may have been me. If sbft is for v1.1 then please mark as affects v1.1 and fixVersion v1.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create the initial test-setup in Chef over a network,FAB-1451,13860,13840,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,AdnanChoudhury,AdnanChoudhury,20/Dec/16 7:03 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Apr/17 12:31 AM,,,,,fabric-quality,,,,0,,,,,,,,,A test-setup where we have a multi-host blockchain network which will be deployed by Chef.  ,,AdnanChoudhury,bmos299,ChristopherFerris,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg6v:",,,,,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,AdnanChoudhury,bmos299,ChristopherFerris,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 2:44 AM;ChristopherFerris;[~bmos299] I am unclear how this can be Done when there is no evidence that it was done, nor published findings. Please have whoever did this add those findings here. After that is done this can be closed.;;;","13/Apr/17 6:11 AM;bmos299;[~ChristopherFerris] we will add the artifacts from the work asap. ;;;","13/Apr/17 10:15 PM;suryalnvs;I worked on this and came up with some recipes https://github.com/suryalnvs/chef which were designed to run on assigned nodes to launch the network. However, we are pursing other tools(docker swarm) instead of this approach.;;;","14/Apr/17 12:32 AM;ChristopherFerris;none of this is relevant now, but in future, we should not be tracking proprietary experiments in the Hyperledger JIRA.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ensure mock consumer is set up before accessing its disk,FAB-1452,13861,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,20/Dec/16 1:38 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Dec/16 4:00 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"Consider this:

# Before we bring up a mock producer and mock consumer we need to initialize them so that they output the right offsets. We do this via a process where we add fill-in blocks until we get them to the desired offset.
# We move messages between the mock producer to the mock consumer via goroutine that fetches a message from the producer's disk (an unbuffered channel) and places it into the consumer's disk (another unbuffered channel).

Up until now, before proceeding to step 2, we would only make sure that the producer was set-up. The goroutine then would add a message to the consumer's disk before the consumer was set-up. As a result, the first message we would receive past the setup process would sometimes be the last fill-in message (instead of the first, regular test message).",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120,120,,0%,120,120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg73:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Dec/16 1:54 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3465/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add capability to run specific unit test(s) in local build environment,FAB-1455,13864,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,20/Dec/16 10:57 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,31/Dec/16 9:19 PM,,,,,,,,,0,build-system,,,,,,,,"Parameterizing `unit-test/run.sh` to optionally pass in the package(s) you want to test rather than running unit tests for the whole fabric will make local development and test more palatable

So generally I build and test all my changes natively on my host (i.e. I just run `go test` directly on my host system)  and then when things look good I then run `make unit-tests` locally (although I do forget sometimes) before submitted by patch for review

There are of course times when `go test` runs fine locally but then when run in the context of `make unit-tests` it fails for one reason or another.   `make unit-tests` takes a while to run so this is a pain (as others have stated).

So one thing I've been doing locally is modifying `unit-test/run.sh` locally to only run the unit tests for the package(s) I've changed to quickly ensure that things work.",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxg7r:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Dec/16 12:54 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/3555/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"replace chaincode return value from ([]byte,error) to Response",FAB-1457,13866,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,muralisr,muralisr,21/Dec/16 11:33 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,13/Jul/17 10:37 AM,,,Future,,fabric-peer,,,,0,help-wanted,,,,,,,,"Currently the ""return"" processing from chaincode is clouded on error paths
* is the error from chaincode or from the fabric ?
* if error from chaincode, is this a unexpected/infrastructure error (e.g, ""cannot read file"") vs business logic error (""invalid account # specified by user"")
* if error from chaincode, should we proceed with endorsement or halt

Clearly, the return value from chaincode invocation has to be used to decide the above. However the current return value ([]byte, error) is ill-suited for interpretation. A simple, conventional, integer error code based approach will be more suitable implement this cleanly.

The proposal is to modify the return values for ""Invoke"" and ""Init"" interfaces with a Response structure with an errorCode in it.

So something like 
{quote}
type Chaincode interface
        Init(stub ChaincodeStubInterface) *Response*
        Invoke(stub ChaincodeStubInterface) *Response*
{quote}

Where Response could be something like
{quote}
Response
   retCode  int
   payload    []byte
{quote}

The endorser can then decide treatment of response based on the retCode value where 0 < retCode <= 500 are reserved by fabric
* retCode == 0 || retCode == 200 => success and payload will be interpreted as response
* retCode > 500 => error, payload will be interpreted as error but will proceed to endorsement
* 0 < retCode <= 500 => error, payload will be interpreted as error and endorsement will fail

The work will affect all chaincodes :  system chaincodes and examples

[~binhn],   [~ChristopherFerris],  [~mastersingh24], [~jiangyaoguo]",,binhn,inatatsu,ishihara.shun,jiangyaoguo,mastersingh24,muralisr,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-37,,,,,,,,,"1|hzxg7z:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,inatatsu,ishihara.shun,jiangyaoguo,mastersingh24,muralisr,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"24/Dec/16 12:29 AM;muralisr;It might be best to use the Response message defined in  protos/peer/fabric_proposal_response.proto directly in the shim. So the interface would look like 
{quote}type Chaincode interface
        Init(stub ChaincodeStubInterface) *pb.Response*
        Invoke(stub ChaincodeStubInterface) *pb.Response*
{quote}

Though this means we have to import protos into each chaincode, I think that's ok (we have other fabric import dependencies as the ""shim"" anyway). As Response is the object we want in the end, using this directly in the chaincode will avoid mappings.

If that sounds the right thing to do, we would then have to do one of 
* add a Response field to ""message ChaincodeMessage"" which will be set on Invoke and Init OR
* replace the ""payload"" field in ""message ChaincodeMessage"" with Response OR
* serialize Response into payload (which will have to be deserialized back)  on Invoke and Init in the shim

The last appears to be a good way to go about this I think ?
* as it won't disturb the usage of payload in other peer-chaincode communication involving ChaincodeMessage
* keep the ChaincodeMessage simple (avoid 2 field for ""output"")

One drawback would be the serialization/deserilization overheads.;;;","06/Jan/17 8:42 AM;binhn;I don't really follow the return codes interpretation
```
retCode == 0 || retCode == 200 => success and payload will be interpreted as response
retCode > 500 => error, payload will be interpreted as error but will proceed to endorsement
0 < retCode <= 500 => error, payload will be interpreted as error and endorsement will fail
```
Why wouldn't we follow HTTP?
* Informational 1xx
* Successful 2xx
* Redirection 3xx
* Client Error 4xx
* Server Error 5xx
So endorsement fails if the return code is 4xx, but otherwise, the we process as normal.;;;","06/Jan/17 8:59 AM;muralisr;We have to be able to treat the default value (0). Per convention 0 is OK... hence the {quote}retCode == 0 || retCode == 200{quote}. 

How about this ? Keep it simple
* any value  <  500 will be endorsed
* any value >= 500 will be considered an error and rejected.

In particular, fabric errors during endorsement will result in 500.;;;","06/Jan/17 11:36 AM;binhn;Ok, we should keep it simple, so >= 500 is rejected with error;;;","06/Jan/17 11:45 PM;binhn;[~mastersingh24] [~ChristopherFerris] Please comment by end of today 1/06/2017 so that we can complete this item for the current sprint (end of next week).  Thanks.;;;","07/Jan/17 8:22 PM;mastersingh24;I think I've stated this before, but personally I would rather NOT entirely change the method signature / response type.

I would rather define a custom error type (e.g. https://golang.org/src/net/net.go?s=11570:11691#L350 ) because then our existing code will still work but we can leverage the additional error fields as we see fit.   That's my personal take here given we've broken these interface too many times in the past and there's a ton of other work to do.


{code}
type ChaincodeError interface {
    error
    RetCode() int
    ... (any other fields we think are needed)
}
{code}

Given almost all our code uses stuff like 
{code}
retValue, err := .....
if err!= nil {
    ...
}
{code}

this should really end up being a minor change IMHO;;;","08/Jan/17 3:52 AM;muralisr;So [~mastersingh24] suggestion details...

Shim exposes a new interface called

{code:java}

type ChaincodeError interface {
    error
    RetCode() int
}

//and provides a default implementation. We would use this internally
//but users could use this default implementation if they like
type ChaincodeErrImpl struct {
    code int
}

//needed for this to be a ChaincodeError
func (e *ChaincodeErrImpl) RetCode() int {
    return e.code
}

//needed for this to be an error
func (e *ChaincodeErrImpl) Error() string {
    return fmt.Sprintf(""Error code is %d"", e.code)
}

{code}


Chaincode continues to expose 

{code:java}
Init (args[][]byte) ([]byte, error)
Invoke (args[][]byte) ([]byte, error)
{code}

Chaincode developers can return any error ... but the recommendation is to implement the ChaincodeError interface. They can use ChaincodeErrImpl or implement their own error as follows

{code:java}

type MyCCError struct {
    //anything the chaincode dev wants
}

//needed for this to be a ChaincodeError
func (e *MyCCError) RetCode() int {
    var code int
    //get code
    return  code
}

//needed for this to be an error
func (e *MyCCError) Error() string {
    return fmt.Sprintf(""return some string"")
}
{code}

Shim would look for ChaincodeError

{code:java}
payload, err := shim.Invoke(args)
var ccerr ChaincodeErr
//did we get an error ?
if err != nil {
    //is this a ChaincodeError
    ccerr, _ = err.(ChaincodeError)
    if ccerr == nil {
        ccerr = &ChaincodeErrImpl{500} //if user didnt specify an error assume the worst and return 500
    }
}
//at this point if there was an error, we'll have a ChaincodeErr in hands to pass downstream....
{code}


This will work and will result in minimal changes. In particular chaincode_example02 and friends can continue to return random error that will not implement ChaincodeErr interface and all tests will continue to work (all errors in the tests WILL be 500 errors and WILL have to be discarded, which is what they do now anyway).

The only downside is we will still be returning 2 arguments ([]byte, error) which would have been nice to have cleaned up to make it uniform for Java. And we allow users to make unintentional mistake in chaincode (buggy chaincode returns random error when the intention was to return ChaincodeErr). If we want to return a fixed Response, this is the chance.

What do you think [~jiangyaoguo] ? You have spent considerable effort with the original design and implementation :-( but to me this does sound a good approach given what we get back in return. In fact we gain something by allowing users to implement any error they want.

I'll go by with whatever everyone wants but I prefer the new approach.;;;","08/Jan/17 3:57 AM;mastersingh24;I'll go along with whatever folks feel is best.  If we are going to do this, now is the time as I think we'll have one shot to change the shim and after that people will be really upset as they will have started doing real work on V1 ;;;","10/Jan/17 12:46 PM;jiangyaoguo; [~muralisr] I agree that the new approach is more compatible and make minimal changes. I prefer [~mastersingh24]'s approch too. This also give us more space to send extra info to endorser while there's error. So now we could have errorCode/errMsg/MoreInfo(anything you want to get or anylise).
I'll update https://gerrit.hyperledger.org/r/#/c/3535/ to follow [~mastersingh24]'s approach.;;;","10/Jan/17 10:29 PM;jiangyaoguo;There's one problem about new ChaincodeError. We need marshal []byte and ChaincodeError to payload of ChaincodeMessage at shim side and unmarshal them at endorser side.  As a golang interface, ChaincodeError is difficult to be serialized bacause there're different implements. For fabric build-in error type, we can do marshal and unmarshal(add a error dict and select type to unmarshal according to ErrCode). But for user custom error type, we can't unmarshal it at peer-side. We can only get ChaincodeErrImpl type and fabric build-in error type at endorser side. So cc developer can only use ChaincodeErrImpl type as error returned. We still can't  allowing users to implement custom error type.
New ChaincodeErrImpl will like this
{code:java}

type ChaincodeErrImpl struct {
    Code int
    Message string // should be set by user explicitly, maybe []byte more flexible.
}

//needed for this to be an error
func (e *ChaincodeErrImpl) Error() string {
    return e.Message
}
{code}
Or we can keep ChaincodeErrImpl definition and return ErrMessage in []byte. 
Any good idea about this problem?[~muralisr][~mastersingh24][~binhn]
 ;;;","11/Jan/17 3:34 AM;muralisr;[~jiangyaoguo] I was thinking we use the best of both worlds. (1) Expose  ([]byte, error) interface for chaincode developer as detailed above but (2) use pb.Response internally from the shim to the peer. So the ChaincodeError itself won't be needed or used in the peer side and we'd have converted to pb.Response internally right at the beginning in the chaincode layer. What do you think ?;;;","11/Jan/17 6:26 AM;binhn;This sounds like convoluted massage would be needed to cover a not well-thought out interface. Let's do the simple thing because now is the time.

I want to go back to the original design of a response proto message, and make it simple so that other language implementations may easily follow. We are not only making it work, but we should make it simple and elegant for years to come.

Our original objective is to have a return status (like HTTP status line) where we can express status code and message. HTTP status  is well-thought out and well-designed that we should just follow. The status codes are not necessarily just error codes. There are successful cases that we would want to tell the caller (200 OK, 201 CREATED, 206 PARTIAL CONTENT). In fact, I am implementing a query function on a chaincode now that I could use status 206 to tell the caller that there's more content (pagination).

This is our last chance to change, then it's going to be very hard to change the interface -- not impossible, but a lot more work to change. And I believe we need to do this right and forget the past.
;;;","11/Jan/17 7:24 AM;muralisr;[~binhn] to be clear bother approaches will use error codes. And in both cases error code >= 500 means it won't be endorsed. 

The only difference is how we get the error code. If we use pb.Response, the error code will come directly from pb.Response. If we use ([]byte, error)  we will get the error code from ChaincodeErr interface - if the user returns that type. Otherwise we default to 500 on error and 0 (or 200) on success.

If we want to make minimal changes (as in less code to change) and not affect existing chaincode then ([]byte,error) is the way to go.

On the other hand, pb.Response approach is cleaner.;;;","11/Jan/17 3:20 PM;jiangyaoguo;[~muralisr]The problem is if we want to return status code, the interface name ""error"" is not suitable. We could make Response to implement error interface directly or define an new type like ChaincodeResultImpl(replace ChaincodeErrImpl bacause it contains not only errors but successful case). This will keep old chaincode compatible. But using the error interface to return successful status code is not elegant and may confuse cc developers in future. Considering that we're developing new arch/spec v1.0, we should reduce the priority of compatibility and take the pain early. ;;;","13/Jan/17 7:46 AM;muralisr;[~jiangyaoguo] agreed. Its not really elegant. Note that even returning ""ChaincodeResultImpl"" as a ""error"" parameter is bound to cause confusion. (If I want to return 200, should I return ChaincodeResultImpl(200) as an ""error"" ?)

The only elegant way is to use pb.Response return code. We have to decide between ease of implementation/less disruption vs long time goodness.

Seems we are trending back to original design to return pb.Response ? I change my vote back to pb.Response. 

What do you think [~mastersingh24] ? 

;;;","22/Jan/17 8:52 PM;mastersingh24;I missed my opportunity to comment earlier so I'll just add a few remarks after the fact:

1) I really don't like once again breaking this interface
2) On the plus side, this stuff is only run during endorsement so I do like the fact that customers can set / handle their own response codes

;;;","22/Jan/17 8:52 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/3535/;;;",,,,,,,,,,,,,,,,,
A fmt.errorf change in accesscontrol package,FAB-1458,13867,,Bug,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,grapebaba,grapebaba,grapebaba,21/Dec/16 4:42 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,22/Dec/16 4:54 PM,,,v1.0.0,,fabric-crypto,,,,0,,,,,,,,,"fmt.Errorf(""Invalid hash algorithm "" + primitives.GetHashAlgorithm()) change to fmt.Errorf(""Invalid hash algorithm %s"", primitives.GetHashAlgorithm())",,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxg87:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP replication in the gossip layer,FAB-1459,13868,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,21/Dec/16 9:49 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 4:14 AM,,,,,,,,,0,,,,,,,,,"This is a follow-up of [FAB-1394|https://jira.hyperledger.org/browse/FAB-1394]

This JIRA issue's task is to define *how* the the MSP is replicated between peers via the gossip.

Recap:
In order for peers to validate signatures of peers from different organizations, they need to use channel-scoped MSPs.
However, this imposes the following problem: Peers from different organizations that are not in the same channel cannot communicate even though the organizations these peers belong to are part of some common channel.

It was proposed to replicate the MSP between peers of the same organization, so that each 2 peers that are in different organizations could communicate if their organizations belong to some channel.

I proposed the idea below (*), but it's not good enough because we need to replicate not only MSP config, but also principals that are used by the MSP.
Therefore, it makes sense to simply replicate with gossip the configuration block itself, between all peers in the organization.
A possible drawback of that is that a peer that doesn't have a configuration block of a channel he is not part of, can't verify the signatures on the block, which are signed by the ordering service (of that channel).

We can simply assert that each peer trusts each peer in its own organization, and this decision would solve this problem. 

(*)

The item that would be replicated is an item called an *MSPConfig*.
It will be an item that would travel between peers in the same organizations, and between such peers *only*.
This item is naturally updated when a peer receives a configuration transaction in its chain that updates the channel's MSP. When such an event occurs, the gossip layer inside a peer would know that the MSP has changed and peers that have an older version of that *MSPConfig* would get the newer version from the peers that have that version.

In order for the gossip layer to determine which *MSPConfig* is newer out of a pair of *MSPConfig* objects, the *MSPConfig* could compute an item called *MSPDigest* which is a unique representation of an *MSPConfig*, a *chainID*, and a comparable sequence number (the block sequence number, for example). 

The code flow would be something as the following:
Orderer--->sends configuration block to the peer and the peer updates the MSPs.
Periodically, the gossip layer queries the MSPs of the peer for their recent *MSPDigest* and compares them to *MSPDigest*s of other peers, and if a different is found, it synchronizes the *MSPConfig* items for peers that have an outdated version of *MSPDigest* s.
This mechanism already exists in the gossip layer, in order for it to be able to replicate MSPs we just need to define 2 types of messages (the *MSPDigest* and *MSPConfig*) and the mudularity of the code will take care of the rest.

So, I propose the following action:
We'll extend https://github.com/hyperledger/fabric/blob/master/gossip/api/crypto.go#L25-L47 With the following things:

// MSPSupervisor governs all MSPConfigs of the peer
type MSPSupervisor interface {
	// Deserialize returns an MSPConfig from bytes
	DeserializeMSPConfig([]byte) MSPConfig

	// DeserializeMSPDigest returns an MSPDigest from bytes
	DeserializeMSPDigest([]byte) MSPDigest

	// Verify verifies an MSPConfig.
	// Returns an error on failure, nil on success.
	Verify(MSPConfig) error

	// GetMSPConfig returns an MSPConfig given a channel, or nil
	// if such an MSPConfig isn't found
	GetMSPConfig(common.ChainID) MSPConfig

	// UpdateMSP updates an MSPConfig.
	// Returns an error on failure, nil or success.
	UpdateMSP(common.ChainID, MSPConfig) error
}

type MSPConfig interface {
	// GetChannel returns the channel for this MSPConfig
	GetChannel() common.ChainID

	// ToBytes serializes this MSPConfig
	ToBytes() []byte

	// Digest returns a digest representation
	// of a MSPConfig
	Digest() MSPDigest

	// VerifyDigest verifies an MSPDigest.
	// Returns an error on failure, nil on success.
	VerifyDigest(MSPDigest) error
}

// MSPDigest is a compact representation of an MSPConfig
type MSPDigest interface {
	// ToBytes serializes this MSPDigest
	ToBytes() []byte

	// Returns:
	// n > 0  if given MSPDigest is outdated in comparison to this MSPConfig
	// n < 0  if given MSPDigest is newer than this MSPConfig
	// n = 0  if given MSPDigest is equivalent to this MSPConfig
	Compare(MSPDigest) int
}


The gossip component inside the peer would have a single reference to the *MSPSupervisor* given at the initialization, and it'll use the interfaces in order to effectively replicate MSP configurations of various channels by having the peers query each other for digests and send each other *MSPConfig* s and thus update each other's channel MSPs.

These additions would allow the gossip layer to effectively replicate MSPs among peers of the same organization. 

",,angelo.decaro,binhn,elli-androulaki,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxg8f:",,,,,,Sprint 7 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,binhn,elli-androulaki,jyellick,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/17 6:28 PM;angelo.decaro;Please, correct me if I'm wrong: It looks to me that we start from the assumption that peers in the same organization might have different MSPs (because they belong to different channels, possibly). 

I want to understand if it is important to keep this separation for privacy reasons. Is it reasonable to think that inside the same organization, peers might be required to not be aware of which channels other peers belong to? If this is the case, then this MSP replication might represent a privacy violation. 

I might be wrong here, please, help me in the understanding :)
;;;","06/Jan/17 7:54 PM;yacovm;{quote}Please, correct me if I'm wrong: It looks to me that we start from the assumption that peers in the same organization might have different MSPs (because they belong to different channels, possibly). {quote}
Well, since there are 2 kinds of MSPs in the peer: local MSP that can only verify sigs from peers in the same org, and channel-based MSP that is derived from the ledger, peers in the same channel can have a different set of MSPs if they're not in the same channel(s).

{quote} Is it reasonable to think that inside the same organization, peers might be required to not be aware of which channels other peers belong to?{quote}
We discussed this, and it is not so, and based on previous discussions, in gossip we disseminate the channel IDs and the ledger height of the peers in the channels inside the entire organization. 

Please correct me, [~binhn]  if a new privacy concern was introduced. ;;;","07/Jan/17 12:26 AM;binhn;bq. Periodically, the gossip layer queries the MSPs of the peer for their recent MSPDigest 

I am a bit concerned of the timing here:  Since the leader of the org is connected to the ordering service, it might get a block for a channel that it doesn't belong before it can replicate the channel's MSP, so it would not be able to verify the block.  An alternative that I can think of is to have the peers push the MSP to the leader (all peers in an org must know its current leader) upon receiving the configuration transaction. The leader could also hold on to the block for a period for MSP replication to take place. However, I think push would be much better since MSP reconfiguration doesn't happen often.;;;","07/Jan/17 12:27 AM;binhn;[~angelo.decaro] [~yacovm] Yes, that is our current working assumption.;;;","07/Jan/17 2:27 AM;yacovm;Thanks for your feedback, Binh. 
{quote}I am a bit concerned of the timing here: Since the leader of the org is connected to the ordering service, it might get a block for a channel that it doesn't belong before it can replicate the channel's MSP, so it would not be able to verify the block{quote}
We can have a leader per channel *and* org, and this would solve this problem. I updated the JIRA post's body and deleted the leader part.

And from what I understood, there are additional items that exist in a configuration block (like hash algorithm, signature policy (k out of n sigs)) that are needed to be replicated besides the MSP, that would be needed for a peer to be call *Deliver* on a channel that he isn't in the channel itself. I believe [~jyellick] can approve/disprove this.
So, if we go along that path we would need to simply disseminate the configuration block instead.

Perhaps for V1 we should go for the leader-per-channel-and-org and tackle this if need arises later on. 
;;;","07/Jan/17 5:55 AM;jyellick;> So, if we go along that path we would need to simply disseminate the configuration block instead.

I see this as rather unavoidable, and probably the simplest of the solutions.  By disseminating the configuration block, you get:

1. The block hashing parameters
2. The MSPs for the chain
3. The block signature metadata validation policy
4. The last configuration metadata validation policy

And finally, and perhaps most importantly, it's not possible to validate a new configuration block without having the entire previous configuration block.

In general, because there is only ordering within a chain, and not across chains, any logic which depends on global changes is suspect.  Not that it is impossible to implement correctly, but, my personal inclination would be to replicate too much, then narrow it down if it causes problems, than to try to be too clever out of the gate.;;;","07/Jan/17 6:21 AM;yacovm;[~jyellick]
{quote}any logic which depends on global changes is suspect{quote} - care to elaborate?
;;;","09/Jan/17 11:57 PM;jyellick;>> any logic which depends on global changes is suspect
> - care to elaborate?

In short, global changes are unordered, and without order it's extremely easy to introduce non-determinism.

To put it more verbosely, consider the following example:

Two peers, peer A and peer B
Peer A is a member of chains foo and bar
Peer B is a member of chain foo only
Chain foo and chain bar each have a validation policy requiring both a signature from MSP 1 and MSP 2.
Peer A has chain foo at block 20 and bar at block 10
Peer B has chain foo at block 25
There is an MSP reconfiguration on foo at block 23
There is the same MSP reconfiguration on bar at block 17

 1. Peer A hears from peer B about blocks 21, 22, 23 from peer B
 2. Peer A applies the MSP reconfiguration from foo at block 23 globally
 3. Peer A now receives block 11 on chain bar
 4. Peer A cannot validate block 11 because the signatures on block 11 are only valid under the old MSP
 5. Peer A is now forever stuck unable to validate any more blocks on chain bar

The key here is that signature sets have context.  And you cannot expect that just because the MSPs are changing, that the signatures sets do too (in fact in general, they will not).  A set of signatures that was valid at a given point in the chain needs to stay valid at that point in the chain.

I'll include on more example of how this is a problem.

Consider a peer who is starting up and has only the genesis block for chain foo. 
Chain foo is thousands of blocks long.  
The MSPs have rotated several times
If this peer _only_ has the current MSPs, how can it hope to validate the older blocks, like block 1?

The claim could be that this peer should be seeded with the 'most recent' configuration block, so that it can do backwards hash chain validation and ignore signatures (which is a fine idea), but the idea of 'most recent' is poorly defined.  A new configuration block and MSP change might happen the millisecond after the configuration block is supplied in which case we are back to the same problem.;;;","10/Jan/17 8:42 AM;yacovm;I understand what you're saying Jason, and the problems that you bring are indeed sound and only give more reasons to move to the 2nd approach (at least for V1):
* The peer that connects to the ordering service will be selected among peers in the channel in its own organization
This would eliminate all the problems caused by wrong/outdated block validation policies because all peers would process blocks in-order and will not disseminate configuration blocks to peers that are not in the channel.
* That peer would initiate block dissemination among the peers of its organization that publish to all peers their participation in the channel. 
* We replicate channel MSP among the peers of a same organization, and this would enable peers in the same channel to *find* / *discover* peers of the same channel in different organizations via hearing about them from the anchor peers that are listed in the JoinChannel messages / configuration blocks.;;;","10/Jan/17 6:19 PM;elli-androulaki;So regarding the suggested MSPConfig, this may be confused with the MSPConfig that exists in protos/msp/mspconfig.proto/go.pb,
Maybe rename this to GossipChannelMSPConfig or MSPConfigGossipMsg?

Replicating configuration blocks across peers of the same organization may not be that bad, as long as its guaranteed that the order in which these configuration blocks are received is preserved. 

Now just to make sure I understood approach 2 correctly: You are saying there is one leader per organization per channel. How would the peers of an organization know which peer is the leader for a specific channel? I am guessing not through the JoinChannel, since in this case this information would only be available to the peers that have joined the channel. 

Would it make sense to have a dedicated peer (per organization leader of leaders) that can be queried by same organization peers, to get the information of which is the organization leader of a channel? Too complex?

;;;","10/Jan/17 6:42 PM;yacovm;{quote}So regarding the suggested MSPConfig, this may be confused with the MSPConfig that exists in protos/msp/mspconfig.proto/go.pb,
Maybe rename this to GossipChannelMSPConfig or MSPConfigGossipMsg?{quote}
The only code that would reference this would be the gossip code, which will not reference the protos/msp one, so I think it's ok. 

{quote}Replicating configuration blocks across peers of the same organization may not be that bad, as long as its guaranteed that the order in which these configuration blocks are received is preserved. {quote}
Agreed. 

{quote}Now just to make sure I understood approach 2 correctly: You are saying there is one leader per organization per channel. How would the peers of an organization know which peer is the leader for a specific channel? I am guessing not through the JoinChannel, since in this case this information would only be available to the peers that have joined the channel. {quote}
You are guessing correct.
The only peers that will need to know about the leader of the channel are of course, the peers of the channel in the organization. 
We are developing a leader election mechanism that enables set of peers to elect a single peer from that set. 
It would work in the following way:
* Peers that join a channel begin gossiping information about their participation in the channel to all peers of the org.
* This gives peers the ability to know which peers of the org are in the channel and which are not.
* The peers of the channel in the org would elect a peer to connect to the ordering service on behalf of the peers of the channel (in the org).
* That peer would first commit the blocks and *only then* disseminate them to the rest of the peers via gossip.

{quote}Would it make sense to have a dedicated peer (per organization leader of leaders) that can be queried by same organization peers, to get the information of which is the organization leader of a channel? Too complex?{quote}
With our mechanism you don't need this. ;;;","10/Jan/17 7:03 PM;elli-androulaki;Ok, that sounds good then. So the flow would be upon a peer (receipient) receiving a Gossip message from another peer (sender):
 
Check if the message comes from peer of the same organization using local MSP
 - If the sender is from the same organization, accept/process the message; this requires that local MSP is *updated by the administrator of that peer as needed*.
 - If the sender is not from the same organization, check if this is a channel specific message
   * If a channel specific message, then check if the channel exists locally, i.e., the recipient has joined the channel, or received that channels MSP updates
        - If the channel exists locally use that channel's MSP to authenticate the sender/message
        - If the channel does not exist locally, reject the message 
   * If not a channel specific message **what do we do**? Use all the MSPs across all channels the recipient has been notified for? For evaluating such messages, it could help if the system channel's MSP updates are propagated to peers and verification is done using that list; however, this would be tough given the ordering service would need to selectively reveal messages of the system channel, while at the same time, the peers still need to check if thee MSP of the sender is one their organization has an overlapping channel with (so can be trusted)...

;;;","10/Jan/17 8:19 PM;yacovm;{quote} this requires that local MSP is updated by the administrator of that peer as needed.{quote} 
So, this needs to be implemented anyway regardless of gossip.

{quote}If the sender is not from the same organization, check if this is a channel specific message{quote}
This isn't a good approach in my opinion, because in gossip we have membership messages and they are non-channel specific, but will have to be validated by the channel's MSP if the message is traveling between organizations. 
These membership messages *have* to travel between peers not in the same org in order for peers in the same channel but in different orgs to be able to communicate, and some fabric clients have use cases that require this.

I recommend using the {quote}Use all the MSPs across all channels the recipient has been notified for?{quote} approach in any case the peer isn't in the same org.
I think that if there exists an MSP among all channel MSPs that can verify the CA signature on the public key of the remote peer, it's safe to go on and verify the signature on the message itself. 
This is because I think it would be logical to assume that the users won't make a root CA divergence situation in which in the same org, two channels would have different root CA sets.
If we accept this idea, *any* channel MSP that can verify the signature is good enough and there will be no need of checking against *all* channel MSPs, right? 

{quote} For evaluating such messages, it could help if the system channel's MSP updates are propagated to peers and verification is done using that list; however, this would be tough given the ordering service would need to selectively reveal messages of the system channel, while at the same time, the peers still need to check if thee MSP of the sender is one their organization has an overlapping channel with (so can be trusted)...{quote}
Can you explain this please? From what I know, there is no system channel.

;;;","18/Jan/17 8:57 PM;yacovm;OK, so we talked and reached the conclusion that we need to replicate not just the MSP itself, but also the principals that are used by the MSP.
The easiest way of doing it is simply replication the configuration blocks that contain changed versions of security-related configuration items.

What do you think? [~ellaki] , [~jyellick];;;","18/Jan/17 9:06 PM;elli-androulaki;Actually we need to propagate the MSPs, ChannelReaders, and ChannelWriters of a chain / channel. Maybe simpler to propagate config blocks.;;;","18/Jan/17 9:19 PM;yacovm;Yeah, that's what I said. But- we need to propagate only the configuration blocks that are doing a change in the relevant configuration items, don't you agree?
If we have a configuration block that only changes orderer stuff, even though it contains all the info we need, it's a shame to propagate it (IMO). 
Or, perhaps we could (for V1) just propagate all config blocks anyway and just selectively apply the changes in the peers if they are needed?;;;","18/Jan/17 11:15 PM;elli-androulaki;So, let me ask a question also to [~jyellick]: do orderers validate re-configuration blocks completely? That is, do they check that configuration items in there are properly signed, and contain valid information? 

If so, then we have already a mechanism for authenticating config changes associated to channel MSP configurations. If not, then we would need to implement a txconfig handler for each chain that organization is a member of? 

If we go for the gossip propagation mechanism of MSPConfig / policy objects (of channelReaders) then we would need to somehow trust the nodes they are sending this information along. In other words we should trust the gossip fellows of the peer whose MSP image is updated (of the same organization).

What do you think? [~angelo.decaro], [~yacovm], [~mastersingh24], [~binhn]?
;;;","18/Jan/17 11:19 PM;elli-androulaki;And allow me to add if we do this, i.e., have a peer trust all peers that come from the same organization as it, then we may have issues when, e.g., a peer who is revoked, tries to make rest of peers think he is not revoked by transmitting them the wrong MSPConfig (that, e.g., does not include its certificate in CRL)...;;;","18/Jan/17 11:21 PM;elli-androulaki;> But- we need to propagate only the configuration blocks that are doing a change in the relevant configuration items, don't you agree?

So if we do not have orderers filter out invalid configuration blocks is not clear if the advertised block includes a valid reconfiguration. No?;;;","18/Jan/17 11:46 PM;yacovm;hmm, If the peer has an up-to-date MSP, he should be able to verify a block signed by an ordering service, even though it's not in the channel, right?;;;","18/Jan/17 11:49 PM;yacovm;I recall [~binhn] said that we shouldn't focus on byzantine tolerance in the same organization for V1, does this still hold?;;;","19/Jan/17 12:13 AM;binhn;[~yacovm] Could you update the description to include what we have agreed so that we don't have to read all the comments. 

[~ellaki][~yacovm] As Jason pointed out, replication of the config block is necessary. Why are you still talking about MSPConfig replication? The config block contain the appropriate sig that no peers could fake, so let's stick with that.;;;","19/Jan/17 12:19 AM;elli-androulaki;So, the thing is that we are supposed to have already revocation in place, that are assumed to compensate for compromised peers. Are we supposed to consider revocation lists only for client certificates and consider peers always honest/non compromised?

;;;","19/Jan/17 12:21 AM;elli-androulaki;> hmm, If the peer has an up-to-date MSP, he should be able to verify a block signed by an ordering service, even though it's not in the channel, right?

Well orderers MSPs are advertised as well in each channel as far as [~jyellick] mentioned. Therefore to validate a channel block, we would need to have an updated (for that channel) version of that channel's MSPs. After this is up to speed then peers could validate blocks that come from that channel. 

However, if the ordering service does not check the content of configuration blocks/validity of theirs it is possible that configuration blocks are added to the blockchain that are invalide, e.g., cause it includes outdated config items... There the fact that you have an updated MSP will not help.;;;","19/Jan/17 1:15 AM;yacovm;[~binhn] I updated the description in the JIRA story. Posting below anyway for convenience: 

... ""Therefore, it makes sense to simply replicate with gossip the configuration block itself, between all peers in the organization.
A possible drawback of that is that a peer that doesn't have a configuration block of a channel he is not part of, can't verify the signatures on the block, which are signed by the ordering service (of that channel).

We can simply assert that each peer trusts each peer in its own organization, and this decision would solve this problem. "";;;","19/Jan/17 1:26 AM;elli-androulaki;[~binhn] correct. 

The questions that we were discussing with [~yacovm] related to :
 - a peer receives through gossip a config block that is actually a genesis block; would it trusted cause it is signed with the orderer keys that it takes from some other channel?
 - a peer receives a config block of a channel it has a genesis block of; can he trust that this config block is a valid one or he needs to redo the config block validation like committing peers do and for that receive all config blocks in the same order (using e.g., block sequence number).;;;","19/Jan/17 1:30 AM;elli-androulaki;And actually we had a longer discussion that relates to orderers and their certificates being possible to be revoked. In CFT systems one ordere signature is enough to validate a block. Thus assuming that we have an orderer who has compromised, till the moment when its identity is revoked/removed from the orderers set, that orderer is behaving byzantine, and [~marko.vukolic] confirmed that that orderer during that time interval can compromise the system. 

Shall we do assume that orderers cannot be compromised/their certificates never invalidated? ;;;","19/Jan/17 1:45 AM;yacovm;{quote}a peer receives a config block of a channel it has a genesis block of; can he trust that this config block is a valid one or he needs to redo the config block validation like committing peers do and for that receive all config blocks in the same order (using e.g., block sequence number).{quote}

We can't do that in gossip, it's impossible. That would require somehow obtaining the entire history of configuration blocks, and that requires persistence. 
It's not possible to go in that direction, and it's not gossip-friendly. We can only disseminate the ""last"" configuration block at each time, and not the entire history of them.;;;","19/Jan/17 1:54 AM;yacovm;{quote}Shall we do assume that orderers cannot be compromised/their certificates never invalidated? {quote}
This is a fair point, and if we embrace this reality then it means that since we can trust the configuration items inside the genesis block (signed by the admin), we could verify the signatures of any other subsequent configuration blocks from the ordering service. 
The question is... whether this is a reasonable assumption?

This however, leaves a corner case of concurrent configuration changes that can be invalidated in the peer if it's in the channel, but can't be validated in a peer that's not in the channel;;;","02/Feb/17 4:13 AM;yacovm;We've decided that an anchor peer will be per channel, and not per organization.
So this JIRA item isn't relevant anymore.;;;",,,,
Design and document the way HPL/fabric could support a time-stamp server mechanism with confidentiality enablement,FAB-1472,13881,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,elli-androulaki,elli-androulaki,elli-androulaki,22/Dec/16 5:38 PM,23/Jan/20 3:45 AM,28/Oct/23 2:58 AM,23/Jan/20 3:45 AM,,,Future,,fabric-crypto,,,,0,stale-item,,,,,,,,Only hashes of transactions (that maintain confidentiality) reside to the public ledger and details associated to it.,,ChristopherFerris,elli-androulaki,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6m7:",,,,Unset,,Sprint 9 - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,elli-androulaki,mastersingh24,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Dec/16 9:37 PM;mastersingh24;the biggest ""blocker"" here is how nodes that are supposed to get the actual data would get it if they were not part of the original endorsement and/or join a channel late.

I think there are ways to handle this with ""local"" storage available when endorsing a transaction combined with using gossip for receiving missing ""data"" and/or distributing the private data in the first place.

As long as things are kept within the scope of a channel, this should be ""doable"" without much complexity.  It would be more of an issue of time.

;;;","06/Jul/18 10:49 PM;ChristopherFerris;[~mastersingh24] [~elli-androulaki] is this still relevant?;;;","12/Sep/18 6:38 PM;elli-androulaki;I think it is still relevant, though not urgent for 1.4/1.5 given other priorities. But what do you think?;;;","23/Jan/20 3:45 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Research JIRA stories for possible gaps in components,FAB-1474,13883,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,latitiah,latitiah,latitiah,23/Dec/16 12:47 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,28/Dec/16 5:17 AM,,,,,fabric-quality,,,,0,,,,,,,,,"Go through JIRA and find what stories with the ""fabric-peer"", ""fabric-baseimage"", ""fabric-devenv"", ""fabric-gossip"", and ""fabric-membersrvc"" components and corresponding labels have been completed. (API tests will cover the SDK components, not behave/functional tests.) 

Compare as to whether there are feature files and scenarios for each story if needed. (may not be in the hyperledger/fabric repository under the bddtests directory)
If it seems that a scenario is needed, write a general description of the scenario (not steps) and the associated owner/assignee of the story.
A scenario is a one line test description.

*Output:* A list of scenarios or possible scenarios that will be discussed with a developer/owner.",,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1489,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzx23z:",,,,Unset,,Sprint 8 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/16 5:16 AM;latitiah;COP
=======
Keith:
- FAB-1460: Add COP support for tcert generation
- FAB-1147: COP certificate renewal
- FAB-1144: COP LDAP integration
- FAB-1132: Error messaging from COP CLI
- FAB-989: Add license headers to COP files
- FAB-809: JSON token authentication support for COP APIs
-- REST apis?? JWT-JSON Web Token
- FAB-807: Define the proto for trusted root certificates and CRL for config change
- FAB-456: Enroll a peer
- FAB-454: Start a COP server (CLI)

Saad:
- FAB-1294: Extend CFSSL DB accessor to support adding enrollment ID to certificates table
- FAB-1086: Incorporate database configuration as part of server config
- FAB-983: Add certificate serial number to users table
- FAB-943: Integrate tcert process to user DB
# Check that the Ecert has been issued to the user having User id.
# Whenever a group is created, Pre-Key has to be stored for that group.
# Retrieve PreKey for user by passing user id. Here is the flow:
a. pass user id to call, it passes back user object
b. User object should have group assigned to it. If not make another call to DB to get user group info
c. Using user group, retrieve PreKey for the group.
- FAB-862: enroll user with username and password to COP server
- FAB-455: user registration info must be stored in CFSSL's DB

Ashutosh:
- FAB-876: Generate local tcert based on ecert used with the COP service
- FAB-874: JSON processing utility:
# Read JSON file from file system and coverts it to JSON string
# Retrieve values from JSON file in for key in the format a.b
# Create golang CertificateSpec object from Input json
# Create Attribute map from Attributes that are being supplied in the Request json.
- FAB-873: Crypto support for tcert generation
-- https://gerrit.hyperledger.org/r/#/c/3281/

Pho:
- FAB-836: Generate Token and verify token
- FAB-449: COP initializer (CLI)
- FAB-392: ACA combined with TLS
-- Allen would also know about this

Elli:
- FAB-635: document alternative tcert key derivation schemes that can be implemented with standard PKCS#11 calls

Gossip
=======
Artem:
- FAB-1355: Gossip join channel will use the extraction of the chain id from configuration block
-- What is CR 2697?
- FAB-1218: Simple gossip communication
!!!- FAB-1060: Make KVLedger to implement rawledger interface
-- KVLedger implements ValidatedLedger and RawLedger interfaces
- FAB-774: Integrate gossip into peer code
-- peers should communicate and make state synchronization via gossip protocol
- FAB-773: Integration between gossip communication and dynamic set of peers capability
-- peers state synchronization and missing block completion
- FAB-772: Gossip protocol implementation
-- Discovery + Membership of new nodes
-- Communication module
-- Push/Pull mechanism
-- Impersonation prevention
- FAB-702/FAB-743: Support block reordering
-- Blocks disseminated via gossiping layer from consenters might be delivered out of order, therefore state of gossip protocol should be able to re-order block in appropriate order before delivering further to the ledger.
There is a need to create structure to support/allow re-ordering of incoming messages and indicate whenever new block are ready to be transferred to the ledger.
- FAB-702/FAB-742: Create and define gossiping node meta object
-- new node appears in the network it has to complete the state based on the information of the ledger height in other nodes. This information is disseminated during gossip keep alive mechanism, e.g. each node transfer its meta-state which should include information about ledger.
Need to provide an ability to store relevant info within nodes, serialize and de-serialize this information.

Gennady:
- FAB-871/FAB-1285: Add client to connect to ordering service to pull blocks and gossip them into the network
-- gossip component will send a message for leader election to decide on dedicated (""first-order"") peers. These dedicated peers will open connection to the ordering service to receive block via ""deliver"" protocol and initiate gossip of those block over the peers gossip network
- FAB-513: Gossip communication based on hashicorp gossip implementation

Yacov:
- FAB-1029: Gossip discovery
-- This issue is for code coverage, but there may be something here that we should add for BDD
- FAB-1016: Gossip communication send buffers
-- This may impact tests for FAB-1218 as well
- FAB-922: Gossip layer implementation
-- gossip data structs: pull, forwarding, discovery??
- FAB-639: Make gossip communication resiliant to impersonation
??- FAB-636: Gossip demo (https://www.youtube.com/watch?v=qpFzZRNKKp0)
- FAB-584: gossip API
-- Reflect cryptographic methods that exist in the fabric peer by having parameters of similar type in verifications/signing signatures, i.e- use PKI_id like in fabric peer
-- Provide future support for dissemination of other entities apart from blocks and alive messages, such as block validations, and maybe even certificates
- FAB-511: gossip security API
# Helps connect between the existing fabric message verification API to the gossip implementation by using the same signature methods as the crypto/crypto.go Peer interface 
# Adds a PKI_id to the discovery infrasturcture and to the communication layer in order for peers to assert that they have a single connection to peers and that they know the identity of the connecting peers
- FAB-484: gossip component data structures
-- messageStore
-- forwardingBatcher
- FAB-483: gossip pull algorithm
-- use pull and push messages
- FAB-482: gossip discovery - resurrected member isn't added to alive list
- FAB-480: gossip discovery
??- FAB-481: logging fix for gossip component

;;;","29/Dec/16 6:58 AM;latitiah;Be sure to test a end to end network test scenario.
E.g.: a network has a cop, orderer, 2 peers
- add a peer
- remove a peer
- change the type of orderer
- use a cluster of cop servers
- use cop server with ldap
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
make invokes concurrent,FAB-1475,13884,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,23/Dec/16 2:12 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,05/Jan/17 3:59 AM,,,,,fabric-peer,,,,0,,,,,,,,,"In pre-v1.0 release couple of things prevented chaincodes invocations from being concurrently executed
* CC execution was pre consensus and so the order of execution has to be fixed across all chaincode invokes, across all peers
* (related to the above) read/writes to the ledger was for committing and not ""simulation"" and state versioning was not in place. Ledger required serial access

Given these restrictions are no longer enforced for 1.0, we can execute invokes in parallel and any non-deterministic results will be filtered before consensus.
",,muralisr,smartheye,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzx7zb:",,,,,,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,,,,,,,,,,,,,,,,,,,,,,,muralisr,smartheye,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Jan/17 3:59 AM;muralisr;completed work as indicated in Git Commits ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
make behave (Running Behave BDD Tests) generate errors and skipping tests,FAB-1480,13889,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,dragon82,dragon82,26/Dec/16 4:28 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,13/Apr/17 9:53 PM,,,v1.0.0,,fabric-orderer,,,,0,behave,build-system,chaincode,fabric05,fabric06,help-wanted,Ledger,quality,"Hello People,

I tried to make behave which running the behave BDD tests and it generate the following errors and skipping tests as well:

make behave >> behave_log.txt
zookeeper uses an image, skipping
Building kafka
zookeeper uses an image, skipping
Building kafka0
orderer0 uses an image, skipping
zookeeper uses an image, skipping
Building kafka2
Building kafka1
Building kafka0
orderer0 uses an image, skipping

You can implement step definitions for undefined steps with these snippets:

@given(u'user requests role of peer admin by creating a key and csr for peer and acquires signed certificate from organization')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given user requests role of peer admin by creating a key and csr for peer and acquires signed certificate from organization')

@given(u'user requests role of peer signer by creating a key and csr for peer and acquires signed certificate from organization')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given user requests role of peer signer by creating a key and csr for peer and acquires signed certificate from organization')

@given(u'peer admins get the genesis block for chain \'chain1\' from chainBoostrapAdmin')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given peer admins get the genesis block for chain \'chain1\' from chainBoostrapAdmin')

@given(u'the peer admins inspect and approve the genesis block for chain \'chain1\'')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given the peer admins inspect and approve the genesis block for chain \'chain1\'')

@given(u'the peer admins use the genesis block for chain \'chain1\' to configure peers')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given the peer admins use the genesis block for chain \'chain1\' to configure peers')

@given(u'user ""binhn"" registers with peer organization ""peerOrg0""')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given user ""binhn"" registers with peer organization ""peerOrg0""')

make: *** [behave] Error 1

For more information, please refer to the attached log as well.","Linux OS: Ubuntu Intel 64bits version 16.04.1
go version go1.6.2 linux/amd64
Python Version: 2.7.12
PIP: 9.0.1
behave (1.2.5)",ChristopherFerris,dragon82,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_--_@2.1_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10354/a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_--_%402.1_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_--_@2.2_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10353/a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_--_%402.2_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_--_@2.3_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10352/a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_--_%402.3_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_using_oldest_seek_target_--_@2.1_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10351/a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_orderer_function_using_oldest_seek_target_--_%402.1_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_seek_orderer_function_(Utilizing_properties_for_atomic_broadcast)_--_@2.3_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10350/a74ec6fecb3b11e6a7380016eae48524_kafka0_1_Basic_seek_orderer_function_%28Utilizing_properties_for_atomic_broadcast%29_--_%402.3_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10349/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_@1.1_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10348/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_%401.1_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_@1.2_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10347/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_%401.2_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_@1.3_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10346/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_%401.3_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_@2.1_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10345/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_%402.1_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_@2.2_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10344/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_%402.2_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_@2.3_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10343/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_--_%402.3_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_using_oldest_seek_target_--_@1.1_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10342/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_using_oldest_seek_target_--_%401.1_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_using_oldest_seek_target_--_@2.1_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10341/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_orderer_function_using_oldest_seek_target_--_%402.1_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_(Utilizing_properties_for_atomic_broadcast)_--_@1.1_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10340/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_%28Utilizing_properties_for_atomic_broadcast%29_--_%401.1_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_(Utilizing_properties_for_atomic_broadcast)_--_@1.2_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10339/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_%28Utilizing_properties_for_atomic_broadcast%29_--_%401.2_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_(Utilizing_properties_for_atomic_broadcast)_--_@1.3_Solo_Orderer.log;https://jira.hyperledger.org/secure/attachment/10338/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_%28Utilizing_properties_for_atomic_broadcast%29_--_%401.3_Solo_Orderer.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_(Utilizing_properties_for_atomic_broadcast)_--_@2.3_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10337/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Basic_seek_orderer_function_%28Utilizing_properties_for_atomic_broadcast%29_--_%402.3_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Bootstrap_a_development_network_with_1_peer_and_1_orderer,_each_having_a_single_independent_root_of_trust_(No_COP)_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10336/a74ec6fecb3b11e6a7380016eae48524_orderer0_1_Bootstrap_a_development_network_with_1_peer_and_1_orderer%2C_each_having_a_single_independent_root_of_trust_%28No_COP%29_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_vp0_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10335/a74ec6fecb3b11e6a7380016eae48524_vp0_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_vp0_1_Bootstrap_a_development_network_with_1_peer_and_1_orderer,_each_having_a_single_independent_root_of_trust_(No_COP)_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10334/a74ec6fecb3b11e6a7380016eae48524_vp0_1_Bootstrap_a_development_network_with_1_peer_and_1_orderer%2C_each_having_a_single_independent_root_of_trust_%28No_COP%29_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_vp1_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10333/a74ec6fecb3b11e6a7380016eae48524_vp1_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_vp2_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10332/a74ec6fecb3b11e6a7380016eae48524_vp2_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_vp3_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_@1.1_Orderer_Options.log;https://jira.hyperledger.org/secure/attachment/10331/a74ec6fecb3b11e6a7380016eae48524_vp3_1_Basic_deploy_endorsement_for_chaincode_through_GRPC_to_multiple_endorsers_--_%401.1_Orderer_Options.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_--_@2.1_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10330/a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_--_%402.1_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_--_@2.2_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10329/a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_--_%402.2_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_--_@2.3_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10328/a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_--_%402.3_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_using_oldest_seek_target_--_@2.1_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10327/a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_orderer_function_using_oldest_seek_target_--_%402.1_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 4:27 PM;dragon82;a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_seek_orderer_function_(Utilizing_properties_for_atomic_broadcast)_--_@2.3_1_Kafka_Orderer_and_1_Kafka_Broker.log;https://jira.hyperledger.org/secure/attachment/10326/a74ec6fecb3b11e6a7380016eae48524_zookeeper_1_Basic_seek_orderer_function_%28Utilizing_properties_for_atomic_broadcast%29_--_%402.3_1_Kafka_Orderer_and_1_Kafka_Broker.log","26/Dec/16 3:41 PM;dragon82;behave_log.txt;https://jira.hyperledger.org/secure/attachment/10355/behave_log.txt",,,,,,,,,,,,,,,,,,"1|hzxga7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dragon82,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 9:55 PM;ChristopherFerris;The bddtests are no longer broken. See the README.md in the bddtests folder for complete setup instructions for running behave tests. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make SBFT network test clean up the files it created,FAB-1481,13890,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,hgabre,hgabre,28/Dec/16 3:52 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 6:11 PM,,,,,fabric-orderer,,,,0,sbft,,,,,,,,"SBFT network test (stress test) calls the sbft app using the command line, that's why it also builds it. This executable needs to be removed after the test finishes.",,hgabre,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgaf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hgabre,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix unnessary errorf, fatalf statement in configtx package",FAB-1482,13891,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,grapebaba,grapebaba,grapebaba,28/Dec/16 4:19 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,31/Dec/16 9:33 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Fix unnessary errorf, fatalf statement, use errors.New, t.Error, t.Fatal instead",,grapebaba,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgan:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,grapebaba,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Dec/16 1:03 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/3551/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merged change https://gerrit.hyperledger.org/r/#/c/3319/ causes build errors on z,FAB-1487,13896,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,baohua,harrijk,harrijk,30/Dec/16 12:12 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Jan/17 12:36 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The following error occurs when attempting to build fabric components on the z platform

{quote}root@ubuntu-bc:~/git/src/github.com/hyperledger/fabric# make unit-test
Building build/docker/bin/peer
core/util/utils.go:28:2: cannot find package ""github.com/hyperledger/fabric/metadata"" in any of:
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric/metadata (vendor tree)
        /opt/go/src/github.com/hyperledger/fabric/metadata (from $GOROOT)
        /opt/gopath/src/github.com/hyperledger/fabric/metadata (from $GOPATH)
Makefile:133: recipe for target 'build/docker/bin/peer' failed
make: *** [build/docker/bin/peer] Error 1{quote}
",,baohua,harrijk,harsha544,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgc7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,baohua,harrijk,harsha544,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Dec/16 10:50 AM;baohua;A patchset was submitted: https://gerrit.hyperledger.org/r/#/c/3571/.

Please help review.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Tests,FAB-1489,13898,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,latitiah,latitiah,30/Dec/16 3:35 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,26/Jun/18 12:01 AM,,,v1.0.0,,fabric-quality,,,,0,,,,,,,,,"From the list of gossip jira issues for possible tests, develop specific steps for generating behave tests.

*Output:* A list of scenario test cases/possible scenarios that will be discussed with a developer/owner, and identify test utilities needed. These test scenarios will be saved (and possibly reformatted) for use as the feature files.
",,AdnanChoudhury,latitiah,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzy8zr:",,,,Unset,,Sprint 8 - Quality,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,,,,,,,Unset,,,,,,,,,,,AdnanChoudhury,latitiah,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Dec/16 2:32 PM;Ratnakar;Artem Barger : 
FAB-773 	Integration between gossip communication and dynamic set of peers capability	
FAB-702 	Dynamic set of peers.	
FAB-742 	FAB-702 Create and define gossiping node meta object	
FAB-743 	FAB-702 Support blocks re-ordering	
(FAB-702, 742 & 743 can be combined to a single usecase ?)

---------------------------------
Yacov Manevich : 

FAB-484 	A storage cache for disseminated data items (messageStore)
FAB-484 	A batch and time based component that causes (forwardingBatcher)
FAB-483 	Pull algorithm module for Gossip component
FAB-1016 	Gossip communication layer sends buffering to gossip comm layer.
FAB-639 	Make Gossip communication resiliant to impersonation	(No Description and gerrit link)
FAB-480 	Gossip Discovery implementation	
FAB-1018 	Gossip MultiChannel Support API	(Need more details to write the steps for BDD )


Gennady Laventman: 
FAB-871 	Add client to connect to ordering service to pull blocks and gossip them into the network.	
FAB-1285 	New gossip message for leader election
FAB-513 	Gossip communication based on hashicorp gossip implementation (Couldn't find commit details);;;","26/Jun/18 12:01 AM;AdnanChoudhury;Closing this old issue as the gossip tests were developed and submitted in other jiras. Please refer to 1.1 and 1.0 SVT/FVT test sheets.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for dynamically adding/removing trusted client root certificates,FAB-1492,13901,13589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,31/Dec/16 9:21 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Jan/17 3:51 AM,,,v1.0.0,v1.0.0-alpha1,fabric-peer,,,,0,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgd3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Dec/16 9:25 PM;mastersingh24;The requirement here is to be able to add and remove trusted client roots without restarting the GRPC server.

The reason we need this is that its possible that new organizations will be added as part of config transactions when joining a channel or when channel membership changes;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode deployer, I'd like to specify VSCC policy",FAB-1493,13902,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,01/Jan/17 12:51 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,12/Apr/17 4:02 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"https://gerrit.hyperledger.org/r/#/c/2365 adds protobuf support for Policies. We can now serialize those policies and store them with the LCCC at the time of with the deploy/upgrade of chaincode and use them at VSCC validation in the committer.

This will be done over several tasks
* accept a serialized policy and have the CLI send an at-least-1-signature
* have VSCC validate a tx using that policy
* have the CLI accept a ""policy"" to accept a complex policy ",,ales,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1494,,,,,,,,FAB-104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-104,,,,,,,,,"1|hzx4sn:",,,,Unset,,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,Sprint 12 - Endorser,Sprint 13 - Endorser,Sprint 14 - Endorser,Sprint 15 - Endorser,Sprint 16  - Endorser,,,,,Unset,,,,,,,,,,,ales,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/17 12:33 AM;muralisr;[~ales] wanted to close this one but thought should check with your first to make sure it is truly complete. If there are some smaller tasks/cleanup left, perhaps open tasks and close this one ?;;;","12/Apr/17 3:52 AM;denyeart;[~ales] Anything required here or can it be closed?;;;","12/Apr/17 3:53 AM;ales;Hi Dave,

I think it's done, yes, it can be closed!

Thx!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
accept a serialized policy and have the CLI send an at-least-1-signature policy,FAB-1494,13903,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,muralisr,muralisr,01/Jan/17 12:55 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 12:09 AM,,,,,fabric-peer,,,,0,,,,,,,,,Accept serialized protobuf common.SignaturePolicy as part of chaincode deploy and store it with LCCC.,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-104,,,,,,,,,"1|hzx553:",,,,,,Sprint 7 - Endorser,Sprint 8 - Endorser,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,Sprint 12 - Endorser,Sprint 13 - Endorser,Sprint 14 - Endorser,Sprint 15 - Endorser,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/17 12:09 AM;muralisr;http://gerrit.hyperledger.org/r/4827  (thanks [~ales]).

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
move cccheker to a top level folder,FAB-1495,13904,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,01/Jan/17 6:33 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,14/Oct/17 3:01 AM,,,,,fabric-peer,,,,0,,,,,,,,,"cchecker was introduced to test chaincode under concurrent invokes in https://jira.hyperledger.org/browse/FAB-1475. In addition to sending load concurrently, it also allows chaincode to be tested for consistency and correctness (did the ledger commits match expected state values ?) using a ""shadow"" CC validator (typically written by the chaincode developer or a tester). This helps to fix chaincode issues before production.

This story is for doing the following tasks to move the chaincode checker to the top level 
* add logging support
* add UT for the ccchecker
* add documentation
",,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1497,FAB-1512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgdb:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 3:01 AM;ChristopherFerris;closing, please reopen if still relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
give more appropriate names to CCChecker objects,FAB-1497,13906,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,02/Jan/17 4:05 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,04/Jan/17 12:34 PM,,,,,fabric-peer,,,,0,,,,,,,,,"As a prerequiste to adding logging and UTs to cchecker, clean up names and add a bit more flexibiltiy to the shadow.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgdr:",,,,,,Sprint 7 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Go version dependency has been changed in v1.0, but the devenv.md is not updated yet",FAB-1498,13907,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,hanhzf,hanhzf,hanhzf,02/Jan/17 10:07 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Jan/17 10:25 AM,,,v1.0.0,,,,,,0,Documentation,,,,,,,,"I pulled the latest code of hyperledger and tried to build the peer binary, then following error was met:


	vagrant@hyperledger-devenv:v0.0.10-e3b2d3f:/hyperledger$ make peer

	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:20:2: cannot find package ""context"" in any of:
		/opt/gopath/src/github.com/hyperledger/fabric/vendor/context (vendor tree)
		/opt/go/src/context (from $GOROOT)
		/opt/gopath/src/context (from $GOPATH)
	make: *** [build/bin/peer] Error 1

This is because the Go version fabric depends on is 1.7 and later. Also I found thisin fabric-baseimage, the Golang has been moved to v1.7.3. I met this problem because my local fabric base-image is not updated.

but the dev environment setup guide(fabric/docs/dev-setup/devenv.md) is not updated, which confuses me.

	Prerequisites
	* [Git client](https://git-scm.com/downloads)
	* [Go](https://golang.org/) - 1.6 or later


I suggest update the Go version in devenv.md.",,hanhzf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgdz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hanhzf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Jan/17 11:28 PM;hanhzf;doc updated by: https://gerrit.hyperledger.org/r/#/c/3587/;;;","06/Jan/17 10:25 AM;hanhzf;code merged, close this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger history recovery: I want to be sure that the history database is in sync with the blockchain and state database,FAB-1500,13909,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,denyeart,denyeart,03/Jan/17 10:59 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,18/Jan/17 12:26 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-199,,,,,,,,,"1|hzxge7:",,,,Unset,,Sprint 9 - Ledger,,,,,,,,,,,,,4.0,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add history database recovery logic upon ledger initialization at peer startup,FAB-1501,13910,13909,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,denyeart,denyeart,03/Jan/17 11:02 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,18/Jan/17 12:26 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgev:",,,,,,Sprint 9 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger history: I want a chaincode API to see the history of key values (using LevelDB),FAB-1502,13911,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,03/Jan/17 11:08 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,23/Feb/17 12:22 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/18 1:04 AM;denyeart;HistoryDatabaseDesign_20170124.pptx;https://jira.hyperledger.org/secure/attachment/14540/HistoryDatabaseDesign_20170124.pptx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-199,,,,,,,,,"1|hzx66f:",,,,Unset,,Sprint 10 - Ledger,Sprint 11 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,4.0,Unset,,,,,,,,,,,denyeart,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ledger history: When looking at the ledger history for a key, I want to see history with full transactional context ",FAB-1503,13912,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,03/Jan/17 11:11 PM,23/Jan/20 3:46 AM,28/Oct/23 2:58 AM,23/Jan/20 3:38 AM,,,Future,,fabric-ledger,,,,0,ledger,stale-item,,,,,,,"In addition to seeing the history of key values, we should be able to see the full transaction details for every update to the key.  This will require defining a new transaction structure to be returned.",,denyeart,kletkeman,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-199,,,,,,,,,"1|hzxamv:",,,,Unset,,,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,denyeart,kletkeman,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/17 12:19 PM;kletkeman;Our history implementation saves the original input event, the calculated state, any rule based alerts that were generated, and any events that were emitted. I would like to see the Fabric do something similar.;;;","23/Jan/20 3:38 AM;sykesm;Stale;;;","23/Jan/20 3:46 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a fabric developer, I want to plugin a new state database, simulation scheme, validation scheme",FAB-1504,13913,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,03/Jan/17 11:21 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,16/Jan/17 8:48 PM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-60,,,,,,,,,"1|hzxagv:",,,,Unset,,Sprint 9 - Ledger,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor CouchDB state database for new state database plugin model,FAB-1505,13914,13913,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,denyeart,denyeart,03/Jan/17 11:27 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 8:30 PM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,Update CouchDB state database impl to match LevelDB impl.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgf3:",,,,,,Sprint 9 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make CouchDB query API available to chaincode,FAB-1506,13915,12504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,denyeart,denyeart,03/Jan/17 11:36 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 12:18 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1709,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgfb:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle error and status events for eventHub communication,FAB-1507,13916,15894,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,pmullaney,mastersingh24,mastersingh24,04/Jan/17 2:28 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,10/Jul/18 3:23 AM,v0.6,v1.0.0,v1.0.0,,fabric-sdk-node,,,,0,,,,,,,,,"The EventHub class in hfc does not properly handle status and more importantly error events from the underlying GRPC library / connection.

For bidi GRPC streams, the Node grpc client emits ""status"" and ""error"" events.  Currently, hfc only handles the ""data"" and ""end"" events and only propagates the ""data"" event to the EventHub class.

I'd suggest only fixing this for the v1.0 release",,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgfj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 8:13 AM;ChristopherFerris;I don't understand what task this sub-task is a sub-task of.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Track bddtests dev progress and update related docs and scripts,FAB-1508,13917,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,oldsharp,jyellick,jyellick,04/Jan/17 3:49 AM,23/Jan/20 3:47 AM,28/Oct/23 2:58 AM,23/Jan/20 3:47 AM,,,,,fabric-build,,,,1,stale-item,,,,,,,,"As the development of bddtests is in progress, the document, devenv scripts and the base image should also be updated, to reflect new dependencies it introduced and new running steps it added.",,harsha544,jyellick,oldsharp,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,FAB-1141,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx91b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,harsha544,jyellick,oldsharp,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/17 11:27 PM;oldsharp;I think the ""ecdsa"" package is needed too.;;;","23/Jan/20 3:47 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write Draft 2 of Hyperledger Fabric v1.0 Overview,FAB-1509,13918,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joshhus,joshhus,joshhus,04/Jan/17 4:37 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,23/Apr/17 11:10 PM,,,v1.0.0,,fabric-docs,fabric-quality,,13/Jan/17 12:00 AM,0,quality,,,,,,,,"Take the feedback and review comments from Draft 1 and rewrite it as Draft 2. The goal is to have the subsequent Draft 3 be a completed document that is proposed to the LF fabric community for formal inclusion/publication.

The previous Sprint 8 issue/task for this item - Research and write Draft 1 - is done, and here: https://jira.hyperledger.org/browse/FAB-1342

Draft 1 is 9 pages. Draft 2 is projected to be 11 pages (Adding Consensus and Writing Chaincode sections). Draft 2 will also include all feedback on all sections. 

",,ChristopherFerris,inatatsu,ishihara.shun,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,259200,259200,,0%,316800,288000,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1604,FAB-1694,FAB-1869,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx34v:",,,,,,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,,,,,,,,,,,,,,,,,,,ChristopherFerris,inatatsu,ishihara.shun,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Apr/17 11:10 PM;ChristopherFerris;closed this, it is done... anything else is a fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Graph database for transaction history,FAB-1510,13919,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,kenzhang,kenzhang,kenzhang,04/Jan/17 5:09 AM,30/Jul/19 11:59 AM,28/Oct/23 2:58 AM,30/Jul/19 11:59 AM,,,Future,,fabric-ledger,,,,0,ledger,,,,,,,,"By nature asset history is a graph, using a graph database would allow complex queries of the history. Some sample questions such as:

Who modified the data along the process?  
Any data touch by A first and then B with parameter P1 & P2?

The goal of this work item is to create a preliminary design for:

1. Pluggable design for graph db
2. Interface for complex history query ",,beatrider,kenzhang,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-199,,,,,,,,,"1|hzxamn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,beatrider,kenzhang,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
generalize CCChecker and remove some hacks,FAB-1512,13921,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,muralisr,muralisr,muralisr,04/Jan/17 12:42 PM,12/Jul/19 8:40 PM,28/Oct/23 2:58 AM,12/Jul/19 8:40 PM,,,Future,,fabric-peer,,,,0,,,,,,,,,"Found some problems with the CCChecker while working on a second, ""doublespend',  sample. This was mainly due to creating an instance of CC object as the Concurrency Property for the chaincode. Cleaning that up helped generalize the framework
* The name of the chaincode is unique (in keeping with unique deployment name)
* shadow is in charge of the query iteration (than artificial loop controlled by the framework)
* Invoke and Validate boundaries are clean
* reporting is straightforward

With this foundation both ""newkeyperinvoke"" and ""doublespender"" examples use the framework naturally.",,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgfr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/18 2:15 AM;sykesm;[~muralisr] This was marked as ""in progress"" nearly a year ago. The issue it's marked as blocking is ""done"". Is this done now? Invalid?

Thanks.

 ;;;","12/Apr/18 2:25 AM;muralisr;[~sykesm] I had submitted a CR for this [https://gerrit.hyperledger.org/r/#/c/3623/] but marked it  -1 pending docs and tests. The plan was to make this more usable and maybe even move it to fabric-samples. One option is to create a separate CR for this and accept the CR and  mark it done. Another is to leave it as is. Either way my plan is to work on this some more.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A logic bug in Commercial Paper Demo,FAB-1513,13922,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,hydrachain,hydrachain,04/Jan/17 4:57 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Apr/17 8:41 AM,,,WON'T FIX,,fabric-samples,,,,0,,,,,,,,,"In the Commercial Paper Demo(https://github.com/IBM-Blockchain/cp-web), there is a logic bug to cp-web/src/chaincode/cp_cc.go in the 698 lines.
The correct code here is “toCompany.AssetsIds = append(toCompany.AssetsIds, tr.CUSIP)” rather than 'fromCompany.AssetsIds = append(fromCompany.AssetsIds, tr.CUSIP)'",,ChristopherFerris,hydrachain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgfz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,hydrachain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 8:41 AM;ChristopherFerris;commercial paper is not a Hyperledger project... please file the bug with ibm-blockchain repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update contributing.md,FAB-1514,13923,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,05/Jan/17 12:20 AM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,13/Apr/17 12:54 AM,,,v1.0.0,,,,,,0,,,,,,,,,update contributing.md,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx867:",,,,Unset,,Sprint 7 - Quality,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deploying chaincode failing on master due to missing image,FAB-1515,13924,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,,david_dornseifer,david_dornseifer,05/Jan/17 1:58 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:28 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"The following error occurs when I try to deploy chaincode on the latest fabric using the 'yeasy/hyperledger-fabric-peer' docker images. On docker.io there is just the x86_64-0.6.1-preview
available. 

2017-01-04 14:10:29.838 UTC [dockercontroller] deployImage -> ERRO 464 Error building images: Tag x86_64-1.0.0-preview not found in repository docker.io/hyperledger/fabric-ccenv
2017-01-04 14:10:29.838 UTC [dockercontroller] deployImage -> ERRO 465 Image Output:
********************
Step 1 : FROM hyperledger/fabric-ccenv:x86_64-1.0.0-preview
Pulling repository docker.io/hyperledger/fabric-ccenv


",,david_dornseifer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgg7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,david_dornseifer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
committer side upgrade processing,FAB-1516,13925,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,muralisr,muralisr,05/Jan/17 4:05 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Apr/17 11:00 PM,,,,,fabric-peer,,,,0,help-wanted,,,,,,,,"The admin does the following from SDK or CLI
* install the chaincode to be upgraded - nothing special need to be done to differentiate the ""upgrade"" from ""instantiate"". The install process is same for both cases
* upgrade the chaincode on a channel
** from CLI this is {{peer chaincode upgrade -n <name of the chaincode> -v <version to be upgraded to> -p <path to the chaincode> -c <init paramers to call on the upgrade> -C <channel name>}}

The following tasks complete the endorser side of upgrade
* FAB-1238 implement ""upgrade"" command in Life Cycle System Chaincode (lccc.go)
* FAB-1237 new ""upgrade"" command to CLI
* FAB-1318 use version to disambiguate running version from upgraded version
* FAB-1357 introduced version into the chaincode context in preparation for upgrade processing

This task focuses on the committer side where an upgrade task needs to do the following. When processing a block of transactions, the following algorithm will ensure the upgrade is correct.
* collect all the transactions that target ""lccc"" whose verb is ""upgrade""
* invalidate all transactions which are ""invokes"" to upgraded chaincodes in that block
* process block once again to ignore the invalidated transactions

The rationale for the above 

{code:java}
The scenario - many proposals are happening on the chaincode on channel x at the time of upgrade of a chaincode. Some of them end up as transactions before the block on which upgrade turns up, others after and a few on the same block.

For consistency and determinism, enforcing the following rules will be sufficient 
    - invokes will be stamped not only with chainID but also version. This will thus be part of the MVCC rw-set. (see ChaincodeHeaderExtension.chaincode_id)
    - at commit time, all transactions for the chaincode will be invalidated on the block on which there's an upgrade (those transactions cannot be on the commited version and we don't want the upgrade to fail due to collision with a previous transaction in the block).
    - at commit time, all transactions for the chaincode on previous block will follow normal processing.
    - at commit time, all transactions for the chaincode will be checked for version match and will fail if they were based off a previous chaincode version
{code}

The code to be refactored is mainly {{func (v *txValidator) Validate(block *common.Block) error}} in {{core/committer/txvalidator/validator.go}}




	
",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-198,,,,,,,,FAB-183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxggf:",,,,,,Sprint 9 - Endorser,Sprint 12 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Feb/17 9:32 AM;muralisr;[~jiangyaoguo] you contributed to the upgrade on the endorser side and was interested in  the committer side processing at one point. Please assign to yourself if you'd like to tackle it. If not do let me know.;;;","28/Feb/17 1:27 AM;muralisr;Thanks for taking this up [~jiangyaoguo];;;","06/Apr/17 8:57 AM;muralisr;Hi [~jiangyaoguo], assigning back to myself to implement as we need to complete the upgrade work.;;;","06/Apr/17 8:22 PM;muralisr;[~jiangyaoguo] If you'd like to continue and complete the work you started, do assign it back to yourself. Thanks!;;;","26/Apr/17 11:00 PM;jimthematrix;to clean up and avoid confusion on what work is still remaining, after discussing with [~binhn] I'm closing this task with the note that a bug for FAB-198 still needs to be fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate using EC instead of RSA when creating test TLS certs,FAB-1518,13927,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,tuand,tuand,tuand,05/Jan/17 5:08 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,11/Feb/17 2:03 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"as noted in https://gerrit.hyperledger.org/r/#/c/3279/5/bddtests/environments/orderer-1-kafka-1-tls/configureTLSForKafka.md@41

Currently using -keyalg RSA when creating the certs using for Kafka TLS bddtests. See if we can use EC instead. We would need to see how to do so for both keytool and openssl. 

A possible starting point would be http://stackoverflow.com/questions/12303079/java-7-keytool-elliptic-curve-encryption",,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-701,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6db:",,,,Unset,,Sprint 9 - consensus,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,tuand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/17 10:30 AM;kchristidis;What was the result of this investigation?

Not sure if the lessons are recorded somewhere else, but if not, can you write them down here?

Thanks!;;;","06/Feb/17 10:55 PM;tuand;I got EC keypairs working with TLS and had it documented in https://gerrit.hyperledger.org/r/#/c/3279/

but I see [~sanchezl] divided up into multiple changesets. Luis,  where's the .md now ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix orderer rawledger interface to support restart,FAB-1521,13930,13706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,05/Jan/17 11:39 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,The rawledger interface was originally implemented as a single chain initialized with a genesis block.  This causes problems on restart because a newer genesis block may already exist and passing the genesis block becomes nonsensical.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgh3:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,2.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Populate metadata last configuration field,FAB-1523,13932,13706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,05/Jan/17 2:47 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Jan/17 6:55 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"Each block is supposed to contain a reference to the last configuration block, the configuration of which that block was generated under.

Although this is a separate requirement needed for instance for gossip, this is also useful for supporting restart of the ordering service so is being classified as a sub-task of FAB-1299.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxghj:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Appropriately get configuration from block metadata on orderer restart,FAB-1524,13933,13706,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,05/Jan/17 4:03 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The orderer needs to initialize the configuration for every chain, identify the ordering system chain specially, and initialize the other chains.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxghr:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Want to be able to delete information in the side DB based on X number of hours or days so that the information is not long living on a peer.,FAB-1526,13935,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,markparz,markparz,05/Jan/17 11:45 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,06/Nov/17 8:53 PM,,,Future,,fabric-ledger,,,,1,,,,,,,,,"1- Scheduled purge… cron job’esk calls delete for sensitive data value automatically according to policy sort of definition. Ex. Key associated that has timestamp associated, deleted post at this time. Schedule job and deletes appropriate transaction

2- delete explicitly call the delete of the sensitive data

Must have evidence of the deletion. 

Relates to FAB-1151",,denyeart,markparz,miguel.andrade,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5092,,,,,FAB-1151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgi7:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,markparz,miguel.andrade,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/17 8:52 PM;denyeart;Handled in FAB-5092 as part of FAB-1151.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properly initialize the signature field of the block metadata,FAB-1528,13937,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,06/Jan/17 5:15 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,06/Apr/17 2:40 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-686,,,,,,,,,"1|hzxgiv:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update performance Node SDK with latest levels,FAB-1529,13938,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,06/Jan/17 6:57 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Feb/17 11:23 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,"update performance Node SDK with the commit levels suggested by Jim Zhang in https://www.youtube.com/watch?v=t7PcpkIoGAc

fabric: d26b8b4aa8e382555f3e6b518a3ef9d5bbfc8091 (Dec 19)
fabirc-sdk-node: 87301d8c832f7e76b96c899da27a6f26c05ef113 (Dec 22)
fabric-cop: ffb4fc22b84775769c755c5c3db53f6911ba4835 (Nov 28)",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx64v:",,,,,,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation for contribution points to deprecated git repo ,FAB-1532,13942,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,RichardHill,RichardHill,RichardHill,06/Jan/17 9:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Apr/17 10:51 PM,,,v1.0.0,,fabric-quality,,,06/Jan/17 12:00 AM,0,Documentation,,,,,,,,"Documentation for contribution points to deprecated git repo 

The file CONTRIBUTING.md  in  https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob_plain;f=docs/CONTRIBUTING.md;hb=HEAD  points to github when jira is being used to store issues needing work.",,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgjb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
While deploying new chaincode as a chaincode author need to provide information about VSCC.,FAB-1533,13943,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,C0rWin,C0rWin,C0rWin,06/Jan/17 9:46 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,20/Jul/18 11:05 PM,,,,,,,,,0,committer,endorser,,,,,,,"Currently while deploying new chaincode, there is no way to query for LCCC data, since chaincode is not deployed yet. This is chicken and egg problem, where there is solution proposed in FAB-1422. This item it to track the availability of general solution as it blocks/relates to FAB-1038.",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1422,,,,,,,,FAB-1038,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgjj:",,,,Unset,,Sprint 10 - Endorser,,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup the code in package chaincode,FAB-1534,13944,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,grapebaba,grapebaba,grapebaba,06/Jan/17 11:19 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,24/Jan/17 6:33 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,There are many duplicated codes in this package and IDE warning,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgjr:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix IDE warning,FAB-1535,13945,13944,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,06/Jan/17 11:20 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Jan/17 3:26 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Fix IDE warning.
1. unnecessary fmt.errorf
2. variable name override import package name
3.simplify logf and t.fail
4.unused variable
5.dead code",,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgjz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setup Continuous Integration for Functional Integration Testing (Component Testing),FAB-1536,13946,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jan/17 11:35 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Jan/17 12:48 PM,,,,,,,,,0,build-system,quality,,,,,,,"Setup CI jobs for Functional Integration Testing using Node JS on peer, orderer and cop images.

-- Create CI job for hyperledger/fabric master and execute unit-tests and build images
-- Create CI job for hyperledger/fabric-cop and execute unit-tests and build cop image
-- Create downstream job and look for upstream jobs. Once the Upstream jobs are successfully executed, clone latest node-sdk and test end-to-end node js program after spinning up peer, orderer and cop network using docker-compose file.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgk7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/17 12:50 PM;rameshthoomu;Implemented FIT  job in Production and Sandbox. In production, FIT jobs runs for every 24 hrs and in Sandbox, FIT jobs runs for every 6 hrs and publish images to rameshthoomu dockerhub account temporarily.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Readme document on HL Continuous Integration process,FAB-1537,13947,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jan/17 11:43 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/May/17 11:41 AM,,,v1.0.0,,fabric-build,,,,0,build-system,Documentation,quality,,,,,,Create Readme document on HL Continuous Integration process. ,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgkf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/17 11:41 AM;rameshthoomu;patch has been submitted and merged. Please go through the CI process on fabric repository https://github.com/hyperledger/ci-management/blob/master/docs/fabric_ci_process.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create README on HL Jenkins Sandbox process,FAB-1538,13948,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,06/Jan/17 11:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Feb/17 11:46 PM,,,,,,,,,0,,,,,,,,,Create README on HL Jenkins Sandbox process,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgkn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/17 1:35 AM;rameshthoomu;Patch has been submitted: https://gerrit.hyperledger.org/r/#/c/6061/ - In-review;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Setting up the environment to run node end-to-end tests against fabric, fabric-cop",FAB-1539,13949,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,AdnanChoudhury,suryalnvs,suryalnvs,06/Jan/17 12:51 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jan/17 11:22 PM,,,,,,,,,0,quality,,,,,,,,"To run the node end-to-end tests against the latest images of fabric-peer, fabric-orderer, fabric-cop, ccenv as part of functional integrating testing, develop a script to automate the entire process. Docker-compose file will be used to launch the network using the latest images of components and run the end-to-end tests against the network. Docker-compose file should be good enough to support power, z, x86 environments.",,ishihara.shun,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx86f:",,,,,,Sprint 9 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/17 1:02 PM;suryalnvs;[~jjjjibm] and [~AdnanChoudhury] developed a script to automate the process and I worked on integrating that script with docker-compose file to support different architectures z, p, x.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove duplicated Hash function and is Code exist function,FAB-1540,13950,13944,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,06/Jan/17 1:40 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Jan/17 5:11 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,Remove duplicated Hash function and is Code exist function,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgkv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handleRangeQueryState incorrect,FAB-1541,13951,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,zlliu,zlliu,zlliu,06/Jan/17 4:24 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/May/17 4:46 AM,v1.0.0,,DUPLICATE,,fabric-ledger,,,06/Jan/17 12:00 AM,1,chaincode,,,,,,,,"When calling the RangeQueryState interface in chaincode, returns the result that all keys have the same value.",fabric 1.0,ChristopherFerris,denyeart,inatatsu,yoheiueda,zlliu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,7200,,0%,14400,7200,,,,,,,,,,,,,,,,FAB-1837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-757,,,,,,,,,"1|hzx4on:",,,,,,Sprint 16  - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,inatatsu,yoheiueda,zlliu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/17 11:39 AM;inatatsu;Encountered the same issue when porting chaincode using the deprecated Table API to use PartialCompositeKeyQuery().
https://jira.hyperledger.org/browse/FAB-1837
Wish the change set be merged soon!;;;","26/Jan/17 11:43 AM;inatatsu;Attached is my commit message for reference. I'll abandon my change set.
{code:java}
[FAB-1837] Deep copy byte arrays returned by ledger

It is observed that a value returned by PartialCompositeKeyQuery() intermittently differs from the one returned by GetState() for the corresponding key. This is resolved by copying byte arrays returned by the iterator of the ledger instead of copying byte array pointers.

Fixes FAB-1837.
https://jira.hyperledger.org/browse/FAB-1837

Change-Id: Ib5aa6cb89d3b3438836459d4cc6ad270a972fe3f
Signed-off-by: Tatsushi Inagaki <e29253@jp.ibm.com>
{code}
;;;","12/Apr/17 6:30 AM;denyeart;[~zlliu][~inagaki][~Senthil1]
Is this still an issue? If so please rebase the changeset and ask for reviews: https://gerrit.hyperledger.org/r/#/c/3709/;;;","22/Apr/17 5:25 AM;ChristopherFerris;So, the CR above was abandoned (by me) because no one ever followed up on Jason's comment.

If this is a bug, as I suspect isthe case from the comment thread, then someone will need to send in a CR. [~denyeart];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK: Update enroll function to match modified COP enroll API,FAB-1542,13952,12444,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,06/Jan/17 9:16 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,07/Jan/17 7:27 PM,,,v1.0.0,,fabric-sdk-node,,,,0,,,,,,,,,"FAB-145 modifies the COP enroll API.

Prior to this change, enroll only required a CSR.  After this change, it now requires a  JSON payload with the CSR and additional optional parameters:



{code:javascript}
{
	""hosts"": [""host1"", ""host2""],
	""certificate_request"": ""encoded CSR"",
	""subject"": ""CN=Gari"",
	""profile"": ""myprofile"",
	""crl_override"": ""crl override data"",
	""label"": ""mylabel"",
	""serial"": 123344566890,
	""extensions"": [{
		""id"": ""eid"",
		""critical"": true,
		""value"": myvalue
	}]
}
{code}

The requirement here is to support the {quote}certificate_request{quote} field in the request.  We can open another JIRA if we need to support additional parameters for the enroll request
",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgl3:",,,,,,Sprint 7 - Memship Services,Sprint 8 - Membership Services,Sprint 9 - Membership Services,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"06/Jan/17 11:03 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/3719/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Limit the number of leveldb instances,FAB-1543,13953,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,06/Jan/17 10:32 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 3:31 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"As fabric plans to provide multi-ledger capability, storing state for each ledger in a separate leveldb instance is going to create issues beyond a scale. Store the state of all the ledgers into a single leveldb instance.",,manish-sethi,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxglb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,manish-sethi,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java SDK: Update enroll function to match modified COP enroll API,FAB-1544,13954,12444,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rickr,smithbk,smithbk,06/Jan/17 11:16 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jan/17 1:50 AM,,,v1.0.0,,fabric-sdk-java,,,,0,,,,,,,,,"FAB-145 modifies the COP enroll API.

Prior to this change, enroll only required a CSR. After this change, it now requires a JSON payload with the CSR and additional optional parameters:

{code}
{
	""hosts"": [""host1"", ""host2""],
	""certificate_request"": ""encoded CSR"",
	""subject"": ""CN=Gari"",
	""profile"": ""myprofile"",
	""crl_override"": ""crl override data"",
	""label"": ""mylabel"",
	""serial"": 123344566890,
	""extensions"": [{
		""id"": ""eid"",
		""critical"": true,
		""value"": myvalue
	}]
}
{code}

The requirement here is to support the

    certificate_request

field in the request. We can open another JIRA if we need to support additional parameters for the enroll request",,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxglj:",,,,,,Sprint 7 - Memship Services,Sprint 8 - Membership Services,Sprint 9 - Membership Services,,,,,,,,,,,,,,,,,,,,,,,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
complete join support by hooking it up to noopssinglechain client,FAB-1547,13957,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,08/Jan/17 2:09 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Oct/17 3:02 AM,,,,,fabric-peer,,,,0,,,,,,,,,"FAB-1022 adds support for join channel.  This task makes the support usable by installing noopssingleclient for each channel. With this support multiple peers in an org can join a chain (created before hand). 

This is an intermediate step pending support for multichannel from gossip.  

The task will also make  a genesis block for **TEST_CHAINID** available for users to join. When ""create chain"" becomes available, users will be able to join arbitrary chains.",,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1639,FAB-1642,,,,,,,FAB-1022,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxgm7:",,,,,,Sprint 9 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Oct/17 3:02 AM;ChristopherFerris;closing, please reopen if still relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create new repo for fabric-runtime,FAB-1548,13958,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,ChristopherFerris,ChristopherFerris,08/Jan/17 6:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,25/Jan/17 1:45 AM,,,v1.0.0,,,,,,0,build-system,,,,,,,,"create a new gerrit repo and github mirror for 'fabric-runtime' per the proposal by Greg Haskins [1]. As with other fabric projects, please list all current Fabric maintainers as maintainers.

[1] https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-January/000510.html",,ChristopherFerris,greg.haskins,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgmf:",,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,ChristopherFerris,greg.haskins,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/17 9:48 AM;ryjones;1) repo: https://gerrit.hyperledger.org/r/#/admin/projects/fabric-busybox
    mirror: https://github.com/hyperledger/fabric-busybox
3) dockerhub: https://hub.docker.com/r/hyperledger/fabric-busybox/

per our discussion on slack:
Permissions for 1) mirror the fabric repo. Submission rules are the same (2+2). Permissions on 3) mirror the fabric repos.

pending: Jenkins;;;","10/Jan/17 3:23 AM;greg.haskins;Completed:

* backend: https://gerrit.hyperledger.org/r/#/c/3761/
* fabric-cop: https://gerrit.hyperledger.org/r/#/c/3767/

Still pending:
* fabric.git mods (Greg)
* jenkins integration (Ramesh);;;","25/Jan/17 1:45 AM;greg.haskins;Closing on account of FAB-1652;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup code related to cryptographic operations,FAB-1553,13963,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Jan/17 6:30 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,19/Jan/17 5:56 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,"The goal os this FAB is to remove completely the package fabric/core/crypto and all its dependencies. 
Call to cryptographic algorithms should be redirected to BCCSP. Configuration of the algorithms to be used and their parameters should be demanded to the component that uses them.



",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7uv:",,,,Unset,,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer i want to integrate MSP logic into Gossip protocols,FAB-1554,13964,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,09/Jan/17 7:01 PM,21/Jul/18 4:08 AM,28/Oct/23 2:58 AM,08/Apr/17 2:23 AM,,,,,fabric-crypto,fabric-gossip,,,1,,,,,,,,,"Gossip protocols leverage an interface to obtain a peer signature/verify a signature and authenticate senders of Gossip messages. We would need to implement this using MSP Manager/interfaces. In particular it requires the completion of these tasks:
 - Implement simple signature verification using MSP objects 
 - Implement block verification mechanisms using MSP objects and per-channel related MSP information (in collaboration with [~jyellick])
 - Implement channel MSP replication across all peers of an organization for gossip peers authentication purposes (in collaboration with [~yacovm])",,elli-androulaki,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Integrate MSP logic into Gossip,To Do,,,Unset,,,,"1|hzx6z3:",,,,Unset,Unset,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/17 7:48 PM;yacovm;The interfaces that we use in gossip are the following:
https://github.com/hyperledger/fabric/blob/master/gossip/api/crypto.go#L25-L47
https://github.com/hyperledger/fabric/blob/master/gossip/api/channel.go#L27-L37

The MSP replication issue can be found [here |https://jira.hyperledger.org/browse/FAB-1459];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to integrate MSP logic to policy framework,FAB-1556,13966,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,09/Jan/17 9:29 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,16/Jan/17 11:37 PM,,,,,fabric-peer,,,,0,security,,,,,,,,"This work item relates to the integration of MSP functionality for identity validity, signature generation / verification to define and evaluate policies. 

Infrastructure wise, policies are needed at endorsement phase/committment phase, at evaluation of reconfiguration blocks. This is a collaborative work with [~jyellick].",,ales,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx80v:",,,,Unset,,Sprint 9  - Crypto,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/17 11:37 PM;ales;Done in https://gerrit.hyperledger.org/r/#/c/3371/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a fabric developer I want to enable the peers to create security context for a new chain using Config Manager framework,FAB-1557,13967,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,09/Jan/17 10:15 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,19/Jan/17 6:29 PM,,,,,fabric-crypto,fabric-peer,,,0,security,,,,,,,,"At new chain setup time, a peer is requested to parse a JoinChannel request that contains a chain genesis block. The peer then needs to process this genesis block, and use configuration items listed within it to setup the security context of that chain:
- the MSPManager of the chain consisting of the VerifierMSPs of all the organizations of the chain
- the chain readers/writers and admins of the chain to enforce chain access control

In this work item we require that this enablement is achieved with the use of Configuration Manager (work that [~jyellick] has been working on).",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx81b:",,,,Unset,,Sprint 10 - Crypto,,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As a Membership Service Provider developer I want to implement methods to evaluate CRL updates,FAB-1558,13968,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,09/Jan/17 10:21 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,16/Feb/17 11:43 PM,,,,,fabric-crypto,,,,0,security,,,,,,,,"This item is associated to the update of CRLs of the COP based MSP.
This may be considered as part of the MSP reconfiguration aspects, or not. We need to discuss, conclude on this and implement what is needed for the decided method.

Discussion also among [~smithbk].",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1321,,,,,,,,,"1|hzx687:",,,,Unset,,Sprint 10 - Crypto,Sprint 11 - Crypto,Sprint 12 - Crypto,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an application developer I want to be able to leverage a library to perform transaction data encryption/decryption ,FAB-1559,13969,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,09/Jan/17 10:30 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,13/Oct/17 12:33 AM,,,v1.1.0-preview,,fabric-crypto,,,,0,security,,,,,,,,"This would be a library that leverages at the chaincode side access to chaincode SHIM (transient-data) and the already implemented BCCSP to decrypt encrypted incoming (to the chaincode) data, and encrypt chaincode state data (uniformly across same chaincode executions).",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,ghx-label-3,,Build an application library for data encryption,To Do,,,,,,,"1|hzx6yn:",,,,Unset,,Sprint 10 - Crypto,,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an application developer I want to design a library to perform data encryption/decryption,FAB-1560,13970,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,elli-androulaki,elli-androulaki,elli-androulaki,09/Jan/17 10:33 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,02/May/17 4:36 AM,,,DUPLICATE,,fabric-crypto,,,,0,security,,,,,,,,,,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6yf:",,,,Unset,,Sprint 9  - Crypto,Sprint 10 - Crypto,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/May/17 4:36 AM;ChristopherFerris;closing this as it was marked duplicate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create test repositories for v1.0 images in hyperledger docker hub,FAB-1562,13972,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Jan/17 1:19 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Jan/17 1:01 AM,,,,,,,,,0,,,,,,,,,"Below is the plan to perform end-to-end test for every component (peer, orderer, cop, node sdk):

Create a job and it should trigger every time when there is a commit merged in Fabric (master branch), fabric-cop and fabric-sdk-node. CI job has to pull the latest commits/or leverage the existing docker images from each repository and perform unit-tests and build images if required.

2nd step: Pull latest node-sdk code and spinup docker network using above images.  After network is started, perform end-to-end test and publish images to hyperledger docker hub

to publish these images we should have test docker repositories:

Need below repositories in docker hub to publish images after successful end-to-end tests.

fabric-dev-peer,
fabric-dev-orderer,
fabric-dev-ccenv, 
fabric-dev-javaenv, 
fabric-dev-cop

please remove fabric-dev-images repository",,ishihara.shun,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgnj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/17 4:58 AM;ryjones;please remove fabric-dev-images repository: done

fabric-dev-peer, created
fabric-dev-orderer, created
fabric-dev-ccenv,  created
fabric-dev-javaenv,  created
fabric-dev-cop created

previous 5 repos have the same ACLs as fabric
;;;","10/Jan/17 4:59 AM;rameshthoomu;Thank you [~ryjones];;;","10/Jan/17 5:17 AM;ryjones;you're welcome [~rameshthoomu]. Please close the ticket once you verify;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderers need to filter incoming Broadcast messages by signature,FAB-1563,13973,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 3:22 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The framework to filter incoming transactions exist, as does the framework to manage policies, but currently the filtering framework does no policy enforcement on incoming broadcast messages, this needs to be fixed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx91j:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,2.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add mock policy infrastructure,FAB-1564,13974,13973,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 3:22 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgnr:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add signature filter,FAB-1565,13975,13973,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 3:22 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgnz:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hook signature filter into broadcast path,FAB-1566,13976,13973,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 3:23 AM,24/Sep/19 9:40 PM,28/Oct/23 2:58 AM,14/Jan/17 8:05 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgo7:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SHA3 Python module used for Behave Tests does not support the z platform,FAB-1567,13977,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,SriramaSharma,harrijk,harrijk,10/Jan/17 3:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Apr/17 6:36 AM,,,v1.0.0,,fabric-peer,,,,0,build-system,,,,,,,,"CR 3665 ( https://gerrit.hyperledger.org/r/#/c/3665/ ) introduced some additional python modules required to run the Behave tests.

One of these modules sha3 (v0.2.1) does not support z Systems.  The module contains three functions that are not yet implemented for Big Endian machines (e.g., z Systems).

Within one of the sha3's source files, KeccakF-1600-opt64.c, the following functions are not yet implemented for z:
1. KeccakF1600_StateOverwriteBytesInLane
2. KeccakF1600_StateOverwriteLanes
3. KeccakF1600_StateOverwriteWithZeroes
",,harrijk,silliman,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgof:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,harrijk,silliman,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"07/Mar/17 11:39 PM;SriramaSharma;Have pushed CR 6415 - https://gerrit.hyperledger.org/r/6415 to fix this issue and also to update the devenv scripts for Power, system z  and x86_64 platforms.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add IngressPolicy orderer shared config item,FAB-1568,13978,13973,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 3:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Jan/17 6:54 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgon:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to take away and consolidate crypto primitives form core/util/utils.go,FAB-1569,13979,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,adc,C0rWin,C0rWin,10/Jan/17 4:47 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Apr/17 1:57 PM,,,v1.0.0,,fabric-crypto,,,,0,,,,,,,,,"This item created basically to capture [~binhn] comments from https://gerrit.hyperledger.org/r/#/c/3595/3/core/util/utils.go

See screenshot:

 !Screen Shot 2017-01-09 at 21.45.50.png|thumbnail! 

Per [~binhn] advice assigning issue to [~adc]",,angelo.decaro,C0rWin,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/17 4:47 AM;C0rWin;Screen Shot 2017-01-09 at 21.45.50.png;https://jira.hyperledger.org/secure/attachment/10373/Screen+Shot+2017-01-09+at+21.45.50.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxp7z:",,,,,,Sprint 16 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,C0rWin,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/17 5:09 PM;angelo.decaro;[~C0rWin][~binhn][~ellaki][~ales] To consolidate such things, we need:
1. Identify where the hash is used,
2. Decide what it means to have that specific hash function there. 

This is important to understand where the configuration is taken from. We cannot use the same hash function everywhere because it depends on the context. 
For example, hash functions are used for the ledger, for the endorsement, to compute digest to be signed and so. Let's consider the case of signing a message. If we use ECDSA with curve P256 we cannot use SHA-128 or SHA-384, we have to use SHA-256. This should be taken care by the local MSP configuration, for example.

I think we need a call here to clarify these aspects :)


;;;","11/Apr/17 3:54 AM;elli-androulaki;[~adc] have we resolved this? Can i ""close"" this item? Thanks!;;;","13/Apr/17 3:56 AM;ChristopherFerris;How was it resolved? [~ellaki] [~adc];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify error handling framework to simplify use and allow for future internationalization measures,FAB-1571,13981,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,10/Jan/17 5:39 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,07/Mar/17 4:20 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The error handling framework needs to be modified to allow easy internationalization of text in the future. 

i18n4go (https://github.com/maximilien/i18n4go) seems like a good package to utilize for this. Does anyone have any other suggestions for packages to internationalize in Golang? Please add any comments/concerns below. 

If the community agrees on this package, the work to prepare the error handling framework should primarily consist of getting rid of the concept of the error map as that will be handled by i18n4go and simply using a message string to store the error message.

Once that is done, we'll be set up for internationalization via i18n4go while also getting the benefits of the error handling framework (callstacks and error codes).

Wiki for the error handling framework (currently only updated for initial design - will be updated as current work is finalized): 
https://wiki.hyperledger.org/error-handling",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgov:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proto files out of sync with generated code,FAB-1572,13982,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,10/Jan/17 7:03 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Jan/17 1:18 AM,,,,,,,,,0,,,,,,,,,"After {{make protos}}:
{{
	modified:   protos/common/chain-config.pb.go
	modified:   protos/common/common.pb.go
	modified:   protos/common/configuration.pb.go
}}",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABB-45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgp3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deliver messages need to be signable,FAB-1573,13983,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 7:05 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The deliver message currently has no authentication associated with it.  Rather than invent yet another signing scheme, we should adapt the Envelope message to be used to send SeekInfo requests.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgpb:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,2.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deliver API needs to check signatures against egress policy,FAB-1574,13984,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 8:05 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The deliver API will support signatures after FAB-1573, so it then needs to actually respect these signatures and only allow readers which are authorized by policy for a given chain.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgpj:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add egress policy orderer config item to shared config,FAB-1575,13985,13984,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 8:06 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgpr:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hook deliver policy filtering into main code path,FAB-1576,13986,13984,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,10/Jan/17 10:40 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgpz:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove access control capabilities from core/chaincode/shim,FAB-1579,13990,13136,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,angelo.decaro,angelo.decaro,10/Jan/17 5:29 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,23/Feb/17 6:53 PM,,,,,fabric-crypto,,,,0,,,,,,,,,These capabilities need be transferred to the access control library.,,angelo.decaro,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgqv:",,,,,,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 12 - Crypto,,,,,,,,,,,,,,,,,,,,,,,angelo.decaro,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rename noopsinglechain and let gossip manage deliver clients,FAB-1580,13991,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,muralisr,muralisr,10/Jan/17 9:12 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Mar/17 5:03 PM,,,,,fabric-peer,,,,0,,,,,,,,,"https://jira.hyperledger.org/browse/FAB-1547 adds support for Create/Join chain and uses the noopssinglechain to establish deliver connection to the orderer. noopssinglechain has now graduated to a full fledged client as part of the committer work. 

This task will take the final step of renaming noopssinglechain and having gossip manage clients.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1022,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxgr3:",,,,,,Sprint 9 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create documentation for ci-management repository,FAB-1581,13992,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Jan/17 1:04 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Apr/17 5:00 AM,,,,,,,,,0,Documentation,,,,,,,,Create documentation on CI-process. Documentation should provide all the information what Jenkins is doing for each repository.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1537,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgrb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/17 5:00 AM;rameshthoomu;patch has been submitted and merged.. https://github.com/hyperledger/ci-management/blob/master/docs/fabric_ci_process.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create documentation on Jenkins Sandbox process,FAB-1582,13993,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Jan/17 1:06 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,24/Feb/17 7:14 AM,,,,,,,,,0,build-system,quality,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1538,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgrj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/17 7:14 AM;rameshthoomu;Patch has been submitted and merged https://gerrit.hyperledger.org/r/#/c/6061/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Jenkins jobs to run fabric-cop builds on power and s390x platforms,FAB-1583,13994,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,11/Jan/17 1:08 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,25/Jan/17 12:32 PM,,,,,,,,,0,,,,,,,,,Create Jenkins jobs to run fabric-cop builds on power and s390x platforms. Existing jenkins job is running on x86_64 platform. [~harrijk] requested to add Jenkins jobs to run cop jobs on other platforms too (s390x and ppc64le),,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgrr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/17 1:09 AM;rameshthoomu;SSH-agent is not working properly in Jenkins power nodes. Ry is working on this to fix. Once that is done will create Jenkins jobs.;;;","25/Jan/17 12:32 PM;rameshthoomu;Jenkin Jobs created in Community CI.. Now fabric-ca and fabric-cop builds are running on all three platforms.. (x86, s390x and ppc64le);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor History code to enable the levelDB work.,FAB-1585,13996,13911,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,MariWade,MariWade,MariWade,11/Jan/17 1:22 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 12:51 AM,,,v1.0.0,,fabric-ledger,,,,0,,,,,,,,,Refactor History code to isolate database specific implementation and create common history interface.  Follow the pattern used by the state database.,,inatatsu,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgs7:",,,,,,Sprint 10 - Ledger,Sprint 11 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,,,,,,,,,,,inatatsu,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uniform to use uint64 in ledger package,FAB-1595,14006,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,grapebaba,grapebaba,grapebaba,11/Jan/17 5:17 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,24/Aug/17 7:00 PM,,,WON'T FIX,,fabric-ledger,,,,0,,,,,,,,,"As [~manish-sethi]said actually underlying interface need uint64, so change int, int64 to uint64 directly in struct, interface, args will reduce type conversion.

[~manish-sethi][~denyeart]Any special case need notice?",,grapebaba,yuanlv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7lj:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,grapebaba,yuanlv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 7:00 PM;grapebaba;won't fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
concurrent_test.go in chaincode fails occastionally,FAB-1600,14011,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,muralisr,muralisr,12/Jan/17 2:34 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Apr/17 10:29 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Occasionally make unit-test fails with the following signature

{code:java}
...
Closing ledger mgmt
ledger mgmt closed
FAIL: TestExecuteConcurrentInvokes (59.73s)
concurrency_test.go:134: Error concurrent query 92(nkpi)
Init CSCC
....
{code}

Example -  https://jenkins.hyperledger.org/job/fabric-verify-x86_64/5021/consoleFull.

The error is due to failure receiving an expected value (receiving ""nil"" value instead) when executing queries concurrently. 

This could be a problem in the running chaincode (ie, the test case) or somewhere else . But rather than have CI slowed down with periodic failures, will Skip CI for now
",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1606,FAB-1607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/17 2:23 AM;muralisr;image-2017-01-11-12-23-45-890.png;https://jira.hyperledger.org/secure/attachment/10375/image-2017-01-11-12-23-45-890.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7hz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Apr/17 10:28 AM;muralisr;This was due to timing in handling ChaincodeMessages that were triggered in an async fashion. This actually sporadically manifested in non concurrent CI runs as well.  https://jira.hyperledger.org/browse/FAB-2203 captures the details and was fixed in http://gerrit.hyperledger.org/r/5919.

In the spirit of keeping chaincode test time down, will not attempt to resurrect concurrent_test.go  but leave it as Skipped and mark this as Done. Any issues with the concurrency will surely come up in stress tests and we can revisit this (even use concurrent_test.go in that investigation)  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect marshalling of transaction into block during block event generation,FAB-1603,14014,13227,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,pmullaney,pmullaney,pmullaney,12/Jan/17 3:52 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,18/Jan/17 7:06 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,Block delivered by events is not in the correct format.,,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgv3:",,,,,,Sprint 5 - Consensus,Sprint 7 - nodeSDK,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 11 - SDK node,Sprint 12 - SDK node,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,Sprint 16 - SDK node,,,1.0,,,,,,,,,,,,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write intro piece for v1.0 Overview documentation,FAB-1604,14015,13918,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joshhus,joshhus,joshhus,12/Jan/17 3:55 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,24/Jan/17 6:31 AM,,,v1.0.0,,fabric-quality,,,11/Jan/17 12:00 AM,0,quality,,,,,,,,"Write intro and TOC for v1.0 Overview documentation. 
https://gerrit.hyperledger.org/r/#/c/3871/2/docs/OverviewTOC.md (Old file)

Updated content and added new file: https://gerrit.hyperledger.org/r/#/c/4727/1/docs/overview.md",,ishihara.shun,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,0,,0%,28800,0,,,,,,,,,,,,,,,,,,,,,,,FAB-1509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7vb:",,,,,,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,,,,,,,,,,,,,,,,,,,ishihara.shun,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/17 1:22 AM;joshhus;https://gerrit.hyperledger.org/r/#/c/3871/;;;","24/Jan/17 12:17 AM;joshhus;To reflect an accurate file name (no TOC, no v. #) this file is being replaced with ""overview.md"" ;;;","24/Jan/17 6:30 AM;joshhus;Updated overview and pushed new file/name - now overview.md. 
Incorporated feedback from Chris Ferris, including removal of version #s.

https://gerrit.hyperledger.org/r/#/c/4727/1/docs/overview.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skip TestExecuteConcurrentInvokes,FAB-1606,14017,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,12/Jan/17 4:09 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 12:53 AM,,,,,fabric-peer,,,,0,,,,,,,,,skip TestExecuteConcurrentInvokes,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx6bz:",,,,,,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
investigate the sporadic failures,FAB-1607,14018,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,12/Jan/17 4:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,29/Mar/17 2:07 AM,,,,,fabric-peer,,,,0,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx55b:",,,,,,Sprint 9 - Endorser,Sprint 10 - Endorser,Sprint 11 - Endorser,Sprint 12 - Endorser,Sprint 13 - Endorser,Sprint 14 - Endorser,Sprint 15 - Endorser,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/17 2:07 AM;muralisr;Actually this was fixed by clean up done in chaincode ... mainly https://jira.hyperledger.org/browse/FAB-2203 (https://gerrit.hyperledger.org/r/#/c/5923). Going to close this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Normalize fabric directory structure, with common components inside fabric/common",FAB-1608,14019,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,12/Jan/17 4:29 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,12/Apr/18 10:12 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"There used to only be one peer binary which linked in all of the code.  However, in the v1 architecture, the orderer has been introduced, which means that certain components (like MSP, BCCSP, etc.) need to be linked by both the orderer and the peer.

Having the orderer link into {{fabric/core}} is dangerous because it might develop import cycles or pull in large amounts of code it didn't intend to.  This decreases build speed, increases testing time, and generally makes the code more difficult to understand.

Instead, we propose the following conventions.


* {{fabric/vendor}} # Used as it is today
* {{fabric/orderer}} # May link to anything in fabric/common, fabric/vendor, fabric/protos, and itself
* {{fabric/peer}} # May link to anything in fabric/common, fabric/vendor, fabric/protos, and itself
 * {{fabric/protos}} # May not reference anything but itself
 * {{fabric/common}} # May reference fabric/protos and itself

This is going to require a lot of cleanup across the codebase, but should be a significant improvement.",,jyellick,kchristidis,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2489,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgvb:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,jyellick,kchristidis,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/17 4:45 AM;kchristidis;I agree. Note that `fabric/protos` referencing nothing but itself means that the `utils` package inside it will need to be moved away. (Which is a good thing IMO, `protos` should just have protos.);;;","12/Jan/17 5:31 AM;muralisr;[~kchristidis] To me naming it ""utils"" is the problem. The intent was to keep all the ""marshalls"" in one place.

An approach to do that would be, for each proto file ""f"", create ""fmarshal.go"" where we marshal and unmarshall types generated for that proto file. We can then move the ""utils"" to ""common"" which will use those marshall / unmarshall functions to compose higher util functions. This way we still keep the marshaling in one place and in the same place where the go files are generated for proto. 

This can be done in a self-contained task.;;;","12/Apr/18 10:13 PM;mastersingh24;marking this as done ... we have a whole slew of new hygiene tasks which may result in some restructuring of the code;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move MSP to fabric/common,FAB-1609,14020,14019,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,12/Jan/17 4:30 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Apr/18 10:12 PM,,,WON'T FIX,,fabric-peer,,,,0,,,,,,,,,,,ChristopherFerris,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgvj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/17 7:28 PM;ChristopherFerris;[~jyellick] is this still a thing? Seems like map has its own home now. Can this be closed?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move BCCSP to common,FAB-1610,14021,14019,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,adc,jyellick,jyellick,12/Jan/17 4:30 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/May/17 6:40 PM,,,,,fabric-peer,,,,0,,,,,,,,,See context in parent.,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgvr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/17 7:38 PM;mastersingh24;[~jyellick] - is the fact that we moved this straight under fabric good enough to close this one?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create configuration template for orderer user to consume,FAB-1611,14022,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 7:31 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The orderer is currently hackily copying code from the orderer bootstrapper to generate the new chain request.  This is not a real path, as this needs to be supplied by the orderer, this story should address that.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgvz:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rework config to specify genesis parameters separately,FAB-1612,14023,14022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 7:32 AM,18/Feb/21 8:26 AM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,ishihara.shun,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-18426,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgw7:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create configuration item templates,FAB-1613,14025,14022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 12:42 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgwn:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert provisional bootstrapper to support config templating,FAB-1614,14026,14022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 2:10 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"In order to help facilitate the removal of duplicated orderer bootstrap code in utils, this changeset converts the orderer provisional bootstrap to use and supply the new configtx.Template interface.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgwv:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define config template proto and tool to write the orderer template config,FAB-1615,14027,14022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 2:45 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgx3:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move code to suitable file,FAB-1616,14030,13944,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,grapebaba,grapebaba,12/Jan/17 3:29 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,24/Jan/17 6:33 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,Remove hash.go and move the code to package.go,,grapebaba,greg.haskins,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgxr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,grapebaba,greg.haskins,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 4:57 PM;grapebaba;About https://gerrit.hyperledger.org/r/#/c/3901/ this patch, I hope we could discuss here. In short, the code of same logic including download chaincode and make a tar file in different packages (golang/java/car) is not consistent. In car package they are in package.go, but in hash.go in golang and java package. Also now the hash method is not used in car package. 

So above two points I want to fix
For first, I feel package.go is more suitable.
For second, I think it should also need invoke hash method.

[~muralisr][~ghaskins][~harrijk][~hgabre][~satheeshk];;;","23/Jan/17 9:59 PM;muralisr;[~grapebaba] I agree consistency would be good. One thing to note is that the hashcode for a chaincode package could be coming back (as an additional check... we will NOT go back to using the hashcode as a name). https://jira.hyperledger.org/browse/FAB-1783 has some details on how hashcode will be used. Something to consider as part of this work.;;;","23/Jan/17 10:24 PM;greg.haskins;I am in the process of re-working this area right now, but for a different reason.  I am moving the Dockerfile injection to the endorser side of the processing so that the CLI/SDKs no longer need to provide it.  I have noted that the package generation is a bit of a mess.  Perhaps we need a design spec.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define configtx/test package with sample data,FAB-1617,14031,14022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 3:36 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:03 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgxz:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make commit block method from rawledger interface to ledger interface,FAB-1618,14032,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,grapebaba,grapebaba,grapebaba,12/Jan/17 4:13 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,24/Jan/17 6:33 PM,,,,,fabric-ledger,,,,0,,,,,,,,,Make commit block method from rawledger interface to ledger interface,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgy7:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jan/17 10:29 AM;grapebaba;[~manish-sethi][~denyeart]About the patch[4113|https://gerrit.hyperledger.org/r/#/c/4113/], would you like give some comments? It seems ledger interfaces not stable recently, so I am not sure I did the change towards correct direction. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove legacy chain creation via genesis tx,FAB-1619,14033,14022,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,12/Jan/17 4:21 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Jan/17 8:04 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The existing code used the rather fragile mechanism of taking an existing genesis block, stripping out the known problem config, and modifying it, and re-encoding it to create a new chain creation transaction.  This changeset removes the last vestiges of this behavior.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgyn:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add restart support,FAB-1623,14038,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,13/Jan/17 3:12 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,24/Jan/17 2:12 PM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgzj:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/17 12:33 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4625/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
COP client gives error messages when TLS is disabled,FAB-1624,14039,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,skarim,elast,elast,13/Jan/17 3:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Mar/17 11:54 PM,,,,,,,,,0,,,,,,,,,"I started a COP server with TLS disabled in the cop.json config, then tried to enroll admin through the COP client:

[root@oc0337116681 bin]# ./cop client enroll admin adminpw http://localhost:8888
2017/01/12 07:46:05 [INFO] received CSR
2017/01/12 07:46:05 [INFO] generating key: ecdsa-256
2017/01/12 07:46:05 [INFO] encoded CSR
2017/01/12 07:46:05 [ERROR] Failed to load client configuration file [error: open /root/cop/cop_client.json: no such file or directory]
2017/01/12 07:46:05 [ERROR] Error: unexpected end of JSON input
2017/01/12 07:46:05 [WARNING] Client Cert or Key not provided, if server requires mutual TLS, the connection will fail [error: open : no such file or directory]
2017/01/12 07:46:05 [ERROR] No CA cert files provided, TLS connection cannot be established
2017/01/12 07:46:05 [INFO] enrollment information was successfully stored in /root/cop/key.pem and /root/cop/cert.pem

Even though the enrollment went through successfully, the client should not give error messages about TLS, seeing as TLS is disabled.  The same thing happened when I tried to register.",,elast,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgzr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elast,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I need to ensure that the hashes that are used within the chain/blockchain installation included in the genesis block,FAB-1625,14040,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,angelo.decaro,elli-androulaki,elli-androulaki,13/Jan/17 3:50 AM,27/Jul/19 9:00 PM,28/Oct/23 2:58 AM,27/Jul/19 9:00 PM,,,,,,,,,0,,,,,,,,,"This item aims to define which are the hardcoded parameters (cryptographic parameters), and which ones are configurable from the ones associated to
 - messages exchanged throughout a blockchain network, e.g., type of hash function
 - BCCSP configuration 
From these ones, we need to decide on which of them are added to the genesis block, Ideally all configurable parameters should be added to the genesis block.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxgzz:",,,,,,Sprint 9  - Crypto,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate performance benchmark test,FAB-1626,14041,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Jan/17 3:54 AM,12/Jul/19 8:40 PM,28/Oct/23 2:58 AM,12/Jul/19 8:40 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Generate a performance benchmark test for v1.0.  The test includes latency, stress, long run, concurrency run, complex etc.",,chrisconway,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1017,,,,,,,,,"1|hzxg5b:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,chrisconway,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Latency test using Node SDK,FAB-1627,14042,14041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Jan/17 4:09 AM,12/Jul/19 8:39 PM,28/Oct/23 2:58 AM,12/Jul/19 8:39 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Execute latency benchmark using node SDK with 1 thread using chaincode example02 and auction.  The average time (ms) per transaction will be presented.
1. 1000 invoke (Query) on one peer
2. 1000 invoke (Move) on one peer",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh07:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stress test using Node SDK,FAB-1628,14043,14041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Jan/17 4:18 AM,12/Jul/19 8:39 PM,28/Oct/23 2:58 AM,12/Jul/19 8:39 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Execute stress test using Node SDK on 1 orderer, 1 cop, 4-peer network for 600 seconds on Z and X (softlayer or bluemix) systems.  The test is executed with 4 concurrent thread and each thread sends transactions to one of the 4 peers.  TPS (Transaction per Second) will be presented after the test.  The test include:
1. each thread executes invoke (Query) with example02 on Z and X
2. each thread executes invoke (Move) with example02 on Z and X
3. each thread executes invoke (Query) with auction chaincode on Z and X
4. each thread executes invoke (Move) with auction chaincode on Z and X",,chrisconway,dongming,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh0f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,chrisconway,dongming,n-horiguchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
long run test using Node SDK,FAB-1629,14044,14041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Jan/17 4:23 AM,12/Jul/19 8:39 PM,28/Oct/23 2:58 AM,12/Jul/19 8:39 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Execute long run test using Node SDK on an X (softlayer) system.  The test will send invokes (Move) using auction chaincode with random payload sizes ranging from 1kb-2kb to a peer for 72 hours at the rate of 1 transaction per second.  This is executed wit a single thread to a single peer.  The test is passed if no transaction dropped, otherwise the test is failed.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh0n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
concurrency trst using Node SDK,FAB-1630,14045,14041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Jan/17 4:29 AM,12/Jul/19 8:39 PM,28/Oct/23 2:58 AM,12/Jul/19 8:39 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Execute concurrency test using Node SDK on a network of 1 COP, 1 Orderer, 4-peer on an X (softlayer) system. The test sends 50 concurrency invoke (Mode) to each of the four peers for a duration of 10 minutes with auction chaincode with1kb payload.",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh0v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Complex transaction test using Node SDK,FAB-1631,14046,14041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,13/Jan/17 4:33 AM,12/Jul/19 8:39 PM,28/Oct/23 2:58 AM,12/Jul/19 8:39 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Execute complex transactions test using Node SDK on X with 1 COP, 1 Orderer, 4-peer network. The test sends invoke (Query) after each invoke (Move) transaction.  The invoke (Move) are of various payload sizes ranging from 10kb-500kb and are send to all four peers for a duration of 10 minutes.  For each thread, the invoke (Move) is sent every 3 seconds followed by an invoke (Query).  This is performed with 12 threads to a 4-peer network.",,chrisconway,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh13:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,chrisconway,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system chaincodes sometimes panic on cleanup,FAB-1632,14047,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,muralisr,muralisr,muralisr,13/Jan/17 6:34 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Aug/17 8:52 AM,,,v1.1.0,,fabric-peer,,,,0,help-wanted,,,,,,,,"Once a while system chaincodes panic when bringing the system down (deregistering the sys cc) as in this console https://jenkins.hyperledger.org/job/fabric-verify-x86_64/5086/console

panic: send on closed channel

goroutine 2371 [running]:
panic(0xa8b880, 0xc4202f1ed0)
       /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/container/inproccontroller.(*inProcStream).Send(0xc42024cf90, 0xc420291cc0, 0xc42024ec98, 0x42bf81)
       /opt/gopath/src/github.com/hyperledger/fabric/core/container/inproccontroller/inprocstream.go:34 +0x4f
github.com/hyperledger/fabric/core/chaincode.(*Handler).serialSend(0xc42024ec80, 0xc420291cc0, 0x0, 0x0)
       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:147 +0xd6
github.com/hyperledger/fabric/core/chaincode.(*Handler).serialSendAsync.func1(0xc42024ec80, 0xc420291cc0, 0x0)       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:165 +0x43created by github.com/hyperledger/fabric/core/chaincode.(*Handler).serialSendAsync       
       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:170 +0x5d
FAIL  github.com/hyperledger/fabric/core/chaincode    168.380s
",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7hb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Aug/17 9:58 PM;muralisr;[~raidinesh80] I know you have working fix for this... however this is happening of  more frequently of late. Please allow me to checkin this fix for now to provide relief to CI. If yours is better, we can change to that. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Drive concurrent end-to-end transactions using different chaincodes with cccheker tool,FAB-1633,14048,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,Ratnakar,Ratnakar,13/Jan/17 9:37 AM,23/Jan/20 3:47 AM,28/Oct/23 2:58 AM,23/Jan/20 3:47 AM,,,,,,,,,0,quality,stale-item,,,,,,,"* Drive concurrent end-to-end transactions using single chaincode with ccchecker tool
* Drive concurrent end-to-end transactions using multiple chaincodes with ccchecker tool",,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxh1b:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,Ratnakar,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:47 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write a new chaincode to drive performance through NodeSDK,FAB-1634,14049,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,13/Jan/17 9:43 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,28/Apr/17 3:23 AM,,,,,,,,,0,quality,,,,,,,,Development of a new chaincode with complex transactions for driving performance tests,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxh1j:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/17 3:23 AM;Ratnakar;The chaincode has been included in Performance Traffic Engine (PTE) tool.

Please refer the chaincode here: https://gerrit.hyperledger.org/r/#/c/8111/1/test/tools/PTE/chaincode_sample.go;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Publish docker images to docker registry through Nexus,FAB-1635,14050,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,13/Jan/17 9:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Mar/17 4:33 AM,,,,,,,,,0,,,,,,,,,"Create CI job to test end-to-end flow with Jenkins CI and publish docker images to Nexus Repository. After successfully execute the end-to-end test, store the Commit of Peer, cop and sdk-node repositories in configuration file. 

",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh1r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 9:52 AM;rameshthoomu;Publishing docker images through docker registry using Nexus is possible but this requires Nexus version 3.0.. As per chat conversation with Ry Jones (Linux foundation), Nexus 3.0 version isn't in the schedule yet, it isn't released under the license we have yet. This is blocking to complete the above task. Have to check with @cbf on moving this forward. ;;;","04/Mar/17 11:05 PM;rameshthoomu;We have now nexus3 server available for Hyperledger builds. I have submitted WIP patch https://gerrit.hyperledger.org/r/#/c/6767/ and tested this through Sandbox job.. Observed build failures with incorrect `groupID` and facing issues with docker push. Working with  [~jwagantall];;;","11/Mar/17 5:42 AM;rameshthoomu;Patch has been provided and it is merged. Monitoring the Nexus build;;;","11/Mar/17 10:44 AM;rameshthoomu;We have created CI job to build and publish docker images to nexus repository. https://nexus3.hyperledger.org/#browse/browse/components:docker.snapshot and CI job here https://jenkins.hyperledger.org/job/fabric-nexus-docker-x86_64/3/console

Below is the process to publish docker images to nexus:

docker tag hyperledger/fabric-peer:latest nexus3.hyperledger.org:10003/hyperledger/fabric-peer:x86_64-0.7.0-snapshot-a6365f4
docker tag hyperledger/fabric-peer:latest nexus3.hyperledger.org:10003/hyperledger/fabric-peer:latest

Below are the steps to pull docker images:

docker login -u docker -p docker nexus3.hyperledger.org:10001
docker pull nexus3.hyperledger.org:10001/hyperledger/fabric-peer
;;;","15/Mar/17 4:33 AM;rameshthoomu;Patch has been submitted to publish docker images to nexus repository. Images are being published to nexus repository.https://nexus3.hyperledger.org/#browse/browse/components:docker.snapshot;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
References to rocksdb should be removed from fabric,FAB-1636,14051,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,smithbk,smithbk,13/Jan/17 2:07 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Apr/17 9:05 PM,,,v1.0.0,,fabric-ledger,,,,0,Ledger,,,,,,,,"The fabric still has references to rocksdb.  I'm removing the one in the CGO_LDFLAGS env variable in fabric/devenv/setup.sh so COP will build in https://jira.hyperledger.org/browse/FAB-1597, but looks like other references need to be removed and perhaps other clean up needed.   See references to rocksdb ...
# cd fabric
# grep -r rocksdb *
examples/chaincode/go/asset_management02/asset.yaml:        RUN cd /opt  && git clone --branch v4.1 --single-branch --depth 1 https://github.com/facebook/rocksdb.git && cd rocksdb
examples/chaincode/go/asset_management02/asset.yaml:        WORKDIR /opt/rocksdb
examples/chaincode/go/asset_management02/asset.yaml:        ENV LD_LIBRARY_PATH=/opt/rocksdb:$LD_LIBRARY_PATH
examples/chaincode/go/asset_management02/asset.yaml:        RUN CGO_CFLAGS=""-I/opt/rocksdb/include"" CGO_LDFLAGS=""-L/opt/rocksdb -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy"" go install && cp $GOPATH/src/github.com/hyperledger/fabric/core.yaml $GOPATH/bin
examples/chaincode/go/asset_management_with_roles/asset.yaml:        RUN cd /opt  && git clone --branch v4.1 --single-branch --depth 1 https://github.com/facebook/rocksdb.git && cd rocksdb
examples/chaincode/go/asset_management_with_roles/asset.yaml:        WORKDIR /opt/rocksdb
examples/chaincode/go/asset_management_with_roles/asset.yaml:        ENV LD_LIBRARY_PATH=/opt/rocksdb:$LD_LIBRARY_PATH
examples/chaincode/go/asset_management_with_roles/asset.yaml:        RUN CGO_CFLAGS=""-I/opt/rocksdb/include"" CGO_LDFLAGS=""-L/opt/rocksdb -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy"" go install && cp $GOPATH/src/github.com/hyperledger/fabric/core.yaml $GOPATH/bin
",,mastersingh24,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";15/Apr/17 10:29 PM;mastersingh24;600",1800,0,600,33%,1800,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx4l3:",,,,,,Sprint 15  - Ledger,Sprint 16  - Ledger,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Apr/17 10:29 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/8067/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MVP design and implementation - python SDK,FAB-1637,14052,,Epic,Closed,FAB,Fabric,software,denyeart,,,High,Done,lafenicecc,baohua,baohua,13/Jan/17 2:52 PM,25/Jun/21 5:15 PM,28/Oct/23 2:58 AM,30/Aug/18 11:53 AM,,,Future,,fabric-sdk-py,,,,0,,,,,,,,,"Support chaincode deploy/invoke with a MVE (1 peer + 1 order + 1 ca).

Working-on volunteers:
 * chang
 * Latitia
 * kai
 * baohua
 * tony yang
 * dong wang

Welcome for more volunteers.",,baohua,TiantianGao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,432000,432000,,0%,432000,432000,,,FAB-2458,FABP-154,,,,,,,,,,,,,,,,,,,,,,FABP-64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,Python SDK MVP,,,,Unset,,,,"1|hzxh1z:",,,,Unset,Unset,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,baohua,TiantianGao,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Partial-Key query support for KV-ledger,FAB-1638,14055,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Honglei,Honglei,Honglei,13/Jan/17 5:29 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Mar/18 10:49 PM,,,Future,,fabric-ledger,,,,0,,,,,,,,,"currently, leveldb based KV-ledger doesn't support partial key query.  This makes table query on multi-key table very difficult, and also makes difficulties on table design.

This task is to support partial query on kv table.
The design is to pass table/column definitions to KV-ledger, rather than covert them to get/put state in chaincode-shim.  If multiple keys are defined in table, one primary key must be defined, ledger will create one primary table which map primary-key to data, and some sub-tables which contains mappings between sub-keys and primary-key.

in GetRows query, user will not need provide all keys any more.  Chaincode-shim will not convert the GetRows to getstate, but pass all keys in query to kv-ledger.  ledger will do the query with sub-tables to find mapping to primary-key, then get row data with primary-key from primary table.

To help our chaincode development, we've implemented multikey-table in fabric 0.6.  This is a porting to fabric 1.0.",,denyeart,Honglei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxixj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,Honglei,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/17 6:18 PM;denyeart;[~Honglei]
Project teams have found that the table metaphor did not map well over key-value database.  Instead of a implementing a series of patches on top of an imperfect metaphor, it was decided to not support table api in v1 and instead encourage projects to model data as JSON and persist the exact composite keys that they need for their requirements.  New chaincode APIs CreateCompositeKey() and PartialCompositeKeyQuery() have been implemented to assist chaincode developers with querying based on a subset of keys, to fulfill their query requirements in a more controllable manner.
See gerrit changeset: https://gerrit.hyperledger.org/r/#/c/3649/
See Jira item for more details: https://jira.hyperledger.org/browse/FAB-1257;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CONFIGURATION_TRANSACTION validations,FAB-1639,14058,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,muralisr,muralisr,14/Jan/17 12:40 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 11:54 PM,,,,,fabric-peer,,,,0,,,,,,,,,Currently fabric validates ENDORSEMENT_TRANSACTION at endorsement and commit times. We need to do validation for CONFIGURATION_TRANSACTIONS as well. Some indications and placeholders for this are in the channel join/create changeset https://gerrit.hyperledger.org/r/#/c/3853/,,elli-androulaki,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxh2v:",,,,,,Sprint 9 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/17 7:38 AM;muralisr;from [~jyellick] as a comment in https://gerrit.hyperledger.org/r/#/c/3853/7/core/peer/msgvalidation.go

General question, what is the strategy for handling a config transaction which does not validate? I would expect generally that this is irrecoverable because it indicates a dishonest/broken orderer, because if the configuration transaction appears, the orderer has adopted the new configuration, and letting the peer ignore it is likely to cause non-determinism.

FYI ... [~ales] [~C0rWin];;;","08/Apr/17 2:13 AM;elli-androulaki;hi, since the orderers do this validation to a large extend (signature validation / permission is checked there) , I believe if the config tx-s do not validate when they reach the peers we have a ""serious"" issue... ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Software Testing with PKCS11,FAB-1640,14059,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vpaprots,vpaprots,vpaprots,14/Jan/17 1:47 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Apr/17 3:27 PM,,,,,fabric-quality,,,,0,HSM,,,,,,,,"It would be best if softhsm.so could be made to work on build machines. This would let us test  p11 bccsp in COP/FABRIC/SDK as part of the build.

This might not be feasible (i.e. softhsm bugs, lack of ecc support) but worth a try.

If that is not possible, use this item to agree that p11 bccsp code will be tested out-of-band on machines with a crypto-card

",,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh33:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/17 3:27 PM;vpaprots;This was done in https://gerrit.hyperledger.org/r/#/c/4795/, closing;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Setup Continuous Integration jobs to setup v1.0 Automation tests of orderer, Endorser, Ledger",FAB-1641,14060,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Jan/17 2:08 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,08/Jul/17 5:13 AM,,,,,,,,,0,,,,,,,,,"Setup Continuous Integration job to setup v1.0 below tests

- Create Cron job to run end-to-end tests
- Create Daily Job to run Automation tests suites of orderer, ledger, endorser tests
- Create Weekly Job to run Automation test suites of orderer, ledger, endorser tests",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxh3b:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/May/17 12:05 PM;rameshthoomu;We have a regression folder created in fabric repository. Once the tests are available in /regression/daily/weekly/release folders, will integrate these tests in Production jenkins.

[~scottz] [~latitiah] [~Nishi] [~Ratnakar] [~dongming] [~suryalnvs] please let us know once you add/submit tests in regression folder or if you feel the test requires CI run. ;;;","08/Jul/17 5:14 AM;rameshthoomu;Daily Test suite is in-progress now in CI. https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-tests-x86_64/test_results_analyzer/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for channel configuration properties for channel creation,FAB-1642,14061,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,14/Jan/17 2:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Mar/18 8:49 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"https://jira.hyperledger.org/browse/FAB-1547 (via https://gerrit.hyperledger.org/r/#/c/3853/)  adds support for Channel create/join. The configuration template received from the orderer needs to be appended with channel specific configuration items such as 
* anchor peers for the channel
* chaincode deployment policy
* MSP for the channel",,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzxh3j:",,,,,,Sprint 9 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Apr/17 3:48 PM;muralisr;This is mostly done.  We don't have ""chaincode deployment policy"" but have

anchor peers for the channel
MSP for the channel

Moving this to 1.1 (and actually there may be a dup for this anyway).

[~ellaki] [~binhn];;;","21/Mar/18 8:49 PM;denyeart;[https://gerrit.hyperledger.org/r/#/c/3853/] was merged in v1.0.  Chaincode deployment policy will be handled with the 1.2 lifecycle epic. Marking as Done in v1.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create test suite to run example chaincodes,FAB-1643,14062,14060,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Jan/17 2:12 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Jun/17 12:48 AM,,,,,,,,,0,,,,,,,,,Create test suite to run example chain codes,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh3r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/May/17 11:59 AM;rameshthoomu;[~Nishi] submitted this patch and it's in review.. https://gerrit.hyperledger.org/r/#/c/8669/

Once this patch is merged in fabric, will integrate CI test for this production Jenkins. till then I have integrated this test in Jenkins sandbox environment and verifying this daily.;;;","15/Jun/17 12:48 AM;rameshthoomu;example02 Chaincode tests are in progress in daily test suite. Marking this as closed. Will create another JIRA item to integrate other chaincode tests once they are available. Right now we have enabled CI tests with what ever the chaincode tests are available in the daily folder.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Create CI Job to test Weekly Test Suite of Orderer, Endorser  and Ledger",FAB-1644,14063,14060,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Jan/17 2:13 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jun/17 12:11 AM,,,,,,,,,0,quality,,,,,,,,"Create CI Job to test Weekly Test Suite of Orderer, Endorser  and Ledger",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh3z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 12:51 AM;rameshthoomu;Testing ledger tests in Jenkins sandbox environment.. Once these tests are passed in sandbox CI, will enable these tests in production CI and generate Result dashboard on jenkins;;;","19/Jun/17 12:11 AM;rameshthoomu;patch https://gerrit.hyperledger.org/r/#/c/10667/ has been merged and now daily test suite runs ledger, auction and chaincode example02 tests. 

See the test result output here https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-chaincode-tests-x86_64/test_results_analyzer/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Key Generation and Fabric bootstrapping with HSM,FAB-1645,14065,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mastersingh24,vpaprots,vpaprots,14/Jan/17 2:50 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Sep/17 8:49 PM,,,WON'T FIX,,fabric-crypto,,,,0,HSM,,,,,,,,"For 1.0, certificates and keys are in general expected to exist already, generated out-of-band.

Need to make sure keys (and certs) can be generated on the HSM.",,AshishkumarLakshmanan,binhn,elli-androulaki,jeffgarratt,mastersingh24,matingwei,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx5mv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AshishkumarLakshmanan,binhn,elli-androulaki,jeffgarratt,mastersingh24,matingwei,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/17 2:55 AM;vpaprots;Similar to https://jira.hyperledger.org/browse/FAB-1141 but with HSM.

Since the bootstrapping Jeff has is in Pyton, I (VP) will likely need to provide some golang tool to generate bccsp Keys (link to self: essentially https://gerrit.hyperledger.org/r/#/c/3679/6/cli/server/server_test.go except generate new PEM, not import existing PEM);;;","01/Feb/17 12:05 AM;jeffgarratt;Just pushed https://gerrit.hyperledger.org/r/#/c/5095/

This gets very close to complete usage for both orderer and peer networks.

Will update as soon as bootstrap is complete. (follow  https://jira.hyperledger.org/browse/FAB-1141 );;;","19/Apr/17 8:49 PM;elli-androulaki;Hi, should we add this under Sprint 16? if in review it may make sense to be added there, no?;;;","10/May/17 10:47 PM;vpaprots;[~mastersingh24] this item was for [https://gerrit.hyperledger.org/r/#/c/8105/] you were going to take it over. Are you still considering that?

Assigning to you, but let me know what you think. Close?;;;","07/Jun/17 1:37 AM;binhn;[~vpaprots] [~mastersingh24]

It looks like the CR is ready, but I am not sure the status here.  Is it completed that we should merge and close?;;;","08/Jun/17 3:05 PM;vpaprots;I've been playing the rebase game, hoping to save Gari some time in exchange for using mine.

(I think I found a replacement for solitaire as a time-waster -> `git rebase & git push fabric`)

Gari do we want this change? cryptogen is built with `-tags nopkcs11` so I can only assume fabric has no need for pkcs11 and we should move it to a different codebase.;;;","12/Sep/17 8:50 PM;mastersingh24;We're not going to do this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Scalability test using Node SDK,FAB-1646,14066,14041,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,14/Jan/17 3:16 AM,12/Jul/19 8:39 PM,28/Oct/23 2:58 AM,12/Jul/19 8:39 PM,,,,,fabric-quality,,,,0,,,,,,,,,"Execute scalabity test using Node SDK,
1. number of channels on one peer
2. TPS for both invoke and query with
    2.1. one channel with various peers (1 chaincode)
    2.2. two channels (1 chaincode)
            2.2.1. one channel has various peers and one channel has fixed number of peers
            2.2.2. both channels have various peers
     2.3. two channels (2 chaincodes)
            2.3.1. one channel has various peers and one channel has fixed number of peers
            2.3.2. both channels have various peers
    2.4. various number of channels (1 chaincode)
            2.4.1. all channels have a fixed number of peers
            2.4.2. all channels have various peers
    2.5. various number of channels (multiple chaincodes)
            2.5.1. all channels have a fixed number of peers
            2.5.2. all channels have various peers",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh47:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BCCSP configuration,FAB-1647,14067,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vpaprots,vpaprots,vpaprots,14/Jan/17 3:17 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Apr/17 3:24 PM,,,,,fabric-crypto,,,,0,,,,,,,,,"How does Fabric know to use P11 CSP?

MSP specifies which BCCSP to use:
- configuration in genesis block
- local signer for node operations",,elli-androulaki,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh4f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Apr/17 3:20 AM;elli-androulaki;Why does fabric need to know if a peer leverages P11 BCCSP? Isn't this a per-peer local config option? Is this for v1?;;;","17/Apr/17 3:24 PM;vpaprots;This was done in https://gerrit.hyperledger.org/r/#/c/5897/, closing;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Golang P11 BCCSP migration,FAB-1648,14068,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,vpaprots,vpaprots,vpaprots,14/Jan/17 3:18 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Feb/17 4:50 AM,,,,,fabric-crypto,,,,0,,,,,,,,,,,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxh4n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,vpaprots,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/17 6:27 AM;vpaprots;Placeholder: https://gerrit.hyperledger.org/r/#/c/3779/
re-sync: https://gerrit.hyperledger.org/r/#/c/4685/
;;;","23/Jan/17 6:56 AM;vpaprots;Vendor Bindings: http://gerrit.hyperledger.org/r/4701;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Normalize the orderer configuration item names and conventions,FAB-1649,14072,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,14/Jan/17 5:34 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,01/Feb/17 4:28 AM,,,,,,,,,0,common-components,,,,,,,,"The orderer configuration items have been added one by one as needed, so some commonalities have been ignored, and some names are inconsitent or misleading.  This story is to normalize those names.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi27:",,,,Unset,,Sprint 9 - consensus,,,,,,,,,,,,,2.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix misleading and problematic chain-config.proto,FAB-1650,14075,14072,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,14/Jan/17 6:50 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 12:10 AM,,,,,,,,,0,,,,,,,,,"The chain-config.proto file is misleadingly named, as it contains only MSP principal things.  The hyphen in the name is also causing problems with the proto generation for the python bdd, so this should be changed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi2f:",,,,,,Sprint 9 - consensus,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
broadcast_timestamp client broken,FAB-1651,14078,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,14/Jan/17 7:39 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Jan/17 5:55 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The broadcast_timestamp client has gotten slightly out of sync with the
orderer code, and does not work.
",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi2n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Large byte sizes difficult to read in config file,FAB-1653,14080,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,15/Jan/17 1:45 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,17/Jan/17 11:42 PM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"See Jason's the comments at [https://gerrit.hyperledger.org/r/#/c/3813/4/orderer/orderer.yaml@31]

Either change the units of the bytes size configuration properties to KB or MB, or figure out a way to let the user specify the units.",,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi33:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/17 9:59 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4011/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix broken Docker Compose files for Kafka orderer,FAB-1656,14083,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harrijk,kchristidis,kchristidis,15/Jan/17 11:29 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 3:12 AM,,,,,fabric-orderer,,,,0,common-components,kafka,,,,,,,"The change introduced in [FAB-1413] does not address the case where the BDD tests are executed manually (via a `behave -k features/orderer.feature` invocation for instance); in this case, the `bddtests/environments/kafka` file remains without a proper Dockerfile, and the Kafka-related tests fail.

We need a way to point to the right Dockerfile for Kafka, and pass the required Docker tag.",,harrijk,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1657,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi3r:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,harrijk,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/17 1:18 PM;harrijk;I will open an issue to address the use of an x86-based Docker image for Zookeeper currently being used for the Orderer Kafka tests. Both p and z will still fail using the current zookeeper Docker image. One step at a time. :);;;","15/Jan/17 1:30 PM;harrijk;Issue opened and linked to this issue:
https://jira.hyperledger.org/browse/FAB-1657;;;","15/Jan/17 2:18 PM;kchristidis;[~harrijk] I've updated the issue description so that it deals only with the [FAB-1413] induced change.

(The other part is handled in [FAB-1659].);;;","15/Jan/17 2:21 PM;harrijk;Thanks. Hopefully, we can get all platforms working with these tests.;;;","16/Jan/17 1:29 AM;harrijk;[~kchristidis] I assume that you already tried running *make behave-deps* prior to running your individual behave tests?  The kafka Dockerfile and the hyperledger/fabric-testenv:<tag> Docker image are created at this time.;;;","16/Jan/17 3:12 AM;kchristidis;[~harrijk] The fix posted in https://gerrit.hyperledger.org/r/3965 along with `make behave-deps` seem to work great. Closing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use of x86-based Zookeeper Docker image causes Orderer Kafka Behave test failures on z and p architectures,FAB-1657,14084,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,harsha544,harrijk,harrijk,15/Jan/17 1:29 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 1:26 AM,,,v1.0.0,,fabric-orderer,,,,0,kafka,,,,,,,,"The following files located in the fabric/bddtests directory are using an x86-based Docker image, which will result in failures for Orderer Kafka behave tests on the z and p architectures:

kafka/docker-compose.yml:5:    image: zookeeper:3.4.9
orderer-1-kafka-1/docker-compose.yml:5:    image: zookeeper:3.4.9
orderer-1-kafka-3/docker-compose.yml:5:    image: zookeeper:3.4.9
orderer-n-kafka-n/docker-compose.yml:5:    image: zookeeper:3.4.9
",,bsmita,harrijk,harsha544,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx6en:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,,bsmita,harrijk,harsha544,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/17 10:19 AM;kchristidis;[~harrijk]: Is someone assigned to this and working on it already? (And if so, can we update this JIRA accordingly?);;;","17/Jan/17 11:07 AM;harrijk;[~kchristidis]. I have assigned [~harsha544] as he is currently working on a patch for this issue.;;;","17/Jan/17 11:23 AM;kchristidis;Great, thank you John.

[~harsha544]: Please tag [~sanchezl] and myself on the changeset when you push it out for review. Thank you.;;;","19/Jan/17 7:30 PM;harsha544;[~harrijk] [~kchristidis] [~sanchezl] [~bsmita] [~SriramaSharma]

 I have pushed https://gerrit.hyperledger.org/r/#/c/4555/ for review. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix occasional Deliver failure on Kafka BDD tests,FAB-1658,14085,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,15/Jan/17 2:07 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 8:52 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"In [FAB-1382] the Deliver API was modified so as to work with a range. The BDD implementation of Deliver was also modified in that changesetso as to take an end block of `NEWEST`.

Occasionally, the Kafka orderer will fail on one of these BDD tests because the Deliver request comes before all the incoming (via Broadcast) messages have been processed. In that case, the `NEWEST` value is translated to a lower-numbered block than the expected one.

As an example, consider the case where we send 100 messages to the orderer, and each block has 10 messages. When we send the Deliver call, Kafka has processed 90 messages, so it translates NEWEST to 9. Our test expects NEWEST to be 10 and thus fails.

Until we find an elegant fix for this, I am adding a 1-second sleep before the Deliver call is invoked on the Kafka cases. This should add 14 seconds to the duration of these tests.

I stress that this is a temporary patch, and I am open to a more elegant solution, but the default should _not_ be a setup where the orderer fails occasionally.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi3z:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/17 3:33 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3967/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update BDD Compose files with proper ENV vars,FAB-1659,14086,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,15/Jan/17 2:15 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jan/17 7:53 AM,,,,,fabric-orderer,,,,0,common-components,kafka,,,,,,,"In [FAB-1612] new configuration keys were introduced on the `orderer.yaml` file. The ENV vars on the Compose files we use for the orderer-related BDD tests however were not updated accordingly. As a result, all tests would run against the default config setting (read: solo) and the Kafka path would not get tested.

We should also remove all ENV vars from the Compose files when these match the defaults in `orderer.yaml`. This reverses an earlier take on the matter. The thinking behind this change is that we don't need to keep two sets of settings unless absolutely necessary.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi47:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"15/Jan/17 3:34 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3965/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gossip test failure in CI,FAB-1660,14087,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,muralisr,muralisr,15/Jan/17 7:31 PM,19/Mar/19 8:12 PM,28/Oct/23 2:58 AM,12/Apr/17 2:23 AM,,,,,fabric-gossip,,,,0,ci-failure,,,,,,,,"https://jenkins.hyperledger.org/job/fabric-verify-x86_64/5168/console

",,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi4f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove shadow variable declarations,FAB-1661,14088,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,16/Jan/17 12:11 AM,22/Oct/19 4:22 AM,28/Oct/23 2:58 AM,16/Jan/17 8:52 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi4n:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.3,release-2.2,release-2.5,release-2.4,dependabot/go_modules/github.com/golang/protobuf-1.5.3,main,dependabot/go_modules/google.golang.org/grpc-1.54.0,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jan/17 12:13 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3975/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename main kafka package file,FAB-1662,14089,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Done,kchristidis,kchristidis,kchristidis,16/Jan/17 12:18 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,16/Jan/17 8:52 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,"A purely cosmetical change. Most of the logic in the `kafka` package resides in `main.go`. I want to avoid any connotations with `main` which in Go pretty much implies a binary, hence the rename to `orderer.go`, which is more expressive anyway.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi4v:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jan/17 12:22 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3977/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add helper functions to kafka tests,FAB-1663,14090,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,16/Jan/17 12:59 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,16/Jan/17 8:52 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,Replace often used sequences/patterns throughout the tests with wrapper functions.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi53:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"16/Jan/17 1:01 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3979/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use a single leveldb instance for block storage index,FAB-1664,14091,13953,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,16/Jan/17 1:00 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 3:31 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"As fabric plans to have a sufficiently large number of block storage (one for each ledger), having a separate leveldb for storing indexes for the blockchain will not be a viable solution. Design for using a single leveldb instance to be shared across indexes for all of the ledgers.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi5b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode does not need core.yaml,FAB-1665,14092,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,16/Jan/17 3:10 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 9:40 AM,,,,,fabric-peer,,,,0,,,,,,,,,"All parameters are passed to chaincode via environment variables or as parameters. Default properties need not be picked up from core.yaml. In 1.0 architecture, the peer no longer builds the chaincode package but only passes it to docker to deploy (the package is built by CLI or SDK). In this mode the core.yaml in the Dockerfile will typically not be available in the peer environment.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi5j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"For partial key queries, make resulting keys parsable",FAB-1666,14093,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,Senthil1,denyeart,denyeart,16/Jan/17 8:57 PM,20/Sep/19 5:03 PM,28/Oct/23 2:58 AM,28/Jan/17 5:00 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,Ability to extract individual keys from the composite key.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/17 7:17 PM;Senthil1;proposal.pdf;https://jira.hyperledger.org/secure/attachment/10384/proposal.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxahb:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Finalize ledger query APIs in Query System Chaincode (QSCC),FAB-1667,14094,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,denyeart,denyeart,16/Jan/17 9:02 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Feb/17 12:38 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/17 4:06 AM;denyeart;BlockTranStructure.docx;https://jira.hyperledger.org/secure/attachment/10424/BlockTranStructure.docx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzx67r:",,,,,,Sprint 10 - Ledger,Sprint 11 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolve phantom reads for range queries,FAB-1668,14095,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,denyeart,denyeart,16/Jan/17 9:09 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Jan/17 1:24 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"Detect changes in result set between simulation time and commit time by re-querying during validation phase.

Phantom reads problem:
-----------------------------
If a transaction executes a key range query (say key_1 - key_n) leveldb
serves all the keys in the given range in sorted order of keys.
Between simulation and validation of a transaction, some other transaction
may insert one or more keys in this range. Now, this change cannot
be detected by merely checking the versions of the keys present in
the read-set of the transaction.
(though, this check can detect updates and deletes).

A serializable isolation level does not permit phantom reads.

Situations where the phantom reads may not be acceptable:
-----------------------------
 - A chaincode may take a decision based on aggregates of the results of
the range query such as min/max/avg/sum etc. This would be affected
if a new entry gets added to the range query results.

 - A chaincode may want to change all the marbles
owned by a specific user to blue in a tran `t1`. The chaincode may do so
by performing a range query to get all the marbles for the user and
change their color to blue. Now, if a new white marble get added to
the user's assets by an another transaction `t2`,
`t1` should be marked as invalid.


",,ChristopherFerris,denyeart,jexek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxahj:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,denyeart,jexek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jan/17 12:21 AM;ChristopherFerris;Solution in this change-set:
-----------------------------
For solving this, we can capture the details of the range query
(the query and it's results) during the simulation time and
re-execute the query during validation time and compare the results.
If the results (keys and versions) are still the same,
we can safely commit the transaction.

This changes set introduces
 - Structures for capturing the range query details in rwset
 - Detection of phantom items (insertion/deletion)
   that affect the results of the range query during validation
 - Mark the transactions that are affected by the phantom items
   as invalid to ensure serializability in the presence of range queries;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add delete key function for ledger based on CouchDB,FAB-1669,14096,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,denyeart,denyeart,16/Jan/17 9:14 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 11:42 PM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-60,,,,,,,,,"1|hzx7qn:",,,,,,Sprint 10 - Ledger,Sprint 11 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
move CCContext to core/common/ccprovider and remove generic interface references,FAB-1670,14097,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,16/Jan/17 10:45 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,13/Apr/17 5:34 PM,,,,,fabric-peer,,,,0,,,,,,,,,core/common/ccprovider/ccprovider.go contains generic interfaces arguments and return values to avoid importing the chaincode package to reference CCContext. We should move CCContext into core/common/ccprovider/ to remove the generic interface ugliness,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi5r:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement couchdb unit-tests in CI pipeline,FAB-1671,14098,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Jan/17 11:49 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Feb/17 12:28 PM,,,,,,,,,0,,,,,,,,,Implement couch-db unit-tests in CI pipeline.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi5z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 12:26 PM;rameshthoomu;Couchdb unit-tests are not yet ready to integrate in CI. Following up on this with [~AdnanChoudhury]. 

[~AdnanChoudhury]: Please let me know once you are done with changes so that will integrate them in CI pipeline.;;;","20/Feb/17 12:28 PM;rameshthoomu;Changes have been merged in production and now Community CI is executing couchdb unit-tests https://gerrit.hyperledger.org/r/#/c/6091/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename Validate method,FAB-1672,14099,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,C0rWin,ales,ales,16/Jan/17 11:50 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,18/Feb/18 10:48 PM,,,v1.1.0,,fabric-peer,,,,0,,,,,,,,,"The Validate does not exactly do validation, it rather marks invalid transactions using the bitmap.  There's a case for renaming the method so that the new name conveys better what the method does.

[~C0rWin] : I've assigned this to you given that you created the interface, I didn't want to change the name w/o consulting you first.",,ales,C0rWin,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi67:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,C0rWin,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 5:05 PM;muralisr;[~ales] don't think this is critical for 1.0. Moving to 1.1 ... and if you think this is not relevant any longer, close this please.;;;","18/Feb/18 10:48 PM;C0rWin;closing as seems no longer relevant.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate fabric/cop functional verification tests in CI pipeline,FAB-1673,14100,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Jan/17 11:51 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/May/17 11:44 AM,,,,,,,,,0,,,,,,,,,Integrate fabric/cop functional verification tests in CI pipeline. @eabailey requested to test fabric-cop functional verification tests in CI pipeline.,,ChristopherFerris,rameshthoomu,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi6f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,rameshthoomu,rennman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/17 12:33 PM;rameshthoomu;[~rennman] : please let me know when I have to enable functional tests in cop jobs.;;;","04/Mar/17 10:59 PM;rameshthoomu;[~rennman] I have enabled functional verification tests in sandbox observed errors consistently and builds are failing. I see a note from Keith saying, WIP on these tests and existing tests are not working..

Do you want me to enable tests or shall I wait for the fixes? I don't want to waste build resources for consistent failed build results..;;;","15/Mar/17 4:42 AM;rennman;I have verified the changes run successfully on my local machine. Also, using the current patch for change set 7095, all tests have successfully passed in the CI environment.  I suggest that we run the fvt test suite in CI (for those individual tests that are currently enabled and expected to pass, e.g. not in /staging);;;","15/Apr/17 1:16 PM;rameshthoomu;[~rennman] I see builds are failed in sandbox environment.. Could you please give me the right patch sets i have verify as part CI tests?;;;","19/Apr/17 2:05 AM;rennman;[~rameshthoomu]
Sure, np. You just need to cherry-pick 7747 7749 7751 7753 7755 7757 7759 7761 7763 7765 7767 7769 7771  and 7799;;;","24/Apr/17 6:26 AM;rameshthoomu;I don't it's better option to fetch multiple number of in-review patches and test this in sandbox environment. Will enable tests in CI, once these patches are merged;;;","25/Apr/17 3:37 AM;rennman;Most of the PR's have been merged. The remaining fixes are in
https://gerrit.hyperledger.org/r/#/c/8485/ ;;;","25/Apr/17 11:56 PM;ChristopherFerris;has been merged;;;","26/Apr/17 1:51 AM;rennman;Unfortunately
9f93162 Merge ""[FAB-3107] Use 'identity' instead of 'user'""
was merged just before this one, and the tests are failing because 9f93162 introduced a bug.

So I'm satisfied that the tests are WAD.


;;;","26/Apr/17 5:02 AM;rennman;Ramesh confirmed that when he backed out 9f93162, the tests passed.

https://jira.hyperledger.org/browse/FAB-3396 should have the fix for the defect introduced by 9f93162.

Once the fix is in, we can enable the tests in CI.;;;","26/Apr/17 11:27 PM;rameshthoomu;Tested this in sandbox and here is the result https://jenkins.hyperledger.org/sandbox/job/fvt/3/console;;;","06/May/17 12:46 AM;rameshthoomu;submitted patch set: included below changes

* make docker-fvt 
* docker run -v $PWD:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt;;;","06/May/17 11:44 AM;rameshthoomu;Integrated fabric-fvt tests in fabric-ca repository. Now verify and merge jobs executes `ca fvt tests`;;;",,,,,,,,,,,,,,,,,,,,,
Publish npm to hyperledger npm repository through Jenkins CI,FAB-1674,14101,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Jan/17 11:54 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Apr/17 1:13 PM,,,,,,,,,0,,,,,,,,,"Publish NPM to hyperledger npm repository through Jenkins CI.

Eliminate the manual process of publishing npm to hyperledger npm repository. Create a new job or include steps when to publish npm in fabric-sdk-node-merge jobs.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi6n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Apr/17 1:13 PM;rameshthoomu;Patch has been created and merged. fabric-sdk-node merge job publish npm module as unstable if it is a snapshot release, if it is a alpha release we publish npm module with alpha version..;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add support of ccchecker chaincode in performance Node SDK,FAB-1675,14102,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,17/Jan/17 1:16 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Feb/17 11:46 PM,,,,,fabric-quality,,,,0,,,,,,,,,"1. add support of ccchecker in performance Node SDK
2. add random payload in performance Node SDK",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx653:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As an admin and developer, I need a way to inspect and create configuration transactions",FAB-1678,14105,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jan/17 5:45 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,03/Jun/17 2:58 PM,v1.0.0-alpha2,,v1.0.0,,fabric-orderer,,,,0,configuration,HSBN,,,,,,,"This story is to start working on the tools necessary for admins to work with configuration transactions, not only creating them, but also inspecting and signing them.

There are four principal components to this issue.

1. Bidirectional proto <=> deep JSON translation:  This is at the heart of the issue, and provides both a human readable, and human editable version of the configuration.  Because the configuration embeds other message types, like {{Envelope}} it is most natural to make this a generic proto <=> deeply unmarshaled JSON.  This means that the output should, to the extent possible, contain no binary marshaled fields.  For instance, a {{Block}} should show nested {{Envelope}} messages in its data, and these messages should show {{Payload}} messages, which should in tern show the unmarshaled version of the {{Data}} field, etc.  Correspondingly, it is important that this mapping be able to be returned into the native proto form.  Note, that the bidirectional marshaling can preserve meaning only, not literal bytes, as proto marshaling is non-deterministic.

2. A Config + Config -> ConfigUpdate utility:  This will allow the user to submit an original config and a modified config to produce a config update.  This will combine naturally with (1), so that the user may view the configuration in a human readable way, edit it, compute the update, and then see the update in a human readable form.

3. A REST API which exposes (1) and (2).

4. A CLI which exposes (1) and (2)

Finally, we may wish to add one additional API to (3)/(4), namely the ability to submit a Config, a Config Update, and have the server do a simulation of the result (including any errors produced because of insufficient signatures, or bad form).

For those interested in getting a jump on interacting with the deep JSON representation, please see a (unusually verbose) config update message attached as output_pretty.txt.",,Clayton Sims,grapebaba,Hangyu_FJH,JonathanLevi,jyellick,kchristidis,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,345600,345600,,,FAB-4265,FAB-4264,,,,,,,FAB-3040,FAB-4212,FAB-4379,,,FAB-2131,FAB-2815,,,,,,,,,,,,,,,,,,,,,,,"23/May/17 7:09 AM;jyellick;output_pretty.txt;https://jira.hyperledger.org/secure/attachment/10857/output_pretty.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx4gn:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,Sprint 13 - Consensus,Sprint 14 - Consensus,Sprint 15 - Consensus,,,,,,,,8.0,Unset,,,,,,,,,,,Clayton Sims,grapebaba,Hangyu_FJH,JonathanLevi,jyellick,kchristidis,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"11/Mar/17 3:27 AM;jyellick;This partially implemented via FAB-2335, though the 'and modify' component is still lacking.;;;","18/Mar/17 12:07 AM;jyellick;Opened a new story to FAB-2815 to track generating config updates, as this is a large piece of work, and outside the scope of this story.;;;","03/May/17 4:53 AM;Clayton Sims;Kostas moving this to you since Jason is out.   I could not find a gerrit.   Whats left to get it merged?;;;","04/May/17 12:50 AM;kchristidis;As things stand right now, we do not have a command line tool that allows us to fetch the most recent configuration, inspect it, and create a new configuration update that sets the right versions for the modified items and signs them accordingly.

The configtxgen tool does this currently for updating anchor peers (if they're still untouched), as a proof-of-concept.

This story aims to track this work.

We have decided we may need to re-evaluate our approach here altogether (i.e. maybe we use another tool to drive this).

I'm updating this JIRA accordingly.;;;","11/May/17 11:25 PM;jyellick;This is a rather large piece of work, we can expect this to take another 2-3 weeks.

The rough design for the tool is as follows.

Expose the following 4 functions.

1. Decode config:
Input: A proto {{Config}} message
Output: A JSON representation of the entire config, (no opaque bytes)

2. Decode config update
Input: A proto {{ConfigUpdate}} message
Output: A JSON representation of the update message (no opaque bytes)

3. Compute config update
Input: A JSON representation of the entire original config, a JSON representation of a modified config
Output: A proto {{ConfigUpdate}} message

4. Simulate config update:
Input: A proto {{ConfigMessage}} and a proto {{ConfigUpdateEnvelope}} message
Output: A proto {{Config}} message or error

The workflow for using the tool for a config update would then be as follows:

1. Retrieve the current config from the orderer via SDK
2. Send config to ""Decode config""
3. Edit the returned JSON as desired
4. Send original JSON from (2) and modified JSON from (3) to ""Compute Config Update""
5. Distribute {{ConfigUpdate}} from (4) to all signatory parties
6. Each party which must sign examines the update via ""Decode config update"", then produces a {{ConfigSignature}} and returns it to the originator
7. The originator runs ""Simulate config update"" with the collected signatures and config update, to verify that the config is expected to succeed or determine the missing signature members.
8. The originator submits the {{ConfigUpdateEnvelope}} to ordering via the SDK.

This workflow should be able to handle all types of config updates and does not require specifying APIs for manipulating specific configuration components.;;;","16/May/17 4:19 AM;JonathanLevi;Shall we break this down to a few sub-tasks, with some time estimates? (I did note the estimated ""2-3 weeks of work"" quoted above)
[~jyellick] Can we somehow split the work? Or will it effectively be mostly you working on this?;;;","23/May/17 6:37 AM;jyellick;[~JonathanLevi] As always, I am an eternal optimist, and thought things could be done much faster than the reality would indicate.  I've finally worked out a design of the (IMO) hardest component of this.  Namely, the bidirectional proto -> deep JSON -> proto conversion.  I was holding off on creating the subtasks until I felt like I had a good grasp of what the components were going to look like.  I'll be creating subtasks for this work shortly.  I'd assumed I would be tackling all of the work, but there are some componenets of this I would certainly welcome help on.;;;","25/May/17 2:39 AM;Clayton Sims;Natasha - I just spoke to Jason.   This should be done by 1 week from Friday.    Jason - yell if I misunderstood

 

 ;;;","03/Jun/17 2:58 PM;jyellick;I'm marking this as done.  The remaining sub-task of adding a CLI interface, I've moved to an enhancement.  But the basic function described is present.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Create initial developer oriented config tx viewer.,FAB-1679,14106,14105,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jan/17 5:46 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,05/Feb/17 10:34 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi7b:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,Sprint 13 - Consensus,Sprint 14 - Consensus,Sprint 15 - Consensus,,,,,,,,2.0,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"17/Jan/17 10:48 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4013/;;;","17/Jan/17 10:52 AM;kchristidis;Can we add some info (here) on the following:

# Where in the whole process do we see this being used, i.e. who uses this and when?
# What would be the best way to test it?;;;","17/Jan/17 10:53 AM;kchristidis;(So the parent task answers question 1 I think: https://jira.hyperledger.org/browse/FAB-1678);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance orderer startup and ingress/egress logging quality.,FAB-1681,14108,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,17/Jan/17 6:06 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,01/Feb/17 4:28 AM,,,,,,,,,0,,,,,,,,,"The orderer debugging output is not as helpful as it ought to be, in particular it doesn't mention which policy is not being evaluated correctly, or that startup actually completes, etc.  This should be fixed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi7j:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Items() in configtx doesn't set header type properly,FAB-1683,14110,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,17/Jan/17 7:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jan/17 6:47 AM,,,,,,,,,0,,,,,,,,,"How to reproduce: 
1) make a configuration item	
confItem := &common.ConfigurationItem{
		Header: &common.ChainHeader{
			ChainID: testChainID,
			Type:    int32(common.HeaderType_CONFIGURATION_ITEM),
		},
                ....

2) call configtx.NewSimpleTemplate(confItem).Items() and see the extracted type in the header is set to the zero value instead of the value set in (1).

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi7z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolve ledger code TODOs,FAB-1684,14111,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,17/Jan/17 7:13 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Apr/17 9:55 AM,,,v1.0.0,,fabric-ledger,,,,0,ledger,,,,,,,,Code hardening ,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzx4jz:",,,,,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reduce size of binary trace during chaincode deploy,FAB-1685,14112,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,17/Jan/17 8:32 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,17/Jan/17 11:51 PM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"When chaincode is deployed, it fills the peer debug log with many megabytes of binary dumps, making it difficult to troubleshoot through the noise.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxgef:",,,,Unset,,Sprint 9 - Ledger,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove unused args, variables, methods",FAB-1686,14115,,Story,Closed,FAB,Fabric,software,denyeart,,,Lowest,Won't Do,,grapebaba,grapebaba,17/Jan/17 1:30 PM,23/Jan/20 3:47 AM,28/Oct/23 2:58 AM,23/Jan/20 3:47 AM,,,Future,,fabric-ledger,,,,0,stale-item,,,,,,,,"Remove unused args, variables, methods",,grapebaba,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxi8n:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,grapebaba,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"23/Jan/20 3:47 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failed to register admin : Identity or token does not match,FAB-1687,14116,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,RajkumarSomasundaram,RajkumarSomasundaram,17/Jan/17 2:19 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,10/Apr/17 5:53 AM,,,,,,,,,0,,,,,,,,,"I know this is a well known issue. But unfortunately none of the solutions work for me. 
As per the below link I have followed Option 3; Link says that docker handles cleanup.

https://github.com/hyperledger/fabric/blob/master/docs/Setup/Chaincode-setup.md#removing-temporary-files-when-security-is-enabled

1) Little Elaboration on docker cleanup part
2) How do I proceed forward??

here's what I did :
1-->In one Terminal I ran docker compose up.
2-->In another I went to the directory containing my chaincode and ran 
3-->CORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=0.0.0.0:7051 ./chaincode

In the 3rd terminal I ran my app.js in this way:
CORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=0.0.0.0:7051 MEMBERSRVC_ADDRESS=0.0.0.0:7054 DEPLOY_MODE=dev node app.js

",,binhn,RajkumarSomasundaram,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi8v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,RajkumarSomasundaram,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/17 2:24 PM;RajkumarSomasundaram;Can someone please give your insight on this. This is holding me back for days.

Please.;;;","10/Apr/17 5:52 AM;binhn;Please follow the end to end sample documented here https://github.com/hyperledger/fabric/tree/master/examples/e2e_cli
and post questions on chat channels;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sbft/main unit test fails on Power (ppc64le) platform,FAB-1688,14117,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,SriramaSharma,SriramaSharma,17/Jan/17 6:51 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/May/17 3:09 AM,,,v1.0.0-alpha1,,fabric-orderer,,,,2,,,,,,,,,"Since CR #2515 (https://gerrit.hyperledger.org/r/2515)  - ""Add networked stress tests for SBFT"" has been merged, the sbft/main tests fails as part of `make unit-tests` with below error on ppc64le platform.

{noformat}
unit-tests_1  | FAIL
unit-tests_1  | coverage: 49.2% of statements
unit-tests_1  | FAIL	github.com/hyperledger/fabric/orderer/sbft/main	834.346s
unit-tests_1  | error: exit status 1
unit-tests_1  | panic: EOF
unit-tests_1  | 
unit-tests_1  | goroutine 1 [running]:
unit-tests_1  | panic(0x11ae80, 0xc42000a0f0)
unit-tests_1  | 	/opt/go/src/runtime/panic.go:500 +0x3a8
unit-tests_1  | main.main()
unit-tests_1  | 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x148
{noformat}

All unit tests passes when I checkout the previous commit tag (`git checkout ec83773a15a5bcff328dd1c641dd600b9fb8e9b4`) and do a build.

When I check out the commit tag - cf03f20e0ed7ba5fb5f0afc6be1bf8cfe260d187, the error is seen. 

Attaching the CLI output of make unit-test in both the above cases for reference.
",,binhn,bsmita,ChristopherFerris,harsha544,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/17 6:50 PM;SriramaSharma;issue.txt.zip;https://jira.hyperledger.org/secure/attachment/10379/issue.txt.zip","17/Jan/17 6:49 PM;SriramaSharma;works.txt;https://jira.hyperledger.org/secure/attachment/10380/works.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi93:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,bsmita,ChristopherFerris,harsha544,SriramaSharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/17 11:35 PM;bsmita;Looks like these tests were moved from sbft/main to orderer/network_test.go and orderer/sbft_test.go.;;;","10/Apr/17 5:48 AM;binhn;[~kchristidis]
We should remove sbft tests from 1.0;;;","27/May/17 3:10 AM;ChristopherFerris;[~hgabre] submitted this, intending to address this bug. [https://github.com/hyperledger/fabric/commit/ae480207632392764f54abbdecb485e2b17b7fed]

While I agree we should remove sbft from 1.0, going to close this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FSM Error,FAB-1689,14118,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,akarshagrawal792,akarshagrawal792,akarshagrawal792,17/Jan/17 6:55 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Apr/17 6:44 AM,,,WON'T FIX,,fabric-peer,,,,0,,,,,,,,,"I'm not able to perform query command on my sample chaincode example, chaincode_example02.

I'm able to perform deploy and invoke commands after starting the docker images. But error pops up in query command.

I'm not using development mode for the peer images.
I get the following response after the error:

 ""Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for mycc - LedgerError - ResourceNotFound: ledger: resource not found)""

Also, I got some error of ""FSM Handler"" and ""RANGE_QUERY_STATE"" on the console log while executing the command.

I ran the blockchain on debug mode, so have seen all the logs and there was no error in deploying or invoking the chaincode.",,akarshagrawal792,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx85z:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,akarshagrawal792,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/17 6:43 AM;denyeart;I believe that is a 0.6 error, the error does not occur on 1.0.  v0.6 will not be enhanced.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make SBFT able to handle multiple chains,FAB-1690,14119,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,hgabre,hgabre,17/Jan/17 8:08 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,29/Mar/17 3:38 AM,,,,,fabric-orderer,,,,0,sbft,,,,,,,,"The SBFT orderer does not support multiple chains but it should. This task includes the following:
* add a Consenter interface implementation to SBFT (with HandleChain for multichain support)
* implement the Chain interface for SBFT
* implement all the needed functions in SBFT's internal modules:
** there should be one backend running (backend is the part responsible for handling connections, persistence, ledger write/read...) per orderer peer (replica)
** there should be one SBFT instance per chain
** this means that the same backend can have multiple SBFT instances, e.g. if there are N replicas and M chains at a given moment then there are N backend instances (one for each replica) and N*M SBFT instances (M for each replica)
* SBFT should be started using the main app inside _orderer_",,hgabre,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi9b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hgabre,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove checks for modification policy compliance of unchanged config items in a config block,FAB-1693,14122,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,elli-androulaki,elli-androulaki,18/Jan/17 12:47 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:28 AM,,,,,fabric-crypto,fabric-orderer,fabric-peer,,0,Endorser,Security,,,,,,,"Currently: 

Given a reconfiguration block, the policy manager uses the modification policy of each config item (current one) to evaluate the config block.  Then a new chain object is created and used to substitute the older one if the setup completes successfully.

Assuming the reconfiguration tx has been issued to reconfigure a parameter A in the genesis block, then the entities authorized to change A create a reconfig tx, where they add a signed configuration item with A's new value, an updated ""LastModified"" field, and their signatures, and copy from the most recent reconfig tx the other (signed) configuration items. It sets the sequence number of the config tx, signs it and submits it to the nextwork. 

On the *validation* of this transaction, all the configuration items are checked for validity,  based on *the currently stored modification policy* for that item. However this causes a problem if the modification policy of an item has changed among configurations.

To resolve this we need to:
 - check for all configuration items that have not been updated, if they are (in their signed form) identical to the ones in the configuration transaction that last updated that item. This likely already  in the code.
 - remove subsequent signature checks on this item. 
",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxi9z:",,,,,,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write capabilities/features piece of v1.0 overview documentation,FAB-1694,14123,13918,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,ChristopherFerris,joshhus,joshhus,18/Jan/17 1:42 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,13/Apr/17 2:54 AM,,,DUPLICATE,v1.0.0,fabric-docs,,,,0,,,,,,,,,https://gerrit.hyperledger.org/r/#/c/4071/,,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,FAB-3099,,,,,,,FAB-1509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxia7:",,,,,,Sprint 9 - Quality,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,,,,,,,,,,,,,,,,,,,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/17 1:25 AM;joshhus;https://gerrit.hyperledger.org/r/#/c/4071/1/docs/ArchitectureV10.md;;;","27/Jan/17 1:29 AM;joshhus;This topic is now called Capabilities - because the content is what the fabric provides, not what the fabric is, physically. 
capabilities.md
https://gerrit.hyperledger.org/r/#/c/4855/1/docs/capabilities.md;;;","27/Jan/17 1:40 AM;joshhus;There will be a new/separate Architecture .md file/topic.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add and use metadata field for orderer-related information,FAB-1695,14124,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,18/Jan/17 1:48 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,24/Jan/17 12:17 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"A consensus implementation may need to read the ledger and extract metadata from it during operation (most likely when booting up).

As an example, the Kafka-based orderer, reads the offset of the last envelope it placed into a block *and* wrote to the local ledger, and uses that value to resume consumption of chain's partition.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxiaf:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Appears message for orderer preferredMaxBytes is incorrect.,FAB-1696,14125,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,jeffgarratt,jeffgarratt,18/Jan/17 1:54 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,18/Jan/17 10:39 AM,,,,,fabric-orderer,,,,0,,,,,,,,,preferredMaxBytes parameter not being set seems to use the same message as absMaxBytes message.,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxian:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add HashingAlgorithm chain config item,FAB-1697,14126,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,18/Jan/17 3:08 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jan/17 11:10 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiav:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add BlockDataHashStructure chain config item,FAB-1698,14127,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,18/Jan/17 3:09 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jan/17 11:11 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxib3:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement block header deterministic hashing,FAB-1699,14128,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,18/Jan/17 3:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,05/Feb/17 10:35 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxibb:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/17 10:35 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4599/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement deterministic block data hashing structure,FAB-1700,14129,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Jan/17 3:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,05/Feb/17 10:35 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"This item is to implement a deterministic hashing algorithm for the BlockData.  This should be a Merkle tree, configured by width in the configuration block.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxibj:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/17 10:35 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/5185/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
end-to-end.js not ok 4 TypeError: Cannot read property 'status' of undefined at /home/ibmadmin                   /work/src/github.com/hyperledger/fabric-sdk-node/test/unit/end-to-end.js:143:18,FAB-1702,14131,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,jjjjibm,jjjjibm,jjjjibm,18/Jan/17 3:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 2:11 AM,,,,,,,,,0,,,,,,,,,"I ran node end-to-end.js.  Many tests fail.  This issue is for test 4:

not ok 4 TypeError: Cannot read property 'status' of undefined at /home/ibmadmin                   /work/src/github.com/hyperledger/fabric-sdk-node/test/unit/end-to-end.js:143:18

Here is some context: 
		promise = promise.then(
				function(response) {
					*if (response.status === 'SUCCESS') {
*						t.pass('Successfully ordered deployment endorsement.');
						console.log('  ** need to wait now for the committer to catch up after the deployment');
						return sleep(30000);
					} else {
						_t.fail('Failed to order the deployment endorsement. Error code: ' + response.status);
_						t.end();
					}

The *bold face line *is line 143 of end-to-end.js.  The_ italicized lin_e is a line that will fail for the same reason when you fix line 143. 

The problem is:  +response = null +when this code is driven.

One possible solution: 
if (response.status === 'SUCCESS') {  ===> if (response && response.status) 

t.fail('Failed to order the deployment endorsement. Error code: ' + response.status);
===> 
t.fail('Failed to order the deployment endorsement. Error code: ' + 
          (response? response.status:  'Undefined');

Edit (1/19/2017):
This error results in an unhandled exception. Unhandled exceptions break *gulp test *such that the pipe into Istanbul is broken. Consequently the coverage report generated by Istanbul is nonsense.

We need a valid coverage report so Ramesh Thoomu can add end-to-end.js to the CI testing. 

","Vlaunch vm running Ubuntu.  Fabric, cop, and node-sdk all running on this local VM. 

",jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxibz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/17 11:27 AM;jjjjibm;commit a9f2907e994d78d85e3f777644c4585b687ef410
Author: jjjjibm <jcwolf@us.ibm.com>
Date:   Wed Jan 18 20:29:18 2017 -0500

    nodeSDK

    Fix for FAB-1702

    This fix corrects an attempt to dereference a null pointer

    Change-Id: I29f699ccf8804a6fec9036cbf1c31ef909927e02
    Signed-off-by: jjjjibm <jcwolf@us.ibm.com>
;;;","31/Jan/17 10:30 AM;jjjjibm;commit 6f748338187ef4f0f89a136b78c7002a35ec51c1
Author: jjjjibm <jcwolf@us.ibm.com>
Date:   Wed Jan 18 20:29:18 2017 -0500

    nodeSDK Fixes for FAB-1702 and FAB-1704

    FAB-1702 and FAB-1704 both report attempts to dereference null pointers.

    Edit: Indicate that FAB-1704 fix is added to this fix.  This resolves conflicts between FAB-1702 and FAB-1704.
    Edit2: Inspection rework
    Edit3: resolve merge conflicts

    Change-Id: I29f699ccf8804a6fec9036cbf1c31ef909927e02
    Signed-off-by: jjjjibm <jcwolf@us.ibm.com>
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extract content from customer session for doc,FAB-1703,14132,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joshhus,joshhus,joshhus,18/Jan/17 3:32 AM,24/Sep/20 8:54 PM,28/Oct/23 2:58 AM,20/Jan/17 1:04 AM,,,v1.0.0,,,,,,0,,,,,,,,,"Customer session minutes (20 pages), reviewing and extracting doc items. ",,joshhus,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,144000,144000,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,FAB-1759,,,,,,,,,,,,,,"20/Jan/17 1:03 AM;joshhus;CLS Briefing notes January.doc;https://jira.hyperledger.org/secure/attachment/10396/CLS+Briefing+notes+January.doc","20/Jan/17 1:03 AM;joshhus;_ Re_ updated_ CLS notes and actions.pdf;https://jira.hyperledger.org/secure/attachment/10395/_+Re_+updated_+CLS+notes+and+actions.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxic7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,joshhus,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/17 6:03 AM;joshhus;Content / issues / questions extracted from customer minutes (20 pgs.) for addressing in v1 doc. 
Addressing each ""piece"" in the v1 doc should be a separate JIRA Issue for each ""piece"" - will open accordingly. 

(Hmmm, so maybe this one then shouldn't be a ""Task""? ... Should be at a higher level. ?);;;","20/Jan/17 12:59 AM;joshhus;Talked to Clayton ... Tasks are okay to be at different levels/scopes. ;;;","20/Jan/17 1:02 AM;joshhus;Next steps are to split this up into sub-tasks, and update the v1 Hyperledger Fabric doc for each sub-task. ;;;","24/Sep/20 8:54 PM;mastersingh24;Note:   marking this as a security issue because the information in the attachments should not have been made public.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move 0.6 topics / list the dropped topics,FAB-1705,14134,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,joshhus,joshhus,joshhus,18/Jan/17 3:44 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,18/Feb/17 6:38 AM,,,,,fabric-docs,,,,0,Documentation,,,,,,,,http://hyperledger-fabric.readthedocs.io/en/latest/,,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2346,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxicn:",,,,,,Sprint 12 - Documentation,,,,,,,,,,,,,,,,,,,,,,,,,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/17 12:14 AM;joshhus;This task is essentially to strip the TOC (/fabric/mkdocs.yml) of everything and start over for Jan. 31 delivery.;;;","18/Feb/17 2:18 AM;joshhus;Note to myself and Nick and FYI for cc: ... this will all be pasted into the JIRA issue: https://jira.hyperledger.org/browse/FAB-1705?filter=-1

Nick just one thing for you - check the items marked ""TOC"" here.
---------------------------------------------------------------------------------------- 

Results of compare of v0.6 RTD content to current build. 

Next I'll move the items that clearly should be included, and will mark the JIRA issue with these results and the moves. 

Nick please search on ""TOC"" string for your TOC items. Section B. mostly. - the only short term reqs. for you.

(This mapping is not always a simple task - some content has been renamed/moved/consolidated or removed by the community.)


Flagging 2 categories of items in this note, A and B below.

(Will convert to Jira issues where appropriate.)

----------------------------------------------------------------------------------

A. Things we have in the v0.6 RTD doc that we don't appear to have in the current build (Barry's repo):

Note some of this might have been left out purposefully, or renamed/moved:

# Fabric Starter Kit (perhaps this is intended / covered by the Getting Started info now?)  http://hyperledger-fabric.readthedocs.io/en/v0.6/starter/fabric-starter-kit/
# Migrating chaincode: http://hyperledger-fabric.readthedocs.io/en/v0.6/v0.6_migration/  ... (note chaincode isn't the only migration thing that might need some doc).
# New Features: http://hyperledger-fabric.readthedocs.io/en/v0.6/v0.6_migration/#new-features
# Fabric Network Setup: http://hyperledger-fabric.readthedocs.io/en/v0.6/Setup/Network-setup/
# Logging Control - From http://fabric-rtd.readthedocs.io/en/latest/dev-setup/build/#logging -- we point to the github repo instead of to the RTD built file. http://hyperledger-fabric.readthedocs.io/en/v0.6/Setup/logging-control/  ... will move. 
# ACL: http://hyperledger-fabric.readthedocs.io/en/v0.6/tech/application-ACL/
# Protocol spec: http://hyperledger-fabric.readthedocs.io/en/v0.6/protocol-spec/
# Attributes: http://hyperledger-fabric.readthedocs.io/en/v0.6/tech/attributes/
# V1.0 Preview: http://hyperledger-fabric.readthedocs.io/en/v0.6/abstract_v1/

----------------------------------------------------------------------------------

B. Things that need updating in the current build / Barry's repo / build:

(I'm omitting from this list, all the ""WIP"" topics, b/c I think those are well-tracked already / have Jira issues.)

* Release notes: http://fabric-rtd.readthedocs.io/en/latest/releases/
* Nit / low FYI text in ""command"" table at the bottom too small: http://fabric-rtd.readthedocs.io/en/latest/chaincode/
* TOC tweaks - a) ""Docker Compose"" caps. b) Are we going to use the ""smart contracts"" term -- or instead ""chaincode applications"" only? c) ""CP Paper"" is redundant. 
* Notice -- in some cases we point to doc that is NOT in the fabric/docs dir, but in other dirs, such as fabric/dev-setup.... There are some fabric/apis etc. directories also ... These will need some confirmation that the devs have updated their content in there for v1.0 ... e.g. this page still references Vagrant: http://fabric-rtd.readthedocs.io/en/latest/dev-setup/build/ 
* Nit / low ... I don't like use of ""the blockchain"" ... there is no one ""blockchain"" that everyone uses. Even on one network, there are mutliple ""blockchains"" (ledgers with crypto-linked ""chain"" of blocks). So blockchain is a concept / abstraction, not a physical object. And can be used as a noun - ""we're using blockchain"" or an adjective - ""we're using a ""blockchain network"". See http://fabric-rtd.readthedocs.io/en/latest/carlease/ ... 
* While we're on car lease, let's at some point add title/registration tracking, and renewal / transfer of title/ownership, and insurance and registration renewal and proofs of purchase and not expired status. Also since we're selling the used car, also show me the carfax / vehicle history. 
* Usage FAQ: http://fabric-rtd.readthedocs.io/en/latest/FAQ/usage_FAQ/  (esp. ""validating node"" and the specific error message, which should be moved to Troubleshooting.) 
* ""Troubleshooting"" is currently limited to ""Docker Troubleshooting"" so it should either be renamed as such, or expanded to include other problems / error msgs. (It's also labeled ""optional"" ... which isn't really true for those having the problem. - delete ""optional"".) http://fabric-rtd.readthedocs.io/en/latest/asset_trouble/
* TOC - ""Multi Channel"" - change to ""Channels"" and point to the new topic.
* ""Consensus"" WIP http://fabric-rtd.readthedocs.io/en/latest/consensus/  ... text says that consensus is used as a ""broader term than ordering to include the entire transactional flow"" ... We should change that text--we don't want to reinvent the established concept of ""consensus algorithms"" or ""consensus protocols."" ... I think what we mean here is that depending on the plug-in used for the ordering component, it may or may not be a ""consensus"" algorithm/protocol. ... e.g. PFBT is a consensus protocol because it solves, to a degree, the consensus problem - which is when message recipients receive divergent conflicting messages, basically. (I'm not certain that SOLO and Kafka are also truly consensus protocols in that they solve the consensus problem - that a protocol orders stuff doesn't mean that it necessarily solves the consensus problem. ... I will have to look into that more.) If all agree, I can take the Consensus topic.
* TOC: Appendix: ""Development process and code"" is limited to just ""Fabric development process and code"" so needs a rename.
* TOC: Gerrit heading - there are a number of adjacent topics at same level as Gerrit heading that are also Gerrit topics. 
* Contributing - Legal Stuff - we have the signoff, but do we need to add the hooks for the ChangeID? ... (and is that really ""legal"" stuff? - scary.) http://fabric-rtd.readthedocs.io/en/latest/CONTRIBUTING/#legal-stuff
* Nit  / low - some of our links that take the user to an external site we should be opening a new browser tab for them. - someone goes to an external site, click a few times, and then can't find their way back to us easily. e.g. we link to https://jira.hyperledger.org/secure/Dashboard.jspa  from http://fabric-rtd.readthedocs.io/en/latest/CONTRIBUTING/#coding-guidelines ... (and while we're there, it's fewer than eight, not less than, in Maintainers.)


;;;","18/Feb/17 6:26 AM;joshhus;B) Moved to https://jira.hyperledger.org/browse/FAB-2346 ... those are separate items from the move issue. 
;;;","18/Feb/17 6:36 AM;joshhus;Examination of v0.6 complete, and the relevant files are in the RTD staging dir. ... 
i.e. these might be / are candidates for being edited / included in v1.0 library.

They are as follows: 

# fabric/docs/abstract_v1.md
# fabric/docs/protocol-spec.md
# fabric/docs/v0.6_migration.md
# fabric/docs/tech/application-ACL.md
# fabric/docs/tech/attributes.md
# fabric/docs/starter/fabric-starter-kit.md
# fabric/docs/Setup/Network-setup.md
# fabric/docs/dev-setup/build.md;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add new v1.0 topics to library build,FAB-1706,14135,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,joshhus,joshhus,joshhus,18/Jan/17 3:44 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Feb/17 7:00 AM,,,,,,,,,0,,,,,,,,,http://hyperledger-fabric.readthedocs.io/en/latest/,,joshhus,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxicv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,joshhus,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/17 7:00 AM;markparz;Completed with new TOC;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide tests and examples for chaincode query against CouchDB,FAB-1709,14138,12504,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,denyeart,denyeart,18/Jan/17 5:31 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 12:19 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,Ledger API ExecuteQuery() needs to be callable from chaincode.  Need to provide chaincode tests and examples.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1506,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxidj:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add orderer addresses configuration item,FAB-1710,14139,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,18/Jan/17 6:23 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,01/Feb/17 4:29 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,Add a configuration item which will let the peers know in `JoinChannel` which orderer addresses may be connected to.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxidr:",,,,Unset,,,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
createConfigItem in blockutils over-writes item type with ConfigurationItem_Orderer,FAB-1711,14140,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,18/Jan/17 6:34 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/Jan/17 6:47 AM,,,,,,,,,0,,,,,,,,,"In protos/utils/blockutils.go there is a bug:
{code:title=protos/utils/blockutils.go|borderStyle=solid}
func createConfigItem(chainID string,
	configItemKey string,
	configItemValue []byte,
	modPolicy string) *cb.ConfigurationItem {

	ciChainHeader := MakeChainHeader(cb.HeaderType_CONFIGURATION_ITEM,
		messageVersion, chainID, epoch)
	configItem := MakeConfigurationItem(ciChainHeader,
		cb.ConfigurationItem_Orderer, lastModified, modPolicy,
		configItemKey, configItemValue)

	return configItem
}
{code}

This is a problem because it's also used by methods not for orderer type of config items like: *EncodeMSPUnsigned*",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxidz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add event listener ports to docker-compose in test fixtures,FAB-1713,14142,13227,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,18/Jan/17 7:02 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Jan/17 3:09 PM,,,,,fabric-sdk-node,,,,0,,,,,,,,,this is in anticipation of the event hub support being revived for node.js sdk. the test fixtures need to be updated to use the event stream on port 7053,,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxief:",,,,,,Sprint 5 - Consensus,Sprint 7 - nodeSDK,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 11 - SDK node,Sprint 12 - SDK node,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,Sprint 16 - SDK node,,,,,,,,,,,,,,,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
final protos/peer cleanup,FAB-1715,14144,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,18/Jan/17 10:13 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,13/Apr/17 5:32 PM,,,,,fabric-peer,,,,0,,,,,,,,,"Task 1
* remove ""fabric_"" from filnames.
* consolidate files so we don't have so many.
* remove unused entries in ""fabric.proto"".

Task 2
* change ""Ctor"" field to ""Input"" field in chaincode

Task 3
* remove remaing security context fields from chaincode.proto (the old unused ones)



",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1716,FAB-1717,FAB-1722,FAB-1729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiev:",,,,,,Sprint 9 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer/protos consolidation,FAB-1716,14145,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,18/Jan/17 10:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 9:39 AM,,,,,fabric-peer,,,,0,,,,,,,,,Task 1 in FAB-1715,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxif3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
change Ctor field to Input in chaincode.Proto,FAB-1717,14146,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,18/Jan/17 10:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 9:39 AM,,,,,,,,,0,,,,,,,,,Task 2 in FAB-1715,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxifb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Means for detecting a tamper of Blockchain or State database by checking hash values,FAB-1721,14150,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ryokawajp,ryokawajp,18/Jan/17 2:51 PM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,14/Apr/17 9:35 PM,,,DUPLICATE,v0.6,fabric-ledger,,,,0,Ledger,,,,,,,,"Hello.

Users of our system are curious about how Fabric is tamper proof.
However, I understand that not all the modifications are checked because of performance reasons.
State Hash is updated only when the state delta of World State is changed.

So, 
I and my colleagues did tests of detection capability of tampering to Blockchain and World State databases and found that there is no means to update Block Hash or State Hash to detect those modifications in some test cases.
I think 
it will be helpful for peer administrators if Fabric has a function which force Fabric to check and update all the blocks and the states at a desired timing.

Here is a summary of our test:

Conditions
- Hyperledger Fabric v0.6.0-preview
- hfc 0.6.5
- security and privacy enabled.
- 4 peers with PBFT consensus.
- PBFT Batch = 1
- Modification of World State and Blockchain databases are done by an external tool similar to https://github.com/hyperledger/fabric/tree/v0.6/tools/dbutility if the peer is stopped.
- Modification of Blockchain database is done by adding a modification code to github.com/hyperledger/fabric/core/ledger/blockchain.go if a peer is running.

Test cases:
# Delete one key in World State when a peer is stopped and see whether State Hash is updated or not after the restart of the peer.
#* Result: Not updated. A chaincode may cause an error if it tries to access the key.
# Modify a Txid in the latest block in Blockchain when a peer is stopped and see whether Current Block Hash is updated or not, after the restart of the peer.
#* Result: Not updated. After processing several transactions, the peer caused a panic and crashed (the log to be attached later.)
# Modify a Txid in a past block in Blockchain when a peer is stopped and see whether Current Block Hash is updated or not, after the restart of the peer.
#* Result: Updated. Blockchain was checked at the boot sequence of the peer and fixed by the state transfer.
# Modify a Txid in a past block in Blockchain when a peer is running and see whether Current Block Hash is updated or not
#* Result: Not updated. 

(Note that I chosen these test cases as examples of tampering because the values of World State and transaction payloads are encrypted and not easy to decrypt)

As indicated in the test results above, State Hash is updated only when State Delta is changed through the chaincode API. If a key is modified by an external tool, State Delta will not be updated unless the key belongs to a bucket which also contains the state delta.
Similarly, consistency of the block hash and the block value is checked only at the beginning of a peer process. Therefore, it is not possible to detect and correct the modification of a past block if it is modified when a peer is running.

Of course, in all of the test cases, the blockchain network made correct consensuses. That is, the tampered data was not accepted by other peers in any cases.
However, from a peer administrator point of view, it is important to know that his databases are out-of-sync, because he needs to identify the root cause, write some incident report and fix the modification by the state transfer from other peers.

In Fabric v1.0, I heard that the read set and the write set of a chaincode in a transaction processing are compared with those in other endorser peers, and hence the tampering of World State will be mitigated.

But it will be helpful if Fabric has an option which force the checks and updates of hashes of all the blocks and the states (buckets) so that an administrator can use that function at some occasions like a security audit or after an accident.
",,ChristopherFerris,denyeart,ryokawajp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-609,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxifz:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,denyeart,ryokawajp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 8:54 PM;ChristopherFerris;[~denyeart] if this is no longer relevant, please mark WONTFIX and close. If relevant and yuo want to bring it forward, then add fixVersion v1.0.0. Thanks;;;","14/Apr/17 9:35 PM;denyeart;[~ryokawa] [~ChristopherFerris]
FAB-609 is the 1.0 equivalent of this 0.6 Improvement request.  I will close this one as a duplicate of FAB-609.;;;","14/Apr/17 9:42 PM;ChristopherFerris;thanks;;;","17/Apr/17 8:04 PM;ryokawajp;[~ChristopherFerris] [~denyeart] Thank you. I am happy to hear that the capability is being developed for v1.0.0 in FAB-609.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove remainder of security fields from chaincode.proto,FAB-1722,14151,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,18/Jan/17 3:27 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 9:39 AM,,,,,fabric-peer,,,,0,,,,,,,,,Remove reminder of security context fields from chaincode proto,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxig7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix peer filtering for push/pull,FAB-1723,14152,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,18/Jan/17 7:28 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,18/Jan/17 9:18 PM,v1.0.0,,v1.0.0,,fabric-gossip,,,,0,gossip,,,,,,,,"File gossip/filter/filter.go

Method SelectPeer - in case of small k, log(membership) for example, and many small channels in most cases it will return empty list - as first step it choose k peers from membership and only after that filter them, as result it will remain with zero peers

IMO, correct way to implement it is filter peers first and only after that choose k peers from filtered list.
",,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxigf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce an escape char for delimiter used in the compositeKey. It needs to be done for both state DBs. ,FAB-1724,14153,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Senthil1,Senthil1,Senthil1,18/Jan/17 7:34 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,13/Feb/17 11:54 PM,v1.0.0,,,,fabric-ledger,,,,0,,,,,,,,,"In composite key, we have used (0x00) as key delimiter and (0x01) as the lastKeyIndicator. These two ascii code can be present in the chaincode name. In that case, we would have problems in constructCompositeKey() and splitCompositeKey). Hence, we need to introduce an escape character for these delimiters. Further, we need to escape the every occurrences of escape character already present in the chaincode name. ",,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7p3:",,,,Unset,,Sprint 10 - Ledger,Sprint 11 - Ledger,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/17 11:54 PM;denyeart;I believe this is no longer valid.  Please re-open if you disagree.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TLS between peer to peer not working  (v0.6),FAB-1728,14157,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,,wayoon,wayoon,19/Jan/17 12:28 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Mar/17 4:44 AM,,,v0.6,WON'T FIX,fabric-peer,,,,0,,,,,,,,,"We are conducting PoT for HIPAA ready Hyperledger on WHC.
We are currently working with v0.6 -- we are planning to migrate to 1.0 later this this after 1.0 is released.

During our testing we found that TLS enablement for peers not working for muti peer setting. (tested with 2 VPs)

Here's the setting:
vm1 (ubuntu) for CA (tls enabled)  -- membersrvc.yamll attached
vm2 (ubuntu) for VP0 (tls enabled) -- core.yaml attached (core_vp0.yaml)
vm3 (ubuntu) for VP1 (tls enabled) -- core.yaml attached (core_vp1.yaml)

start CA from hyperledger/fabric dir of vm1
> build/bin/membersrvc
debug log output snippet:
{code}
...
13:53:41.090 [logging] LoggingInit -> DEBU 373 Setting default logging level to DEBUG for command 'ca'
13:53:41.150 [ca] readCAPrivateKey -> DEBU 374 Reading CA private key.
13:53:41.151 [ca] createCAKeyPair -> DEBU 375 Creating CA key pair.
13:53:41.151 [ca] readCACertificate -> DEBU 376 Reading CA certificate.
13:53:41.151 [ca] createCACertificate -> DEBU 377 Creating CA certificate.
13:53:41.152 [logging] LoggingInit -> DEBU 378 Setting default logging level to DEBUG for command 'tlsca'
13:53:41.152 [server] main -> DEBU 379 TLS was enabled [security.tls_enabled == true]
13:53:41.153 [server] main -> DEBU 37a ACA was enabled [aca.enabled == true]
13:53:41.153 [aca] Start -> INFO 37b Staring ACA services...
13:53:41.153 [aca] startACAP -> INFO 37c ACA PUBLIC gRPC API server started
13:53:41.153 [aca] Start -> INFO 37d ACA services started
13:53:41.153 [eca] Start -> INFO 37e Starting ECA...
13:53:41.153 [eca] startECAP -> INFO 37f ECA PUBLIC gRPC API server started
13:53:41.153 [eca] startECAA -> INFO 380 ECA ADMIN gRPC API server started
13:53:41.153 [eca] Start -> INFO 381 ECA started.
13:53:41.153 [tca] Start -> INFO 382 Staring TCA services...
13:53:41.153 [tca] startTCAP -> INFO 383 TCA PUBLIC gRPC API server started
13:53:41.153 [tca] startTCAA -> INFO 384 TCA ADMIN gRPC API server started
13:53:41.153 [tca] Start -> INFO 385 TCA started.
13:53:41.153 [tlsca] Start -> INFO 386 TLSCA started.
13:53:53.459 [ecap] ReadCACertificate -> DEBU 387 gRPC ECAP:ReadCACertificate
13:53:53.467 [tcap] ReadCACertificate -> DEBU 388 grpc TCAP:ReadCACertificate
13:53:53.473 [ecap] CreateCertificatePair -> DEBU 389 gRPC ECAP:CreateCertificate
13:53:53.478 [ca] readUser -> DEBU 38a Reading token for vp0.
13:53:53.659 [ecap] CreateCertificatePair -> DEBU 38b gRPC ECAP:CreateCertificate
13:53:53.659 [ca] readUser -> DEBU 38c Reading token for vp0.
13:53:53.660 [ca] readRole -> DEBU 38d Reading role for vp0.
13:53:53.660 [ca] createCertificateFromSpec -> DEBU 38e Creating certificate for vp0.
13:53:53.714 [ca] readRole -> DEBU 38f Reading role for vp0.
13:53:53.714 [ca] createCertificateFromSpec -> DEBU 390 Creating certificate for vp0.
13:53:53.879 [tlsca] CreateCertificate -> DEBU 391 grpc TLSCAP:CreateCertificate
13:53:53.880 [ca] createCertificateFromSpec -> DEBU 392 Creating certificate for vp0-832d9438-52fd-4bd1-9593-b1737c8c28ee.
13:55:35.864 [ecap] ReadCACertificate -> DEBU 393 gRPC ECAP:ReadCACertificate
13:55:35.872 [tcap] ReadCACertificate -> DEBU 394 grpc TCAP:ReadCACertificate
13:55:35.882 [ecap] CreateCertificatePair -> DEBU 395 gRPC ECAP:CreateCertificate
13:55:35.882 [ca] readUser -> DEBU 396 Reading token for vp1.
13:55:35.892 [ecap] CreateCertificatePair -> DEBU 397 gRPC ECAP:CreateCertificate
13:55:35.893 [ca] readUser -> DEBU 398 Reading token for vp1.
13:55:35.894 [ca] readRole -> DEBU 399 Reading role for vp1.
13:55:35.894 [ca] createCertificateFromSpec -> DEBU 39a Creating certificate for vp1.
13:55:35.899 [ca] readRole -> DEBU 39b Reading role for vp1.
13:55:35.899 [ca] createCertificateFromSpec -> DEBU 39c Creating certificate for vp1.
13:55:35.915 [tlsca] CreateCertificate -> DEBU 39d grpc TLSCAP:CreateCertificate
13:55:35.915 [ca] createCertificateFromSpec -> DEBU 39e Creating certificate for vp1-912d93d6-e6a4-4feb-a313-d20a9c836d70.
...
{code}

start VP0 form hyperledger/fabric dir of vm2
> build/bin/peer node start
debug log output snippet:
{code}
...
13:53:55.670 [nodeCmd] serve -> DEBU 073 Running as validating peer - installing consensus 
13:53:55.670 [peer] initDiscovery -> DEBU 074 Retrieved discovery list from disk: []
13:53:55.670 [consensus/controller] NewConsenter -> INFO 075 Creating default consensus plugin (noops)
13:53:55.670 [consensus/noops] newNoops -> DEBU 076 Creating a NOOPS object
13:53:55.670 [consensus/noops] newNoops -> INFO 077 NOOPS consensus type = *noops.Noops
13:53:55.670 [consensus/noops] newNoops -> INFO 078 NOOPS block size = 500
13:53:55.670 [consensus/noops] newNoops -> INFO 079 NOOPS block wait = 1s
13:53:55.671 [peer] chatWithSomePeers -> DEBU 07a Starting up the first peer of a new network
13:53:55.671 [nodeCmd] serve -> INFO 07b Starting peer with ID=name:""vp0"" , network ID=dev, address=0.0.0.0:7051, rootnodes=, validator=true
13:53:55.671 [consensus/statetransfer] verifyAndRecoverBlockchain -> DEBU 07c Validating existing blockchain, highest validated block is 0, valid through 0
13:53:55.671 [consensus/statetransfer] blockThread -> INFO 07d Validated blockchain to the genesis block
13:53:55.671 [consensus/handler] 1 -> DEBU 07e Starting up message thread for consenter
13:53:55.672 [peer] ensureConnected -> DEBU 07f Starting Peer reconnect service (touch service), with period = 6s
13:53:55.672 [rest] StartOpenchainRESTServer -> INFO 080 Initializing the REST service on 0.0.0.0:7050, TLS is enabled.
13:54:01.672 [peer] ensureConnected -> DEBU 081 Touch service indicates no dropped connections
13:54:01.672 [peer] ensureConnected -> DEBU 082 Connected to: []
13:54:01.672 [peer] ensureConnected -> DEBU 083 Discovery knows about: []
13:54:07.672 [peer] ensureConnected -> DEBU 084 Touch service indicates no dropped connections
...
13:55:31.672 [peer] ensureConnected -> DEBU 0af Connected to: []
13:55:31.672 [peer] ensureConnected -> DEBU 0b0 Discovery knows about: []
2017/01/18 13:55:37 grpc: Server.Serve failed to complete security handshake from ""192.168.56.103:42698"": EOF
13:55:37.672 [peer] ensureConnected -> DEBU 0b1 Touch service indicates no dropped connections
13:55:37.672 [peer] ensureConnected -> DEBU 0b2 Connected to: []
13:55:37.672 [peer] ensureConnected -> DEBU 0b3 Discovery knows about: []
2017/01/18 13:55:38 grpc: Server.Serve failed to complete security handshake from ""192.168.56.103:42700"": EOF
2017/01/18 13:55:40 grpc: Server.Serve failed to complete security handshake from ""192.168.56.103:42702"": EOF
13:55:43.672 [peer] ensureConnected -> DEBU 0b4 Touch service indicates no dropped connections
...
{code}

star VP1 from hyperledger/fabric dir of vm3
> build/bin/peer node start
debug log output snippet:

{code}
...
13:55:35.974 [nodeCmd] serve -> DEBU 073 Running as validating peer - installing consensus 
13:55:35.974 [peer] initDiscovery -> DEBU 074 Retrieved discovery list from disk: []
13:55:35.975 [consensus/controller] NewConsenter -> INFO 075 Creating default consensus plugin (noops)
13:55:35.975 [consensus/noops] newNoops -> DEBU 076 Creating a NOOPS object
13:55:35.975 [consensus/noops] newNoops -> INFO 077 NOOPS consensus type = *noops.Noops
13:55:35.976 [consensus/noops] newNoops -> INFO 078 NOOPS block size = 500
13:55:35.976 [consensus/noops] newNoops -> INFO 079 NOOPS block wait = 1s
13:55:35.976 [nodeCmd] serve -> INFO 07a Starting peer with ID=name:""vp1"" , network ID=dev, address=0.0.0.0:7051, rootnodes=test-vp0:7051, validator=true
13:55:35.977 [rest] StartOpenchainRESTServer -> INFO 07b Initializing the REST service on 0.0.0.0:7050, TLS is enabled.
13:55:35.977 [consensus/statetransfer] verifyAndRecoverBlockchain -> DEBU 07c Validating existing blockchain, highest validated block is 0, valid through 0
13:55:35.981 [consensus/statetransfer] blockThread -> INFO 080 Validated blockchain to the genesis block
13:55:35.977 [consensus/handler] 1 -> DEBU 07d Starting up message thread for consenter
13:55:35.977 [peer] ensureConnected -> DEBU 07e Starting Peer reconnect service (touch service), with period = 6s
13:55:35.977 [peer] chatWithPeer -> DEBU 07f Initiating Chat with peer address: test-vp0:7051
2017/01/18 13:55:36 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: x509: certificate is valid for test-vp0, not test-vp1""; Reconnecting to {""test-vp0:7051"" <nil>}
2017/01/18 13:55:38 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: x509: certificate is valid for test-vp0, not test-vp1""; Reconnecting to {""test-vp0:7051"" <nil>}
13:55:38.986 [peer] chatWithPeer -> ERRO 081 Error creating connection to peer address test-vp0:7051: grpc: timed out when dialing
2017/01/18 13:55:38 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: x509: certificate is valid for test-vp0, not test-vp1""; Reconnecting to {""test-vp0:7051"" <nil>}
13:55:41.978 [peer] ensureConnected -> DEBU 082 Touch service indicates no dropped connections
13:55:41.978 [peer] ensureConnected -> DEBU 083 Connected to: []
13:55:41.978 [peer] ensureConnected -> DEBU 084 Discovery knows about: []
13:55:47.977 [peer] ensureConnected -> DEBU 085 Touch service indicates no dropped connections
...
{code}

Please see the error message in the above output for vp1, it says
{code}
2017/01/18 13:55:38 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: x509: certificate is valid for test-vp0, not test-vp1""; Reconnecting to {""test-vp0:7051"" <nil>}
13:55:38.986 [peer] chatWithPeer -> ERRO 081 Error creating connection to peer address test-vp0:7051: grpc: timed out when dialing
{code}

Note: I have the following in hosts file:
192.168.56.101  test-ca
192.168.56.102  test-vp0
192.168.56.103  test-vp1

",vm linux ubuntu 14.04,manali_test,mastersingh24,wayoon,WebKruncher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2478,,,,,,,,,,,,,,,,,,,,,,"19/Jan/17 12:34 AM;wayoon;core_vp0.yaml;https://jira.hyperledger.org/secure/attachment/10386/core_vp0.yaml","19/Jan/17 12:34 AM;wayoon;core_vp1.yaml;https://jira.hyperledger.org/secure/attachment/10385/core_vp1.yaml","19/Jan/17 12:34 AM;wayoon;membersrvc.yaml;https://jira.hyperledger.org/secure/attachment/10387/membersrvc.yaml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxigv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,manali_test,mastersingh24,wayoon,WebKruncher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/17 12:34 AM;wayoon; [^core_vp1.yaml]  [^core_vp0.yaml]  [^membersrvc.yaml] ;;;","30/Mar/17 4:44 AM;mastersingh24;I'm going to close this as WON'T FIX.
The only real way to get TLS working with v0.6 is to use the same certificate for all nodes and/or us a wildcard certificate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix BDD tests for the new protos (and new 1.0 arch),FAB-1729,14158,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,muralisr,muralisr,19/Jan/17 12:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 12:03 AM,,,,,,,,,0,,,,,,,,,"BDD tests still have the following
* CtorMsg (should now be Input)
* uses user registration and security from 0.6 (things like secureContext)

These should go away and BDD completely cleanup to work with 1.0.

[~ChristopherFerris] [~jeffgarratt]",,jeffgarratt,muralisr,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1715,,,,,,,,,,,,FAB-1141,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxih3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,muralisr,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"01/Feb/17 12:04 AM;jeffgarratt;As of change set https://gerrit.hyperledger.org/r/#/c/5095/ these have been completed.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
COP server gives back encoded enrollment secret,FAB-1730,14159,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,skarim,elast,elast,19/Jan/17 1:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Mar/17 11:53 PM,,,,,,,,,0,,,,,,,,,"When I send a register request to the cop server, it gives back the response: 

{""success"":true,""result"":""VFhSa1lqa0NpSkRs"",""errors"":[],""messages"":[]}

However, when I tried to enroll the user with the secret given, the server tells me that the password is incorrect because the password is base64 encoded.  I need to decode the secret in order for it to be usable.",,elast,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxihb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elast,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer sends a block with empty transactions,FAB-1733,14162,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,sanchezl,muralisr,muralisr,19/Jan/17 4:03 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Jan/17 5:16 AM,,,,,,,,,0,,,,,,,,,"Recreate 
https://github.com/hyperledger/fabric/blob/aea1751fba4e61f9becdf37f9861d5e010491520/docs/channel-setup.md

The deploy step crashes peer because Block.Data is nil (the line #s maybe off a bit)

{code:java}

goroutine 118 [running]:
panic(0xa9e500, 0xc42102fe10)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/committer/txvalidator.(*txValidator).Validate(0xc42012cee0, 0xc420fa2c60)
	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:94 +0x1fc
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitBlock(0xc42012cf60, 0xc420fa2c60, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:55 +0xdf
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc420f42ab0, 0xc420fa2c60, 0x1, 0x2, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:419 +0x56
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc420f42ab0)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:310 +0x72c
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:162 +0x6c5
{code}


Verified that a Deploy tx is getting sent into Orderer correctly and that the delivered block has Block.Data == nil. So must be the orderer not creating Data for some reason. ",,ishihara.shun,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxihj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security item,FAB-1735,14164,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,keithsmith,g8rfrk,g8rfrk,19/Jan/17 5:34 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 12:56 AM,,,,,,,,,0,Security,,,,,,,,contacted via email,,g8rfrk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxihz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,g8rfrk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security item,FAB-1736,14165,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,smithbk,g8rfrk,g8rfrk,19/Jan/17 5:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 12:52 AM,,,,,,,,,0,,,,,,,,,will send in email,,g8rfrk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxii7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,g8rfrk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for chainID to EventHub,FAB-1737,14166,15894,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,pmullaney,pmullaney,pmullaney,19/Jan/17 6:44 AM,12/Jul/19 8:40 PM,28/Oct/23 2:58 AM,12/Jul/19 8:40 PM,,,Future,,fabric-peer,fabric-sdk-node,,,0,,,,,,,,,"The events subsystem needs to support delivery of events from specific chains in a multichain environment. ChainID needs to be added to the registration interface and events specific to a chain will be direct at clients who register for that chain.
",,mastersingh24,muralisr,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiif:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,muralisr,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/19 8:40 PM;mastersingh24;replace with channel event hub;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ACL support for events,FAB-1738,14167,13227,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,pmullaney,pmullaney,19/Jan/17 6:57 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Apr/17 10:41 PM,,,,,fabric-peer,fabric-sdk-node,,,0,,,,,,,,,"Currently, a user with a tls cert may consume all events from the fabric. We need to restrict access to chains that the user is allowed to ingest events from.

as step #1, require signed event. use local MSP in the event registration's target peer to validate the Creator identity. After successfully validating the Creator, verify the signature.

// TODO: ideally this should also check each channel's ""Readers"" policy to ensure the identity satisfies
// each channel's access control policy. This step is necessary because the registered listener is going
// to get read access to all channels by receiving Block events from all channels.
// However, this is not being done for v1.0 due to complexity concerns and the need to complex a stable,
// minimally viable release. Eventually events will be made channel-specific, at which point this method
// should be revisited
",,muralisr,pmullaney,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiin:",,,,,,Sprint 5 - Consensus,Sprint 7 - nodeSDK,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 11 - SDK node,Sprint 12 - SDK node,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,Sprint 16 - SDK node,,,,,,,,,,,,,,,muralisr,pmullaney,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"18/Apr/17 12:03 PM;jimthematrix;After discussing with [~binhn], updated the scope of the security check to limit to checking with local MSP only (not with channel-specific policies for Readers). The reason is that we predict that in majority of use cases the Readers policy of a channel is to allow all members of the organization to have read access to the ledger, and as such are allowed to receive Block events (logically equivalent to reading the ledger).;;;","18/Apr/17 8:05 PM;troyronda;We need to restrict access to block events and APIs. There are also unresolved issues with the local MSP strategy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Find the issue behind Ledger->Couchdb tests passing on package level but failing as a part of Fabric Unit test.,FAB-1739,14168,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,19/Jan/17 7:51 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,24/Jan/17 6:31 AM,,,,,fabric-quality,,,,0,Ledger,quality,,,,,,,"The unit tests that are available in /fabric/core/ledger/util/couchdb passes with 50%+ coverage, but when all the unit-tests are run, it fails.

More details:
Steps to run as a single package test
# run the couchDB container via the command {{couchdb start}}
# set the configuration to be CouchDB with the followig statement inside test code:
{{viper.Set(""ledger.state.stateDatabase"", ""CouchDB"")}}
# In the folder, run {{go test ./.. -cover -v}}
Partial output:
{code}

2017/01/18 17:08:20 ===COUCHDB=== Entering CreateConnectionDefinition()
2017/01/18 17:08:20 ===COUCHDB=== Created database configuration  URL=[http://localhost:5984]  database=testdb1
2017/01/18 17:08:20 ===COUCHDB=== Exiting CreateConnectionDefinition()
2017/01/18 17:08:20 ===COUCHDB=== Entering DropDatabase()
2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=DELETE  url=http://localhost:5984/testdb1
2017/01/18 17:08:20 DELETE /testdb1 HTTP/1.1
Host: localhost:5984
User-Agent: Go-http-client/1.1
Accept-Encoding: gzip
2017/01/18 17:08:20 ===COUCHDB=== Couch DB error  status code=404  error={""error"":""not_found"",""reason"":""Database does not exist.""}
2017/01/18 17:08:20 ===COUCHDB=== Entering CreateConnectionDefinition()
2017/01/18 17:08:20 ===COUCHDB=== Created database configuration  URL=[http://localhost:5984]  database=testdb1
2017/01/18 17:08:20 ===COUCHDB=== Exiting CreateConnectionDefinition()
2017/01/18 17:08:20 ===COUCHDB=== Entering CreateDatabaseIfNotExist()
2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5984/testdb1
2017/01/18 17:08:20 GET /testdb1 HTTP/1.1
Host: localhost:5984
User-Agent: Go-http-client/1.1
Accept: multipart/related
Accept-Encoding: gzip

2017/01/18 17:08:20 ===COUCHDB=== Couch DB error  status code=404  error={""error"":""not_found"",""reason"":""Database does not exist.""}
2017/01/18 17:08:20 ===COUCHDB=== Database testdb1 does not exist.
2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=PUT  url=http://localhost:5984/testdb1
2017/01/18 17:08:20 PUT /testdb1 HTTP/1.1
Host: localhost:5984
User-Agent: Go-http-client/1.1
Content-Length: 0
Accept: application/json
Content-Type: application/json
Accept-Encoding: gzip

2017/01/18 17:08:20 ===COUCHDB=== Exiting handleRequest()
2017/01/18 17:08:20 ===COUCHDB=== Created database testdb1 
2017/01/18 17:08:20 ===COUCHDB=== Exiting CreateDatabaseIfNotExist()
2017/01/18 17:08:20 ===COUCHDB=== Entering SaveDoc()
2017/01/18 17:08:20 ===COUCHDB===   id=2,  value={""asset_name"":""marble1"",""color"":""blue"",""size"":""35"",""owner"":""jerry""}
2017/01/18 17:08:20 ===COUCHDB=== Entering ReadDoc()  id=2
2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5984/testdb1/2?attachments=true
2017/01/18 17:08:20 GET /testdb1/2?attachments=true HTTP/1.1
Host: localhost:5984
User-Agent: Go-http-client/1.1
Accept: multipart/related
Accept-Encoding: gzip

2017/01/18 17:08:20 ===COUCHDB=== Couch DB error  status code=404  error={""error"":""not_found"",""reason"":""missing""}
2017/01/18 17:08:20 ===COUCHDB===   rev=
2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=PUT  url=http://localhost:5984/testdb1/2
2017/01/18 17:08:20 PUT /testdb1/2 HTTP/1.1
Host: localhost:5984
User-Agent: Go-http-client/1.1
Content-Length: 67
Accept: application/json
Content-Type: application/json
Accept-Encoding: gzip
{code}

Steps to run a part of the unit-tests
# run the couchDB container via the command {{couchdb start}}
# set the configuration to be CouchDB with the followig statement inside test code:
{{viper.Set(""ledger.state.stateDatabase"", ""CouchDB"")}}
# in fabric/, run {make unit-test}
# Relevant output:
{code}

[33munit-tests_1  |[0m Here..........................
[33munit-tests_1  |[0m 
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL=[http://localhost:5984]  database=testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering DropDatabase()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=DELETE  url=http://localhost:5984/testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 DELETE /testdb1 HTTP/1.1
[33munit-tests_1  |[0m Host: localhost:5984
[33munit-tests_1  |[0m User-Agent: Go-http-client/1.1
[33munit-tests_1  |[0m Accept-Encoding: gzip
[33munit-tests_1  |[0m 
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL=[http://localhost:5984]  database=testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateDatabaseIfNotExist()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5984/testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 GET /testdb1 HTTP/1.1
[33munit-tests_1  |[0m Host: localhost:5984
[33munit-tests_1  |[0m User-Agent: Go-http-client/1.1
[33munit-tests_1  |[0m Accept: multipart/related
[33munit-tests_1  |[0m Accept-Encoding: gzip
[33munit-tests_1  |[0m 
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL=[http://localhost:5984]  database=testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering DropDatabase()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=DELETE  url=http://localhost:5984/testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 DELETE /testdb1 HTTP/1.1
[33munit-tests_1  |[0m Host: localhost:5984
[33munit-tests_1  |[0m User-Agent: Go-http-client/1.1
[33munit-tests_1  |[0m Accept-Encoding: gzip
[33munit-tests_1  |[0m 
[33munit-tests_1  |[0m --- FAIL: TestDBCreateSaveWithoutRevision (100.00s)
[33munit-tests_1  |[0m 	test_util.go:162: Error when trying to create database - Error: Get http://localhost:5984/testdb1: dial tcp [::1]:5984: getsockopt: connection refused
[33munit-tests_1  |[0m 		 CallerInfo = [/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/util/couchdb/couchdb_test.go:91]
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL=[http://localhost:5990]  database=testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateDatabaseIfNotExist()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5990/testdb1
[33munit-tests_1  |[0m 2017/01/17 20:22:16 GET /testdb1 HTTP/1.1
[33munit-tests_1  |[0m Host: localhost:5990
[33munit-tests_1  |[0m User-Agent: Go-http-client/1.1
[33munit-tests_1  |[0m Accept: multipart/related
[33munit-tests_1  |[0m Accept-Encoding: gzip
[33munit-tests_1  |[0m 
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering SaveDoc()
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB===   id=3,  value={""asset_name"":""marble1"",""color"":""blue"",""size"":""35"",""owner"":""jerry""}
[33munit-tests_1  |[0m 2017/01/17 20:22:16 ===COUCHDB=== Entering ReadDoc()  id=3

{code}",,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiiv:",,,,,,Sprint 10 - Quality,,,,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/17 12:43 AM;AdnanChoudhury;It has been observed that upping the unit-test docker-compose file ({{fabric/unit-test/docker-compose.yaml}}), as is the case in {{make unit-test}} command, causes the couchdb unit tests to fail. If the ledger unit tests are run through the {{fabric/unit-test/run.sh}} directly and skipping the docker-compose up, the tests pass.;;;","20/Jan/17 7:45 AM;AdnanChoudhury;The reason behind the failing unit-tests is that 
during the single-package test: 
the CouchDB server is in a container within a host (vagrant), and the testcode is *run locally* from the host,
but in the case of Fabric-unit-test:
The couchDB server and the testcodes are in *two separate containers* residing in the Vagrant host.

A connection request from the testcode container is not reaching the CouchDB server because its not possible to bind them through a single host-port. Even if it was possible, the design decision to not let CouchDB serve any remote request means that CouchDB will not serve a request from the testcode container (as it will be considered a remote request). ;;;","24/Jan/17 2:51 AM;AdnanChoudhury;To add, the {{make unit-test}} for couchdb passes if the IP address of the couchDB container is used, instead of {{localhost}} for the couchDB adress in tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer crashes when 100 concurrent threads tried to execute 20 invokes,FAB-1740,14169,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,19/Jan/17 8:24 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Feb/17 12:15 AM,,,,,,,,,0,quality,,,,,,,,"Peer crashes when 100 threads tried to send invoke commands on a single peer
change the Concurrency to 100 in ccchecker.json

Gerrits changes used for testing [#3623] & 3625 


Steps to reproduce the issue:

1. vagrant window 1 - start orderer
        ./orderer
    
2. vagrant window 2 - start peer
        peer node start
    
3.vagrant window 3 - bring up chaincode for test
   
        //deploy the chaincode used by ccchecker out of the box
        peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/ccchecker/chaincodes/newkeyperinvoke -c '{""Args"":[""""]}'
        //wait for commit say for about 10 secs and then issue a query to bring the CC up
        peer chaincode query -n mycc -c '{""Args"":[""get"",""a""]}'
    
        //verify the chaincode is up
        docker ps
    
4. vagrant window 4 - run test
        cd examples/ccchecker
        go build
        ./ccchecker -c ccchecker.json 
      ( can reproduce the same with doublespender.json aswell)



*Result* :

*_peer crashes with the OutofMemory error_*
Logs enclosed",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/17 8:22 AM;Ratnakar;concurrency-tests-logs.zip;https://jira.hyperledger.org/secure/attachment/10390/concurrency-tests-logs.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxij3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/17 8:26 AM;Ratnakar;fatal error: runtime: out of memory

runtime stack:
runtime.throw(0xb4bdb4, 0x16)
	/opt/go/src/runtime/panic.go:566 +0x95
runtime.sysMap(0xc50cdb0000, 0x1e20000, 0x0, 0xecf4b8)
	/opt/go/src/runtime/mem_linux.go:219 +0x1d0
runtime.(*mheap).sysAlloc(0xeb5a20, 0x1e20000, 0x40f800)
	/opt/go/src/runtime/malloc.go:407 +0x37a
runtime.(*mheap).grow(0xeb5a20, 0xf09, 0x0)
	/opt/go/src/runtime/mheap.go:726 +0x62
runtime.(*mheap).allocSpanLocked(0xeb5a20, 0xf09, 0x1)
	/opt/go/src/runtime/mheap.go:630 +0x4f2
runtime.(*mheap).alloc_m(0xeb5a20, 0xf09, 0x100000000, 0x7fe3f2580c08)
	/opt/go/src/runtime/mheap.go:515 +0xe0
runtime.(*mheap).alloc.func1()
	/opt/go/src/runtime/mheap.go:579 +0x4b
runtime.systemstack(0x7fe3ea7fbe18)
	/opt/go/src/runtime/asm_amd64.s:314 +0xab
runtime.(*mheap).alloc(0xeb5a20, 0xf09, 0x10100000000, 0xc420bac6b0)
	/opt/go/src/runtime/mheap.go:580 +0x73
runtime.largeAlloc(0x1e10f94, 0x7fe3ea7fbe01, 0x455c5a)
	/opt/go/src/runtime/malloc.go:774 +0x93
runtime.mallocgc.func1()
	/opt/go/src/runtime/malloc.go:669 +0x3e
runtime.systemstack(0xc420019500)
	/opt/go/src/runtime/asm_amd64.s:298 +0x79
runtime.mstart()
	/opt/go/src/runtime/proc.go:1079

goroutine 1239 [running]:
runtime.systemstack_switch()
	/opt/go/src/runtime/asm_amd64.s:252 fp=0xc4672675d0 sp=0xc4672675c8
runtime.mallocgc(0x1e10f94, 0xa39c60, 0x445b01, 0x1)
	/opt/go/src/runtime/malloc.go:670 +0x903 fp=0xc467267670 sp=0xc4672675d0
runtime.makeslice(0xa39c60, 0x1e10f94, 0x1e10f94, 0x0, 0xc445211288, 0x1)
	/opt/go/src/runtime/slice.go:57 +0x7b fp=0xc4672676c8 sp=0xc467267670
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).DecodeRawBytes(0xc436c391e0, 0x78a401, 0xc436c391e0, 0xc445211288, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:204 +0x16b fp=0xc467267758 sp=0xc4672676c8
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).dec_slice_byte(0xc436c391e0, 0xc42078c140, 0xc4451ef340, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:578 +0x34 fp=0xc4672677a0 sp=0xc467267758
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).unmarshalType(0xc436c391e0, 0xe8cbe0, 0xaeef00, 0xc42021e6e0, 0xc4451ef300, 0xc4451ef340, 0x0, 0xc4202e8bd0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:441 +0x1ee fp=0xc467267b58 sp=0xc4672677a0
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.(*Buffer).Unmarshal(0xc436c391e0, 0xe82680, 0xc4451ef340, 0xc467267c18, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:356 +0x1dd fp=0xc467267be0 sp=0xc467267b58
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.UnmarshalMerge(0xc4dd8e0004, 0x1e10fa2, 0x1e11ffc, 0xe82680, 0xc4451ef340, 0x1, 0xc4451ef340)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:318 +0x13c fp=0xc467267c38 sp=0xc467267be0
github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto.Unmarshal(0xc4dd8e0004, 0x1e10fa2, 0x1e11ffc, 0xe82680, 0xc4451ef340, 0x1e11ffc, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf/proto/decode.go:304 +0x67 fp=0xc467267c80 sp=0xc467267c38
github.com/hyperledger/fabric/core/chaincode.(*LifeCycleSysCC).getChaincode(0xecce10, 0xe8b7e0, 0xc420bcd580, 0xc4453de0b0, 0x10, 0xc4453de0ac, 0x4, 0xc4451a85e0, 0x0, 0x0, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/lccc.go:221 +0x10e fp=0xc467267d10 sp=0xc467267c80
github.com/hyperledger/fabric/core/chaincode.(*LifeCycleSysCC).Invoke(0xecce10, 0xe8b7e0, 0xc420bcd580, 0xe83b80, 0xc4202a8940, 0x0, 0x0, 0xc45bd46e10)
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/lccc.go:468 +0x598 fp=0xc467267e80 sp=0xc467267d10
github.com/hyperledger/fabric/core/chaincode/shim.(*Handler).handleTransaction.func1(0xc4202ce000, 0xc45bd4ac00)
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/handler.go:292 +0x45f fp=0xc467267fa0 sp=0xc467267e80
runtime.goexit()
	/opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc467267fa8 sp=0xc467267fa0
created by github.com/hyperledger/fabric/core/chaincode/shim.(*Handler).handleTransaction
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/handler.go:305 +0x49

goroutine 1 [chan receive, 5 minutes]:
github.com/hyperledger/fabric/peer/node.serve(0xecce10, 0x0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:250 +0xa1d
github.com/hyperledger/fabric/peer/node.glob..func2(0xea7ea0, 0xecce10, 0x0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:69 +0x3f
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xea7ea0, 0xecce10, 0x0, 0x0, 0xea7ea0, 0xecce10)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0xea8720, 0x0, 0x0, 0xc4202060d0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0xea8720, 0x13, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:114 +0x47b

goroutine 17 [syscall, 5 minutes, locked to thread]:
runtime.goexit()
	/opt/go/src/runtime/asm_amd64.s:2086 +0x1

goroutine 6 [sleep]:
time.Sleep(0x2faf080)
	/opt/go/src/runtime/time.go:59 +0xe1
github.com/hyperledger/fabric/gossip/gossip.(*batchingEmitterImpl).periodicEmit(0xc4202e4eb0)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/batcher.go:63 +0x46
created by github.com/hyperledger/fabric/gossip/gossip.newBatchingEmitter
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/batcher.go:57 +0x136

goroutine 5 [chan receive]:
github.com/hyperledger/fabric/events/producer.(*eventProcessor).start(0xc4202f6ff0)
	/opt/gopath/src/github.com/hyperledger/fabric/events/producer/events.go:216 +0x100
created by github.com/hyperledger/fabric/events/producer.initializeEvents
	/opt/gopath/src/github.com/hyperledger/fabric/events/producer/events.go:249 +0x13a

goroutine 4 [syscall, 5 minutes]:
os/signal.signal_recv(0xc42001dfa8)
	/opt/go/src/runtime/sigqueue.go:116 +0x157
os/signal.loop()
	/opt/go/src/os/signal/signal_unix.go:22 +0x22
created by os/signal.init.1
	/opt/go/src/os/signal/signal_unix.go:28 +0x41
;;;","12/Feb/17 12:15 AM;Ratnakar;Unable to reproduce this any more , re-open if seen again ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate multi chain tests using CLI in CI pipeline,FAB-1741,14170,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Jan/17 11:00 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Jul/18 10:47 PM,,,,,,,,,0,,,,,,,,,"Murali requested us to integrate multi chain tests using CLI in Jenkins CI pipeline. Below are the three scenarios will integrate in CI-Pipeline

1) Orderer (Sole) + peer
2) Orderer (Kafka) + peer
3) Cop + orderer (kafka) + peer",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2060,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxijb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/17 12:54 PM;rameshthoomu;Created Job in Jenkins to run orderer(solo) + peer tests but CLI commands has to run in CLI container. Unable to run CLI commands in CLI containers.. Working on this.;;;","04/Mar/17 10:56 PM;rameshthoomu;Created Jenkins job for orderer (solo) and running this job as cron job for every 6 hours.. CLI tests are now stable, Next week will integrate kafka based tests in CLI..;;;","17/Jul/18 10:47 PM;rameshthoomu;This has been integrated in CI;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate Bootstrap feature bdd tests in Jenkins CI-pipeline,FAB-1742,14171,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,19/Jan/17 11:03 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Mar/17 5:46 AM,,,,,,,,,0,,,,,,,,,Test BDD tests (bootstrap feature) in Jenkins CI pipeline. ,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2504,,,,,,,,FAB-1191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxijj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 12:28 PM;rameshthoomu;Created a Behave job in sandbox environment and ran behave -k  features/bootstrap.feature..  Below is the build reference

https://jenkins.hyperledger.org/sandbox/job/fabric-behave/4/consoleText

Exception ImportError: No module named 'cStringIO'
Traceback (most recent call last):
  File ""/usr/local/bin/behave"", line 11, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python3.5/dist-packages/behave/__main__.py"", line 109, in main
    failed = runner.run()
  File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 672, in run
    return self.run_with_paths()
  File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 677, in run_with_paths
    self.load_hooks()
  File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 631, in load_hooks
    exec_file(hooks_path, self.hooks)
  File ""/usr/local/lib/python3.5/dist-packages/behave/runner.py"", line 304, in exec_file
    exec(code, globals, locals)
  File ""environment.py"", line 7, in <module>
    from steps.coverage import saveCoverageFiles, createCoverageAggregate
  File ""/w/workspace/fabric-behave/gopath/src/github.com/hyperledger/fabric/bddtests/steps/coverage.py"", line 1, in <module>
    import cStringIO
ImportError: No module named 'cStringIO'
Build step 'Execute shell' marked build as failure
Finished: FAILURE;;;","11/Mar/17 5:46 AM;rameshthoomu;fix has been provided and now CI is running behave tests for every fabric verify and merge commits. Closing this issue. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add utility methods for generating chain config items,FAB-1743,14172,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,19/Jan/17 11:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:28 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxijr:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Primary node does not come back to normal operation after a fail-stop, a restart and a synchronization",FAB-1744,14173,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,ryokawajp,ryokawajp,19/Jan/17 11:41 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 5:06 AM,v0.6,,WON'T FIX,,fabric-orderer,,,,0,0.6,,,,,,,,"h2. Summary
We were testing the checkpoint and the state transfer features of Hyperledger Fabric.
During the test, we found a case that a failure peer does not accept new transactions even after recovery from the failure when the peer is a primary node.

h2. Related issues
- [FAB-707] disconnected Peer can't recover from lost connection, then start sending view change requests - Hyperledger JIRA
-- https://jira.hyperledger.org/browse/FAB-707
-- Looks like similar but the test cases are different. In FAB-707, a non-primary peer was stopped and restarted, while in this JIRA item, the primary node was stopped and restarted.

h2. Parameters
- 4 nodes (vp0, vp1, vp2, vp3). The initial primary node is vp0.
- chaincode_example02
- Fabric v0.6.0-preview
- Security and privacy enabled
- Ubuntu 14.04 (in Virtual Box and Vagrant)
- Docker  1.12.1
- REST API is used for sending transactions.
- docker-compose.yml (see the attached file)
- K=2
- logmultiplier=2
- PBFT consensus
- PBFT batch size = 1

h2. Test case
- invoke 2 transactions to vp0. 
- kill vp0
- invoke 3 transactions to vp1
- restart vp0
- invoke N transactions to vp1.

h2. Result
- Initial sync occurs at : block height=11
- The sync (state transfer) occurs periodically after the initial sync. Period of sync = 8 blocks (or 8 Tx).
-- Even after the sync, vp0 did not add a new block to its blockchain when it receives a new transactions. Other three peers (vp1, vp2, vp3) worked correctly.
-- This periodic behavior does not occur when we kill vp2 (a non-primary node) instead of vp0.

h2. Interpretation of the result
- It seems that it takes a time to start the Initial synchronization because in PBFT, Fabric executes the state transfer only when the sequence number exceeds the high water mark, which is order of K * logmultiplier. I suppose this is a designed behavior.
- However, vp0's block height does not grow at all, while the block heights of the rest of the peers grow as they accept the additional transactions. And another state transfer occurs after 8 transactions later. This occurs periodically in the number of transactions. This behavior is different from what is expected.
- When vp0 is killed, a view change occurs from view 0 to view 1. However, according to the log below, vp0 still thinks that he is still in view 0. Is this the reason why vp0 does not accept the new transactions, since the later transactions are sent to view 1?

Warning messages (example of K=2, logmultiplier=2)
{noformat}
vp0_1        | 01:27:42.250 [consensus/pbft] recvCommit -> WARN 0bc Replica 0 ignoring commit for view=1/seqNo=8: not in-wv, in view 0, high water mark 2
vp0_1        | 01:27:42.304 [consensus/pbft] recvCheckpoint -> WARN 0c5 Checkpoint sequence number outside watermarks: seqNo 8, low-mark 2
vp0_1        | 01:27:42.317 [consensus/pbft] weakCheckpointSetOutOfRange -> WARN 0cd Replica 0 is out of date, f+1 nodes agree checkpoint with seqNo 8 exists but our high water mark is 6
vp0_1        | 01:27:42.318 [consensus/pbft] sendPrePrepare -> WARN 0d5 Primary 0 not sending pre-prepare for batch aXZf/Zfi7CDLU5n5dANOpYIX81Oy0LuTZ2mX/Xly48d5yYaULtX+ndFIVKweQ/xej17JXRwkTIV0RiT1j+xKeA== - out of sequence numbers
vp0_1        | 01:27:47.356 [consensus/pbft] sendPrePrepare -> WARN 10d Primary 0 not sending pre-prepare for batch Tq+y1NuMKGw8eJjimsdRecr4RseJ//xE00lkjK+qvg2yK9giQwqCmPnlgCdBBVn/uzxwFsvYn/sHeLcL60O6Dw== - out of sequence numbers
vp0_1        | 01:27:47.357 [consensus/pbft] recvPrePrepare -> WARN 129 Pre-prepare from other than primary: got 1, should be 0
vp0_1        | 01:27:51.361 [consensus/pbft] recvViewChange -> WARN 181 Replica 0 already has a view change message for view 1 from replica 0
{noformat}

Following is a part of situation1.log filtered by a command: `grep ""Height"" situation1.log`. Synchronization is highlighted in a bold font.
{panel}
Height of vp0 : 1
Height of vp1 : 1
Height of vp2 : 1
Height of vp3 : 1
Height of vp0 : 3
Height of vp1 : 3
Height of vp2 : 3
Height of vp3 : 3
Height of vp0 : 4
Height of vp1 : 4
Height of vp2 : 4
Height of vp3 : 4
Height of vp0 :
Height of vp1 : 5
Height of vp2 : 5
Height of vp3 : 5
Height of vp0 :
Height of vp1 : 6
Height of vp2 : 6
Height of vp3 : 6
Height of vp0 :
Height of vp1 : 7
Height of vp2 : 7
Height of vp3 : 7
Height of vp0 : 4
Height of vp1 : 8
Height of vp2 : 8
Height of vp3 : 8
Height of vp0 : 4
Height of vp1 : 9
Height of vp2 : 9
Height of vp3 : 9
Height of vp0 : 4
Height of vp1 : 10
Height of vp2 : 10
Height of vp3 : 10
*Height of vp0 : 11*
*Height of vp1 : 11*
*Height of vp2 : 11*
*Height of vp3 : 11*
Height of vp0 : 11
Height of vp1 : 12
Height of vp2 : 12
Height of vp3 : 12
Height of vp0 : 11
Height of vp1 : 13
Height of vp2 : 13
Height of vp3 : 13
Height of vp0 : 11
Height of vp1 : 14
Height of vp2 : 14
Height of vp3 : 14
Height of vp0 : 11
Height of vp1 : 15
Height of vp2 : 15
Height of vp3 : 15
Height of vp0 : 11
Height of vp1 : 16
Height of vp2 : 16
Height of vp3 : 16
Height of vp0 : 11
Height of vp1 : 17
Height of vp2 : 17
Height of vp3 : 17
Height of vp0 : 11
Height of vp1 : 18
Height of vp2 : 18
Height of vp3 : 18
*Height of vp0 : 19*
*Height of vp1 : 19*
*Height of vp2 : 19*
*Height of vp3 : 19*
Height of vp0 : 19
Height of vp1 : 20
Height of vp2 : 20
Height of vp3 : 20
Height of vp0 : 19
Height of vp1 : 21
Height of vp2 : 21
Height of vp3 : 21
{panel}
","- Fabric v0.6.0-preview
- Security and privacy enabled
- Ubuntu 16.04
- Docker 
- REST API is used for sending transactions.
- docker-compose.yaml to be attached soon.
- K=2
- logmultiplier=2
- PBFT consensus
- PBFT batch size = 1
",Honglei,ryokawajp,YingShi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-707,,,,,,,,,,,,,,,,,"19/Jan/17 1:45 PM;ryokawajp;docker-compose-4nodes.yml;https://jira.hyperledger.org/secure/attachment/10391/docker-compose-4nodes.yml","19/Jan/17 2:00 PM;ryokawajp;situation1.log;https://jira.hyperledger.org/secure/attachment/10392/situation1.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxijz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Honglei,ryokawajp,YingShi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add utility methods for generating orderer config items,FAB-1745,14174,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,19/Jan/17 11:47 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:28 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxik7:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add utility method for generating policy config items,FAB-1746,14175,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,19/Jan/17 12:14 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxikf:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"devmode invoke fails: ""handler not found""",FAB-1747,14176,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,greg.haskins,greg.haskins,19/Jan/17 12:35 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 11:05 PM,,,,,fabric-peer,,,,0,,,,,,,,,"Deploying a chaincode application under devmode fails with:

```sending init failed(handler not found for chaincode mycc:0/**TEST_CHAINID**)```

Steps to reproduce:
# Start a peer/orderer with the peer in --peer-chaincodedev mode
# Compile/launch a chaincode manually (aka devmode launch)
# Initiate a deploy sequence (such as through the SDK).
# Initiate an invoke sequence (such as through the SDK).
",,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxikn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/17 12:40 PM;greg.haskins;Known work-around:

Kill/restart the chaincode after the deploy but before the invoke.  The root cause is related to chaincode FSM: Non-devmode deployment naturally disconnects the chaincode container after the deployment.  Devmode FSM is still expecting disconnect.  However, since the code is manually driven, this will not happen unless the user takes action.

Actual fix will involve updating the FSM to understand devmode realities. ;;;","03/Feb/17 11:05 PM;greg.haskins;Fixed: https://gerrit.hyperledger.org/r/#/c/4773/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor provisional bootstrap generator,FAB-1748,14177,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,19/Jan/17 12:38 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The old provisional bootstrapper was becoming increasingly convoluted for doing very little, this changeset deletes must/most of that code in favor of a much simpler approach.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxikv:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I need to set the content of transient data of a proposal as a Map,FAB-1751,14180,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,19/Jan/17 5:33 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 11:38 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,"This is an item for formatting the transient data field of a proposal as a key-value store (Map).
This would allow the client side to set various fields in it, and the chaincode side to easily retrieve one or more fields upon referencing upon execution demand.",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1219,,,,,,,,,"1|hzxkfr:",,,,,,Sprint 10 - Crypto,Sprint 11 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to expose to a chaincode the binding of the transaction that invoked it,FAB-1752,14181,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,elli-androulaki,elli-androulaki,19/Jan/17 5:36 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,07/Feb/17 7:41 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,"With this item we target to expose transaction binding through the chaincode SHIM. 
",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCJ-90,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1219,,,,,,,,,"1|hzx6lz:",,,,,,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to make proposals non-transferrable,FAB-1753,14182,,Task,Closed,FAB,Fabric,software,denyeart,,,Low,Won't Do,angelo.decaro,elli-androulaki,elli-androulaki,19/Jan/17 6:58 PM,23/Jan/20 3:47 AM,28/Oct/23 2:58 AM,23/Jan/20 3:47 AM,,,Future,,fabric-crypto,,,,0,Security,stale-item,,,,,,,"Proposals are sent by a client to an endorser and with the current architecture trigger the invocation of a chaincode, and is followed up with a ProposalResponse.

Client-endorser communication is protected with TLS. However, a malicious peer, could try to impersonate a client to another peer and consume other endorser resources.

This is not a critical attack, cause (i) we currently do not support confidential contracts at the fabric level, (ii) chaincode proposals have the same chaincode content regardless of the endorser they refer to, (iii) the malicious peer cannot eventually contract a valid transaction without the original proposal creator's key. 

A simple way around this attack would be to include in the signed proposal proto message the recipient's endorser/certificate. Recipient name is not necessarily included in the final transaction. ",,elli-androulaki,sykesm,weeds,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2420,,,,,,,,,"1|hzzjyn:",,,,,,Sprint 10 - Crypto,Sprint 13 - Crypto,Sprint 14 - Crypto,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,sykesm,weeds,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 6:18 PM;elli-androulaki;The technique is similar to the one used in FAB-4824 .;;;","11/Aug/17 9:17 PM;weeds;This is a couple of days of work, but we want to push it for earlier since it's an important component of the system.;;;","11/Aug/17 9:28 PM;weeds;Please confirm this does not end up in the block- we don't want to increase the size.  The payload is very large right now.;;;","19/Aug/17 1:28 AM;elli-androulaki;Adding this to Release-planning-1.1-TechPreview, as merging this would lead to incompatibility in a network where few peers dont run v1.1.

 

 ;;;","23/Jan/20 3:47 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate common GRPC server with fabric components,FAB-1754,14183,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/Jan/17 7:07 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,12/Apr/17 3:18 AM,,,v1.0.0,,fabric-orderer,fabric-peer,,,0,,,,,,,,,"There are several components which spin up GRPC servers.  Now that we have the common GRPC server, it's time to replace all GRPC servers used in the fabric with this common component.

This will then allow us to proceed to having a common way of handling TLS as well",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxilj:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace orderer GRPC server,FAB-1755,14184,14183,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,mastersingh24,mastersingh24,mastersingh24,19/Jan/17 7:09 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Feb/17 9:51 PM,,,v1.0.0,,fabric-orderer,,,,0,,,,,,,,,This is the initial integration to simply use the common GRPC server in place of the existing one if the orderer.  The goal is a simple replacement and all existing tests should still pass,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxilr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"19/Jan/17 9:37 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/4557/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support chaincode registration over TLS,FAB-1757,14186,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,kenzhang,kenzhang,19/Jan/17 11:23 PM,12/Jul/19 8:44 PM,28/Oct/23 2:58 AM,12/Jul/19 8:44 PM,,,,,fabric-peer,,,,0,,,,,,,,,"I am getting the following errors registering chaincode after enable TLS

`2017/01/19 00:34:40 transport: http2Client.notifyError got notified that the client transport was broken write tcp 172.17.0.1:45933->172.17.0.6:7051: write: connection reset by peer.
Error starting Simple chaincode: Error chatting with leader at address=172.17.0.6:7051:  rpc error: code = 13 desc = transport: write tcp 172.17.0.1:45933->172.17.0.6:7051: write: connection reset by peer`

Based on [~muralisr] we are need to package the certs during the registration, which was done in the 0.6 SDK",,kenzhang,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxim7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,kenzhang,mastersingh24,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 5:26 PM;muralisr;[~kenzhang] this should now work. Can you close after checking please ?;;;","12/Jul/19 8:44 PM;mastersingh24;this works;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB tests fail when running all ledgers tests at once,FAB-1758,14187,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,20/Jan/17 12:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 12:17 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"When running tests that include a single couchdb package, all tests pass:

/fabric/core/ledger/kvledger/txmgmt/statedb$ go test ./... -cover
?   	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb	[no test files]
?   	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/commontests	[no test files]
ok  	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb	2.830s	coverage: 77.9% of statements
ok  	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/stateleveldb	0.078s	coverage: 82.5% of statements


When running tests for multiple packages that hit couchdb, the same tests fails:

/fabric/core/ledger/kvledger$ go test ./... -cover

2017/01/19 15:21:23 Couch DB error  status code=412  error={""error"":""file_exists"",""reason"":""The database could not be created, the file already exists.""}

FAIL	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb	1.115s

Full log attached.

The tests fail in different places each time they are executed - must be a timing issue.  Perhaps there is a problem using the same chainid/database name and cleanup across tests?  Do the tests run in parallel?",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/17 1:59 AM;denyeart;test_failure.log;https://jira.hyperledger.org/secure/attachment/10399/test_failure.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7r3:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"20/Jan/17 1:49 PM;denyeart;Found the problem - 
When various packages that utilize CouchDB were tested all together, we received intermittent test failures due to collisions in test environment, since go test will test different packages in parallel.  Fixed by scoping each test package to different CouchDB databases (chains).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doc couchDB in v1,FAB-1759,14188,14132,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,luomin,joshhus,joshhus,20/Jan/17 1:12 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Sep/17 9:18 PM,,,,,fabric-docs,,,,0,Documentation,,,,,,,,"Add doc for v1 Hyperledger Fabric:
Including but not limited to: 
What is couchDB / why needed (block queries).
Is it required / optional but good / pluggable / modular. 
Doc why couchDB is secure in v1. (It's ""locked down"" on each peer. Explain what ""locked down"" means in this context.)
etc.

(Note: All versions of Hyperledger Fabric doc (/fabric/docs files) are built continually, in Read The Docs format, at: http://hyperledger-fabric.readthedocs.io/en/latest/) ",,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,Security issue,,,,,,,,,,,,,,,,,,,,,FAB-1703,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzximf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,joshhus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate configtx.Manager into peer,FAB-1760,14189,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 2:01 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,01/Feb/17 4:28 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The peer currently uses the dangerous and deprecated method of manually inspecting configuration blocks for configuration.  This has a multitude of security and correctness problems, but also produces a lot of redundant and unnecessary code.  The peer should be converted to utilize the existing configtx.Manager code which does proper configuration transaction validation and provides a simple interface for users of that configuration.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzximn:",,,,Unset,,,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flag use of the config block as deprecated,FAB-1761,14190,14189,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,,jyellick,jyellick,20/Jan/17 2:01 AM,12/Jul/19 8:42 PM,28/Oct/23 2:58 AM,12/Jul/19 8:42 PM,,,,,fabric-peer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzximv:",,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add leveldb history database to store index of historical key updates,FAB-1762,14191,13911,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,20/Jan/17 5:02 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Jan/17 5:00 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"[FAB-1762] Refactor couchdb history db to leveldb.

- Utilize leveldb for history of keys instead of couchdb

- Single leveldb database serves all chains to optimize
  footprint (same structure as leveldb block index database
  and leveldb state database)

- Block commit writes a history key for each key/value
  that is updated in a tran, in the form:
   ns~key~blocknum~trannum

- History database is an index for history of key writes
  over time.  The key values are not included to reduce
  size of database.

- GetHistoryForKey() finds all records starting with ~ns~key
  and returns the transactions that updated the key.

- Subsequent changeset will lookup and return the txid
  and historic value from the block storage.  Client can 
  then GetTransactionById to see the historic transactions.

- Since history db size is much reduced, it is now enabled
  by default in core.yaml.

- Upon crash recovery, ledger initialization will ensure
  that both state db and history db in sync with block storage

Reused existing test logic, therefore the changeset
is relatively large to ensure tests still pass.

",,denyeart,inatatsu,sachikoy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxin3:",,,,,,Sprint 10 - Ledger,Sprint 11 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,,,,,,,,,,,denyeart,inatatsu,sachikoy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer end-to-end tests fail on CouchDB due to chainid **TEST_CHAINID**,FAB-1763,14192,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,20/Jan/17 5:44 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,20/Jan/17 8:36 PM,,,,,fabric-ledger,,,,0,,,,,,,,,"create default chain [**TEST_CHAINID**] failed with Couch DB Error: Name: '**test_chainid**'. Only lowercase characters (a-z), digits (0-9), and any of the characters _, $, (, ), +, -, and / are allowed. Must begin with a letter.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1764,FABN-239,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxai7:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Database creation fails on CouchDB if chainid does not meet Couch DB database naming conventions,FAB-1764,14193,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,denyeart,denyeart,20/Jan/17 6:03 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/Feb/17 8:09 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"Chainid becomes database name in CouchDB.

CouchDB naming conventions:

Only lowercase characters (a-z), digits (0-9), and any of the characters _, $, (, ), +, -, and / are allowed. Must begin with a letter.

Therefore, we either need to adopt these same restrictions for chainid naming, or have a deterministic mapping of chainid to a valid (and unique) CouchDB database name.

The chainid also becomes a directory on the peer file system for the block storage ledger.  Therefore the character '/' must also be avoided.

See TODO in statecouchdb.go.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1763,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx67b:",,,,,,Sprint 10 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer crash on empty chain creators and new chain proposal,FAB-1765,14194,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 6:12 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,,,,,0,,,,,,,,,"When the orderer is initialized with an empty slice for ChainCreationPolicyNames, no chain is initialized as the system chain.  This does not cause a panic, and leads to a nil pointer dereference when a new chain proposal tries to reference the system chain.

This is a byproduct of the fact that empty slices marshal to nil under protobuf, so the sharedconfig code was setting the ChainCreationPolicyNames to nil rather than an empty slice.  The system chain was detected by looking for a non-nil ChainCreationPolicyNames.

Resulting trace looked like:

{code}
2017-01-19 19:16:38.594 UTC [ordererledger/ramledger] appendBlock -> DEBU 001 Sending signal that block 18446744073709551615 has a successor
2017-01-19 19:16:38.594 UTC [ordererledger/ramledger] Iterator -> DEBU 002 Attempting to return block 0
2017-01-19 19:16:38.594 UTC [ordererledger/ramledger] Iterator -> DEBU 003 Attempting to return block 0
2017-01-19 19:16:38.594 UTC [common/configtx] beginHandlers -> DEBU 004 Beginning new configuration for chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.594 UTC [common/policies] GetPolicy -> DEBU 005 Returning dummy reject all policy because NewConfigurationItemPolicy could not be found
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 006 Proposed configuration item of type Policy and key %!t(string=chainCreatePolicy1) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 007 Proposing configuration item of type Policy for key chainCreatePolicy1 on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.594 UTC [common/policies] ProposeConfig -> DEBU 008 Proposed new policy chainCreatePolicy1
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 009 Proposed configuration item of type Orderer and key %!t(string=ChainCreators) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 00a Proposing configuration item of type Orderer for key ChainCreators on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 00b Proposed configuration item of type MSP and key %!t(string=peerOrg0) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 00c Proposing configuration item of type MSP for key peerOrg0 on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 00d Proposed configuration item of type MSP and key %!t(string=peerOrg1) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 00e Proposing configuration item of type MSP for key peerOrg1 on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 00f Proposed configuration item of type MSP and key %!t(string=peerOrg2) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.594 UTC [common/configtx] processConfig -> DEBU 010 Proposing configuration item of type MSP for key peerOrg2 on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 011 Proposed configuration item of type Orderer and key %!t(string=BatchSize) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 012 Proposing configuration item of type Orderer for key BatchSize on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 013 Proposed configuration item of type Orderer and key %!t(string=ConsensusType) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 014 Proposing configuration item of type Orderer for key ConsensusType on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 015 Proposed configuration item of type Policy and key %!t(string=AcceptAllPolicy) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 016 Proposing configuration item of type Policy for key AcceptAllPolicy on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/policies] ProposeConfig -> DEBU 017 Proposed new policy AcceptAllPolicy
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 018 Proposed configuration item of type Orderer and key %!t(string=IngressPolicy) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 019 Proposing configuration item of type Orderer for key IngressPolicy on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 01a Proposed configuration item of type Orderer and key %!t(string=EgressPolicy) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 01b Proposing configuration item of type Orderer for key EgressPolicy on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 01c Proposed configuration item of type Policy and key %!t(string=DefaultModificationPolicy) on chain cb749a08de7b11e6bec308002790a540 has been modified
2017-01-19 19:16:38.595 UTC [common/configtx] processConfig -> DEBU 01d Proposing configuration item of type Policy for key DefaultModificationPolicy on chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [common/policies] ProposeConfig -> DEBU 01e Proposed new policy DefaultModificationPolicy
2017-01-19 19:16:38.595 UTC [common/configtx] commitHandlers -> DEBU 01f Committing configuration for chain cb749a08de7b11e6bec308002790a540
2017-01-19 19:16:38.595 UTC [orderer/common/sharedconfig] CommitConfig -> DEBU 020 Adopting new orderer shared config: &{consensusType:solo batchSize:0xc420212810 batchTimeout:0 chainCreationPolicies:[] kafkaBrokers:[] ingressPolicyNames:[] egressPolicyNames:[]}
2017-01-19 19:16:38.595 UTC [orderer/multichain] NewManagerImpl -> DEBU 021 Starting chain: 6362373439613038646537623131653662656333303830303237393061353430
2017-01-19 19:16:38.595 UTC [orderer/main] NewServer -> INFO 022 Starting orderer
2017-01-19 19:16:38.596 UTC [orderer/main] main -> INFO 023 Beginning to serve requests
2017-01-19 19:16:41.271 UTC [orderer/main] Broadcast -> DEBU 024 Starting new Broadcast handler
2017-01-19 19:16:41.272 UTC [orderer/common/broadcast] Handle -> DEBU 025 Proposing new chain
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x5415b8]
goroutine 23 [running]:
panic(0x9a1360, 0xc42000c050)
        /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/orderer/multichain.(*systemChain).authorize(0x0, 0xc420236280, 0x654)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/systemchain.go:175 +0x1c8
github.com/hyperledger/fabric/orderer/multichain.(*systemChain).authorizeAndInspect(0x0, 0xc42020ee70, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/systemchain.go:239 +0x2a9
github.com/hyperledger/fabric/orderer/multichain.(*systemChain).proposeChain(0x0, 0xc42020ee70, 0x5)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/systemchain.go:108 +0x4d
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).ProposeChain(0xc4201e79e0, 0xc42020ee70, 0xc420213a10)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:152 +0x39
main.(*broadcastSupport).ProposeChain(0xc420213690, 0xc42020ee70, 0x13)
        <autogenerated>:1 +0x53
github.com/hyperledger/fabric/orderer/common/broadcast.(*handlerImpl).Handle(0xc4202136a0, 0xefc0c0, 0xc420213930, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/broadcast/broadcast.go:95 +0x1d8
main.(*server).Broadcast(0xc4201f1e80, 0xefc0c0, 0xc420213930, 0xc42001d4a8, 0xc42001d4d0)
        /opt/gopath/src/github.com/hyperledger/fabric/orderer/server.go:61 +0x8b
github.com/hyperledger/fabric/protos/orderer._AtomicBroadcast_Broadcast_Handler(0x9a4560, 0xc4201f1e80, 0xefaa40, 0xc420217d80, 0xc42020ee40, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/orderer/ab.pb.go:525 +0xbb
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processStreamingRPC(0xc4201be360, 0xefb940, 0xc420234000, 0xc4201de960, 0xc42020e9c0, 0xee5400, 0xc42020ee10, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:657 +0x6f3
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc4201be360, 0xefb940, 0xc420234000, 0xc4201de960, 0xc42020ee10)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:741 +0xc33
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc4202137b0, 0xc4201be360, 0xefb940, 0xc420234000, 0xc4201de960)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:402 +0xab
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:403 +0xa3
{code}",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxinb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
send_transaction_proposal,FAB-1766,14195,14052,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,latitiah,latitiah,20/Jan/17 6:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Feb/17 6:24 PM,,,v1.0.0,,fabric-sdk-py,,,,0,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxinj:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create_transaction_proposal,FAB-1767,14196,14052,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,latitiah,latitiah,20/Jan/17 6:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Feb/17 11:45 AM,,,v1.0.0,,fabric-sdk-py,,,,0,,,,,,,,,Implement the transaction proposal creation method.,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxinr:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create_transaction,FAB-1768,14197,14052,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,lafenicecc,latitiah,latitiah,20/Jan/17 6:28 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Apr/17 12:27 PM,,,v1.0.0,,fabric-sdk-py,,,,0,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxinz:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
send_transaction,FAB-1769,14198,14052,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,latitiah,latitiah,20/Jan/17 6:28 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Apr/17 12:02 PM,,,v1.0.0,,fabric-sdk-py,,,,0,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxio7:",,,,,,Sprint 4,,,,,,,,,,,,,,,,,,,,,,,,,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add chain config mock structures,FAB-1771,14200,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 6:41 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxion:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix lint issues in protos/utils,FAB-1772,14201,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,kchristidis,kchristidis,kchristidis,20/Jan/17 7:23 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,21/Jan/17 4:48 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxiov:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/17 12:12 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4617/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add metadata field for orderer-related information,FAB-1773,14202,14124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,20/Jan/17 8:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Jan/17 4:48 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The changeset corresponding to this subtask should:

# Introduce a metadata field for the use described in [FAB-1695]
# Size and populate the `Metadata` field of a newly-constructed block appropriately.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxip3:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/17 12:32 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4619/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use metadata field for orderer-related information,FAB-1774,14203,14124,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,20/Jan/17 8:30 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,24/Jan/17 12:17 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"A consensus implementation may need to read the ledger and extract metadata from it during operation (most likely when booting up).

As an example, the Kafka-based orderer, reads the offset of the last envelope it placed into a block *and* wrote to the local ledger, and uses that offset to resume consumption of chain's partition.

This changeset should follow up on the work of FAB-1773.

It should modify:

1. The common components `Consenter` interface so that the newly-introduced metadata field is passed on to the consensus implementations via the `HandleChain` method.
2. The `WriteBlock` method of the `ConsenterSupport` interface so that this metadata can be persisted to blocks.

This is a precursor to FAB-1623, which will add restart support to the Kafka-based orderer.",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxipb:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/17 12:32 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4621/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Store most recent created block in mock consenter support structure,FAB-1775,14204,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,20/Jan/17 1:04 PM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,24/Jan/17 12:17 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Store the results of the most recent `CreateNextBlock()` and `WriteBlock()` calls in the mock `ConsenterSupport` structure so as to make these values easier to retrieve (and some tests easier to write).

",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxipj:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/17 12:32 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4623/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move policy manager creation to common components,FAB-1776,14205,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 1:35 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The policy manager is currently only initialized within the orderer, but this is a common function and needs to be moved into the common components.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxipr:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor orderer multichain package to prep for chainconfig,FAB-1777,14206,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 1:55 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,The orderer multichain package has become a little unwieldy as more and more configuration based handlers have been added to it.  This changeset consolidates these many parameters into embedded structures to alleviate this problem in preparation for adding the chain config handler.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxipz:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add chain config to common configtx.Manager,FAB-1778,14207,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 2:06 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiq7:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete Me Please,FAB-1779,14208,13741,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,20/Jan/17 3:43 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 12:07 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiqf:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup kafka docker image build,FAB-1780,14209,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,20/Jan/17 11:31 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,21/Jan/17 10:53 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,Make the kafka image we build conform to the 'standards' used in fabric for other images.,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxiqn:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix failing test in multichain package,FAB-1781,14210,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,21/Jan/17 12:05 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Jan/17 2:50 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"Changesets [1] and [2] got merged and as a result a test in the `multichain` package fails.

[1] https://gerrit.hyperledger.org/r/3867
[2] https://gerrit.hyperledger.org/r/4581",,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiqv:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"21/Jan/17 12:11 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4615/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A new model for deployment,FAB-1783,14212,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,muralisr,muralisr,21/Jan/17 2:40 AM,04/Jun/19 8:21 AM,28/Oct/23 2:58 AM,04/Jun/19 8:21 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"h3. Introduction
The current deployment model has the following properties with regards to chaincode code (as opposed to chaincode data)
* the code is deployed on a per-channel basis
* the code is stored on the ledger for the channel

There are a few issues with the model
# the deploy transaction is large and has performance issues
# a chaincode redeployed on different channels results in different instances of the container which could put a strain on infrastructure when this duplication becomes prevalent
# by virtue of the code being on the ledger, all peers in the chain have access to the chaincode. There is no mechanism to run a chaincode on a subset of peers - for example, only on those that are endorsers of this chaincode.

While (3) may sound like a good idea, in most cases it does not make sense (in a ""Car"" blockchain a Registration-Chaincode may belong to both DMV and Insurance but not to Dealership, while a CarAsset-Chaincode may run on all peers).

This proposal is to change the deploy semantics to _install_ on a peer instead of on a channel but at the same time _invoke_ the chaincode in the context of a channel (akin to program code being allocated once in memory once but data section for many processes that are launched for that program).

This will result in greater flexibility
* given a channel a chaincode can be deployed to a subset of the peers on the channel
* reduce load on the infrastructure to run multiple instances of the chaincode for different channels
* reduce communication overhead due to large chaincode binaries 

The only downside is we will lose the ability to do ""one-shot"" deployment of a chaincode onto all the peers in the channel. Given other benefits (and hopefully not being a common scenario) this is likely not a big detraction.

While this is a change to the ""deploy"" model, it has implications for upgrade as well.  Rest of the proposal deals with the details of deploy and upgrade.

h3. User level changes to deploy
* a new ""install"" command which installs the chaincode on the peer (basically puts the packaged chaincode on the file system)  and not on the channel
** {{peer chaincode install -n <chaincode id> -v <version> -p <path to chaincode>}}
* an new instantiate command to associate the chaincode with a channel
** {{peer chaincode instantiate -C <channel id> -n <chaincode id> -v <version> -p <path to chaincode> -c <init args>}}

+High level implementation and design details to deploy+
* chaincode code is not stored on the chain ledger but on the peer (say on the filesystem)
* The instantiate command will also update the LCCC for that chain. The command will also run the ""Init""
  function of the chaincode on a given chain. 
* The LCCC entry for the chaincode on a channel will contain the hash of the chaincode in addition
  to other fields such as name and location of the chaincode. This will be used to detect changes

h3. Upgrade
Notation
* channels are x, y, z
* peers are P1, P2, P3
* chaincode is mycc
* hashcode of version 1 chaincode mycc is h1-mycc

Hence, *mycc:h1-mycc/x* refers to version *h1-mycc* of chaincode *mycc* on channel *x*.

Version rule - multiple channels can run different versions of a chaincode but given a channel only one version of a chaincode can be running on it at any given time. ie,
# mycc:h1-mycc/x and mycc:h1-mycc/y - same version of a chaincode, different channels - OK
# mycc:h1-mycc/x and mycc:h2-mycc/y - 2 versions of a chaincode, different channels - OK
# mycc:h1-mycc/x and mycc:h2-mycc/x - 2 versions of a chaincode on one channel - NOT OK

Peer constraint that follows from above (as a channel encompasses many peers)
* If P1 successfully initiates upgrades to a new version on channel *x*, all other Peers have to upgrade for successful invocation of the chaincode. We will be implicitly violating 3 above.

There will be two commands related to upgrade
* {{peer chaincode install -n mycc -p <path to mycc with version hash1-mycc>}} - this will put the chaincode on the peer's filesystem. 
** this command will fail if that version exists on the filesystem
** note that this command does not involve ledger or channel in any manner
* {{peer chaincode upgrade -C x -n mycc -p <path to mycc with version hashn-mycc> -c <init args>}}  - this will upgrade the channel
** this command will fail if that chaincode does not exist on the filesystem
** this command will fail if the chaincode has not been instantiated on the channel
** this command will fail if the running version matches the upgrading version for the channel
** on successful commit this will update LCCC for the channel to *mycc:hashn-mycc*


{code:java}
Note on the effect of upgrade on inflight transactions

The scenario - many proposals are happening on the chaincode on channel x at the time of upgrade of a chaincode. Some of them end up as transactions before the block on which upgrade turns up, others after and a few on the same block.

For consistency and determinism, enforcing the following rules will be sufficient 
    - invokes will be stamped not only with chainID but also version. This will thus be part of the MVCC rw-set
    - at commit time, all transactions for the *mycc:--/x*  will be invalidated on the block on which there's an upgrade (they had to be on the previous version of the chaincode)
    - at commit time, all transactions for the *mycc:<prev hash>/x* on previous block will follow normal processing.
    - at commit time, all transactions for the *mycc:<prev hash>/x* will naturally fail MVCC validation on succeeding blocks

Note that successful commit of *mycc:hashn-mycc/x* on P1 will not bring down other *mycc:--/x* running on P1 as these may be still running on other channels. See next section on *Stop chaincode*

{code} 

h3. Stop chaincode

As noted in the previous section, chaincodes may still be running and deployed even if not in use in any channels. Rather than do GC of some sort, we will provide a {{peer chaincode stop [ --destroy ]}} command to stop the chaincode and optionally remove it from the filesystem. Symmetrical to ""deploy"" command, these do not involve channels or ledger but simply will remove them from system. A ""deploy"" will put the chaincode back on the filesystem.

h3. User Scenarios
+I want to install a chaincode to a set of peers+
This is the standard happy path for deploying chaincode. Basically log into each peer and install the chaincode

+I want to first install a chaincode to a set of peers and then instantiate the chaincode on different channels A, B and C+ (instantiation can only be done on the peers the chaincode is deployed upon)
This is the standard happy path for instantiating a chaincode on channels

+I want to install a chaincode on another Peer 2 after it has been instantiated on the channel by Peer 1+
Install is independent of the channels. The instantiation of the chaincode on a channel will have no effect on the deployment on a Peer 2. The chaincode is inaccessible on Peer2 till it has be been installed on it.

+I want to reinstantiate a chaincode on a channel (say from a different peer which instantiated the chaincode)+
This should fail as a chaincode cannot be reinstantiated on a channel (the LCCC for the channel will have
a chaincode entry)

+I want to invoke a chaincode on a channel on Peer2 when it was instantiated on the channel by Peer1+
It will fail if it was not installed on Peer2.
It will fail if the invoke causes the chaincode to be brought up but the hash does not match what's on the LCCC.

+I want to install *mycc:hash1-mycc* on P1
It will fail if  *mycc:hash1-mycc* exists on P1

+I want to upgrade to *mycc:hash2-mycc/x* via P1
This will fail if 
** chaincode mycc is not running on x
** *hash2-mycc* version of chaincode not deployed on P1
** current version same as hash2-mycc

NOTE: we will add other scenarios
",,angelo.decaro,binhn,dshuffma,elli-androulaki,fredbi,greg.haskins,jyellick,mastersingh24,mrshah-ibm,muralisr,ptippett,satheeshk,VamsiKrishnak,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1859,FAB-1920,FAB-1926,FAB-2128,FAB-2143,FAB-2177,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/17 11:49 AM;muralisr;newdeploy.pptx;https://jira.hyperledger.org/secure/attachment/10422/newdeploy.pptx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxirb:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,dshuffma,elli-androulaki,fredbi,greg.haskins,jyellick,mastersingh24,mrshah-ibm,muralisr,ptippett,satheeshk,VamsiKrishnak,vukolic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jan/17 12:27 AM;binhn;bq. an new init (instantiate ?) command to associate the chaincode with a channel

So init is really a binding transaction (involving a transaction proposal and a transaction broadcast) allowing the chaincode to run on the specified channel. The user (transactor), who issues this transaction, must be authorized by the chaincode life-cycle policy on the channel.

The SDK should provide option for the application to specify a list of channels rather than a single channel on the API, and the SDK can loop through to bind all channels to the chaincode.;;;","22/Jan/17 1:00 AM;muralisr;{quote}
So init is really a binding transaction (involving a transaction proposal and a transaction broadcast) allowing the chaincode to run on the specified channel. The user (transactor), who issues this transaction, must be authorized by the chaincode life-cycle policy on the channel.
{quote}

Yes. That together with the hashcode saved on LCCC per channel provide the means to ensure this can be done securely. 

{quote}
The SDK should provide option for the application to specify a list of channels rather than a single channel on the API, and the SDK can loop through to bind all channels to the chaincode.
{quote}

Sure, but the SDK has to send them out as separate transactions till fabric supports batch transactions. So it would just be convenient wrapper API.;;;","22/Jan/17 1:02 AM;muralisr;Also now that we have code/data separation, can we use {{instantiate}} -  as in {{peer chaincode instantiate ...}} -  instead of {{init}} ? ;;;","22/Jan/17 2:10 AM;mastersingh24;I have not decided whether or not I fully agree with this proposal (yet - and want to hear from others), but in keeping with the intent of the proposal, I'd like to suggest the following ""adjustments"".

#  If we are going to make this type of major change, then we should REALLY make the change
** no longer use the term deploy
** add an API to the peer called ""InstallChaincode""  (or something like that)
#  Add function ""Initialize"" to LCCC
** takes ""name,hash"" as parameters (I assume you invoke LCCC in the context of a channel/chain)
** not sure if you had this in the cases above, but we would need to handle the case where ""Initialize"" was run on a channel (so there's a tx in the ledger) but the chaincode had not been installed on the peer.  Assuming the chaincode was installed after the fact, I guess similar to the current logic if the peer receives an endorsement proposal for a chaincode, it simply checks LCCC and starts it up;;;","22/Jan/17 2:29 AM;muralisr;[~mastersingh24]

# Install CC vs deploy - hits the intent spot IMO ! Get's my vote.
# About LCCC changes 
* Probably we have to do something like that to LCCC.
* I think that case of being on the channel but not installed on the peer ... I think that's covered by {{It will fail if it was not deployed on Peer2.}} under Scenario {{I want to invoke a chaincode on a channel on Peer2 when it was instantiated on the channel by Peer1}}.

I'm sure there are other scenarios and will add more.

;;;","23/Jan/17 6:01 PM;elli-androulaki;Hi, 

Some more questions & details from my side. So the flow (as far as i understood it) is the one below (?). 

1) Command ""installChaincode"" that runs on the peer has the form of an LCCC deploy proposal? The LCCC would be executed on the proposal's input, i.e., authorization of the proposal's creator against the LCCC chaincode creation policy is checked there. The creator would need to ""wait"" till it collects ""responses"" from all the endorsers/peers it asked to install the chaincode from. At installation time, and if confidentiality of the source code is important, then *a secret key should be passed to LCCC* at proposal time, such that the ""evidence of the source code"" ( code_evidence = HASH (source_code, secret_key)) reveals nothing on the source code content.

2) After collecting responses from ""InstallChaincode"" commands an LCCC ""deploy announcement"" is submitted to the chain in the form of transaction. This would contain simulation results of LCCC execution that include (among others) the ""code_evidence"", the name of the new chaincode, and the endorsement/validation policy for this freshly implemented chaincode. There it could be that VSCC policy is provided as input the peers who have successfully installed this  chaincode. The transaction could contain endorsement responses, on the LCCC deploy announcement /proposal, or solely the creator's signature on the new chaincode's creation simulation results. 

3) Orderers receive this transaction and order it.

4) Committing peers who receive this transaction, check that the signature on the transaction comes from a creator that is authorized to create chaincodes or not. If so and the LCCC simulation results pass, then the peers would accept the changes instructed by this transaction. However, they have **no means to check if the chaincode has already been installed** by the peers included in the policy. But one could argue that this falls under the chaincode creator's responsibility.

Now, regarding the naming of the chaincode, we need to keep in mind / discuss whether the following attack is relevant:
 - admins a and b are authorized to create chaincodes.
 - admin a wants to include in the blockchain a chaincode CCa
 - admin b wants to prevent CCa from being included in the blockchain for a couple of blocks
Admin b can do the following: 
 - admin b can guess the name of CCa before it appears in the chain, or waits till tx announcing creation of CCa goes through gossip
 - admin b uses the name of CCa in a transaction claiming to announce a fake - unexisting chaincode CC'b and manages to have this transaction to appear first in the ordering of chaincode
 - CCa is annonced but the installation is sort of abandoned, cause CCb' has taken the CCa's name. 

Also, regarding the peers who have installed a chaincode, what happens if the application wants to install the chaincode to another peer? Wouldn't this mean that the VSCC should be updated? How would the peer update the state associated to that chaincode? Would it need to retrieve it from the ledger step-by-step?
;;;","23/Jan/17 7:30 PM;elli-androulaki;Another comment, is that this mechanism (sort of a chaincode deduplication mechanism :)) could be used to compromise (to a some extend) the confidentiality of a chaincode, that say exists in only one chain and whose name has been guessed. This would make the whole identity of a chaincode confidential. 

This could be implicitly addressed through the control that peers/org administrators of which peer should join which channel. That is, if three peers A, B, and C have the chaincode with ""chaincode_evidence"" CE installed, these peers should be joining any other channel this chaincode appears in. 

However there still is an issue: Say peers A, and B have joined a channel where a peer D is also a participant of. Say A, B, C, belong to Org1, and D belongs to a different organization, Org2. Now Org2 has guessed the identifier CE, and wants to have the same chaincode accessible to the chain where A, C, D share such that it is able to query its logic. Org2 admin has chaincode deploy permissions so LCCC will not object and the peers of Org1 will automatically *by receiving the init* consider this chaincode for the channel that Org1, and Org2 share. Nevertheless, Org2 does not know the content of the chaincode. 

This one could be overcome by enforcing that there is an ACL of who can ""announce"" each already installed chaincode to a chain... 

Also we may want to think more on how a chaincode name's uniqueness among all chains is enforced ... ;;;","24/Jan/17 3:28 AM;binhn;[~ellaki] Regarding chaincode names collision, I think that is unavoidable as we require uniqueness, so if admin A from orgA named his chaincode orgA.chaincodeA, and somehow that collided with adminB's (from orgB) chaincode also named orgA.chaincodeA, then I would think the solution would be easy. After all, they are on a permissioned network.

Chaincode names and variable keys are not really private to only endorsers, but everyone on the channel must know through the transactions on those chaincodes. What private to the endorsers are the chaincodes themselves since they are not kept on the ledger.

We said that ACL is based on org cacerts, so if D has access then anyone from D's org2 has access. Now being able to initialize a chaincode on a channel also under the control of the endorsement policy, which would specify only admin of Org1, so org2 would not be able to init the chaincode on other channels.
;;;","24/Jan/17 6:15 AM;elli-androulaki;Hi, 

After request from Murali, I list below security threats (and countermeasures) that are relevant for the old and new model of deployment, and the ones that are relevant to the new install/initialize model:

Both models: 
*(Un-)authorized chaincode deployment (in old model) or authorization (in new model).* This proper policy configuration to LCCC of chains to restrict deployment (in old model) or initialization (in the new model) of chaincodes to properly authorized clients. Upgrade is to be restricted in a similar fashion to only these entities.

New model:

1. *Naming of a chaincode be unique per blockchain network installation.* In the old model one needed to guarantee a chain-wide unique name per chaincode that was rather straight-forward.

2. *(Un-)authorized initialization of a specific chaincode to a chain*. This aims to account for the case where an authorized chaincode deployer does not have access to a chaincode nor its installation, but (knowing that its likely to be deployed in other chains) it attempts to initialize it in the current chain, to obtain information on its (otherwise confidential) logic.A solution here could be that the chaincode installation is followed by an access policy definition that is hashed with the source code into the chaincode identifier. This identifier is submitted at the chaincode initialization phase (in combination to item 3). In addition, endorsement form all peers listed in the initialized chaincode's endorsement policy should be acquired for initialization. A deeper analysis of what is needed here needs to be done.

3. *Availability of the chaincode.* Here a chaincode may be initialized in a chain without the peers listed in the endorsement policy having installed it. A solution here would be that at initialization phase, requiring endorsements from *all* peers who are listed in the endorsement policy. All these peers would need to process initialization proposals during which they would run the invoker's identity and signature against the chaincode policy provided during installation (see item 2). If the latter policy rejects, endorsement is not provided. 
;;;","24/Jan/17 7:30 AM;elli-androulaki;[~binhn] So for the naming, I see; you are saying we can have namespaces that would avoid collisions. Agreed. But then some naming policy enforcement should take place at LCCC (initialization) phase. 

Now for incorporating policies into the chaincode, I think it would solve the problem if *one of the two* would be in place:
 - at instantiation endorsement time, endorsements from all endorsers in the intended endorsement policy are collected
 - chaincode policy evaluation is part of the LCCC_VSCC that would need to check first if the creator of the instantiation transaction also had the right to instantiate that specific chaincode.


 
;;;","24/Jan/17 9:28 PM;angelo.decaro;[~muralisr], [~binhn], may you clarify what is stored on the channel ledger after an instantiate, upgrade and stop? If I got it correctly, there will be a transaction (if the relative proposal gets endorsed) that leaves a trace that can be used later on if someone needs to replay the history, right?

It is clear to me that the install does not leave any trace in any ledger.;;;","24/Jan/17 9:44 PM;angelo.decaro;I would like to add the following consideration. In the endorsement process of an instantiate proposal, having a cryptographic proof from the peer that it knows the code for which the instantiate has been requested would solve multiple issues. Such a solution would add some inefficiency to the endorsement process anyway. I will not go into the details here, I wanted just to leave a trace about this approach. ;;;","24/Jan/17 11:55 PM;vukolic;Hi all,

I think this proposal mixes two things:
1) the first is the replacement of chaincode with a pointer to the chaincode (a hash) - with the goal of speeding up the process of deploying the chaincode, and to simplify the chaincode mgmt in general. The price for this is the non-atomicity in chaincode binding to the channel (instantiation) and the obtaining (installation?) of the chaincode. Let's say this is a reasonable tradeoff to make, and I support the idea. What is perhaps missing is fabric support for (authorized) peers to get that chaincode from somewhere in an automated way (instead of waiting for admin to come and put it on a local FS). To this end endorsement policy pertaining to chaincode binding (instantiation) may be of some help, as well as the endorsement of the instantiate transaction.  TL;DR - I support this part of the proposal

2) using the same pointers to the chaincode for CONFIDENTIALITY WITHIN A SINGLE CHANNEL. This one needs to be done very properly and requires solutions that we in general postponed to after v1 and that brings up concerns that Elli is writing about. In this sense, unless we do properly full-fledged fabric-level support for confidentiality on a single channel - I discourage any partial solutions such as this one.

So my suggestion is to split this JIRA issue into two, as discussed above, putting higher priority on the first part of it and the lower priority to the second part. The second part would need to be done in the context of the more general treatment of confidentiality on a single channel. 
;;;","25/Jan/17 4:15 AM;muralisr;[~marko.vukolic] The proposal's intent was just (1) in your comment. On re-reading most of the Description is about the mechanics of  that. There is no direct reference to confidentiality on a channel though I can see how having chaincode binary outside of channels could influence confidentiality considerations.

Basically, how do you suggest we _split_ the proposal into 2 ? Most of the material seems to be about (1).;;;","25/Jan/17 4:45 AM;vukolic;[~muralisr] I may be reading too much into

"" There are a few issues with the [current] ]model
# by virtue of the code being on the ledger, all peers in the chain have access to the chaincode. There is no mechanism to selectively disable chaincode on certain peers in the channel""

I was under impression that dissalowing ""access"" to chaincode goes towards confidentiality. If it does not, and is merely about - not running chaicode on certain peers as they are never endorsers of this chaincode - then fine. 
;;;","25/Jan/17 4:54 AM;muralisr;[~marko.vukolic] I see. I can see how it is open to that interpretation.

_not running chaicode on certain peers as they are never endorsers of this chaincode_ ... that does add clarity and that was the intent (I think... now I'm beginning to wonder if this unconsciously opens way for the stronger interpretation). Let me rewrite that part (thanks!).;;;","08/Feb/17 1:09 AM;jyellick;Posted my vote of approval to the associate CR, but I think this solves some problems from an orderer perspective, in particular, having to deal with messages that are many orderers of magnitude different in size (a few hundred KB for a normal Tx, and up to a few hundred MB for a deploy TX) has caused problems in v0.6, so removing the chaincode distribution through the ordering service would be a welcome change.;;;","09/Feb/17 3:51 AM;dshuffma;I question the usefulness of yet another isolation level. If someone is concerned with running other member's chaincode, why are they on the same channel? Can't our answer to ""I don't want to run/hold irrelevant chaincode"" be to make your own channel?

This change would _slightly_ complicated the following scenario too:

Policy says I need 50+% endorsements for tx be accepted.I have a network with 6 orgs (each 1 peer), 3 of them have my chaincode. Everything is fine since I can get 3/6 endorsements on invokes. We invited 1 more org. Without intervention my application is getting only 3/7 endorsements. It will fail.  To fix it I need to: 1) learn about other peers, 2) get an enroll ID and then create a valid enrollment on one of theses other peers. and *3)* deploy the exact same chaincode (this sounds error prone since its left to the masses). Granted this scenario is similar to how things will work already, but the difference is *I* have to deploy the *same* chaincode. exact same. if the application developer accidentally modified the chaincode in the last year, but forgot about it... does it error? what if he completely loses the source due to catastrophe (I know its a bit hyperbolic, but... still).  

tldr: this proposal adds a pain point of using the network that didn't exist prior to this proposal.;;;","09/Feb/17 6:36 AM;binhn;[~dshuffma] The endorsement policy is expressed in terms of endorser's orgs of a chaincode, so adding another peer doesn't change this equation. Adding another org would, but that would force the configuration change, and possibly re-instantiation of the chaincode with a new endorsement policy.  So it doesn't add any more work to the app than the current model.

The key goal is to take the chaincode code out of the channel (ledger).;;;","09/Feb/17 7:36 AM;dshuffma;I don't feel you read my post accurately.  I used the terms deliberately.  In the scenario above we added *1 org*. This kicked off the issue and to fix it we need another endorsement which comes from one of the other 4 org's *peers*.

but this is all besides the point! the real point of my post was talking about how it is problematic to assume the user will be always be able to find the chaincode to _install_ it again. we are relying on the most unreliable part of this entire thing, the end user.... this is introducing another failure point that did not exist before.

and again, what are we accomplishing here that we cannot already do by leverage channels. why is ""taking the chaincode out of the channel"" the priority? the proposal above points to performance issues and size....but can't we already do that with channels?? (meaning if you don't want to run someone's chaincode, don't join their channel);;;","09/Feb/17 10:46 AM;muralisr;[~dshuffma] There will be channels where only certain peers would need the chaincode (say endorsers for the proposals pertaining to those chaincodes) and other peers don't need the chaincode. Also we don't want invokes to be done on those peers that shouldn't be allowed to (and don't care anyway).  We do want all the peers to have the TXs on them, so they do need to be on the channel.  While {{Can't our answer to ""I don't want to run/hold irrelevant chaincode"" be to make your own channel?}} could be the answer to some of those scenarios, we don't want to box ourselves into a corner where that's the only option. 

I won't dwell on reuse over multiple channels and at how at some point pushing bytes around would become a real issue (as [~jyellick] points out).

Basically, to be able to say ""in a channel only a subset of the peers may have the chaincode"" is a powerful generalization that would server as a good building block for many scenarios. And the new ""install"" command is the simple way (and something orgs are typically used to) to accomplish this.

Now you do make a good point about managing the chaincodes. The current model just has the chaincode on the ledger and the managemnte is  simplified. In the new model the org does have to manage. However, I claim this is no different from managing software installs organizations routinely do.

It is true we are introducing a change and we have to strive to not make this harder for the end user. One thing we were thinking was to use the same ""proposal"" path for installing chaincode on a peer. This would allow the same path (say using SDK) to install chaincode as opposed to having to do it directly on the peer.

(BTW, as an aside, I think the example scenario as stated is misleading... there is at least one more issue with beyond what [~binhn] stated.
If only 3 endorser have the chaincode and you are going to send TXs only to them, you won't say ""50% endorsement is needed"". You'd say 3 endorsements are needed.  And when a new peer is added if you are still sending TXs to only the 3, it'll still work. However if you want to send to the other one too then, yes, you have to install the chaincode on the new peer and change the policy to 4.
The ""50% endorsement is needed"" would be used when an arbitrary have the chaincode and you will target an arbitrary number of peers for endorsement).;;;","09/Feb/17 11:17 PM;dshuffma;[~muralisr] thanks for addressing my concern =).  I still disagree that the channel isolation method would be boxing ourselves in. Can someone describe an actual real world scenario where orgs wish to share a ledger, yet do not want to run/endorse chaincode tx for each other? Are we planning to not use channels to give us this isolation b/c we are trying to limit the number of channels?

While it _should_ be assumed an organization can manage their own software (chaincode), I hate the idea taking a step backwards from what we have. Today we can do this for the user, its a feature. We might be removing 1 truly handy feature, to make room for something that could have been accomplished alternatively.

As far as the 50% scenario I outlined, it was arbitrary and I used it to make my pain point more visible.  But this install cc pain point exist regardless of my scenario. We can expect orgs to stand up new peers in their life cycle.;;;","10/Feb/17 1:00 AM;muralisr;[~dshuffma] {{thanks for addressing my concern =)}} - Absolutely. It is possible we might have become used to the easy answer ""lets put chaincodes on the ledger on all peers"" but is that right answer ? The questions you raise really is about that I think.

In the current model when a new peer gets added it syncs up and automatically gets the code. Plus and minus with that approach. Plus - it automatically gets the code(less things to manage), minus - it automatically gets the code(everyone has the code, upgrade issues, performance/scalability etc).

 {{Can someone describe an actual real world scenario where  orgs wish to share a ledger, yet do not want to run/endorse chaincode tx for each other ?}}
In any complex channel,  different peers will be endorsers for different transactions using different chaincodes. However they are all glued together for solving one problem. 

Not sure if this too contrived (I hope it is not) but let's take for example a ""car consortium"" channel with Vehicle Registration, Dealership companies, Insurance companies etc. The common thing is the CarAsset/Owner and everyone will have a CarAssetChaincode. But there will be chaincodes (CarDealerChaincode, InsuranceChaincode etc) which will only be on relevant peers. Everyone will be aware of the TXs but only some can generate them.

{{As far as the 50% scenario I outlined, it was arbitrary and I used it to make my pain point more visible. But this install cc pain point exist regardless of my scenario. We can expect orgs to stand up new peers in their life cycle.}}
Right, I understood your main point on the scenario and the 50% was a bit besides the point (but felt that ""besides the point"" was actually pretty pertinent :-) ). 
;;;","10/Feb/17 3:22 AM;dshuffma;[~muralisr] thanks a lot for the explanation. I see the point now... SO the other org's need to *see* the transactions, so they want to be on the ledger, but they don't want chaincode interactions (endorsements/query proposals). that's the jump that was missing for me. I didn't think it was important to see tx for cc I don't have.

I'm afraid I'd still question how useful it is... you'd only be able to inspect block's payload instead of inspecting a chaincode's state.. but nonetheless I get it. who knows maybe that's more useful than I think.
;;;","10/Feb/17 3:50 AM;muralisr;[~dshuffma] thank you too for asking! To be honest  if it turns out for most scenarios it is NOT  {{important to see tx for cc I don't have chincodes for,}} then we are left with current model will suffice for most use cases.  I don't know how COMMON this would be ... I only state the generalization would allow for such scenarios. And that may be enough from a fabric PoV.

{{I'm afraid I'd still question how useful it is... you'd only be able to inspect block's payload instead of inspecting a chaincode's state.. but nonetheless I get it.}} 
One important use would be audit-ability and resultant accountability.;;;","19/Feb/17 7:09 PM;mrshah-ibm;Maybe I am too late to comment on this, here are my short comments:

Regarding [~dshuffma]'s concern, I agree that if a few parties don't want some other parties on a channel to see their chaincode, they can start their own new channel.

On the other hand regarding [~muralisr]'s concern, I can be a party on a channel where a few useless chaincodes have been deployed and I don't want to waste resources running those chaincodes.

My concern: If deployment of chaincode (or a version of chaincode) lies outside of the ledger, will it still be an audit-able transaction?

Suggestion: Can we have a whitelist (and/or blacklist) of chaincodes that can run on my peer with the current deployment model?;;;",,,,,,,,
Power builds in CI are getting stuck after executing crypto module,FAB-1784,14213,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bsmita,rameshthoomu,rameshthoomu,21/Jan/17 4:05 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,10/Apr/17 10:14 PM,,,,,fabric-build,,,,0,,,,,,,,,"Power builds in CI are getting stuck after executing crypto module. Need some investigation why build are getting stuck.. CI is forcibly aborting the build after 120 mins Instead of keep builds in stuck mode for ever.

https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-power-ppc64le/1082/console
https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-power-ppc64le/1081/console",,binhn,bsmita,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxirj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,bsmita,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/17 4:36 AM;bsmita;Hi Ramesh, Srirama narrowed down this problem is due to sbft/main stress tests added recently. The JIRA is

https://jira.hyperledger.org/browse/FAB-1688

We are waiting a fix to be dropped to that JIRA.;;;","25/Jan/17 12:22 PM;rameshthoomu;[~bsmita] [~SriramaSharma]: Still builds are failing with the same issue.. Below is the build reference https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-power-ppc64le/1241/console;;;","26/Jan/17 3:28 AM;bsmita;Talked to Gabor and this is a new test in orderer module.
I tried go test -run ""TestTen"" -v and go test -v multiple times, in some cases it passed and some cases the test failed with errors.
2017/01/25 17:40:18 transport: http2Client.notifyError got notified that the client transport was broken EOF.
2017/01/25 17:40:18 transport: http2Client.notifyError got notified that the client transport was broken EOF.
--- FAIL: TestTenReplicasBombedWithBroadcastsIfLedgersConsistent (148.06s)
       network_test.go:264: Failed to receive some messages. (Received 12)
       network_test.go:264: Failed to receive some messages. (Received 15)
FAIL
2017/01/25 17:40:18 grpc: addrConn.transportMonitor exits due to: grpc: the connection is closing
exit status 1
FAIL    github.com/hyperledger/fabric/orderer   161.786s;;;","28/Jan/17 12:33 AM;bsmita;In the most recent unit tests, I notice that sbft/main is not even a test case under orderer/sbft.
The tests are hanging after 
12:31:29 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state	20.279s	coverage: 80.7% of statements
12:31:29 unit-tests_1  | ?   	github.com/hyperledger/fabric/gossip/util	[no test files]
12:31:34 unit-tests_1  | ok  	github.com/hyperledger/fabric/msp	0.050s	coverage: 55.8% of statements
{color:red}12:31:46 unit-tests_1  | ok  	github.com/hyperledger/fabric/msp/mgmt	0.084s	coverage: 79.5% of statements{color}

The next testcase in the list is the orderer directory. 
When I checked ps -aef|grep orderer on the system, it shows bunch of /tmp/orderer processes. So checking the tests orderer sub folder.;;;","02/Feb/17 1:30 AM;bsmita;Looks like tests from sbft/main are moved to orderer/network_test.go and  orderer/sbft_test.go files. Running ""go test -v"" separately in orderer directory shows testcases passing. But ""make unit-test"" hangs at orderer. Still working with @hgabor on how we can isolate and fix the timing issue that's happening in orderer testcases.;;;","14/Feb/17 12:07 AM;bsmita;Looks like in network_test.go TestTen* tests are hanging. Single tests pass fine, any combination of 2 of these tests hang. 
I tried running make unit-test with TEST_PKGS set to orderer sub directory.

Adding Sleep call StartPeers() seems to be fixing this issue.
func StartPeers(peers []*Peer) {
        for _, p := range peers {
                 p.start()
                 time.Sleep(3 * time.Second)                                   
        }
}
;;;","10/Apr/17 5:45 AM;binhn;[~bsmita] Can we close this issue?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup kafka orderer compose environments,FAB-1785,14214,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,21/Jan/17 4:35 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Jan/17 4:38 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxirr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode calling chaincode,FAB-1788,14217,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,binhn,binhn,21/Jan/17 6:17 AM,26/Aug/19 6:01 PM,28/Oct/23 2:58 AM,26/Aug/19 6:01 PM,,,Future,,fabric-peer,,,,4,,,,,,,,,"It is desirable to have a chaincode calls other chaincodes during simulation. Other chaincodes (callees) may be in the same channel or different channels with the caller. The call may be read-only (query) or write.

This feature can be very complex, especially when involving writes, which is quite similar to multi-phase commit in relational databases. 

We will divide the work into 3 phases:
1) Read-only
2) Write on same channel
3) Write on different channels

h3. Phase 1: Read-only
A chaincode may call other chaincodes on any channels in the same transaction context, where each callee may return a [Response](https://github.com/hyperledger/fabric/blob/master/protos/peer/proposal_response.proto) object. The caller is responsible for interpreting the object in the chaincode logic, and this object is not part of the MVCC unless the caller chaincode writes it to the ledger (ie using putState). Since the call is within the same transaction context, the security check will be based on the transactor but against the callee's channel. So if the transactor doesn't have reader access to the callee's channel, the call will fail.

h3. Phase 2: Write on same channel
The callees establish their own individual rw-sets within the caller's transaction context, so committing this transaction will involve multiple chaincode's rw-sets on 1 MVCC check; that is, if exists any key-version check failure from any involved chaincodes, the whole transaction will fail. 

h3. Phase 3: Write on different channel
In this case, we can't use the same transaction context since the w-sets are on different channels (ledgers). The caller has to create sub-transactions (aka child or nested transactions) on behalf of the transactor to record the rw-sets on each associated channel. However, since there are potentially multiple sub-transactions, we need a transaction monitor to atomically coordinate the commit -- either all fail or all succeed.


",,angelo.decaro,binhn,dcrough13,elli-androulaki,fredbi,inatatsu,manojamin,matingwei,MichaelWang,mne,nemoto,satheeshk,sukrit.handa@gmail.com,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1792,FAB-2438,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxisf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,angelo.decaro,binhn,dcrough13,elli-androulaki,fredbi,inatatsu,manojamin,matingwei,MichaelWang,mne,nemoto,satheeshk,sukrit.handa@gmail.com,troyronda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 6:36 PM;elli-androulaki;Hi, a few remarks from my side.

In the case where an invoked chaincode CCa queries a chaincode CCb, read sets belonging to CCb that was read (even) need to be listed within the simulation results of the transaction of CCa. If the two belong to a different chain/channel, then this leaks some information already. That is, the following two are accessible to the participants of the chain of CCa, even if they are not all authorized to access data of the chain of CCb:
    a) the fact that a chain with a specific name existst in CCb
    b) the fact that a chaincode  with a cspecific name exists in the chain of CCb
    c) some intuition of the logic of CCb/ and the participants of the chain of CCb can be retrieved given the logic of CCa

This becomes even more intense given the naming convention described in FAB 1783, and the fact that CCb is and instance of a chaincode that is running in the chain of CCa.

Apart from confidentiality issues, however, it seems to me that one would need to have some coordination between two chains to ensure, e.g., some order within transactions that modify the state of CCb  (it its chain), and the transactions of CCa that read its state (in CCa's chain). 

Overall, IMHO chaincode-to-chaincode invocations or queries may first make sense to be addressed int he same chain. This is already complex given the deployment model described in FAB-1783, and libraries to support chaincode invocation access control and encryption that need to expand to cover such cases. 


;;;","26/Jan/17 3:27 AM;angelo.decaro;[~binhn], [~muralisr], do you have in mind a use case that might help the understanding?

Let's take the following example. CC1 queries CC2 that returns value A. Is A supposed to be included by the fabric in the RW set produced by CC1? Will the chaincode developer be in charge to do that?;;;","08/Feb/17 1:42 AM;elli-androulaki;CC2CC for v1: CC queries another CC that resides on the same peer (same application domain).
We need to expand on this [~muralisr], [~adc], [~binhn].;;;","08/Feb/17 5:01 AM;binhn;[~adc] As written in phase 1, the query value is not in the MVCC. There can be many use-cases. For example, a chaincode makes decision based on some external value that it needs at the time of execution. One might argue that the application could pass the value in as parameter input, but there are cases where the chaincode on each peer may query different things depending on environment; however, maintain consistency at the proposal response.

[~ellaki] Phase 1 and 2 only deal with local chaincodes as remote invoke is not possible without creating another transaction, which is part of phase 3. And in which case, the new transaction would carry a different transaction proposal context. But now we would run into a lot of complexity of multiphase commit.;;;","16/Nov/18 12:04 PM;manojamin;[~binhn]: Is there a plan to implement Phase 3 such that user context on PeerA, ChannelA, ChaincodeA  be able to invoke ChaincodeB on ChannelB which is also packaged and deployed on PeerA?;;;","11/Dec/18 5:04 AM;binhn;[~manojamin] Not at this point though some work such as FAB-11980 could take it a step closer.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename cop to fabric-ca in sdk-node docker-compsoe file,FAB-1789,14218,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,21/Jan/17 6:25 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,25/Jan/17 12:19 PM,,,,,,,,,0,,,,,,,,,"After merge of this patch https://jira.hyperledger.org/browse/FAB-1712 modify fabric-cop to fabric-ca in fabric-sdk-node docker-compose.yml file.
",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxisn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 12:21 PM;rameshthoomu;change has been submitted and merged https://github.com/hyperledger/fabric-sdk-node/commit/d324cb68df2cfdb411835fa6ca015c897fb2a9d8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode calling chaincode read-only,FAB-1790,14219,14217,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,binhn,binhn,binhn,21/Jan/17 6:52 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/May/17 11:51 PM,,,,,fabric-peer,,,,0,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxisv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode calling chaincode on same channel with writes,FAB-1791,14220,14217,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,binhn,binhn,binhn,21/Jan/17 6:54 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/May/17 11:51 PM,,,,,fabric-peer,,,,0,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxit3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer, I want to chaincode to chaincode invocations across channels to support writes",FAB-1792,14221,,Story,To Do,FAB,Fabric,software,denyeart,,,Medium,,,binhn,binhn,21/Jan/17 6:55 AM,26/Aug/19 6:11 PM,28/Oct/23 2:58 AM,,,,,,fabric-peer,,,,1,,,,,,,,,,,alburt,binhn,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1788,FAB-8098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,,,,,,,"1|hzxitb:",,,,No,,,,,,,,,,,,,,,4.0,Yes,,,,,,,,,,,alburt,binhn,inatatsu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-node end-to-end tests are failing consistently,FAB-1793,14222,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,21/Jan/17 6:56 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,25/Jan/17 12:19 PM,,,,,,,,,0,,,,,,,,,"Observed fabric-sdk-node end-to-end tests are failing on below commit Levels:

77cd1dc - Fabric
9c6c125  -Fabric-cop
f61aad3  - Fabric/sdk-node

Failed Build Reference: 
https://jenkins.hyperledger.org/view/FIT/job/FIT-node-x86_64/13/console
Successful Build Reference:
https://jenkins.hyperledger.org/view/FIT/job/FIT-node-x86_64/12/console",Jenkins Sandbox on X86_64,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxitj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jan/17 12:01 AM;harrisob@us.ibm.com;see https://gerrit.hyperledger.org/r/#/c/4639/
The issue is with the default chain name it has changed.;;;","25/Jan/17 12:18 PM;rameshthoomu;After merge of this patch https://gerrit.hyperledger.org/r/#/c/4639/ observed end-to-end.js tests are passing but with the recent chain code interfaces changes again these tests are not working. Closing this and tracked new bug in the below FAB
Tracked new bug here:
https://jira.hyperledger.org/browse/FAB-1835;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka option unrecognised: -Xloggc on ppc & z390x,FAB-1795,14224,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,21/Jan/17 10:55 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Jan/17 11:48 PM,,,,,fabric-orderer,,,,0,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxitz:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Linter errors need cleanup,FAB-1796,14225,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,21/Jan/17 3:24 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,24/Jan/17 12:37 AM,,,,,fabric-gossip,,,,0,,,,,,,,,"goimports needed:
gossip/service/channel.go
gossip/service/channel_test.go

other linter errors:
gossip/service/gossip_service.go",,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiu7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ability to completely replace the RootCA list,FAB-1799,14300,13589,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,mastersingh24,mastersingh24,mastersingh24,22/Jan/17 2:41 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Mar/17 11:21 PM,,,v1.0.0,v1.0.0-alpha1,fabric-orderer,fabric-peer,,,0,,,,,,,,,"The GRPCServer currently has APIs to append/remove root certs but [~jyellick] suggested that he'd like the orderer to maintain the list of CAs in its entirety and then simply be able to complete replace the list.  The peer can share this capability as well.

I'll leave the append / remove APIs as append might be useful in the case where we create / join a new channel for efficiency",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiun:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"22/Jan/17 8:54 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/4677/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer crashes reading bad config,FAB-1800,14301,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,23/Jan/17 1:40 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,13/Apr/17 5:37 PM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Attempted to boot up the peer with existing config which was no longer valid. It crashes with the following signature

{code:java}
panic(0xa9dfa0, 0xc4200100c0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/chaincode.deploySysCC(0xc42021f298, 0x3, 0xee58a0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/sysccapi.go:103 +0x8c1
github.com/hyperledger/fabric/core/chaincode.DeploySysCCs(0xc42021f298, 0x3)
	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/importsysccs.go:82 +0x8d
github.com/hyperledger/fabric/peer/node.startDeliveryService(0xc42021f298, 0x3, 0x3, 0x3)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:87 +0x4d
github.com/hyperledger/fabric/core/peer.Initialize(0xbd36a8)
	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/peer.go:100 +0x857
github.com/hyperledger/fabric/peer/node.serve(0xc4202cdb20, 0x0, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:201 +0x4b6
github.com/hyperledger/fabric/peer/node.glob..func1(0xee85e0, 0xc4202cdb20, 0x0, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:69 +0x3f
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xee85e0, 0xc4202cdaf0, 0x1, 0x1, 0xee85e0, 0xc4202cdaf0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0xee8e60, 0x12, 0xc42000e018, 0x3e)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0xee8e60, 0x3e, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x4da
{code}


Peer should not continue starting up the chain if the config is invalid. ",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7ev:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception ImportError: No module named 'cStringIO' - while running behave tests,FAB-1801,14302,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jeffgarratt,rameshthoomu,rameshthoomu,23/Jan/17 1:14 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,10/Mar/17 7:49 AM,,,,,,,,,0,,,,,,,,,"Observed below error while executing Behave tests Exception ImportError: No module named 'cStringIO'. Observed this error in Jenkins Sandbox environment.
*Jenkins Build Reference: *
https://jenkins.hyperledger.org/sandbox/job/fabric-verify-behave-x86_64/2/consoleText
*Fabric Commit:*: 627c094 
Run behave tests using below command:
make behave BEHAVE_OPTS=""-D logs=Y -o testsummary.log --junit --format=pretty""",,jeffgarratt,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiuv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jeffgarratt,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/17 7:49 AM;jeffgarratt;Resolved with most recent README.md instructions and their usage in CI.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OTE: Orderer Test Engine traffic generation and verification tool for orderer functional tests,FAB-1805,14306,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,suryalnvs,suryalnvs,24/Jan/17 12:27 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,29/Apr/17 3:28 AM,,,v1.0.0,,fabric-quality,,,,0,quality,,,,,,,,"Orderer traffic driver which acts as a manager, to drive the orderer functional tests, should launch the network with multiple configurations, start/stop the components of the network, send multiple broadcast transactions and receive deliveries, and retrieve results/counts/duration. Some tests can then be written and executed from CI.",,bmos299,ChristopherFerris,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx2zz:",,,,Unset,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,Unset,,,,,,,,,,,bmos299,ChristopherFerris,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"13/Apr/17 2:52 AM;ChristopherFerris;By the looks of things, this is done? All the related items are marked Done. [~bmos299];;;","13/Apr/17 11:52 PM;bmos299;Changes in the Ordering service have broken the OTE so before submitting the PR we want to ensure the tool sucessfully runs against master.  I created subtask 18 -  	Modify OTE to work with current Ordering API, to address the needed work. ;;;","29/Apr/17 3:28 AM;scottz;Actually, Chris is right. The newer subtask is out of scope of this 1805, and 1805 should be closed since it was completed.
I am opening another jira issue to update the tool.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Traffic Counters for various configurations of orderer services,FAB-1806,14307,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,suryalnvs,suryalnvs,24/Jan/17 12:51 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Jan/17 7:17 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"In sample_clients, there are broadcast_timestamp and deliver_stdout clients that can be modified to get counts of the transactions that are sent and received. Verify the counts from producer and at consumer side for different configurations.",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxivr:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Launch the network with docker-compose and test the functionality on the environment with go test,FAB-1807,14308,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,suryalnvs,suryalnvs,24/Jan/17 12:53 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Jan/17 7:20 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,Launch the Network from OTE by using a docker-compose for multiple configurations and run the tests with go test. ,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxivz:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ledger panic error when trying to create 3800 channels inside fabric 1.0,FAB-1808,14309,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,Nishi,Nishi,24/Jan/17 2:07 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 4:22 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"During ledger stress testing, tried to create 3800 channels ran into panic error:
where each channels holds:
type Channel struct {
	myLedger ledger.PeerLedger
	myBatchQ BatchQ
	BG       *ledgertestutil.BlockGenerator
}

When the #of channels is set to 3500 writes channels got created successfully.
2017/01/23 17:00:00 Error while creating dir [ledgersData/blocks/blocks/Default_3514/]
panic: Error: mkdir ledgersData/blocks/blocks/Default_3514: protocol error [recovered]
	panic: Error: mkdir ledgersData/blocks/blocks/Default_3514: protocol error

goroutine 6 [running]:
panic(0x8f63c0, 0xc4210caeb0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
testing.tRunner.func1(0xc42026afc0)
	/opt/go/src/testing/testing.go:579 +0x25d
panic(0x8f63c0, 0xc4210caeb0)
	/opt/go/src/runtime/panic.go:458 +0x243
github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage.newBlockfileMgr(0xc4210caca4, 0xc, 0xc4201d0080, 0xc42006a2a0, 0xc4201d1c00, 0xc4201d1c00)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage/blockfile_mgr.go:108 +0xbb9
github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage.newFsBlockStore(0xc4210caca4, 0xc, 0xc4201d0080, 0xc42006a2a0, 0xc4201d1c00, 0xc4201d1ae0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage/fs_blockstore.go:38 +0x57
github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage.(*FsBlockstoreProvider).OpenBlockStore(0xc4201d0280, 0xc4210caca4, 0xc, 0xc66b60, 0xc4201d1b80, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage/fs_blockstore_provider.go:48 +0x7f
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).Open(0xc4201afce0, 0xc4210caca4, 0xc, 0x0, 0x0, 0x0, 0xc420047c40)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:106 +0xe3
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).Create(0xc4201afce0, 0xc4210caca4, 0xc, 0xc4210cacb0, 0x1, 0x1, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:90 +0xa9
github.com/hyperledger/fabric/core/ledger/ledgermgmt.CreateLedger(0xc4210caca4, 0xc, 0x0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:73 +0x19c
github.com/hyperledger/fabric/core/ledger/perf.CreateLedger(0xed8)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:242 +0xa1
github.com/hyperledger/fabric/core/ledger/perf.TestInitParams_C(0xc42026afc0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:82 +0x64b
testing.tRunner(0xc42026afc0, 0xa13f00)
	/opt/go/src/testing/testing.go:610 +0x81
created by testing.(*T).Run
	/opt/go/src/testing/testing.go:646 +0x2ec
vagrant@hyperledger-devenv:v0.2.2-aaa998e:/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf$ ls
",,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx58n:",,,,,,Sprint 15  - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/17 3:20 AM;denyeart;[~2020Nishi] Do you think this is still an issue, or did you simply run out of space on your harddrive or something like that?;;;","08/Apr/17 4:22 AM;denyeart;We think this was an issue with the test rather than the fabric - closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable TLS connection from orderer to kafka,FAB-1809,14310,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,sanchezl,sanchezl,24/Jan/17 5:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,05/Feb/17 10:27 AM,,,,,fabric-orderer,,,,0,kafka,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1987,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx6ev:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,,,,,,,,,,,,,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pass configtx.Manager to TxValidator,FAB-1812,14313,14189,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,24/Jan/17 8:07 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-peer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiwf:",,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simplify bool expression,FAB-1816,14317,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,grapebaba,grapebaba,grapebaba,24/Jan/17 6:30 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,10/Feb/17 11:31 AM,,,,,fabric-ledger,,,,0,,,,,,,,,Simplify boolean expression in kvledger,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxix3:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,grapebaba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use different folders in ledger tests.,FAB-1817,14318,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Invalid,,manish-sethi,manish-sethi,24/Jan/17 8:10 PM,12/Jul/19 8:45 PM,28/Oct/23 2:58 AM,12/Jul/19 8:45 PM,,,v2.0.0,,fabric-ledger,,,,0,,,,,,,,,"As mentioned in FAB-1758, the golang tests in different packages are run in parallel (unless controlled by special flag `-p=1`). To avoid collision among tests of different packages, use different folders that are used to store ledger contents.",,manish-sethi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7jr:",,,,,,Sprint 15  - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,manish-sethi,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Jul/19 8:45 PM;mastersingh24;no longer needed as the code and tests have been refactored;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create data wrapper for state data in CouchDB,FAB-1818,14319,13116,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,chris.elder,chris.elder,24/Jan/17 11:03 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 12:17 AM,,,,,fabric-ledger,,,,0,,,,,,,,,This task will add a wrapper for JSON ledger data stored in CouchDB.,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxixb:",,,,,,Sprint 7 - Ledger,Sprint 10 - Ledger,Sprint 11 - Ledger,,,,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create version and add to state database,FAB-1819,14320,13116,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,chris.elder,chris.elder,24/Jan/17 11:32 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 12:17 AM,,,,,fabric-ledger,,,,0,,,,,,,,,Create the version by combining the transaction ID and block height.  Add to the resulting version to the state database in CouchDB,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxixr:",,,,,,Sprint 7 - Ledger,Sprint 10 - Ledger,Sprint 11 - Ledger,,,,,,,,,,,,,,,,,,,,,,,chris.elder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode->Peer TLS certificate needs to be injected at runtime,FAB-1820,14321,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,greg.haskins,greg.haskins,greg.haskins,24/Jan/17 11:33 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,05/Feb/17 11:43 AM,,,,,fabric-peer,,,,0,,,,,,,,,"We currently bake the ""peer's"" TLS key in during the creation of a deployment payload, which is much too early and thus almost assuredly incorrect.

Today, this deployment payload is formed by the client/CLI, and thus it is in no position to actually know what peer will be on the other end of a connection with the chaincode.  Rather than baking the peers certificate in during deployment, each peer should inject the certificate just-in-time using something like a docker bind mount.  This will ensure each chaincode runs in with the proper context. ",,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxixz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/17 11:43 AM;greg.haskins;Fixed with https://gerrit.hyperledger.org/r/#/c/4943/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a tool to parse human-readable policies and convert them into SignaturePolicyEnvelope objects,FAB-1822,14323,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,25/Jan/17 12:24 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,13/Apr/17 4:24 PM,,,,,fabric-peer,,,,0,,,,,,,,,"We need a tool that parses strings like

outof(1, outof(1, 'org0.member'))

and converts them into policy objects that cauthdsl can handle.",,ales,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxiyf:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Jan/17 12:28 AM;smithbk;See http://gerrit.hyperledger.org/r/4765;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Initialize MSP through MSP config handler hooks,FAB-1825,14326,13608,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,25/Jan/17 2:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:27 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxiyv:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"on invoke, save Response from chaincode into ProposalResponse ",FAB-1829,14330,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jiangyaoguo,muralisr,muralisr,25/Jan/17 5:33 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,13/Jul/17 10:37 AM,,,,,,,,,0,,,,,,,,,"thanks to [~jiangyaoguo] https://jira.hyperledger.org/browse/FAB-1457 adds support for pb.Response to be returned from chaincode instead of ([]bytes, err). As described in FAB-1457, response codes < 500 can be endorsed and (potentially) turned into transactions. 

This would require Response to be added to ChaincodeAction in fabric/peer/proposal.proto. And set at endorsement time.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1457,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxizr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need separate audit logs from Fabric,FAB-1832,14333,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ptippett,ptippett,25/Jan/17 8:02 AM,30/Jul/19 11:42 AM,28/Oct/23 2:58 AM,30/Jul/19 11:42 AM,,,Future,,fabric-quality,,,,0,,,,,,,,,"At least one customer has asked for separate audit logs from the fabric.  The requirement is that we can produce an audit log that include at least the following actions: add/modify/delete user, deploy chaincode, create/modify/delete subchannel. They also want to include the start/stop node .

I opened this against quality squad, but it will hit multiple areas, so I can move or open additional Jira items as needed.",,mastersingh24,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj07:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,mastersingh24,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need fabric components to log audit events to audit log,FAB-1833,14334,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,ptippett,ptippett,25/Jan/17 8:06 AM,30/Jul/19 11:47 AM,28/Oct/23 2:58 AM,30/Jul/19 11:47 AM,,,Future,,fabric-quality,,,,0,HSBN,Serviceability,,,,,,,"At least one customer has asked for separate audit logs from the fabric.  The requirement is that we can produce an audit log that include at least the following actions: add/modify/delete user, deploy chaincode, create/modify/delete subchannel. They also want to include the start/stop node .

I opened this against quality squad, but it will hit multiple areas, so I can move or open additional Jira items as needed.",,binhn,mastersingh24,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzzu93:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,binhn,mastersingh24,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/17 5:46 AM;wlahti;We need more details of the information that should be logged for each of the actions listed. I'm also not clear on the add/modify/delete user portion... Is that for users in the fabric-ca (formerly known as cop)?;;;","08/Feb/17 11:19 PM;ptippett;Hi Will.  Saw your slack message but was in the middle of something and never got back.  

In general, the purpose of the audit log is of course to keep track of which users are performing which actions, so if something bad/unexpected happens, you can go back and figure out if someone did something they shouldn't have, or if they did something that should have worked, but didn't, or if say a bunch of channels got deleted or you suspect a breach, you can see if there's a particular account that's doing things it shouldn't be, maybe it was hacked, and turn off that account.  I think for the add/delete it's simply:

Timestamp - UserID - Created/deleted channel/user <name or ID or whatever>.

For modifications, it's maybe a bit more complicated since it's not clear to me how much information we can and should report.
IMO, minimally, it's:
Timestamp - UserID - Modified channel/user <name or ID or whatever>.

With a more ideal solution (that if necessary we could move to over time I think) of something like:

Timestamp - UserID - performed action ""add user Paul"" or ""modified channel batch size from 10 to 20"" on channel <name or ID or whatever>.

In other words, the closer we can get to the exact modification/operation they performed, the better, with the desired solution being able to say exactly what they did.  The first example helps with ""this account is modifying stuff they shouldn't be, we should turn them off"" but doesn't help as much with ""we had an outage around the time Paul modified some things, but he doesn't remember exactly what he did in what sequence to help us figure out what happened"".  That's where the 2nd more specific example comes in.

As for the membership question, given that, at least now, membership is at an org level and a ""member"" is represented by a root cert which can come from our fabric CA or one they provide (via verisign or another fabric CA or whatever), I expect the requirement is to audit any change of those members.  Either adding, removing, or modifying.  It might be worth a conversation with Jason Yellick or Keith Smith to make sure they have a similar opinion.

I'll also forward this to Angel who is the one that gave me the requirement to see if he has any other thoughts or had more specific info from the users asking for this.;;;","20/Apr/17 2:22 AM;binhn;[~ptippett] [~wlahti] Why would we want another log when we already have the ledger, which is the transaction log that contains this info, including MSPs.

Note that add/modify/delete user is not a concept in Fabric, but Fabric CA, so we should open a request there. ;;;","30/Jul/19 11:47 AM;mastersingh24;No activity for around a year .... cleanup time;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Makefile is deleting build/image/%/Dockerfile outputs after running,FAB-1834,14335,,Story,Closed,FAB,Fabric,software,denyeart,,,Low,Done,sanchezl,greg.haskins,greg.haskins,25/Jan/17 9:22 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,30/Jan/17 11:49 PM,,,,,fabric-peer,,,,0,,,,,,,,,"A recent change to the makefile made Dockerfile outputs first class.  However, the build is seeing them as implicitly intermediate and therefore cleaning them up with other intermediates.  This is likely to cause undo churn for iterative builds.

The solution is to do something like:

.SECONDARY: build/image/%/Dockerfile",,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj0f:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
end-to-end.js tests are failing due to latets chaincode Interface changes,FAB-1835,14336,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,Ratnakar,rameshthoomu,rameshthoomu,25/Jan/17 12:14 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/Jan/17 8:10 AM,,,,,,,,,0,,,,,,,,,"end-to-end.js tests are failing due to due to latets chaincode Interface changes on below fabric commit Levels:

=======> FABRIC PEER COMMIT NUMBER - 1b53e6e =======> FABRIC COP COMMIT NUMBER - f5291e7 =======> FABRIC SDK NODE COMMIT NUMBER - 3cf2ad9

*Docker log file: *https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/10/artifact/gopath/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/dockerlogfile.log
*
Jenkins Build Reference*:https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/10/console",Jenkins CI,DrVadson,rameshthoomu,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj0n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DrVadson,rameshthoomu,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/17 7:53 AM;Ratnakar;Fixed the issue with gerrit https://gerrit.hyperledger.org/r/#/c/4839/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Range query state handler should deep copy values from ledger,FAB-1837,14338,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,inatatsu,inatatsu,25/Jan/17 4:56 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Apr/17 6:28 AM,,,v1.0.0,,fabric-peer,,,,0,common-components,quality,,,,,,,A value returned by shim.PartialCompositeKeyQuery() intermittently differs from the one returned by shim.GetState() for the corresponding key. The root cause is that the chaincode message handler copies byte array pointers instead of copied byte arrays for the values returned by the iterator of an underlying ledger.,,denyeart,inatatsu,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1541,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj0v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,inatatsu,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 5:10 PM;inatatsu;https://gerrit.hyperledger.org/r/#/c/4805/;;;","12/Apr/17 6:29 AM;denyeart;Will be tracked in FAB-1541.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update NodeSDK to reflect new chaincode response object,FAB-1838,14339,13866,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,harrisob@us.ibm.com,mastersingh24,mastersingh24,25/Jan/17 6:28 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/May/17 2:14 AM,,,,,fabric-sdk-node,,,,0,,,,,,,,,chaincode now returns a response object.  Need to update the SDK to support this change,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj13:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
V1.0 Update Java JDK latest fabric,FAB-1839,14340,13866,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,rickr,mastersingh24,mastersingh24,25/Jan/17 6:29 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:06 AM,,,v1.0.0,,fabric-sdk-java,,,,0,v1.0,,,,,,,,"chaincode now returns a response object. Need to update the SDK to support this change
",,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj1b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make SBFT use the Block Cutter,FAB-1840,14341,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,hgabre,hgabre,25/Jan/17 7:54 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 5:57 PM,,,,,,,,,0,sbft,,,,,,,,"SBFT needs to use ""orderer/common/blockcutter"" (common orderer code) to create its batches.",,hgabre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj1j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hgabre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor ExecuteQuery() chaincode handler to reduce duplicate code,FAB-1841,14342,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,denyeart,denyeart,26/Jan/17 12:17 AM,30/Jul/19 11:59 AM,28/Oct/23 2:58 AM,30/Jul/19 11:59 AM,,,Future,,fabric-ledger,,,,0,,,,,,,,,"Refactor to reduce the duplicate code introduced in:
https://gerrit.hyperledger.org/r/#/c/4767/",,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxbd3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:59 AM;mastersingh24;No activity in a year or more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use common data structures in SBFT,FAB-1842,14343,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Invalid,hgabre,hgabre,hgabre,26/Jan/17 12:25 AM,20/Jul/18 11:17 PM,28/Oct/23 2:58 AM,20/Jul/18 11:05 PM,,,,,,,,,0,sbft,,,,,,,,SBFT should use the common data structures from protos (protos/common) as other orderers do.,,hgabre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj1r:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hgabre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move SBFT related protos under protos directory,FAB-1843,14344,14343,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,hgabre,hgabre,26/Jan/17 12:31 AM,20/Jul/18 11:17 PM,28/Oct/23 2:58 AM,02/Jun/18 7:25 PM,,,Future,,fabric-orderer,,,,0,sbft,,,,,,,,"SBFT related protos should reside under the location that is used by other components. This is _protos/_.
We agreed (consensus-dev) that there will be a separate directory for sbft and orderers: _protos/orderer/sbft_.",,ChristopherFerris,hgabre,kchristidis,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj1z:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,hgabre,kchristidis,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/17 3:39 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4819/;;;","01/Jun/17 7:25 PM;ChristopherFerris;4819 was abandoned. However since sbft has been put off to Future, just putting this back in backlog;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move the proper SBFT config items into Genesis,FAB-1844,14345,14343,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,hgabre,hgabre,26/Jan/17 12:57 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,04/Feb/17 2:08 AM,,,,,fabric-orderer,,,,0,sbft,,,,,,,,Some of the SBFT config fields/items need to be moved to the Genesis part of the configuration (which written to the Genesis block).,,hgabre,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj27:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hgabre,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/17 3:21 AM;kchristidis;Gabor, can you please edit this as follows?

- Component: fabric-consensus
- Label: sbft
- Status: In progress (or in review)
- Assign it to yourself?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip MessageStore timely expiration,FAB-1845,14346,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,yacovm,yacovm,26/Jan/17 1:00 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,23/Apr/17 8:06 PM,,,v1.0.0,,fabric-gossip,,,,0,beta,ga,gossip,,,,,,"In the gossip messageStore, items never expire.
Entities like certificates, ledger blocks, alive messages, etc. are stored in a gossip messagestore.
We need to make the items expire after a while, because as time goes by, some peers may be offline forever, as well as some blocks need not be stored in the memory for good (even though- their amount of storage is capped).

",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2777,FAB-2778,FAB-2779,FAB-2780,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzx59b:",,,,,,Sprint 10 - Gossip,Sprint 16 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection between delivery client and leader election,FAB-1846,14347,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,26/Jan/17 1:14 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,13/Mar/17 4:36 PM,,,v1.0.0,,fabric-gossip,,,,0,gossip,,,,,,,,"Right now to disseminate blocks from orderer deliver client use static leader. After leader election service implementation if finished, it should be used for choose leader for blocks dissemination.  ",,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzx62v:",,,,,,Sprint 10 - Gossip,Sprint 11 - Gossip,Sprint 12 - Gossip,Sprint 13 - Gossip,,,,,,,,,,,,,,,,,,,,,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add peer configtx.Handler,FAB-1847,14348,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Jan/17 1:16 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,01/Feb/17 4:26 AM,,,,,fabric-peer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj2f:",,,,Unset,,,,,,,,,,,,,,,1.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typo AnchorPees,FAB-1848,14349,14348,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Jan/17 1:17 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:26 AM,,,,,fabric-peer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj2n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LeaderElectionAdapter implementation,FAB-1849,14350,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,26/Jan/17 1:26 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 8:08 PM,,,v1.0.0,,fabric-gossip,,,,0,gossip,,,,,,,,"LeaderElectionAdapter is interface between leader election algorithm and gossip communication media. It hides all implementation details of messages, communication, etc from algorithm. ",,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxj2v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"26/Jan/17 7:08 PM;gennadyl;https://gerrit.hyperledger.org/r/#/c/4559/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistency in type of attribute proof.,FAB-1850,14351,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,mdr,dubovitskaya,dubovitskaya,26/Jan/17 1:33 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,31/Jan/17 6:29 PM,,,v1.0.0,,fabric-crypto,,,,0,MembershipServices,,,,,,,,"There is an inconsistency between type of GetAttributeProof ([]byte) and VerifyAttributes ([][]byte) in msp Identity interfaces. Both need to be []byte.
",,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj33:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,dubovitskaya,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creat peer sharedconfig descriptor,FAB-1851,14352,14348,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Jan/17 1:37 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:26 AM,,,,,fabric-peer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj3b:",,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve DSL for policies,FAB-1852,14353,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,26/Jan/17 1:58 AM,23/Jan/20 3:48 AM,28/Oct/23 2:58 AM,23/Jan/20 3:48 AM,,,Future,,fabric-peer,,,,0,stale-item,,,,,,,,"Currently the DSL for policies has the following format

AND(A, B)

but it would be much more consumable if it were

A AND B

We should change the parser to at least accept the latter (and potentially also the former)",,ales,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj3j:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/18 2:08 PM;denyeart;Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale.;;;","23/Jan/20 3:48 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a chaincode developer or peer admin, I want to be able to see docker container output",FAB-1855,14356,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,greg.haskins,greg.haskins,greg.haskins,26/Jan/17 3:27 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,29/Jan/17 6:50 PM,,,v1.0.0-alpha1,,fabric-peer,,,,0,,,,,,,,,"The peer should include a facility to optionally display any docker container output upon request/configuration.  As it stands right now, runtime failures in docker containers are very difficult to diagnose.",,greg.haskins,mastersingh24,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj47:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,greg.haskins,mastersingh24,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jan/17 6:50 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/4833/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add callback feature on configtx update,FAB-1856,14357,14348,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jyellick,jyellick,26/Jan/17 4:04 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,09/Apr/17 8:13 PM,,,,,fabric-peer,,,,0,,,,,,,,,"Per the gossip team, they require to be notified when the channel configuration changes.  This is to implement a way to push notification events to them.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj4f:",,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move orderer/mocks/configtx to common/mocks,FAB-1857,14358,14348,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,26/Jan/17 4:10 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/Mar/17 3:28 AM,,,,,fabric-peer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj4n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide gossip with channel configuration,FAB-1858,14359,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,yacovm,yacovm,26/Jan/17 8:05 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 4:26 AM,,,,,,,,,0,,,,,,,,,"Currently, the gossip component inside the peer parses a config block on its own, whenever a channel is created.

We would like to do it in a more generic way: having the peer use the common configuration manager and configuration handling code, and notifying gossip upon a config change.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj4v:",,,,,,Sprint 10 - consensus,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
move system chaincodes from chaincode/ to system_chaincodes/,FAB-1859,14360,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,26/Jan/17 10:15 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,07/Feb/17 6:52 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The refactor and cleanup of ""ccprovider"" package (core/common/ccprovider) paved way for further cleanup. As a first step let us move back all the system chaincode (lscc, vscc, cscc, qscc, escc) to be in their own packages under system_chaincodes.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzx6c7:",,,,,,Sprint 10 - Endorser,Sprint 11 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Multichannel deploy fails if user doesn't have ""hyperledger-fabric--cenv:x86_64-0.7.0-snapshot-<commit> tag",FAB-1860,14361,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,rameshthoomu,rameshthoomu,26/Jan/17 12:52 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Apr/17 11:38 AM,v1.0.0,,v1.0.0,,,,,,0,chaincode,,,,,,,,"Multi channel Deploy fails if user doesn't have both latest and snapshot tags of hyperledger/fabric-ccenv image

*Issue Description:*
While deploying chaincode using multi channel execution commands, observed deploy is failing in the following scenarios.

*Scenario1:*  Deploy fails from node sdk, If user doesn't have hyperledger/fabric-ccenv:latest
*Scenario2*: , Deploy fails from CLI commands, If user doesn't have hyperledger/fabric-ccenv:<snapshot> tag

This works as expected when user builds images (*make docker*)and spinup the network using docker-compose files but deploy fails to the users who don't want to build images manually. You can consider the scenario like developers participating in hackthons or hackfest. They just spinup the network using docker-compose which will pull all the required images(Using Docker-compose file we can pull any one specified tag like ""latest"" or ""snapshot"")

*Workaround:* workaround for this mentioned here from Lines 7 to 19 https://github.com/hyperledger/fabric/blob/master/examples/sfhackfest/docker-compose-gettingstarted.yml#L7.",Vagrant,kchristidis,muralisr,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/17 2:45 AM;rameshthoomu;ccenv-latest.txt;https://jira.hyperledger.org/secure/attachment/10420/ccenv-latest.txt","06/Feb/17 2:47 AM;rameshthoomu;ccenv-snapshottag.txt;https://jira.hyperledger.org/secure/attachment/10421/ccenv-snapshottag.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj53:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,muralisr,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/17 2:06 AM;muralisr;[~rameshthoomu] core.yaml has the default setting and meant to be replaced with actual values...;;;","03/Feb/17 10:03 AM;muralisr;[~rameshthoomu] [~ghaskins]
Replacing CORE_CHAINCODE_DOCKERFILE via an environnment variable is hard (perhaps impossible) given the multiline format for Dockerfile.

Propose we introduce a new {{chaincode.dockertag}} property.

{code:java}
###############################################################################
#
#    Chaincode section
#
###############################################################################
chaincode:

    # docker tag default. Can be replaced via environment variable CORE_CHAINCODE_DOCKERTAG
    #This value in turn will replace $(DOCKERTAG) in the Dockerfile property
    dockertag: $(ARCH)-$(PROJECT_VERSION)

    # The id is used by the Chaincode stub to register the executing Chaincode
    # ID with the Peerand is generally supplied through ENV variables
    # the Path form of ID is provided when deploying the chaincode. The name is
    # used for all other requests. The name is really a hashcode
    # returned by the system in response to the deploy transaction. In
    # development mode where user runs the chaincode, the name can be any string
    id:
        path:
        name:

    golang:

        # This is the basis for the Golang Dockerfile.  Additional commands will
        # be appended depedendent upon the chaincode specification.
        Dockerfile:  |
          FROM hyperledger/fabric-ccenv:$(DOCKERTAG)
          COPY src $GOPATH/src
          WORKDIR $GOPATH

    car:

        # This is the basis for the CAR Dockerfile.  Additional commands will
        # be appended depedendent upon the chaincode specification.
        Dockerfile:  |
            FROM hyperledger/fabric-ccenv:$(DOCKERTAG)

    java:
        # This is an image based on java:openjdk-8 with addition compiler
        # tools added for java shim layer packaging.
        # This image is packed with shim layer libraries that are necessary
        # for Java chaincode runtime.
        Dockerfile:  |
            from hyperledger/fabric-javaenv:$(DOCKERTAG)
{code}

Where user can specify any tag to replace {{chaincode.dockertag}} property.  For example
{code}
CORE_CHAINCODE_DOCKERTAG=x86_64-0.7.0-snapshot-f7a9f37 peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'

CORE_CHAINCODE_DOCKERTAG=latest peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'


CORE_CHAINCODE_DOCKERTAG=badtag peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'

{code}

The first two will work and the last is an example of a tag that won't work.;;;","05/Feb/17 9:04 AM;rameshthoomu;Below are the observations while deploying chaincode keeping ccenv image in system:

(hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$ docker images | grep hyperledger/fabric-ccenv
*hyperledger/fabric-ccenv         x86_64-0.7.0-snapshot-64bfdff   a8b9d7e615b2        27 hours ago        1.29 GB
*(hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$

CORE_CHAINCODE_DOCKERTAG=x86_64-0.7.0-snapshot-64bfdff peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'* (Deploy Working)*
CORE_CHAINCODE_DOCKERTAG=latest peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'* (Deploy Not working)*

(hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$ docker images | grep hyperledger/fabric-ccenv
*hyperledger/fabric-ccenv         latest   a8b9d7e615b2        27 hours ago        1.29 GB*
(hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$

CORE_CHAINCODE_DOCKERTAG=x86_64-0.7.0-snapshot-64bfdff peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}*' (Deploy Not Working)*
CORE_CHAINCODE_DOCKERTAG=latest peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}' *(Deploy working)*
;;;","05/Feb/17 10:56 PM;muralisr;[~rameshthoomu] so basically using CORE_CHAINCODE_DOCKERTAG to override default core.yaml to match the docker image tag in the user workspace works with this fix, correct ?;;;","06/Feb/17 2:44 AM;rameshthoomu;yes [~muralisr]. I see it is working when I have ccenv image with ""latest"" tag and try to deploy with ""latest"" tag. But shouldn't be a issue if user pulls ""ccenv snapshot tag"" and try to deploy with ""latest ""tag? I am seeing deploy failure if the overriding tag is not available in the system. refer above scenarios for the possible cases..  ;;;","06/Feb/17 6:03 AM;muralisr;[~rameshthoomu] If user pulls ""ccenv snapshot tag"", then  ""CORE_CHAINCODE_DOCKERTAG"" should point to that. Basically "" ""CORE_CHAINCODE_DOCKERTAG"" should point to whatever's there on the system. If its not specified core.yaml will be used.

Why would one download  ""ccenv snapshot tag"" and then set ""CORE_CHAINCODE_DOCKERTAG=latest"" ?
;;;","07/Feb/17 5:34 AM;rameshthoomu;
{panel}
[~muralisr]: Agree. We should stick to any one tag either ""snapshot"" or ""latest"" but as mentioned we may not push ""latest"" tag to hyperledger dockerhub. In this case, user has to depend on ""snapshot"" tag. I see [~ghaskins] removed ccenv:latest tag dependency from fabric-sdk-node repository

With Greg's change, ccenv:latest is more required for deployment  from sdk so this clears patch to use snapshot tag for CLI deployment.
{panel}
;;;","19/Apr/17 10:39 PM;kchristidis;[~rameshthoomu], [~muralisr]: Where do we stand on this?

I've also removed the ""fabric-orderer"" component as it's not related.;;;","20/Apr/17 9:03 AM;muralisr;This has been fixed by [~greg.haskins] properly with his work https://jira.hyperledger.org/browse/FAB-2826 (https://gerrit.hyperledger.org/r/#/c/7163/) which generalizes 3 key tags for even fine-grained control than what was originally intended in this CR and abandoned (see https://gerrit.hyperledger.org/r/#/c/5497/)
* docker namespace (default ""hyperledger"")
* arch
* project version

Given that I think this can be closed. 

Can you please close if you agree [~rameshthoomu] ?;;;","26/Apr/17 11:38 AM;rameshthoomu;It's working as expected with [~greg.haskins] fixes.. Closing this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Initial event hub implementation to enable transaction event listeners,FAB-1861,14362,13227,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pmullaney,jimthematrix,jimthematrix,26/Jan/17 3:11 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/Jan/17 11:24 PM,,,,,fabric-sdk-node,,,,0,,,,,,,,,this enables the application to register transaction listeners using the transaction ID,,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj5b:",,,,,,Sprint 5 - Consensus,Sprint 7 - nodeSDK,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 11 - SDK node,Sprint 12 - SDK node,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,Sprint 16 - SDK node,,,,,,,,,,,,,,,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Block events seem to be sent pre-maturely before they get committed to the ledger,FAB-1862,14363,13227,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,jimthematrix,jimthematrix,26/Jan/17 3:15 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,31/Jan/17 8:57 PM,,,,,fabric-sdk-node,,,,0,,,,,,,,,"when writing the end-to-end.js that tests the transaction event listeners using the new event hub implementation, I noticed that step 2 which invokes the chaincode that was just deployed always results in ""target chaincode not found"" error. It seems as though the previous deploy transaction has not been finalized despite the BLOCK event. I had to introduce a 2 second delay before going to the next step of using the transaction that was just received.",,ales,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj5j:",,,,,,Sprint 5 - Consensus,Sprint 7 - nodeSDK,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 11 - SDK node,Sprint 12 - SDK node,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,Sprint 16 - SDK node,,,,,,,,,,,,,,,ales,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/17 12:48 AM;jimthematrix;from [~mastersingh24]

garisingh [10:47 AM] 
https://github.com/hyperledger/fabric/blob/master/core/committer/committer_impl.go#L60
[10:47]  
that's where the producer should send events;;;","27/Jan/17 8:02 PM;ales;Thanks for the detailed description. I've taken a stab at a fix, please see here

http://gerrit.hyperledger.org/r/4913

Would you mind testing whether it fixes the issue you reported? THx!;;;","31/Jan/17 8:57 PM;ales;Haven't heard any complaints about the fix so I assume it did the trick :) I'll close it, please re-open if it's still broken;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extract endorsement policy for LCCC from CSCC,FAB-1863,14364,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,ales,ales,ales,26/Jan/17 7:27 PM,23/Jan/20 3:48 AM,28/Oct/23 2:58 AM,23/Jan/20 3:48 AM,,,,,,,,,0,stale-item,,,,,,,,,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj5r:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:48 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Writeup a sample node program for Fabric V1.0 ,FAB-1867,14368,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,27/Jan/17 1:38 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,31/Jan/17 6:49 AM,,,,,,,,,0,quality,,,,,,,,A simple Node reference program for Fabric 1.0 based out of end-to-end.js,,ishihara.shun,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj6n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/17 6:49 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/4879/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Write Fabric Architecture overview piece,FAB-1869,14370,,Task,Closed,FAB,Fabric,software,denyeart,,,High,Done,markparz,joshhus,joshhus,27/Jan/17 1:44 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Apr/17 12:26 AM,,,v1.0.0,,fabric-docs,,,,0,Documentation,,,,,,,,"Fabric Architecture - pieces, with diagram.

SDK
Channel
Ordering Service
Ledger
",,ChristopherFerris,joshhus,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx4wn:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Documentation,Sprint 13 - Documentation,Sprint 14 - Documentation,Sprint 15 - Documenation,,,,,,,,,,,,,,,,,,,,ChristopherFerris,joshhus,markparz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/17 1:10 AM;joshhus;https://gerrit.hyperledger.org/r/#/c/5007/;;;","07/Feb/17 2:16 AM;joshhus;Needs graphic/pic associated with it - requesting of UX team.
;;;","17/Feb/17 8:38 AM;joshhus;------------
This conception (above) of architecture is the draft that I wrote. All diagrams are pending design team. 
https://gerrit.hyperledger.org/r/#/c/6113/1/docs/architecture.md
The reason for the before and after difference in Gerrit (my version is the after) b/c an architecture.md file already existed. To resolve.

Here are the specific docs that we have in the build currently for architecture. Will post to the Issues: 

http://fabric-rtd.readthedocs.io/en/latest/FAQ/architecture_FAQ/

[6:17]  
http://fabric-rtd.readthedocs.io/en/latest/architecture/

[6:18]  
http://fabric-rtd.readthedocs.io/en/latest/arch-deep-dive/

[6:18]  
I didn't write any of those. Why are they at the bottom of the TOC? don't know.

What I did write on architecture is this; it's higher level than the others. https://gerrit.hyperledger.org/r/#/c/6113/1/docs/architecture.md

;;;","17/Feb/17 11:37 PM;markparz;Define this further... [~nickgaski] has a diagram piece that he's been working with design as well. break out additional tasks if required. I am concerned there is effort duplication on this. ;;;","13/Apr/17 3:17 AM;ChristopherFerris;[~ibm.hlfab.aha.jira] is this still relevant? Done?;;;","26/Apr/17 12:15 AM;markparz;Let's post the diagram from FAB-37 for now...
Sent to the design team to make a nicer looking version. ;;;","26/Apr/17 12:26 AM;markparz;closing as dupe of FAB-2283;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Formalize logging guidelines and fix areas of the code that don't follow them,FAB-1870,14371,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,27/Jan/17 3:24 AM,24/Jul/18 2:48 AM,28/Oct/23 2:58 AM,09/Jan/18 1:13 AM,,,Future,,fabric-peer,,,,0,,,,,,,,,"We need a formal set of guidelines in regards to logging (e.g. what to log, what level to use for certain types of logging statements, what to use to set the log level for a module).

Some guidelines/tips to be included:

For Fabric developers:
 * Don't use the fmt.Print functions for logging statements (CLI being an exception), use the logger for the file (or create a new one if the file isn't logging anything yet). See next point for syntax.
 * All new logging.MustGetLogger() calls should instead use flogging.MustGetLogger(), which tracks logger module names defined in the system and allows for setting levels by regular expression and reverting all levels to the system's default (defined as the levels at the end of peer startup).
 * To take advantage of setting log levels via regular expression (and for consistency), it is recommended to use a pattern of flogging.MustGetLogger(""<module>/<submodule>"").
 * If in doubt of the general usefulness of a logging message to a majority of users, use logger.Debugf() to prevent flooding the logs with messages, especially if they are in code that is accessed often.
 * Add an entry and exit logging statement for all major methods that includes any important entry/exit parameters:

{code:java}
logger.Debugf(""Entry"") // modify to include any input parameters
defer logger.Debugf(""Exit"")
{code}
 * Don't hard-code the log level for a module logger; in most cases it should be inherited from the parent command's log level. If you desire to have it set differently from the parent command, set it to/create a new value in core.yaml or similar config file. We want to have a way to adjust the log level at startup without actually touching the code.
 * For code running on a peer (after startup), you can use ""peer logging setlevel <module-name> <log-level>"" to dynamically set the logging level for a module. If you are unclear on what a module is, it's the name you pass when you create a logger, i.e. logging.MustGetLogger(""<module-name>"") and also the name that shows up in the log messages following the timestamp, e.g. 2017-02-09 00:05:53.532 UTC [ledgermgmt] initialize -> INFO 019 ledger mgmt initialized",,benjsmi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj6v:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,benjsmi,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"12/Apr/17 2:35 AM;benjsmi;Responding to/continuing a discussion with [~wlahti] from FAB-2351:

Thanks for responding promptly.  I'm glad that we're tracking the ability to dynamically reassign the level of the log message. I'm looking forward to seeing this feature implemented and released.

In addition, my feeling is that the log level for a given message is actually best known by the developer who decides to print the message. That is, if I want to print out a message in my fabric component, as a fabric developer, I know whether it's something that should break through most filters (i.e. ""ERROR"" or ""FATAL"") or something that is useful for when you want to see _some_ activity within the component (i.e. ""INFO"" or ""DEBUG"") to something that should really only be shown to *me* as I develop the fabric in my own environment (i.e. SILLY or TRACE).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failing to deploy chaincode if peers are not launched with compose,FAB-1871,14372,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,nherbaut33,nherbaut33,27/Jan/17 3:24 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/May/17 5:49 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"We want to run multiple peers on multiple machine by launching the containers by hand (not with compose)

When launching them with compose on a single machine, it works like a charm. However, when launching it by hand (using the hints from https://github.com/hyperledger/fabric/tree/master/examples/events/block-listener#run-4-docker-peers-with-pbft) on a single machine we have errors:

18:22:10.732 [consensus/pbft] ProcessEvent -> INFO 02d Replica 0 view change timer expired, sending view change: new request batch 7bdHx57T+4kLAy17eah3jxVBOOEMsN/IxK0b4XCEWoJEbzm6AevpdJkeQMYMVM+5Uw5sDyaub5sUkgdFD3zzWA==
18:22:10.732 [consensus/pbft] sendViewChange -> INFO 02e Replica 0 sending view-change, v:1, h:0, |C|:1, |P|:0, |Q|:1
18:22:10.732 [consensus/pbft] recvViewChange -> INFO 02f Replica 0 received view-change from replica 0, v:1, h:0, |C|:1, |P|:0, |Q|:1
18:22:12.733 [consensus/pbft] sendViewChange -> INFO 030 Replica 0 sending view-change, v:1, h:0, |C|:1, |P|:0, |Q|:1
18:22:12.733 [consensus/pbft] recvViewChange -> INFO 031 Replica 0 received view-change from replica 0, v:1, h:0, |C|:1, |P|:0, |Q|:1
18:22:12.733 [consensus/pbft] recvViewChange -> WARN 032 Replica 0 already has a view change message for view 1 from replica 0
18:22:14.734 [consensus/pbft] sendViewChange -> INFO 033 Replica 0 sending view-change, v:1, h:0, |C|:1, |P|:0, |Q|:1","lastest docker images:
hyperledger/fabric-peer latest              21cb00fb27f4",ChristopherFerris,dbourasseau,denyeart,jyellick,nherbaut33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/17 3:23 AM;nherbaut33;docker-compose.yml;https://jira.hyperledger.org/secure/attachment/10404/docker-compose.yml","27/Jan/17 3:22 AM;nherbaut33;issue-by-hand.txt;https://jira.hyperledger.org/secure/attachment/10406/issue-by-hand.txt","27/Jan/17 3:22 AM;nherbaut33;ok-with-compose.txt;https://jira.hyperledger.org/secure/attachment/10405/ok-with-compose.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj73:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,dbourasseau,denyeart,jyellick,nherbaut33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/17 12:48 AM;jyellick;This likely indicates one of two things:

1. The chaincode deployment was sent before the network was fully intiialized, and caused a view change timeout on vp0, but did not on the rest of the network.
2. The network is not actually up and connected.

Please attach logs for the other peers.;;;","12/Apr/17 6:55 AM;denyeart;[~nherbaut33]
Were you able to make progress based on Jason's advice? Are you still having an issue?;;;","12/May/17 4:48 AM;ChristopherFerris;[~nherbaut33] are you still seeing the issue above? If so, can you please share the logs as requested by Jason?;;;","12/May/17 5:48 AM;nherbaut33;[~ChristopherFerris], we moved to v1.0 and modified our deployment scripts. We didn't encounter this problem anymore with the new implementaiton.

 

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Genesis block is not committed to the ledger while creating a chain for the first time.,FAB-1872,14373,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,27/Jan/17 3:35 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/Jan/17 8:17 AM,,,,,,,,,0,,,,,,,,,"Currently, while join channel get call for very first time, it contains the genesis block, however this block is not get committed to the ledger. As a consequence whenever delivery client queries the committer for the current ledger height it's getting zero, therefore asking from the ordering service blocks starting from the 0 sequence number.

Since block with sequence number 0 gets to the peer it fails validation of configuration transaction, since it expect to get configuration blocks in the increasing order, while getting *again* same configuration blocks (genesis). Eventually the flow results with following errors in the log:

{code}
ND -----\n"" nonce:""O\233\373}.w\207M\221\245\317\030\276u\235\226#C\250\207+\213\245\370"" >
2017-01-26 17:00:31.866 UTC [protoutils] ValidateTransaction -> INFO 099 ValidateTransactionEnvelope returns err %!s(<nil>)
2017-01-26 17:00:31.867 UTC [txvalidator] Validate -> CRIT 09a Error validating configuration which passed initial validity checks:Config sequence number jumped from 0 to 0
2017-01-26 17:00:31.867 UTC [peer] createChain -> INFO 09b XXXXXXX: Currently ledger is at height =  0
2017-01-26 17:00:31.867 UTC [peer] createChain -> INFO 09c Calling gossip to initialize the channel
{code}

The solution should be to make genesis block get committed to the ledger for the first time it called for create chain.",,C0rWin,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj7b:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,inatatsu,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/17 3:50 AM;muralisr;[~C0rWin] So the idea would be that if the first block on was a bad/incorrect/wrong for some reason, the chain wont work on subsequent blocks anyway... so it's ok to create the block at the time of creating the ledger on join, right ?;;;","27/Jan/17 3:57 AM;C0rWin;As far as I concerned this is correct, but probably worth asking [~jyellick];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set MSPCONFIGPATH  to fabric default sampleconfig ,FAB-1873,14374,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,27/Jan/17 3:40 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,19/Apr/17 4:31 PM,,,,,fabric-peer,,,,0,,,,,,,,,{{mspConfigPath: /etc/hyperledger/fabric/msp/sampleconfig}} in core.yaml is causing grief to non-docker users who have to override this everytime. It is better to change standard docker-compose files to point to docker path than have users change the config every time (in core.yaml or as an ENV var),,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj7j:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/17 8:29 PM;ChristopherFerris;changed this from a bug to an improvement. 

I think that this is fine, but we really should be (IMO) architecting for a single UX. Not one for Docker and one for not.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce identity channel to orderer,FAB-1875,14376,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,27/Jan/17 6:37 AM,23/Jan/20 3:48 AM,28/Oct/23 2:58 AM,23/Jan/20 3:48 AM,,,,,fabric-orderer,,,,0,common-components,stale-item,,,,,,,"There is an existing problem with syncing identity across channels.

# Application orgs cannot read the ordering system channel, so they cannot reasonably update their identity there.
# Application orgs cannot determine what channels they are a member of, so cannot easily script updates to their identity.  Further, because the identity may be at different levels and will definitely have different headers, one signature must be generated per channel.
# The orderer has no way to ensure that the MSP used in a channel creation request is up to date (except relative to the ordering system channel, which as already pointed out, is problematic to update).
# The orderer has no centralized place to get TLS certs from.
# The peer has no authoritative source for TLS certs or for local MSP data.
# If an application wishes to create a channel with an org they have no other channels with, it's not obvious how to retrieve their current MSP.

There are probably other benefits as well.",,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-92,,,,,FAB-5716,,,,,,,,,,FAB-2989,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx60f:",,,,Unset,,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,jyellick,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/20 3:48 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update anchor peers to be multiple configuration items,FAB-1876,14377,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,27/Jan/17 6:39 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,24/Feb/17 3:42 AM,,,,,fabric-gossip,fabric-orderer,fabric-peer,,0,,,,,,,,,"Because write access to config is scoped by configuration item, it does not make sense for all anchor peers to be writable by any organization.  Instead, we should have one configuration item per anchor peer, with a modification policy corresponding to that org.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxj7z:",,,,Unset,,Sprint 12 - consensus,,,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/17 3:43 AM;jyellick;This was done via https://jira.hyperledger.org/browse/FAB-2226;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add an ability to fetch configuration block,FAB-1878,14379,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,27/Jan/17 8:11 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Mar/17 2:28 AM,,,,,,,,,0,,,,,,,,,"Currently only peer which creates the channel got the configuration block written back on the file system to be used in consequent join channel call. Need to add additional cli command so others peers be able to fetch the block to join the channel, this is especially useful for multiple organization setup.

Command will extend/add an ability to the *peer channel* command by adding new *fetch* flag and leverage *-c* key to identify the chain id.

Format to run the new command should be
{code}
peer channel fetch -c chainID
{code}

where *chainID* is the identity of the chain we would like to get the genesis block for.",,C0rWin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj8f:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"27/Jan/17 9:48 PM;mastersingh24;[~C0rWin] - could you please modify the description and/or add a comment which details the new command and the flags?;;;","27/Jan/17 9:48 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/4893/;;;","28/Jan/17 1:05 AM;C0rWin;Of course. Edited.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connect gossip configuration to yaml configuration,FAB-1879,14380,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,yacovm,yacovm,27/Jan/17 8:55 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Feb/17 8:43 PM,,,,,fabric-gossip,,,,0,gossip,help-wanted,,,,,,,"Currently, gossip configuration is hard-coded, and is initialized in gossip/integration/integration.go

We need to connect that configuration to the [peer/core.yaml|https://github.com/hyperledger/fabric/blob/master/peer/core.yaml#L70-L73]

There is a gossip related section in *core.yaml*

{code}
    gossip:
        bootstrap: 0.0.0.0:7051
        # For debug - is peer is its org leader and should pass blocks from orderer to other peers in org
        orgLeader: true
{code}

Which need to be extended to include all set of parameters such as

{code}
type Config struct {
	BindPort            int      // Port we bind to, used only for tests
	ID                  string   // ID of this instance
	SelfEndpoint        string   // Endpoint we publish to remote peers
	BootstrapPeers      []string // Peers we connect to at startup
	PropagateIterations int      // Number of times a message is pushed to remote peers
	PropagatePeerNum    int      // Number of peers selected to push messages to

	MaxBlockCountToStore       int           // Maximum count of blocks we store in memory
	StateInfoRetentionInterval time.Duration // TODO: this would be a maximum time a stateInfo message is kept until expired

	MaxPropagationBurstSize    int           // Max number of messages stored until it triggers a push to remote peers
	MaxPropagationBurstLatency time.Duration // Max time between consecutive message pushes

	PullInterval time.Duration // Determines frequency of pull phases
	PullPeerNum  int           // Number of peers to pull from

	SkipBlockVerification bool // Should we skip verifying block messages or not

	PublishCertPeriod        time.Duration    // Time from startup certificates are included in Alive messages
	PublishStateInfoInterval time.Duration    // Determines frequency of pushing state info messages to peers
	RequestStateInfoInterval time.Duration    // Determines frequency of pulling state info messages from peers
	TLSServerCert            *tls.Certificate // TLS certificate of the peer
}
{code}

The *integration.go* file need to extended to read the gossip section and initialize configuration based on it.",,C0rWin,cyrax,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzx6zj:",,,,,,Sprint 10 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,cyrax,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable MVCC+Postimage for configtx,FAB-1880,14381,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,27/Jan/17 12:08 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,11/Mar/17 3:23 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The current configuration tx scheme requires a global sequence number be specified.  This is problematic as a DoS attack vector if single signers are allowed for modification of items (like anchor peers, or MSP definitions).  It should be a relatively straightforward change to modify this to be MVCC+postimage to eliminate the DoS sequence number contention problem.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-92,,,,,,,,,,,,FAB-1992,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx693:",,,,Unset,,Sprint 11 - consensus,Sprint 13 - Consensus,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enrollment failed in end-to-end test with sql no rows in error result,FAB-1881,14382,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,jimthematrix,rameshthoomu,rameshthoomu,27/Jan/17 12:42 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 12:32 AM,,,,,,,,,0,,,,,,,,,"Enrollment failed in end-to-end test with sql no rows in error result
Observed first failure on below commits:

=======> FABRIC PEER COMMIT NUMBER - dffcaf4 =======> FABRIC CA COMMIT NUMBER - f5291e7 =======> FABRIC SDK NODE COMMIT NUMBER - 51699b8

*Build Reference:
*https://jenkins.hyperledger.org/view/FIT/job/FIT-node-x86_64/37/
https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/13/
https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/14/",Jenkins CI,jimthematrix,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj8n:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jimthematrix,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 2:32 PM;jimthematrix;[~rameshthoomu] I'm almost certain this is due to the fact that the fabric-ca image uses the /etc/hyperledger/fabric-ca/server-config.json that has only one user ""admin"", unless the build somehow swaps in a config more suitable for testing purposes. end-to-end.js uses ""admin2"" by default.;;;","01/Feb/17 12:32 AM;rameshthoomu;Thanks Jim for the fix. This issue fixed with the patch https://gerrit.hyperledger.org/r/#/c/5125/. Tested this patch in Jenkins environment and observed tests are passing now. Build Reference https://jenkins.hyperledger.org/sandbox/job/FIT-node-x86_64/2/console;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ability to shutdown server,FAB-1882,14383,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,skarim,skarim,27/Jan/17 12:45 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,21/Jun/18 2:57 AM,,,,,,,,,0,,,,,,,,,,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj8v:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,skarim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/18 2:57 AM;skarim;Duplicate of FAB-4487;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for CLI to load anchor peers,FAB-1883,14384,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,27/Jan/17 2:11 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 4:14 AM,,,,,,,,,0,,,,,,,,,"Anchor peers (host, port and identity) are needed to be loaded from the file system in order to be serialized into a configuration block.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxj93:",,,,,,Sprint 10 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetTransactionByID should return a Transaction  Envelope,FAB-1885,14386,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,27/Jan/17 8:06 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Jan/17 1:26 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"QSCC GetTransactionByID should return a Transaction  Envelope,
not a Transaction. The Envelope contains the signature and
Payload, which contains the transaction header and Transaction.

Clients will want the transaction header information when retrieving
the transaction.  They may also want the signature to verify that
the transaction hasn't changed since the time they submitted it.
The return type will change from Transaction proto to Envelope proto.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,,,,,,,,,"1|hzxahr:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Java Chaincode interface to return Response,FAB-1886,14387,13866,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,sanchezl,satheeshk,satheeshk,27/Jan/17 8:59 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,19/May/17 2:20 AM,,,,,fabric-sdk-java,,,,0,,,,,,,,,,,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj9j:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Java shim interface to support new ACL,FAB-1887,14388,13136,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,satheeshk,satheeshk,satheeshk,27/Jan/17 9:01 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Jun/17 10:49 PM,WON'T FIX,,WON'T FIX,,fabric-sdk-java,,,,0,,,,,,,,,,,rickr,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxj9r:",,,,,,Sprint 9 - Crypto,Sprint 10 - Crypto,Sprint 12 - Crypto,,,,,,,,,,,,,,,,,,,,,,,rickr,satheeshk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 10:50 PM;rickr;Think this is obsolete.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
expecting block 2 instead of block 1 after join,FAB-1889,14390,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,muralisr,muralisr,27/Jan/17 10:43 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,06/Mar/17 2:28 AM,,,,,fabric-gossip,,,,0,,,,,,,,,The first deploy after join fails because fabric expects block2 instead of block 1. (The nice thing is that the incoming block is thrown out as it should be.),,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxja7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move the event registration call before sendTransaction() in end-to-end.js,FAB-1890,14391,13227,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jimthematrix,jimthematrix,27/Jan/17 11:26 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,07/Feb/17 1:02 AM,,,,,fabric-sdk-node,,,,0,,,,,,,,,"From [~pmullaney] comment in https://gerrit.hyperledger.org/r/#/c/4093/:

""I think there is a race here. The sendTransaction that triggers this event registration callback is done before the registration.""",,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjaf:",,,,,,Sprint 5 - Consensus,Sprint 7 - nodeSDK,Sprint 8 - nodeSDK,Sprint 9 - nodeSDK,Sprint 10 - nodeSDK,Sprint 11 - SDK node,Sprint 12 - SDK node,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,Sprint 16 - SDK node,,,,,,,,,,,,,,,jimthematrix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add test cases (user input files) for performance test,FAB-1891,14392,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,dongming,dongming,dongming,27/Jan/17 11:55 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,15/Feb/17 11:46 PM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Add performance case user input files for performance benchmark using ccchecker. The cases include the following:
- latency test: invoke
- latency test: query
- stress test: invoke
- stress test: query
- concurrency test: invoke
- complex test: invoke
- longrun test: invoke",,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx65b:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,,,,,,,,,,,,,,,,,,,,,,,dongming,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove underscore from default test chain ID,FAB-1893,14394,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,kchristidis,kchristidis,28/Jan/17 12:49 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,29/Jan/17 3:08 PM,,,,,fabric-orderer,fabric-peer,,,0,,,,,,,,,See FAB-1349 for more.,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxjav:",,,,Unset,,Sprint 10 - consensus,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"28/Jan/17 2:02 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/4931/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle signing failure in gossip layer,FAB-1898,14399,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,yacovm,yacovm,28/Jan/17 4:19 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,09/Apr/17 7:38 PM,,,,,,,,,0,,,,,,,,,"The gossip layer uses the local MSP to sign messages.
The signing may fail, according to [~adc].

I think that if the MSP failed to sign a certain text, the gossip layer should panic(), because that means something is horribly wrong with the an essential layer (crypto/hardware)",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxjbr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
reset OTE global counters so can reuse OTE in multiple go test function testcases in one file,FAB-1900,14401,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,28/Jan/17 7:24 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 9:30 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjc7:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Create new channels for sending transactions between orderers, producers, consumers",FAB-1901,14402,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,suryalnvs,suryalnvs,28/Jan/17 7:25 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 7:46 AM,,,,,fabric-quality,,,,0,,,,,,,,,"Creating new channels in OTE to send transactions between producer and orderer, and receive transactions at consumer end from orderer.",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjcf:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove the extra option for using subset of orderers for traffic,FAB-1902,14403,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,28/Jan/17 7:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,31/Jan/17 5:28 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"simplify code
facilitate other option additions",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjcn:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Close the consumer connections with orderers,FAB-1903,14404,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,suryalnvs,suryalnvs,28/Jan/17 7:27 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 1:07 AM,,,,,fabric-quality,,,,0,,,,,,,,,"In cleanNetwork(), add consumer connection closing functionality with the orderers",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjcv:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add a main() function so users can execute from commandline,FAB-1904,14405,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,28/Jan/17 7:29 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,31/Jan/17 5:28 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"in addition to go tests.
This requires reading env vars from environment and using them to set parms when calling function ote() with correct options from main()",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjd3:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Verify the last block that is received by the consumers on each channel ,FAB-1905,14406,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,suryalnvs,suryalnvs,suryalnvs,28/Jan/17 7:29 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 12:56 AM,,,,,fabric-quality,,,,0,,,,,,,,,"In OTE, add the functionality of verifying the last block on each channel with other consumers",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjdb:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/17 12:55 AM;scottz;Closing this here, in order to move this task out of 1805 to be included instead within enhancement FAB-2212.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrating Dongming's driver's tool into OTE,FAB-1906,14407,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,suryalnvs,suryalnvs,suryalnvs,28/Jan/17 7:31 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 11:22 AM,,,,,fabric-quality,,,,0,,,,,,,,,"For launching the network, integrate the dongming's tool in OTE.",,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjdj:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"add options for (a) master consumer, (b) use only one producer and one consumer, so can test with many channels",FAB-1907,14408,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,28/Jan/17 7:33 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,04/Feb/17 6:29 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Standard operation of the tool code is to use one producer per orderer per channel, and one consumer per orderer per channel. That could be a lot of go threads, when we add lots of channels, especially if there are several orderers. And remember each orderer gets its own docker container too, which slows things down when testing on a single laptop. Some flexibility is desired.
 
1. One idea is to add a feature to allow adding a special master consumer who could connect to all channels (on any one orderer).
2. Another feature is to provide an option to create ONLY one producer and one consumer, which will connect to every channel on each orderer. This would allow testing with LOTS of channels, without creating so many go threads.",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjdr:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changing the size of the broadcast timestamp payload,FAB-1908,14409,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,suryalnvs,suryalnvs,28/Jan/17 7:34 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 12:56 AM,,,,,fabric-quality,,,,0,,,,,,,,,"add option for specifying a fixed size or a variable size of the payload for broadcast timestamp, and check the duration of transactions sending and receiving in OTE",,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjdz:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/17 12:56 AM;scottz;Closing this here, in order to move this task out of 1805 to be included instead within enhancement FAB-2212.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"capability to run traffic for a duration, instead of specifying number of TXs to complete",FAB-1909,14410,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,28/Jan/17 7:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 12:57 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxje7:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/17 12:57 AM;scottz;Closing this here, in order to move this task out of 1805 to be included instead within enhancement FAB-2212.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use different chaincodes to send transactions to orderer from producer (api),FAB-1910,14411,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,suryalnvs,suryalnvs,28/Jan/17 7:36 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 12:57 AM,,,,,fabric-quality,,,,0,,,,,,,,,add another chaincode to send transactions from producers to orderers and verify the results using OTE. ,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjef:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/17 12:57 AM;scottz;Closing this here, in order to move this task out of 1805 to be included instead within enhancement FAB-2212.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add producers and consumers to the created channels,FAB-1911,14412,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,scottz,scottz,scottz,28/Jan/17 7:39 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 7:46 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"before sending TXs, peers/clients must be added to the channels they will be using",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjen:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
authentication of certs of Producer TXs and Consumers invoking deliver(),FAB-1912,14413,14306,Sub-task,Closed,FAB,Fabric,software,denyeart,,,High,Done,,scottz,scottz,28/Jan/17 7:43 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 12:58 AM,,,,,fabric-quality,,,,0,quality,,,,,,,,"Consumers and Producers must be registered correctly (get good certs for peer or client of an organization). Do that, and then can enable the orderers to execute their code to authenticate (possibly using a non-simpleton policy).",,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjev:",,,,,,Sprint 10 - Quality,Sprint 11 - Quality,Sprint 12 - Quality,Sprint 13 - Quality,Sprint 14 - Quality,Sprint 15 - Quality,Sprint 16 - Quality,Sprint 17 - Quality,,,,,,,,,,,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/17 12:58 AM;scottz;Closing this here, in order to move this task out of 1805 to be included instead within enhancement FAB-2212.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make gossip connect to anchor peers upon join channel,FAB-1913,14414,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,28/Jan/17 7:43 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 4:13 AM,,,,,,,,,0,,,,,,,,,"When the peer joins a channel it gets a list of anchor peers.
We need the gossip layer to reach out to these anchor peers and connect to them.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxjf3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
publish v1.0 alpha images for sfhackfest,FAB-1914,14415,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,28/Jan/17 10:28 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,04/Feb/17 12:44 AM,,,,,,,,,0,,,,,,,,,publish v1.0 alpha images to hyperledger docker hub account for hackfest.,,ishihara.shun,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjfb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ishihara.shun,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 1:03 PM;rameshthoomu;v1.0 images for Hackfest are being published to https://hub.docker.com/u/sfhackfest22017/dashboard/. Once Alpha is release is cut, will publish them to hyperledger dockerhub.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer is crashing while creating channel on commit#5a8973d,FAB-1915,14416,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,rameshthoomu,rameshthoomu,28/Jan/17 10:34 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Jan/17 5:35 AM,,,,,,,,,0,,,,,,,,,"peer is crashing while creating channel on below commit#
5a8973d

/opt/gopath/src/github.com/hyperledger/fabric/peer # CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050 peer channel create -c myc1
2017-01-28 01:27:14.145 UTC [msp] getPemMaterialFromDir -> INFO 001 Reading directory /etc/hyperledger/fabric/msp/sampleconfig/cacerts
2017-01-28 01:27:14.145 UTC [msp] getPemMaterialFromDir -> INFO 002 Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/cacerts/peerOrg0.pem
2017-01-28 01:27:14.145 UTC [msp] getPemMaterialFromDir -> INFO 003 Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/cacerts/peerOrg1.pem
2017-01-28 01:27:14.145 UTC [msp] getPemMaterialFromDir -> INFO 004 Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/cacerts/peerOrg2.pem
2017-01-28 01:27:14.145 UTC [msp] getPemMaterialFromDir -> INFO 005 Reading directory /etc/hyperledger/fabric/msp/sampleconfig/signcerts
2017-01-28 01:27:14.145 UTC [msp] getPemMaterialFromDir -> INFO 006 Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/signcerts/peer3Signer.pem
2017-01-28 01:27:14.146 UTC [msp] getPemMaterialFromDir -> INFO 007 Reading directory /etc/hyperledger/fabric/msp/sampleconfig/admincerts
2017-01-28 01:27:14.146 UTC [msp] getPemMaterialFromDir -> INFO 008 Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/admincerts/peerOrg0.pem
2017-01-28 01:27:14.146 UTC [msp] getPemMaterialFromDir -> INFO 009 Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/admincerts/peerOrg1.pem
2017-01-28 01:27:14.146 UTC [msp] getPemMaterialFromDir -> INFO 00a Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/admincerts/peerOrg2.pem
2017-01-28 01:27:14.146 UTC [msp] getPemMaterialFromDir -> INFO 00b Reading directory /etc/hyperledger/fabric/msp/sampleconfig/keystore
2017-01-28 01:27:14.146 UTC [msp] getPemMaterialFromDir -> INFO 00c Inspecting file /etc/hyperledger/fabric/msp/sampleconfig/keystore/peer3Signer.pem
2017-01-28 01:27:14.146 UTC [msp] NewBccspMsp -> INFO 00d Creating BCCSP-based MSP instance
2017-01-28 01:27:14.146 UTC [peer] GetLocalMSP -> INFO 00e Created new local MSP
2017-01-28 01:27:14.146 UTC [msp] Setup -> INFO 00f Setting up MSP instance DEFAULT
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 010 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 011 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 012 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 013 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 014 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 015 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.146 UTC [msp] newIdentity -> INFO 016 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.163 UTC [msp] newSigningIdentity -> INFO 017 Creating signing identity instance for ID &{DEFAULT DEFAULT}
2017-01-28 01:27:14.163 UTC [peer] GetManagerForChain -> INFO 018 Created new msp manager for chain test_chainid
2017-01-28 01:27:14.163 UTC [msp] Setup -> INFO 019 Setting up the MSP manager (1 msps)
2017-01-28 01:27:14.163 UTC [msp] Setup -> INFO 01a Setting up MSP
2017-01-28 01:27:14.163 UTC [msp] NewBccspMsp -> INFO 01b Creating BCCSP-based MSP instance
2017-01-28 01:27:14.163 UTC [msp] Setup -> INFO 01c Setting up MSP instance DEFAULT
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 01d Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 01e Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 01f Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 020 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 021 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 022 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newIdentity -> INFO 023 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-28 01:27:14.164 UTC [msp] newSigningIdentity -> INFO 024 Creating signing identity instance for ID &{DEFAULT DEFAULT}
2017-01-28 01:27:14.164 UTC [msp] Setup -> INFO 025 MSP manager setup complete, setup 1 msps
2017-01-28 01:27:14.164 UTC [logging] InitFromViper -> DEBU 026 Setting default logging level to DEBUG for command 'channel'
2017-01-28 01:27:14.164 UTC [peer] GetLocalMSP -> INFO 027 Returning existing local MSP
2017-01-28 01:27:14.164 UTC [msp] GetDefaultSigningIdentity -> INFO 028 Obtaining default signing identity
panic: open /tmp/anchorPeer.txt: no such file or directory

goroutine 1 [running]:
panic(0xb72d20, 0xc4202f03f0)
        /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/peer/common.GetDefaultAnchorPeerParser(0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/peer/common/anchors.go:47 +0x28e
github.com/hyperledger/fabric/peer/common.GetAnchorPeersParser(0x0, 0x0, 0xc4200142a8)
        /opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:91 +0x30
github.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc4202de400, 0x2, 0x2, 0xc420161bb0)
        /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:122 +0x6f0
github.com/hyperledger/fabric/peer/channel.create(0xc420212480, 0xc4202de400, 0x0, 0x2, 0x0, 0x7, 0x7)
        /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:109 +0x5c
github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc420212480, 0xc4202de400, 0x0, 0x2, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:40 +0x52
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc420212480, 0xc4202de180, 0x2, 0x2, 0xc420212480, 0xc4202de180)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x11ec7e0, 0x12, 0xc420016058, 0x28)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x11ec7e0, 0x28, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
        /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x4da
/opt/gopath/src/github.com/hyperledger/fabric/peer #
",,muralisr,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/17 10:38 AM;rameshthoomu;peer crash.txt;https://jira.hyperledger.org/secure/attachment/10407/peer+crash.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjfj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,muralisr,rameshthoomu,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/17 3:48 PM;yacovm;Hi.  Thanks for the reporting. A couple of things:

# The peer didn't crash. The CLI command crashed.
# The reason it happened is that from some reason, /tmp wasn't accessible in the CL docker container. 
The command, when not specified any anchor peer file, creates a default one temporarily in /tmp.

{quote}2017-01-28 05:55:53.011 UTC [peer] GetLocalMSP -> INFO 01b Returning existing local MSP
2017-01-28 05:55:53.011 UTC [msp] GetDefaultSigningIdentity -> INFO 01c Obtaining default signing identity
panic: open /tmp/anchorPeer.txt: no such file or directory

goroutine 1 [running]:
panic(0xb72d20, 0xc420388150)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/peer/common.GetDefaultAnchorPeerParser(0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/common/anchors.go:47 +0x28e
github.com/hyperledger/fabric/peer/common.GetAnchorPeersParser(0x0, 0x0, 0xc4200142a8)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:91 +0x30
github.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc420307500, 0x2, 0x2, 0xc420197bb0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:122 +0x6f0
github.com/hyperledger/fabric/peer/channel.create(0xc420248480, 0xc420307480, 0x0, 0x2, 0x0, 0x7, 0x7)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:109 +0x5c
github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc420248480, 0xc420307480, 0x0, 0x2, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:40 +0x52
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc420248480, 0xc420307200, 0x2, 0x2, 0xc420248480, 0xc420307200)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x11ec7e0, 0x12, 0xc420016058, 0x28)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x11ec7e0, 0x28, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x4da
/opt/gopath/src/github.com/hyperledger/fabric/peer # cd /tmp
/bin/sh: cd: can't cd to /tmp
/opt/gopath/src/github.com/hyperledger/fabric/peer # cd /
/ # ls
bin      dev      etc      host     linuxrc  opt      proc     sbin     sys      usr      var
/ # 
{quote}

;;;","28/Jan/17 10:30 PM;muralisr;[~rameshthoomu] does Yacov comment about help fix your issue ?;;;","28/Jan/17 11:03 PM;yacovm;BTW I pulled latest master now and checked and this works, and /tmp also exists in the images created by latest master with git log output below

{quote}commit cb4669694d3e6e1b0ff74b4c277df6970e35b384
Author: denyeart <enyeart@us.ibm.com>
Date:   Fri Jan 27 17:59:40 2017 -0500{quote}

2017-01-28 14:01:30.165 UTC [main] main -> INFO 051 Exiting.....
# ls -lrt
total 8
-rw-r--r-- 1 root root 5734 Jan 28 14:01 myc1.block
# ls /tmp
# ls /
bin  boot  dev	etc  home  host  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
# 
;;;","28/Jan/17 11:08 PM;rameshthoomu;[~yacovm] [~muralisr] : will test this scenario on the latest master now;;;","29/Jan/17 9:03 AM;yacovm;[~rameshthoomu] Sounds good. Please update when you can.;;;","30/Jan/17 5:34 AM;rameshthoomu;[~yacovm] Tested channel functionality on latest commits and observed create channel and join functionality is working as expected.

b3bce63 Merge ""[FAB-1913] Connect to anchor peers at join Channel"";;;","30/Jan/17 5:36 AM;yacovm;ok, I closed this issue then. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
occasional CI failures in TestTenReplicasBombedWithBroadcasts,FAB-1916,14418,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,muralisr,muralisr,28/Jan/17 10:51 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Oct/17 8:54 PM,Future,,Future,,fabric-orderer,,,,0,sbft,,,,,,,,"Hopefully a transient CI failure as a ""reverify"" works. However it has happened twice (at least) at different times. Would be good to check it out and eliminate any potential issues.

{code:java}
 |[0m --- FAIL: TestTenReplicasBombedWithBroadcasts (83.28s)
09:41:51 [33munit-tests_1  |[0m 	network_test.go:229: Failed to receive some messages. (Received 0)
{code}

https://jenkins.hyperledger.org/job/fabric-verify-x86_64/5847/console

[~yacovm] you may have some insight as well given you parallelized this test ?",,ChristopherFerris,kchristidis,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjfz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,kchristidis,muralisr,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/17 12:00 AM;yacovm;I don't think I can have insight on this.
If the failure was that it tries to bind to the same port or something, that would've been something related to parallelization . ;;;","29/Jan/17 12:00 AM;yacovm;Perhaps [~hgabre] ? ;;;","14/Apr/17 8:50 AM;ChristopherFerris;has this been resolved? [~yacovm];;;","14/Apr/17 3:15 PM;yacovm;I think it has, as I didn't see such a failure in a long, long time. but this isn't related to me, it's an sBFT test :)
I say we close this.;;;","14/Apr/17 3:25 PM;kchristidis;There is no reason for this to be tagged with v1.0 since sBFT is not a viable option for 1.0 to begin with. I am backlogging this until either Gabor resurfaces with more details or someone else starts working on sBFT.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minor updates to query chaincode api per review comments,FAB-1917,14419,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,29/Jan/17 12:17 AM,21/Jul/18 3:57 AM,28/Oct/23 2:58 AM,30/Jan/17 3:45 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"Address review comments in:
https://gerrit.hyperledger.org/r/#/c/4767/

Updates to logging and comments per Murali's feedback.

Change ExecuteQuery() to GetQueryResult() per Binh's feedback.

Fix handler.go result type (KV should be QueryRecord).

Tested that chaincode calls to GetQueryResult() work end-to-end.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxain:",,,,Unset,,Sprint 10 - Ledger,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a simpler way to update orderer config (at least in trial environments),FAB-1919,14421,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,denyeart,denyeart,29/Jan/17 4:22 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,10/Mar/17 8:47 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"In trial environments, it is very difficult to update orderer configuration.  For example to change block cutting from 10s to 1s (might want to make this the default).

I had to update orderer.yaml, and then go through these instructions and recreate the chain:

Firehawk:hyperledger sanchezl$ cd fabric/orderer/tools/
Firehawk:tools sanchezl$ ls -l
total 0
drwxr-xr-x  3 sanchezl  staff  102 Jan 24 10:00 configtemplate
Firehawk:tools sanchezl$ cd configtemplate/
Firehawk:configtemplate sanchezl$ ls -l
total 8
-rw-r--r--  1 sanchezl  staff  1697 Jan 24 10:00 main.go
Firehawk:configtemplate sanchezl$ go build 
Firehawk:configtemplate sanchezl$ ls -l 
total 27536
-rwxr-xr-x  1 sanchezl  staff  14092908 Jan 28 13:47 configtemplate
-rw-r--r--  1 sanchezl  staff      1697 Jan 24 10:00 main.go
Firehawk:configtemplate sanchezl$ ./configtemplate --help
Usage of ./configtemplate:
  -outputFile string
        The file to write the configuration templatee to (default ""orderer.template"")

Then:
cp orderer.template to $GOPATH/src/github.com/hyperledger/fabric/common/configtx/test",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxalz:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/17 8:47 AM;denyeart;Talked to Jason.  There have been many updates.  With the latest v1, the block cutting can be changed from 10s to 2s using:

CONFIGTX_ORDERER_BATCHTIMEOUT=2s peer channel create -o 127.0.0.1:7050 -c myc1
or set in
common/configtx/tool/configtx.yaml
prior to creating the genesis block.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create install command,FAB-1920,14422,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,29/Jan/17 6:18 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,07/Feb/17 9:12 AM,,,,,fabric-peer,,,,0,,,,,,,,,"{{peer chaincode install -n <name> -p <path> -v <version>}}

This command should be executed on the local peer as opposed to other commands such as ""invoke"", ""query"" which are sent to the remote peer.

On successful execution the command will create a chaincode package on the file system of the peer prefixed by the ""fileSystemPath"" as defined in core.yaml.

Example 

With default ""fileSystemPath: /var/hyperledger/production"",
   {{peer chaincode install -n mycc -p my/chain/code -v firstversion}}
will create chaincode package in  {{/var/hyperledger/production/chaincodes/mycc.firstversion}} using the chaincode defined in {{my/chain/code}}",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzx6cf:",,,,,,Sprint 10 - Endorser,Sprint 11 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make gossip service to manage connectivy for ordering service.,FAB-1924,14426,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,29/Jan/17 3:04 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,31/Jan/17 11:26 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"Currently delivery client is created each time peer joins the channel, as a consequence peers opens new connection to the ordering service instead of re-using one which already opened.

Need to factor out the part of code which instantiate delivery client from the peer part into the gossip service, this especially makes sense in light of upcoming changes related to the gossip based per chain leader election.

",,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxjgv:",,,,Unset,,Sprint 10 - Gossip,,,,,,,,,,,,,,Unset,,,,,,,,,,,C0rWin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"29/Jan/17 3:32 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/4985/3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Verify CouchDB connection upon peer startup,FAB-1925,14427,,Story,Closed,FAB,Fabric,software,denyeart,,,High,Done,chris.elder,denyeart,denyeart,29/Jan/17 7:36 PM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,27/Feb/17 9:29 AM,,,,,fabric-ledger,,,,0,ledger,,,,,,,,"Upon peer startup, if CouchDB is configured for state database, need to verify connection to CouchDB.  If can't connect to CouchDB provide a good error and halt peer startup.

Currently, it fails upon the first chain creation step:Creating KVLedger ledgerID=myc1.
Should check connection upon KVLedger provider creation.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx67j:",,,,Unset,,Sprint 10 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,Unset,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add version field to ChaincodeID,FAB-1926,14428,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,muralisr,muralisr,muralisr,30/Jan/17 12:02 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,09/Feb/17 10:41 PM,,,,,fabric-peer,,,,0,,,,,,,,,"In the previous deployment model where chaincode was stored on the channel, the LCCC maintained version information for upgrades. With the new model proposed in https://jira.hyperledger.org/browse/FAB-1783, the chaincode code is not associated with a channel, only its instantiation is. It is now the responsibility of the user to specify version. This version is a user-friendly name for the hashcode associated with the package of the chaincode and so has to be linked to it.

https://jira.hyperledger.org/browse/FAB-1920 details package creation. The package would contain 
** the chaincode {code, name, version}
** the policy for the chaincode usage
** hashcode computed with the above
** signature on the hashcode

On instantiation of the chaincode on channel, the LCCC for the channel would maintain the {name, version, hashcode, signature} for the channel. It will allow the instantiation to proceed only if the hashcode tallies.

Future launching of the chaincode (say after restart of peer) will validate the package based on the entry in the LCCC.

TODO - The security aspects of tying in version, hashcode to instantiation will be treated in a different JIRA item.",,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1783,,,,,,,,,,,,,,,FABN-215,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-37,,,,,,,,,"1|hzx6cn:",,,,,,Sprint 10 - Endorser,Sprint 11 - Endorser,,,,,,,,,,,,,,,,,,,,,,,,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"09/Feb/17 10:41 PM;muralisr;the ""adding Version"" part is complete. Moving the security aspects (and the closely related packaging) to https://jira.hyperledger.org/browse/FAB-2143.

Closing this item as done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent called chaincode on a different channel to write states,FAB-1928,14430,14217,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,binhn,binhn,30/Jan/17 12:48 AM,26/Aug/19 5:56 PM,28/Oct/23 2:58 AM,26/Aug/19 5:56 PM,,,,,fabric-peer,,,,0,,,,,,,,,The called chaincode on a different channel than the context may only read states (getState) and return value. It should not write states (putState).,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjhb:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Address security related debug logging in identities.go module,FAB-1929,14431,,Bug,Closed,FAB,Fabric,software,denyeart,,,Highest,Done,angelo.decaro,binhn,binhn,30/Jan/17 1:01 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,11/May/17 3:43 PM,,,v1.0.0,,fabric-crypto,,,,0,,,,,,,,,"The code currently has debug log stmt containing the identities. We need to decide whether these should be logged or not and in what condition to log them. Blindly putting them in debug log may causing security/privacy problems.

As propose solution, a different logger for MSP identities will be introduced. This way, logs generated by that logger can be filtered in the case they are found to contains confidential information.

 ",,binhn,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx5gv:",,,,,,Sprint 14 - Crypto,Sprint 15 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,binhn,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/17 6:26 AM;binhn;From @adc ""So, notice that also the digest might leak information if the message digested doesn't have enough entropy. 
So, I'm fine with the location. Perhaps you may want to have a more distinguishable message in such a way these lines can be filtered out easily if security concerns arises.""
;;;","11/May/17 1:02 AM;elli-androulaki;[~angelo.decaro] mentioned there are currently no security-sensitive data printed. Therefore he took the opportunity to add labels in the debug messages to enable log-filtering. Related CR: https://gerrit.hyperledger.org/r/#/c/9189/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add subscription-like API to leader election ,FAB-1930,14432,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,gennadyl,gennadyl,gennadyl,30/Jan/17 2:25 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 8:08 PM,,,v1.0.0,,fabric-gossip,,,,0,gossip,,,,,,,,Current leader election expose only synchronous IsLeader API. We want to add async subscription-like API for peer leadership status change ,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxjhr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,gennadyl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QSCC GetQueryResult does not produce valid JSON,FAB-1931,14433,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,denyeart,denyeart,30/Jan/17 3:45 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Jan/17 11:49 AM,,,,,fabric-ledger,,,,0,,,,,,,,,A comma is needed between the result set records.,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxahz:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger ExecuteQuery() should not panic on leveldb,FAB-1933,14435,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,30/Jan/17 1:52 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,30/Jan/17 8:23 PM,,,,,fabric-ledger,,,,0,,,,,,,,,"ExecuteQuery() is not supported on leveldb state
database.  Currently if called it will panic the peer.
This changeset changes it to a normal error
so that it does not kill the peer process.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxaif:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CSCC Join Channel request to be authenticated with the peer local MSP admin,FAB-1934,14436,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,angelo.decaro,ales,ales,30/Jan/17 6:39 PM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,21/Apr/17 5:40 AM,,,v1.0.0,,fabric-crypto,fabric-peer,,,0,Security,,,,,,,,"As a matter of fact, we should also put some sanity check: we can only be asked to invoke LCCC or any normal chaincode, nothing else..",,ales,binhn,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1329,,,,,,,,,"1|hzx5en:",,,,Unset,,Sprint 12 - Crypto,Sprint 13 - Crypto,Sprint 14 - Crypto,Sprint 16 - Crypto,,,,,,,,,,,Unset,,,,,,,,,,,ales,binhn,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"14/Apr/17 1:21 AM;elli-androulaki;Gerrit review:
https://gerrit.hyperledger.org/r/#/c/7651/;;;","18/Apr/17 11:18 PM;binhn;[~muralisr] [~adc] [~ellaki]
In core/committer/txvalidator/validator.go, we have the code below, but I wonder why we would do any entitlement checking here instead of on the endorser side where we process the request proposal

{code:java}
	// LCCC should not undergo standard VSCC type of
	// validation. It should instead go through system
	// policy validation to determine whether the issuer
	// is entitled to deploy a chaincode on our chain
	// VSCCValidateTx should
	if hdrExt.ChaincodeId.Name == ""lccc"" {
		// TODO: until FAB-1934 is in, we need to stop here
		logger.Debugf(""Invocation of LCCC detected, no further VSCC validation necessary"")
		return nil
	}

{code}

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use Hashing for controlling the size of rwset in the presence of range queries,FAB-1935,14437,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,manish-sethi,manish-sethi,manish-sethi,30/Jan/17 8:56 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 3:34 AM,,,,,fabric-ledger,,,,0,Ledger,,,,,,,,"In https://jira.hyperledger.org/browse/FAB-1668, we capture the read-set from the items that are consumed by a transaction in order to detect any phantom item during validation.
However, in case of certain queries the number of results in the range query can be significantly large. The proposal is to preserve in the read-write-set, the hash of the read-set related to the range queries if this is beyond certain size instead of the actual read-set.",,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjhz:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,manish-sethi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"30/Jan/17 9:01 PM;manish-sethi;Introduce two configurations enableHashing and maxDegree.
If the `hashingEnabled` is set to true, a merkle tree is built of the hashes over the read-set of a range query.

The mental model of the tree can be as below:
All the results are treated as leaf nodes (level 0) of the tree. Next up level of the tree is built by collecting 'maxDegree + 1' items from the previous level and hashing the entire collection.
Further upper levels of the tree are built in similar manner however the only difference is that unlike level-0
(where collection consists of raw KVReads), collection at level 1 and above, consists of the hashes of the collection of previous level.
This is repeated until we reach at a level where we are left with the number of items less than or equals to `maxDegree`.
In the last collection, the number of items can be less than 'maxDegree' (except if this is the only collection at the given level).

As a result, if the number of total input results are less than or equals to 'maxDegree', no hashing is performed at all.
And the final output of the computation is either the collection of raw results (if less that or equals to 'maxDegree') or
a collection of hashes (that or equals to 'maxDegree') at some level in the tree.

During validation, re-execute the range query and start building the merkle tree incrementally. As the first miss-match is detected between the two hashes (constructed during simulation and constructed during validation), the transaction is marked as invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add way to customize chaincode container logging format,FAB-1936,14438,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,wlahti,wlahti,wlahti,31/Jan/17 1:19 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Mar/17 12:25 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The chaincode container's log format is currently hard-coded and thus there is no way for a user to update it at chaincode deployment time. The peer has a logging format set in peer/core.yaml (logging.format) that is read in at startup, enabling complete customization of the format. 

For the chaincode container, two options are:
1) define a new variable in core.yaml for the chaincode container's logging format 
or 
2) reuse the logging format from the peer.

This value would be passed in to the chaincode container as an environment variable and used to set the format. 




",,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1870,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxji7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"To run the Node.js unit tests, follow the instructions <dead link>",FAB-1937,14439,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jimthematrix,jjjjibm,jjjjibm,31/Jan/17 1:30 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Apr/17 8:33 AM,,,WON'T FIX,,fabric-docs,,,,0,,,,,,,,,"This page on the hyperledger -fabric web site: http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/build/

Has this text:

Running Node.js Unit Tests

You must also run the Node.js unit tests to insure that the Node.js client SDK is not broken by your changes. To run the Node.js unit tests, follow the instructions <hyperlink named 'here'>

When you click the hyperlink, it takes you to this page: https://github.com/hyperledger/fabric-sdk-node/README.md

and displays the message Not Found.

How to recreate:
1.Enter http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/build/
in your browser navigation bar.
2.Scroll down or search page to locate this text: To run the Node.js unit tests, follow the instructions here.
3.Click the word 'here'.






",,ChristopherFerris,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjif:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ChristopherFerris,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 8:33 AM;ChristopherFerris;no longer relevant;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Read ordering service endpoints from cofig transaction.,FAB-1938,14440,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,C0rWin,C0rWin,C0rWin,31/Jan/17 2:28 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,13/Mar/17 8:07 PM,,,,,fabric-gossip,,,,0,gossip,,,,,,,,"Currently ordering service parameters configured via core.yaml file, which includes information about orderers endpoints. This need to be changed to read endpoints information from the configuration transaction, moreover need to make sure to connect to the available orderer. In order to support this peer cli should introduce additional cli parameter to provide ordering endpoint.",,binhn,bmos299,C0rWin,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-290,,,,,,,,,"1|hzx63b:",,,,Unset,,Sprint 10 - Gossip,Sprint 11 - Gossip,Sprint 12 - Gossip,Sprint 13 - Gossip,,,,,,,,,,,Unset,,,,,,,,,,,binhn,bmos299,C0rWin,ptippett,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"25/Feb/17 5:04 AM;ptippett;Hi.  Can you confirm that this also includes the ability for the peer to support connecting to a list of ordering service instances vs just a single one.
The description talks about retrying when the ordering service becomes available and logic around that, but doesn't specifically mention supporting a list of possible instances.;;;","01/Mar/17 12:35 AM;C0rWin;Yes, this is intended logic to loop over available endpoints and connect to available.;;;","01/Mar/17 2:00 AM;bmos299;I take we can specify an array of ordering services.  Can we also specify an algorithm for using the ordering service?  Round-robin, random, weighted ?  Timeout parms if the no response?

Thanks,
Barry;;;","02/Mar/17 1:26 AM;binhn;[~bmos299] No, the list comes from the config transaction on each channel, which contains the orderer endpoints.;;;","02/Mar/17 1:48 AM;bmos299;Thanks Binh. What will we do with this info in the core.yaml:
    # ----!!!!IMPORTANT!!!-!!!IMPORTANT!!!-!!!IMPORTANT!!!!----
    # THIS HAS TO BE DONE IN THE CONTEXT OF BOOTSTRAP. TILL THAT
    # IS DESIGNED AND FINALIZED, THE FOLLOWING COMMITTER/ORDERER
    # DEFINITIONS HAVE TO SERVE AS THE MEANS TO DRIVE A SIMPLE
    # SKELETON.
    #
    # All ""chaincode"" commands from CLI (except ""query"") will
    # send response from the endorser to the Committer defined below.
    committer:
        enabled: true
        ledger:
            # orderer to talk to
            orderer: 0.0.0.0:7050;;;","04/Mar/17 1:28 AM;binhn;[~C0rWin] Does https://gerrit.hyperledger.org/r/#/c/6757/  complete this item?;;;","05/Mar/17 2:10 AM;C0rWin;No, there is one last step, to probe ordering service in case of failure and establish connection upon service availability.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Commit fails when writes were sent to a ledger from parallel clients,FAB-1939,14441,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,manish-sethi,Nishi,Nishi,31/Jan/17 3:07 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 3:23 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"Input: 400 keys
Ledgers: 500
Parallel Clients: 10
#keys per tx; 4
BatchSize: 10

At the time building a block with batchSize10. Program failed with following error.

P.S. Same program war run successfully when code to Commit was locked using a sync.Mutex

2017/01/30 17:28:21 Write lock aquired for committing updates to state database
panic: validateAndPrepare() method should have been called before calling commit()

goroutine 89 [running]:
panic(0x904020, 0xc421ca2250)
    /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*LockBasedTxMgr).Commit(0xc4202712c0, 0x0, 0x0)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go:98 +0x283
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).Commit(0xc420013640, 0xc421e12bc0, 0xd50aad4, 0x9298e3e9bf942b65)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:272 +0x165
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).Commit(0xc4201caae0, 0xc421e12bc0, 0x4, 0xc421751758)
    <autogenerated>:1 +0x54
github.com/hyperledger/fabric/core/ledger/perf.buildBatchAndCommitTransactions(0x4, 0xa, 0x3c, 0x32)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:230 +0x2ee
github.com/hyperledger/fabric/core/ledger/perf.simulateWriteTx(0x4, 0x5, 0x9d27df, 0x4, 0xc8, 0xf0, 0x4, 0xc8, 0xa)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:201 +0x7c8
github.com/hyperledger/fabric/core/ledger/perf.TestWrite_Transactions.func1(0xc421898aa0, 0x28, 0x4, 0x5, 0xc421898a80, 0x0, 0x0, 0xc421898a50, 0xc421898a38, 0xc421898a68)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:150 +0xc6
created by github.com/hyperledger/fabric/core/ledger/perf.TestWrite_Transactions
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:152 +0x419",,denyeart,manish-sethi,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjin:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,manish-sethi,Nishi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 9:36 PM;manish-sethi;This panic could have happened if you invoke Commit() function on a ledger instance concurrently. You can invoke Commit() function of different ledger instances in parallel but not on of a single instance. Can you please confirm if you see this error when you Commit to different ledgers in parallel but still Commit to a particular ledger serially?;;;","08/Feb/17 3:21 AM;Nishi;I am locking a single instance of ledger to commit multiple txs on the same ledger in parallel.
Test worked fine if I have only one batch being written from all keys on a single client, if the keys make up more than one block that's when I run into a crash.;;;","08/Feb/17 5:14 AM;Nishi;This is the function where I build a single block and commit

func buildBatchAndCommitTransactions(ledgerNum int, batchSize int) {
	var globalCommitLock sync.Mutex
	chainSimulationResults := [][]byte{}
        //works for a single block hence limiting tx's to 1 block
	for qIndex := 0; qIndex < batchSize; qIndex++ {
		chainSimulationResults = append(chainSimulationResults, OpenedChannels[ledgerNum].myBatchQ[qIndex])
	}
	//construct a block from all transactions
	block1 := OpenedChannels[ledgerNum].BG.NextBlock(chainSimulationResults, false)
	curChannel := OpenedChannels[ledgerNum]
	if curChannel.myLedger == nil {
		fmt.Println(""Curchannel is NIL ******"")
	}
	//commit transactions on channel
	globalCommitLock.Lock()
	err := curChannel.myLedger.Commit(block1)
	if err != nil {
		fmt.Println(""Committed Block"")
		panic(fmt.Errorf(""Error Committing Block to Ledger: %s\n"", err))
	}
	globalCommitLock.Unlock()

	bcInfo, err := curChannel.myLedger.GetBlockchainInfo()
	if err != nil {
		fmt.Println(""Failed to get Block Chain"")
		panic(fmt.Errorf(""Failed to get Block ChainInfo: %s\n"", err))
	}
	fmt.Printf(""value in height %v:"", bcInfo)
}
;;;","08/Apr/17 3:23 AM;denyeart;I believe this was a problem with test client.  Please reopen if you think otherwise.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Split configuration.proto into more meaningful delineations,FAB-1940,14442,14381,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,31/Jan/17 3:14 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Feb/17 8:03 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjiv:",,,,,,Sprint 11 - consensus,Sprint 13 - Consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean config utils cruft ,FAB-1944,14446,14381,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,31/Jan/17 4:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Feb/17 8:03 AM,,,,,fabric-orderer,,,,0,,,,,,,,,protos/utils has become a dumping ground for inconsistent and redundant utilities.  This should be used to remove some of the unneeded stuff that will break as the configtx semantics change.,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjjr:",,,,,,Sprint 11 - consensus,Sprint 13 - Consensus,,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
U 1c6 Error while loading ledger %s with message %s. We continue to the next ledger rather than abort. testchainid Ledger already opened,FAB-1945,14447,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,jjjjibm,jjjjibm,31/Jan/17 5:02 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,08/Apr/17 4:01 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"I saw this in the log when starting fabric with attached yml file.

U 1c6 Error while loading ledger %s with message %s. We continue to the next ledger rather than abort. testchainid Ledger already opened

It seems %s should be expanded. ",vlaunch VM running Ubuntu,denyeart,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 5:02 AM;jjjjibm;docker-compose.yml;https://jira.hyperledger.org/secure/attachment/10408/docker-compose.yml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7if:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/17 4:01 AM;denyeart;Already fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ChainHeader from ConfigurationItem,FAB-1946,14448,14381,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,31/Jan/17 5:16 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Feb/17 8:03 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"In preparation of having one header across an entire update, this needs to be removed from the individual items.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjjz:",,,,,,Sprint 11 - consensus,Sprint 13 - Consensus,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connect gossip and MSP implementation,FAB-1947,14449,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,31/Jan/17 5:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 4:14 AM,,,,,,,,,0,,,,,,,,,"We need to connect the gossip with the MSP implementation of the message crypto service and the security advisor, which are interfaces that gossip uses for crypto/identity.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxjk7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add flexibility to change gopath from command line with sample node deploy,FAB-1948,14450,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,Ratnakar,Ratnakar,Ratnakar,31/Jan/17 6:56 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 12:37 PM,,,,,,,,,0,quality,,,,,,,,"Instead of changing the config.json from https://github.com/hyperledger/fabric-sdk-node/blob/master/examples/balance-transfer/config.json

Add the flexibility to change the GOPATH from node program


{panel}
ex: GOPATH=<gopath> node deploy.js
{panel}
",,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjkf:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dev,main,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"31/Jan/17 8:01 AM;Ratnakar;Submitted patches for both branches Master and v1.0-alpha

Master : https://gerrit.hyperledger.org/r/#/c/5077
v1.0-alpha : https://gerrit.hyperledger.org/r/#/c/5087;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deploy is failing on latest commits (fabric 8762744),FAB-1951,14453,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,31/Jan/17 1:40 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 1:01 PM,,,,,,,,,0,,,,,,,,,"Deploy is failing on latest commits after create and join channel:
fabric 8762744
fabric-ca: 6294c57
*DEPLOY*

CORE_PEER_ADDRESS=peer0:7051 CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:5005 peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'

Below is the log file on peer0 and cli container:

CLI: 2017-01-31 04:35:53.301 UTC [msp] Sign -> DEBU 02d Sign: digest: 9B50A73E79D5CA57096E0DC80DA79165926F8443A8F9B0BA4FE94E2976981B0A
Error: Error endorsing chaincode: rpc error: code = 2 desc = Failed to deploy chaincode spec(Error creating image: %!s(<nil>))

Usage:
  peer chaincode deploy [flags]

Global Flags:
  
PEER0:

2017-01-31 04:35:53.306 UTC [container] lockContainer -> DEBU 64f got container (peer0-peer0-mycc-0-c659a47dce16ded8af86b9f91dfc411edac0416e43dff2ced2faac39f7633bbbde2fcc9a65a5d07adaeca3513c970f7b8b9f4125848bea488e5e1cfc85db5ac0) lock
2017-01-31 04:35:53.356 UTC [dockercontroller] deployImage -> ERRO 650 Error building images: lstat src: no such file or directory
2017-01-31 04:35:53.356 UTC [dockercontroller] deployImage -> ERRO 651 Image Output:
********************
Step 1 : FROM hyperledger/fabric-ccenv:x86_64-0.7.0-snapshot-8762744
 ---> aacf3d44609f
Step 2 : COPY src $GOPATH/src

********************
2017-01-31 04:35:53.356 UTC [container] unlockContainer -> DEBU 652 container lock deleted(peer0-peer0-mycc-0-c659a47dce16ded8af86b9f91dfc411edac0416e43dff2ced2faac39f7633bbbde2fcc9a65a5d07adaeca3513c970f7b8b9f4125848bea488e5e1cfc85db5ac0)
2017-01-31 04:35:53.356 UTC [lockbasedtxmgr] Done -> DEBU 653 Done query executer/ tx simulator [82c227e4-8e8d-4c23-b124-619f5f87e048]
2017-01-31 04:35:54.381 UTC [peer] GetLocalMSP -> INFO 654 Returning existing local MSP
2017-01-31 04:35:54.381 UTC [msp] GetDefaultSigningIdentity -> INFO 655 Obtaining default signing identity
20",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjl3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 1:01 PM;rameshthoomu;Tested this on latest commits c7b3fe02ae982d974423c97bd983ecf7cb3e7deb (Fabric)  6294c57c4ac57ba713bf71ae32c6d77cdc6cae56 (fabric-ca) and observed create channel, join, deploy, invoke and query is working as expected. Closing this issue now..;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"chaincode deploy fails with defaultchain, when stateDatabase is changed to couchDB .",FAB-1953,14455,,Bug,Closed,FAB,Fabric,software,denyeart,,,High,Done,denyeart,Ratnakar,Ratnakar,01/Feb/17 12:04 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,01/Feb/17 1:46 PM,,,,,,,,,0,quality,,,,,,,,"chaincode deploy fails with defaultchain, when stateDatabase is changed to couchDB .

Commands to run 
{code:java}
cd /opt/gopath/src/github.com/hyperledger/fabric
{code}
 
{code:java}
orderer
{code}

{code:java}
 CORE_LEDGER_STATE_STATEDATABASE=CouchDB peer node start --peer-defaultchain=true
{code}

{code:java}
 CORE_PEER_MSPCONFIGPATH=./msp/sampleconfig peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'
{code}



{noformat}
CORE_PEER_MSPCONFIGPATH=./msp/sampleconfig peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'
2017-01-31 14:44:40.833 UTC [msp] getPemMaterialFromDir -> INFO 001 Reading directory msp/sampleconfig/cacerts
2017-01-31 14:44:40.834 UTC [msp] getPemMaterialFromDir -> INFO 002 Inspecting file msp/sampleconfig/cacerts/cacert.pem
2017-01-31 14:44:40.834 UTC [msp] getPemMaterialFromDir -> INFO 003 Reading directory msp/sampleconfig/signcerts
2017-01-31 14:44:40.835 UTC [msp] getPemMaterialFromDir -> INFO 004 Inspecting file msp/sampleconfig/signcerts/peer.pem
2017-01-31 14:44:40.835 UTC [msp] getPemMaterialFromDir -> INFO 005 Reading directory msp/sampleconfig/admincerts
2017-01-31 14:44:40.836 UTC [msp] getPemMaterialFromDir -> INFO 006 Inspecting file msp/sampleconfig/admincerts/admincert.pem
2017-01-31 14:44:40.837 UTC [msp] getPemMaterialFromDir -> INFO 007 Reading directory msp/sampleconfig/keystore
2017-01-31 14:44:40.837 UTC [msp] getPemMaterialFromDir -> INFO 008 Inspecting file msp/sampleconfig/keystore/key.pem
2017-01-31 14:44:40.838 UTC [msp] NewBccspMsp -> INFO 009 Creating BCCSP-based MSP instance
2017-01-31 14:44:40.838 UTC [peer] GetLocalMSP -> INFO 00a Created new local MSP
2017-01-31 14:44:40.838 UTC [msp] Setup -> INFO 00b Setting up MSP instance DEFAULT
2017-01-31 14:44:40.840 UTC [msp] newIdentity -> INFO 00c Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.840 UTC [msp] newIdentity -> INFO 00d Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.840 UTC [msp] newIdentity -> INFO 00e Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.857 UTC [peer] GetManagerForChain -> INFO 00f Created new msp manager for chain testchainid
2017-01-31 14:44:40.858 UTC [msp] Setup -> INFO 010 Setting up the MSP manager (1 msps)
2017-01-31 14:44:40.858 UTC [msp] Setup -> INFO 011 Setting up MSP
2017-01-31 14:44:40.858 UTC [msp] NewBccspMsp -> INFO 012 Creating BCCSP-based MSP instance
2017-01-31 14:44:40.858 UTC [msp] Setup -> INFO 013 Setting up MSP instance DEFAULT
2017-01-31 14:44:40.859 UTC [msp] newIdentity -> INFO 014 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.859 UTC [msp] newIdentity -> INFO 015 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.860 UTC [msp] newIdentity -> INFO 016 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.860 UTC [msp] Setup -> INFO 017 MSP manager setup complete, setup 1 msps
Error: Error endorsing chaincode: rpc error: code = 2 desc = chain does not exist(testchainid)

Usage:
  peer chaincode deploy [flags]

Global Flags:
  -C, --chainID string             The chain on which this command should be executed (default ""testchainid"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode returned by the deploy transaction
  -p, --path string                Path to chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version                    Display current version of fabric peer server

{noformat}
",,AdnanChoudhury,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 12:54 PM;Ratnakar;DB_crash_newset_jan31.zip;https://jira.hyperledger.org/secure/attachment/10412/DB_crash_newset_jan31.zip","03/Feb/17 7:30 AM;AdnanChoudhury;docker-compose-couchdb.yml;https://jira.hyperledger.org/secure/attachment/10417/docker-compose-couchdb.yml","02/Feb/17 5:44 AM;Ratnakar;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/10415/docker-compose.yaml","04/Feb/17 5:22 AM;AdnanChoudhury;docker-couchdb.yml;https://jira.hyperledger.org/secure/attachment/10418/docker-couchdb.yml","01/Feb/17 12:04 AM;Ratnakar;orderer_logs.txt;https://jira.hyperledger.org/secure/attachment/10409/orderer_logs.txt","01/Feb/17 12:04 AM;Ratnakar;peer_logs.txt;https://jira.hyperledger.org/secure/attachment/10410/peer_logs.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjlb:",,,,,,Sprint 10 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,,AdnanChoudhury,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 12:04 AM;Ratnakar;peer and orderer logs enclosed;;;","01/Feb/17 12:45 AM;denyeart;I am not able to reproduce on latest master code.  Please try on latest.  If you still see the issue, provide peer debug log.  Start peer with:
CORE_LOGGING_LEVEL=DEBUG CORE_LEDGER_STATE_STATEDATABASE=CouchDB peer node start --peer-defaultchain=true;;;","01/Feb/17 12:54 PM;Ratnakar;[~denyeart] I still see the issue on very latest commit, 
enabled the peer and orderer logs as per your suggestion.

Commit details:
{code}
Author: rameshbabu79 <rameshbabu.thoomu@gmail.com>
Date:   Tue Jan 31 23:33:04 2017 +0000

    Update docker-compose with ports and image names
    
    Updated ports and sfhackfest dockerimage names in docker-compose file
    and updated grep condition in channel_test.sh file
    
    Change-Id: Ie06c14aafda7bed4326ffd7ac1dc597cf9bb0b66
    Signed-off-by: rameshbabu79 <rameshbabu.thoomu@gmail.com>
{code}

I do see the below error in peer logs


{noformat}
2017-02-01 03:40:52.471 UTC [couchdb] CreateCouchDatabase -> ERRO 0e6 Error during CouchDB CreateDatabaseIfNotExist() for dbName: testchainid  error: Get http://127.0.0.1:5984/testchainid: dial tcp 127.0.0.1:5984: getsockopt: connection refused
create default chain [testchainid] failed with Get http://127.0.0.1:5984/testchainid: dial tcp 127.0.0.1:5984: getsockopt: connection refused2017-02-01 03:40:52.472 UTC [peer] Initialize -> INFO 0e7 Loading chain testchainid
{noformat}


attached the latest logs [DB_crash_newset_jan31.zip]
;;;","01/Feb/17 1:34 PM;denyeart;[~Ratnakar][~movee2005]
Hi, looks like you don't have couchdb started or configured.  Your peer simply can't connect to it.  If you are in vagrant environment you can run 'couchdb start' to start it.  If you are in docker environment then [~AdnanChoudhury] can help you configure it.  I think we can cancel this Bug. 

Note that there is a work item already to provide a more clear error message if peer can't find/connect to couchdb: https://jira.hyperledger.org/browse/FAB-1925.;;;","01/Feb/17 1:46 PM;Ratnakar;[~denyeart] You are right, CouchDB is not started hence the above issue.

 I was using docker based approach and didn't realized that I need to run couchdb manually when native binaries are used for starting peer and orderer

We see some issue with docker-compose (channel creation fails) , either I shall raise a new issue or will discuss with you to sort it out.


{noformat}
Error: proposal failed (err: rpc error: code = 2 desc = Get http://couchdb0:5984/myc1: dial tcp 172.18.0.3:5984: getsockopt: connection refused)
Usage:
  peer channel join [flags]
{noformat}



Thank you.;;;","02/Feb/17 5:18 AM;AdnanChoudhury;[~Ratnakar] Can you please share the docker-compose file you are using? The issue might be originating from there. ;;;","02/Feb/17 5:44 AM;Ratnakar;[~AdnanChoudhury] Here is file attached [docker-compose.yaml];;;","03/Feb/17 7:30 AM;AdnanChoudhury;[~Ratnakar] to test with a different docker-compose file and provide feedback. [^docker-compose-couchdb.yml] ;;;","04/Feb/17 5:22 AM;AdnanChoudhury;Uploaded a new compose file. This is based on the docker compose file in /examples/sfhackfest, and we added changes so that it uses couchDB (instead of the default leveldb). 
 [^docker-couchdb.yml] ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Generate test genesis block in tests.,FAB-1955,14457,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 1:01 AM,21/Jul/18 3:54 AM,28/Oct/23 2:58 AM,26/Feb/17 8:01 AM,,,,,fabric-orderer,,,,0,,,,,,,,,"The unit tests require genesis materials for their chain, but this is currently a manual and hacky process.  This story is to fix this into a more automated flow.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx69z:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate orderer template in tests.,FAB-1956,14458,14457,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 1:01 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Feb/17 8:00 AM,,,,,fabric-orderer,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjlj:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer Panic when unable to connect with kafka servers,FAB-1957,14459,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,latitiah,latitiah,01/Feb/17 1:28 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,22/Mar/17 2:23 AM,,,v1.0.0,,fabric-orderer,,,,0,kafka,,,,,,,,"When the orderer container is unable to connect to the kafka broker containers (in this case the hostname was not resolving), the orderer panics after attempting to connect 20 times unsuccessfully. 

While an exit after a critical error makes sense, it would be better if it were not a panic.

```
orderer_1    | 2017-01-30 20:02:24.779 UTC [orderer/kafka] newChain -> DEBU 037 Starting chain with last persisted offset: -3
orderer_1    | 2017-01-30 20:02:27.779 UTC [orderer/kafka] newProducer -> DEBU 038 Connecting to Kafka cluster: [kafka1:9092 kafka2:9092 kafka3:9092]
...
...
orderer_1    | 2017-01-30 20:03:24.779 UTC [orderer/kafka] newProducer -> DEBU 04b Connecting to Kafka cluster: [kafka1:9092 kafka2:9092 kafka3:9092]
orderer_1    | panic: Failed to create Kafka producer: kafka: client has run out of available brokers to talk to (Is your cluster reachable?)
orderer_1    | 
orderer_1    | goroutine 1 [running]:
orderer_1    | panic(0xa21e20, 0xc420381a20)
orderer_1    | 	/opt/go/src/runtime/panic.go:500 +0x1a1
orderer_1    | github.com/hyperledger/fabric/orderer/kafka.newProducer(0xc4202dd0c0, 0x3, 0x4, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...)
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/producer.go:51 +0x5bd
orderer_1    | github.com/hyperledger/fabric/orderer/kafka.glob..func2(0xc4202dd0c0, 0x3, 0x4, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0xc4202f5e00, ...)
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:58 +0x7d
orderer_1    | github.com/hyperledger/fabric/orderer/kafka.newChain(0xfeba40, 0xc4202e45a0, 0xfed9c0, 0xc4202e5ea0, 0xfffffffffffffffd, 0xc4202f8b50)
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:113 +0x2e7
orderer_1    | github.com/hyperledger/fabric/orderer/kafka.(*consenterImpl).HandleChain(0xc4202e45a0, 0xfed9c0, 0xc4202e5ea0, 0xc4202e96e0, 0x2, 0x2, 0x3, 0xc4202f5b80)
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:82 +0x67
orderer_1    | github.com/hyperledger/fabric/orderer/multichain.newChainSupport(0xc420318240, 0xc4203181a0, 0xc4202e8240, 0xfe4f00, 0x1029220, 0x1)
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/chainsupport.go:132 +0x565
orderer_1    | github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0xfe51c0, 0xc420242680, 0xc4202e8240, 0xfe4f00, 0x1029220, 0x0, 0x0)
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:128 +0x3cb
orderer_1    | main.main()
orderer_1    | 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:153 +0xd39
```",,kchristidis,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxjlr:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,kchristidis,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/17 4:37 AM;kchristidis;Latitia, what do you suggest as the right output?;;;","22/Mar/17 2:23 AM;latitiah;The error message in the log files is sufficient enough for describing that there is a connection problem between the orderer and the kafka brokers/cluster (""Is your cluster reachable?"");;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create MSP test template,FAB-1958,14460,14457,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 1:39 AM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,26/Feb/17 8:00 AM,,,,,,,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjlz:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create peer test template,FAB-1960,14462,14457,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 1:50 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Feb/17 8:00 AM,,,,,fabric-peer,,,,0,,,,,,,,,"Just like the orderer, and the MSPs, a peer test template needs to be created to facilitate tests which require a valid genesis block for a chain.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjmf:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup templating to normalize across peer/orderer/msp,FAB-1961,14463,14457,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 2:08 AM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,26/Feb/17 8:01 AM,,,,,fabric-orderer,fabric-peer,,,0,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjmn:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch peer tests to utilize test templates,FAB-1962,14464,14457,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 3:58 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,26/Feb/17 8:01 AM,,,,,fabric-peer,,,,0,,,,,,,,,"The peer already depends on the orderer template, but is not currently using the peer or MSP templates.  Where appropriate, especially the MSP template should be utilized.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjmv:",,,,,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Seeing TestTenReplicasBombedWithBroadcastsIfLedgersConsistent test failure many time in CI.,FAB-1964,14466,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,hgabre,C0rWin,C0rWin,01/Feb/17 4:35 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/May/17 3:06 AM,v1.0.0-alpha1,,DUPLICATE,v1.0.0-alpha1,fabric-orderer,,,,0,sbft,,,,,,,,"Seeing *TestTenReplicasBombedWithBroadcastsIfLedgersConsistent* failing on CI server for many times, here is the headline of the error. The fill trace could be found  [here|https://jenkins.hyperledger.org/job/fabric-verify-x86_64/6032/console].

{code}
19:24:44 [33munit-tests_1  |[0m 2017/01/31 19:24:42 grpc: addrConn.transportMonitor exits due to: grpc: the connection is closing
19:24:44 [33munit-tests_1  |[0m 2017-01-31 19:24:42.229 UTC [backend] connectWorker -> INFO 151[0m connecting to replica 7 (b10dba [:6016])
19:24:44 [33munit-tests_1  |[0m 2017/01/31 19:24:42 transport: http2Client.notifyError got notified that the client transport was broken EOF.
19:24:44 [33munit-tests_1  |[0m --- FAIL: TestTenReplicasBombedWithBroadcastsIfLedgersConsistent (27.32s)
19:24:44 [33munit-tests_1  |[0m 	network_test.go:246: Failed to start up receiver: grpc: timed out when dialing
19:24:44 [33munit-tests_1  |[0m panic: runtime error: invalid memory address or nil pointer dereference [recovered]
19:24:44 [33munit-tests_1  |[0m 	panic: runtime error: invalid memory address or nil pointer dereference
19:24:44 [33munit-tests_1  |[0m [signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x486898]

{code}",,C0rWin,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjnj:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 7:13 AM;C0rWin;Another failure: https://jenkins.hyperledger.org/job/fabric-verify-x86_64/6011/console
{code}
16:57:45 [33munit-tests_1  |[0m --- FAIL: TestTenReplicasBombedWithBroadcastsIfLedgersConsistent (84.47s)
16:57:45 [33munit-tests_1  |[0m 	network_test.go:264: Failed to receive some messages. (Received 10)
16:57:45 [33munit-tests_1  |[0m FAIL
16:57:45 [33munit-tests_1  |[0m coverage: 12.0% of statements
16:57:45 [33munit-tests_1  |[0m FAIL	github.com/hyperledger/fabric/orderer	94.403s
16:57:45 [33munit-tests_1  |[0m error: exit status 1
16:57:45 [33munit-tests_1  |[0m panic: EOF
16:57:45 [33munit-tests_1  |[0m 
16:57:45 [33munit-tests_1  |[0m goroutine 1 [running]:
16:57:45 [33munit-tests_1  |[0m panic(0x4daca0, 0xc42000a0f0)
16:57:45 [33munit-tests_1  |[0m 	/opt/go/src/runtime/panic.go:500 +0x1a1
16:57:45 [33munit-tests_1  |[0m main.main()
16:57:45 [33munit-tests_1  |[0m 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
16:57:46 [33munittest_unit-tests_1 exited with code 2
{code};;;","01/Feb/17 7:15 AM;C0rWin;It looks like it keeps continuously to fail, [~hgabre] is there a way to either refactor or skip it for meanwhile until got fixed?;;;","27/May/17 3:10 AM;ChristopherFerris;I believe that [~hgabre] fixed this with [https://github.com/hyperledger/fabric/commit/ae480207632392764f54abbdecb485e2b17b7fed]

closing since sbft not included in 1.0 anyway;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add chainID support to event protobuf definitions,FAB-1966,14468,15894,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,pmullaney,pmullaney,pmullaney,01/Feb/17 8:48 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,10/Jul/18 3:23 AM,,,v1.0.0,,fabric-peer,fabric-sdk-node,,,0,,,,,,,,,Protobuf additions to support multichain event registration and delivery.,,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjof:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,pmullaney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
" Ledger APIs to query Blocks/Transactions, including rich query and history of key values",FAB-1969,14471,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,Clayton Sims,Clayton Sims,01/Feb/17 11:26 AM,21/Jul/18 4:08 AM,28/Oct/23 2:58 AM,06/Jul/18 9:42 PM,,,,,fabric-ledger,,,,0,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-8,," Ledger APIs to query Blocks/Transactions, including rich query and history of key values",To Do,,,Unset,,,,"1|hzxjp3:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ad-hoc MSP config block parsing,FAB-1970,14472,14189,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,01/Feb/17 11:29 AM,05/Dec/18 5:49 AM,28/Oct/23 2:58 AM,11/Mar/17 3:28 AM,,,,,,,,,0,,,,,,,,,"The MSP implemented its own custom config block parsing as a stopgap, it is no longer needed.",,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjpb:",,,,,,,,,,,,,,,,,,,1.0,,,,,,,,,,,,jyellick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Serialize concurrent chain code transactions into block,FAB-1971,14473,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,Clayton Sims,Clayton Sims,01/Feb/17 11:31 AM,21/Jul/18 4:09 AM,28/Oct/23 2:58 AM,08/Feb/17 1:53 PM,,,v1.0.0,,fabric-orderer,,,,0,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Serialize concurrent chain code transactions into block,To Do,,,Unset,,,,"1|hzxjpj:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide an ordering service that ensures transactions are well formed with correct signatures,FAB-1972,14474,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,Clayton Sims,Clayton Sims,01/Feb/17 11:34 AM,21/Jul/18 4:09 AM,28/Oct/23 2:58 AM,05/Feb/17 10:28 AM,,,v1.0.0,,fabric-orderer,,,,0,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-4,,Provide an ordering service that ensures transactions are well formed with correct signatures,To Do,,,Unset,,,,"1|hzxjpr:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to write Smart Contracts (Chaincode) in Java,FAB-1973,14475,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,01/Feb/17 12:30 PM,14/May/19 7:05 PM,28/Oct/23 2:58 AM,21/Feb/18 6:18 AM,,,DUPLICATE,,fabric-peer,,,,2,Release-planning-1.1-TechPreview,,,,,,,,,,alacambra-db,alexcrownus,angelo.decaro,baohua,Clayton Sims,Exci,mastersingh24,mihbor,muralisr,spipes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-7121,,,,,,,FABCJ-7,,,,,FAB-6453,,,FAB-7746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-6,,Ability to write Smart Contracts (Chaincode) in Java,To Do,,,Unset,,,,"1|hzxjpz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,alacambra-db,alexcrownus,angelo.decaro,baohua,Clayton Sims,Exci,mastersingh24,mihbor,muralisr,spipes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 3:37 PM;muralisr;[~Clayton Sims] [~satheeshk] [~sanchezl] Is this a dup of other Java items ? If we have other Jira, perhaps close one ?;;;","12/Aug/17 4:10 AM;jimthematrix;From a discussion with [~binhn], [~mastersingh24], [~denyeart], moving this one into 1.1 to finish

[~sanchezl] ^^^;;;","18/Nov/17 1:51 PM;baohua;Will we support it in v1.1 or v1.2?

Thanks!;;;","18/Nov/17 11:40 PM;muralisr;[~baohua] Seems like there's some interest in the community for Java CC and some folks are using it already. It will be good to first take stock of how much it is lagging behind GO cc and what needs to be done. The basics worked off the bat for me with the CC itself just doing GET/PUT.;;;","20/Nov/17 10:58 AM;baohua;[~muralisr]

Definitely, srinivasan.

As we collect the feedback from recent meetups, the java chaincode feature really attracts lots of attention.

I hope the removal of FSM in golang side can be done soon, then the team can start the java cc support feature. @[~gujingxiao].

Thanks!;;;","21/Nov/17 12:34 AM;muralisr;[~baohua] I plan to begin working on the FSM removal soon. I'm hoping that the each language (GO, Java, Node) can remove it at its own pace from the shim side.;;;","21/Nov/17 11:15 AM;baohua;[~muralisr], that's it.

Btw, if we remove FSM, how would we keep the state? With conditional checking?

 

Ref:

* Remove FSM JIRA issue: https://jira.hyperledger.org/browse/FAB-5424

 ;;;","08/Jan/18 8:24 PM;alexcrownus;Any update on this?;;;","08/Jan/18 11:52 PM;muralisr;[~baohua] [~alexcrownus] sorry for delayed response... removing the FSM in the chaincode support side in the peer should have no effect on the chaincode. In fact the FSM removal has made great progress and have been tested with both GO and Java chaincodes. The GO chaincode also removed FSM but I deliberately left the Java chaincode alone to prove that both sides are independent and removing the fSM on the peer side will have no impact on the chaincode side.

However all this work came too late for 1.1 and is now currently slated for 1.2. Given that we can remove the FSM from Java side any time we want I'd recommend continuing with feature upgrade to the Java chaincode and completing the work.

([~sanchezl] );;;","09/Jan/18 12:32 AM;angelo.decaro;[~Clayton Sims], [~baohua], [~alexcrownus], [~muralisrini], [~sanchezl]

I would really love to have the java chaincode available as soon as possible. There are multiple libraries written in Java that we could leverage to support chaincode development. Is there a plan when this will be released? May I help in some way? :);;;","21/Feb/18 6:20 AM;mastersingh24;I'm closing this as we have FAB-8063;;;",,,,,,,,,,,,,,,,,,,,,,,
Ability to write Smart Contracts (Chaincode) in Go,FAB-1974,14476,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,01/Feb/17 12:31 PM,21/Jul/18 4:08 AM,28/Oct/23 2:58 AM,05/Apr/17 4:59 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-8,,Ability to write Smart Contracts (Chaincode) in Go,To Do,,,Unset,,,,"1|hzxjq7:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to create endorsement policies for a chaincode during deployment,FAB-1975,14477,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,01/Feb/17 12:33 PM,21/Jul/18 4:09 AM,28/Oct/23 2:58 AM,05/Apr/17 4:59 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-1,,Ability to create endorsement policies for a chaincode during deployment,To Do,,,Unset,,,,"1|hzxjqf:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove  vendor/golang.org/x/net/context,FAB-1976,14478,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,grapebaba,muralisr,muralisr,01/Feb/17 1:09 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,17/Feb/17 6:24 PM,,,,,fabric-peer,,,,0,help-wanted,,,,,,,,"remove  {{vendor/golang.org/x/net/context}} and replace imports {{golang.org/x/net/context}} with {{context}}

Per golang 1.7 notes

{code:java}
Context
Go 1.7 moves the golang.org/x/net/context package into the standard library as context. This allows the use of contexts for cancelation, timeouts, and passing request-scoped data in other standard library packages, including net, net/http, and os/exec, as noted below.

For more information about contexts, see the package documentation and the Go blog post “Go Concurrent Patterns: Context.”


{code}
",,binhn,grapebaba,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 4:20 PM;grapebaba;comm_impl.go.jpg;https://jira.hyperledger.org/secure/attachment/10413/comm_impl.go.jpg","01/Feb/17 4:20 PM;grapebaba;message.pb.go.jpg;https://jira.hyperledger.org/secure/attachment/10414/message.pb.go.jpg",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjqn:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,binhn,grapebaba,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 6:35 PM;grapebaba;[~muralisr]Two problems
1.Refer to https://github.com/grpc/grpc-go/issues/711, protogen still not support 1.7 context
2.If we have interface in *pb.go and use context as a arg, the implementation cannot use 1.7 context too.;;;","07/Feb/17 10:10 PM;muralisr;Thanks [~grapebaba].

To summarize,
** we wanted to move to using ""context"" package instead of ""golang.org/x/net/context"" and remove ""vendor/golang.org/x/net/context""
** however protogen does not support ""context"" yet per [~grapebaba] investigation
** some files in fabric are already using ""context"" while majority use ""golang.org/x/net/context""

We have two options
# leave things as they are with a mixture of ""context"" and ""golang.org/x/net/context""
# make sure all packages use ""golang.org/x/net/context"" in fabric till we can move to ""context"" wholesale

If both packages can coexist, there's no reason to reverse any changes. 

[~grapebaba] do you know of any reason they should not coexist ? 

[~binhn] [~ChristopherFerris] [~greg.haskins] [~mastersingh24]
;;;","08/Feb/17 4:40 AM;binhn;It looks like we should leave it as-is. It doesn't look like proto is going to change any time soon as it has to maintain backward compatibility with 1.7 and 1.6;;;","08/Feb/17 12:07 PM;grapebaba;[~muralisr]I think they can coexist. Only one cons that it looks like inconsistent in fabric code base. ;;;","08/Feb/17 12:13 PM;muralisr;Let's leave it as it is then.

Thank you [~grapebaba] for all your investigation and work on this !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
shim.GetCallerCertificate() always returns empty array,FAB-1977,14479,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,DrVadson,DrVadson,01/Feb/17 9:49 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Feb/17 12:03 AM,,,,,,,,,0,,,,,,,,,"When executing shim.GetCallerCertificate(), it returns an empty array and no errors. In the code the stub.proposalContext.Transient field is returned, while it should probably be the Creator field instead. See https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L483
",,DrVadson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjqv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DrVadson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/17 12:03 AM;DrVadson;Fixed in https://gerrit.hyperledger.org/r/#/c/5091/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple roots of trust,FAB-1978,14480,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,elli-androulaki,elli-androulaki,01/Feb/17 11:15 PM,21/Jul/18 4:09 AM,28/Oct/23 2:58 AM,14/Apr/17 1:16 AM,,,v1.0.0,,fabric-crypto,,,,0,Security,,,,,,,,"As an infrastructure developer I want o be able to define and leverage multiple MSPs (or roots of trust) on the same channel 
This item relates for the fabric infrastructure to support multiple MSPs within the same deployment. This includes
- ability to define / configure multiple verifier MSPs in the genesis of a channel
- ability to leverage these MSPs for defining access policies for chain/chaincode rights
- ability to re-configure verifier MSPs in a secure/modular way within a channel

The work described here relates to the design associated to multi-MSP support from an access control perspective, but also of chain reconfiguration as well as the implementation of the respective components.
",,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,ghx-label-3,,Multi-MSP management,To Do,,,Unset,,,,"1|hzx6yv:",,,,Unset,Unset,Sprint 10 - Crypto,,,,,,,,,,,,,,,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
As an infrastructure developer I want to be able to leverage a per-chain MSPManager to contain all chain's MSPs,FAB-1979,14481,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,elli-androulaki,elli-androulaki,01/Feb/17 11:23 PM,21/Jul/18 3:53 AM,28/Oct/23 2:58 AM,22/Feb/17 4:23 PM,,,,,fabric-crypto,,,,0,Security,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,FAB-1321,,,,,,,,,"1|hzxk5j:",,,,Unset,,Sprint 10 - Crypto,Sprint 12 - Crypto,,,,,,,,,,,,,Unset,,,,,,,,,,,elli-androulaki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/17 9:56 PM;elli-androulaki;I believe this is already done, no?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"No PKCS11 library found, skipping/failing PKCS11 tests for Power",FAB-1980,14482,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,bsmita,bsmita,bsmita,01/Feb/17 11:28 PM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,14/Feb/17 12:02 AM,,,v1.0.0,,,,,,1,quality,,,,,,,,"Testcases in /fabric/bccsp/pkcs11 fail with the following errors:

unit-tests_1  | ok      github.com/hyperledger/fabric/bccsp/factory     0.004s  coverage: 50.8% of statements
unit-tests_1  | 2017/01/31 18:29:58 KeyStore path [/tmp] missing [false]: [<clean>]
unit-tests_1  | 2017/01/31 18:29:58 KeyStore opened at [/tmp]...done
unit-tests_1  | No PKCS11 library found, skipping PKCS11 tests2017/01/31 18:29:58 KeyStore path [/tmp/bccspks] missing [true]: [<clean>]
unit-tests_1  | 2017/01/31 18:29:58 Creating KeyStore at [/tmp/bccspks]...
unit-tests_1  | 2017/01/31 18:29:58 KeyStore created at [/tmp/bccspks].
unit-tests_1  | 2017/01/31 18:29:58 KeyStore opened at [/tmp/bccspks]...done
unit-tests_1  | 2017/01/31 18:29:58 Failed converting public key to PEM []: [Invalid rsa public key. It must be different from nil.]
unit-tests_1  | 2017/01/31 18:29:58 Failed converting private key to PEM []: [Invalid rsa private key. It must be different from nil.]
unit-tests_1  | 2017/01/31 18:29:58 Failed converting key to PEM [4bf5122f344554c53bde2ebb8cd2b7e3d1600ad631c385a5d7cce23c7785459a]: [Invalid aes key. It must be different from nil]
unit-tests_1  | 2017/01/31 18:29:58 Failed converting key to PEM [4bf5122f344554c53bde2ebb8cd2b7e3d1600ad631c385a5d7cce23c7785459a]: [Invalid aes key. It must be different from nil]
unit-tests_1  | --- FAIL: TestInvalidSKI (0.00s)

Fix:
By specifying the right path for libsofthsm2.so in /fabric/bccsp/pkcs11/impl_test.go this testcase passes",,bsmita,harsha544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjr3:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bsmita,harsha544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"02/Feb/17 3:50 AM;bsmita;Dropped changes to fix this to https://gerrit.hyperledger.org/r/#/c/5197/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow other chain hashing parameters,FAB-1983,14485,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,jyellick,jyellick,02/Feb/17 12:02 AM,23/Jan/20 3:49 AM,28/Oct/23 2:58 AM,23/Jan/20 3:49 AM,,,,,fabric-orderer,,,,0,common-components,stale-item,,,,,,,"Per FAB-1700 and FAB-1699, the chain hashing parameters are now included in the chain configuration.  However, for the v1 release it was not practical to actually utilize these values, so instead they are required at a fixed size until they can be implemented.

The chainconfig.Descriptor carries these values, but no one is currently consuming them.

This additionally includes implementing a Merkle tree for the block data structure.",,jyellick,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxjrr:",,,,Unset,,,,,,,,,,,,,,,8.0,Unset,,,,,,,,,,,jyellick,kchristidis,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"08/Mar/18 12:26 AM;kchristidis;Confused as to what the plan is here?;;;","08/Mar/18 12:42 AM;jyellick;Initially, the blockchain was being hased using the SHA3 Shake256 algorithm.  There were some problems with this, and so we had to move back to SHA256.  At the time, we adding a 'HashingAlgorithm' to the channel config so that we could differentiate between these two hash types.  However, we never got around to allowing you to switch it.

So, for a concrete plan, we need to remove references to the {{Block.Hash()}} method, and instead either inject a hashing algorithm via a call like {{Block.Hash(AlgorithmImpl)}} or we need to supply a ""BlockHasher"" via the channel config which accepts a block and returns a hash.  Either way, this would actually go a long ways towards making our builds faster, as it would prevent our protos from having to import the whole crypto suite as they do today.;;;","23/Jan/20 3:49 AM;sykesm;Stale;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove GetQueryResult from QSCC,FAB-1984,14486,14094,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,denyeart,denyeart,denyeart,02/Feb/17 12:20 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,12/Feb/17 10:00 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"Remove GetQueryResult from QSCC.

In order to control access, all queries will need to go through
application chaincode.  See marbles02 for an example of calling
GetQueryResult from application chaincode.

In the future if there is capability to place ACL on peer APIs,
then it would be possible to expose GetQueryResult as a peer
API (or via QSCC).",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7rb:",,,,,,Sprint 10 - Ledger,Sprint 11 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scope rich queries to calling chaincode context (interface changes),FAB-1985,14487,14627,Sub-task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,chris.elder,denyeart,denyeart,02/Feb/17 12:21 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,16/Feb/17 1:47 AM,,,,,fabric-ledger,,,,0,,,,,,,,,"Need to inject chaincodeid filter on rich queries called from chaincode.
Need to add a parameter to QSCC GetQueryResult() to scope queries to a certain chaincode.
This is the first change to make interface and method signature changes.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzx7qv:",,,,,,Sprint 11 - Ledger,Sprint 12 - Ledger,,,,,,,,,,,,,,,,,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to use an existing (commercial) CA,FAB-1986,14488,,Epic,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,Clayton Sims,Clayton Sims,02/Feb/17 12:34 AM,21/Jul/18 4:08 AM,28/Oct/23 2:58 AM,19/Apr/17 10:14 PM,,,v1.0.0,,,,,,0,,,,,,,,,,,Clayton Sims,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-824,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,Unset,,,,,,,Unset,,,,"1|hzxjrz:",,,,Unset,Unset,,,,,,,,,,,,,,,,,,,,,,,,,,Clayton Sims,smithbk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Apr/17 10:14 PM;smithbk;This was completed with MSP in fabric.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
newBroker utility might not connect to kafka over tls,FAB-1987,14489,,Bug,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,kchristidis,sanchezl,sanchezl,02/Feb/17 12:49 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,27/May/17 12:41 PM,,,v1.0.0,,fabric-orderer,,,,0,kafka,,,,,,,,"In {{func newBroker}}, in {{orderer/kafka/broker.go}}:
{code}
candidateBroker.Open(nil)
{code}
This will fail if Kafka is configured to use TLS only.",,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjnr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,kchristidis,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/May/17 12:41 PM;kchristidis;Doing some mini-refactoring and UT writing for the kafka package (FAB-4184) and will be removing all `broker*.go` files since they are not used anywhere (as you had observed a while back). Closing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Able to create a channel without running a peer,FAB-1988,14490,,Bug,Closed,FAB,Fabric,software,denyeart,,,Low,Done,muralisr,latitiah,latitiah,02/Feb/17 1:16 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,03/Apr/17 1:39 AM,,,v1.0.0,,fabric-peer,,,,0,,,,,,,,,"Stumbled upon this while trying to set up a channel between 2 peers. It is possible to create a channel before a peer is running. An error is displayed only when trying to join the channel. ```Error: Error getting endorser client channel: PEER_CONNECTIONERROR - Error trying to connect to local peer: grpc: timed out when dialing```

An error or at least a warning should be generated if a peer is not running when a channel is created.",,C0rWin,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjs7:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C0rWin,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/17 4:54 PM;C0rWin;Hi, 

The ability of creating a channel is not really related to the fact whenever peer is running or not, since channel created by submitting genesis block to the ordering service. In fact the peer doesn't have to be up and running, moreover later when peer joins the channel ordering service doesn't have to be available.;;;","02/Apr/17 10:49 PM;mastersingh24;[~latitiah] - is this still an issue?;;;","03/Apr/17 1:40 AM;latitiah;Closing this issue as this works as designed.  Thanks! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add organizationID / MSP-ID to anchor peers,FAB-1990,14492,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,yacovm,yacovm,yacovm,02/Feb/17 3:49 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,02/Feb/17 4:14 AM,,,,,,,,,0,,,,,,,,,"The PEM certificate of an anchor peer that is serialized into a configuration block is converted to a serialized identity by using the raw bytes of the PEM but also a default string that represents the MSP ID.

https://gerrit.hyperledger.org/r/#/c/5123/ is going to replace the local MSP's id which is always DEFAULT to a string configured in core.yaml.

Therefore, in order for peers to be able to validate certificates of anchor peers, we need to add the MSP-ID (will be called in the CLI ""organization ID"" to conform with the most common use-case) into the anchor peers and also into the CLI command that generates the genesis block.",,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,,,,,,,,,"1|hzxjsf:",,,,,,Sprint 10 - Gossip,,,,,,,,,,,,,,,,,,,,,,,,,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Move configtx signatures to be across whole config, not just individual items",FAB-1992,14494,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,jyellick,jyellick,jyellick,02/Feb/17 4:37 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,25/Feb/17 4:32 AM,,,,,fabric-orderer,,,,0,common-components,,,,,,,,"The current configtx scheme is a collection of signed configuration items.  This has the benefit of being very flexible, allowing a submitter to collect signatures from one set of parties for one set of items, a second set of signatures from a second set of parties for a second set of items, and then glue them together, and submit a valid reconfiguration.

However, this flexibility comes at the expense of requiring more signatures, and the added complexity does not seem worth the added flexibility.  This CR moves the signatures to the envelope level, but maintains the per item policy evaluation.",,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1880,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx6a7:",,,,Unset,,Sprint 10 - consensus,Sprint 11 - consensus,Sprint 12 - consensus,,,,,,,,,,,3.0,Unset,,,,,,,,,,,jyellick,kchristidis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,"05/Feb/17 10:32 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/5413/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
support intermediate CA's in MSP,FAB-1994,14496,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,ales,ales,ales,02/Feb/17 6:07 AM,21/Jul/18 3:55 AM,28/Oct/23 2:58 AM,14/Feb/17 4:52 AM,,,,,fabric-crypto,,,,0,,,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzxjt3:",,,,Unset,,Sprint 11 - Crypto,,,,,,,,,,,,,,Unset,,,,,,,,,,,ales,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update python modules to test behave tests in CI environment,FAB-1997,14499,,Task,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,rameshthoomu,rameshthoomu,02/Feb/17 6:49 AM,20/Jul/18 11:11 PM,28/Oct/23 2:58 AM,28/Feb/17 11:21 PM,,,,,,,,,0,,,,,,,,,"update python modules to test behave test scenarios in CI environment. Below are the modules required: More information is available here https://jira.hyperledger.org/browse/FAB-1141

sudo pip install --upgrade grpcio-tools
sudo pip install ""pysha3==1.0b1""
sudo pip install pyopenssl
sudo pip install ecdsa
sudo pip install python-slugify",,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzxjtr:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/17 9:37 AM;ryjones;https://gerrit.hyperledger.org/r/#/c/6333/;;;","28/Feb/17 11:21 PM;rameshthoomu;Patch has been submitted and merged. Closing this issue ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation Request: Getting Started (Windows),FAB-1998,14500,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Won't Do,,mario02423,mario02423,02/Feb/17 7:00 AM,30/Jul/19 11:42 AM,28/Oct/23 2:58 AM,30/Jul/19 11:42 AM,,,,,fabric-quality,,,,0,Documentation,quality,v1.0,,,,,,"As discussed at Fabric Documentation breakout at Hackfest...

On http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv/, attention is paid to Windows environments in some sections; however, all commands are listed with *nix conventions (variables as $variable instead of %variable%, native use of scp). It would be useful to expand these sections (Cloning the Fabric Project comes to mind) with Windows commands/utilities.",,mario02423,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,FAB-2019,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7xb:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,mario02423,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 11:42 AM;mastersingh24;Open 1 year or more with no activity ... time to cleanup;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add ""Documentation"" component to JIRA",FAB-1999,14501,,Story,Closed,FAB,Fabric,software,denyeart,,,Medium,Done,,mario02423,mario02423,02/Feb/17 7:02 AM,21/Jul/18 3:56 AM,28/Oct/23 2:58 AM,14/Oct/17 3:40 AM,,,,,fabric-quality,,,,0,documentation,,,,,,,,"As discussed at Hackfest, would be useful to have ""fabric-documentation"" component on JIRA for tracking documentation requests/bugs/improvements. ""Quality"" is misleading and may not be the most appropriate component.",,ChristopherFerris,mario02423,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,,"1|hzx7xj:",,,,Unset,,,,,,,,,,,,,,,,Unset,,,,,,,,,,,ChristopherFerris,mario02423,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/17 3:40 AM;ChristopherFerris;closing this. there is and has been a fabric-docs component for some time now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
