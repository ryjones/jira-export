<Issue id="46536" key="FABCAG-34" number="34" project="11206" reporter="JIRAUSER21381" creator="JIRAUSER21381" type="10004" summary="Error when using field with byte array type" priority="3" status="10300" created="2021-02-04 09:49:10.0" updated="2021-02-08 15:44:53.0" votes="1" watches="2" workflowId="60479" archived="N"> <description><! CDATA I work with fabric-contract-api in Go and want to use struct with field with byte array type ( for example, I need it to use UUID type).  I have next code: {code:java} import ( "encoding/json" "fmt"  "github.com/hyperledger/fabric-contract-api-go/contractapi" )  type SmartContract struct { contractapi.Contract }  type Asset struct { ID string B   byte }  func (s *SmartContract) Add(ctx contractapi.TransactionContextInterface, ID string) error { a := Asset{ ID: ID, B:   byte{'1'}, }  data, err := json.Marshal(a) if err != nil { return fmt.Errorf("can not marshal: %w", err) } return ctx.GetStub().PutState(ID, data) }  func (s *SmartContract) Get(ctx contractapi.TransactionContextInterface, ID string) (*Asset, error) { data, err := ctx.GetStub().GetState(ID) if err != nil { return nil, fmt.Errorf("failed to read from world state: %w", err) }  if data == nil { return nil, fmt.Errorf("%s does not exist", ID) } a := new(Asset) err = json.Unmarshal(data, a) if err != nil { return nil, fmt.Errorf("can not unmarshal: %v", err) } return a, nil }{code} I can successfully add new asset to chaincode, but when I try to read from chaincode with {code:java} peer chaincode query -C mychannel -n fabcar -c '{"Args": "Get,"1" }'{code} I get next error {code:java} Error: endorsement failure during query. response: status:500 message:"Error handling success response. Value did not match schema:\n1. return.B: Invalid type. Expected: array, given: string"   {code} But if I replace type of B to string array or int array, I don`t get such error. So it looks like that there is unnecessary conversion of byte array to string.  Is there a way to fix it without replacing type from byte array? Or it is some bug with conversion?   My hyperledger version: {code:java} $peer version peer: Version: 2.2.0 Commit SHA: 5ea85bc Go version: go1.14.4 OS/Arch: linux/amd64 Chaincode: Base Docker Label: org.hyperledger.fabric Docker Namespace: hyperledger{code}   PS. I make minimal possible error case. If I add such function to contract {code:java} func (s *SmartContract) Test(ctx contractapi.TransactionContextInterface)   byte {     return   byte{'1', '2'} }{code}  and call it on the peer {code:java} $peer chaincode query -C mychannel -n fabcar -c '{"Args": "Test" }' {code} then I get error on the peer  {code:java} Error: endorsement failure during query. response: status:500 message:"Error handling success response. Value did not match schema:\n1. return: Invalid type. Expected: array, given: string" {code}    ></description> </Issue>
