<Issue id="31038" key="FABJ-234" number="234" project="10605" reporter="osesov" creator="osesov" type="10004" summary="Block events duplicated" environment="maven release: group: &apos;org.hyperledger.fabric-sdk-java&apos;, name: &apos;fabric-sdk-java&apos;, version: &apos;1.1.0&apos;" priority="3" resolution="10000" status="6" created="2018-06-13 17:15:43.0" updated="2018-07-19 00:20:50.0" resolutiondate="2018-06-18 13:25:13.0" votes="0" watches="3" workflowId="33672"> <description><! CDATA Block events duplicate when come to client side. {quote}2018-06-13 15:03:23,534 grpc-default-executor-2 DEBUG EventHub:206 - EventHub peer0.luxoft.com got event type: BLOCK 2018-06-13 15:03:23,537 pool-9-thread-1 DEBUG Channel:3776 - Channel z-channel got event for transaction _*a4d31ffe54e191772babbba99977c1d0dcf8a41a606fe274d28207bdd2887f59*_  2018-06-13 15:03:23,540 pool-8-thread-1 DEBUG Channel:3776 - Channel z-channel got event for transaction _*a4d31ffe54e191772babbba99977c1d0dcf8a41a606fe274d28207bdd2887f59*_ {quote} Issue happens due to using two ways of delivering events: EventHub class listens to EventsGrpc events: {code:java} synchronized boolean connect() { ... if (event.getEventCase() == EventCase.BLOCK) { ... EventHub.this.eventQue.addBEvent(blockEvent); } } {code} Â  another in PeerEventServiceClient, while listening for deliverFiltered or deliver streams: {code:java} void connectEnvelope() { ... if (typeCase == FILTERED_BLOCK || typeCase == BLOCK) { ... channelEventQue.addBEvent(blockEvent); } } {code}  ></description> </Issue>
