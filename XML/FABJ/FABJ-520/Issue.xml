<Issue id="45228" key="FABJ-520" number="520" project="10605" reporter="JIRAUSER20229" creator="JIRAUSER20229" type="10004" summary="Create channel but orderer report &quot; consenter error&quot;" priority="2" status="10300" created="2020-06-09 03:28:07.0" updated="2020-11-19 10:46:09.0" votes="0" watches="1" workflowId="59140" archived="N"> <description><! CDATA The orderer logs {code:java} 2020-06-04 09:33:07.858 UTC  orderer.consensus.etcdraft  run -> INFO 042 This node is picked to start campaign channel=mychannel2 node=1 2020-06-04 09:33:07.869 UTC  orderer.consensus.etcdraft  apply -> INFO 043 Applied config change to add node 1, current nodes in channel:  1  channel=mychannel2 node=1 2020-06-04 09:33:07.905 UTC  comm.grpc.server  1 -> INFO 044 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=172.17.0.2:52614 grpc.code=OK grpc.call_duration=156.894904ms 2020-06-04 09:33:07.955 UTC  common.deliver  deliverBlocks -> WARN 045  channel: mychannel2  Rejecting deliver request for 172.17.0.2:52614 because of consenter error {code} I have read the source code, find that when I create a channel, it'll check successful immediately. {code:java} private Channel(String name, HFClient hfClient, Orderer orderer, ChannelConfiguration channelConfiguration, byte     signers) throws InvalidArgumentException, TransactionException { this(name, hfClient, false); logger.debug(String.format("Creating new channel %s on the Fabric", name)); Channel ordererChannel = orderer.getChannel();  try { this.addOrderer(orderer); Envelope ccEnvelope = Envelope.parseFrom(channelConfiguration.getChannelConfigurationAsBytes()); Payload ccPayload = Payload.parseFrom(ccEnvelope.getPayload()); ChannelHeader ccChannelHeader = ChannelHeader.parseFrom(ccPayload.getHeader().getChannelHeader()); if (ccChannelHeader.getType() != HeaderType.CONFIG_UPDATE.getNumber()) { throw new InvalidArgumentException(String.format("Creating channel; %s expected config block type %s, but got: %s", name, HeaderType.CONFIG_UPDATE.name(), HeaderType.forNumber(ccChannelHeader.getType()))); } else if (!name.equals(ccChannelHeader.getChannelId())) { throw new InvalidArgumentException(String.format("Expected config block for channel: %s, but got: %s", name, ccChannelHeader.getChannelId())); } else { ConfigUpdateEnvelope configUpdateEnv = ConfigUpdateEnvelope.parseFrom(ccPayload.getData()); ByteString configUpdate = configUpdateEnv.getConfigUpdate(); this.sendUpdateChannel(this.client.getUserContext(), configUpdate.toByteArray(), signers, orderer); this.getGenesisBlock(orderer); {code} But the orderer is voting to select a leader, "getGenesisBlock”  will break it, cause "consenter error".  If I take a breakpoint at "getGenesisBlock" and wait a moment, everything is OK.  ></description> </Issue>
