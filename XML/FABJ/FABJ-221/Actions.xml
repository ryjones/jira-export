<Action id="26558" issue="18144" author="rickr" type="comment" created="2017-06-16 14:38:37.0" updateauthor="rickr" updated="2017-06-16 14:38:37.0"> <body><! CDATA Can we get a full log of this both with peers and orderers at debug and SDK with debug.  SDK debug can be enabled with env variable being set.  ORG_HYPERLEDGER_FABRIC_SDK_LOGLEVEL=TRACE     If possible please upload this as attachments  thanks.  ></body> </Action>
<Action id="26569" issue="18144" author="kchristidis" type="comment" body="(Resetting to default priority – whoever ends up handling this should assess priority and update the field accordingly.)" created="2017-06-16 15:12:47.0" updateauthor="kchristidis" updated="2017-06-16 15:12:47.0"/>
<Action id="26572" issue="18144" author="rickr" type="comment" created="2017-06-16 15:18:08.0" updateauthor="rickr" updated="2017-06-16 15:18:08.0"> <body><! CDATA In channel.java can you update the code   private Envelope createTransactionEnvelope(Payload transactionPayload, User user) throws CryptoException \{  *{color:#d04437}String mykey = user.getEnrollment().getKey().toString();{color}* *{color:#d04437}logger.error(format("user %s, mspid %s and my key is: %s", user.getName(), user.getMspId(), mykey));{color}*  return Envelope.newBuilder() .setPayload(transactionPayload.toByteString()) .setSignature(ByteString.copyFrom(client.getCryptoSuite().sign(user.getEnrollment().getKey(), transactionPayload.toByteArray()))) .build();  }        Compare the keys being used between the successful orderer transaction and the failed one ?  Or do this in a debugger?     Can I also assume in both channels being used the same crypto hash algorithm/strength is being used ?   ></body> </Action>
<Action id="26575" issue="18144" author="clayton sims" type="comment" created="2017-06-16 15:53:19.0" updateauthor="clayton sims" updated="2017-06-16 15:53:19.0"> <body><! CDATA I am on with CLS.   They want to confirm this is all the logs you need,  if you require others they want to collect them all at once.      ></body> </Action>
<Action id="26578" issue="18144" author="rickr" type="comment" created="2017-06-16 15:55:50.0" updateauthor="rickr" updated="2017-06-16 15:58:32.0"> <body><! CDATA Better than that S value that may not really identify the key is in a debugger look at the *{color:#d04437}d{color}* value of the key.  Comparing these when it's succesfull and when it's not we'll know if the sdk is using the samekey in both cases.        !image-2017-06-16-11-55-36-212.png!     C  ></body> </Action>
<Action id="26579" issue="18144" author="rhegde" type="comment" created="2017-06-16 15:59:57.0" updateauthor="rhegde" updated="2017-06-16 15:59:57.0"> <body><! CDATA We will do as suggested, do let us know if we need to set any other docker-environment-variable (orderer) so we can run single test.   ></body> </Action>
<Action id="26585" issue="18144" author="rickr" type="comment" created="2017-06-16 16:24:01.0" updateauthor="rickr" updated="2017-06-16 16:24:47.0"> <body><! CDATA If you're using the beta docker-compose of the SDK it should be set. It's also now it the latest readme.md documented      What's really important is see the d value between the two.  ></body> </Action>
<Action id="26586" issue="18144" author="rickr" type="comment" created="2017-06-16 16:38:56.0" updateauthor="rickr" updated="2017-06-16 16:38:56.0"> <body><! CDATA Having the ecSpec between the too which is below the d value is helpful too if you can get that  !image-2017-06-16-12-38-05-728.png!  ></body> </Action>
<Action id="26737" issue="18144" author="clayton sims" type="comment" body=" ~rhegde    any update on getting the info back to Rick?" created="2017-06-19 13:53:48.0" updateauthor="clayton sims" updated="2017-06-19 13:53:48.0"/>
<Action id="26745" issue="18144" author="rhegde" type="comment" created="2017-06-19 14:25:09.0" updateauthor="rhegde" updated="2017-06-19 14:25:09.0"> <body><! CDATA  ~rickr   ~Clayton Sims   Public and Private channel were using different users (admin and user1) as per our setup. It is successful upon using Admin however fails for user1, we will share logs in next 4-6hours as we are blocked with our own internal issue as of now.  ></body> </Action>
<Action id="26757" issue="18144" author="rickr" type="comment" created="2017-06-19 15:05:10.0" updateauthor="rickr" updated="2017-06-19 15:05:10.0"> <body><! CDATA This last comment  is different then what was first stated.  It's now not even clear can the Admin access both channels and the user1 can only do public and not private ?  Can user1 access anything ?     ></body> </Action>
<Action id="26758" issue="18144" author="jyellick" type="comment" created="2017-06-19 15:10:08.0" updateauthor="jyellick" updated="2017-06-19 15:10:08.0"> <body><! CDATA  ~rhegde  The scenario I worked through with you on rocketchat had the same user submitting on both channels.  We observed in the log that the identity provided (certificate) was identical for both broadcast requests in both channels, but the signature validated in the public channel and failed to validate in the private channel.  Based on your most recent comment:  > Public and Private channel were using different users (admin and user1) as per our setup. It is successful upon using Admin however fails for user1, we will share logs in next 4-6hours as we are blocked with our own internal issue as of now.  It sounds to me like you are discussing a different scenario?  ></body> </Action>
<Action id="26789" issue="18144" author="kchristidis" type="comment" body="Who is assigned to this?" created="2017-06-19 19:48:34.0" updateauthor="kchristidis" updated="2017-06-19 19:48:34.0"/>
<Action id="26809" issue="18144" author="jyellick" type="comment" body="Based on the two debugging screen shot values just uploaded, I see two different &apos;D&apos; values. As indicated by  ~rickr &apos;s comment, this would indicate two different keys are being used for signing." created="2017-06-20 02:18:02.0" updateauthor="jyellick" updated="2017-06-20 02:18:02.0"/>
<Action id="26810" issue="18144" author="rhegde" type="comment" created="2017-06-20 02:28:26.0" updateauthor="rhegde" updated="2017-06-20 02:33:21.0"> <body><! CDATA  ~rickr  As my understanding - user1 and admin both should be allowed to perform operation on the channel (public or private). This is using the default orderer.genesis and channel configuration block generated using configtxgen and cryptogen tool.  I am attaching 2 screenshots as requested on this scenario * EclipseDebugPoint-EnrollmentInformation-Failure.png  !EclipseDebugPoint-EnrollmentInformation-Failure.png|thumbnail!   * EclipseDebugPoint-EnrollmentInformation-Success.png  !EclipseDebugPoint-EnrollmentInformation-Success.png|thumbnail!    ~jyellick  Above screenshot is now replicated on same channel (failure and success) with admin performing transaction successfully and user1 getting the error. The only thing after understanding, in both the cases, fetching channel configuration in both the case is done using admin.  ></body> </Action>
<Action id="26814" issue="18144" author="jyellick" type="comment" body=" ~rhegde  could you confirm what the bug behavior is? My impression was this this was the same user across two channels.  Based on your most recent comment, this is two users within one channel?" created="2017-06-20 03:20:39.0" updateauthor="jyellick" updated="2017-06-20 03:20:39.0"/>
<Action id="26840" issue="18144" author="rickr" type="comment" created="2017-06-20 12:31:35.0" updateauthor="rickr" updated="2017-06-20 12:35:39.0"> <body><! CDATA I'm confused about the situation here.   The picture you have above does seem to have the same private key but both have the name *admin ?* I thought there was an issue with *user1* ?  So what's different between the two above ?  The Channel  ?   The above can't be the same user if the private key' values are the same.  Where both channels private/public created with the *same* configtx configuration?  Admin should be able to do any operation on each channel is that true ?  _(doesn't seem so from above but asking)_  User1  what channels can that account invoke operations on ?   Public ?  Private?   What is exactly different in the above cases ?  Where are the logs requested ?  ></body> </Action>
<Action id="26853" issue="18144" author="rhegde" type="comment" created="2017-06-20 14:52:49.0" updateauthor="rhegde" updated="2017-06-20 14:52:49.0"> <body><! CDATA I will request if we can have a screen-share/webex on this and show what we are trying to do. I will put our HFC team member. Is that ok  ~rickr ,  ~jyellick ?  If yes - I can check offline on RC for convenient time.  I cannot share logs as I have to mask content at lot places.   ></body> </Action>
<Action id="27177" issue="18144" author="rhegde" type="comment" body="We had a WebEx with  ~rickr ,  ~jyellick   ~muralisr and reproduced the issue where user1 is not allowed to perform transaction whereas admin is allowed." created="2017-06-22 10:42:50.0" updateauthor="rhegde" updated="2017-06-22 10:42:50.0"/>
<Action id="27189" issue="18144" author="rickr" type="comment" created="2017-06-22 12:54:10.0" updateauthor="rickr" updated="2017-06-22 12:54:10.0"> <body><! CDATA I can't reproduce this locally as was described by your scenario.  The org/hyperledger/fabric/sdkintegration/End2endIT.java code I think does the exact same scenario. if you look in construct channel  *client.setUserContext(sampleOrg.getPeerAdmin())*;  is set to admin.  After that runChannel method is executed and there is also an unneeded *client.setUserContext(sampleOrg.getPeerAdmin());*  at the beginning there when installing and instantiating chaincode.   All of this must be done with and admin identity.   If you then follow the flow  after the *Send instantiate transaction to Orderer* comment  there is a *client.setUserContext(sampleOrg.getUser(TESTUSER_1_NAME));*  This is the start of the invoking chaincode that is done by the non-admin user. This non admin user creates the proposal submits it and later invokes the chaincode yet again to validate it has been updated.     I have followed this in the debugger and have not found a case where usercontext is not what is to be expected unlike what we saw running your scenario.  Since logs nor code can be provided for the actual scenario I need someone to modify the end2end code  to reproduce this error.  Or possible try modify your code to reflect any difference there might be between to two to see if you that fixes the issue.                 ></body> </Action>
<Action id="27672" issue="18144" author="rhegde" type="comment" created="2017-06-29 22:12:37.0" updateauthor="rhegde" updated="2017-06-29 22:12:37.0"> <body><! CDATA As per suggestion from Rick, Manjeet did the refactoring of code and this issue is not getting reproduced. This issue can be marked as not-a-defect.  Thanks for the support.  ></body> </Action>
<Action id="27673" issue="18144" author="rickr" type="comment" body="Glad you&apos;ve made progress." created="2017-06-29 22:39:49.0" updateauthor="rickr" updated="2017-06-29 22:39:49.0"/>
