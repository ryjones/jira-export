<Issue id="20935" key="FABJ-195" number="195" project="10605" reporter="clempo" assignee="sgdev" creator="clempo" type="10004" summary="CompletableFuture can leak in Channel.sendTransaction()" priority="3" resolution="10000" status="6" created="2017-09-20 16:02:58.0" updated="2018-07-19 00:20:42.0" resolutiondate="2017-10-12 20:03:40.0" votes="0" watches="3" workflowId="33633"> <description><! CDATA In this method of the class Channel public CompletableFuture<TransactionEvent> sendTransaction(Collection<ProposalResponse> proposalResponses, Collection<Orderer> orderers, User userContext) I believe the future sret leaks if communication with all the orderers fails, that's because sret is registered but no partner knows about it and therefore nothing can fire it. The cleanup based on timeouts was removed a while ago so txListener will keep sret forever.  It might be interesting to take this opportunity to factor out this duplicated code into a separate private method. Status status = resp.getStatus(); if (null != status) { respdata.append(status.name()); respdata.append("-"); respdata.append(status.getNumber()); }  String info = resp.getInfo(); if (null != info && !info.isEmpty()) { if (respdata.length() > 0) { respdata.append(", "); }  respdata.append("Additional information: ").append(info);   ></description> </Issue>
