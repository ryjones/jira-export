<Action id="45023" issue="30570" author="smithbk" type="comment" body="https://gerrit.hyperledger.org/r/22189" created="2018-05-24 00:45:18.0" updateauthor="smithbk" updated="2018-05-24 00:45:18.0"/>
<Action id="45024" issue="30570" author="smithbk" type="comment" created="2018-05-24 00:52:46.0" updateauthor="smithbk" updated="2018-05-24 00:54:10.0"> <body><! CDATA Fixed some java idemix serialization issues, but am now the peer is failing to verify the proof with the following error ...  ^  34mpeer0.org1.example.com    |^  0m ^  36m2018-05-24 00:02:53.321 UTC  protoutils  checkSignatureFromCreator -> DEBU 2f6^  0m creator is &{idemixMSP x: "\017\301\317\330\211\345\347z\024\001@(v\251w>y\232\261 \034\212\020T\330\352\304\305\247\213\235\303" ^  34mpeer0.org1.example.com    |^  0m y: "zl%\322\371\006O\321\366K\210U%{N\315XJ 3\247\352\357\303\315\213!\336m\000\311\232" ^  34mpeer0.org1.example.com    |^  0m } ^  34mpeer0.org1.example.com    |^  0m ^  36m2018-05-24 00:02:53.321 UTC  endorser  call32 -> DEBU 2f7^  0m Exit: request from 172.21.0.1:40276 ^  33;1mpeer1.org1.example.com    |^  0m panic: runtime error: invalid memory address or nil pointer dereference ^  33;1mpeer1.org1.example.com    |^  0m  signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x80f25a  ^  33;1mpeer1.org1.example.com    |^  0m ^  33;1mpeer1.org1.example.com    |^  0m goroutine 322  running : ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/idemix.(*Signature).Ver(0xc422d90c80, 0x18a3e7c, 0x4, 0x4, 0xc42247cfa0, 0x0, 0x0, 0x0, 0xc422d9f3a0, 0x2, ...) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/idemix/signature.go:208 +0xda ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/msp.(*idemixidentity).verifyProof(0xc4223e2cf0, 0xc4224ae8d0, 0x9) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/msp/idemixmsp.go:311 +0x15b ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/msp.(*idemixmsp).Validate(0xc4224ac0c0, 0x1143480, 0xc4223e2cf0, 0x1, 0x1) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/msp/idemixmsp.go:304 +0x17c ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/msp.(*idemixidentity).Validate(0xc4223e2cf0, 0x1055b77, 0xd) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/msp/idemixmsp.go:509 +0x40 ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/core/common/validation.checkSignatureFromCreator(0xc422b32000, 0x30e, 0x30e, 0xc422443830, 0x88, 0x88, 0xc422da0000, 0x479, 0x479, 0xc42243f168, ...) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/core/common/validation/msgvalidation.go:175 +0x2ae ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/core/common/validation.ValidateProposalMessage(0xc4223e29c0, 0xc4221bcfc0, 0x730b18, 0xc420342450, 0x5, 0x4) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/core/common/validation/msgvalidation.go:102 +0x1dd ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/core/endorser.(*Endorser).preProcess(0xc4202c45d0, 0xc4223e29c0, 0xc42017fec0, 0xc4221a2dc0, 0x2) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:368 +0x5d ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal(0xc4202c45d0, 0x113dd00, 0xc4223e2990, 0xc4223e29c0, 0x0, 0x0, 0x0) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:436 +0x245 ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal(0xc4202bf6c0, 0x113dd00, 0xc4223e2990, 0xc4223e29c0, 0x7ff5bf621040, 0xed6701, 0xc4223e29c0) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61 +0x8f ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal(0xc4202bf660, 0x113dd00, 0xc4223e2990, 0xc4223e29c0, 0xc4202bf660, 0xc4223e28d0, 0xed67e0) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:31 +0x51 ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler(0xee2560, 0xc4202bf660, 0x113dd00, 0xc4223e2990, 0xc422d96000, 0x0, 0x0, 0x0, 0x8a0b9a, 0xc4221f6758) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112 +0x241 ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC(0xc4200d6420, 0x11415c0, 0xc422df2180, 0xc422d90140, 0xc4202c4660, 0x1876550, 0xc4223e2960, 0x0, 0x0) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:923 +0x889 ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc4200d6420, 0x11415c0, 0xc422df2180, 0xc422d90140, 0xc4223e2960) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1148 +0x1318 ^  33;1mpeer1.org1.example.com    |^  0m github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc420495bf0, 0xc4200d6420, 0x11415c0, 0xc422df2180, 0xc422d90140) ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:637 +0x9f ^  33;1mpeer1.org1.example.com    |^  0m created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1 ^  33;1mpeer1.org1.example.com    |^  0m        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:635 +0xa1 ^  34mpeer0.org1.example.com    |^  0m panic: runtime error: invalid memory address or nil pointer dereference ^  34mpeer0.org1.example.com    |^  0m  signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x80f25a    ></body> </Action>
<Action id="45028" issue="30570" author="mdr" type="comment" body="Great to see you&apos;re working on this and making progress. You&apos;re unfortunately blocked by FAB-8924, for which I&apos;ll push the code out today. If you rebase on that things should work out. " created="2018-05-24 07:52:40.0" updateauthor="mdr" updated="2018-05-24 07:52:40.0"/>
<Action id="45155" issue="30570" author="smithbk" type="comment" created="2018-05-25 20:48:25.0" updateauthor="smithbk" updated="2018-05-25 21:03:57.0"> <body><! CDATA The current status is that the verification of the proof is failing in the peer, so Zurich is going to take over debugging since this is in ZKP code.   The following is info on reproducing the error per discussion with Maria ...  For both fabric and fabric-ca repos: # make docker-clean docker  To run fabric: # cd fabric-sdk-java/src/test/fixture/sdkintegration # fabric.sh up 2>&1 | tee t  In intellij, open End2endIT.java and run or debug it  To stop fabric: # fabric.sh down   Find peer and orderer logs in the "t" file  The current error is as follows in the peer ...  ^  34mpeer0.org1.example.com    |^  0m ^  36m2018-05-25 20:47:12.415 UTC  protoutils  checkSignatureFromCreator -> DEBU 32f^  0m creator is &{idemixMSP x: "~\334_\334A\263\364\203\214\330\337\347\013m\225\033C\303\265\022\350cGu\234\317\277\205>\361\322\373" ^  34mpeer0.org1.example.com    |^  0m y: "\376\265kt\222\203\244\206\372\270\307o\335\334J\241\357\352\3237\341TP\224q\231\304\331%\217\233`" ^  34mpeer0.org1.example.com    |^  0m } ^  33;1mpeer1.org1.example.com    |^  0m ^  33m2018-05-25 20:47:12.524 UTC  protoutils  ValidateProposalMessage -> WARN 330^  0m channel  foo : creator certificate is not valid: signature invalid: zero-knowledge proof is invalid   ></body> </Action>
<Action id="47714" issue="30570" author="dubovitskaya" type="comment" body="The E2EIT test works now" created="2018-07-24 12:53:13.0" updateauthor="dubovitskaya" updated="2018-07-24 12:53:13.0"/>
