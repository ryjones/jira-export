<Action id="68312" issue="44400" author="dhuseby" type="comment" created="2020-03-13 15:16:53.0" updateauthor="dhuseby" updated="2020-03-13 15:16:53.0"> <body><! CDATA My personal assessment is that this is a CVSS 7.0 which is serious:  https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H   However, it is tempered significantly because this is a vulnerability in the SDK. So the attack is against tools that use the SDK which may or may not affect the network as a whole. The scenario I'm considering is if this attack can be used to bypass checks in tools designed to install chaincode or modify policies or run state of nodes.  I need help confirming if the scope of this exploit extends to those administration functions before I can assign a proper severity.  ></body> </Action>
<Action id="68313" issue="44400" author="mastersingh24" type="comment" created="2020-03-13 15:47:52.0" updateauthor="mastersingh24" updated="2020-03-13 15:47:52.0"> <body><! CDATA I really do not see how this can be classified as "high" ... of course I don't see any reason not to implement the suggestion.  The Fabric project does not build any tools which use the Java SDK either.  ></body> </Action>
<Action id="68314" issue="44400" author="dhuseby" type="comment" created="2020-03-13 16:40:58.0" updateauthor="dhuseby" updated="2020-03-13 16:40:58.0"> <body><! CDATA  ~mastersingh24  is it possible to use the Java SDK to build a tool that installs chaincode? Does both the SDK and the nodes themselves run all of the chaincode verification checks before install new chaincode? Our bounty policy says that this is a critical security bug if it can cause "unauthorized modifications of chaincode--changing the code that is executed inside of the VM."  If not, then it's probably a medium severity bug.  ></body> </Action>
<Action id="68315" issue="44400" author="sstone1" type="comment" created="2020-03-13 17:03:18.0" updateauthor="sstone1" updated="2020-03-13 17:03:18.0"> <body><! CDATA  ~dhuseby  there are three types of YAML files being loaded here: * Connection profiles that describe where the Fabric network components (peers, orderers, CAs) are * Endorsement policies that describe who must endorse transactions * Private data collection configuration files that describe private data collections and who can access them  All of these are only loaded in the process using the SDK, and never sent across the network - endorsement policies and private data collection configuration files are converted into a Protocol Buffers format before being sent as part of a chaincode instantiation/upgrade request. So I don't think there's any risk of code being injected into remote components.  All authorization checks are processed on the Fabric network side, and these are based upon cryptographic signatures. The SDK has access to either private keys or HSMs that can perform those cryptographic signatures, so in the worst case it is possible that code could be injected into an application using the SDK which could then access those private keys/HSMs to sign and submit malicious or fraudulent transactions.  These transactions could include transactions to a smart contract, such as recording a new asset or changing it's owner.  Those transactions would only be accepted by the network if and only if they met policies that are being enforced by the Fabric network, which would - for any realistic network - require endorsements (cryptographic signatures) from other organizations and users.   If they compromised an application using the SDK that had access to organization/peer administrator private key or HSM then they could also perform actions such as installing chaincode on that organizations peer, or changing the definition of their organization (MSP) in a channel.  However - to perform such an attack would require access to the system running the code in order to modify one of the YAML files, and if you've got access to tamper with the YAML files, you've likely got access to tamper with the code itself and you could make it submit any transactions you wanted anyway.  We should definitely implement the recommended fix. I'm not sure I'm qualified to comment on the CVSS rating.  ></body> </Action>
<Action id="68316" issue="44400" author="mastersingh24" type="comment" created="2020-03-13 21:37:59.0" updateauthor="mastersingh24" updated="2020-03-13 21:37:59.0"> <body><! CDATA Let's just implement the change and be done with it.  I do not think that this would be classified as "high" in any general case as you would have to use the SDK to build a specific type of tool which at some point allows you to upload or specify YAML content and then directly uses the raw content in the SDK methods (a bad practice by any means ala SQL Injection).  ></body> </Action>
<Action id="68326" issue="44400" author="mastersingh24" type="comment" created="2020-03-16 12:53:12.0" updateauthor="mastersingh24" updated="2020-03-16 16:06:10.0"> <body><! CDATA  https://github.com/hyperledger/fabric-sdk-java/pull/45 . (release-1.4)   https://github.com/hyperledger/fabric-sdk-java/pull/46  (master)  ></body> </Action>
<Action id="68339" issue="44400" author="mastersingh24" type="comment" body=" ~dhuseby  - we should be able to close this ... the above PRs have been merged.  Can you take a look and see if we can close?" created="2020-03-16 18:33:01.0" updateauthor="mastersingh24" updated="2020-03-16 18:33:01.0"/>
<Action id="68611" issue="44400" author="dhuseby" type="comment" created="2020-03-26 15:15:54.0" updateauthor="dhuseby" updated="2020-03-26 15:15:54.0"> <body><! CDATA  ~mastersingh24  great! Since this is a client-side only vector, I agree that this is a "low" security issue. It didn't present any opportunity for a remote vector to affect a running network. The only way this would be a real threat is if the attacker was a privileged insider and if that's the case their are much easier and more destructive attack vectors available.  Thanks for the quick response. I'll pay this guy out at the "low" level and pass along the explanation.  ></body> </Action>
