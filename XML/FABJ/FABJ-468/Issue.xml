<Issue id="41780" key="FABJ-468" number="468" project="10605" reporter="aatkddny" creator="aatkddny" type="10001" summary="As a java SDK user I should not be required to edit NetworkConfig after creation to support TLS" priority="3" resolution="10001" status="6" created="2019-08-13 19:14:46.0" updated="2020-11-19 16:00:23.0" resolutiondate="2020-11-19 16:00:23.0" votes="0" watches="1" workflowId="54819"> <description><! CDATA When an SDK user creates a network configuration using an external source requiring TLS it should be possible to set the configuration inside the json rather than having to edit the NetworkConfig after it has been loaded (created) without requiring the use of persistent storage to access certificates.  When defining orderers and peers in the NetworkConfig files - which are defined out of band - one must set properties "pemBytes", "clientKeyBytes" and "clientCertBytes" as byte  .   JsonObject doesn't support this, so the options are to edit the networkconfig after performing the .loadFrom... to add these properties, or to load them from files.   The latter requires the certificates to be available as files, which may not always be the case to a client application.   This differs from the behavior exhibited when loading the tlsCACerts.pem fields in the config, which accept a certificate string inline and converts it internally to the byte array.  See: NetworkConfigIT See: NetworkConfig#getTLSCerts  Consistency here would be helpful for the SDK user. The ability to express these property byte arrays as a string in the same manner as tlsCACerts.pem would simplify integration.  ></description> </Issue>
