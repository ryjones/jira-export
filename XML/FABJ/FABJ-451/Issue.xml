<Issue id="40585" key="FABJ-451" number="451" project="10605" reporter="bestbeforetoday" assignee="bestbeforetoday" creator="bestbeforetoday" type="10004" summary="TransactionRequest can only be sent once" priority="3" resolution="10000" status="6" created="2019-06-14 08:39:44.0" updated="2019-06-20 13:04:41.0" resolutiondate="2019-06-20 13:04:41.0" votes="0" watches="1" workflowId="53534"> <description><! CDATA When a proposal request is sent to a peer (for example by calling Channel.queryByChaincode()), the request object is marked as "sent" and an error is thrown if the same object is used again. An example of where it is desirable to re-send the same proposal request is obtaining query results from peers: # Request is sent to a peer. # A good response is not obtained; perhaps the peer is down. # Request is sent to another peer, continuing until a good response is obtained or candidate peers are exhausted.  Â   The current behaviour causes an error to be thrown at step 3.  It should be noted that the Channel code itself has to work around this behaviour in the sendProposalSerially() method, where it modifies the private internals of the request to unset its "sent" flag. This looks like an additional indicator that this behaviour is undesirable.  ></description> </Issue>
