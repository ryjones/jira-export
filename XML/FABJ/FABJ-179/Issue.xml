<Issue id="15354" key="FABJ-179" number="179" project="10605" reporter="denisgaebler" assignee="rickr" creator="denisgaebler" type="10004" summary="Chain cleanup" priority="3" resolution="10000" status="6" created="2017-03-14 15:26:34.0" updated="2018-07-19 00:20:39.0" resolutiondate="2017-04-13 21:51:48.0" votes="0" watches="2" workflowId="33617"> <description><! CDATA JVM never terminates due to Executors Thread Pool - expose interface to cancel or access completablefutures in Chain.java  Hi,  when running the fabric sdk in a single main with no threading from the callers end, the JVM never terminates after any successful query or invoke calls with the hyperledger SDK. When looking at the JVM threads the threads from the executor threadpool can be seen. While this is ok for a server or long running jvm to keep the threadpool, when just running a java main, it is expected that the JVM terminates, but it does not.  Exposing the Executors es did not help, because the shutdown or shutdownnow methods just cause the threads to interrupt, they do not terminate. I would like to have the completablefutures to be exposed on the chain object with a public method to be able to explicitly terminate it. Maybe a chain.terminate() or chain.close() method would be great.  I saw the comments on timeout, but thats not what is needed, the JVM should not continue to run for x seconds (=timeout value) until the timeout hits after the replys.  I have also noticed that some of the threads disappear after 60 seconds (the grpc channels) but there are threads that remain active.  Thanks, Denis.  ></description> </Issue>
