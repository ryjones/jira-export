<Action id="70158" issue="45834" author="lesleyannj" type="comment" created="2020-09-08 13:04:47.0" updateauthor="lesleyannj" updated="2020-09-15 12:54:48.0"> <body><! CDATA Google translated.  TITLE: When fabric is instantiated using java sdk, the first parameter is fixed init, and the user parameter is invalid.  DESCRIPTION:  The fabric-sdk-java version is 1.4.0, in line 135 of the InstantiateProposalBuilder, modlist.add("init");  Then execute modlist.addAll(argList);, which is equivalent to writing the init for the first parameter, and only takes the argus in the instantiateProposalRequest, without obtaining the fcn parameter, which leads to the first one obtained when the chaincode is instantiated The parameter can only be init, which causes some chaincodes to be unusable, such as the official chaincode of sacc,  I personally propose a simple solution is to delete modlist.add("init"); this line of code, put all the parameters in argus when instantiating, without the parameter fcn  ></body> </Action>
<Action id="70332" issue="45834" author="harrisob@us.ibm.com" type="comment" created="2020-09-16 14:42:53.0" updateauthor="harrisob@us.ibm.com" updated="2020-09-16 14:42:53.0"> <body><! CDATA I think that the change should be to check the request for "fcn" and use that or default to "init" similar to sending a normal transaction. This is how the NodeSDK works with the legacy chaincode lifecycle.  Maybe we need an additional method on  InstantiateProposalBuilder to add the function to be called defaulting to "init" similar to how the args are added.  ></body> </Action>
