<Issue id="34263" key="FABJ-404" number="404" project="10605" reporter="c0rwin" assignee="rickr" creator="c0rwin" type="10001" summary="Application set Executor Service" priority="3" resolution="10000" status="6" created="2018-10-02 11:38:55.0" updated="2019-03-23 15:23:30.0" resolutiondate="2019-03-23 15:23:30.0" votes="0" watches="2" workflowId="45590"> <description><! CDATA Gerrit CR https://gerrit.hyperledger.org/r/#/c/30228/ Currently Java SDK {{HFClient}} creates thread pool during object instantiation, i.e.:  {code} private final ExecutorService executorService = Executors.newCachedThreadPool(r -> { Thread t = Executors.defaultThreadFactory().newThread(r); t.setDaemon(true); return t; }); {code}  which might be a problem if SDK user going to use it within managed container environments such as J2EE or Spring, where threads managed by the container itself. Therefore need to add an API which will allow to accept and leverage external thread pools provided by managed environment.   ></description> </Issue>
