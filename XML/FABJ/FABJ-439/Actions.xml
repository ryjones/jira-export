<Action id="59992" issue="39738" author="mastersingh24" type="comment" body=" ~adc   ~ales   -  See any issues with this? " created="2019-05-14 08:31:35.0" updateauthor="mastersingh24" updated="2019-05-14 08:31:35.0"/>
<Action id="60017" issue="39738" author="angelo.decaro" type="comment" created="2019-05-15 09:31:26.0" updateauthor="angelo.decaro" updated="2019-05-15 09:31:26.0"> <body><! CDATA So, the anonymity guarantees achieved by the described protocol are essentially those obtained by Bitcoin, pseudonymity. Full anonymity can be achieved only if you are able to hide also which coin is spent.  Anyway, it seems reasonable to allow the reuse of a pseudonym in certain contexts, as long as the developer knows what she is doing.  ></body> </Action>
<Action id="60019" issue="39738" author="ales" type="comment" created="2019-05-15 10:37:16.0" updateauthor="ales" updated="2019-05-15 10:37:16.0"> <body><! CDATA I see a couple of issues though: # the nym is a commitment to the (secret) user keypair, and so the only way to produce the same commitment twice is to keep the randomness; this requires some persistent secret storage management facility which isn't provided today and would have to be built ad hoc. If you lose this randomness you won't be able to spend your coin again! # selective disclosure of attributes is already supported by idemix and so we may try to leverage this native capability first  ></body> </Action>
<Action id="60020" issue="39738" author="sejalpawar" type="comment" created="2019-05-15 10:49:11.0" updateauthor="sejalpawar" updated="2019-05-15 11:03:01.0"> <body><! CDATA What if we sign using the same pseudonym and generate different commitments both times? The NymX and NymY elliptic curve keypair points produced on chaincode side remain same which is enough for ownership verification. I tried a quick and dirty PoC in which instead of producing a new Pseudonym I just passed a previous one and returned NymX and NymY from chaincode to the client SDK to check if they stayed constant.  Replaced line in IdemixSigningIdentity.java:  // generate a fresh pseudonym  this.pseudonym = new IdemixPseudonym(this.sk, this.ipk);  What is accessed from Chaincode side:  NymX byte  , NymY byte   from msp.SerializedIdemixIdentity  ></body> </Action>
<Action id="60022" issue="39738" author="angelo.decaro" type="comment" created="2019-05-15 11:23:48.0" updateauthor="angelo.decaro" updated="2019-05-15 11:23:48.0"> <body><! CDATA So, speaking the java-sdk language, you need to enhance the IdemixSigningIdentity to be able serialise it, therefore storing all the associated secrets (Notice that the most relevant secret is contained in IdemixPseudonym. It is RandNym, that is used as the randomness in the commitment to achieve the hiding property). Then, you need to modify the TransactionContext to get in input a SigningIdentity. You need also to enhance the Channel class to have a new getTransactionContext that takes in input a SigningIdentity. This should be enough.     ></body> </Action>
<Action id="60023" issue="39738" author="sejalpawar" type="comment" body="Okay got it! I will get back to you with the changes." created="2019-05-15 11:37:18.0" updateauthor="sejalpawar" updated="2019-05-15 11:37:18.0"/>
<Action id="60062" issue="39738" author="sejalpawar" type="comment" created="2019-05-16 13:08:29.0" updateauthor="sejalpawar" updated="2019-05-16 13:08:29.0"> <body><! CDATA  ~rickr  What would be the best way to do the following things: # Serialize IdemixSigningIdentity # Send an object of signing Identity via 1) sendTransactionProposal(), 2) sendProposal() to 3) getSignedProposal()   ></body> </Action>
<Action id="60112" issue="39738" author="rickr" type="comment" created="2019-05-17 10:50:59.0" updateauthor="rickr" updated="2019-05-17 10:50:59.0"> <body><! CDATA The only mean to serialize I know of is java serialization and grpc serialization.  I think  ~angelo.decaro  laid out the rest.   ></body> </Action>
<Action id="64845" issue="39738" author="heatherp" type="comment" body="Hi  ~sejalpawar  - I&apos;m taking a look at the fabric-java-sdk backlog - are you still planning on putting in a fix for this?" created="2019-10-22 10:18:05.0" updateauthor="heatherp" updated="2019-10-22 10:18:05.0"/>
<Action id="64847" issue="39738" author="sejalpawar" type="comment" body="Hey Heather, I lost track of this a while ago but I will fix it in the next two weeks." created="2019-10-22 10:23:35.0" updateauthor="sejalpawar" updated="2019-10-22 10:23:35.0"/>
