<Issue id="39738" key="FABJ-439" number="439" project="10605" reporter="sejalpawar" assignee="sejalpawar" creator="sejalpawar" type="10002" summary="Choice to reuse Idemix Pseudonyms to sign transactions inorder to establish Proof of Ownership" priority="2" status="10100" created="2019-05-09 13:16:38.0" updated="2020-11-19 11:19:45.0" votes="0" watches="6" workflowId="52629"> <description><! CDATA I wanted to propose a new scenario and discuss the merits and shortcomings of the same:  Current Scenario:  1. Every transaction that is proposed by an Idemix User is signed with a fresh Idemix Pseudonym making all the transactions not only anonymous but completely, unlinkable. The only fields available on the chaincode side in terms of user identity are: X and Y points of Elliptic curve which together form the Public key equivalent. Different key is generated for every transaction.  2. Access control, proof of ownership and identity in transactions signed by x509 certificates is established using fields such as subject name, RDN sequence and other miscellaneous fields embedded in the certificate itself.  Proposed Scenario:  Choice or ability to reuse Pseudonyms if desired thereby, making *some* transactions linkable.  The advantage of this can be understood with the following sample use case: A fabcoin purchased using an Idemix credential will be associated with that particular Pseudonym. To be able to sell the same fabcoin a new transaction needs to be invoked with the *same Idemix Pseudonym* so that ownership can be established and verified on the chaincode side.  The user can thereafter, generate and use a new Pseudonym to purchase another fabcoin thereby, establishing overall, unlinkability. Anonymity is guaranteed always in any case since pseudonyms are not associated with the user's concrete x509 identity.  Example Scenario: 1. User X purchases coin A using pseudonym P1.  Mapping on chain: <P1, A> 2. User X purchases another coin B using pseudonym P2.  Mapping on chain: <P1, A>, <P2, B> 3. To sell coin A, user needs to sign transaction using pseudonym P1. 3A. User tries to sell coin A by signing transaction using pseudonym P2. Transaction rejected since ownership of coin A is linked to P1. 3B. User tries to sell coin A by signing transaction using P1. Transaction successful.  To conclude, we need ability to reuse Pseudonyms to establish that a user owns a particular asset and is therefore, capable of selling or trading it.  From an implementation point of view, this affects only Fabric SDK and can be implemented without affecting current scenarios in any way.  ></description> </Issue>
