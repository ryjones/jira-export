<Issue id="27953" key="FABJ-281" number="281" project="10605" reporter="ptippett" creator="ptippett" type="10001" summary="Fabric SDK should use connection profiles to provide application HA support" priority="3" resolution="10200" status="6" created="2018-02-23 15:31:58.0" updated="2018-09-11 14:46:48.0" resolutiondate="2018-09-11 14:46:48.0" votes="2" watches="5" workflowId="33719"> <description><! CDATA Currently, application owners are responsible for handling high availability in their applications.  Meaning that it is their responsibility to retry operations against multiple peers and orderers.  There's an open but often deferred issue to provide examples on how to best do this.  https://jira.hyperledger.org/browse/FAB-5295     What I propose is that instead of leaving this up to application owners to handle, we put some capability in the SDKs to do this.  My understanding is that the SDKs now support connection profiles allowing me to specify multiple peers, the tags for those peers (endorser, committer, query, etc) as well as multiple orderers.  Unfortunately, the SDK does not fully make use of this information.  Meaning that if the connection profile specifies multiple peers or orderers, the SDK will try one and if that one doesn't respond, the SDK will not try others in the list.  It seems to me that at minimum, the SDK should have some basic retry logic such that if the operation fails to one peer, the SDK should try the other peer in the list before giving up.  Same for orderers.  What if a customer doesn't want this capability?  My understanding is that the application can tell the SDK to send operations to specific orderers or peers which could be used to override the default behavior.  The user could also be allowed to specify the number of retries and/or timeouts.  This is a new feature, so I've put 1.2 as the fix version, although if this could go into a 1.1.x release I wouldn't argue.  Perhaps the HA capability could be off by default until 1.2 to prevent side effects in a fix release?  ></description> </Issue>
