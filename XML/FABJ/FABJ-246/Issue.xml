<Issue id="13790" key="FABJ-246" number="246" project="10605" reporter="abhi201191" assignee="satheeshk" creator="abhi201191" type="10004" summary=" java-chaincode  In Chaincode-to-Chaincode invocation, main transaction become successful even if second chaincode invocation fails." priority="2" resolution="10000" status="6" created="2016-12-13 13:27:22.0" updated="2018-07-19 00:20:52.0" resolutiondate="2017-03-28 17:34:16.0" votes="0" watches="2" workflowId="33684"> <description><! CDATA   Lets take a reference to example chaincodes: LinkExample and MapExample.  In LinkExample, we are invoking MapExample chaincode and in put function of MapExample chaincode we are doing some check on number of arguments i.e if the number of arguments is odd then we are throwing an RuntimeException.  Now, when we invoke LinkExample chaincode with odd number of arguments and it internally invokes MapExample chaincode with same number of arguments then MapExample chaincode throw an RuntimeException and shim layer catch this exception which results in the failure of invoke transaction to MapExample. But the whole transaction (invoke transaction to LinkExample) is getting successful even if when part of the transaction fails.  In this senario, MapExample is not sending any message regarding its failure to LinkExample which results in success of transaction to LinkExample.   ></description> </Issue>
