<Action id="55726" issue="36788" author="altharp" type="comment" created="2019-01-16 16:39:36.0" updateauthor="altharp" updated="2019-01-16 16:39:36.0"> <body><! CDATA The following "premature execution" message for chaincode is normal under certain circumstances.  {{Sending proposal to peer01xxxx.xxx.clsnet failed because of: gRPC failure=Status\{code=UNKNOWN, description=Error executing chaincode: Transaction returned with failure: premature execution - chaincode (public:1.0.1.1) launched and waiting for registration, cause=null}}}  This message usually means that chaincode has not started yet. We understand that in this case the peer docker container has been recreated. When this happens, the chaincode would stop running. Sending a query or invoke to the chaincode will cause the chaincode to start, but this will take some time.  It is also good to consider how many transactions are sent to the chaincode when it is first starting. It would be ideal to send one query or invoke to cause the chaincode to start and then initiate other invokes or queries after waiting for the chaincode to start.  We would suggest waiting at least 300 seconds for the chaincode to start before client applications try to use the chaincode. The peer configuration has a property named CORE_CHAINCODE_EXECUTETIMEOUT which controls how long the peer waits for chaincode to start. If the chaincode is not starting within this time frame, then the property can be given a higher value to determine if that helps.  If a client application receives the "premature execution" response for a chaincode operation, then we would suggest that the client application be constructed to include retry logic.  ></body> </Action>
<Action id="55800" issue="36788" author="sykesm" type="comment" created="2019-01-18 16:40:07.0" updateauthor="sykesm" updated="2019-01-18 16:40:07.0"> <body><! CDATA I'm moving this to the Java SDK because of the error reporting.  Current versions of Fabric do not respond with an error while ChaincodeStubInterface is starting.  ></body> </Action>
<Action id="55813" issue="36788" author="rickr" type="comment" created="2019-01-18 18:24:54.0" updateauthor="rickr" updated="2019-01-18 18:25:37.0"> <body><! CDATA The SDK logs errors It needs to.  The specific issue at hand seems to be fixed in later versions of the Peer according to  ~sykesm  . The sdk  error level logging can also be turned off and I think it's even possible for an application to register their own logging log4j handler that I think should be able to filter this specific error out or others if need be.    ></body> </Action>
<Action id="56508" issue="36788" author="clayton sims" type="comment" created="2019-02-01 17:25:32.0" updateauthor="clayton sims" updated="2019-02-01 17:25:32.0"> <body><! CDATA You are moving up to v1.2.x  this will not occur in v1.2.x     ></body> </Action>
