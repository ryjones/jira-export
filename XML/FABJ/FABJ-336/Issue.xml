<Issue id="32363" key="FABJ-336" number="336" project="10605" reporter="yacovm" creator="yacovm" type="10002" summary="Implement cc2cc queries (java SDK)" priority="3" resolution="10001" status="6" created="2018-07-27 22:48:33.0" updated="2019-10-22 10:24:36.0" resolutiondate="2019-10-22 10:24:36.0" votes="0" watches="1" workflowId="43566"> <description><! CDATA When the client sends a proposal to chaincode *foo*, upon reception of a proposal response from a peer: * Inspect the read-write sets, and see if there exists a RWSet for a namespace *bar* which is not *foo*. * If a cc2cc discovery query result for *foo*, *bar* had been received before and was cached, use the cached result and skip the next bullet. * Do a cc2cc discovery query with the namespaces: *foo, bar* and cache the result for future use. * Determine if the peers that were used for endorsing *foo*, also together satisfy the combination of endorsement policies of *foo* and *bar*.  If not - re-select the peers based on the endorsement descriptor for *foo* and *bar*, and send the proposal again.    Note - *foo* and *bar* are brought here as examples of cc2cc invocations, but obviously the SDK should be able to handle any set of namespaces returned to it.  ></description> </Issue>
