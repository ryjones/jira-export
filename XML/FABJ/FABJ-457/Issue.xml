<Issue id="40917" key="FABJ-457" number="457" project="10605" reporter="aatkddny" creator="aatkddny" type="10001" summary="Support paths in the URL for contacting Peers and Orderers in the java SDK" priority="3" status="10100" created="2019-07-03 20:41:07.0" updated="2021-05-21 09:37:10.0" votes="0" watches="3" workflowId="53882"> <description><! CDATA Raft ordering requires TLS. Everything is moving to K8S. We've been on it for a long time - but have exposed services using NodePorts inside our data center without any encryption.  There's a chunk of code insideÂ org.hyperledger.fabric.sdk.helper.Utils#parseGrpcUrl(String url) that looks like this.  {code:java} 		Properties props = new Properties(); 		Pattern p = Pattern.compile("( ^: +) : //( ^: +) : ( 0-9 +)", Pattern.CASE_INSENSITIVE); 		Matcher m = p.matcher(url); 		if (m.matches()) { 			props.setProperty("protocol", m.group(1)); 			props.setProperty("host", m.group(2)); 			props.setProperty("port", m.group(3));   			String protocol = props.getProperty("protocol"); 			if (!"grpc".equals(protocol) && !"grpcs".equals(protocol)) { 				throw new RuntimeException(format("Invalid protocol expected grpc or grpcs and found %s.", protocol)); 			} 		} 		else { 			throw new RuntimeException("URL must be of the format protocol://host:port. Found: '" + url + "'"); 		}   		// TODO: allow all possible formats of the URL {code}  You'll note the TODO.  When deploying a fabric into a kubernetes cluster to use GRPCS requires the use of an ingress. That in turn requires supporting a path in the URL. This precludes the use of same. There are a number of places downstream of this where the url is rebuilt or rechecked, so it isn't as simple as just changing the regex and adding a path property.   Without it though it will be difficult to use the SDK and K8S and Raft.   HLF appears to be moving to either supporting or requiring K8S, so this will not be going away.   ></description> </Issue>
