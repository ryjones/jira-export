<Action id="68673" issue="44636" author="heatherp" type="comment" body="Hey  ~smartheye  - I see you&apos;ve mentioned the asLocalHost and discovery options, do you see different outputs if you change those?" created="2020-03-31 13:05:16.0" updateauthor="heatherp" updated="2020-03-31 13:05:16.0"/>
<Action id="69012" issue="44636" author="bestbeforetoday" type="comment" created="2020-04-22 14:20:48.0" updateauthor="bestbeforetoday" updated="2020-04-22 14:20:48.0"> <body><! CDATA My guess is that the NullPointerException observed during Channel shutdown is caused by some kind of ordering or thread-safety issue, although looking at the code I don't obviously spot the problem area.  I noticed in your test log that the system was in a very unstable state. While service discovery appears to have executed correctly, the test code fails on the first attempt to submit a transaction: {noformat} 11:57:01.202  main  ERROR org.hyperledger.fabric.sdk.Channel - Channel Channel{id: 1, name: mychannel} Sending proposal with transaction: 19272371e80d9ecd58161e4c79f7a805a763cd3758472b0e92fbb9a857039737 to Peer{ id: 7, name: peer0.org2.example.com:9051, channelName: mychannel, url: grpcs://peer0.org2.example.com:9051, mspid: Org2MSP} failed because of: gRPC failure=Status{code=UNAVAILABLE, description=Connection closed while performing protocol negotiation for  HttpClientCodec#0, HttpProxyHandler#0, ProtocolNegotiators$WaitUntilActiveHandler#0, WriteBufferingAndExceptionHandler#0, DefaultChannelPipeline$TailContext#0 , cause=null} java.lang.Exception: io.grpc.StatusRuntimeException: UNAVAILABLE: Connection closed while performing protocol negotiation for  HttpClientCodec#0, HttpProxyHandler#0, ProtocolNegotiators$WaitUntilActiveHandler#0, WriteBufferingAndExceptionHandler#0, DefaultChannelPipeline$TailContext#0  at org.hyperledger.fabric.sdk.Channel.sendProposalToPeers(Channel.java:4525) at org.hyperledger.fabric.sdk.Channel.sendTransactionProposalToEndorsers(Channel.java:4213) at org.hyperledger.fabric.gateway.impl.TransactionImpl.sendTransactionProposal(TransactionImpl.java:121) at org.hyperledger.fabric.gateway.impl.TransactionImpl.endorseTransaction(TransactionImpl.java:106) at org.hyperledger.fabric.gateway.impl.TransactionImpl.submit(TransactionImpl.java:92) at com.github.smartheye.fabric.tests.GatewayTest2_AsLocalhost2.testDiscoveryIT001(GatewayTest2_AsLocalhost2.java:70) {noformat}  The Gateway is then closed as the try-with-resources block exits, and this is where the NullPointerException during Channel shutdown. It is possible that connection retries are happening as a result of these submit failures and are overlapping with the execution of the shutdown, so a connection retry is in progress while the shutdown is part way through cleaning up resources.  It looks to me that any fix to the NullPointerException will not do anything to resolve the fundamental connection issues occurring in this test. While the shutdown exception appearing in the log is annoying, it doesn't seem to be causing any functional problems.  ></body> </Action>
