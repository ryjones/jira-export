<Action id="71245" issue="46467" author="bestbeforetoday" type="comment" body="This looks to be a difference in behaviour between the Maven and SBT assembly plugins, and the conflict occurs between *log4j-core* and *log4j-1.2-api*. Can you suggest any way we can address this in *fabric-sdk-java*?" created="2021-01-12 18:28:13.0" updateauthor="bestbeforetoday" updated="2021-01-12 18:28:13.0"/>
<Action id="71246" issue="46467" author="bestbeforetoday" type="comment" body="This Log4J issue looks like it might be relevant, but states that it was fixed in Log4J v2.13.1:  https://issues.apache.org/jira/browse/LOG4J2-2735 " created="2021-01-12 18:33:29.0" updateauthor="bestbeforetoday" updated="2021-01-12 18:33:29.0"/>
<Action id="71249" issue="46467" author="JIRAUSER21264" type="comment" created="2021-01-12 18:51:39.0" updateauthor="JIRAUSER21264" updated="2021-01-12 18:51:39.0"> <body><! CDATA  ~bestbeforetoday  I guess you could do the same rename MergeStrategy but I'm not sure of the correct way to address this. Perhaps removing one of the dependencies?  Sorry I can't be of more help as I'm not familiar with dependency management in Java.  ></body> </Action>
<Action id="71312" issue="46467" author="lesleyannj" type="comment" body="Try new Log4j version" created="2021-01-27 13:54:44.0" updateauthor="lesleyannj" updated="2021-01-27 13:54:44.0"/>
<Action id="71334" issue="46467" author="JIRAUSER21264" type="comment" created="2021-02-02 15:48:50.0" updateauthor="JIRAUSER21264" updated="2021-02-02 15:48:50.0"> <body><! CDATA Hey  ~lesleyannj  not sure if my bug report was clear but is the suggestion here for  ~bestbeforetoday  to upgrade fabric-sdk-java to 2.14.0 for both log4j dependencies?      https://github.com/hyperledger/fabric-sdk-java/blob/9516351ee32c043fa12fcc965c2b76eeb73d8937/pom.xml#L40   ></body> </Action>
<Action id="71336" issue="46467" author="bestbeforetoday" type="comment" created="2021-02-02 19:25:53.0" updateauthor="bestbeforetoday" updated="2021-02-02 19:25:53.0"> <body><! CDATA If using log4j-core and log4j-1.2-api at v2.14.0 solves the issue then I can make that change to the fabric-sdk-java dependencies. Using Maven you should typically be able to test that theory by specifying explicit dependencies on those artifact versions in a local project, and everything will use the higher version to satisfy the Maven dependency resolution.  As I mentioned before, a Log4J defect that looks similar to the issue you describe was apparently fixed by Log4J v2.13.1, and fabric-sdk-java already uses v2.13.3 so we should have that fix.  I it isn't fixed by fabric-sdk-java moving to Log4J 2.14.0 then it's an issue that needs to be resolved by Log4J themselves.  ></body> </Action>
<Action id="71350" issue="46467" author="lesleyannj" type="comment" body="log4j-core and log4j-api moved to v2.14.0 on master and 2.2 branches" created="2021-02-04 16:30:44.0" updateauthor="lesleyannj" updated="2021-02-04 16:30:44.0"/>
