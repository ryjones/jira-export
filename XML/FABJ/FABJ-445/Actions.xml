<Action id="63041" issue="40279" author="br0x" type="comment" created="2019-08-19 06:32:52.0" updateauthor="br0x" updated="2019-08-19 06:32:52.0"> <body><! CDATA +1 for that     I could start working for a patch on this..     Seems that the channel already has necessary functions.     Plan: # ProposalBuilder can be used (in the same manner as in Channel.sendProposal function) to build an unsigned Proposal. # Further the offline client can use Proposal to create SignedProposal (thus the getSingedProposal function /or similar/ should be made public). # sendProposalToPeers should be made public so that online client could finally send it.              ></body> </Action>
<Action id="67686" issue="40279" author="nitishbhardwaj19" type="comment" body="Is there any plan for this feature?" created="2020-01-28 08:08:54.0" updateauthor="nitishbhardwaj19" updated="2020-01-28 08:08:54.0"/>
<Action id="69393" issue="40279" author="bestbeforetoday" type="comment" created="2020-06-04 14:33:11.0" updateauthor="bestbeforetoday" updated="2020-06-04 14:33:11.0"> <body><! CDATA During the Channel.sendProposal() flow, the signing is done by calling CryptoSuite.sign() on whatever CryptoSuite implementation you have set on the HFClient. Would a workable approach be to supply your own CryptoSuite implementation where CryptoSuite.sign() does the offline signing?  If it isn't workable to have the offline signing done by some user code like this that can be plugged into the flow of submitting a transaction, it would really help me if you could describe the scenarios that require a different approach and why.  ></body> </Action>
<Action id="70758" issue="40279" author="lesleyannj" type="comment" body="Closing - intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32" created="2020-11-19 16:00:00.0" updateauthor="lesleyannj" updated="2020-11-19 16:00:00.0"/>
