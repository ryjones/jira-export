<Issue id="21270" key="FABG-294" number="294" project="10610" reporter="scottmoynes" assignee="sandrav" creator="scottmoynes" type="10004" summary="Go SDK configuration filename reused across calls to NewSDK" priority="3" resolution="10000" status="6" created="2017-10-03 17:36:22.0" updated="2018-07-18 23:52:25.0" resolutiondate="2017-10-05 19:25:45.0" votes="0" watches="3" workflowId="33093"> <description><! CDATA When creating {{FabricSDK}}, the configuration filename is reused across calls.  For example, with this code:  {code:none} package main  import ( 	"log"  	deffab "github.com/hyperledger/fabric-sdk-go/def/fabapi" 	deffabopt "github.com/hyperledger/fabric-sdk-go/def/fabapi/opt" )  func main() { 	opts := deffab.Options{ 		ConfigFile: "", 		StateStoreOpts: deffabopt.StateStoreOpts{ 			Path: "/var/hyperledger/state", 		}, 	}  	opts.ConfigFile = "does-not-exist.yaml" 	_, err := deffab.NewSDK(opts) 	if err != nil { 		log.Printf("Unable to initialize SDK with %s: %s", opts.ConfigFile, err) 		// => Unable to initialize SDK with does-not-exist.yaml: Failed to initialize config  Fatal error config file: open does-not-exist.yaml: no such file or directory  	}  	opts.ConfigFile = "client.yaml" 	_, err = deffab.NewSDK(opts) 	if err != nil { 		log.Printf("Unable to initialize SDK with %s: %s", opts.ConfigFile, err) 		// => Unable to initialize SDK with client.yaml: Failed to initialize config  fatal error config file: open does-not-exist.yaml: no such file or directory  	} } {code}  The first call to {{NewSDK}} fails, as expected. However, the second call also fails even if {{client.yaml}} exists. The error message reveals that the previous value for {{opts.ConfigFile}} is reused which is quite unexpected.  ></description> </Issue>
