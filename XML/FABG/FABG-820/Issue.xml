<Issue id="37376" key="FABG-820" number="820" project="10610" reporter="msam" creator="msam" type="10002" summary="Implement method which allows to execute transaction without necessety to wait for commit of transaction (asyncroniously)" priority="2" status="10100" created="2019-02-01 11:55:29.0" updated="2019-08-08 02:27:24.0" votes="0" watches="1" workflowId="48977"> <description><! CDATA Current  "Execute" call|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/chclient.go#L111 , which allows to execute tx is synchronous, due to it waits for the transaction status. There are situations, when there are huge amount of requests to hlf, but no need to wait, when txs will be committed. For example - creation of big amount of new independent objects. I.e. there is no need to wait until each tx is committed into ledger, but it's necessary to submit them to the orderer (for procession, blocks preparation, etc.) and provide response for the client. In such case user, who uses async request, should implement another component, which will be able to handle failed transactions. I.e. will listen for tx events from another service, kafka, etc and process failed transactions.   "Execute" method|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/chclient.go#L111  calls  cc.InvokeHandler|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/chclient.go#L115 , which uses chain of handlers created by "invoke.NewExecuteHandler()" In last one handler " NewCommitHandler(next...)|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/invoke/txnhandler.go#L202 " there is  "Handle" method|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/invoke/txnhandler.go#L148  which  registers tx event listener|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/invoke/txnhandler.go#L152  before  sending transaction to orderer|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/invoke/txnhandler.go#L159  After receiving of the response from orderer, it won't quit method, but will wait until  tx event is received or timeout|https://github.com/hyperledger/fabric-sdk-go/blob/v1.0.0-alpha4/pkg/client/channel/invoke/txnhandler.go#L165 .  I.e. the whole "Execute" method won't finish until tx is committed. And all next business logic will wait. So it's good to have another "Execute" method, which will allow to do async request (just get response from orderer) and not wait for commit of transaction.  ></description> </Issue>
