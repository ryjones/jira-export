<Action id="37646" issue="26172" author="gbolo" type="comment" created="2017-12-19 20:09:08.0" updateauthor="gbolo" updated="2017-12-19 20:12:40.0"> <body><! CDATA current the sdk when enrolling a user creates the following msp directory structure: {code:java} . ├── cacerts ├── keystore │   ├── eb1821eea4ab76800ac351ccf04acc5c338d66ebd552dff1a9f296d1b1a67dfd_sk │   └── skadmin.json └── signcerts{code}    the skadmin.json contains the cert along with some other metadata: {code:java} {"MspID":"Mybank1","Roles":null,"PrivateKeySKI":"6xgh7qSrdoAKw1HM8ErMXDONZuvVUt/xqfKW0bGmff0=","EnrollmentCertificate":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNDekNDQWJLZ0F3SUJBZ0lVQk1KdVF0emRtS2hmN1cxdGU5M0tabWtkK01Nd0NnWUlLb1pJemowRUF3SXcKZnpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVUJnTlZCQWNURFZOaApiaUJHY21GdVkybHpZMjh4SHpBZEJnTlZCQW9URmtsdWRHVnlibVYwSUZkcFpHZGxkSE1zSUVsdVl5NHhEREFLCkJnTlZCQXNUQTFkWFZ6RVVNQklHQTFVRUF4TUxaWGhoYlhCc1pTNWpiMjB3SGhjTk1UY3hNakU1TVRrMU5qQXcKV2hjTk1UZ3hNakU1TVRrMU5qQXdXakFTTVJBd0RnWURWUVFERXdkemEyRmtiV2x1TUZrd0V3WUhLb1pJemowQwpBUVlJS29aSXpqMERBUWNEUWdBRXhDQVY2c2xENCtpVnM2Y0NrVHhxdWtkWFlsNDVzMWlDZmZSYWxJaTlPamVBCjhsWU9ZQk10NVRmRVhTemZVSHlxaEt3UGYrNGMreHMyckt0eWRmSzlMNk41TUhjd0RnWURWUjBQQVFIL0JBUUQKQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkdFU0hqeTljS2xhVEdzQzNERFZZa1hMck9sVApNQjhHQTFVZEl3UVlNQmFBRkJkblFqMnFub0kveE1VZG4xdkRtZEcxbkVnUU1CY0dBMVVkRVFRUU1BNkNER1JqCk1HVTNaV00yTlRka1lUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQTFIYUhLVTlraHhvcm91SlM1WWpmYjVKbDEKUCtUVzhrMWxtQVIzd1gwTGhBSWdLZXBVaW5MVWdJZVUxS0hpeDhhRFFjbXZFVVJEVGhoMHdSaWQ4VUVJWWh3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="}{code}    Ideally, the sdk would produce a directory structure which is identical to the fabric-ca-client which the peer should be able to use, where the cert is placed in the "signcerts" directory and the cacerts directory gets populated with the signing cert used by ca which the sdk just registered to: {code:java} . |-- admincerts | `-- cert.pem |-- cacerts | `-- ca-vme-sk-dev-7054.pem |-- keystore | `-- c765a0a060f5e021432cc18942e4bc6c4198876d68669dbd5d22aa0628658c6f_sk |-- signcerts | `-- cert.pem `-- tlscacerts `-- ca_root.pem {code}    https://hyperledger-fabric.readthedocs.io/en/release/msp.html?highlight=msp#msp-setup-on-the-peer-orderer-side  ></body> </Action>
<Action id="42155" issue="26172" author="aleksandar.likic" type="comment" body="MSP file structure, as generated by the cryptogen tool, is supported on the client side as read-only. Newly enrolled users&apos; certs are stored in the UserStore which is pluggable. One can simply create an implementation of UserStore that keeps newly enrolled users&apos; certs in any way they wish." created="2018-03-26 15:04:21.0" updateauthor="aleksandar.likic" updated="2018-03-26 15:06:38.0"/>
