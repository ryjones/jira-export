<Issue id="34613" key="FABG-775" number="775" project="10610" reporter="vieiramanoel" assignee="vieiramanoel" creator="vieiramanoel" type="10004" summary="When shim returns an error, response.Response is void on fabric-sdk-go" priority="3" status="10708" created="2018-10-11 23:17:45.0" updated="2018-11-06 20:33:01.0" votes="1" watches="3" workflowId="46017"> <description><! CDATA I'm trying to manage chaincode errors in my application on fabric-sdk-go, the only way to do this right now is parsing the error string returned by shim. What I want to do is get error by pb.Response.Status, or through   *fab.TransactionProposalResponse. When I make a request to chaincode that returns an error e.g "existing asset" the response.ChaincodeStatus is always 0.  code example  sacc.go {code} func set(stub shim.ChaincodeStubInterface, args   string) (string, error) { 	if len(args) != 2 { 		return "402", fmt.Errorf("Incorrect arguments. Expecting a key and a value") 	}  	err := stub.PutState(args 0 ,   byte(args 1 )) 	if err != nil { 		return "", fmt.Errorf("Failed to set asset: %s", args 0 ) 	} 	return args 1 , nil }  unc (t *SimpleAsset) Invoke(stub shim.ChaincodeStubInterface) peer.Response { 	// Extract the function and args from the transaction proposal 	fn, args := stub.GetFunctionAndParameters()  	var result string 	var err error 	if fn == "set" { 		result, err = set(stub, args) 	} else { // assume 'get' even if fn is nil 		result, err = get(stub, args) 	} 	if err != nil { 		if result != "" { 			fmt.Println("error" + result) 			shimError := shim.Error(err.Error()) 			errorCode, err := strconv.Atoi(result) 			if err != nil { 				return shim.Error(err.Error()) 			} 			shimError.Status = int32(errorCode) 			return shimError 		} 		return shim.Error(err.Error()) 	}  	// Return the result as success payload 	return shim.Success(  byte(result)) } {code} sdk.go {code} resp, err := channelClient.Execute(invokeRequest) if err != nil { 	log.Printf("Put Error:\n%+v\n", resp) // at resp resp.Responses =    	log.Printf(err.Error())               // at error string chaincode status is 402 	return } retmsg := fmt.Sprintf("Put: %s = %s\n", "a", "20") log.Println(retmsg) } {code} Output    {code:java} 2018/10/11 20:11:42 Put Error: {Proposal:header:"\nh\010\003\032\013\010\256\261\377\335\005\020\352\315\274T\"\013mainchannel*@cdfcc0acdcb18498e28ffa4327ab89f440a7eb492ae4f684b3c2aca4238a7645:\010\022\006\022\004sacc\022\323\006\n\266\006\n\007Org1MSP\022\252\006-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIRAJrlYumimY/kuluI1rhJcFkwCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDExMjMwNTMxWhcNMjgxMDA4MjMwNTMx\nWjBsMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEPMA0GA1UECxMGY2xpZW50MR8wHQYDVQQDDBZBZG1pbkBv\ncmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEJXfpID4G\n/gqPByhKyiVM2sdRuukY2msjeXVAxXlyA8LAPKn9jsQGlz4clxGnRMupnjUWHGrI\nwANUnWlIfcPuQaNNMEswDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgLhlNm9YyGLW2gQpxQVdaT9nJ4Xb5yrrL8BiaI+wCbAcwCgYIKoZI\nzj0EAwIDRwAwRAIgZboJ490iM4tVYGKzEvmLTPa/FxPTEr/oxiPjD7xtYxwCIGyz\nrBAMyta4QT/TnxDO58hKw4Goa6YcTHaUq6dKlS5L\n-----END CERTIFICATE-----\n\022\030\250T\302\313\036\234\n\t\210 \020T|\216\037\025z\n\303C\013\034\347 " payload:"\n\026\n\024\010\001\022\006\022\004sacc\032\010\n\003set\n\001a"  Responses:   TransactionID:cdfcc0acdcb18498e28ffa4327ab89f440a7eb492ae4f684b3c2aca4238a7645 TxValidationCode:VALID ChaincodeStatus:0 Payload:  } 2018/10/11 20:11:42 Transaction processing for endorser  peer0.org1.example.com:7051 : Chaincode status Code: (402) UNKNOWN. Description: Incorrect arguments. Expecting a key and a value {code}      So, somewhere "ChaincodeStatus" is 402, but it is set only for the error itself, not to the structure Response  ></description> </Issue>
