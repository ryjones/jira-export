<Issue id="18967" key="FABG-290" number="290" project="10610" reporter="dolanor" creator="dolanor" type="10004" summary="fabrictxn.QueryChaincode() asks for 3 args when it needs 2 actually" priority="3" resolution="10000" status="6" created="2017-07-05 12:42:23.0" updated="2018-07-18 23:52:25.0" resolutiondate="2018-03-19 20:51:13.0" votes="0" watches="2" workflowId="33089"> <description><! CDATA From some memory, I thought I should call the query with the invoke first, so I did that:    {code:java} response, err := fabrictxn.QueryChaincode(client, channel, "sunchaincode",   string{"invoke", "query", "b"}) {code}       But then I got an error telling me that {noformat} status: 500, message: Incorrect number of arguments. Expecting 3{noformat} (log)    {code:java} 2017-07-05 12:11:31.941 CEST  fabric_sdk_go  InitConfigWithCmdRoot -> INFO 001 Using config file: ./config.yaml 2017-07-05 12:11:31.942 CEST  fabric_sdk_go  InitConfigWithCmdRoot -> INFO 002 fabric_sdk_go Logging level: info 12:11:31.942  fabric_sdk_go  INFO :  KeyStore path  ./statestore  missing  true :  %!s(<nil>)  12:11:31.959  fabric_sdk_go  INFO :  Constructed channel instance: &{mychain true map   200 map   0xc42001def0 <nil> 0xc4201e7540    false} --- FAIL: TestGetMeters (0.26s)     client_test.go:15: Error quering the blockchain  couldn't query the chaincode: CreateAndSendTransactionProposal returned error: invoke Endorser  returned error: Transaction processor (ec2-35-156-192-46.eu-central-1.compute.amazonaws.com:7051) returned error 'rpc error: code = Unknown desc = chaincode error (status: 500, message: Incorrect number of arguments. Expecting 3)' for proposal: {802ba8c16c9a804cc3c5344ce21ca24b11d37fef2fa2eb394cba515d8b3d2ca4 proposal_bytes:"\n\262\007\nn\010\003\032\014\010\323\366\362\312\005\020\257\336\342\311\003\"\010sunchain*@802ba8c16c9a804cc3c5344ce21ca24b11d37fef2fa2eb394cba515d8b3d2ca4:\020\022\016\022\014mychaincode\022\277\006\n\242\006\n\007Org1MSP\022\226\006-----BEGIN CERTIFICATE-----\nMIICGjCCAcCgAwIBAgIRAKDiQPB9Uhjjvg7AG1T92eswCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzA0MTAyODQ1WhcNMjcwNzAyMTAyODQ1\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABE8kdeEMnKzQ8EP4CCtpWWNI4S+Mtvar\nl+rTzNbI6Anx1aa2jUtHrSW9yuLpe9rIL8WpAy3DNOnzUU5CiAA1aY+jTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIEAA0ySyXOe5\nmM9aAw/jr22ao8vXpF7V6wtcRwxEMsRNMAoGCCqGSM49BAMCA0gAMEUCIQC42lJ1\nahtZOIzVccQeXrtcvBwwepgPFXHzLw4miywoqQIgYO0QF1snDL1Ca0fkGQ7/dByn\n6bnuNVpr1m11ThAduuA=\n-----END CERTIFICATE-----\n\022\030{w^\324\002\321JWT\034\314\tzR\3314L\262\377d\016<*_\022*\n(\n&\010\001\022\016\022\014mychaincode\032\022\n\006invoke\n\005query\n\001b" signature:"0D\002 -\335r_W\206*wl\251\231\016\351\341\324'\253\350dd\357<\314R}>\241\376D I\301\002 m_y\360\307\022\257f\010)~\345\252\210\316\261\202\2162\207I\024A\264M\024\243:\034\000NC"  header:"\nn\010\003\032\014\010\323\366\362\312\005\020\257\336\342\311\003\"\010sunchain*@802ba8c16c9a804cc3c5344ce21ca24b11d37fef2fa2eb394cba515d8b3d2ca4:\020\022\016\022\014mychaincode\022\277\006\n\242\006\n\007Org1MSP\022\226\006-----BEGIN CERTIFICATE-----\nMIICGjCCAcCgAwIBAgIRAKDiQPB9Uhjjvg7AG1T92eswCgYIKoZIzj0EAwIwczEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzA0MTAyODQ1WhcNMjcwNzAyMTAyODQ1\nWjBbMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\nU2FuIEZyYW5jaXNjbzEfMB0GA1UEAwwWQWRtaW5Ab3JnMS5leGFtcGxlLmNvbTBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABE8kdeEMnKzQ8EP4CCtpWWNI4S+Mtvar\nl+rTzNbI6Anx1aa2jUtHrSW9yuLpe9rIL8WpAy3DNOnzUU5CiAA1aY+jTTBLMA4G\nA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIEAA0ySyXOe5\nmM9aAw/jr22ao8vXpF7V6wtcRwxEMsRNMAoGCCqGSM49BAMCA0gAMEUCIQC42lJ1\nahtZOIzVccQeXrtcvBwwepgPFXHzLw4miywoqQIgYO0QF1snDL1Ca0fkGQ7/dByn\n6bnuNVpr1m11ThAduuA=\n-----END CERTIFICATE-----\n\022\030{w^\324\002\321JWT\034\314\tzR\3314L\262\377d\016<*_" payload:"\n(\n&\010\001\022\016\022\014mychaincode\032\022\n\006invoke\n\005query\n\001b" } 12:11:32.204  fabric_sdk_go  INFO :  Using config file: ./config.yaml 12:11:32.205  fabric_sdk_go  INFO :  fabric_sdk_go Logging level: info 12:11:32.205  fabric_sdk_go  INFO :  KeyStore path  ./statestore  missing  true :  %!s(<nil>)  {code}    The fix was to remove the "invoke" arg (and therefore making the args number of 2, which goes against the error message) {code:java} response, err := fabrictxn.QueryChaincode(client, channel, "sunchaincode",   string{"query", "b"}){code}    ></description> </Issue>
