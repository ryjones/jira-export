<Action id="28395" issue="19263" author="troyronda" type="comment" created="2017-07-14 14:04:10.0" updateauthor="troyronda" updated="2017-07-14 14:04:10.0"> <body><! CDATA  ~divyank  has confirmed this is an issue.  Also the tests aren't currently revealing the issue due to only have pre-enrolled users in the current integration tests.  ></body> </Action>
<Action id="28397" issue="19263" author="passkit" type="comment" body="This issue is critical, since the CSR is the only way to set the OU for a new user.  Hyperledger Fabric v1.0.0 requires the OU to be set and as such, any certificates the SDK generates cannot be used. " created="2017-07-14 14:21:48.0" updateauthor="passkit" updated="2017-07-14 14:21:48.0"/>
<Action id="29471" issue="19263" author="mastersingh24" type="comment" created="2017-08-06 11:39:50.0" updateauthor="mastersingh24" updated="2017-08-06 11:39:50.0"> <body><! CDATA  ~passkit    The Hyperledger Fabric runtime DOES NOT require the OU to be set unless you choose to use the same root CA and use OUs to distinguish organizations in MSPs.  If each organization uses a different root CA, then OU's are not applicable at all.   ~troyronda   ~divyank   I am not sure exactly what the ask is here?  You can definitely include a CSR with your enroll request.        ></body> </Action>
<Action id="29479" issue="19263" author="passkit" type="comment" created="2017-08-07 05:09:32.0" updateauthor="passkit" updated="2017-08-07 05:10:32.0"> <body><! CDATA  ~mastersingh24 , maybe it is not critical, but for users who choose to use OU's, the GO SDK does not allow for the CSR to be set for an enrol request.  This is part of a wider issue that there are many places within the SDK that make assumptions and either hard code variables or omit optional variables.  The general principle should be that if the Fabric APIs allow a parameter to be set, then the SDK should provide the ability to do so.  In this case the authors have assumed that a CSR will not be required and have not provided the option to pass one through in the fabric-ca enrol request made by the SDK's fabric-ca client.    ></body> </Action>
<Action id="29482" issue="19263" author="mastersingh24" type="comment" created="2017-08-07 08:13:06.0" updateauthor="mastersingh24" updated="2017-08-07 08:13:06.0"> <body><! CDATA My bad - I did not notice that this was specific to the Go SDK.  (I actually implemented the fabric-ca-client for Node JS and it does allow you to specify a CSR if you want)  ></body> </Action>
<Action id="40243" issue="19263" author="smithbk" type="comment" created="2018-02-15 12:36:05.0" updateauthor="smithbk" updated="2018-02-15 12:36:05.0"> <body><! CDATA The fabric-ca-server always issues certificates with OUs set according to the identity type and affiliation.  For example, if the identity type is "peer" and the affiliation is "a.b", then the OUs are "OU=peer, OU=a, OU=b".  The reason for doing this is: 1) fabric-ca-server has governance around the type and affiliation fields of a user; that is, it is not the enroller who decides what type and affiliation they get, but rather it is the registrar.  And furthermore, a registrar can be given privileges to register identities with only particular types and affiliations. 2) fabric makes authorization decisions about who is a peer, orderer, or client based on OUs. Therefore, this means it is the registrar, not the enroller, who decides what OUs they get.  This is important so that for example if a client is given an enrollment ID and secret to get an e-cert, this client could not turn around and get an ecert with an OU which would allow them to masquerade as a peer or orderer.  ></body> </Action>
<Action id="40252" issue="19263" author="troyronda" type="comment" body=" ~aleksandar.likic  - I am closing this one as OU isn&apos;t directly set. We do need to ensure that type and affiliation can be set in your new identity client API." created="2018-02-15 15:27:08.0" updateauthor="troyronda" updated="2018-02-15 15:27:08.0"/>
