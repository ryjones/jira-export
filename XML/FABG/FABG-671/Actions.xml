<Action id="41472" issue="28428" author="troyronda" type="comment" body="Yes - the current Go SDK includes a pluggable discovery mechanism so would be great to include the Fabric 1.2 discovery service." created="2018-03-12 15:34:48.0" updateauthor="troyronda" updated="2018-03-12 15:34:48.0"/>
<Action id="41474" issue="28428" author="yacovm" type="comment" created="2018-03-12 15:45:11.0" updateauthor="yacovm" updated="2018-03-12 15:45:42.0"> <body><! CDATA I'd like the keep the reference implementation in the core project so i can re-use it for peer CLI, and since you guys just reference fabric anyway - it should be pretty easy to do that, I think:  All the client of the reference implementation linked above needs is: * A function that signs a message * A function that creates a gRPC connection to a peer * Some  authentication|https://github.com/hyperledger/fabric/blob/master/protos/discovery/protocol.proto#L49-L63  information  Wrap the reference implementation and you should be good to go.  However - lets wait until the change set and all underneath are merged before we do this work.  ></body> </Action>
<Action id="41476" issue="28428" author="troyronda" type="comment" created="2018-03-12 16:34:21.0" updateauthor="troyronda" updated="2018-03-12 16:34:21.0"> <body><! CDATA Yes - we already copy code from the fabric project using scripts and then checked into the SDK repo. It's much easier for fabric packages that are self-contained so we don't have to script any edits on top. E.g., to remove dependencies.  Yes - we have those functions but might need wrapping to adjust to the signatures that the reference client expects.  Another thing we need for integration tests is a pullable docker image of Fabric that includes the merged discovery implementation.  ></body> </Action>
