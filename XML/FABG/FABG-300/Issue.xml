<Issue id="20285" key="FABG-300" number="300" project="10610" reporter="smanolache" assignee="divyank" creator="smanolache" type="10004" summary="there&apos;s no way to detect the loss of the event RPC connection" priority="3" resolution="10000" status="6" created="2017-08-18 15:11:40.0" updated="2018-07-18 23:52:26.0" resolutiondate="2018-03-19 20:56:03.0" votes="1" watches="3" workflowId="33099"> <description><! CDATA Hello,  I'm using the lastest code as of 2017-08-18. Git commit id: 110bf21bf3ab0a9a084f46d9698e1daeeda68a59  In the eventsClient.processEvents function:  When there's an error in the eventsClient.stream then adapter.Disconnected() is called. However eventHub.Disconnected() does not do much, it just logs the connection loss. eventHub.IsConnected() still returns true. Applications cannot find out that the connection was lost, so they will not reinitialize the connection by calling eventHub.Connect().  I propose to call a kind of eventHub.Disconnect() from Disconnected(). However Disconnect() cannot be used because it exits on the first error. We would need to execute all that Disconnect() does (UnregisterAsync() and Stop()) disregarding the errors. eventsClient.Stop() must be changed too. It should not return on the first error. In my opinion it should attempt both ec.stream.CloseSend() and ec.clientConn.Close(). Only then it should return one of the encountered errors.  Â   Best regards,  Sorin  ></description> </Issue>
