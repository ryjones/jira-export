<Issue id="29568" key="FABG-563" number="563" project="10610" reporter="aleksandar.likic" creator="aleksandar.likic" type="10001" summary="Support for various authentication scenarios" priority="3" status="3" created="2018-04-20 19:42:52.0" updated="2019-01-25 01:29:30.0" votes="0" watches="2" workflowId="33362"> <description><! CDATA Scenarios: # SigningIdentity provided to SDK from app (using SW crypto provider) - currently not supported, as the only way to create a SigningIdentity instance is to ask the SDK. SDK configuration should require: ## SW crypto provider only # User cert and private key from app (using SW crypto provider) - currently not supported. SDK configuration should require: ## SW crypto provider only # User cert from app, private key from embedded configuration (using SW crypto provider) - currently not supported. SDK configuration should require: ## SW crypto provider ## Embedded key store # User cert from app, private key from org MSP configuration (using SW crypto provider) - currently not supported. SDK configuration should require: ## SW crypto provider ## Org MSP key store # User cert from app, private key from HSM - supported(*). SDK configuration should require: ## HSM crypto provider only # Username/Org(***) from app, user cert and private key from embedded configuration (using SW crypto provider) - supported(*). SDK configuration should require: ## Embedded cert and key store ## SW crypto provider # Username/org(***) from app, user cert and private key from org MSP configuration (using SW crypto provider) - supported(*). SDK configuration should require: ## MSP cert and key store ## SW crypto provider # Username/org(***) from app, user cert from embedded configuration, key from HSM - supported(*). SDK configuration should require: ## Embedded cert store ## HSM crypto provider # Username/org(***) from app, user cert from org MSP configuration, key from HSM - supported(*). SDK configuration should require: ## MSP cert ## HSM crypto provider # (***)Enrolled user's username/org(****) from app, user cert from user store, key from file key store controlled by SW crypto provider. SDK configuration should require: ## user store(****) ## SW crypto provider # (***)Enrolled user's username/org(****) from app, user cert from user store, key from HSM. SDK configuration should require: ## user store(****) ## HSM crypto provider  ((*)) Currently supported use cases might still require configuring unnecessary cert/key stores (that might not be used) to workaround current implementation. This requirement will be gone once this story is fully implemented.  ((*)(*)) Users enrolled by the SDK. In that case, the generated cert is stored into the user store, and the generated private key into the crypto store (SW keystore or HSM, depending on the configured crypto provider)  ((*)(*)(*)) If org is not provided, the client organization from configuration is used.  ((*)(*)(*)(*)) Implementation of the user store interface (where the generated user cert is store upon enrollment via SDK) can be provided by the application.  Note that the required SDK configuration items could be provided by the app during SDK instantiation, using With* options. This should allow instantiating the SDK without configuration file.  Tasks: # Consolidate integration test cases # Create user documentation     ></description> </Issue>
