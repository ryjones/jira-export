<Issue id="34647" key="FABG-778" number="778" project="10610" reporter="jvsclp" assignee="jvsclp" creator="jvsclp" type="10004" summary="crypto-gen fails on Windows using MINGW64 when running &apos;make populate&apos;" priority="1" resolution="10000" status="6" created="2018-10-12 21:06:39.0" updated="2018-11-02 13:59:41.0" resolutiondate="2018-11-02 13:59:41.0" votes="0" watches="1" workflowId="46051"> <description><! CDATA Two bugs cause running the fabric-sdk-go makefile to fail on Windows 10 running MINGW64.  When running {{*make populate* }}as described in Getting Started on Windows 10 using MINGW64 the crypto-gen function fails with the error:  {{Generating crypto directory ...}} {{c:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: Mount denied:}} {{The source path "D:/gowork/src/github.com/hyperledger/fabric-sdk-go;C"}} {{doesn't exist and is not known to Docker.}} {{See 'c:\Program Files\Docker\Docker\Resources\bin\docker.exe run --help'.}} {{make: ***  crypto-gen  Error 125}}  The source path gets appended with, {{{color:#ff0000}*;C*{color}}}, causing the Docker call to fail.  This issue affects all functions in the Makefile that call Docker to run and mount a volume. That is: * crypto-gen * channel-config-gen * channel-config-stable-gen * channel-config-prev-gen * channel-config-prerelease-gen * channel-config-devstable-gen  Second, after correcting the volume mount problem above, when running one of the above listed functions another error prevents the called function from running :  {{c:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: OCI runtime create failed: container_linux.go:348: starting container process caused "exec: \"C:/MinGW/msys/1.0/bin/bash\": stat C:/MinGW/msys/1.0/bin/bash: no such file or directory": unknown.}} {{make: ***  channel-config-gen  Error 127}}  It seems that Docker on Windows is searching the local machine's PATH for a bash executable rather than using the container's bash.  ></description> </Issue>
