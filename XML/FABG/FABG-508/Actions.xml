<Action id="39400" issue="27251" author="troyronda" type="comment" created="2018-01-31 01:52:50.0" updateauthor="troyronda" updated="2018-01-31 01:53:57.0"> <body><! CDATA Earlier today, we were working on refactoring channel client to support retry capability. As part of that change, the return value of Query and Execute was changed to return a struct rather than byte array.  New return type:  https://github.com/hyperledger/fabric-sdk-go/blob/master/api/apitxn/txn.go#L25   New execute signature:   https://github.com/hyperledger/fabric-sdk-go/blob/master/pkg/fabric-txn/chclient/chclient.go#L67   I copied Divyank who was working on the refactor.  Hope this helps - if you have further ideas on top of this change, please let us know!     ></body> </Action>
<Action id="39431" issue="27251" author="divyank" type="comment" created="2018-01-31 14:42:07.0" updateauthor="divyank" updated="2018-01-31 14:42:20.0"> <body><! CDATA Re: Interpreting outputs  We have started transitioning errors returned by the SDK to use the new status package. So far we only return status for transient error conditions in the context of retries. You can extract status from such errors by using:  https://godoc.org/github.com/hyperledger/fabric-sdk-go/pkg/errors/status#FromError  We are happy to review PRs / requests for returning additional status codes.  Re: Long error strings  All functions wrap their context around the error using the errors package. You can unwrap these to find to root cause by using:  https://godoc.org/github.com/hyperledger/fabric-sdk-go/pkg/errors#Cause   ></body> </Action>
<Action id="39473" issue="27251" author="ga25waq" type="comment" created="2018-02-01 02:15:21.0" updateauthor="ga25waq" updated="2018-02-01 02:15:21.0"> <body><! CDATA Thanks for your quick replies!  The ability to extract a status from an error sounds good. So I guess it will be possible to extract the status for a chaincode error that way, right?  Unfortunately, I had no success with unwrapping an error that was originally caused by a chaincode.  After unwrapping it, I got: > SendTransactionProposal failed: Transaction processor (peer0.org1.example.com:7051) returned error for txID ' txid ': > gRPC Transport Status Code: (2) Unknown. Description: chaincode error (status: 500, message:  chaincode_message )  I'm just interested in the message of the chaincode error with status code 500.  ></body> </Action>
<Action id="39531" issue="27251" author="divyank" type="comment" created="2018-02-01 17:16:29.0" updateauthor="divyank" updated="2018-02-01 17:17:16.0"> <body><! CDATA The error you've posted is created using the status package. So you can extract the code by doing something like: {code:java} s, ok := status.FromError(err) if ok { s.Code() // This is your error code }{code} However, it looks like you will get back the gRPC status code  2 . Can I ask what API within fabric-sdk-go you are using to make this request?  The transaction response validation is done by the higher-level ChannelClient APIs and that could be why you are not getting back the expected status code  ></body> </Action>
<Action id="39556" issue="27251" author="ga25waq" type="comment" created="2018-02-02 01:45:15.0" updateauthor="ga25waq" updated="2018-02-02 01:45:15.0"> <body><! CDATA Yes, you're right, I get a > gRPC Transport Status Code: (2) Unknown. Description: chaincode error (status: 500, message:  ... ) (that's actually the formatted string returned by status.Error())  I'm using sdk.NewClient( ... ).Channel( ... ), just like in your integration tests. And I'm working with the current revision a0a9430.  ></body> </Action>
<Action id="39564" issue="27251" author="divyank" type="comment" created="2018-02-02 05:22:20.0" updateauthor="divyank" updated="2018-02-02 05:22:20.0"> <body><! CDATA I looked into this and found that in case of a chaincode error, the Peer's gRPC endpoint returns the RPC error string you see above and status code Unknown.   https://github.com/hyperledger/fabric-sdk-go/blob/master/pkg/fabric-client/peer/peerendorser.go#L101  Unless the peer returns a meaningful RPC error code or a non-nil response with a status code in it, the client cannot interpret the status code.   ></body> </Action>
<Action id="39594" issue="27251" author="divyank" type="comment" created="2018-02-02 15:26:31.0" updateauthor="divyank" updated="2018-02-02 15:26:31.0"> <body><! CDATA Update: I've reported this issue upstream https://jira.hyperledger.org/browse/FAB-8035   Currently, the only way to extract a non-200 chaincode status is to parse the error string returned from the RPC call.     ></body> </Action>
<Action id="41843" issue="27251" author="troyronda" type="comment" body="https://gerrit.hyperledger.org/r/c/19493/" created="2018-03-20 19:05:58.0" updateauthor="troyronda" updated="2018-03-20 19:05:58.0"/>
<Action id="41848" issue="27251" author="troyronda" type="comment" body="merged." created="2018-03-20 20:19:33.0" updateauthor="troyronda" updated="2018-03-20 20:19:33.0"/>
<Action id="41856" issue="27251" author="ga25waq" type="comment" created="2018-03-20 23:04:17.0" updateauthor="ga25waq" updated="2018-03-20 23:04:17.0"> <body><! CDATA Thanks for the fix! Looking for the index of a closing bracket in ./pkg/fab/peer/peerendorser.go:186, however, is problematic for messages containing such a char itself, as they get cut off.  ></body> </Action>
<Action id="41902" issue="27251" author="troyronda" type="comment" body="fix merged" created="2018-03-21 23:57:45.0" updateauthor="troyronda" updated="2018-03-21 23:57:45.0"/>
