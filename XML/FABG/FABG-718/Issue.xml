<Issue id="32805" key="FABG-718" number="718" project="10610" reporter="sudeshrshetty" assignee="sudeshrshetty" creator="sudeshrshetty" type="10002" summary="Go SDK - ChainCodeEvent - getting older events" priority="3" resolution="10000" status="6" created="2018-08-13 20:37:05.0" updated="2019-01-25 01:28:17.0" resolutiondate="2019-01-25 01:28:17.0" votes="0" watches="1" workflowId="44042"> <description><! CDATA After registration & chclient.execute, older CC event (previous to current chclient.execute) is being fetched instead of latest one. * func (c *ChannelController) QueryCC() Unknown macro: \{//获取input参数c.getTransctionInput()fmt.Println(input)//获取网络配置信息configfile } , channel.WithRetry(retry.DefaultChannelOpts)) if err != nil { c.responsefunc(false, "Failed to invoke chaincode", err.Error()) } if flag == "1" { time.Sleep(time.Second * 10) } var ccEvent *fab.CCEvent select { case ccEvent = <-notifier: fmt.Println("Received CC event", ccEvent) // t.Logf("Received CC event: %#v\n", ccEvent) case <-time.After(time.Second * 20): c.responsefunc(false, "Did NOT receive CC event for eventID", eventID) // t.Fatalf("Did NOT receive CC event for eventId(%s)\n", eventID) } // select { // case ccEvent = <-notifier: // fmt.Println("Received CC event", ccEvent) // // t.Logf("Received CC event: %#v\n", ccEvent) // case <-time.After(time.Second * 20): // c.responsefunc(false, "Did NOT receive CC event for eventID", eventID) // // t.Fatalf("Did NOT receive CC event for eventId(%s)\n", eventID) // } // c.responsefunc(true, "query successfully", string(response.Payload)) }  *  InvokeCC is my own function , i tested it with postman, the result is the same  ></description> </Issue>
