<Issue id="17901" key="FABG-464" number="464" project="10610" reporter="troyronda" assignee="firas.qutishat" creator="troyronda" type="10001" summary="SDK Go - Change folder structure and decouple packages (**breaking change**)" priority="3" resolution="10000" status="6" created="2017-06-14 14:54:21.0" updated="2018-07-20 19:15:50.0" resolutiondate="2017-06-21 17:11:18.0" votes="0" watches="4" workflowId="33263" security="10001"> <description><! CDATA As a Go developer, I want to understand the dependencies between packages based on convention and I want to be able to plugin my own low-level implementations (e.g., Fabric-ca-client and Fabric-Client) into higher level transaction APIs.  Work items:  1- move the interfaces one level up (should be part of the consuming side not the concrete implementations).  2- folders in the same level can't depend on each other(Refactor to remove dependency between fabric-client and fabric-ca-client – fabric-client and fabric-ca client should be independent)  3- rename chain package to channel (to match node SDK)  4 - decouple config package  ---  Upcoming tickets based on this change: * FAB-4890 (Fabric Txn API) * FAB-4694 (Test coverage improvements)     Tips on best practices: *  https://peter.bourgon.org/go-best-practices-2016/#repository-structure  *  https://github.com/thockin/go-build-template  *  https://www.goinggo.net/2017/02/package-oriented-design.html  *  https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1      Gerrit Change Sets: *  https://gerrit.hyperledger.org/r/#/c/10785/   ></description> </Issue>
