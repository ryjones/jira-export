<Issue id="18877" key="FABG-357" number="357" project="10610" reporter="troyronda" assignee="divyank" creator="troyronda" type="10004" summary="Race condition in eventhub" priority="2" resolution="10000" status="6" created="2017-07-01 15:30:10.0" updated="2018-07-18 23:52:37.0" resolutiondate="2017-08-15 20:02:22.0" votes="0" watches="1" workflowId="33156"> <description><! CDATA You can see details by running make race-test.  Summary -  While reconnecting eventhub, the go routine that receives events from the gRPC stream waits for eventhub.Disconnect() to release the eventhub mutex lock before proceeding with event delivery. This causes it to exit after Disconnect(), accessing the stream object from subsequent invocations of eventhub.Connect().  Disconnect() and the processEvents() routine must be synchronized to prevent this.   Side-note: this code is hard to follow and should be refactored.  Data race at lines:  * pkg/fabric-client/events/consumer/consumer.go:252  * pkg/fabric-client/events/consumer/consumer.go:261 called by pkg/fabric-client/events/eventhub.go:262     ></description> </Issue>
