<Issue id="32028" key="FABG-416" number="416" project="10610" reporter="sudeshrshetty" assignee="sudeshrshetty" creator="sudeshrshetty" type="10004" summary="SDK Go : Issue with getting endorsement from peer not in config" priority="3" resolution="10000" status="6" created="2018-07-18 14:39:21.0" updated="2018-08-14 15:44:46.0" resolutiondate="2018-08-14 15:44:46.0" votes="1" watches="3" workflowId="33215"> <description><! CDATA  Both peers are joined the channel, anchor peer updates applied, cc installed, cc instantiated on *peer0.org1*. {noformat} Chaincode Policy: `AND('Org1MSP.member','Org2MSP.member')`{noformat}     When trying to invoke the chaincode: {noformat} dialing connection timed out  peer0.org2.example.com:7351  Transaction processing for endorser  peer0.org2.example.com:7351 : Endorser Client Status Code: (2) CONNECTION_FAILED. Description: dialing connection timed out  peer0.org2.example.com:7351   {noformat} The peer is running on `*_localhost:7351_*` {noformat} `/etc/hosts` entry: `127.0.0.1 peer0.org2.example.com`{noformat}      {panel:title=Config}   {noformat} peers:   default:  grpcOptions:  keep-alive-time: 0s     keep-alive-timeout: 20s  keep-alive-permit: false  fail-fast: false  allow-insecure: false   peer0.org1.example.com:7051:  url: localhost:7051  eventUrl: localhost:7053  grpcOptions:  ssl-target-name-override: peer0.org1.example.com  tlsCACerts: path: ${GOPATH}/src/...   channels:  mappedchannel:  peers: peer0.org1.example.com:7051:  endorsingPeer: true  chaincodeQuery: true  ledgerQuery: true  eventSource: true   entityMatchers:  channel:  - pattern: (\w+)  mappedName: mappedchannel {noformat}   {panel} sdk version: `55ab46a8c2a69288dda370dd335a85a300d15aa5`     When I add `peer0.org2.example.com:7351` to peers without a `tlsCACerts`, the sdk tries to get the TxStatus from this peer, but can't connect because it cannot build a TLS connection. (I don't want it to connect there. I only want to get endorsements from this peer.) If there are 100 orgs in my network, I don't want to update my `config.yaml` whenever 1 org joins or leaves the network. In a previous version of the sdk, it worked that I got my endorsements from a peer that I did not specify/tit not specify the tlsCrt  You can load the tlsCrt from the channel config Not quite sure if it is also delivered by the discovery serviceTo make my goal clearer: use case: I have 1 org in a big network. I want to specify only my peers and orderers. But when I invoke chaincode, I want the sdk to get endorsements from other orgs     ></description> </Issue>
