<Issue id="32800" key="FABG-717" number="717" project="10610" reporter="sudeshrshetty" assignee="sudeshrshetty" creator="sudeshrshetty" type="10002" summary="Go SDK - Unhandled Panic in TLSCertHash" priority="3" resolution="10000" status="6" created="2018-08-13 18:54:42.0" updated="2018-08-14 15:34:01.0" resolutiondate="2018-08-14 15:34:01.0" votes="0" watches="1" workflowId="44037"> <description><! CDATA |// TLSCertHash is a utility method to calculate the SHA256 hash of the configured certificate (for usage in channel headers) func TLSCertHash(config fab.EndpointConfig)   byte {| |certs := config.TLSClientCerts() if len(certs) == 0 \{return nil }cert := certs 0  if len(cert.Certificate) == 0{ return nil } h := cutil.ComputeSHA256(cert.Certificate 0 ) // Unhandled panic here. return h }|  ComputeSHA256 panics if it cannot compute the hash. source code is at:  •  https://github.com/hyperledger/fabric/blob/release-1.2/common/util/utils.go  func ComputeSHA256(data   byte) (hash   byte) \{ hash, err := factory.GetDefault().Hash(data, &bccsp.SHA256Opts{}) if err != nil  { panic(fmt.Errorf("Failed computing SHA256 on  % x ", data))}  return }  ></description> </Issue>
