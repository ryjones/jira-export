<Issue id="27121" key="FABG-316" number="316" project="10610" reporter="ga25waq" assignee="troyronda" creator="ga25waq" type="10004" summary="Gopackager does not pack all source files typically needed by Go libraries" priority="3" resolution="10000" status="6" created="2018-01-27 21:32:03.0" updated="2018-07-18 23:52:29.0" resolutiondate="2018-03-20 18:36:35.0" votes="0" watches="2" workflowId="33115"> <description><! CDATA The gopackager in > ./pkg/fabric-client/ccpackager/gopackager/packager.go only packs a subset of the source files typically needed by Go libraries into the chaincode archive.  Background: I used Go's library 'crypto' in a chaincode implementation. This library ships a set of platform-dependent source files with extension '.s', e.g. > path/to/vendor/golang.org/x/crypto/sha3/keccakf_amd64.s During the build process, Go chooses the source file according to the target platform.  These files are not included in the archive by the gopackager, as the set of file extensions is limited to > var keep =   string\{".go", ".c", ".h"} in line 36 of file 'packager.go'.  Consequence: Chaincode that imports one of these libraries (and vendors them) does not compile in the chaincode environment. A possible error: > path/to/vendor/golang.org/x/crypto/sha3/keccakf_amd64.go:13: missing function body for "keccakF1600" That's not limited to this library, of course. Other libraries that ship a set of platform-dependent source code files with extension '.s' are affected, too.  Solutions: a) Include files with extension '.s' in the archive (I've locally patched 'packager.go' to include these files and now my chaincode compiles correctly); maybe there are other source file types in Go that need to be considered? b) Rethink the procedure of identifying source files. Maybe it's better to include everything that is a text file, and then blacklist some files/file types (e.g. documentation files, ...)  ></description> </Issue>
