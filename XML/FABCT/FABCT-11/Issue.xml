<Issue id="24525" key="FABCT-11" number="11" project="10609" reporter="ryjones" assignee="denyeart" creator="dhuseby" type="10004" summary="Platform.go decodes chaincode path from spec without validation" priority="3" status="10300" created="2017-11-28 18:52:40.0" updated="2021-09-30 18:11:55.0" votes="0" watches="4" workflowId="32763" security="10000"> <description><! CDATA Currently, when install/instantiate chaincode, HLF doesn't do any checking on the chaincode path, which is passed in the spec by user request. It can be arbitrary string in theory.   At  https://github.com/hyperledger/fabric/blob/master/core/chaincode/platforms/golang/platform.go#L466 , the path is decoded directly from spec without any validation.  After that, the code runs the following cmd to build out that chaincode binary:    ```go "GOPATH=/chaincode/input:$GOPATH go build -tags \"%s\" %s -o /chaincode/output/chaincode %s", gotags, ldflagsOpt, pkgname)  ```   1. Then user may add arbitrary character into the chaincode path. I've tested that the ".." in path will work, which may allow user to build out a chaincode binary to call with other person's chaincode content.   2. A another case is that if users can add "-" at the head of the path, there will trigger an instantiation error, as the "go build" cmd will trigger the path as an unknown building flag. The error msg look like   UTC  chaincode-platform  func1 -> ERRO 032  0m Failed to generate platform-specific docker build: Error returned from build: 2 "flag provided but not defined: -testinjection/chaincode_example02  ></description> </Issue>
