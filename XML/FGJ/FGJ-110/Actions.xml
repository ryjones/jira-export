<Action id="71842" issue="46912" author="bestbeforetoday" type="comment" body="I am attempting to rationalise the dependencies slightly to address the issue with Gradle dependency resolution raised in FGJ-111. The (attempted) fix for that issue may (or may not!) also resolve this issue as a side-effect." created="2021-06-10 17:47:20.0" updateauthor="bestbeforetoday" updated="2021-06-10 17:47:20.0"/>
<Action id="71856" issue="46912" author="JIRAUSER20128" type="comment" body="Hi  ~bestbeforetoday  have you been able to make this update? We ideally need a fix and the updated version of fabric-sdk-java to be  available this week, to meet our MQ release code cut off date, thanks. FYI  ~ibmmqmet " created="2021-06-16 10:59:35.0" updateauthor="JIRAUSER20128" updated="2021-06-16 10:59:56.0"/>
<Action id="71860" issue="46912" author="bestbeforetoday" type="comment" created="2021-06-16 16:43:46.0" updateauthor="bestbeforetoday" updated="2021-06-16 16:43:46.0"> <body><! CDATA  ~RaewynM   ~ibmmqmet  I staged a release containing the fix to  FGJ-11|https://jira.hyperledger.org/browse/FGJ-111  last week but am waiting for confirmation from the reporter that it solves the problem in their environment. It is passing all of the tests so if you can confirm that it also solves your vulnerability, I can go ahead and release it ASAP. The staged release is at:  https://oss.sonatype.org/content/repositories/orghyperledgerfabric-sdk-java-1059/  ></body> </Action>
<Action id="71862" issue="46912" author="JIRAUSER20128" type="comment" created="2021-06-16 17:36:05.0" updateauthor="JIRAUSER20128" updated="2021-06-16 17:36:05.0"> <body><! CDATA Thanks  ~bestbeforetoday  .   ~ibmmqmet  are you able to tell whether  https://oss.sonatype.org/content/repositories/orghyperledgerfabric-sdk-java-1059/org/hyperledger/fabric-sdk-java/fabric-sdk-java/2.2.7/  now contains netty-codec-http2:4.1.61.Final ? Thanks  ></body> </Action>
<Action id="71863" issue="46912" author="ibmmqmet" type="comment" created="2021-06-17 07:14:07.0" updateauthor="ibmmqmet" updated="2021-06-17 07:26:26.0"> <body><! CDATA That version doesn't seem to include the netty packages at all. I hope it's deliberate that it's been removed from the pom file. But I can't check whether it actually works without pulling down the entire dependency tree - there seem to be additional references lower in the chain which have lower version numbers and if this package is no longer overriding them, then it could get into an even worse state than before.     And this 2.2.7 version doesn't seem to have been released to a repo where mvn commands can pull it from.  ></body> </Action>
<Action id="71865" issue="46912" author="bestbeforetoday" type="comment" created="2021-06-17 10:12:42.0" updateauthor="bestbeforetoday" updated="2021-06-17 10:12:42.0"> <body><! CDATA The explicit dependency on netty-codec-http2 was removed as this is not used directly by fabric-sdk-java, and the version mismatch with other gRPC libraries appears to cause version resolution issues for projects built with Gradle. I guess it was added explicitly at some point to avoid a vulnerability in a version of that transient dependency. This is something that a client project is free to do if necessary so I am not convinced that fabric-sdk-java is the correct place to do this.  The dependency on grpc-netty was changed to grpc-netty-shaded since I don't think there is any expectation that the client runs on Android -- in fact the README explicitly states that Android is not supported -- and the non-Android gRPC libraries have fewer transient dependencies in which security vulnerabilities may occur.  A client project built against this pre-release has this Maven dependency tree: {noformat}  INFO  \- org.hyperledger.fabric:fabric-gateway-java:jar:2.2.2:compile  INFO     +- org.hyperledger.fabric-sdk-java:fabric-sdk-java:jar:2.2.7:compile (version selected from constraint  2.2.0,2.3.0))  INFO     |  +- io.netty:netty-tcnative-boringssl-static:jar:2.0.39.Final:compile  INFO     |  +- io.grpc:grpc-netty-shaded:jar:1.38.0:compile  INFO     |  |  \- io.grpc:grpc-core:jar:1.38.0:compile (version selected from constraint  1.38.0,1.38.0 )  INFO     |  |     +- com.google.android:annotations:jar:4.1.1.4:runtime  INFO     |  |     \- io.perfmark:perfmark-api:jar:0.23.0:runtime  INFO     |  +- io.grpc:grpc-protobuf:jar:1.38.0:compile  INFO     |  |  +- io.grpc:grpc-api:jar:1.38.0:compile  INFO     |  |  |  \- io.grpc:grpc-context:jar:1.38.0:compile  INFO     |  |  +- com.google.code.findbugs:jsr305:jar:3.0.2:compile  INFO     |  |  +- com.google.api.grpc:proto-google-common-protos:jar:2.0.1:compile  INFO     |  |  +- io.grpc:grpc-protobuf-lite:jar:1.38.0:compile  INFO     |  |  +- com.google.guava:guava:jar:30.1-android:compile  INFO     |  |  |  +- com.google.guava:failureaccess:jar:1.0.1:compile  INFO     |  |  |  +- com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava:compile  INFO     |  |  |  +- org.checkerframework:checker-compat-qual:jar:2.5.5:compile  INFO     |  |  |  \- com.google.j2objc:j2objc-annotations:jar:1.3:compile  INFO     |  |  +- com.google.errorprone:error_prone_annotations:jar:2.4.0:compile  INFO     |  |  \- org.codehaus.mojo:animal-sniffer-annotations:jar:1.19:runtime  INFO     |  +- io.grpc:grpc-stub:jar:1.38.0:compile  INFO     |  +- com.google.protobuf:protobuf-java:jar:3.17.3:compile  INFO     |  +- com.google.protobuf:protobuf-java-util:jar:3.17.3:compile  INFO     |  +- org.bouncycastle:bcpkix-jdk15on:jar:1.69:compile  INFO     |  |  +- org.bouncycastle:bcprov-jdk15on:jar:1.69:compile  INFO     |  |  \- org.bouncycastle:bcutil-jdk15on:jar:1.69:compile  INFO     |  +- commons-logging:commons-logging:jar:1.2:compile  INFO     |  +- commons-cli:commons-cli:jar:1.4:compile  INFO     |  +- org.apache.commons:commons-compress:jar:1.20:compile  INFO     |  +- commons-io:commons-io:jar:2.8.0:compile  INFO     |  +- org.apache.logging.log4j:log4j-core:jar:2.14.0:compile  INFO     |  |  \- org.apache.logging.log4j:log4j-api:jar:2.14.0:compile  INFO     |  +- org.apache.logging.log4j:log4j-1.2-api:jar:2.14.0:compile  INFO     |  +- org.apache.httpcomponents:httpclient:jar:4.5.13:compile  INFO     |  |  \- org.apache.httpcomponents:httpcore:jar:4.4.13:compile  INFO     |  +- com.spotify:futures-extra:jar:4.2.0:compile  INFO     |  +- com.google.api:api-common:jar:1.9.0:compile  INFO     |  |  \- com.google.auto.value:auto-value-annotations:jar:1.7:compile  INFO     |  +- org.glassfish:javax.json:jar:1.1.4:compile  INFO     |  +- org.yaml:snakeyaml:jar:1.26:compile  INFO     |  +- org.miracl.milagro.amcl:milagro-crypto-java:jar:0.4.0:compile  INFO     |  |  \- org.apache.commons:commons-math3:jar:3.6.1:compile  INFO     |  +- javax.xml.bind:jaxb-api:jar:2.3.1:compile  INFO     |  |  \- javax.activation:javax.activation-api:jar:1.2.0:compile  INFO     |  \- javax.annotation:javax.annotation-api:jar:1.3.2:compile  INFO     +- commons-codec:commons-codec:jar:1.14:compile  INFO     \- com.cloudant:cloudant-client:jar:2.19.0:compile  INFO        +- com.google.code.gson:gson:jar:2.8.2:compile  INFO        \- com.cloudant:cloudant-http:jar:2.19.0:compile {noformat}  ></body> </Action>
<Action id="71866" issue="46912" author="ibmmqmet" type="comment" body="OK. I&apos;ve managed to get my update scripts pointed at this repository and it&apos;s downloaded those same levels. Building against that newer set of prereqs works but I can&apos;t actually test that the changes work at the moment because of unrelated problems with the network. Assuming it does run, it does look cleaner without those netty packages." created="2021-06-17 11:18:05.0" updateauthor="ibmmqmet" updated="2021-06-17 11:18:05.0"/>
<Action id="71867" issue="46912" author="bestbeforetoday" type="comment" body="This code passes the integration / scenario tests, so clients using it can interact successfully with Fabric. If it satisfies your code vulnerability scans then I can release it to Maven Central. Let me know if/when you want me to do that." created="2021-06-17 11:25:02.0" updateauthor="bestbeforetoday" updated="2021-06-17 11:25:02.0"/>
<Action id="71868" issue="46912" author="bestbeforetoday" type="comment" created="2021-06-18 08:25:17.0" updateauthor="bestbeforetoday" updated="2021-06-18 08:25:17.0"> <body><! CDATA I ran an OWASP scan on my client project with a dependency on the pre-release of fabric-sdk-java and it showed zero vulnerabilities.  The dependency update is released in fabric-sdk-java v2.2.7: * https://github.com/hyperledger/fabric-sdk-java/releases/tag/v2.2.7 * https://search.maven.org/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.2.7/jar  ></body> </Action>
<Action id="71869" issue="46912" author="JIRAUSER20128" type="comment" created="2021-06-18 10:38:35.0" updateauthor="JIRAUSER20128" updated="2021-06-18 10:38:35.0"> <body><! CDATA Thanks  ~bestbeforetoday  . Will the latest fabric-gateway-java 2.2.2 automatically pick up the latest fabric-sdk-java 2.2.7?  (MQ currently uses fabric:fabric-gateway-java:jar:2.2.1 and fabric-sdk-java:fabric-sdk-java:jar:2.2.5)   ~ibmmqmet  could you please pull the latest fabric packages in to MQ today, if you haven't started already, thanks.  ></body> </Action>
<Action id="71873" issue="46912" author="bestbeforetoday" type="comment" body="Yes, fabric-gateway-java v2.2.2 will automatically pick up the latest v2.2.x release of fabric-sdk-java" created="2021-06-18 16:15:11.0" updateauthor="bestbeforetoday" updated="2021-06-18 16:15:11.0"/>
