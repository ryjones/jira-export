<Issue id="36828" key="FGJ-1" number="1" project="11000" reporter="andrew-coleman" assignee="andrew-coleman" creator="andrew-coleman" type="10000" summary="Programming model - Java SDK" priority="2" resolution="10000" status="6" created="2019-01-16 16:07:22.0" updated="2019-07-26 12:38:58.0" resolutiondate="2019-07-26 12:38:58.0" votes="3" watches="8" workflowId="48393"> <description><! CDATA This epic adds the new programming model that was introduced in v1.4 for the Node SDK to the Java SDK.  All concepts should be consistent between the two languages and, where possible, classes and method signatures should be as close as possible, subject to differences in language idioms.  The concepts that underpin the new programming model together with an in-depth tutorial are described here:   https://hyperledger-fabric.readthedocs.io/en/release-1.4/developapps/developing_applications.html   The high-level API for the Node SDK is documented here:   https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.html      A straw man proposal for the Java version of this API is summarised below:    {code:java} package: org.hyperledger.fabric.network  class Gateway { Gateway()    void connect(NetworkConfig config, Map<String, ?>, options)    void disconnect()    Network getNetwork(String networkName) User getCurrentIdentity() Map<String, ?> getOptions() HFClient getClient() }   interface Network { Contract getContract(String chaincodeID, String name) }   interface Contract { Transaction createTransaction(String name) CompletionStage<String> submitTransaction(String name, String… args) CompletionStage<String> evaluateTransaction(String name, String… args) }   interface Transaction { String getName() String getTransactionID() void setTransient(Map<String, byte  > transientData) CompletionStage<String> submit(String… args) CompletionStage<String> evaluate(String… args) }    class FileSystemWallet implements Wallet { FileSystemWallet(String path) void import(String label, User identity) User export(String label)List list() void delete(String label) boolean exists(String label) }    class InMemoryWallet implements Wallet { InMemoryWallet() void import(String label, User identity) User export(String label) List list() void delete(String label) boolean exists(String label) }     package: org.hyperledger.fabric.network.api   interface Wallet { void import(String label, User identity) User export(String label) List list() void delete(String label) boolean exists(String label) } {code}    ></description> </Issue>
