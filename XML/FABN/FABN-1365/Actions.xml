<Action id="60845" issue="40466" author="sstone1" type="comment" created="2019-06-10 18:08:15.0" updateauthor="sstone1" updated="2019-06-10 18:08:15.0"> <body><! CDATA The last three builds:  https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/284/console (good) https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/285/console (network failed to start) https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/286/console (proposal response mismatch)  ></body> </Action>
<Action id="60846" issue="40466" author="sstone1" type="comment" created="2019-06-10 18:11:14.0" updateauthor="sstone1" updated="2019-06-10 18:11:14.0"> <body><! CDATA The last two merge builds are good:  https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-merge-x86_64/67/console https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-merge-x86_64/68/console  ></body> </Action>
<Action id="60850" issue="40466" author="yuki-kon" type="comment" created="2019-06-10 21:24:04.0" updateauthor="yuki-kon" updated="2019-06-10 21:24:04.0"> <body><! CDATA Hello,  ~sstone1   ~lehors . I found the same problem in my local environment. If the workaround below is reasonable, I will make a patch. h4. Cause analysis It seems the root cause is the query handling strategies in fabric-network. The query handler does not consider if Chaincode is installed on target peers. It sends a query proposal to the first peer among the array of peers having the role "CHAINCODE_QUERY_ROLE". By default, all peers have the role "CHAINCODE_QUERY_ROLE". Fabcar installs Chaincode on the peer0.org1.example.com. The array of peers are created by service discovery and  the order of peers are random. When peer1.org1.example.com comes first, the evaluation fails. Although the peer1 has the role "CHAINCODE_QUERY_ROLE", it does not have Chaincode. Then the error “chaincode definition for 'fabcar' exists, but chaincode is not installed” is returned.  https://github.com/hyperledger/fabric-sdk-node/blob/07956d6a023663fce46276c67633566a42712bcc/fabric-network/lib/impl/query/defaultqueryhandlerstrategies.js#L14-L26 https://github.com/hyperledger/fabric-sdk-node/blob/31b208421ef396273d0ac86723176ea2b6368953/fabric-network/lib/impl/query/singlequeryhandler.js#L22-L38  The query handler calls fabric-client/Channel.queryByChaincode internally. This function also does not consider if Chaincode is installed on target peers. https://github.com/hyperledger/fabric-sdk-node/blob/11b1ad24b5497f6522e8650daad66589aea868c9/fabric-client/lib/Channel.js#L3615-L3640  h4. Solution When submitting a transaction, target peers are selected from peers having Chaincode by service discovery. The same mechanism are required for fabric-client and/or fabric-network to send a query proposal to right target peers. FABN-1122 seems like the same proposal.  h4. Workaround Before improving fabric-client/fabric-network, we need to fix the CI. The workaround is installing Chaincode on all peers by updating the fabric-samples/fabcar/startFabric.sh.   ></body> </Action>
<Action id="60862" issue="40466" author="lehors" type="comment" body="Thank you for investigating this,  ~yuki-kon . I tried that change (installing the chaincode on all peers) and it didn&apos;t solve the problem I reported on https://jira.hyperledger.org/browse/FAB-15633 but your analysis sounds good to me and if we can solve the CI problem, it will be progress. Please, go ahead and submit your CR. I&apos;ll review it." created="2019-06-11 09:08:21.0" updateauthor="lehors" updated="2019-06-11 09:08:21.0"/>
<Action id="60899" issue="40466" author="yuki-kon" type="comment" created="2019-06-11 22:19:58.0" updateauthor="yuki-kon" updated="2019-06-11 22:19:58.0"> <body><! CDATA Thank you for a comment,  ~lehors . I submitted a CR to install Chaincode on all peers (https://gerrit.hyperledger.org/r/#/c/fabric-samples/+/31847/). In my local environment, the problem reported by FAB-15633 was not reproduced. There may be another problem.  ></body> </Action>
