<Issue id="12979" key="FABN-353" number="353" project="10604" reporter="jjjjibm" assignee="pmullaney" creator="jjjjibm" type="10004" summary=" node-SDK  class EventHub callbacks not documented " environment="Vlaunch VM running Ubuntu &apos;Trusty&apos;. " priority="1" resolution="10000" status="6" created="2016-10-11 19:11:34.0" updated="2018-07-19 00:53:45.0" resolutiondate="2017-02-08 15:20:50.0" votes="0" watches="1" workflowId="34084"> <description><! CDATA Class EventHub methods require callback functions as input.  Namely, _registerBlockEvent(callback: Function): void registerChaincodeEvent(ccid: string, eventname: string, callback: Function): ChainCodeCBE registerTxEvent(txid: string, callback: Function) unregisterBlockEvent(unregisterBlockEvent(callback: Function): void _ However, the callback functions are not documented well enough to use.  There's no indication of whether the callbacks return values, or what those values may be.  Furthermore, the unit tests event-tests.js do not cover methods registerBlockEvent(callback), registerTxEventtxid, callback), unregisterBlockEvent(callback), so we have no examples to code to.    In contrast, here's a properly coded callback parameter from class chain:   _getMember(name: string, cb: GetMemberCallback): void Defined in src/hfc.ts:700  Get the user member named 'name' or create a new member if the member does not exist.  Parameters  ◾name: string  ◾cb: GetMemberCallback  Callback of form "function(err,Member)" _ _ Returns void _ In the generated documentation page, clicking on the token GetMemberCallback takes you to its definition:    _Interface GetMemberCallback Hierarchy ◾ GetMemberCallback  Callable __call(err: Error, member?: Member): void  Defined in src/hfc.ts:201  Parameters ◾err: Error ◾Optional member: Member  Returns void_  The end user see clearly what his callback function can expect by way of input.  Here's another example from class Member:   _register register(registrationRequest: RegistrationRequest, cb: RegisterCallback): void  Defined in src/hfc.ts:971  Register the member.  Parameters  ◾registrationRequest: RegistrationRequest  ◾cb: RegisterCallback  Callback of the form: {function(err,enrollmentSecret)}_  _Returns void _  In the generated documentation, clicking RegisterCallBack takes you to its definition:   _ Interface RegisterCallback  Hierarchy ◾ RegisterCallback   Callable __call(err: Error, enrollmentPassword?: string): void  Defined in src/hfc.ts:204  Parameters  ◾err: Error ◾Optional enrollmentPassword: string  Returns void_  so we know how to code the callback function.     ></description> </Issue>
