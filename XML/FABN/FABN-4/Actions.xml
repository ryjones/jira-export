<Action id="19352" issue="12777" author="jimthematrix" type="comment" created="2016-10-21 15:43:38.0" updateauthor="jimthematrix" updated="2016-10-21 15:43:38.0"> <body><! CDATA what's the expected design for this to work from the client SDK point of view? My understanding is for a consensus cloud to offer a robust decentralized service, it ought to allow individual consensus nodes to be contacted separately, which I think is what  ~corecode  is describing above. however, a client application may choose to deploy a proxy server within the enterprise, so that they can trust that node, that disseminates a transaction request to a list of orderers. it may even be configured to rotate b/w a list of sets of orderers. so that a client application can be just concerned with that one proxy node to submit transactions, instead of each app having to know all of (f+1) consensus nodes.  does this make sense? i'm trying to decide if the SDK only supports contacting one endpoint for submitting transactions, whether or not it can fulfill the guaranteed delivery requirement using a trusted proxy node setup.  ></body> </Action>
<Action id="65143" issue="12777" author="heatherp" type="comment" body="Hi, I&apos;ve been working through the node sdk backlog with the maintainers and as this was raised some time ago, I&apos;m closing.   The high-level node sdk APIs have been available for some time, and this issue may be covered by functionality provided there: https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html  Please re-open if this issue is still affecting you, and the functionality is not available in the low-level or high-level node sdk APIs, thanks." created="2019-10-29 16:39:54.0" updateauthor="heatherp" updated="2019-10-29 16:39:54.0"/>
