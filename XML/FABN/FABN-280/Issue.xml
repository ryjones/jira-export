<Issue id="15117" key="FABN-280" number="280" project="10604" reporter="jjjjibm" assignee="jimthematrix" creator="jjjjibm" type="10004" summary=" node-SDK  http://&lt;ip:port&gt;/docs/gen/Client.html  -- HFC reference and typos" priority="3" resolution="10000" status="6" created="2017-02-28 20:28:38.0" updated="2018-07-19 00:53:29.0" resolutiondate="2017-04-05 18:39:37.0" votes="0" watches="1" workflowId="34011"> <environment><! CDATA fabric-sdk-node commit d3fcbe2299c840dfd7886076b009b88eb25a7dd8 fabric commit a0d032bc5c4853b43972163f502a03ee7770c1d5 fabric-ca commit c9fb04e0f795589485915883fcbca3ae2fc0aaad  Ubuntu is running on a vlaunch VM   ></environment> <description><! CDATA In the generated documentation for class Client, a few errors appear:  (1)  These files will override the default settings and be{color:#d04437} overriden {color}by environment,  ===>  These files will override the default settings and be {color:#d04437}overridden{color} by environment{color:#d04437} variables{color},   (2) settings programmatically set into configuration settings. ==> programmatically configured values ===> programmatically configured settings.  (3) hierarchy search order ==> Hierarchy search order  (4) memory - all settings added with ... ===> Memory - all settings added with sdkUtils.setConfigSetting(name,value) ===> Storage - all settings added with sdkUtils.setConfigSetting(name,value)  (5) Environment variables (names will be change from AAA-BBB to aaa-bbb) ==> Environment variables (names will be {color:#d04437}changed{color} from AAA-BBB to aaa-bbb)  Even with the suggested correction, the meaning is unclear.  At first I thought it mean the SDK will convert all environment variable names to lower case.  But why would an application programmer care how the SDK internally represents the environment variable *name*? Is it saying the values will be lower - cased?    What warning is this sentence trying to convey?  (6)  all files added with the addConfigFile(path) will ==> all files added with the addConfigFile(path) {color:#d04437}method{color} will ==> all files added with addConfigFile(path) will  (7) ordered by when added, were last one ==> ordered by when added, {color:#d04437}where{color} last one  Even with this correction, it sounds as though the last file added causes the SDK to completely disregard any earlier file added.  If that is the case, all references to 'files' in this description need to be changed to 'file', and remove the reference to 'list'  as the SDK reads at most one custom file.   Since the description refers to a list of configuration setting files, I presume what you really mean is if the last file sets value 'a', and the prior file sets values 'a' and 'b', the net is 'a' comes from the last file and 'b' comes from the earlier file. ===> Custom files -- all files added with addConfigFile(path).  The values set in the last file added override values set in prior configuration files.   (8) The file located at 'config/default.json' with default settings Do you mean ==> The file located at  fabric-sdk-node/config/default.json  ? ===> The file located at fabric-sdk-node/fabric-client/config/default.json ? Edit 3/1/2016:  Removed lines from (8) because I think I answered my own question.  (9) The path to the file to be added to the top of list of configuration files ==> The pathname of the file to be added to the top of list of configuration files 'pathname' has meaning to Linux users. (10)  getConfigSetting Items (3) - (8) apply to this method also.  (11) setConfigSetting Is now:  Adds a setting to override all settings that are part of the hierarchical configuration.  hierarchy search order:  memory - settings added with this call Command-line arguments Environment variables (names will be change from AAA-BBB to aaa-bbb) Custom Files - all files added with the addConfigFile(path) will be ordered by when added, were last one added will override previously added files The file located at 'config/default.json' with default settings  Should be:  Adds a setting to override all settings that are part of the hierarchical configuration. (We don't need to provide the search hierarchy because this method is telling the SDK to ignore it for the specified name).   If you really want to include the search hierarchy, comments (3) - (8) apply to this section.  (12) setLogger(logger) Configures a logger for the entire {color:#d04437}HFC{color} SDK to use and override the default logger. Unless this method is called, {color:#d04437}HFC{color} uses a default logger (based on winston). When using the built-in "winston" based logger, use the environment variable {color:#d04437}HFC_LOGGING {color}to pass in configurations in the following format:  HFC SDK ==> SDK I thought we were moving away from 'HFC'.  HFC  uses ==> the SDK uses? ==> the fabric-client uses ?  (13) HFC_LOGGING  Should this envvar be renamed ?  (14) setLogger(logger) Is now: { 'error': 'error.log', // 'error' logs are printed to file 'error.log' relative of the current working dir for node.js 'debug': '/tmp/myapp/debug.log', // 'debug' and anything more critical ('info', 'warn', 'error') can also be an absolute path 'info': 'console' // 'console' is a keyword for logging to console } Should be: { 'error': 'error.log', // 'error' logs are printed to file 'error.log' relative of the current working dir for node.js  'debug': '/tmp/myapp/debug.log', // 'debug' and anything more critical ('info', 'warn', 'error') can also be an absolute path  'info': 'console' // 'console' is a keyword for logging to console }      ></description> </Issue>
