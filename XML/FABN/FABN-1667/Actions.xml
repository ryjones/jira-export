<Action id="70671" issue="46312" author="bestbeforetoday" type="comment" created="2020-11-13 10:01:10.0" updateauthor="bestbeforetoday" updated="2020-11-13 10:01:10.0"> <body><! CDATA It seems the v2 Node SDK is not including in the Error thrown by *transaction.evaluate()* the *Payload* property of the protobuf *Response* message for error (unendorsed) proposal responses. This does not look to ever have been documented behaviour, but in v1.4 that property was included in the thrown Error object. I think we should include it in the Error object thrown by the v2 SDK too.  I would not recommend trying to use the status code on a proposal response to communicate application-level information. Even within Fabric their use is not very well defined and not very consistent across different language implementations. While they are modelled on HTTP status codes they are definitely not HTTP status codes. A success response simply means that the transaction proposal is endorsed by the peer while an error response indicates that endorsement failed.  It's really up to your application what pattern of communication suits you best. For the example of querying an asset by ID, implementation options might include: # Return a response with the asset or an error if the asset cannot be returned # Return a response with the asset if it exists, an empty response if the asset does not exist, or an error for failures accessing data # Return an application-defined payload that describes to the application the result of the query  I think it is perfectly valid for your chaincode to actively return a shim.Error for an error condition though. Just bear in mind that it's often viewed as bad security practice to return contextual information along with a remote error as this provides information about the server-side data and implementation that may be used by attackers.  ></body> </Action>
<Action id="70771" issue="46312" author="bestbeforetoday" type="comment" body="Note that for a transaction that is being submitted (i.e. updating the ledger) rather than evaluated (i.e. a query), a success response will indicate successful endorsement and that the transaction should be committed to the ledger. So you definitely want to return an error if the transaction does not execute successfully in this case." created="2020-11-20 10:08:19.0" updateauthor="bestbeforetoday" updated="2020-11-20 10:08:19.0"/>
