<Issue id="46312" key="FABN-1667" number="1667" project="10604" reporter="jambonrose" assignee="harrisob@us.ibm.com" creator="jambonrose" type="10004" summary="Payload no longer provided in Evaluation errors in SDK " priority="3" resolution="10000" status="6" created="2020-11-10 18:11:31.0" updated="2020-12-07 14:00:29.0" resolutiondate="2020-12-07 14:00:29.0" votes="0" watches="2" workflowId="60234" archived="N"> <description><! CDATA I am not clear whether: * this is a bug or an undocumented API change * if the problem stems from our mis-use of error handling between chaincode and Fabric SDK  We have a Golang chaincode transaction that acts like a REST GET call. Provided an ID, it tries to find the object by that ID. In the event of an error (missing object, permissions denied, etc) we return a Peer Response with the `shim.ERROR` code. To allow the application to understand what happened, the Peer Response Payload is given serialized JSON with an separate error code, error message, and other context.  This has worked fine with v1.4.x of the SDK. However, during our upgrade to v2 of the SDK, we have found that the error thrown by the SDK no longer contains the Peer Response Payload. Specifically, if we evaluate a transaction, and the Peer Response returns with a `shim.ERROR` code, the error thrown by the SDK does not include the payload with our application error data. * Is the omission to Peer Response Payload from the Fabric NodeJS SDK intentional? * Should we be returning errors from chaincode to the SDK in a different way (with `shim.OK`, for instance)? * Is there any documentation about proper error handling of chaincode errors?  Clarification: Our original reason for duplication the status code (the Peer Response has a status code, and our serialized Payload has a status code) was due to behavior displayed by the SDK. If I recall correctly, the SDK failed to provide data to the application if a status code other than `shim.OK` or `shim.ERROR` was used. I have not tested whether this behavior is still present in the latest version of the SDK. Is this behavior intentional? Should we be able to use different status codes? This ties into one of my questions above: are these errors strictly for Fabric, and should our application/chaincode errors use `shim.OK` instead?  Thank you.  ></description> </Issue>
