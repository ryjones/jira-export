<Issue id="20224" key="FABN-163" number="163" project="10604" reporter="vdods" assignee="harrisob@us.ibm.com" creator="vdods" type="10004" summary="Order of requires breaks default config" priority="3" resolution="10000" status="6" created="2017-08-17 00:49:13.0" updated="2018-07-19 00:53:04.0" resolutiondate="2017-11-27 04:25:56.0" votes="0" watches="4" workflowId="33894"> <description><! CDATA The following code causes fabric-ca-client/config/default.json to be loaded as the default config instead of fabric-client/config/default.json:  ```const FabricCAServices = require('fabric-ca-client');  const FabricClient = require('fabric-client');  ```  In particular, this caused the following line in fabric-client/lib/Client.js to assign undefined to process.env.GRPC_SSL_CIPHER_SUITES, because 'grpc-ssl-cipher-suites' is defined in fabric-client/config/default.json and not fabric-ca-client/config/default.json, thereby causing some GRPC calls to fail with little indication of why.  `process.env.GRPC_SSL_CIPHER_SUITES = sdkUtils.getConfigSetting('grpc-ssl-cipher-suites');`     Related: the function fabric-client/lib/utils.js:getConfig assigns a config singleton to `global.hfc`, which makes a bad assumption that `global.hfc` refers to the module.  However, this requires the importer of fabric-client to assign it to the global var `hfc`, which e.g. I didn't do.  ></description> </Issue>
