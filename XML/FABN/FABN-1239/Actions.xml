<Action id="60081" issue="39847" author="bestbeforetoday" type="comment" body="I am not currently working this issue." created="2019-05-16 18:22:55.0" updateauthor="bestbeforetoday" updated="2019-05-16 18:22:55.0"/>
<Action id="60082" issue="39847" author="bestbeforetoday" type="comment" body="Perhaps additional information could be attached to the error thrown, such as an array of responses. A more specialised error type might be useful for this case." created="2019-05-16 18:24:26.0" updateauthor="bestbeforetoday" updated="2019-05-16 18:24:26.0"/>
<Action id="60089" issue="39847" author="logannwu" type="comment" created="2019-05-17 02:04:05.0" updateauthor="logannwu" updated="2019-05-17 02:04:05.0"> <body><! CDATA This is a bug,because chaincode response is type Response struct {     // A status code that should follow the HTTP status codes.     Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`     // A message associated with the response code.     Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`     // A payload that can be used to include metadata with this response.     Payload   byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`   } But Query API, evaluateTransaction failed, the error include status field.  ></body> </Action>
<Action id="60256" issue="39847" author="bestbeforetoday" type="comment" created="2019-05-22 14:14:50.0" updateauthor="bestbeforetoday" updated="2019-05-22 14:14:50.0"> <body><! CDATA Do you have any preference on how this information is passed back? It would be useful to know how you would like to examine the error (for example: programmatically or just having a human readable message to aid debugging).  You should already be seeing the bad proposal response (including the status code and details of the peer) logged as a warning. This might be enough for somebody to debug the problem but certainly isn't ideal if you want to examine the status codes returned in your application code.  Two possible changes spring to mind: # Just include the status code (and possibly peer name?) in the error message to make it easier to debug without looking at the log, so your error would have read:  {noformat} Error: No valid responses from any peers. 1 peer error responses: 503: Invalid Smart Contract function name.{noformat}  # Augment the Error object that is thrown with some additional properties to make it easier to interrogate programmatically, such as adding an array of response objects to a _responses_ property on the error object.     Or we could make both of the above changes if they are useful. What do you think?     ></body> </Action>
<Action id="60280" issue="39847" author="logannwu" type="comment" created="2019-05-23 01:50:00.0" updateauthor="logannwu" updated="2019-05-23 01:51:16.0"> <body><! CDATA I think the first solution is just OK for app developer. {noformat} message: Invalid Smart Contract function name. status: 503  {noformat}  ></body> </Action>
<Action id="60288" issue="39847" author="bestbeforetoday" type="comment" created="2019-05-23 10:50:50.0" updateauthor="bestbeforetoday" updated="2019-05-23 10:50:50.0"> <body><! CDATA I've made a change at  https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31506  so the message should come out looking something like: {noformat} No valid responses from any peers. 3 peer error responses: peer=peer1, status=503, message=Invalid Smart Contract function name.     peer=peer2, status=500, message=Something went wrong peer=peer3, status=418, message=I'm a teapot{noformat}  ></body> </Action>
