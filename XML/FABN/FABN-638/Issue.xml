<Issue id="20157" key="FABN-638" number="638" project="10604" reporter="kungyc" assignee="harrisob@us.ibm.com" creator="kungyc" type="10001" summary="Channel.js&apos;s static function &quot;sendTransactionProposal&quot; add opt to pass proposal header and proposal" priority="3" resolution="10001" status="6" created="2017-08-14 03:07:15.0" updated="2019-08-13 16:45:31.0" resolutiondate="2019-08-13 16:45:31.0" votes="0" watches="2" workflowId="34369"> <description><! CDATA Now, Channel object use "sendTransactionProposal" to propose a proposal to endorse peers, and the header and proposal will be made in the static function "sendTransactionProposal" like following {quote}^{{header = clientUtils.buildHeader(userContext.getIdentity(), channelHeader, *{color:#d04437}request.txId.getNonce(){color}*);}}^   ^{{proposal=clientUtils.buildProposal(invokeSpec, header, request.transientMap);}}^ {quote}   But if we check the response of endorsing, sometimes response will be invalid, caused by peers's crashing or some exceptional situations.   For example, my chaincode need to be endorsed by org1 and (org2 or org3), then I send the proposal to org1 and org2's endorsing peer. Org1 's response is good but org2's isn't, so I need to use the same parameter to send to Org3's peer.   Here is the problem, cause the header and proposal is build among the function and the {color:#d04437}nonce{color} is created in the procedure, it will cause invalid tx when committers try to verify the nonce of each endorsement. So I have to send a new proposal to org1 and org3 again even org1 has already endorsed the tx.    So I recommend we can add a opt parameter for the function so we can pass the header and proposal in.      ></description> </Issue>
