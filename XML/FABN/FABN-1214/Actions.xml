<Action id="60271" issue="39488" author="harrisob@us.ibm.com" type="comment" body="This is not a NodeSDK issue, please open against Fabric (FAB)" created="2019-05-22 20:56:29.0" updateauthor="harrisob@us.ibm.com" updated="2019-05-22 20:56:29.0"/>
<Action id="66700" issue="39488" author="david_dornseifer" type="comment" created="2020-01-15 12:50:20.0" updateauthor="david_dornseifer" updated="2020-01-15 12:50:20.0"> <body><! CDATA Hello,   looking into the protobuf definition, the return status code should follow the HTTP standard:  https://github.com/hyperledger/fabric-protos-go/blob/master/peer/proposal_response.pb.go#L114-L115 .   The java SDK also accepts all response status codes < 300.  The NodeJS SDK ( https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-common/lib/Commit.js#L74 ) should follow the same approach.      ></body> </Action>
<Action id="66837" issue="39488" author="heatherp" type="comment" created="2020-01-21 14:19:23.0" updateauthor="heatherp" updated="2020-01-21 14:19:23.0"> <body><! CDATA  ~denyeart   ~jyellick  I've chatted to the other maintainers about this one - can I get your opinions please? Whilst we absolutely want SDK behaviour to be consistent across the different languages, how much status code processing are we expecting of the SDKs?  ></body> </Action>
<Action id="66903" issue="39488" author="jyellick" type="comment" body="Personally, I think the chaincode REST-style response codes were probably not the right way to approach the problem.  I&apos;d hesitate to extend this pattern by returning more specific codes regarding document creation, deletion, etc.  It also becomes unclear when an invocation returns no creations, but does return an event.  Regardless, this feels more like a feature request than a bug, and should probably go through an RFC if we&apos;re interested in implementing it." created="2020-01-22 17:39:36.0" updateauthor="jyellick" updated="2020-01-22 17:39:36.0"/>
<Action id="67089" issue="39488" author="harrisob@us.ibm.com" type="comment" body="I think the SDK&apos;s should not interpret or make decisions based on the status code. The SDK&apos;s should return the status to the application to do that both on endorsements that will be committed or endorsement that or just a query. When sending a collection of proposal responses to the orderer to be committed, the SDK&apos;s should not check status of the proposal response (which NodeSDK checks for 200), they should just check that there is an &apos;endorsement&apos; in the proposal response." created="2020-01-22 21:57:10.0" updateauthor="harrisob@us.ibm.com" updated="2020-01-22 21:57:10.0"/>
<Action id="69821" issue="39488" author="bestbeforetoday" type="comment" body="The behaviour was changed during refactoring as part of the v2 release of the Node SDK. The SDK now accepts any endorsed proposal responses, regardless of the status code. So I think this issue has been resolved in the v2.2 release. Please reopen if not." created="2020-07-29 08:43:05.0" updateauthor="bestbeforetoday" updated="2020-07-29 08:43:05.0"/>
