<Action id="51743" issue="34421" author="denyeart" type="comment" body="https://gerrit.hyperledger.org/r/#/c/26783/" created="2018-10-04 11:05:56.0" updateauthor="denyeart" updated="2018-10-04 11:05:56.0"/>
<Action id="51744" issue="34421" author="denyeart" type="comment" created="2018-10-04 11:08:00.0" updateauthor="denyeart" updated="2018-10-04 11:08:39.0"> <body><! CDATA  ~nkl199  Please provide details of the break...I'd suggest open another bug with all the details for java chaincode developers (e.g. link to specific examples).   ~rameshthoomu   ~gennadyl   ~C0rWin  Please take note.  ></body> </Action>
<Action id="51786" issue="34421" author="gennadyl" type="comment" body=" ~nkl199  Can you provide any details? I understand this happens in master branch." created="2018-10-04 21:00:35.0" updateauthor="gennadyl" updated="2018-10-04 21:00:35.0"/>
<Action id="51791" issue="34421" author="nkl199" type="comment" body="hi, yes - this occurs on master. The java chaincode tests are now temporarily disabled to enable merge builds to continue whilst this is investigated locally ... if there is a breaking change that we need to account for then we can do so under this Jira, otherwise we can raise a separate Jira in the relevant location" created="2018-10-05 08:29:48.0" updateauthor="nkl199" updated="2018-10-05 08:29:48.0"/>
<Action id="51799" issue="34421" author="nkl199" type="comment" created="2018-10-05 13:07:56.0" updateauthor="nkl199" updated="2018-10-05 14:43:04.0"> <body><! CDATA So the error is due to not being able to get the corresponding docker image from dockerhub when trying to build from master ... with the error   GenerateDockerBuild -> ERRO 223 Can't build java chaincode Failed to pull hyperledger/fabric-javaenv:amd64-1.3.0: API error (404) and that corresponds to an image not being there (manual check verifies this). There is of course the 1.3.0-rc1 image available and when we modify the test suite to target that particular build instead of `master, all the tests pass.  The issue is in chaincode instantiation not being able to retrieve the required image to build from.  Further investigation (on local machines) would point the finger at the fabric images being cached inside the jenkins build, since merely clearing all images resulted in correct operation of the tests - this was confirmed across multiple machines  ></body> </Action>
<Action id="51824" issue="34421" author="gennadyl" type="comment" body="Can you ask  ~rameshthoomu  to make his magic with build scripts, to make sure that correct images pulled from nexus before build? Like removing all fabric-javaenv images and re-pull them from nexus once again." created="2018-10-07 08:11:40.0" updateauthor="gennadyl" updated="2018-10-07 08:11:40.0"/>
<Action id="51836" issue="34421" author="rameshthoomu" type="comment" created="2018-10-08 02:38:36.0" updateauthor="rameshthoomu" updated="2018-10-08 02:38:36.0"> <body><! CDATA  ~nkl199  Other than baseimage and thirdparty images (Kafka, zookeeper and couchdb) we don't cache any other images. Remaining images CI builds dynamically. If you are using master then the javaenv tag we use like below    {code:java} javaenv:amd64-1.4.0 ( on Master)  javaenv:amd64-1.3.0 ( on release-1.3) {code} {code:java} if   "$GERRIT_BRANCH" = "master"  ; then export STABLE_VERSION=1.4.0-stable export JAVA_ENV_TAG=1.4.0 else export STABLE_VERSION=1.3.0-stable export JAVA_ENV_TAG=1.3.0 fi docker pull $NEXUS_URL/$ORG_NAME-$IMAGE:amd64-$STABLE_VERSION docker tag $NEXUS_URL/$ORG_NAME-$IMAGE:amd64-$STABLE_VERSION $ORG_NAME-$IMAGE docker tag $NEXUS_URL/$ORG_NAME-$IMAGE:amd64-$STABLE_VERSION $ORG_NAME-$IMAGE:amd64-$JAVA_ENV_TAG docker tag $NEXUS_URL/$ORG_NAME-$IMAGE:amd64-$STABLE_VERSION $ORG_NAME-$IMAGE:amd64-latest{code} Let me know what tag master is expecting and also, please post the build log of merge job.  ></body> </Action>
<Action id="51851" issue="34421" author="nkl199" type="comment" body="I ran a build with the java chaincode tests reinstated and they are now passing, my suspicion is that there was a missing node module at the time when the tests were being run ... which now exists. The tests are now failing at the &apos;network model tests&apos; during the instantiate process, which might be due to the same problem (fabric-network modules are no longer being published iirc). Once the sandbox tests are run, the logs should help further diagnosis " created="2018-10-08 14:40:01.0" updateauthor="nkl199" updated="2018-10-08 14:40:01.0"/>
<Action id="51879" issue="34421" author="nkl199" type="comment" created="2018-10-09 06:30:15.0" updateauthor="nkl199" updated="2018-10-09 06:30:15.0"> <body><! CDATA sandbox tests and subsequent merge builds indicate that all tests are now passing, the only possible explanation is that the required modules to build the chaincode during instantiation are now available.  Based on the above, i'm going to close this Jira   ></body> </Action>
