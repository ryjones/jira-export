<Issue id="15019" key="FABN-291" number="291" project="10604" reporter="jjjjibm" assignee="jjjjibm" creator="jjjjibm" type="10004" summary=" node-sdk  query.js not ok 32 test exited without ending " priority="3" resolution="10000" status="6" created="2017-02-23 23:37:49.0" updated="2018-07-19 00:53:31.0" resolutiondate="2017-02-27 18:10:17.0" votes="0" watches="1" workflowId="34022"> <environment><! CDATA fabric-sdk-node: commit 425028f3f64b33d2ebaba57b276fca56c4b801ad fabric: commit e829d2ecfd9a2bfc378a08a9364215f241a0a09b fabric-ca: commit ec639409e248bc97bf5adc15dcb812d19dc93a88  vlaunch VM running Ubuntu  ></environment> <description><! CDATA Query.js works when invoked like this:  node query.js  However, it does not work when it is added to test.js like this: gulp.task('test' .... gulp.task('test',  'lint', 'test-headless' , function() { 'test/integration/chain-fabriccop-tests.js', 'test/integration/endorser-tests.js', 'test/integration/orderer-chain-tests.js' {color:#14892c}+              * ,'test/integration/end-to-end.js' +               ,'test/integration/query.js' {color}*             Here is the last part of  'gulp test' output:  {color:#59afe1}ok 33 checking query results are correct that user b has 300 now after the move  2017-02-23 18:29:05.118   INFO  E2E - Disconnecting the event hub ok 34 checking query results are correct that user b has 300 now after the move not ok 35 test exited without ending --- operator: fail ...  1..35 # tests 35 # pass  32 # fail  3 {color} Query.js takes four optional parameters which are inspected by the second test() in query.js.  If no parameters are specified, all queries in the second test are attempted.  If parameters are specified, the query or queries corresponding to the parameters are attempted.  When called from gulp, parameters are passed to query.js, but not the parameters recognized by query.js.  The second test omits to attempt any queries because it checks querys.length == 0  or querys.indexOf(<supported parameter>) before attempting each query.  Querys.length is not zero, yet never a supported parameter.  Consequently, no queries are attempted, and the test ends without calling t.end().    ></description> </Issue>
