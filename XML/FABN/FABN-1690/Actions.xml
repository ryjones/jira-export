<Action id="71318" issue="46483" author="sigma67" type="comment" created="2021-01-28 08:39:51.0" updateauthor="sigma67" updated="2021-01-28 08:40:56.0"> <body><! CDATA I have news from the Fabric maintainers, it seems to be a Fabric issue. In brief, CONFIG TX do not have a txid, so it is not a node-sdk issue imo. By Brett Logan, #fabric on RocketChat:  "There was a JIRA around this. Strictly speaking, config transactions do not require transaction IDs, but much tooling automatically generates them. The real issue is that the transaction id should have never been embedded into the transaction. It's derivable from the transaction contents (in fact, from the header contents), so encoding it in the transaction was a mistake.  But this is not the real issue. Config transactions are special, in that the thing the client submits is a delta (technically, a 'config update transaction'), which is preprocessed by the orderers into a new channel config, embedded into the blockchain as a 'config transaction'. Because the contents are generated by the orderer as a new transaction, the txid of the config transaction is unknown to the client, hence, naively waiting for the txid that the client generated (for the config update txn) to commit will not work.  You can find the config update tx embedded into the config tx generated by the orderer. This is used by the other orderers and peers to ensure that the orderer processed the update correctly. https://jira.hyperledger.org/browse/FAB-15411 These are Jason Yellick's words, not mine, just to attribute them to the source"  ></body> </Action>
<Action id="72033" issue="46483" author="bestbeforetoday" type="comment" body="The Node SDK seems to be working correctly in this case, and any issue should probably be re-raised elsewhere (perhaps the qscc chaincode?) if required." created="2021-08-17 09:54:58.0" updateauthor="bestbeforetoday" updated="2021-08-17 09:54:58.0"/>
