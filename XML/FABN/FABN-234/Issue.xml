<Issue id="30180" key="FABN-234" number="234" project="10604" reporter="milliger" assignee="harrisob@us.ibm.com" creator="milliger" type="10004" summary="Database Conflict with CouchDBKeyValueStore" priority="2" resolution="10000" status="6" created="2018-05-14 19:21:16.0" updated="2018-07-19 00:53:19.0" resolutiondate="2018-05-30 15:51:21.0" votes="2" watches="6" workflowId="33965"> <environment><! CDATA Here's our setup: * Hyperledger Fabric Node SDK in version 1.0.5 * Cloudant CouchDB implementation on IBM Cloud as a remote state store (any other remote couchdb that takes some time to respond works as well)  ></environment> <description><! CDATA When using CouchDBKeyValueStore as the client's stateStore we encounter database conflicts. # We try to set the client's user context by calling *loadUserFromStateStore(...)* # The SDK then tries to deserialize the user by calling *User.fromString(...)* # The *fromString()* function calls *CryptoSuite.importKey(...)* # The CryptoSuite's default implementation calls *store.putKey(...)* on the CouchDBKeyValueStore  In other words: Calling loadUserFromStateStore(...) (which sounds like a read-only operation) issues an update in the underlying database. Internally the revision of the couchDB document is changed.  Now if we quickly call this function multiple times (call it for the second time before the first networking call has returned) we end up with a database conflict in CouchDB that isn't properly caught by the SDK.     {{ Node  error:  CouchDBKeyValueStore.js : setValue, _dbInsert, ERROR:  member_db.insert  -  conflict}}  {{Unhandled rejection Error: conflict}}{{ Node      at /app/node_modules/fabric-client/lib/impl/CouchDBKeyValueStore.js:176:13}}{{ Node      at Request._callback (/app/node_modules/nano/lib/nano.js:241:7)}}{{ Node      at Request.self.callback (/app/node_modules/nano/node_modules/request/request.js:186:22)}}{{ Node      at emitTwo (events.js:106:13)}}{{ Node      at Request.emit (events.js:191:7)}}{{ Node      at Request.<anonymous> (/app/node_modules/nano/node_modules/request/request.js:1163:10)}}{{ Node      at emitOne (events.js:96:13)}}{{ Node      at Request.emit (events.js:188:7)}}{{ Node      at IncomingMessage.<anonymous> (/app/node_modules/nano/node_modules/request/request.js:1085:12)}}{{ Node      at IncomingMessage.g (events.js:292:16)}}{{ Node      at emitNone (events.js:91:20)}}{{ Node      at IncomingMessage.emit (events.js:185:7)}}{{ Node      at endReadableNT (_stream_readable.js:974:12)}}{{ Node      at _combinedTickCallback (internal/process/next_tick.js:80:11)}}{{ Node      at process._tickDomainCallback (internal/process/next_tick.js:128:9)}}     Please find attached a sample node program to reproduce this issue.  ></description> </Issue>
