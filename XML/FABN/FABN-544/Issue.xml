<Issue id="15426" key="FABN-544" number="544" project="10604" reporter="jjjjibm" assignee="jjjjibm" creator="jjjjibm" type="10004" summary=" node-SDK  FabricCAClientImpl.js -- test for &apos;undefined&apos; fails" priority="3" resolution="10000" status="6" created="2017-03-22 16:18:08.0" updated="2018-07-19 00:54:28.0" resolutiondate="2017-03-30 20:02:43.0" votes="0" watches="1" workflowId="34275"> <environment><! CDATA fabric-sdk-node: commit cca72f8d3c5cbb7da5ee311f80200d36b1a67891 on Ubuntu 14 vlaunch VM  ></environment> <description><! CDATA In fabric-sdk-node/fabric-ca-client/lib/FabricCAClientImpl.js, I was trying to drive the 'if' legs of this code with a unit test program:  var FabricCAClient = class { {color:#654982}<lines skipped>{color} constructor(connect_opts, cryptoPrimitives) { {color:#654982}<lines skipped> {color} if (this._tlsOptions.verify==='undefined'){ 				{color:#8eb021}this._tlsOptions.verify = true; {color}		} 			if (this._tlsOptions.trustedRoots==='undefined'){ 				{color:#8eb021}this._tlsOptions.trustedRoots =   ; {color}			}  In my source code, I passed connect_opts.tlsOptions = {} to the constructor, expecting to drive the legs with undefined 'verify' and 'trustedRoots' fields.  Instead, as confirmed in Node Inspector, the fields are indeed not defined but the tests for 'undefined' fail.  Locally, I was able to drive the code by changing the test like this: if ({color:#d04437}typeof{color} this._tlsOptions.verify === 'undefined') { 				this._tlsOptions.verify = true; 			} 			if {color:#d04437}(typeof {color}this._tlsOptions.trustedRoots === 'undefined') { 				this._tlsOptions.trustedRoots =   ; 			}  You can see other tests for undefined coded this way in the same part.  At first, after making the change, I saw errors of this nature: _/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:477 var cert = Buffer.from(signingI ^^^^^^^^ SyntaxError: missing ) after argument list at Object.exports.runInThisContext (vm.js:76:16) at Module._compile (module.js:513:28) at Object.Module._extensions..js (module.js:550:10) at Module.load (module.js:458:32) at tryModuleLoad (module.js:417:12) at Function.Module._load (module.js:409:3) at Module.require (module.js:468:17) at require (internal/module.js:20:19) at Object.<anonymous> (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/test/unit/util.js:25:18) at Module._compile (module.js:541:32)  _I was able to fix these by adding a semi-colon (';') between methods.  I'll attach my source code for your perusal.  ></description> </Issue>
