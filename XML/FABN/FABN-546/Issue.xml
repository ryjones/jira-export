<Issue id="12427" key="FABN-546" number="546" project="10604" reporter="jjjjibm" assignee="cdaughtr" creator="jjjjibm" type="10004" summary=" node-SDK  hfc.getChain(&lt;brand new name&gt;, create=yes) fails with ReferenceError: name is not defined" environment="win7 hfc 0.0.2" priority="3" resolution="10000" status="6" created="2016-08-16 21:35:45.0" updated="2018-07-19 00:54:28.0" resolutiondate="2016-09-01 13:23:19.0" votes="0" watches="3" workflowId="34277"> <description><! CDATA  My program calls hfc.getChain with a new chain name and the create flag.  GetChain calls hfc.newChain() because the chain has not been allocated yet.  The call fails like this: setChainFields: calling getChain() <--- message from my program  The rest is from node.js: /opt/gopath/src/github.com/hyperledger/fabric/sdk/node/lib/hfc.js:2194 chain = newChain(name); ^ ReferenceError: name is not defined at Object.getChain (/opt/gopath/src/github.com/hyperledger/fabric/sdk/node/lib/hfc.js:2194:26) at setChainFields (/opt/gopath/src/github.com/hyperledger/fabric/sdk/node/test/unit/registrar2.js:88:18) at Test. (/opt/gopath/src/github.com/hyperledger/fabric/sdk/node/test/unit/registrar2.js:65:5) at Test.bound as _cb at Test.run (/opt/gopath/src/github.com/hyperledger/fabric/sdk/node/node_modules/tape/lib/test.js:82:10) at Test.bound as run at Immediate.next as _onImmediate at processImmediate as _immediateCallback  Looking at the getChain function in hfc.ts  export function getChain(chainName, create) { let chain = _chains chainName ; if (!chain && create) { chain = newChain(name); } return chain; }:  we notice getChain() takes the parameter chainName and looks up chainName, but when it creates a new chain, it passes a new variable, name. Could it be newChain should have been called like this? chain = newChain(chainName) Describe How to Reproduce  Add this to register.js or to a similar program: var create = true; var chain = hfc.getChain("testChain3", create);  where "testChain3" has not been allocated yet.   ></description> </Issue>
