<Issue id="23908" key="FABN-578" number="578" project="10604" reporter="mastersingh24" assignee="mastersingh24" creator="mastersingh24" type="10001" summary="Use built-in SHA256 implementation to improve performance" priority="3" resolution="10000" status="6" created="2017-11-10 11:22:52.0" updated="2018-07-20 19:16:09.0" resolutiondate="2017-11-11 10:59:49.0" votes="0" watches="1" timeoriginalestimate="900" timeestimate="0" timespent="900" workflowId="34309"> <description><! CDATA The hash functions in the NodeSDK (fabric-client/lib/hash.js) currently use a combination of sjcl, native crypto and jsSHA3 for the various algorithms.  SHA256 (the default) currently use sjcl.  sjcl is fine for small payloads, but with large payloads it is much slower that using the built-in crypto module.  A simple test proves this: {code:javascript} var hash = require('fabric-client/lib/hash.js');  var crypto = require('crypto');  var sha256 = crypto.createHash('sha256');  var buf = Buffer.alloc(5000000,'A');  console.log('sjcl:');  console.log(Date.now());  h = hash.sha2_256(buf); console.log(Date.now());  console.log(h)  console.log('native:');  console.log(Date.now());  h2 = sha256.update(buf).digest('hex');  console.log(Date.now());  console.log(h2); {code} With a 5MB payload, the results: {quote} sjcl: 1510312343376 1510312430465 17489c179266203146568d71e1869805e11a78230f12b589f4624e4a5c67a385 native: 1510312430465 1510312430480 17489c179266203146568d71e1869805e11a78230f12b589f4624e4a5c67a385{quote}       ></description> </Issue>
