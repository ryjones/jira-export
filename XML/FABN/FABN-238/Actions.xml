<Action id="18690" issue="12424" author="cdaughtr" type="comment" created="2016-08-25 19:39:03.0" updateauthor="cdaughtr" updated="2016-08-25 19:39:03.0"> <body><! CDATA I was able to reproduce this issue.  If we assume that chain.getMember from  hfc.ts getMember(name:string, cb:GetMemberCallback), should return an existing member or an error, then there appears to be a gap in the logic between   private getMemberHelper(name:string, cb:GetMemberCallback), which returns a member or an error  and  restoreState(cb:ErrorCallback) which is documented as "Restore the state of this member from the key value store (if found).  If not found, do nothing."  So still need to find out if this is working as designed and needs a documentation update or if this is an actual bug.  ></body> </Action>
<Action id="18692" issue="12424" author="jimthematrix" type="comment" created="2016-08-25 21:14:13.0" updateauthor="jimthematrix" updated="2016-08-25 21:14:13.0"> <body><! CDATA from API design point of view, having the getMember() method return an error on non-existent names would be a more intuitive design.  but at this point we are minimizing the changes to the existing SDK implementation and should start working on a new design that are driven by two forces: - all the changes brought about by the new architecture (proposal vs. transaction, endorsers and orderers, etc.) - we should have aligned API designs across all SDKs for node.js, python and Java  So what I recommend is leave the current implementation as-is, and update the documentation to make this behavior clearly spelled out.  ></body> </Action>
<Action id="18718" issue="12424" author="cdaughtr" type="comment" body="merged: http://gerrit.hyperledger.org/r/733" created="2016-08-30 16:36:39.0" updateauthor="cdaughtr" updated="2016-08-30 16:36:39.0"/>
