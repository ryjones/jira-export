<Issue id="36645" key="FABN-1094" number="1094" project="10604" reporter="andrew-coleman" assignee="bestbeforetoday" creator="andrew-coleman" type="10000" summary="Programming model - Node.js SDK - Pluggable query handler for fabric-network" priority="2" resolution="10000" status="6" created="2019-01-10 15:02:56.0" updated="2019-08-07 12:30:44.0" resolutiondate="2019-02-05 09:00:00.0" votes="0" watches="1" workflowId="48348"> <description><! CDATA The `fabric-network` api has the ability to query the ledger by using the `evaluateTransaction` method.  This invokes a transaction function (chaincode) and returns the result that's returned by that transaction function.  The strategy that determines which peer(s) to query is implemented by a built-in query handler class.  At the moment there is no mechanism for the developer to override this implementation in order to support alternative strategies.  This story provides a pluggable query handler and, initially, two strategies that the developer can choose from.  The choice of strategy will be configurable via the `options` argument of the `Gateway.connect()` method in the same manner as the existing event handler strategy.     options = {      queryHandlerOptions: {          strategy: MSPID_SCOPE_SINGLE (default) | MSPID_SCOPE_ROUND_ROBIN      }  }     Note the names of these and default value might be different to this.  MSPID_SCOPE_SINGLE encapsulates the current built-in behaviour  MSPID_SCOPE_ROUND_ROBIN implements a round-robin algorithm across all available (query role) peers within the current Org.  ></description> </Issue>
