<Issue id="43864" key="FABN-1445" number="1445" project="10604" reporter="nkl199" creator="nkl199" type="10004" summary="Orderer connections are not re-used or cleaned up" priority="2" resolution="10001" status="6" created="2020-01-08 16:33:45.0" updated="2020-12-01 14:46:08.0" resolutiondate="2020-12-01 14:46:08.0" votes="1" watches="2" workflowId="57725"> <description><! CDATA When using the SDK to submit a transaction to the orderer using a Channel.sendTransaction() call, if a string name for the orderer is used, an Orderer object is created using a Client.getTargetOrderer() call that ultimately results in Client.newOrderer() that creates a new grpc connection.   If repeated Channel.sendTransaction() calls are made, this results in multiple orderers and consequently multiple grpc connections are being made and held open for some time.  An example below is a client process performing multiple Channel.sendTransaction() calls  !https://user-images.githubusercontent.com/45155724/70708204-f11d4480-1d14-11ea-8cad-c33e9619b249.png!  It would be better if either: - the orderer object is persisted for reuse within the SDK - there is a cleanup to prevent the growth of grpc connections at the end of the Channel.sendTransaction() call  ></description> </Issue>
