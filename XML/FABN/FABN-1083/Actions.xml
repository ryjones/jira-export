<Action id="54913" issue="36240" author="denyeart" type="comment" body="Is SDK simply looking at the first entry in the connection profile and ignoring others?" created="2018-12-18 11:00:03.0" updateauthor="denyeart" updated="2018-12-18 11:00:03.0"/>
<Action id="54915" issue="36240" author="jayjong" type="comment" body="Based on the results, I would think that for v1.3.0 and v1.4.0-rc1, it is ignoring the other orderers if the first orderer failed to connect." created="2018-12-18 11:40:08.0" updateauthor="jayjong" updated="2018-12-18 11:40:08.0"/>
<Action id="54926" issue="36240" author="bestbeforetoday" type="comment" created="2018-12-18 15:17:15.0" updateauthor="bestbeforetoday" updated="2018-12-18 15:33:45.0"> <body><! CDATA  ~JayJong  please could you try reproducing this error with debug logging enabled? That should tell us what orderers the client wants to talk to, and how far it gets through them before this error occurs. Since the client handling of errors from the orderer hasn't obviously changed from the 1.2 release, it might be the error is a problem with grpc, and the debug log should help me identify whether that is the case.     See here for information on enabling debug logging: https://fabric-sdk-node.github.io/release-1.3/tutorial-logging.html  ></body> </Action>
<Action id="54956" issue="36240" author="jayjong" type="comment" body=" ~bestbeforetoday  I have attached the debug log when i use the node sdk v1.3, pls do let me know if u need more info" created="2018-12-19 09:07:03.0" updateauthor="jayjong" updated="2018-12-19 09:07:03.0"/>
<Action id="54977" issue="36240" author="bestbeforetoday" type="comment" created="2018-12-19 15:32:43.0" updateauthor="bestbeforetoday" updated="2018-12-19 15:32:43.0"> <body><! CDATA  ~JayJong  Thank you for the debug log; it is very helpful.  I don't see any initialization of the channel before use: {code:java} await channel.initialize();{code} I think this is the problem. The default commit handler should deal with failed orderers and try all the configured orderers before a call of Channel.sendTransaction() fails. In version 1.2, this default handler was configured in the Channel constructor; in version 1.3 it is configured in the Channel initialize() function. If the commit handler is not configured, the fallback behaviour is to just try a single orderer (the first in the list), which is the behaviour you are seeing.  Could you check that your client application code is calling initialize() on the channel when you first obtain it, and before you send any transactions?  ></body> </Action>
<Action id="55015" issue="36240" author="jayjong" type="comment" body=" ~bestbeforetoday  I have added the initialize() into my code and it is now able to try the other configured orderers! Thank you for the help! Do i need to close off this issue?" created="2018-12-20 06:20:52.0" updateauthor="jayjong" updated="2018-12-20 06:20:52.0"/>
<Action id="55024" issue="36240" author="bestbeforetoday" type="comment" body="Glad you got it working!" created="2018-12-20 09:41:29.0" updateauthor="bestbeforetoday" updated="2018-12-20 09:41:29.0"/>
<Action id="55038" issue="36240" author="denyeart" type="comment" body=" ~bestbeforetoday  Does the default handler and the fabric-samples do this correctly? If not, we could use this Jira to fix those.  If so, is initialize() well documented and commented?  Just trying to ensure that future users don&apos;t hit the same problem..." created="2018-12-20 11:18:53.0" updateauthor="denyeart" updated="2018-12-20 11:18:53.0"/>
<Action id="55065" issue="36240" author="bestbeforetoday" type="comment" created="2018-12-20 16:41:46.0" updateauthor="bestbeforetoday" updated="2018-12-20 16:43:48.0"> <body><! CDATA  ~denyeart  I agree, there's obviously scope to improve things here so will reopen this one for us to make changes. The code looks to specifically cater for the scenario where handlers have not been configured (i.e. initialize() has not been called) but the documentation is not clear (enough) on whether initialize() is a requirement or optional, and certainly not on any implications of using a channel without calling initialize(). We could: * Improve the documentation. * Change the code to error if initialize() hasn't been called (if that is the intention). * Silently do a default initialize if functions like sendProposal() or sendTransaction() are called without an explicit initialize() (if that is reasonable and does not cause confusion for users). * Change the way handlers are configured so that our default handlers (i.e. BasicCommitHandler) are used if initialize() has not been called, instead of the unexpected behaviour demonstrated by this Jira.     Possibly there are other options too. I would like to discuss with  ~harrisob@us.ibm.com  in the New Year before making any changes, as he knows better than me the intended behaviour.  ></body> </Action>
<Action id="55080" issue="36240" author="denyeart" type="comment" body="Thanks, I&apos;ve tagged as FixVersion v1.4.0 to ensure a decision is made before the final v1.4.0 release (even if the decision is to just doc it or release note it for now, with some future improvements to come in v1.4.1 and v2.0.0)." created="2018-12-20 21:06:56.0" updateauthor="denyeart" updated="2018-12-20 21:06:56.0"/>
<Action id="55377" issue="36240" author="denyeart" type="comment" body=" ~bestbeforetoday   ~andrew-coleman  Do you want to doc anything before v1.4.0 is released?" created="2019-01-07 18:18:49.0" updateauthor="denyeart" updated="2019-01-07 18:18:49.0"/>
<Action id="55461" issue="36240" author="harrisob@us.ibm.com" type="comment" body="I think for 1.4 we should check in the sendTransaction method to be sure the commit handler is loaded if defined and load it if necessary." created="2019-01-09 20:37:35.0" updateauthor="harrisob@us.ibm.com" updated="2019-01-09 20:37:35.0"/>
<Action id="55462" issue="36240" author="harrisob@us.ibm.com" type="comment" body="I think for 2.0 we should think about things like this, maybe for all methods that required signing or sending require the initialize." created="2019-01-09 20:38:24.0" updateauthor="harrisob@us.ibm.com" updated="2019-01-09 20:40:17.0"/>
<Action id="55470" issue="36240" author="harrisob@us.ibm.com" type="comment" body="For 1.4  https://gerrit.hyperledger.org/r/#/c/28600/ " created="2019-01-09 22:43:28.0" updateauthor="harrisob@us.ibm.com" updated="2019-01-09 22:43:28.0"/>
<Action id="55713" issue="36240" author="harrisob@us.ibm.com" type="comment" body=" https://gerrit.hyperledger.org/r/#/c/28712/   for v2.0.0 (master)" created="2019-01-16 14:05:48.0" updateauthor="harrisob@us.ibm.com" updated="2019-01-16 14:05:48.0"/>
<Action id="56199" issue="36240" author="andrew-coleman" type="comment" body="merged https://gerrit.hyperledger.org/r/c/28712/" created="2019-01-25 09:24:41.0" updateauthor="andrew-coleman" updated="2019-01-25 09:24:41.0"/>
