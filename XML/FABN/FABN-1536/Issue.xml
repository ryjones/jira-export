<Issue id="44740" key="FABN-1536" number="1536" project="10604" reporter="nkl199" assignee="harrisob@us.ibm.com" creator="nkl199" type="10004" summary="No longer able to retrieve txID from a transaction" priority="3" resolution="10000" status="6" created="2020-04-06 11:04:34.0" updated="2020-05-19 14:07:06.0" resolutiondate="2020-04-27 15:13:48.0" votes="1" watches="5" workflowId="58659" archived="N"> <description><! CDATA The manner in which transaction IDs are set within transaction.js has changed. Well, changed as in removed.  Previously the txID was set on Transaction instantiation. Now it is available through the internal building of an endorsement at `transaction.js:192` and seemingly not available at all using an `evaluate` route.  Unfortunately this no longer permits a user to have access to the transactionID used within their transactions, unless they modify their smart contracts to also return the txID along with any other pertinent information.... which is a bit much for something that is in theory easily accessed by default and should not be a requirement of a smart contract.  It would be so much more user friendly (and isn't the point of the network model to be user friendly?) to enable the extraction of the txID once the endorsement has been set?  This would require: - reinstating the getTransactionId() method (return undefined if the txID is not set?) - populating a transactionId property on the transaction object, using ` endorsement.getTransactionId()` during the `submit` route - populating a transactionId property on the transaction object, using an alternative methodÂ during the `evaluate` route - unit tests to check the trivial cases  ></description> </Issue>
