<Issue id="46335" key="FABN-1670" number="1670" project="10604" reporter="tatsu-sato" assignee="tatsu-sato" creator="tatsu-sato" type="10002" summary="Wrong type definition for DiscoveryResults" priority="3" resolution="10000" status="6" created="2020-11-19 18:06:37.0" updated="2020-12-03 10:35:44.0" resolutiondate="2020-12-03 10:35:44.0" votes="0" watches="2" workflowId="60264" archived="N"> <description><! CDATA In *fabric-common*, the type definition for `*DiscoveryResults*` seems to be wrong.     The type definition is: {code:js} export interface DiscoveryResults { msps?: {  mspid: string : DiscoveryResultMSPConfig }; orderers?: {  mspid: string : DiscoveryResultEndpoints };  peersByOrg?: {  name: string : DiscoveryResultPeers };  endorsement_plans: DiscoveryResultEndorsementPlan  ;  timestamp: number; }  {code} ( https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-common/types/index.d.ts#L479 )     On the other hand, the actual code which creates *DiscoveryResults* is: {code:java} if (result.config_result) { logger.debug(`${method} - process result - have configResult in ${index}`); const config = this._processConfig(result.config_result); this.discoveryResults.msps = config.msps; this.discoveryResults.orderers = await this._buildOrderers(config.orderers); } if (result.members) { logger.debug(`${method} - process result - have members in ${index}`); this.discoveryResults.peers_by_org = await this._processMembership(result.members); } if (result.cc_query_res) { logger.debug(`${method} - process result - have ccQueryRes in ${index}`); this.discoveryResults.endorsement_plan = await this._processChaincode(result.cc_query_res); } {code} ( https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-common/lib/DiscoveryService.js#L344 )     To align with the actual code, the type definition should be fixed as follows: * peersByOrg?: -> peers_by_org?: * endorsement_plans: -> endorsement_plan?:  ></description> </Issue>
