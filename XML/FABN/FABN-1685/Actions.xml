<Action id="71033" issue="46463" author="balaji.viswanathan" type="comment" created="2021-01-04 10:08:32.0" updateauthor="balaji.viswanathan" updated="2021-01-04 10:31:27.0"> <body><! CDATA The issue seems to be with how transaction is calling the strategy function   https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/transaction.js#L163   which passes 3 arguments, options as 3rd  {{const eventHandler = this._createTxEventHandler(this, network, options);  }}  while the strategy factory function takes 2, and hence picks the network object as options params   https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/impl/event/defaulteventhandlerstrategies.js#L41  {quote}function NETWORK_SCOPE_ALLFORTX(transaction, options) {   const network = transaction.getNetwork(); {quote} causing it to print options as a  circular  object and use the default commitTimeout of 0 (i.e., no timeout).  {{2021-01-04T09:31:08.946Z - debug:  TransactionEventHandler : constructor: transactionId = 83449508b0b60b5773f2f530abb6c6860fd46b9a616f238bf73005285034ff71, options =  Circular }}  Since, network object is available in transaction, it does not need to be passed again.  ></body> </Action>
<Action id="71069" issue="46463" author="harrisob@us.ibm.com" type="comment" created="2021-01-06 22:44:05.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-06 22:44:05.0"> <body><! CDATA Could we get the full trace log.     We should not see the following when transactioneventhandler options has 'commitTimeout' of 0,  logger.debug('_setListenTimeout:', `setTimeout(${this.options.commitTimeout}) for transaction ${this.transactionId}`);  ></body> </Action>
<Action id="71070" issue="46463" author="balaji.viswanathan" type="comment" created="2021-01-07 04:56:20.0" updateauthor="balaji.viswanathan" updated="2021-01-07 04:56:20.0"> <body><! CDATA That's correct, exactly what led me down this path - Looks like TransactionEventHandler is not setting a timeout (we should see a _setListenTimeout log line).     debug:  TransactionEventHandler : constructor: transactionId = 5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056, options =  Circular   debug:  TransactionEventHandler : _registerTxEventListeners: registerTxEvent(5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056) for event hub: peer1:7051 debug:  TransactionEventHandler : _registerTxEventListeners: registerTxEvent(5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056) for event hub: peer2:7051 debug:  TransactionEventHandler : waitForEvents called debug:  TransactionEventHandler : _onEvent: received event for "5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056" with code "VALID" debug:  TransactionEventHandler : _strategySuccess: strategy success for transaction "5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056" debug:  TransactionEventHandler : cancelListening called debug:  TransactionEventHandler : _onEvent: received event for "be17a0f596911ada8bdcb0ed55accfae169c4a89b4c8f6a18f5d46730f367ca9" with code "VALID" debug:  TransactionEventHandler : _strategySuccess: strategy success for transaction "be17a0f596911ada8bdcb0ed55accfae169c4a89b4c8f6a18f5d46730f367ca9" debug:  TransactionEventHandler : cancelListening called  ></body> </Action>
<Action id="71082" issue="46463" author="harrisob@us.ibm.com" type="comment" body="Thanks for the great debug on this issue" created="2021-01-07 20:31:46.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-07 20:31:46.0"/>
<Action id="71083" issue="46463" author="harrisob@us.ibm.com" type="comment" body="When do you need a fix ?" created="2021-01-07 20:33:54.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-07 20:33:54.0"/>
<Action id="71084" issue="46463" author="harrisob@us.ibm.com" type="comment" body="When do you need a fix ?" created="2021-01-07 20:33:54.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-07 20:33:54.0"/>
<Action id="71086" issue="46463" author="balaji.viswanathan" type="comment" body="Thanks. We are on fabric-network 1.4.16/latest, if we can get this fix as part of 1.4.17/next release it would be great." created="2021-01-08 07:02:10.0" updateauthor="balaji.viswanathan" updated="2021-01-08 07:02:10.0"/>
