<Issue id="15122" key="FABN-806" number="806" project="10604" reporter="dshuffma" assignee="harrisob@us.ibm.com" creator="dshuffma" type="10001" summary="queryBlock data is not fully decoded in fabric-client" priority="3" resolution="10000" status="6" created="2017-03-01 01:41:26.0" updated="2018-07-20 19:17:20.0" resolutiondate="2017-04-23 13:42:15.0" votes="0" watches="1" workflowId="34874"> <description><! CDATA The block data returned by queryBlock is not fully "decoded" due to the nature of how the protobuff was written.   The code in `Chain.js`: ``` var block = _commonProto.Block.decode(response.response.payload); ```  Will return data like:  ```js { header:{ number: <integer>, previous_hash: <array of bytes>, data_hash: <array of bytes> } data:{ data: <array of bytes> } metadata:{ metadata: <array of bytes> } } ```  The *data.data field* has the data I'm mainly after. I would like this data field to be completely decoded, instead of any array of bytes!  This behavior can be easily explained if you look at `protos/common/common.proto` that was used.  The hierarchy of the structs stops... it goes `Block` -> `BlockData` and then stops, so that's all the gets "decoded".  *Solutions I've tried:* I've tried manually re-decoding the remaining parts iteratively, but that doesn't seem to work since the decoded array of bytes have been modified to some degree. I'm not sure how but they aren't of the type `Uint8Array` anymore, and decoding further seems to fail.  I've built my own protobuff with a complete (well sort of complete) hierarchy . This works, but i'm not sure if the solution is optimal, since future protobuffs change will require a re-do. If you are interested I have a working fork, and this is the only change here: https://github.com/dshuffma-ibm/fabric-sdk-node/commit/457c05e8732ef7d65228a023f643ac8b68bf0355 . Even with this change, I still have some gnarly parsing to do to get to the tx payload arguments. I couldn't follow the protobuffs beyond the block/blockdata/envelope/payload/data.  ></description> </Issue>
