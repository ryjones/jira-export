<Issue id="26726" key="FABN-404" number="404" project="10604" reporter="asara" creator="asara" type="10004" summary="EventHub connections not being properly closed by the node sdk (1.0.5)" priority="3" resolution="10000" status="6" created="2018-01-10 20:43:44.0" updated="2018-07-19 00:53:57.0" resolutiondate="2018-01-18 15:16:08.0" votes="2" watches="4" workflowId="34135"> <description><! CDATA Quick Summary:  When running the the BalanceTransfer example, we are noticing a discrepancy between running against a peer in docker, and one that is running on a bare-metal host.    When running against docker, EventHub connections are routienly closed ~30 seconds after the transaction has completed and the transaction event has been received by the event hub.  On the flip side, when running against the peer binary on a bare-metal host, the event hub connections are held as established indefinitely.   At large volumes (1k+ tx), the peer crashes.  Process to reproduce: Set up the BalanceTransfer example Install and instantiate the chaincode Send an invoke After the invoke has successfully completed, the HFC logs will report that the stream has ended.  However, when looking at established connections (netstat/lsof), there is a connection that is still open.  A short term, pesudo-workaround is setting peer.events.keepalive.minInterval (suggested by  ~jyellick ) to 5s (not set in my config originally). This allows for a small bump in successful transactions, but still eventually crashes.  ></description> </Issue>
