<Issue id="12940" key="FABN-235" number="235" project="10604" reporter="sstone1" assignee="jimthematrix" creator="sstone1" type="10004" summary="hfc module needs access to create a Dockerfile in the chaincode directory" priority="3" resolution="10000" status="6" created="2016-10-10 10:43:52.0" updated="2018-07-19 00:53:20.0" resolutiondate="2017-02-08 15:22:56.0" votes="0" watches="3" workflowId="33966"> <description><! CDATA As part of a deploy() call, the hfc module creates a Dockerfile in the the specified chaincode directory. This causes the deploy() call to fail when the chaincode is stored in a directory that the running user does not have access to. If the deploy() call needs to write files to the file system, that should always be done in a temporary directory that the running user can definitely access.  My scenario is that I have two npm modules: * my-module, which is a module that uses hfc, and contains the chaincode * my-cli, which is a CLI application for working my-module  my-cli calls my-module, which then attempts to deploy the chaincode that is stored in the my-module directory (in the root owned, global node.js module directory). That fails because the user does not have access to write to that directory.  {noformat} Error: Error writing file  /usr/local/lib/node_modules/my-cli/node_modules/my-module/chaincode/src/mycc/Dockerfile : Error: EACCES: permission denied, open '/usr/local/lib/node_modules/my-cli/node_modules/my-module/chaincode/src/mycc/Dockerfile' at TransactionContext.<anonymous> (/usr/local/lib/node_modules/my-cli/node_modules/my-module/lib/util.js:165:28) at emitOne (events.js:96:13) at TransactionContext.emit (events.js:188:7) at Timeout._onTimeout (/usr/local/lib/node_modules/my-cli/node_modules/hfc/lib/hfc.js:970:22) at tryOnTimeout (timers.js:232:11) at Timer.listOnTimeout (timers.js:202:5) {noformat}  ></description> </Issue>
