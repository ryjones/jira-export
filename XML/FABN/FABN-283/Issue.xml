<Issue id="14931" key="FABN-283" number="283" project="10604" reporter="jjjjibm" assignee="cdaughtr" creator="jjjjibm" type="10004" summary=" node-SDK  coucbdb-fabricca-tests.js  not ok 3 Error: Must provide the CouchDB database url to store membership data." priority="2" resolution="10000" status="6" created="2017-02-20 09:52:47.0" updated="2018-07-19 00:53:30.0" resolutiondate="2017-03-09 15:25:12.0" votes="0" watches="2" workflowId="34014"> <environment><! CDATA fabric-node-sdk: commit 084d3b591532881d7cb3c4641f09a4d53609ce00 fabric-ca: commit 37b897b3cd723568b38026acdf85a1d168a4cbf1 fabric: commit e829d2ecfd9a2bfc378a08a9364215f241a0a09b  Running Ubuntu on vlaunch VM   ></environment> <description><! CDATA New result from fabric-node-sdk/test/integration/coucb-fabricca-tests.js:   not ok 3 Error: Must provide the CouchDB database url to store membership data. --- operator: error expected: |- undefined actual: |-  Error: Must provide the CouchDB database url to store membership data.  at: process.onetime (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/onetime/index.js:22:12) stack: |- Error: Must provide the CouchDB database url to store membership data. at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/impl/CouchDBKeyValueStore.js:48:10 at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoKeyStore.js:35:10 at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoKeyStore.js:94:16 at CryptoKeyStore (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoKeyStore.js:95:9) at Promise (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:245:5) at _getKeyStore (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:241:10) at Promise (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:149:10) at generateKey (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:148:11) at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:101:26 at enroll (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:86:10)  I added a log statement to CoucbDBKeyValueStore.js since Node Inspector shows both options and url are provided:  constructor, options:  object Object  { _url: 'http://localhost:5984',   <<=== aha!! _name: 'member_db', _database: { info:  Function , replicate:  Function , compact:  Function , changes:  Function , follow:  Function , auth:  Function: auth , session:  Function: session , insert:  Function: insertDoc , get:  Function: getDoc , head:  Function: headDoc , copy:  Function: copyDoc , destroy:  Function: destroyDoc , bulk:  Function: bulksDoc , list:  Function: listDoc , fetch:  Function: fetchDocs , fetchRevs:  Function: fetchRevs , config: { url: 'http://localhost:5984', db: 'member_db' }, multipart: { insert:  Function: insertMultipart , get:  Function: getMultipart  }, attachment: { insert:  Function: insertAtt , get:  Function: getAtt , destroy:  Function: destroyAtt  }, show:  Function: showDoc , atomic:  Function: updateWithHandler , updateWithHandler:  Function: updateWithHandler , search:  Function: viewSearch , spatial:  Function: viewSpatial , view: {  Function: viewDocs  compact:  Function  }, viewWithList:  Function: viewWithList  } }  It looked like a simple case of changing options.url to options._url.   I tried this, but got this new result:  ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric-sdk-node$ node  test/integration/couchdb-fabricca-tests.js info: Returning a new winston logger with default configurations Key Value Store = fabric-client/lib/impl/CouchDBKeyValueStore.js TAP version 13 # Use FabricCAServices with a CouchDB KeyValueStore # Cleanup of existing member_db returned false # Initilize the CouchDB KeyValueStore constructor, options:  object Object  { name: 'member_db', url: 'http://localhost:5984' } Error: Must provide the CouchDB database url to store membership data. at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/impl/CouchDBKeyValueStore.js:48:10 at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/utils.js:99:18 at Object.module.exports.newKeyValueStore (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/utils.js:96:9) at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/test/integration/couchdb-fabricca-tests.js:60:9 at process._tickCallback (internal/process/next_tick.js:103:7) not ok 1 Error initializing CouchDB KeyValueStore. Exiting. --- operator: fail at: process._tickCallback (internal/process/next_tick.js:103:7) ...  So it seems sometimes the parameter 'options' has the field options.url and sometimes options._url .  I tried patching CoucbDBKeyValueStore like this: myUrl = "" if (options) { myUrl = options.url ? options.url : options._url; } and then referencing myUrl.  This gives this result:  ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric-sdk-node$ node  test/integration/couchdb-fabricca-tests.js info: Returning a new winston logger with default configurations Key Value Store = fabric-client/lib/impl/CouchDBKeyValueStore.js TAP version 13 # Use FabricCAServices with a CouchDB KeyValueStore # Cleanup of existing member_db returned false # Initilize the CouchDB KeyValueStore { name: 'member_db', url: 'http://localhost:5984' } info:  CouchDBKeyValueStore.js : No member_db found, creating member_db info:  CouchDBKeyValueStore.js : Created member_db database # Setting client keyValueStore to:  object Object  ok 1 Successfully set CouchDB KeyValueStore for client # Initialize the CA server connection and KeyValueStore info:  FabricCAClientImpl.js : Successfully constructed Fabric CA service client: endpoint - {"protocol":"http","hostname":"localhost","port":7054} ADD: caService -  FabricCAServices : {hostname: localhost, port: 7054} ok 2 Successfully initialized the Fabric CA service. # Set cryptoSuite on client # Begin caService.enroll info:  crypto_ecdsa_aes : This class requires a CryptoKeyStore to save keys, using the store: {"opts":{"_url":"http://localhost:5984","_name":"member_db","_database":{"config":{"url":"http://localhost:5984","db":"member_db"},"multipart":{},"attachment":{}}}} { _url: 'http://localhost:5984', _name: 'member_db', _database: { info:  Function , replicate:  Function , compact:  Function , changes:  Function , follow:  Function , auth:  Function: auth , session:  Function: session , insert:  Function: insertDoc , get:  Function: getDoc , head:  Function: headDoc , copy:  Function: copyDoc , destroy:  Function: destroyDoc , bulk:  Function: bulksDoc , list:  Function: listDoc , fetch:  Function: fetchDocs , fetchRevs:  Function: fetchRevs , config: { url: 'http://localhost:5984', db: 'member_db' }, multipart: { insert:  Function: insertMultipart , get:  Function: getMultipart  }, attachment: { insert:  Function: insertAtt , get:  Function: getAtt , destroy:  Function: destroyAtt  }, show:  Function: showDoc , atomic:  Function: updateWithHandler , updateWithHandler:  Function: updateWithHandler , search:  Function: viewSearch , spatial:  Function: viewSpatial , view: {  Function: viewDocs  compact:  Function  }, viewWithList:  Function: viewWithList  } } info:  CouchDBKeyValueStore.js : member_db already exists ok 3 Successfully enrolled admin2 with CA server ok 4 Member isEnrolled successfully. info:  Client.js : Successfully loaded user "admin2" from local key value store ok 5 Successfully loaded the user from key value store  1..5 # tests 5 # pass  5  # ok  Assigning to Caroline for evaluation.   If you want that to be 'the fix'  you can assign it back to me with a comment.  You probably want a different solution.        ></description> </Issue>
