<Issue id="42302" key="FABN-1378" number="1378" project="10604" reporter="vijaypunugubati" assignee="heatherp" creator="vijaypunugubati" type="10004" summary="fabric-merge-end-2-end job: Fail to run node.js sdk scenarios on test cucumber intermittently: test/scenario/features/steps/chaincode_steps.js" priority="2" resolution="10000" status="6" created="2019-09-11 15:34:27.0" updated="2019-09-27 10:25:18.0" resolutiondate="2019-09-27 10:25:18.0" votes="0" watches="6" workflowId="55357"> <description><! CDATA {code:java} // code placeholder {code} Scenarios on test cucumber failed to run with a timeout error and these errors were first observed on Sep 9, 2019.  *Branch:*Â Master  *Error Snippet:* {code:java} /00:20:49.382     31mâœ– And I can approve node chaincode at version v1 named example_cc_node as organization org1 on channel lifecyclechannel with endorsement policy both_orgs 39m #  90mtest/scenario/features/steps/chaincode_steps.js:77 39m 00:20:49.382         31mError: REQUEST_TIMEOUT 39m 90m 39m 00:20:49.382         90m    at Timeout.setTimeout (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Peer.js:117:19) 39m 00:20:49.382         90m    at ontimeout (timers.js:436:11) 39m 00:20:49.382         90m    at tryOnTimeout (timers.js:300:5) 39m 00:20:49.382         90m    at listOnTimeout (timers.js:263:5) 39m 00:20:49.382         90m    at Timer.processTimers (timers.js:223:10) 39m 00:20:49.382     36m- And I can approve java chaincode at version v1 named example_cc_java as organization org1 on channel lifecyclechannel with endorsement policy both_orgs 39m #  90mtest/scenario/features/steps/chaincode_steps.js:77 39m 00:20:49.382     36m- And I can approve golang chaincode at version v1 named example_cc_golang as organization org1 on channel lifecyclechannel with endorsement policy both_orgs 39m #  90mtest/scenario/features/steps/chaincode_steps.js:77 39m 00:20:49.382     36m- And I can package node chaincode at version v1 named example_cc_node as organization org2 with goPath na located at ../../../../test/fixtures/chaincode/node_cc/example_cc and metadata located at ../../../../test/fixtures/chaincode/metadata with initrequired 39m #  90mtest/scenario/features/steps/chaincode_steps.js:14 39m 00:20:49.382     36m- And I can package java chaincode at version v1 named example_cc_java as organization org2 with goPath na located at ../../../../test/fixtures/chaincode/java_cc/example_cc and metadata located at ../../../../test/fixtures/chaincode/metadata with initrequired 39m #  90mtest/scenario/features/steps/chaincode_steps.js:14 39m 00:20:49.382     36m- And I can package golang chaincode at version v1 named example_cc_golang as organization org2 with goPath ../../../../test/fixtures/chaincode/goLang located at github.com/example_cc and metadata located at ../../../../test/fixtures/chaincode/metadata with initrequired 39m #  90mtest/scenario/features/steps/chaincode_steps.js:14 39m 00:20:49.382     36m- And I can install node chaincode at version v1 named example_cc_node as organization org2 39m #  90mtest/scenario/features/steps/chaincode_steps.js:54 39m 00:20:49.382     36m- And I can install java chaincode at version v1 named example_cc_java as organization org2 39m #  90mtest/scenario/features/steps/chaincode_steps.js:54 39m 00:20:49.382     36m- And I can install golang chaincode at version v1 named example_cc_golang as organization org2 39m #  90mtest/scenario/features/steps/chaincode_steps.js:54 39m 00:20:49.382     36m- And I can approve node chaincode at version v1 named example_cc_node as organization org2 on channel lifecyclechannel with endorsement policy both_orgs 39m #  90mtest/scenario/features/steps/chaincode_steps.js:77 39m 00:20:49.382     36m- And I can approve java chaincode at version v1 named example_cc_java as organization org2 on channel lifecyclechannel with endorsement policy both_orgs 39m #  90mtest/scenario/features/steps/chaincode_steps.js:77 39m 00:20:49.382     36m- And I can approve golang chaincode at version v1 named example_cc_golang as organization org2 on channel lifecyclechannel with endorsement policy both_orgs 39m #  90mtest/scenario/features/steps/chaincode_steps.js:77 39m 00:20:49.382     36m- And I can query for chaincode example_cc_node for commit status as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:387 39m 00:20:49.382     36m- And I can query for chaincode example_cc_java for commit status as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:387 39m 00:20:49.382     36m- And I can query for chaincode example_cc_golang for commit status as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:387 39m 00:20:49.382     36m- And I can commit node chaincode at version v1 named example_cc_node as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:155 39m 00:20:49.382     36m- And I can commit java chaincode at version v1 named example_cc_java as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:155 39m 00:20:49.382     36m- And I can commit golang chaincode at version v1 named example_cc_golang as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:155 39m 00:20:49.382     36m- And I can call init on chaincode named example_cc_node as organization org1 on channel lifecyclechannel with args  "a","1000","b","2000"  39m #  90mtest/scenario/features/steps/chaincode_steps.js:206 39m 00:20:49.382     36m- And I can call init on chaincode named example_cc_java as organization org1 on channel lifecyclechannel with args  "a","1000","b","2000"  39m #  90mtest/scenario/features/steps/chaincode_steps.js:206 39m 00:20:49.382     36m- And I can call init on chaincode named example_cc_golang as organization org1 on channel lifecyclechannel with args  "a","1000","b","2000"  39m #  90mtest/scenario/features/steps/chaincode_steps.js:206 39m 00:20:49.382     36m- And I can call move on chaincode named example_cc_node as organization org1 on channel lifecyclechannel with args  "a","b","100"  39m #  90mtest/scenario/features/steps/chaincode_steps.js:206 39m 00:20:49.382     36m- And I can call move on chaincode named example_cc_java as organization org1 on channel lifecyclechannel with args  "a","b","100"  39m #  90mtest/scenario/features/steps/chaincode_steps.js:206 39m 00:20:49.382     36m- And I can call move on chaincode named example_cc_golang as organization org1 on channel lifecyclechannel with args  "a","b","100"  39m #  90mtest/scenario/features/steps/chaincode_steps.js:206 39m 00:20:49.383     36m- And I can query for defined chaincode example_cc_node as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:328 39m 00:20:49.383     36m- And I can query for defined chaincode example_cc_java as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:328 39m 00:20:49.383     36m- And I can query for defined chaincode example_cc_golang as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:328 39m 00:20:49.383     36m- And I can query for chaincode example_cc_node for commit status as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:387 39m 00:20:49.383     36m- And I can query for chaincode example_cc_java for commit status as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:387 39m 00:20:49.383     36m- And I can query for chaincode example_cc_golang for commit status as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:387 39m 00:20:49.383     36m- And I can query installed chaincode example_cc_node as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:269 39m 00:20:49.383     36m- And I can query installed chaincode example_cc_java as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:269 39m 00:20:49.383     36m- And I can query installed chaincode example_cc_golang as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:269 39m 00:20:49.383     36m- And I can query installed chaincodes as organization org1 on channel lifecyclechannel 39m #  90mtest/scenario/features/steps/chaincode_steps.js:300 39m 00:20:49.383  00:20:49.383 8 scenarios ( 31m1 failed 39m,  32m7 passed 39m) 00:20:49.383 102 steps ( 31m1 failed 39m,  36m33 skipped 39m,  32m68 passed 39m) 00:20:49.383 5m20.072s 00:20:49.416 npm ERR! code ELIFECYCLE 00:20:49.416 npm ERR! errno 1 00:20:49.418 npm ERR! fabric-sdk-node@2.0.0-snapshot test:cucumber: `cucumber-js ./test/scenario/features/*.feature` 00:20:49.418 npm ERR! Exit status 1 00:20:49.419 npm ERR!  00:20:49.420 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:cucumber script. 00:20:49.420 npm ERR! This is probably not a problem with npm. There is likely additional logging output above. 00:20:49.468  00:20:49.468 npm ERR! A complete log of this run can be found in: 00:20:49.469 npm ERR!     /home/jenkins/.npm/_logs/2019-09-09T18_55_44_807Z-debug.log 00:20:49.477  18:55:44  'run-test-cucumber' errored after 5.37 min 00:20:49.478  18:55:44   31mError 39m in plugin " 36mgulp-shell 39m" 00:20:49.478 Message: 00:20:49.478     Command `export HFC_LOGGING='{"debug":"/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debugc.log"}'; npm run test:cucumber` failed with exit code 1 00:20:49.479  18:55:44  'run-test-merge' errored after 5.4 min/ code placeholder {code} Build logs:   https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6311/consoleFull    https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/lastFailedBuild/   ></description> </Issue>
