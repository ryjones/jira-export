<Issue id="34300" key="FABN-951" number="951" project="10604" reporter="davidkel" assignee="bestbeforetoday" creator="davidkel" type="10004" summary=" fabric-network  transaction handlers share the same counters" priority="2" resolution="10000" status="6" created="2018-10-02 22:31:53.0" updated="2018-10-09 12:45:49.0" resolutiondate="2018-10-09 12:45:49.0" votes="0" watches="1" workflowId="45701"> <description><! CDATA I have a concern regarding transaction handlers not managing their own counters for event strategies. It forces the requirement that submitTransaction must be a synchronous activity and code such as  {code} const p1 = contract.submitTransaction(...); const p2 = contract.submitTransaction(...);  await Promise.all( p1, p2 ); {code} is not a supported programming paradigm.  I think it would be better that each TxEventHandler manages it's own counters and doesn't share them with other TxEventHandlers through the strategy object associated with the gateway.  Also it would not be usable from say a rest server without the rest server having to create a gateway for each request.  ></description> </Issue>
