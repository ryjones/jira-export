<Action id="42162" issue="28720" author="harrisob@us.ibm.com" type="comment" body="Is this with the new Channel Event Services using Filtered blocks or Full blocks, or is this with the legacy Event Hub ?" created="2018-03-26 17:33:53.0" updateauthor="harrisob@us.ibm.com" updated="2018-03-26 17:33:53.0"/>
<Action id="42555" issue="28720" author="zonkedhazmat" type="comment" body="is was on the legacy event hub. " created="2018-04-05 05:14:49.0" updateauthor="zonkedhazmat" updated="2018-04-05 05:14:49.0"/>
<Action id="42615" issue="28720" author="zonkedhazmat" type="comment" body="Also with the channel event services using registerChaincodeEvents, I haven&apos;t been able to catch the events being emitted from the chaincode at all." created="2018-04-06 05:57:49.0" updateauthor="zonkedhazmat" updated="2018-04-06 05:57:49.0"/>
<Action id="42886" issue="28720" author="harrisob@us.ibm.com" type="comment" body="I am not able to recreate this. I was able to confirm that if my chaincode tried to SetEvent() more then once, only the last one was seen, meaning that only one chaincode event is allowed. Would you provide the registrations and chaincode ?, maybe a debug trace of NodeSDK." created="2018-04-12 19:38:16.0" updateauthor="harrisob@us.ibm.com" updated="2018-04-12 19:38:16.0"/>
<Action id="42889" issue="28720" author="zonkedhazmat" type="comment" created="2018-04-12 23:46:16.0" updateauthor="zonkedhazmat" updated="2018-04-12 23:46:16.0"> <body><! CDATA Ill provide the appropriate summary pieces of code below  The chaincode implementation {code:java} objectType := "product" product := `{"objectType":"` + objectType + `","id":"` + args 0  + `","data":` + args 1   + `}` err = APIstub.SetEvent(eventType, eventAsBytes) if err != nil { shim.Error("Could not set event for: " + event) } {code} The Node SDK Legacy eventhub Implementation     {code:java}  const eventRegId = this.event_hub.registerChaincodeEvent(request.chaincodeId, "product", event => {  console.log("Event received :" + event.payload); em.emit(eventPayload); this.event_hub.unregisterChaincodeEvent(eventRegId); });{code} The channeleventhub Node SDK  {code:java} let event_hubs = channel.getChannelEventHubsForOrg(); const profileRegId = this.channel_event_hub.registerChaincodeEvent(request.chaincodeId, "product", event => { em.emit(event.payload); this.channel_event_hub.unregisterChaincodeEvent(profileRegId); }); {code} I don't have access to my work pc at the moment so I am unable to get the trace. If I have time later I'll try grab it for you.     ></body> </Action>
<Action id="42968" issue="28720" author="zonkedhazmat" type="comment" created="2018-04-16 03:38:46.0" updateauthor="zonkedhazmat" updated="2018-04-16 03:39:31.0"> <body><! CDATA I have finally resolved this issue.   As there are limited examples I was implementing register chaincode events within the invoke function, this lead to errors and bugs occuring where only the latest invoke in a block was registered.   When bringing the the registration out of the invoke it is able to listen to events raised in the chaincode when not unregistering. This fixes the issues I was having with it.  ></body> </Action>
