<Issue id="27513" key="FABN-660" number="660" project="10604" reporter="harrisob@us.ibm.com" assignee="harrisob@us.ibm.com" creator="harrisob@us.ibm.com" type="10001" summary="NodeSDK - enable logging setting to be reset" priority="3" resolution="10001" status="6" created="2018-02-07 20:16:37.0" updated="2019-07-30 17:57:34.0" resolutiondate="2019-07-30 17:57:34.0" votes="0" watches="3" workflowId="34391"> <environment><! CDATA {color:#cc7832}{color:#333333}Fabric-client version: 1.0.0-preview^ NodeJS: v8.9.3{color} {color}  ></environment> <description><! CDATA *What happens* When setting 'hfc-logging' for `fabric-client` using Client.setConfigSetting() the value passed to `setConfigSetting()` is ignored.  *Reproduction example* {code:java} const FabricClient = require('fabric-client'); FabricClient.setConfigSetting('hfc-logging', { 'debug': 'console', 'info': 'console', 'error': 'console' });  const client = new FabricClient(); client.newTransactionID(true); //Expected console output: 'newTransactionID - getting an admin TransactionID' {code} *What I'm expecting*  I'm expecting debug output in the console.  *Solution*  Call {code:java} FabricUtils.setConfigSetting(){code} before requiring {code:java} require('fabric-client'){code} like so: {code:java} const FabricUtils = require('fabric-client/lib/utils'); FabricUtils.setConfigSetting('hfc-logging', { 'debug': 'console', 'info': 'console', 'error': 'console' });  const FabricClient = require('fabric-client'); const client = new FabricClient(); client.newTransactionID(true);{code} Because:  {code:java} require('fabric-client') {code} creates a default global logger. That cannot be updated.  Â   *Reasoning*  I'm filing this as a bug because the documentation does not specify {code:java} setConfigSetting(){code} only works on FabricUtils. As well as believing that the Reproduction example should just work.  EDIT: I removed the 'cause' section since it probably only caused confusion.  ></description> </Issue>
