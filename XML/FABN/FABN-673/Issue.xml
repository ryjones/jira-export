<Issue id="26173" key="FABN-673" number="673" project="10604" reporter="harrisob@us.ibm.com" assignee="harrisob@us.ibm.com" creator="harrisob@us.ibm.com" type="10001" summary="NodeSDK - Make the channel event service easier to use" priority="3" resolution="10000" status="6" created="2017-12-19 20:19:51.0" updated="2018-07-20 19:15:42.0" resolutiondate="2018-01-18 15:26:42.0" votes="0" watches="3" workflowId="34404"> <description><! CDATA 1) Make the default action to remove a transaction registration when the block with the transaction id has been seen. The default to remove for block registration and chaincode registration will not to remove the registration as those types of listeners would normally be long running. Add an option to allow user to configure this ability.  2) Make available the end block when specifying a start block to allow for a true range of blocks. We will not assume that if they ask for an end block that it exists, the peer side channel-based event service will validate the request. If the the user does not select a start block, the start block will default to the newest (current top of ledger), the peer side will post a bad status when end block is not greater than the starting block, which will be reflected back to the user with the error callback. The NodeSDK will check however if the user defines the start block greater than the end block. Start and end block options will be available on all three listener types. Since the peer side registration of the delivery service is different when using start and stop (replay / resume) the user will not be allowed to call the connect (which is when the connection is set up with the peer side) before the registration of the replay/resume. And since the replaying and stopping will confuse other listeners, the ChannelEventHub will only allow one replay / resume listener and not other listeners.  3) Include transaction status along with the chaincode events that fire.  ></description> </Issue>
