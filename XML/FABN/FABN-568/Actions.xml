<Action id="41994" issue="19644" author="denyeart" type="comment" body="Many issues were bulk moved from v1.0 or v1.1 to v1.2 as part of a cleanup effort, and many of these issues are not high priority or actually intended to be worked for v1.2.  This issue is being bulk moved to Future.  If the issue is indeed high priority for v1.2 and/or very low effort, please move back to v1.2 and add a comment to indicate rationale." created="2018-03-23 05:07:51.0" updateauthor="denyeart" updated="2018-03-23 05:07:51.0"/>
<Action id="45025" issue="19644" author="ibmamnt" type="comment" created="2018-05-24 02:30:20.0" updateauthor="ibmamnt" updated="2018-05-24 02:30:20.0"> <body><! CDATA I guess this is high priority in the real production system where multiple orderers are deployed. When the first orderer is down, all of the transactions will fail even though there are working orderers for high availability.  Application developers need to aware of orderer keep alive. Peers aliveness check was actually implemented in fabric v0.6.   https://github.com/hyperledger-archives/fabric/blob/master/sdk/node/src/hfc.ts#L711   let client = new net.Socket(); let tryNext = () => \{  debug("Skipping unresponsive peer "+peers pidx .getUrl());  client.destroy();  trySendTransaction(pidx+1); }  I guess it should be possible to implement similar way for orderer.  ></body> </Action>
<Action id="45953" issue="19644" author="zhaochy" type="comment" body=" ~davidkel  solved in FAB-10627, so can we close this now?" created="2018-06-15 02:37:58.0" updateauthor="zhaochy" updated="2018-06-15 02:37:58.0"/>
<Action id="45954" issue="19644" author="ibmamnt" type="comment" created="2018-06-15 03:01:10.0" updateauthor="ibmamnt" updated="2018-06-15 03:01:10.0"> <body><! CDATA I have no authority to decide "close".  But from my perspective, it can be closed by some authority (Dave Keysey ? ).     ></body> </Action>
