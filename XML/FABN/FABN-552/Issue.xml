<Issue id="18340" key="FABN-552" number="552" project="10604" reporter="jimthematrix" assignee="jimthematrix" creator="jimthematrix" type="10004" summary="Test code&apos;s handling of the &quot;fcn&quot; parameter is confusing" priority="3" resolution="10000" status="6" created="2017-06-19 18:46:41.0" updated="2018-07-19 00:54:29.0" resolutiondate="2017-06-20 03:10:12.0" votes="0" watches="0" workflowId="34283" security="10001"> <description><! CDATA currently the chaincode samples used in the node SDK's e2e tests requires two function names, one is always required to be "invoke", and the 2nd being the first argument is the real function name: {code} function, args := stub.GetFunctionAndParameters() 	 	if function != "invoke" { 		return shim.Error("Unknown function call") 	}  	if args 0  == "delete" { 		// Deletes an entity from its state 		return t.delete(stub, args) 	}  	if args 0  == "query" { 		// queries an entity state 		return t.query(stub, args) 	} 	if args 0  == "move" { 		// Deletes an entity from its state 		return t.move(stub, args) 	} {code}  This is very confusing to users. basically the first function name is completely useless. Should change it so that the real function name gets returned by stub.GetFunctionAndParameters(), and eliminate the "invoke".  https://chat.hyperledger.org/channel/fabric-sdk-node?msg=3AAP8hmp4PaDdQJgY https://chat.hyperledger.org/channel/fabric-sdk-node?msg=vDHuYTdg4B5aWruYB  ></description> </Issue>
