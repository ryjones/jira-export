<Issue id="45833" key="FABN-1613" number="1613" project="10604" reporter="gauravgiri" creator="gauravgiri" type="10001" summary="Client flexibility and validations for handling peer proposal responses" priority="3" resolution="10002" status="6" created="2020-08-17 07:14:15.0" updated="2020-09-09 14:14:52.0" resolutiondate="2020-09-09 14:14:52.0" votes="0" watches="1" workflowId="59739" archived="N"> <description><! CDATA In current implementation of fabric-network’s, Transaction.submit(), client flexibility to introspect the peer proposal responses before sending them to the orderer doesn’t exist:  1. Option to decide whether something should be sent to the orderer or not:     a) if responses return an error, the application may still want these committed to the blockchain, currently the gateway would not allow this if all responses return the same thing     b) A client may want to check the responses, even if they are a success the results may not be accepted by the client and thus not want them committed to the blockchain. Currently the gateway would submit them without any choice  2. State Based Endorsements: The client may be the only part of the system that knows if it has satisfied the endorsement policy because of the use of State based endorsement, so would need the option to not try to send something that it knows won't validate  3. Peer Proposal Responses Mismatch w.r.t. RW sets: The client may want the option to not send to the orderer if proposals don't match and prevent further processing of these invalid transactions, and not send to orderer.  4. Private Data Transactions: In private data environment committing transactions that will be registered as invalid caused various request by gossip to retrieve data that it can't get. This could be avoided as the client could detect what would be an invalid transaction and not submit to the orderer.  Affected versions: 1.4.x, 2.x  ></description> </Issue>
