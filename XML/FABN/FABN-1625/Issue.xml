<Issue id="45971" key="FABN-1625" number="1625" project="10604" reporter="JIRAUSER20406" assignee="harrisob@us.ibm.com" creator="JIRAUSER20406" type="10004" summary="submitTransaction() fails with Discovery error if previous promise is not resolved" priority="2" resolution="10002" status="6" created="2020-09-03 09:37:04.0" updated="2020-10-15 21:27:54.0" resolutiondate="2020-10-15 21:27:54.0" votes="1" watches="2" workflowId="59882" archived="N"> <description><! CDATA tested with same effect on fabric-network 2.2.0, 2.2.1 and 2.2.2  In this code, if more than one submitTransaction is called, but the promises are collected and not 'awaited' for, the second submitTransaction fails with     Error: No discovery results found at DiscoveryService.getDiscoveryResults (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-common/lib/DiscoveryService.js:367:10) at DiscoveryHandler.endorse (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-common/lib/DiscoveryHandler.js:161:40) at Endorsement.send (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-common/lib/Proposal.js:408:29) at Transaction.submit (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-network/lib/transaction.js:212:52) at processTicksAndRejections (internal/process/task_queues.js:97:5)          let promises =   ; for (let x = 0; x < 2; x++) {  let p = contract.submitTransaction('createMyAsset', `id:${x+6061}`,`BondAlias:${x}`);  } await Promise.all(promises);        ></description> </Issue>
