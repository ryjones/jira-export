<Issue id="21014" key="FABN-296" number="296" project="10604" reporter="davidkel" assignee="jimthematrix@gmail.com" creator="davidkel" type="10004" summary="Node sdk packager could package un-required js files and not include vital files" priority="1" resolution="10000" status="6" created="2017-09-27 09:33:38.0" updated="2018-07-19 00:53:32.0" resolutiondate="2017-10-02 14:57:36.0" votes="0" watches="2" workflowId="34027"> <description><! CDATA Currently the Node Packager includes only the following files {noformat} var keep =   	'.js', 	'.json', 	'.proto', 	'.yaml', 	'.yml',  ; {noformat} But this scans from a root directory and includes any subdirectories it might find which includes node_modules if it is present for example so could end up packaging a vast amount of unrequired content. The other problem is that it doesn't include useful metadata files and other files that could be required by the chaincode which don't fall into the pattern above.  As an example, consider the scenario where the chaincode isn't allowed to contact the external npm repository and may wish to have a mixture of locally stored npm modules in TGZ format and/or may want to contact a internally hosted npm repository. This could be achieved if it were possible to include in the package the TGZ files of the modules to reside on the filesystem and also the file .npmrc which would allow the ability to configure the actions of npm install such as redefine the registry to contact. I don't think that a white-list solution is the best approach however (because in the future Hyperledger Composer may want to bundle in files with the extension .bna and that would not be a great extension to add into the white list). Given that this is chaincode to run in a node.js environment with npm it would be better to override this white-list mechanism and use a black-list approach if the file .npmignore exists.   ></description> </Issue>
