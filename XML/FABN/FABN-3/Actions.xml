<Action id="19144" issue="12922" author="bmos299" type="comment" created="2016-10-06 18:32:46.0" updateauthor="bmos299" updated="2016-10-06 18:32:46.0"> <body><! CDATA Hi Dongming, can you add a code snippet? Thanks,Barry  ></body> </Action>
<Action id="19145" issue="12922" author="bmos299" type="comment" body="...and your work around." created="2016-10-06 18:33:03.0" updateauthor="bmos299" updated="2016-10-06 18:33:03.0"/>
<Action id="19146" issue="12922" author="dongming" type="comment" created="2016-10-06 19:04:50.0" updateauthor="dongming" updated="2016-10-06 19:04:50.0"> <body><! CDATA The code is as follow:  var i =0; function SendInvokeArt(pid, user, request, null) { ... var invokeTx = user.invoke(request);  if (i< 125) { SendInvokeArt(pid, user, request, null); i++; }  ... }  ></body> </Action>
<Action id="19153" issue="12922" author="ratnakar" type="comment" created="2016-10-07 13:19:49.0" updateauthor="ratnakar" updated="2016-10-07 13:19:49.0"> <body><! CDATA Additional details :   * *hfc version 0.6.2* * *4 peer network with security and pbft enabled*  To achive the above mentioned test I have commented the below lines in hfs.ts/hfs.js file in function *getTCerts()*  {code:java} self.getTCertResponseTime.start(); self.getTCertResponseTime.cancel(); self.getTCertResponseTime.stop();  {code}  calling invokes in a for loop for 3000 times, however I could see some of the Invokes are failing  Error message:  {code:java}  Failed to submit chaincode invoke transaction: request={"chaincodeID":"d4473998ca8c11e93e26bbe97509141a5553e44014c4bce6b9790998629d8f48","fcn":"invoke","args": "a","b","10" }, error={"error":{"code":14,"metadata":{"_internal_repr":{}}},"msg":"Error"} {code}     $ ./QuickTrxCounter.sh http://localhost:7050  Chain height on http://localhost:7050 is 42  Total Transactions made 2657   Do we have any suggestion for perfomrance/stress testsing in Nodejs ?  Sure there is some reason for having *TCertResponseTime* here, Please help us to understand the same ?  PS: Attached nodejs and all 4 PEER logs  ^logs.zip    ></body> </Action>
<Action id="19187" issue="12922" author="bmos299" type="comment" body="Assigning to Jim to determine who should work on the issue. " created="2016-10-10 17:14:56.0" updateauthor="bmos299" updated="2016-10-10 17:14:56.0"/>
<Action id="19206" issue="12922" author="ratnakar" type="comment" created="2016-10-11 20:47:01.0" updateauthor="ratnakar" updated="2016-10-11 20:47:01.0"> <body><! CDATA Instead of tight loop this time, spawning 5 child processes and calling invokes on receiving *submit* event Still see the issue.  {code:java} /home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/stats.js:77 throw Error("started twice without stopping"); ^  Error: started twice without stopping at Error (native) at ResponseTime.start (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/stats.js:77:19) at TCertGetter.getTCerts (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/hfc.js:1705:35) at TCertGetter.getNextTCert (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/hfc.js:1659:18) at Member.getNextTCert (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/hfc.js:862:28) at TransactionContext.getMyTCert (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/hfc.js:1175:21) at TransactionContext.invoke (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/hfc.js:1012:14) at Member.invoke (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/node_modules/hfc/lib/hfc.js:814:12) at executeTest (/home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/childProcess.js:58:27) at /home/ratnakar/go/src/github.com/hyperledger/fabric/event-perf/childProcess.js:76:13  child process exited with code 1  {code}  *Below code has been used for sending traffic/Invoke transaction:*  {code:java}  function executeTest() { // Construct the invoke request var invokeRequest = { // Name (hash) required for invoke chaincodeID: testChaincodeID, // Function to trigger fcn: config.invokeRequest.functionName, // Parameters for the invoke function args: newArgs };  // Trigger the invoke transaction var invokeTx = deployer.invoke(invokeRequest); invokeTx.on('submitted', function(results) { // Invoke transaction submitted console.log(util.format("submitted chaincode invoke transaction: response=%j\n", results)); executeTest(); }); invokeTx.on('complete', function(results) { // Invoke transaction completed console.log(util.format("completed chaincode invoke transaction: response=%j\n", results)); query(); }); invokeTx.on('error', function(err) { // Invoke transaction submission failed console.log(util.format("Failed to process chaincode invoke transaction: request=%j, error=%j\n", invokeRequest, err)); executeTest(); }); } {code}   Also as per  ~jimthematrix  suggestion set the Invoke wait time to 1 hour  {code:java} chain.setInvokeWaitTime(3600); {code}  However still see the below error for Invokes:  {code:java} error="timed out waiting for transaction to complete" {code}   PS: Adding logs   ^Stress-failures.txt.zip    and code   ^NodeCode.zip     ></body> </Action>
<Action id="19314" issue="12922" author="dongming" type="comment" body="With chaincode exmaple02,  I can send invokes every 200ms, but will see the error if go below 200ms." created="2016-10-20 14:03:40.0" updateauthor="dongming" updated="2016-10-20 14:03:40.0"/>
<Action id="20023" issue="12922" author="ryokawajp" type="comment" created="2016-12-08 07:39:53.0" updateauthor="ryokawajp" updated="2016-12-08 07:46:35.0"> <body><! CDATA Hi everyone. We also face the same exception "throw Error("started twice without stopping");", which led to a crash of our app. Our application is deployed on Bluemix and our testers were accessing the application with usual web browsers. We are using hfc 0.6.5.  https://github.com/hyperledger/fabric/blob/v0.6/sdk/node/src/hfc.ts#L2097  If I understand the behavior of the HFC correctly, the variable self.gettingTCerts in TCertGetter is not updated and looks always being false.  Is this the cause of calling getTCert() twice?   ></body> </Action>
<Action id="25426" issue="12922" author="jimthematrix" type="comment" body="This has been accomplished by  ~dongming &apos;s Performance Test Engine work" created="2017-06-05 19:56:15.0" updateauthor="jimthematrix" updated="2017-06-05 19:56:15.0"/>
