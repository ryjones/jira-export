<Issue id="29413" key="FABN-672" number="672" project="10604" reporter="zhaochy" assignee="zhaochy" creator="zhaochy" type="10001" summary="grpc should throw error if the server is unavailable rather than hang until timeout" priority="3" resolution="10000" status="6" created="2018-04-16 03:19:51.0" updated="2018-07-20 19:15:56.0" resolutiondate="2018-04-27 03:05:30.0" votes="0" watches="1" workflowId="34403"> <description><! CDATA currently, the gRPC library never considers a server to be unreachable. Either the client has connected to the server, or has not yet connected to the server.   sdk-node set a timeout for any grpc call, this made grpc hang util timeout if the grpc server is unavailable. For instance, we usually set a super-long timeout for node chaincode instantiate (e.g. 15mins), but if we mis-config the peer url (server unavailable), grpc will hang for 15mins.  A better behavior is test if the grpc connection can be reached before send the instantiate request. grpc provides such method   Client#waitForReady|https://grpc.io/grpc/node/grpc.Client.html#waitForReady__anchor , If the client connects, sdk will get a callback without an error, and if it doesn't connect before the deadline passes, sdk will get a callback with an error.  ></description> </Issue>
