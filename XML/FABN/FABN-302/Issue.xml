<Issue id="12734" key="FABN-302" number="302" project="10604" reporter="jjjjibm" assignee="harrisob@us.ibm.com" creator="jjjjibm" type="10004" summary=" node-SDK  chain.addPeer() invalid pem parameter accepted" environment="vLaunch VM running master " priority="4" resolution="10000" status="6" created="2016-09-24 06:49:24.0" updated="2018-07-19 00:53:34.0" resolutiondate="2017-02-08 15:25:44.0" votes="0" watches="1" workflowId="34033"> <description><! CDATA I added invalid pem parameters to chain-tests.js  if (chain.addPeer("grpc://localhost:303030", "")) { 			// This parameter is optional, so probably empty string should be allowed 			if (chain.addPeer("grpc://localhost:303031", bogusPem)) { 				// not a string, so why was it accepted? 				if (typeof bogusPem == 'string' || bogusPem instanceof String) { 					console.log("BogusPem is a strong"); 				} 				else { 					console.log("BogusPem is not a string"); 				} 				fail(t, "peer pem: pem= " + bogusPem + " unexpectedly accepted"); 			} 			else { 				pass(t, "peer pem"); 			} 		} 		else { 			fail(t, "peer pem: null pem was rejected"); 		}  Here is the output: # peer pem BogusPem is not a string not ok 32 Failure:  peer pem: pem= -12 unexpectedly accepted :  undefined   You can also hard code -12 into the test case for a similar result.  How to recreate: Add the code fragment to one of the sdk/node/test/unit/*.js tests Run make node-sdk-unit-tests as usual.   ></description> </Issue>
