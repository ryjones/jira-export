<Issue id="31198" key="FABN-294" number="294" project="10604" reporter="ratnakar" assignee="harrisob@us.ibm.com" creator="ratnakar" type="10004" summary=" Interoperability test   Mutual TLS is not working and failed to create the channel, which causes several Integration test failures" priority="2" resolution="10000" status="6" created="2018-06-19 21:25:18.0" updated="2018-11-15 18:22:11.0" resolutiondate="2018-11-14 13:49:04.0" votes="0" watches="4" workflowId="34025"> <description><! CDATA Please Refer the Case 4 of FAB-10161 .  Nodejs Integration Test Suite at 1.1 , but others at 1.2: Node.js SDK, Fabric, Fabric-CA Gist of Orderer logs {code:java} 2018-06-19 18:19:34.808 UTC  common/deliver  Handle -> DEBU 0d4 Attempting to read seek info message from 172.18.0.1:57450 2018-06-19 18:19:34.809 UTC  common/deliver  deliverBlocks -> WARN 0d5 Rejecting deliver for 172.18.0.1:57450 due to envelope validation error: client didn't include its TLS cert hash {code} Test failure {code:java} not ok 9 Error: Invalid results returned ::BAD_REQUEST at ClientDuplexStream.<anonymous> (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:231:23) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at addChunk (_stream_readable.js:263:12) at readableAddChunk (_stream_readable.js:250:11) at ClientDuplexStream.Readable.push (_stream_readable.js:208:10) at readCallback (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/grpc/src/client.js:312:14)^  00m^  00m^  2m^  38;5;66m ---^  00m operator: fail at: e2eUtils.tlsEnroll.then.then.then.then.then.then.then.then.then.then.catch (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/test/integration/e2e/create-channel.js:196:5) stack: |- Error: Error: Invalid results returned ::BAD_REQUEST at ClientDuplexStream.<anonymous> (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:231:23) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at addChunk (_stream_readable.js:263:12) at readableAddChunk (_stream_readable.js:250:11) at ClientDuplexStream.Readable.push (_stream_readable.js:208:10) at readCallback (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/grpc/src/client.js:312:14) at Test.assert  as _assert  (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/tape/lib/test.js:224:54) at Test.bound  as _assert  (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/tape/lib/test.js:76:32) at Test.fail (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/tape/lib/test.js:317:10) at Test.bound  as fail  (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/node_modules/tape/lib/test.js:76:32) at e2eUtils.tlsEnroll.then.then.then.then.then.then.then.then.then.then.catch (/Users/ratnakar/workspace/compatibility/fabric-sdk-node/test/integration/e2e/create-channel.js:196:5) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)^  00m^  2m^  38;5;66m ...^  00m^  00m^  2m^  38;5;66m # ^  00m {code} complete test logs are enclosed, refer the file run4.txt  For Quick reference given the steps to reproduce the issue as following *Nodejs Integration Test Suite at 1.1 , Node.js SDK at 1.2, Fabric is at 1.2 & Fabric-CA is at 1.2* {code:java} Step 1 : Clone the repo (Default it points to release-1.1 branch) git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install make sure to use latest 1.2 node modules for the clients fabric-client and fabric-ca-client (As of this testing used the version: 1.2.0-snapshot.62) rm -rf node_modules/fabric-c* npm install fabric-client@1.2.0-snapshot.62 npm install fabric-ca-client@1.2.0-snapshot.62  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.2.0-snapshot-3436f454f export DOCKER_IMG_CA_TAG=:amd64-1.2.0-snapshot-744e032 export THIRDPARTY_IMG_TAG=:amd64-0.4.8  Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.2 network needs all the required crypto/channel artifacts that are available in master branch)   Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code}  ></description> </Issue>
