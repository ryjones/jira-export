<Issue id="39229" key="FABN-1207" number="1207" project="10604" reporter="florianc" assignee="harrisob@us.ibm.com" creator="florianc" type="10004" summary="Unable to stop chaincode event listener when providing startBlock, endBlock and disconnect options" priority="3" resolution="10000" status="6" created="2019-04-11 14:16:51.0" updated="2019-05-21 12:25:01.0" resolutiondate="2019-05-21 12:25:01.0" votes="0" watches="2" workflowId="52106"> <description><! CDATA Issue created as advised  in rocket.chat|https://chat.hyperledger.org/channel/fabric-sdk-node?msg=jKoGSirzQKkrkXXx4   As a reference,  here is the link to registerChaincodeEvent.|https://fabric-sdk-node.github.io/release-1.4/ChannelEventHub.html#registerChaincodeEvent__anchor    SDK 1.4.0  As per the documentation (see above), for the function registerChaincodeEvent, setting the endBlock option automatically sets the disconnect options to true.  However, this causes the listener (or something else) to crash after receiving the first event.  To counter this problem, I explicitly set the disconnect option to false. But this causes the listener to not stop (which seems logical).     So my question is: How can I stop the listener when setting the endBlock option? Checking for the number of the block containing the current received event is not an option, as there may not be an event in the block with the same number as the endBlock options value.     The following code causes the listener to never stop:    {code:java} async function subscribeToEvent(peer, channel, chaincodeName, eventName, startBlock, endBlock, eventCallback) { let eventHub = channel.newChannelEventHub(peer); event = eventHub.registerChaincodeEvent(chaincodeName, eventName, (event, blockNumber, txid, status) => { var eventData = { payload: event.payload.toString('utf8'), blockNumber: blockNumber, txid: txid, status: status }; eventCallback(eventData); }, (error) => { console.log(error); throw new Error(error); }, { startBlock: startBlock, endBlock: endBlock, disconnect: false }); eventHub.connect(true); } {code}       The following code crashes the listener:    {code:java} async function subscribeToEvent(peer, channel, chaincodeName, eventName, startBlock, endBlock, eventCallback) { let eventHub = channel.newChannelEventHub(peer); event = eventHub.registerChaincodeEvent(chaincodeName, eventName, (event, blockNumber, txid, status) => { var eventData = { payload: event.payload.toString('utf8'), blockNumber: blockNumber, txid: txid, status: status }; eventCallback(eventData); }, (error) => { console.log(error); throw new Error(error); }, { startBlock: startBlock, endBlock: endBlock/*, disconnect: false*/ }); eventHub.connect(true); } {code}       Error: {noformat} λ node basic-event-listener.js We do something with the event-------- { payload: '{"identityId":"XXX","providerId":"XXX"}', blockNumber: '11', txid: '1b8fc894c4463bbd443fb9b1fa06904c355515516259aa867d2c8e087e069f4c', status: 'VALID' } Error: Shutdown due to disconnect on transaction id registration at cbtable.forEach (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1564:23) at Set.forEach (<anonymous>) at ChannelEventHub._callChaincodeListener (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1549:11) at ChannelEventHub._processChaincodeEvents (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1519:14) at ClientDuplexStream._stream.on (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:515:11) at ClientDuplexStream.emit (events.js:189:13) at addChunk (_stream_readable.js:284:12) at readableAddChunk (_stream_readable.js:265:11) at ClientDuplexStream.Readable.push (_stream_readable.js:220:10) at Object.onReceiveMessage (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\grpc\src\client_interceptors.js:1292:19) 2019-04-11T14:12:32.856Z - warn:  ChannelEventHub.js : Error notifacation callback failed message=Error: Shutdown due to disconnect on transaction id registration, stack=Error: Error: Shutdown due to disconnect on transaction id registration at EventRegistration.eventHub.registerChaincodeEvent  as _onErrorFn  (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\basic-event-listener.js:107:15) at EventRegistration.onError (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1709:9) at cbtable.forEach (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:879:30) at Set.forEach (<anonymous>) at cc_closer (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:876:12) at Array.forEach (<anonymous>) at ChannelEventHub._closeAllCallbacks (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:885:43) at ChannelEventHub._disconnect (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:625:8) at cbtable.forEach (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1564:11) at Set.forEach (<anonymous>){noformat}  ></description> </Issue>
