<Action id="28255" issue="18928" author="jimthematrix" type="comment" body=" ~MartinC  not sure i understand the problem, the sendTransaction() method takes an object with two properties: proposalResposes and chaincodeProposal. are you proposing for the method to support different kind of input? if so, what kind?" created="2017-07-12 16:31:51.0" updateauthor="jimthematrix" updated="2017-07-12 16:31:51.0"/>
<Action id="28298" issue="18928" author="martinc" type="comment" created="2017-07-13 07:39:08.0" updateauthor="martinc" updated="2017-07-13 07:39:08.0"> <body><! CDATA Not exactly a different kind of input, more have the SDK cast the input back to the objects it expects them to be.  In implementing a REST API on top of the SDK I want to allow a client of that API to do a proposal as one request followed by a second request to sendTransaction. This means that the proposalResponses and proposal that are sent in by the client have all the data needed but no functions because they have been converted to and from JSON, therefore when they are passed to the SDK the request fails. The first example of a failure I have seen is getTransactionID() being called but a quick look at the code looks like other functions are expected to be available on the input passed in.  Does that explain the problem I am experiencing and my suggested solution better?  ></body> </Action>
<Action id="30107" issue="18928" author="ianj_mitchell@uk.ibm.com" type="comment" created="2017-08-23 13:05:25.0" updateauthor="ianj_mitchell@uk.ibm.com" updated="2017-08-23 13:05:25.0"> <body><! CDATA  ~jimthematrix  the scenario here is allowing the REST client to do the collection of proposalResponses and then use a REST form of sendTransaction giving our REST server the proposalResponses. We receive the information sent from the client as plain JSON and need it to be 'revived' as a fully instantiated object rather than plain JSON.  Perhaps something like the revive function suggested in  https://stackoverflow.com/questions/14027168/how-to-restore-original-object-type-from-json  which seems to describe the same scenario in a generic way.  We've not found a mechanism in Loopback which automagically revives objects in this way.  I guess each SDK class we serialise into a JSON response and then receive back from the client would need such a method.  ></body> </Action>
<Action id="65118" issue="18928" author="heatherp" type="comment" body="Hi, I&apos;ve been working through the node sdk backlog with the maintainers and as this was raised some time ago, I&apos;m closing.   The high-level node sdk APIs have been available for some time, and this issue may be covered by functionality provided there:  https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html   Please re-open if this issue is still affecting you, and the functionality is not available in the low-level or high-level node sdk APIs, thanks." created="2019-10-29 16:27:29.0" updateauthor="heatherp" updated="2019-10-29 16:27:29.0"/>
