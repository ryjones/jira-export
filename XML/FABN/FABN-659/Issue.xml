<Issue id="18928" key="FABN-659" number="659" project="10604" reporter="martinc" creator="martinc" type="10001" summary="Allow sendTransaction to be called with just data" priority="3" resolution="10001" status="6" created="2017-07-04 08:16:55.0" updated="2019-10-29 16:27:29.0" resolutiondate="2019-10-29 16:27:29.0" votes="0" watches="2" workflowId="34390"> <description><! CDATA Currently the sendTransaction function requires that the input passed to it are the object instances that are returned by sendTransactionProposal. For most use cases this works fine however there is a use case where this requires an application to implement an overly complex solution.  The use case is where a node app, using the sdk, acts as an intermediary. An example is a REST API server that wrappers the sdk, where a REST client may send an endorsement request, then pass the output of that endorsement request over REST to send the transaction to an orderer. In this case the REST server will only have the data passed in for the proposal and proposalResponses which when passed to sendTransaction will result in an error when the sdk calls the functions it expects to be available on the input.  There are 2 ways I can think of for an app to code around it. The first is fragile and involves trying to recreate the objects the sdk expects by recreating what the sdk does during sendTransactionProposal, the second is to store the object instances and maintain session information for the REST clients which is not great as REST should be stateless.  Given the data should be enough to run sendTransaction successfully I have raised this requirement as it will remove complexity in any applications wanting to implement this style of use case.  ></description> </Issue>
