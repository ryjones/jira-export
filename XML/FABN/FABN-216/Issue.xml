<Issue id="15079" key="FABN-216" number="216" project="10604" reporter="jjjjibm" assignee="jimthematrix" creator="jjjjibm" type="10004" summary=" node-sdk  https://github.com/hyperledger/fabric-sdk-node -- .hfc-key-store and missing tests" priority="3" resolution="10000" status="6" created="2017-02-27 21:34:06.0" updated="2018-07-19 00:53:15.0" resolutiondate="2017-03-08 05:18:49.0" votes="0" watches="1" workflowId="33947"> <environment><! CDATA fabric-sdk-node : commit bc36ef5e6a70bf31adb852951f1b5a217f24a099 fabric commit 29d7fc035df697a68d271d628e693c556354486f fabric-ca commit c3d00c32499232c484df57b68b6f2314f784179e  Ubuntu is running on a vlaunch VM   ></environment> <description><! CDATA In the readme at https://github.com/hyperledger/fabric-sdk-node, in the section{color:#d04437} Back in your native host (MacOS, or Windows, or Ubuntu, etc), run the following tests: {color} 1) Deleting artifacts of previous runs seems to be described here:   _Clear out your previous key value store if needed for fabric-sdk-node (rm -fr /tmp/hfc-*) and for fabric-ca (rm <...>/fabric-ca/testdata/fabric-ca.db)  I have been clearing out ~/.hfc-key-store.  We should mention that also if it is still required.  2) This paragraph references ca-tests.js:  _Test user management by member services with the {color:#d04437}test/unit/ca-tests.js{color}. This test exercises the KeyValueStore implementations for a file-based KeyValueStore as well as a CouchDB KeyValueStore. To successfully run this test, you must first set up a CouchDB database instance on your local machine. Please see the instructions below._  The test {color:#d04437}unit/ca-test.js {color}was deleted here: https://gerrit.hyperledger.org/r/#/c/6511/  so this paragraph needs work.   If you meant to describe a test that requires couchdb: see instructions below ===> see section{color:#d04437} Set Up CouchDB Database for couchdb-fabriccop-tests.js {color}3) Test happy path from end to end, run node test/unit/end-to-end.js test/unit  --> test/integration We should probably avoid the phrase 'happy path' or even 'green path'.  Perhaps Test end-to-end fuctionality:  node test/integration/end-to-end.js 4) Test transaction proposals, run node test/unit/endorser-tests.js ===> Test transaction proposals{color:#d04437}: {color}run node test/i{color:#d04437}ntegration{color}/endorser-tests.js 5) Test sending endorsed transactions for consensus, run node test/unit/orderer-tests.js\===> Test sending endorsed transactions for consensus{color:#d04437}:{color}  run node test/{color:#d04437}integration{color}/orderer-tests.js  6) We should probably mention that you can install softhsm to run test/unit/pkcs11.js  7) There are many tests in test/integration that are not listed here.  Do we want to describe every test in test/integration and why a user would or not not run the test?      _    ></description> </Issue>
