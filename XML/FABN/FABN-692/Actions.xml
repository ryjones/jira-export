<Action id="46265" issue="31208" author="andrew-coleman" type="comment" body="This API method will supercede the proposed executeTransaction() API method under consideration for 1.2  FAB-7670|https://jira.hyperledger.org/browse/FAB-7670 " created="2018-06-20 08:22:49.0" updateauthor="andrew-coleman" updated="2018-06-20 08:22:49.0"/>
<Action id="46266" issue="31208" author="odowdaibm" type="comment" body="Hello  ~SjirNijssen  - this is the first of 3 JIRAs that we discussed.  Will keep you posted on progress via this JIRA.  Note Google doc share as well." created="2018-06-20 08:24:19.0" updateauthor="odowdaibm" updated="2018-06-20 08:24:19.0"/>
<Action id="46271" issue="31208" author="odowdaibm" type="comment" body="Hello  ~bobbiejc  - here&apos;s the JIRA and referenced Google doc for a simpler API for submitting transactions" created="2018-06-20 08:48:55.0" updateauthor="odowdaibm" updated="2018-06-20 08:48:55.0"/>
<Action id="46650" issue="31208" author="n-horiguchi" type="comment" created="2018-06-28 05:33:34.0" updateauthor="n-horiguchi" updated="2018-06-28 05:33:34.0"> <body><! CDATA Hi. I feel unhappy about this patch because my effort was just discarded silently. Even if submitTransaction() will supercede executeTransaction(), that doesn't mean that executeTransaction() should be removed now because submitTransaction() is not implemented yet. submitTransaction() is targeted for v1.3, so I think we should keep executeTransaction() at least until then.   ></body> </Action>
<Action id="46664" issue="31208" author="andrew-coleman" type="comment" created="2018-06-28 10:45:31.0" updateauthor="andrew-coleman" updated="2018-06-28 10:45:31.0"> <body><! CDATA Hi  ~n-horiguchi   This wasn’t intended to be a permanent removal, but rather an alignment with a broader piece of work we are doing to provide a simplified higher level programming model across the SDKs and chaincode shim APIs.  In particular, we plan to lift this executeTransaction/submitTransaction function into a new package/class to make it clear to application developers that they are working with higher level constructs (other functions such as HA enabled query are planned for later).  The reason we (in discussion with maintainers) took the decision to remove executeTransaction from the Channel class at very short notice was because we would have to maintain two very similar functions in two places in the SDK - one in the high-level package and one in the low level part.  We felt this would cause confusion amongst developers in future releases, and removing one later would be a breaking change.  I apologise that you weren’t directly involved in that discussion - we had to make a quick decision before RC1 was released.  It would be great if we could collaborate on this function going forward.  Many thanks for your patience.  ></body> </Action>
<Action id="46729" issue="31208" author="n-horiguchi" type="comment" created="2018-06-29 05:28:27.0" updateauthor="n-horiguchi" updated="2018-06-29 05:28:27.0"> <body><! CDATA Hello  ~andrew-coleman , Thank you for detailing the situation. Integrating high-level API over submitting transaction and chaincode invocation seems right to me. I think that you are planning to publish a separate package for this purpose shortly, and I'm glad to join its development. I'll pay attention to the related JIRAs.   ></body> </Action>
<Action id="48582" issue="31208" author="troyronda" type="comment" created="2018-08-08 18:30:29.0" updateauthor="troyronda" updated="2018-08-08 18:56:30.0"> <body><! CDATA  ~andrew-coleman  FYI: The Go SDK contains a similar function (Execute):  https://godoc.org/github.com/hyperledger/fabric-sdk-go/pkg/client/channel#Client.Execute (It automatically chooses endorsers, service discovery, requests endorsements, signature validation, submits to the ordering service, watches events for commit, configurable retries, etc).  and pluggable handler model (InvokeHandler): https://godoc.org/github.com/hyperledger/fabric-sdk-go/pkg/client/channel#Client.InvokeHandler    ></body> </Action>
<Action id="51338" issue="31208" author="yacovm" type="comment" created="2018-09-28 09:46:02.0" updateauthor="yacovm" updated="2018-09-28 09:46:02.0"> <body><! CDATA From the PDF:   {quote}Gateway connect will support an additional option – useDiscovery (Boolean, default false){quote}  Why is the default false? That means the default mode requires more configuration because you need a mapping of chaincodes to peers...   ></body> </Action>
<Action id="51350" issue="31208" author="andrew-coleman" type="comment" body="Yes, good point.  This should probably default to true." created="2018-09-28 12:58:03.0" updateauthor="andrew-coleman" updated="2018-09-28 12:58:03.0"/>
<Action id="71697" issue="31208" author="JIRAUSER21701" type="comment" created="2021-04-20 07:13:30.0" updateauthor="JIRAUSER21701" updated="2021-04-20 07:13:30.0"> <body><! CDATA Hi. Using submitTransaction() is taking more time by waiting for commit events.So,Is there is a way to improve the performance using fabric sdk?  ></body> </Action>
