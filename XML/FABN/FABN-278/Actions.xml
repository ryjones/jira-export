<Action id="24156" issue="17008" author="harrisob@us.ibm.com" type="comment" created="2017-05-22 20:05:35.0" updateauthor="harrisob@us.ibm.com" updated="2017-05-22 20:05:35.0"> <body><! CDATA failing call     {color:#444444}return Promise.resolve(client.createUser(\{{color} {color:#444444}username: options.msp_id,{color} {color:#444444}mspid: options.msp_id,{color} {color:#444444}cryptoContent: \{{color} {color:#444444}privateKeyPEM: common_misc.decodeb64(options.privateKeyPEM),{color} {color:#444444}signedCertPEM: common_misc.decodeb64(options.signedCertPEM){color} {color:#444444}}{color} {color:#444444}}));{color}  ></body> </Action>
<Action id="24207" issue="17008" author="cdaughtr" type="comment" created="2017-05-23 20:59:38.0" updateauthor="cdaughtr" updated="2017-05-23 20:59:38.0"> <body><! CDATA In the older commit, if not specified, the key store was automatically constructed based on config settings.  In the newer commit, if the cryptoSuite is set by the app on the Client (assuming this is the case), the app will also need to set the keystore on the cryptoSuite, since createUser persists the user by doing a setUserContext.  See https://jira.hyperledger.org/browse/FAB-3881 for code snippets.  ></body> </Action>
<Action id="24249" issue="17008" author="jimthematrix" type="comment" body=" ~cdaughtr  i think we could use this bug to enable &quot;state-store-less-ness&quot;, in case an application handles user object persistence separately. we should allow that. please evaluate what this would entail and if the sizing is tolerable, we should give it a go for v1.0" created="2017-05-24 16:13:19.0" updateauthor="jimthematrix" updated="2017-05-24 16:13:19.0"/>
<Action id="24264" issue="17008" author="cdaughtr" type="comment" body="https://gerrit.hyperledger.org/r/#/c/9771/" created="2017-05-24 20:48:39.0" updateauthor="cdaughtr" updated="2017-05-24 20:48:39.0"/>
