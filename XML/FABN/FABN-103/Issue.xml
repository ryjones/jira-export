<Issue id="20995" key="FABN-103" number="103" project="10604" reporter="martinc" assignee="rameshthoomu" creator="martinc" type="10002" summary="npm publish of fabric-sdk-rest modules during CI builds" priority="3" resolution="10000" status="6" created="2017-09-26 10:34:19.0" updated="2018-07-19 00:52:50.0" resolutiondate="2017-10-09 19:19:20.0" votes="0" watches="3" workflowId="33834"> <description><! CDATA The approach here is based upon what was done for fabric-sdk-node in -FAB-2802-  This task describes a technique that uses source code commits to automatically trigger release publishing:  what the CI job needs to do: - on every commit merge to the master branch, find the version from fabric-rest/package.json and loopback-connector-fabric/package.json - if the version number has "-snapshot" in the end, it's not a release, it should publish to the "unstable" stream like follows: -- use "npm dist-tags ls <pkg>" command to discover the current published version of the "unstable" stream, say "n.m.p-snapshot.s" -- check to see if the local version string match the online version --- if matching, for instance local version is "n.m.p-snapshot", it means we are still in the same release stream ---- update the version string in package.json locally to "n.m.p-snapshot.s+1" --- if not matching, for instance local version is "n.k.p-snapshot", it means we have entered a new release stream and this will be the first snapshot revision for the new stream ---- update the version string in package.json locally to "n.k.p-snapshot.1" --- npm publish --tag=unstable - if the version number does not have "-snapshot" suffix, it's a release. perform the release publishing actions, by running "npm publish" in both fabric-rest and loopback-connector-fabric folders. Note that this assumes that the version string for both packages have been updated in package.json in the source code - note that the release string may have other suffix like "1.0.0-alpha", which is a release version. On the other hand, "1.0.0-alpha-snapshot" is also a legitimate version and is not a release version  what a committer needs to do for a release: - create a CR that updates the version in both package.json files under fabric-rest and loopback-connector-fabric folders (not the one under the project root, that file has no bearings on the npm publish). ensure that the version of the two packages are identical. the version for the release should not have the "-snapshot" suffix and obeys the semver rules - create a 2nd CR that bumps the version and adds back the "-snapshot" suffix - create a tag corresponding to the commit level of the first CR (that has the change for the release version)  ></description> </Issue>
