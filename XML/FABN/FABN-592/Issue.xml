<Issue id="12675" key="FABN-592" number="592" project="10604" reporter="mastersingh24" assignee="angrbrd" creator="mastersingh24" type="10001" summary="Need better default TLS 1.2 cipher suites" priority="2" resolution="10000" status="6" created="2016-09-13 12:02:44.0" updated="2018-07-20 19:18:02.0" resolutiondate="2016-09-13 20:59:39.0" votes="0" watches="2" workflowId="34323"> <description><! CDATA The NodeSDK uses the grpc package which be default sets the accepted TLS 1.2 cipher list to  "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384"|https://github.com/grpc/grpc/blob/9c9d577260f0da60f47ec638b163f286d56c736f/src/core/lib/security/transport/security_connector.c#L77   The fabric is EC certificates by default (issued by member services) so without any changes connecting from the SDK to a peer via TLS fails.  Currently, the SDK provides the {{setECDSAModeForGRPC}} function in order to set the cipher list to EC ciphers (HIGH+ECDSA).  While this works, it puts the onus on the developer to know more than the average person does about TLS communication.  The recommendation is to include a default set of ciphers that will work for both RSA and EC certificates:  {{ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384}}    ></description> </Issue>
