<Issue id="17687" key="FABN-584" number="584" project="10604" reporter="davidkel" creator="davidkel" type="10001" summary="Implementations of KeyValueStore for use by CryptoKeyStore requires constructor to return a Promise" priority="2" resolution="10001" status="6" created="2017-06-09 11:58:55.0" updated="2019-05-14 06:17:55.0" resolutiondate="2019-05-14 06:17:55.0" votes="0" watches="2" workflowId="34315" security="10001"> <description><! CDATA In my code I have to code the following for my implementation of a KeyValueStore to use used for storing cryptokeys {code:java} (HLFWalletProxy.js) constructor(wallet) { super(); const method = 'constructor'; LOG.entry(method, wallet); this.wallet = wallet; LOG.exit(method); return Promise.resolve(this); } {code} I create a cyptokeystore as follows {code:java} let cryptostore = Client.newCryptoKeyStore(HLFWalletProxy, wallet); {code} Ideally we don't want to return anything from a constructor as this is not a good programming pattern.  I believe the cause is in the utils.js file {code:java}                 CKS(self._storeConfig.superClass, self._storeConfig.opts)                 .then((ks) => { {code} Also it would be beneficial to be able to have a single implementation of a KeyValueStore that could be used for both the state store and the cryptostore. Currently I have to implement this as follows {code:java} return new HLFWalletProxy(wallet) .then((store) => { let cryptostore = Client.newCryptoKeyStore(HLFWalletProxy, wallet); client.setStateStore(store); let cryptoSuite = Client.newCryptoSuite(); cryptoSuite.setCryptoKeyStore(cryptostore); client.setCryptoSuite(cryptoSuite); {code} I could I suppose extract the keyvaluestore from cryptostore as it looks like it is in this._store but that's internal and would be subject to change.            ></description> </Issue>
