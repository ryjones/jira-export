<Action id="65191" issue="42565" author="heatherp" type="comment" created="2019-10-30 15:51:07.0" updateauthor="heatherp" updated="2019-10-30 15:51:07.0"> <body><! CDATA Some notes about how the node-sdk tests stand at the moment, after discussing with Nick, the folder structure look somewhat like:  integration -> tape integration tests scenario -> cucumber javascript scenario ts-fixtures -> resources for typescript cucumbers ts-scenario -> typescript cucumbers we want to keep typescript -> needs removing  Notes:  - We want to use cucumber tags because 1) it makes it easier to debug by specifying just the tagged tests 2) could be run on a channel each, concurrently  Order of tasks: - Remove the ‘typescript’ folder (In progress, with Nick, now) - Refactor the javascript cucumber scenario (1396) - Remove the tape integration tests (1135 / 1398) - Improve our scenario testing (1137) - Implement ideal world, see below  Ideal world: - mocha functional test suite (e.g. see composer) alongside typescript cucumber scenario test suite (1139)  ></body> </Action>
<Action id="65814" issue="42565" author="heatherp" type="comment" body="This is no longer being actively worked on currently, so unassigning me from it. It&apos;s still valid though, as there&apos;s lots of test tidy up we&apos;d like to do given the time" created="2019-11-27 14:16:50.0" updateauthor="heatherp" updated="2019-11-27 14:16:50.0"/>
<Action id="65861" issue="42565" author="heatherp" type="comment" created="2019-11-29 10:35:19.0" updateauthor="heatherp" updated="2019-11-29 10:35:19.0"> <body><! CDATA Status of where we got to, as of 1st November:   *Where We Are* I think we are in a much better place than this time last month: * We have a typescript based scenario test suite to ensure that all out typedefs, and the mapped code, are correct. * We no longer have *any* typescript tests being run in the e2e test suite * We no longer have *any* tape based "unit" tests * We have a drastically reduced js-scenario test suite (sorry, I couldn't get through it all) * We have a drastically reduced e2e test suite * We have a faster and more reliable build (less reverifies) * We have an entry point for the Fabric Merge build to pick up on, and only run the ts-scenario suite   *Pending Tasks* Ok, cool ... so we are in a good place, but we could be in a better place. I know, I know ... never satisfied. The following are what I would suggest is to be completed as high priority test tasks: * Finish porting of base_api scenario tests into ts-scenario .. then delete the entire js-scenario suite. I'd like to witness that one, I'll probably drink a beer as the merge occurs.  * Add a HSM feature file to the ts-scenario suite, which is based on a port of the hsm test in the current e2e-network tests ... then delete the entire e2e having ensured we've covered existing scenarios. This will actually remove a large number of e2e tape tests for us and speed up the build nicely. * Remove replicated e2e tests ... this is really hard as they are all interdependent .. maybe there is a sneaky way to do this? Perhaps the easiest way to achieve this is port any valid tests into the ts-scenario suite and then delete the e2e suite. Again. I'd love to witness this one ... and I think the removal of that can be celebrated by multiple beers, and a few shorts. * Reduce gulp clutter: the gulp tasks file is a monstrosity .. we should look into reducing the clutter in there, which should be helped through the removal of redundant test suites.  ></body> </Action>
