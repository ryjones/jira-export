<Issue id="32655" key="FABN-868" number="868" project="10604" reporter="shimos" assignee="shimos" creator="shimos" type="10004" summary="Type definition is missing for ChannelPeer and service discovery" priority="3" resolution="10000" status="6" created="2018-08-07 23:39:15.0" updated="2018-08-24 21:23:20.0" resolutiondate="2018-08-09 09:25:25.0" votes="0" watches="1" workflowId="43881"> <description><! CDATA The current type definition for fabric-client does not include some features and updates introduced in v1.2 such as ChannelPeer and Service discovery. For example, as channel.initialize() does not accept an object as the argument and getDiscoveryResult() is not defined in the Channel class, the Typescript below cannot be complied.  {code} import Client from 'fabric-client';  const client = Client.loadFromConfig('network.yaml'); // initialize user here (omitted) const channel = client.getChannel('mychannel'); channel.initialize({ discover:true, asLocalhost: true }) 	.then(() => { 		return channel.getDiscoveryResults(); 	}) 	.then((discoveryResults) => { 		console.log(JSON.stringify(discoveryResults, null, 4)); 	}); {code}  Error: {noformat} $ npx tsc test.ts:6:22 - error TS2345: Argument of type '{ discover: boolean; asLocalhost: boolean; }' is not assignable to parameter of type 'Buffer'. Object literal may only specify known properties, and 'discover' does not exist in type 'Buffer'.  6 channel.initialize({ discover:true, asLocalhost: true }) ~~~~~~~~~~~~~  test.ts:8:18 - error TS2339: Property 'getDiscoveryResults' does not exist on type 'Channel'.  8       return channel.getDiscoveryResults(); ~~~~~~~~~~~~~~~~~~~  test.ts:10:9 - error TS7006: Parameter 'discoveryResults' implicitly has an 'any' type.  10  .then((discoveryResults) => { ~~~~~~~~~~~~~~~~ {noformat}   ></description> </Issue>
