<Action id="51529" issue="34270" author="sstone1" type="comment" created="2018-10-02 15:07:57.0" updateauthor="sstone1" updated="2018-10-03 07:48:47.0"> <body><! CDATA Proposal is to add a new top level class called Package, with the following interface: {code:javascript} class Package {     static fromBuffer(buffer: Buffer): Promise<Package>;     static fromDirectory(options: { name: string, version: string, path: string, type: ChaincodeType, metadataPath?: string }): Promise<Package>;     getName(): string;     getVersion(): string;     getType(): ChaincodeType;     getFileNames(): string  ;     toBuffer(): Promise<Buffer>;   } {code} The class can used as follows: {code:javascript} const { Package } = require('fabric-client');  const packageBuffer = fs.readFileSync('my-chaincode.cds'); const package = await Package.fromBuffer(packageBuffer); console.log(package.getName()); // outputs "my-chaincode" console.log(package.getVersion()); // outputs "1.2.3"  const package = await Package.fromDirectory({ 	name: 'my-contract', 	version: '1.2.3', 	path: '/path/to/my-contract', 	type: 'node' }); console.log(package.getName()); // outputs "my-chaincode" console.log(package.getVersion()); // outputs "1.2.3" const packageBuffer = await Package.toBuffer();  const package = await Package.fromDirectory({ 	name: 'my-contract', 	version: '1.2.3', 	path: '/path/to/my-contract', 	type: 'node', 	metadataPath: '/path/to/META-INF' }); console.log(package.getName()); // outputs "my-chaincode" console.log(package.getVersion()); // outputs "1.2.3" const packageBuffer = await Package.toBuffer(); {code}  ></body> </Action>
<Action id="51616" issue="34270" author="sstone1" type="comment" body="https://gerrit.hyperledger.org/r/c/26744/" created="2018-10-03 10:26:05.0" updateauthor="sstone1" updated="2018-10-03 10:26:05.0"/>
