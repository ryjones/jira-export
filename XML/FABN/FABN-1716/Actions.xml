<Action id="71882" issue="46964" author="bestbeforetoday" type="comment" body="Could you give the *{{node --version}}* and *{{npm ls}}* output for your client application where the problem occurs." created="2021-06-22 08:00:05.0" updateauthor="bestbeforetoday" updated="2021-06-22 08:00:05.0"/>
<Action id="71883" issue="46964" author="davidkel" type="comment" created="2021-06-22 09:03:01.0" updateauthor="davidkel" updated="2021-06-22 09:03:01.0"> <body><! CDATA node version: v12.22.1 npm ls  {noformat} 227@1.0.0 C:\temp\227 +-- fabric-network@2.2.7 | +-- fabric-common@2.2.7 | | +-- callsite@1.0.0 | | +-- elliptic@6.5.4 | | | +-- bn.js@4.12.0 | | | +-- brorand@1.1.0 | | | +-- hash.js@1.1.7 | | | | +-- inherits@2.0.4 deduped | | | | `-- minimalistic-assert@1.0.1 deduped | | | +-- hmac-drbg@1.0.1 | | | | +-- hash.js@1.1.7 deduped | | | | +-- minimalistic-assert@1.0.1 deduped | | | | `-- minimalistic-crypto-utils@1.0.1 deduped | | | +-- inherits@2.0.4 | | | +-- minimalistic-assert@1.0.1 | | | `-- minimalistic-crypto-utils@1.0.1 | | +-- fabric-protos@2.2.7 deduped | | +-- js-sha3@0.8.0 | | +-- jsrsasign@8.0.24 | | +-- long@4.0.0 deduped | | +-- nconf@0.11.3 | | | +-- async@1.5.2 | | | +-- ini@2.0.0 | | | +-- secure-keys@1.0.0 | | | `-- yargs@16.2.0 | | |   +-- cliui@7.0.4 | | |   | +-- string-width@4.2.2 deduped | | |   | +-- strip-ansi@6.0.0 | | |   | | `-- ansi-regex@5.0.0 | | |   | `-- wrap-ansi@7.0.0 | | |   |   +-- ansi-styles@4.3.0 | | |   |   | `-- color-convert@2.0.1 | | |   |   |   `-- color-name@1.1.4 | | |   |   +-- string-width@4.2.2 deduped | | |   |   `-- strip-ansi@6.0.0 deduped | | |   +-- escalade@3.1.1 | | |   +-- get-caller-file@2.0.5 | | |   +-- require-directory@2.1.1 | | |   +-- string-width@4.2.2 | | |   | +-- emoji-regex@8.0.0 | | |   | +-- is-fullwidth-code-point@3.0.0 | | |   | `-- strip-ansi@6.0.0 deduped | | |   +-- y18n@5.0.8 | | |   `-- yargs-parser@20.2.9 | | +-- UNMET OPTIONAL DEPENDENCY pkcs11js@1.2.5 | | | `-- UNMET OPTIONAL DEPENDENCY nan@2.14.2 | | +-- promise-settle@0.3.0 | | +-- sjcl@1.0.8 | | +-- winston@2.4.5 | | | +-- async@1.0.0 | | | +-- colors@1.0.3 | | | +-- cycle@1.0.3 | | | +-- eyes@0.1.8 | | | +-- isstream@0.1.2 | | | `-- stack-trace@0.0.10 | | `-- yn@4.0.0 | +-- fabric-protos@2.2.7 | | +-- @grpc/grpc-js@1.3.2 | | | `-- @types/node@15.12.4 | | +-- @grpc/proto-loader@0.6.2 | | | +-- @types/long@4.0.1 | | | +-- lodash.camelcase@4.3.0 | | | +-- long@4.0.0 deduped | | | +-- protobufjs@6.11.2 deduped | | | `-- yargs@16.2.0 deduped | | `-- protobufjs@6.11.2 | |   +-- @protobufjs/aspromise@1.1.2 | |   +-- @protobufjs/base64@1.1.2 | |   +-- @protobufjs/codegen@2.0.4 | |   +-- @protobufjs/eventemitter@1.1.0 | |   +-- @protobufjs/fetch@1.1.0 | |   | +-- @protobufjs/aspromise@1.1.2 deduped | |   | `-- @protobufjs/inquire@1.1.0 deduped | |   +-- @protobufjs/float@1.0.2 | |   +-- @protobufjs/inquire@1.1.0 | |   +-- @protobufjs/path@1.1.2 | |   +-- @protobufjs/pool@1.1.0 | |   +-- @protobufjs/utf8@1.1.0 | |   +-- @types/long@4.0.1 deduped | |   +-- @types/node@15.12.4 deduped | |   `-- long@4.0.0 deduped | +-- long@4.0.0 | `-- nano@9.0.3 |   +-- @types/tough-cookie@4.0.0 |   +-- axios@0.21.1 |   | `-- follow-redirects@1.14.1 |   +-- axios-cookiejar-support@1.0.1 |   | +-- is-redirect@1.0.0 |   | `-- pify@5.0.0 |   +-- qs@6.10.1 |   | `-- side-channel@1.0.4 |   |   +-- call-bind@1.0.2 |   |   | +-- function-bind@1.1.1 |   |   | `-- get-intrinsic@1.1.1 deduped |   |   +-- get-intrinsic@1.1.1 |   |   | +-- function-bind@1.1.1 deduped |   |   | +-- has@1.0.3 |   |   | | `-- function-bind@1.1.1 deduped |   |   | `-- has-symbols@1.0.2 |   |   `-- object-inspect@1.10.3 |   `-- tough-cookie@4.0.0 |     +-- psl@1.8.0 |     +-- punycode@2.1.1 |     `-- universalify@0.1.2 `-- js-yaml@4.1.0 `-- argparse@2.0.1 {noformat}   ></body> </Action>
<Action id="71885" issue="46964" author="bestbeforetoday" type="comment" body="I can reproduce using Node v12.22.1 and v14.17.1. I&apos;ve identified a path where a connection timeout to an orderer (in Committer.js) is not cleared correctly after connection, but fixing this doesn&apos;t resolve the problem. I am seeing two grpc-js subchannels left in the interval event queue at the end my client application run so best guess is that changes in recent grpc-js versions have caused this behaviour. I&apos;m not yet sure whether this is due to something not being closed correctly by the Node SDK code that didn&apos;t matter previously, or whether it&apos;s a new feature/bug in grpc-js or protobufjs used to create the gRPC service stubs." created="2021-06-22 17:26:04.0" updateauthor="bestbeforetoday" updated="2021-06-22 17:33:09.0"/>
<Action id="71889" issue="46964" author="bestbeforetoday" type="comment" created="2021-06-23 13:20:19.0" updateauthor="bestbeforetoday" updated="2021-06-23 13:20:19.0"> <body><! CDATA Moving back to @grpc/grpc-js v1.1.8 appears to resolve the issue. Bug report raised with grpc-js here:  https://github.com/grpc/grpc-node/issues/1825  ></body> </Action>
