<Issue id="45962" key="FABN-1624" number="1624" project="10604" reporter="thienbuinguyen" assignee="harrisob@us.ibm.com" creator="thienbuinguyen" type="10004" summary="Gateways unusable if a peer connect fails at start-up" priority="2" resolution="10000" status="6" created="2020-09-01 04:18:05.0" updated="2020-09-16 14:51:17.0" resolutiondate="2020-09-16 14:51:17.0" votes="0" watches="3" workflowId="59873" archived="N"> <description><! CDATA When connecting a gateway object, if some peer is unavailable then the gateway will be unusable despite there being other peers available (if any).     For example, suppose we have discovery Peers A and B. If Peer A is offline, connecting the gateway object will throw an error for Peer A (see the _gateway.connect()_ call). Because of this, the entire gateway cannot be used to query/invoke Peer B or any non-discovery peers despite them being online.   A workaround is to have multiple connection profiles with a subset of the peers to mitigate when some of them could be offline, but this seems overly convoluted. I propose the gateway connect should always succeed if at least 1 peer in the connection profile is available, and perhaps return a list of peer names that failed to connect instead.     *Expected behaviour:*  Gateways require no peers (or perhaps 1 of _n_ to work with the current design) to be available on start-up connection.     *Actual behaviour:*  Gateways throw an error if not all connection profile peers are reachable on start-up resulting in an unusable gateway object and no possible queries/invokes from that gateway.        ></description> </Issue>
