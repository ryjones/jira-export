<Action id="70121" issue="45962" author="btl5037" type="comment" body="What was the actual error you saw, presumably since you are using Service Discovery so you couldn&apos;t meet the requirements of the endorsement policy and thus it failed. In your example what is your endorsement policy, if you need two peers, and you only provided one org&apos;s connection information to Service Discovery, then it couldn&apos;t satisfy the policy with the remaining one peer." created="2020-09-01 17:58:02.0" updateauthor="btl5037" updated="2020-09-01 17:58:02.0"/>
<Action id="70129" issue="45962" author="thienbuinguyen" type="comment" created="2020-09-02 07:51:26.0" updateauthor="thienbuinguyen" updated="2020-09-02 07:51:26.0"> <body><! CDATA You're correct I'm using service discovery. My endorsement policy is 'OR("Org1MSP", "Org2MSP")' (using a slight modification of the byfn sample v2.2). To clarify, I can query/invoke directly via CLI on the remaining peer (peer0.org1.example.com when taking peer1.org1.example.com offline).  Example logs when attempting to connect the gateway with an offline peer:  ``` 2020-09-02T07:11:38.398Z - error:  ServiceEndpoint : Error: Failed to connect before the deadline on Discoverer- name: peer1.org1.example.com, url:grpcs://localhost:8051, connected:false, connectAttempted:true 2020-09-02T07:11:38.398Z - error:  ServiceEndpoint : waitForReady - Failed to connect to remote gRPC server peer1.org1.example.com url:grpcs://localhost:8051 timeout:3000 ```  The resultant gateway can't be used to retrieve a network/contract because it throws errors, ignoring the successful connection with peer0.org1.example.com. Calls to gateway.getNetwork() also throws similar errors, meaning we can't call network.getContract() to query/invoke.  ></body> </Action>
<Action id="70165" issue="45962" author="btl5037" type="comment" body="We&apos;ve been looking into this, and it appears there is no failover logic for choosing the peer it is going to use when using Service Discovery. An enhancement is needed on the SDK to have the SDK automatically failover if the peer is unavailable to one of the other peers mentioned in the connection profile." created="2020-09-09 01:37:29.0" updateauthor="btl5037" updated="2020-09-09 01:37:29.0"/>
<Action id="70317" issue="45962" author="lesleyannj" type="comment" body="Master and 2.2 branches" created="2020-09-14 13:07:14.0" updateauthor="lesleyannj" updated="2020-09-14 13:07:14.0"/>
