<Issue id="34142" key="FABN-941" number="941" project="10604" reporter="davidkel" assignee="harrisob@us.ibm.com" creator="davidkel" type="10004" summary="Comms with Peers, the responses should include the Peer URL" priority="3" resolution="10000" status="6" created="2018-09-27 10:03:38.0" updated="2018-12-04 16:41:32.0" resolutiondate="2018-12-04 16:41:32.0" votes="0" watches="3" workflowId="45465"> <description><! CDATA As an example, but not limited to. In the case of response proposals, both valid responses and invalid responses are returned as an array collected from the peer in this code {code} if (proposalResponse) { 						logger.debug('%s - Received proposal response from peer "%s": status - %s', method, self._url, (proposalResponse.response &&  proposalResponse.response.status) ? proposalResponse.response.status : 'undefined'); 						// 400 is the error threshold level, anything below that the endorser will endorse it. 						if (proposalResponse.response && proposalResponse.response.status < 400) { 							resolve(proposalResponse); 						} else if (proposalResponse.response && proposalResponse.response.message) { 							const error = Object.assign(new Error(proposalResponse.response.message), proposalResponse.response); 							error.isProposalResponse = true; 							reject(error); 						} else { 							logger.error('GRPC client failed to get a proper response from the peer "%s".', self._url); 							reject(new Error(util.format('GRPC client failed to get a proper response from the peer "%s".', self._url))); 						} 					} else { 						logger.error('GRPC client got a null or undefined response from the peer "%s".', self._url); 						reject(new Error(util.format('GRPC client got a null or undefined response from the peer "%s".', self._url))); {code}  We need to ensure the following can be done 1. determine a valid response and the peer that response came from 2. determine an invalid response and know the following a) which peer that it was from b) was the response from the peer or the sdk (isProposalResponse)  The proposal would be to add the peer to the proposalResponse, and to ensure error messages from the node-sdk are not just blanket Error objects with a single string but also have useful properties applications can determine  It's debatable whether this is a bug or enhancement but at the moment all an application can do is say if got some invalid responses but it doesn't know where from.    ></description> </Issue>
