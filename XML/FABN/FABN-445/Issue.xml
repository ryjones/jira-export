<Issue id="31358" key="FABN-445" number="445" project="10604" reporter="ratnakar" assignee="harrisob@us.ibm.com" creator="ratnakar" type="10004" summary="when mutual TLS is enabled, balance-transfer sample fails at eventhub" priority="2" resolution="10000" status="6" created="2018-06-25 19:36:58.0" updated="2018-07-19 00:54:07.0" resolutiondate="2018-06-29 18:00:37.0" votes="0" watches="2" workflowId="34176"> <description><! CDATA As per the node-sdk tutorial  https://fabric-sdk-node.github.io/tutorial-mutual-tls.html , enabled Mutual TLS on fabric-samples/balance-transfer sample. though transactions are successful, eventhub related errors are seen in e2e hence test is not successful.   For reference I uploaded the change to this github  repo|https://github.com/asararatnakar/balance-transfer_1_2   ^logs.txt  are enclosed . * It is observed that Instantiation fails at evethub. find the following error gist {code:java}  2018-06-25 15:30:59.596   ERROR  invoke-chaincode - { Error: 14 UNAVAILABLE: Connect Failed at createStatusError (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:64:15) at ClientDuplexStream._emitStatusIfDone (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:270:19) at ClientDuplexStream._readsDone (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:236:8) at readCallback (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:296:12) code: 14, metadata: Metadata { _internal_repr: {} }, details: 'Connect Failed' } debug:  ChannelEventHub.js : _closeAllCallbacks -localhost:8051 - chaincodeRegistrants 0 debug:  ChannelEventHub.js : _closeAllCallbacks -localhost:8051 - end debug:  ChannelEventHub.js : _shutdown - shutdown existing stream debug:  ChannelEventHub.js : _disconnect - end -- called due to:: 14 UNAVAILABLE: Connect Failed, peer:localhost:8051 debug:  ChannelEventHub.js : on status - status received: {"code":14,"details":"Connect Failed","metadata":{"_internal_repr":{}}}  peer:localhost:8051  2018-06-25 15:30:59.597   ERROR  invoke-chaincode - Error: 14 UNAVAILABLE: Connect Failed at createStatusError (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:64:15) at ClientDuplexStream._emitStatusIfDone (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:270:19) at ClientDuplexStream._readsDone (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:236:8) at readCallback (/Users/ratnakar/workspace/myrepo/balance-transfer/node_modules/grpc/src/client.js:296:12)  2018-06-25 15:30:59.597   ERROR  invoke-chaincode - Failed to invoke chaincode. cause:Error: 14 UNAVAILABLE: Connect Failed (node:38416) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): Error: Failed to invoke chaincode. cause:Error: 14 UNAVAILABLE: Connect Failed  {code}  * from the logs it is observed that target peers are not set properly, when connection profile is used. While we set one target peer with API (grpcs://localhost:7051) however we see other peers in the log info {code:java} debug:  Channel.js : sendTransaction - start :: channel {"name":"mychannel","orderers": "Orderer:{url:grpcs://localhost:7050}" ,"peers": "Peer:{url:grpcs://localhost:7051}","Peer:{url:grpcs://localhost:7056}","Peer:{url:grpcs://localhost:8051}","Peer:{url:grpcs://localhost:8056}" } {code}  ></description> </Issue>
