<Issue id="39197" key="FABN-1206" number="1206" project="10604" reporter="davidkel" assignee="14gracel" creator="davidkel" type="10004" summary=" fabric-network  Unable to submit a transaction if I register for chaincode events with filtered set to false" priority="1" resolution="10000" status="6" created="2019-04-10 12:57:30.0" updated="2019-05-01 07:58:54.0" resolutiondate="2019-04-18 10:31:14.0" votes="0" watches="2" workflowId="52074"> <description><! CDATA I have a simple program of which a snippet is shown here  {code:java} // create the gateway const gateway = new Gateway();  	try { 		await gateway.connect(ccp, { wallet: inMemoryWallet, identity: userNameWalletLabel, discovery: {enabled: false} 		});  const network = await gateway.getNetwork(channel); const contract = network.getContract(contractName);  // invoke a transaction that emits an event const namespace = 'org.example.trading';  const trade = { commodityId: 'C1', newOwnerId: 'T2' }  // contrived way to wait until the event has been received. let eventReceived, eventError; let eventPromise = new Promise((resolve, reject) => { eventReceived = resolve; eventError = reject; }) //await contract.submitTransaction('tradeCommodity', JSON.stringify(trade));  // register a listener contract.addContractListener('some-useless-string', 'trade-network', (err, event, blkNum, txid, status) => { console.log('event received', status, event, blkNum, txid); }, {filtered: false} );  // send transaction try { await contract.submitTransaction('tradeCommodity', JSON.stringify(trade)); // wait forever await eventPromise;  console.log('------- TX ACTIONS END --------\n\n\n') } catch(err) { console.log(err); } finally {  }  	} catch(error) { 		console.log(error); 	} finally { gateway.disconnect(); 		//process.exit(0);  // needed because using HSM causes app to hang at the end. 	} {code}  If I create a gateway and connect and then register to listen for chaincode events turning off filtering (so I can actually get the event data) then when the submitTransaction is called I get the error   {noformat} (node:11393) UnhandledPromiseRejectionWarning: Error: Cannot use a fixed event hub without setting an event hub 11cae5a84469e63790e2a9b06f2286de99a9c12cc90272fa5e3b346def7733ff0.7021344370624867 at CommitEventListener._registerWithNewEventHub (/home/dave/code/bnaport/trade-network/native/client-new-js/node_modules/fabric-network/lib/impl/event/commiteventlistener.js:91:10) at CommitEventListener.register (/home/dave/code/bnaport/trade-network/native/client-new-js/node_modules/fabric-network/lib/impl/event/commiteventlistener.js:38:22) at <anonymous> (node:11393) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3) (node:11393)  DEP0018  DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. {noformat}  If I remove the option to turn filtering off, then the problem doesn't occur If I submit a transaction before I set up the listener then the problem doesn't occur (but this would not be a common scenario, the common scenario would be to setup the listener first before sending a transaction)    ></description> </Issue>
