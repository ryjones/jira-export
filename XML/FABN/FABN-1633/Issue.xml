<Issue id="46007" key="FABN-1633" number="1633" project="10604" reporter="davidkel" assignee="harrisob@us.ibm.com" creator="davidkel" type="10004" summary="2020-09-09T08:24:14.259Z - error:  Query : evaluate - problem with query to peer peer0.org1.example.com:7051 error:TypeError: Cannot read property &apos;name&apos; of undefined" priority="3" resolution="10203" status="6" created="2020-09-09 09:18:18.0" updated="2020-09-09 18:24:26.0" resolutiondate="2020-09-09 18:24:26.0" votes="0" watches="1" workflowId="59918" archived="N"> <description><! CDATA Unexpected error message is seen when a query fails in node-sdk 2.2.2 (in this case querying a function that doesn't exist). You do get to see the original error message though but is subsequently followed by the error in the summary {code:java} 2020.09.09-09:24:14.258 error  caliper   connectors/v2/fabric-gateway  Failed to perform query transaction  queryCar  using arguments  0_3 , with error: Error: error in simulation: transaction returned with failure: Error: You've asked to invoke a function that does not exist: queryCar at RoundRobinQueryHandler.evaluate (/home/ubuntu/.nvm/versions/node/v10.22.0/lib/node_modules/fabric-network/lib/impl/query/roundrobinqueryhandler.js:41:27) at process._tickCallback (internal/process/next_tick.js:68:7) TypeError: Cannot read property 'name' of undefined at QueryImpl.evaluate (/home/ubuntu/.nvm/versions/node/v10.22.0/lib/node_modules/fabric-network/lib/impl/query/query.js:45:56) at process._tickCallback (internal/process/next_tick.js:68:7) 2020-09-09T08:24:14.259Z - error:  Query : evaluate - problem with query to peer peer0.org1.example.com:7051 error:TypeError: Cannot read property 'name' of undefined 2020-09-09T08:24:14.259Z - error:  RoundRobinQueryHandler : evaluate: message=Query failed. Errors:  "TypeError: Cannot read property 'name' of undefined" , stack=FabricError: Query failed. Errors:  "TypeError: Cannot read property 'name' of undefined" {code} It looks like the problem might be with this section of code in query.ts {code:java} for (const resultError of responses.errors) { results resultError.connection.name  = resultError; logger.debug('%s - problem with query to peer %s error:%s', method, resultError.connection.name, resultError); } {code} possibly because resultError doesn't contain a connection property ?        ></description> </Issue>
