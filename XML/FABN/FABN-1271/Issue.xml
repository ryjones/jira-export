<Issue id="40513" key="FABN-1271" number="1271" project="10604" reporter="sstone1" assignee="sstone1" creator="sstone1" type="10000" summary="As an MSP only client application, I can easily interact with a Fabric network" priority="3" resolution="10000" status="6" created="2019-06-11 07:57:02.0" updated="2021-02-25 17:12:12.0" resolutiondate="2020-12-03 15:31:53.0" votes="0" watches="4" workflowId="56085"> <description><! CDATA Fabric allows any valid organisation/MSP to be a member of a channel, as long as they are a member of the consortium managed by that ordering service. An organisation/MSP can also be a member of a channel without having any peers that have joined that channel, whether they are endorsing peers (that run the smart contracts) or just validating peers (that maintain a copy of the ledger).  The Fabric SDK does not support these organisations/MSPs very well. Applications must explicitly switch to another built in event handler strategy, NETWORK_SCOPE_ANYFORTX, as the default of MSPID_SCOPE_ANYFORTX does not work if you don't have any peers with your MSP ID. Applications must provide their own query strategy, as the default of MSPID_SCOPE_SINGLE does not work. And finally, applications must provide their own event hub selection strategy, as the default of MSPID_SCOPE_ROUND_ROBIN does not work.  We should introduce additional built in strategies that cover these cases for queries and event hub selection, and also consider where the default should be something like "prefer peers with my MSP ID, but use other peers if there are no peers with my MSP ID".  There's a related JIRA around querying and service discovery here: https://jira.hyperledger.org/browse/FABN-1122  That one covers the case of client application with an organisation/MSP that has a peer that is a member of a channel, but that peer is not an endorsing peer and does not have the smart contract that the client application is trying to interact with.   ></description> </Issue>
