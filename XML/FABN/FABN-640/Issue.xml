<Issue id="27790" key="FABN-640" number="640" project="10604" reporter="davidkel" creator="davidkel" type="10001" summary="Support HA Capabilties" priority="3" resolution="10001" status="6" created="2018-02-16 08:42:31.0" updated="2018-10-12 16:40:01.0" resolutiondate="2018-10-12 16:40:01.0" votes="0" watches="2" workflowId="34371"> <description><! CDATA The ability for the node-sdk to be resilient to unavailable nodes is something that would be common to all users of the sdk. For example 1. When listening for chaincode events, either listen on all eventSource peers and de-duplicate or ensure that before a submission to the orderer that connection to an eventSource exists for chaincode events  2. When querying ledgers or chaincode, you only need to send the query to a single peer (unless really want to do a peer response comparison), but if that peer is down, try another peer in the same organisation and if all the same org peers, fail start trying peers in other organisations.  3. The ability to define more than 1 CA in a connection profile for an organisation and then fallover to another if the first one responds with an error  4. https://jira.hyperledger.org/browse/FAB-5565 for the orderer  There are probably other scenarios to be considered, so would be good to get other ideas into this JIRA. I am not proposing that the node-sdk changes it's behaviour or current apis. I think a base capability in the node-sdk is vital but rather a new api that provides these more complex capabilities   ></description> </Issue>
