<Action id="38276" issue="26232" author="denyeart" type="comment" body="I believe there are existing SDK functions to check that proposal responses are the same, so that the &apos;bad&apos; response can be thrown out on client side before submitting the transaction.  I think this would be preferable to sending all proposal responses in the transaction, so as to not bloat the transactions/blocks.   ~harrisob@us.ibm.com  can you indicate SDK functions for this and whether any changes are planned?" created="2018-01-08 03:49:45.0" updateauthor="denyeart" updated="2018-01-08 03:49:45.0"/>
<Action id="38278" issue="26232" author="vigneswaran.r" type="comment" created="2018-01-08 07:54:08.0" updateauthor="vigneswaran.r" updated="2018-01-08 07:54:08.0"> <body><! CDATA Wouldn't it be better if the platform handles this and not relying too much on client side (SDK) for throwing away bad responses? Because, # Client side checking is easy to by-pass. # It is difficult for the client to decide which response to throw away, when two different sets of responses (RW sets) are available, without evaluating the endorsement policy. (As the policy can be more specific/complex like (A OR (B AND C)), I think, it's really difficult).  ></body> </Action>
<Action id="39082" issue="26232" author="harrisob@us.ibm.com" type="comment" created="2018-01-24 21:19:26.0" updateauthor="harrisob@us.ibm.com" updated="2018-01-24 21:20:37.0"> <body><! CDATA NodeSDK has a method on the 'Channel' object to check to be sure all endorsements are the same. The application may call this method to check endorsements before sending them to the orderer.      /**      * Utility method to examine a set of proposals to check they contain      * the same endorsement result write sets.      * This will validate that the endorsing peers all agree on the result      * of the chaincode execution.      *      * @param \{ProposalResponse  } The proposal responses from all endorsing peers      * @returns \{boolean} True when all proposals compare equally, false otherwise.       */     compareProposalResponseResults(proposal_responses) \{  ></body> </Action>
<Action id="40048" issue="26232" author="nharshita" type="comment" created="2018-02-13 07:31:23.0" updateauthor="nharshita" updated="2018-02-13 07:31:23.0"> <body><! CDATA I agree that client side verification would help, but JIRA item mainly goes with the spirit where client can disobey endorsement related stuff and fabric core code (VSCC) takes care of it based on the documentation at   http://hyperledger-fabric.readthedocs.io/en/latest/txflow.html   excerpts from the URL  """  The architecture is such that even if an application chooses not to inspect responses or otherwise forwards an unendorsed transaction, the endorsement policy will still be enforced by peers and upheld at the commit validation phase.  """  And as pointed by Vigneswaran R, there are issues in handling the situation at client side.  ></body> </Action>
