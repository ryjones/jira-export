<Action id="18720" issue="12512" author="angrbrd" type="comment" created="2016-08-30 20:21:50.0" updateauthor="angrbrd" updated="2016-08-30 20:21:50.0"> <body><! CDATA Hi  ~zmanian , I'm trying to understand the problem you're citing.  Currently, the Dockerfile command for the SDK chaincode deployment contains: "COPY . $GOPATH/src/build-chaincode/". This copies everything contained inside the original chaincode directory under /src/build-chaincode directory. This includes any packages that the original chaincode directory had. Maybe I am misunderstanding, but I believe this process should work. Do you have a concrete example? Have you seen this fail such that I can reproduce?  Thanks!  ></body> </Action>
<Action id="18722" issue="12512" author="zmanian" type="comment" created="2016-08-30 22:12:55.0" updateauthor="zmanian" updated="2016-08-30 22:12:55.0"> <body><! CDATA So lets you have an a chaincode application with the following structure  src/github.com/alice/app src/github.com/alice/app/app.go src/github.com/alice/app/foo/ src/github.com/alice/app/foo/foo.go src/github.com/alice/app/bar/ src/github.com/alice/app/bar/bar.go  Now if you deploy the chaincode path github.com/alice/app via the REST API, the code will be fetched from github into the normal paths before the chaincode is built.  If instead, you use the sdk the go binary will attempt to be built from /src/build-chaincode and the compillation will fail because the paths will have changed.  Basically the way to template the dockerfile in the SDK will pretty much only work for single file chaincode apps.  You can try this with https://github.com/skuchain/doc_proofs     ></body> </Action>
