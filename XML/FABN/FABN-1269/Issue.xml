<Issue id="40489" key="FABN-1269" number="1269" project="10604" reporter="nasht00" creator="nasht00" type="10004" summary="Checkpointing should wait for event to be processed" priority="1" resolution="10001" status="6" created="2019-06-10 08:57:54.0" updated="2020-05-21 14:32:51.0" resolutiondate="2020-05-21 14:32:51.0" votes="1" watches="3" workflowId="53435"> <description><! CDATA UPDATE:  See the below comment for a detailed analysis of the problem: https://jira.hyperledger.org/browse/FABN-1269?focusedCommentId=68492&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-68492   I am writing a block events listener as described here:   https://fabric-sdk-node.github.io/release-1.4/tutorial-listening-to-events.html   My listener looks something like:   {code:java} const listener = await network.addBlockListener( "my-block-listener3", async (error, block) => { if (error) { console.error(error); return; } console.log("Successfully received the block ", block.header.number); await this.doSomethingAsync(block); console.log("After processing block ", block.header.number); }, { filtered: false, replay: true, checkpointer: this.checkpointer } );{code}   I am also using the checkpointing feature:    https://fabric-sdk-node.github.io/release-1.4/tutorial-event-checkpointer.html   When doing an event replay (things go fast) I noticed that the event hub does not wait for my listener to finish processing the previous block. I can see in the logs all the block being received really fast, not processed yet.  This makes things difficult to make sure I am processing them in order and not creating conflicts.  Also, this brings up the question: How does the checkpointer know I finished processing the block? My assumption is that it does not know. Instead, just like in my code, it will increase the block number as soon as it it received, instead of waiting for it to be processed.  Maybe the fabric-network implementation should include a queue to solve both these issues?     FYI, some context about my use for block event listening.  I want to run complex queries and build reports. According to Fabric documentation the recommendation is to keep an external database in sync with the ledger, using BlockEvents. So my code is subscribing to block events, extracting one write set at a time and applying it to my local database. Order is obviously important...  ></description> </Issue>
