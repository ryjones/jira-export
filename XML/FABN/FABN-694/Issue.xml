<Issue id="12309" key="FABN-694" number="694" project="10604" reporter="bmos299" assignee="jimthematrix" creator="bmos299" type="10003" summary=" node-SDK  Eliminate the need to first populate the &quot;vendor&quot; folder from a clone of the entire Fabric in order to use the node.js SDK to deploy" priority="1" resolution="10000" status="6" created="2016-08-10 19:51:30.0" updated="2018-07-19 14:26:01.0" resolutiondate="2016-10-26 15:39:09.0" votes="0" watches="7" workflowId="34760"> <description><! CDATA When an application needs to deploy chaincode using the node.js SDK, a "vendor" folder must be created under the folder that contains the chaincode, and be populated with the entire Fabric source tree (which must be cloned from git or gerrit).   The main problem with this required manual step is that many users are not aware of this or forgot to perform this step and a puzzled by the deployment failure. In the past week or so quite a few users have been bitten by this due to down-leveled fabric code in the vendor folder (that doesn't match the level running in the target Peer) or corrupted files.  Suggested solution: - the peer should really be doing this packaging, so that the SDKs would only need to send the chaincode GO itself plus any external dependencies in the "vendor" folder. The peer (endorsers in the new architecture) would have a copy of the source for compile purposes, which gets built into the docker image for that chaincode deploy along with the chaincode GO files themselves    ></description> </Issue>
