<Action id="70450" issue="46161" author="harrisob@us.ibm.com" type="comment" created="2020-10-06 17:29:30.0" updateauthor="harrisob@us.ibm.com" updated="2020-10-06 17:29:30.0"> <body><! CDATA I am unable to reproduce this, I build an array of "evaluateTransaction" then do a Promise.all, test with 12 evals, still works, could I get a trace log of this failure. and how to make it fail.   {color:#0000ff}const{color}{color:#000000} evals =   ;{color} {color:#000000} evals.push(contractOrg1.evaluateTransaction({color}{color:#a31515}'ReadAsset'{color}{color:#000000}, assetKey));{color} {color:#000000} evals.push(contractOrg1.evaluateTransaction({color}{color:#a31515}'ReadAsset'{color}{color:#000000}, assetKey));{color} {color:#000000} evals.push(contractOrg1.evaluateTransaction({color}{color:#a31515}'ReadAsset'{color}{color:#000000}, assetKey));{color} {color:#0000ff}const{color}{color:#000000} results = {color}{color:#0000ff}await{color}{color:#000000} Promise.all(evals);{color}  ></body> </Action>
<Action id="70459" issue="46161" author="nkl199" type="comment" created="2020-10-07 13:24:58.0" updateauthor="nkl199" updated="2020-10-07 13:24:58.0"> <body><! CDATA The errors coming back were buried behind the waitforready call  It is possible that we were driving at a much higher rate, will look at an easy recreate and get back to you  ></body> </Action>
<Action id="70470" issue="46161" author="lesleyannj" type="comment" body="Delivered to master.  To be delivered to 2.2 aswell." created="2020-10-08 13:54:46.0" updateauthor="lesleyannj" updated="2020-10-08 13:54:46.0"/>
<Action id="70477" issue="46161" author="nkl199" type="comment" created="2020-10-09 12:55:43.0" updateauthor="nkl199" updated="2020-10-09 12:55:43.0"> <body><! CDATA Re-tested with the changes, still get errors, with the following debug trace:  ```  2020-10-09T12:42:10.887Z - debug:  ServiceEndpoint : checkConnection n4f2948-===:7051  - start - connected:true  2020-10-09T12:42:10.887Z - debug:  ServiceEndpoint : waitForReady - start Endorser-n4f2948-peerorg1.===:7051 - grpcs:/===:7051  2020-10-09T12:42:10.887Z - debug:  ServiceEndpoint : waitForReady - promise running n4f2948-peerorg1.===:7051 - grpcs://===:7051  2020-10-09T12:42:10.888Z - debug:  Endorser : sendProposal n4f2948-peerorg1===:7051  - Start ----n4f2948-peerorg1.===:7051 grpcs://n4f2948-peerorg1===:7051 timeout:30000  2020-10-09T12:42:10.888Z - debug:  Proposal : send fixed-asset  - about to send to all peers  2020-10-09T12:42:10.888Z - debug:  Proposal : send fixed-asset  - have results from peers  2020-10-09T12:42:10.888Z - debug:  Proposal : send fixed-asset  - Promise is rejected: Error: Broadcast Client n4f2948-peerorg1===:7051 grpcs://n4f2948-peerorg1===:7051 is not connected  TypeError: Cannot read property 'name' of undefined      at QueryImpl.evaluate (/home/nkl199/caliper/workspace/node_modules/fabric-network/lib/impl/query/query.js:45:56)      at process._tickCallback (internal/process/next_tick.js:68:7)  2020-10-09T12:42:10.888Z - error:  Query : evaluate - problem with query to peer n4f2948-===:7051 error:TypeError: Cannot read property 'name' of undefined  ```  So, following the change issues are observed: - badly reported error (resulting in undefined.name being called for peer.name) - connectivity loss to peer  ></body> </Action>
<Action id="70495" issue="46161" author="harrisob@us.ibm.com" type="comment" created="2020-10-12 15:13:43.0" updateauthor="harrisob@us.ibm.com" updated="2020-10-12 15:13:43.0"> <body><! CDATA The issue was located within the "ServiceEndpoint" base class when the connection was being checked Fix is being tested  ></body> </Action>
<Action id="70504" issue="46161" author="harrisob@us.ibm.com" type="comment" body="Testing is showing issues, more debug is required." created="2020-10-13 14:37:37.0" updateauthor="harrisob@us.ibm.com" updated="2020-10-13 14:37:37.0"/>
<Action id="70568" issue="46161" author="nkl199" type="comment" body="Issue still present, appears to have been moved to a different point, but still seems that a connection is being terminated mid-stream, resulting in an incomplete transmission of data." created="2020-10-27 10:15:48.0" updateauthor="nkl199" updated="2020-10-27 10:15:48.0"/>
<Action id="70569" issue="46161" author="bestbeforetoday" type="comment" created="2020-10-27 10:30:22.0" updateauthor="bestbeforetoday" updated="2020-10-27 10:31:13.0"> <body><! CDATA The current error is not an SDK failure. Instead it is the SDK throwing an error to indicate an error response from the chaincode. {noformat} Failed to perform query transaction  getAsset  using arguments  client4_4000_448 ,  with error: Error: unexpected end of JSON input at SingleQueryHandler.evaluate (/home/<user>/caliper/workspace/node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:41:27){noformat} So it looks like somewhere in the chaincode transaction function invocation an error with the message "*unexpected end of JSON input*" was generated, and this has been returned by the chaincode as an error response message. You would need to look at the server-side logs to get more detail on where the error occurred. Only the message text is returned to the client.  ></body> </Action>
