<Action id="41653" issue="28179" author="frankc01" type="comment" created="2018-03-14 21:27:09.0" updateauthor="frankc01" updated="2018-03-14 21:28:33.0"> <body><! CDATA Here is the address that we attempted to delete (which is in both the inputs and outputs of the transaction headers and I read it in before deleting):   {{e55420c026596ee643a244073b8a8f9b3bb8b6058c2f5e775a885f22eb748351959cdf}}     Here is another run stack trace:  {{sawtooth-validator-local |  2018-03-14 21:18:58.133 CRITICAL publisher  on_check_publish_block exception.}} {{sawtooth-validator-local |  2018-03-14 21:18:58.134 ERROR publisher  'e55420'}} {{sawtooth-validator-local | Traceback (most recent call last):}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/journal/publisher.py", line 778, in on_check_publish_block}} {{sawtooth-validator-local | pending_batches)}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/journal/publisher.py", line 331, in finalize_block}} {{sawtooth-validator-local | self._scheduler.complete(block=True)}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/execution/scheduler_serial.py", line 390, in complete}} {{sawtooth-validator-local | self._calculate_state_root_if_not_already_done()}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/execution/scheduler_serial.py", line 363, in _calculate_state_root_if_not_already_done}} {{sawtooth-validator-local | state_hash = self._compute_merkle_root(required_state_hash)}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/execution/scheduler_serial.py", line 345, in _compute_merkle_root}} {{sawtooth-validator-local | persist=self._always_persist, clean_up=publishing_or_genesis)}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/execution/context_manager.py", line 412, in _squash}} {{sawtooth-validator-local | state_hash = tree.update(updates, deletes, virtual=virtual)}} {{sawtooth-validator-local | File "/project/sawtooth-core/validator/sawtooth_validator/state/merkle.py", line 254, in update}} {{sawtooth-validator-local | path_map parent_address  'c'  path_branch  = key_hash}} {{sawtooth-validator-local | KeyError: 'e55420'}}  ></body> </Action>
<Action id="41800" issue="28179" author="pschwarz" type="comment" body="Could you attach a simple reproducer to this?" created="2018-03-19 18:11:59.0" updateauthor="pschwarz" updated="2018-03-19 18:11:59.0"/>
<Action id="41855" issue="28179" author="frankc01" type="comment" created="2018-03-20 22:50:48.0" updateauthor="frankc01" updated="2018-03-20 22:50:48.0"> <body><! CDATA Peter  We can use the github repo of our code or were you thinking I hack together a TP to reproduce for you?  ></body> </Action>
<Action id="41933" issue="28179" author="pschwarz" type="comment" body="I would like something that I can run where I can debug the validator while its running.  A simple TP would be great." created="2018-03-22 16:58:08.0" updateauthor="pschwarz" updated="2018-03-22 16:58:08.0"/>
<Action id="41934" issue="28179" author="frankc01" type="comment" body="The easiest to do would be to clone our repo, quick build and run... if that is acceptable to you I will setup a wiki page to do that and recreate, let me know" created="2018-03-22 17:41:57.0" updateauthor="frankc01" updated="2018-03-22 17:41:57.0"/>
<Action id="42052" issue="28179" author="frankc01" type="comment" created="2018-03-23 10:18:40.0" updateauthor="frankc01" updated="2018-03-23 10:20:30.0"> <body><! CDATA Peter  Here are the recreation steps:  Assumes local sawtooth-core repo cloned and built (at least for python)  To reproduce issue:  1. Clone hashblock-exchange branch specific to this issue  _git clone -b STL-1105  https://github.com/hashblock/hashblock-exchange.git|https://github.com/hashblock/hashblock-exchange.git_ _  2. From hashblock-exchange root  _bin/build_all_ _docker-compose -f docker/compose/hashblock-local.yaml up_  3. from another window  _docker exec -it hashblock-shell bash_ _txq ask -x 5.bags\{peanuts}_ _txq list # This will list the new 'state' address and you can verify via rest-api_  4. With the address for the first trans shown in the list command, complete the killer step. In the last part of the command keep the single quotes as shown:  _txq tell_ \ -a <address from list> \ _-x '$10\{usd}' @ '$2\{usd}' for 1.bag\{peanuts}_  5. The log should be showing the loop/exception  ></body> </Action>
<Action id="44403" issue="28179" author="rranjan3" type="comment" created="2018-05-15 04:35:56.0" updateauthor="rranjan3" updated="2018-05-15 04:40:26.0"> <body><! CDATA This was a case of update in the states where set and delete operations were done at one go. Set items were being handled before the deletion which was causing some  expected data to be deleted. This threw an error which kept the batch from being cleaned up. This further caused the scheduler to pick up the same batch again and again after the schedule interval(infinte loop). Proper state is ensured during rehashing bottom-up now.  Has been fixed in master as well as backported to 1-0-staging-01( PR-1614|https://github.com/hyperledger/sawtooth-core/pull/1614 )  ~pschwarz .  ></body> </Action>
