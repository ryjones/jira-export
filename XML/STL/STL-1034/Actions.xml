<Action id="39445" issue="27275" author="jaredcorduan" type="comment" created="2018-01-31 18:57:56.0" updateauthor="jaredcorduan" updated="2018-01-31 18:57:56.0"> <body><! CDATA We are trying to read the block info from inside a transaction processor, not from the rest api. The rest api always looks good, there is always block info there. The trouble is attempting to write transaction processors which depend on block info.  I wrote a transaction processor that only does the following: 1) attempt to read block info config, 2) get the latest block number, 3) attempt to read the block info for the latest block, and 4) log what happens.  If you send off <10 of these transactions to the rest api, all is lovely. but once you start sending ~15 transactions in rapid fire (not batched together), you'll see the following behavior for one of the transactions:   The first time the transaction processor attempts to use `apply`, block info config is there and has a latest block, but there is no block info data for that latest block at the associated address. (In fact, there is no block info for any block, even block zero.) The second time the transaction processor attempts to process the transaction (ie when it is doing the `apply` for consensus), the block info is there.  Every single time block_info is missing for `latest_block`, it's in the situation where the transaction processor sees the latest block as n, but the transaction actually ends up going into block n+1.  ></body> </Action>
<Action id="39462" issue="27275" author="jaredcorduan" type="comment" body="I cannot reproduce this issue when using PoET simulator." created="2018-01-31 21:21:36.0" updateauthor="jaredcorduan" updated="2018-01-31 21:21:36.0"/>
<Action id="39468" issue="27275" author="pschwarz" type="comment" created="2018-01-31 22:32:59.0" updateauthor="pschwarz" updated="2018-01-31 22:32:59.0"> <body><! CDATA This looks like it's an issue under dev mode, where the consensus module is trying to publish blocks as fast as possible.  So it will, minimally, include only the injected batch (i.e. block info) and at least one batch submitted to the validator.  Once consensus is committed, all other batches will be unscheduled, the block will be commit, and the unscheduled batches will be put into the next candidate block's schedule.   This is also true for PoET, but the publish times are longer, so there's a higher likelihood that batches will be included in the next block.  ></body> </Action>
<Action id="39871" issue="27275" author="dan.middleton@intel.com" type="comment" body=" ~pschwarz  do you have the resolution for this - maybe a PR #? " created="2018-02-08 18:15:32.0" updateauthor="dan.middleton@intel.com" updated="2018-02-08 18:15:32.0"/>
