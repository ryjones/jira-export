<Action id="68014" issue="26356" author="JIRAUSER19826" type="comment" created="2020-02-20 03:48:02.0" updateauthor="JIRAUSER19826" updated="2020-02-20 03:48:02.0"> <body><! CDATA We have run into this issue. This issue has been identified and pending since January, 2018. Our product is aimed at clients who have a a less than consistent connection across their enterprise, yet have the need for TPS in excess of 40. The result for high speed transaction systems who lose connectivity to a node for various reasons including network connections, issues with a VM, or physical machines issues etc. the node upon reconnection will attempt to load all missed transactions in order to catch up to the overall chain of validators. This flood of transactions is not limited by memory on the catch up validator, and will load all missing transactions until loaded or the machine runs out of memory.  If the number of transactions is too much for installed memory, you end up with an out of memory condition, as the number of transactions continue to go until available memory is gone.  With auto restart the validator node with continue to restart and try to load the transactions again and again.  Sawtooth needs to be able to have high speed systems that can bring a validator down and to come back gracefully in order to have the same ordered transactions as other nodes.      The fix should be a CLI setting that the Sawtooth operator can set based on the total memory available for the validator node that needs to catch up to the transaction level off the chain.  This is a config that should be set when the validator is installed, based on the properties of the machine or VM that the validator node is working with.  ></body> </Action>
<Action id="68044" issue="26356" author="JIRAUSER19826" type="comment" body="For another reason that this is a high importance add on is in the adding nodes to an existing scenario.  We added a node to a system with 4.5 million entries in the blockchain.  The system 1.2 running PBFT, tried to add all 4.5 million transactions at once. The node crashed and auto-restarted and crashed again.  Nodes will be added in running systems.  These new nodes need to be able to add the existing transactions in an orderly way." created="2020-02-21 16:46:58.0" updateauthor="JIRAUSER19826" updated="2020-02-21 16:46:58.0"/>
