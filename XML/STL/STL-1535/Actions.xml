<Action id="60317" issue="39929" author="atlowell" type="comment" body="UPDATE: This issue seems to be caused by STL-1573" created="2019-05-23 17:30:38.0" updateauthor="atlowell" updated="2019-05-23 17:30:38.0"/>
<Action id="60736" issue="39929" author="atlowell" type="comment" body="UPDATE: Can also be caused by failing to specify a validator key as in STL-1610" created="2019-06-06 16:06:14.0" updateauthor="atlowell" updated="2019-06-06 16:06:14.0"/>
<Action id="61026" issue="39929" author="atlowell" type="comment" body="UPDATE: I continue to have this bug at random intervals.  Even when the two bugs I have identified that can cause this are addressed, the consensus engine can still fail the consensus check for the genesis block." created="2019-06-14 19:11:48.0" updateauthor="atlowell" updated="2019-06-14 19:11:48.0"/>
<Action id="64793" issue="39929" author="atlowell" type="comment" created="2019-10-18 16:15:35.0" updateauthor="atlowell" updated="2019-10-18 16:42:18.0"> <body><! CDATA Update: I was experiencing this issue when running a docker container from the sawtooth-default.yaml file from 1.1.5.  Editing the file from "image: hyperledger/sawtooth-devmode-engine-rust:1.1" to image: "hyperledger/sawtooth-devmode-engine-rust:chime" made the bug go away.  The devmode docker container using chime showed version 1.2.2.  From my understanding, the genesis block's validation is the responsibility of the validator, and it seems like it is being validated.  However, the devmode consensus engine in 1.1.5 is failing validation on the genesis block, which is causing the validator to reject the next block published due to an invalid predecessor.  This issue seems to be addressed in PR #11 on the sawtooth devmode repo, HOWEVER, that PR wasn't added until version 1.2.3.  It hasn't been backported to 1.2.2 either, since the logging changes in that PR do not reflect on the 1.2.2 version that is working in testing.  From my inspection via diff tools, the only differences in devmode engine source files between 1.1.5 and 1.2.2 are newline formatting.  As a result, it seems that the most likely cause of the difference between behavior in 1.1.5 and 1.2.2 has to do with the environment and setup files or the libraries used.   For example, the rust sdk versions used are different, and there are several commits between the forking of the repo and version 1.2.2 involving changes to JENKINSFILE, ci, docker-compose, lint, etc...  EDIT: Right after posting this (after testing many times), I started experiencing the same issue, even with 1.2.2.  This is not very surprising, as in my months-long struggle with this issue, it tends to be very intermittent.  My hope is that PR #11 addresses it once and for all.  I will test extensively with 1.2.3 when it is released on chime.  ></body> </Action>
