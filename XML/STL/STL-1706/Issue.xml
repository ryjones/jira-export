<Issue id="44951" key="STL-1706" number="1706" project="10001" reporter="JIRAUSER19898" assignee="mfford" creator="JIRAUSER19898" type="10004" summary="Sawtooth - PBFT - Catchup Stalls" priority="2" status="10100" created="2020-04-27 09:31:06.0" updated="2020-05-15 15:48:12.0" votes="0" watches="1" workflowId="58853" archived="N"> <description><! CDATA Validator version 1.1.5 (also replicated in 1.2.X)  PBFT version 1.0.1 (also replicated in 1.0.2)  During the catchup process, the node often stalls (gets stuck at a block that is not the current head). We were seeing this very frequently in our network of 5 nodes across AWS and Azure. About 60-70% of our runs resulted in this scenario. Once stalled the node stays in the stalled state until restarted (in which case again it may or it may not catchup).   After several troubleshooting steps, we identified the root cause to the fact that the PBFT engine may receive (or process) blocks out of sequence in which case it discards the block. S     Attaching a specific run of the PBFT log in our case that demonstrates the above. More details as follows with detailed refernce to the line numbers in the attached pbft-stall.log,      What is happening here is that we are trying to catchup a new node that has no prior blocks. Line 58 in the PBFT logs is confusing since it says internal error for the genesis block (since the block number is 0, but the seq num for PBFT is 1). But it already had previously got it in the start state in line 32, and processed it in line 39. In line 60 the PBFT engine gets block number 1 from the validator. It then gets block 2 in line 70 and marks block 1 valid in line 83/84 and commits in line 120. Meanwhile it has continued to receive blocks and put them in the log marked as unvalidated (pending processing I guess). At line 130 you can see it receives block 6, but it hasnt yet received block 4 or block 5 - so it throws an error and discards that block. In line 139 it gets block 4 and then line 149 block 5. Subsequently as block 7 on wards come in but are discarded since it doesnt have block 6/discarded it previously. Meanwhile it continues processing and commits upto block 4 (line 253). But on block 5 it doesnt have block 6 for the seal and makes a Seal Request (which will be ignored by the rest of the network) line 167. Subsequent to that it pretty much stalls in the catchup since it has no more blocks to process.... I am guessing if a new batch is sent and a new block request came in, then the validator would try to again find previous blocks but it has a lot of catching up to do and might stall again (we had a scenario a couple of months back when a node mysteriously caught up after a few days, but I think it looks like it might have incrementally caught up/ stalled each time a new block was processed )     ></description> </Issue>
