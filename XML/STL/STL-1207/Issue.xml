<Issue id="29784" key="STL-1207" number="1207" project="10001" reporter="benoit.razet" assignee="dan.middleton@intel.com" creator="benoit.razet" type="10004" summary="ztest scalability issues" priority="3" status="10100" created="2018-04-27 19:48:42.0" updated="2019-05-21 14:34:12.0" votes="0" watches="1" workflowId="29791"> <description><! CDATA This ticket is coming in the context of experiencing hard times with the ztest in a network of 4 validators. What we would experience is having validators freezing. Looking into the current implementation of the ztest, I found several lines of code that are troubling while trying to figure out what the ztest is doing. Maybe the most questionable part is discovering that validators, when they perform the ztest, will inspect almost each block published onchain to this date to decide if the a block pass the ztest or not.  Reproducibility: based on the branchÂ https://github.com/benoitrazet/sawtooth-core/tree/ztest-scalability-issues  run the test_poet_liveness with  `./bin/run_docker_test test_poet_liveness`  monitor the logs of the second validator to see the number blocks inspected to decide the ztest. This number is incrementally increasing as the chain grows:  `docker logs latest_validator-2_1 2>&1 | grep "zTest succeeded"`  !Screen Shot 2018-04-27 at 3.28.26 PM.png|width=424,height=53!  What is striking here is `zTest succeeded with depth 389` which indicates that the validator has been going through 389 blocks to decide that the candidate block is valid. Things only get worse when the number of blocks increase.  The lines of code that are relevant for this issue are:  https://github.com/hyperledger/sawtooth-core/blob/289dce37db23f58427606f572980ac6eade748e8/consensus/poet/core/sawtooth_poet/poet_consensus/consensus_state.py#L366  https://github.com/hyperledger/sawtooth-core/blob/289dce37db23f58427606f572980ac6eade748e8/consensus/poet/core/sawtooth_poet/poet_consensus/consensus_state.py#L891  This problem seems to be related to another bug we observed in the following ticket:  https://jira.hyperledger.org/browse/STL-1121  Might be a good time to revisit the ztest code. I'd be happy to do it but after spending several hours experimenting and looking into the code, I feel I am missing a part of the story about the ztest by just looking at the resource available to figure this out.  ></description> </Issue>
