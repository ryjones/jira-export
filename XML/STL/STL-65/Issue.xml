<Issue id="16280" key="STL-65" number="65" project="10001" reporter="pschwarz" assignee="pschwarz" creator="mfford" type="10006" summary="Implement Settings Key Naming Strategy" priority="3" resolution="10000" status="10001" created="2017-05-03 19:28:44.0" updated="2017-05-21 13:42:32.0" resolutiondate="2017-05-21 13:42:32.0" votes="0" watches="1" workflowId="16280"> <description><! CDATA Addresses are made up of 70 hexadecimal digits, with the first 6 making up a transaction family namespace, and the remaining 64 make up the address of the data within the namespace.  With on-chain settings, the namespace is 000000.  The remainder of the data is made up from a series of hashes of key parts.     In order to allow users to to query for groups of settings, without having to query the whole of the the settings, there needs to be a correspondence between the key parts and the address.       The remaining 32 bytes/64 hex characters of a setting address can be broken up into 4 parts, each corresponding to a part of the setting key.  Each part of the key is hashed with sha256 and the first 16 characters of the hash are used.  For keys with less than 4 parts, the remaining hashes are produced using empty strings.  For keys with more than 4 parts, the last part will be the remaining subkey (that is, 3 individual parts, and the 4 made up of the remain subkey).   Breaking it into 4 parts limits the granularity of subqueries, for deeply nested settings, but a consistent position for the keys is necessary for subgroup queries to be predictable, without the application developer requiring knowledge of how deeply nested the settings are.  ></description> </Issue>
