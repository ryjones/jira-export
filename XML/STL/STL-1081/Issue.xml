<Issue id="28040" key="STL-1081" number="1081" project="10001" reporter="benoit.razet" assignee="pschwarz" creator="benoit.razet" type="10004" summary="Validators forking/consensus issues" priority="3" resolution="10000" status="10001" created="2018-02-26 22:25:53.0" updated="2019-06-19 15:05:35.0" resolutiondate="2019-06-10 19:29:45.0" votes="0" watches="4" workflowId="28042"> <description><! CDATA *Description:* It seems that when a network of 5 validators is deployed, the validators easily fork and do not reach consensus after even a small number of transactions.  *Reproducibility1:* see comment https://jira.hyperledger.org/browse/STL-1081?focusedCommentId=41152&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-41152  *Reproducibility2:* The bug is reproducible with the following modifications to the Intkey transaction family. A new verb is introduced *append*. It differs from inc/dec because it will preserve the order of operations by not being associative-commutative.  The following branch allows to reproduce the bug:  https://github.com/benoitrazet/sawtooth-core/tree/fork-consensus-issues   To see the bug, run:  ./bin/run_docker_test test_poet_liveness2.yaml  and observe the logs that eventually shows difficulties to reach consensus with messages like the following when the validators appear to have forked: ``` intkey-workload_1 | V0 \{'nasscom': 80150160} intkey-workload_1 | V1 \{'nasscom': 102030405060708090100110120130} intkey-workload_1 | V2 \{'nasscom': 80150160}  intkey-workload_1 | V3 \{'nasscom': 80150} intkey-workload_1 | V4 \{'nasscom': 80150160}  intkey-workload_1 | INFO:test_intkey_smoke:The nasscom value for each validator should be the same intkey-workload_1 | INFO:test_intkey_smoke:There are 3 different branches. ```  *Remarks:* * The Intkey transaction family was also modified to raise InvalidTranaction instead of InternalError. * The docker-compose file is very close to test_poet_liveness. Mostly the Inkey-go transaction processor has been replaced with the Python one. * The same behavior is observable using the devmode consensus instead of software PoET  ></description> </Issue>
