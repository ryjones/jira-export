<Issue id="17452" key="STL-351" number="351" project="10001" reporter="amundson" assignee="amundson" creator="amundson" type="10000" summary="Standardize CLI Commands and Options" priority="3" resolution="10000" status="10001" created="2017-06-05 04:53:05.0" updated="2021-03-15 19:12:07.0" resolutiondate="2021-03-15 19:12:07.0" votes="0" watches="1" workflowId="17456"> <description><! CDATA Various commands for 0.8 were added with the assumption that we would at some point rename them for consistency across the project. Now seems an appropriate time to pick the final names and do the renaming.  Commands will use a '-' separator instead of '_', since this is more consistent with Linux commands in general.  The clients commands remain largely unchanged, with intkey_jvm being renamed to jvmsc (since it is an example of JVM smart contracts).  The client commands: sawtooth poet intkey jvmsc xo noop  The validator components will be prefixed with 'sawtooth-':  sawtooth-validator sawtooth-rest-api  Transaction processors will be renamed to conform to the general format of <family>-tp -<lang> . This organization is intended to sort the CLI commands by family instead of function. The commands become:  intkey-tp-go intkey-tp-java intkey-tp-javascript intkey-tp-python jvmsc-tp xo-tp-go xo-tp-javascript xo-tp-python noop-tp-go supplychain-tp poet-validator-registry-tp      In an attempt to make the CLI options consistent across the various commands, we will be modifying several often-used validator and REST API options.  sawtooth-validator Usage ------------------------  We use a couple new terms here.  When peering is dynamic, the validator will contact the "seed" nodes in it's discovery process; once it has discovered a sufficient peer list, then it randomly selects the peers from the discovered list.  The term "seed" is new and replaces "join".  We have chosen to use "--bind" when defining local endpoints and "--connect" when specifying remote endpoints, across all commands.  The option "--endpoint" replaces "--public-uri" and is the endpoint provided to peers.  The behavior of '--endpoint' will be to default to the network bind address.  It should only really need to be specified when behind a NAT or if it would be ambiguous (such as binding to 0.0.0.0).  When specifying 0MQ URIs, we will assume tcp:// by default if only host:port is provided.  All equivalent:  NEW: sawtooth-validator \ --bind=network:tcp://127.0.0.1:8800/ \ --bind=component:tcp://127.0.0.1:40000/ \ --endpoint=tcp://1.2.3.4:8800/ \ --peering=dynamic \ --seed=tcp://2.3.4.5:8800/ \ --peer=tcp://2.3.4.5:8800/ NEW: sawtooth-validator \ -B network:tcp://127.0.0.1:8800/ \ -B component:tcp://127.0.0.1:40000/ \ -E tcp://1.2.3.4:8800/ \ -P=dynamic \ -s tcp://2.3.4.5:8800/ \ -p tcp://2.3.4.5:8800/ NEW: sawtooth-validator \ -B network:127.0.0.1:8800 \ -B component:127.0.0.1:40000 \ -E 1.2.3.4:8800 \ -P dynamic \ -s 2.3.4.5:8800 \ -p 2.3.4.5:8800 OLD: validator \ --network-endpoint=tcp://127.0.0.1:8800/ \ --component-endpoint=tcp://127.0.0.1:8800/ \ --public-uri=tcp://1.2.3.4:8800/ \ --peering=dynamic \ --join=tcp://2.3.4.5:8800/ \ --peers=tcp://2.3.4.5:8800/  FUTURE: sawtooth-validator \ -B network,client:127.0.0.1:8800 \ -B tp,client:127.0.0.1:40000 \ -E 1.2.3.4:8800  The "FUTURE" case demonstrates why we have selected the particular formatting of that argument.  It is intended to allow us to specify classes of messages which are bound to a particular port.  validator.toml --------------  The configuration file mirrors the command line options:  bind =   "network:tcp://127.0.0.1:8800/", "component:tcp://127.0.0.1:8800/"   endpoint = "tcp://1.2.3.4:8800/" peering = "dynamic" peers =   "tcp://2.3.4.5:8800/"   seeds =   "tcp://2.3.4.5:8800/"    sawtooth-rest-api Usage -----------------------  The REST API's usage is similar, using '--bind' and '--connect'.  All equivalent:  NEW: sawtooth-rest-api \ --bind=localhost:8080 \ --connect=tcp://127.0.0.1:40000/ \ --timeout=300 NEW: sawtooth-rest-api \ -B localhost:8080 \ -C tcp://127.0.0.1:40000/ \ -t 300 NEW: sawtooth-rest-api \ -B localhost:8080 \ -C 127.0.0.1:40000 \ -t 5m OLD: rest_api \ --host=localhost \ --port=8080 \ --timeout=300  rest-api.toml -------------  connect = "tcp://127.0.0.1:40000" bind =   "localhost:8800"   timeout = 300   Other commands will get similar changes, such as the TPs all using '--connect'.  ></description> </Issue>
