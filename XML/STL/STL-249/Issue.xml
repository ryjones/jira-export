<Issue id="16876" key="STL-249" number="249" project="10001" reporter="jsmitchell" assignee="amundson" creator="jsmitchell" type="10005" summary="Determine approach for running Signature Verification in separate processes" priority="3" status="10404" created="2017-05-18 22:27:32.0" updated="2021-03-15 18:16:45.0" votes="0" watches="2" workflowId="16880"> <description><! CDATA Signature Verification used to be run by a ProcessPoolExecutor. Due to  http://bugs.python.org/issue6721 Â it was moved to a ThreadPoolExecutor to avoid intermittent test failures. This is undesirable as a long-term solution as it brings CPU-intensive tasks into the validator python process. Since python is not great at multi-core use via threading (GIL), a high rate of signature verification results in competition for scarce CPU resources within the core validator process.  This task is to explore alternatives and select an option for offloading the signature verification work out of the core process and taking advantage of multiple cores for parallel signature verification.   Possible alternatives include:  A signature verification component that connects over the Interconnect with some kind of load balancing between different instances of signature verifiers.  A separate process or set of processes that communicate over some other IPC mechanism with the core validator.  Others?  ></description> </Issue>
