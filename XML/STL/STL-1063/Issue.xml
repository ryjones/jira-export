<Issue id="27718" key="STL-1063" number="1063" project="10001" reporter="benoit.razet" assignee="pschwarz" creator="benoit.razet" type="10004" summary="Checking block_info state in Intkey creates bug in validator" priority="1" resolution="10000" status="10001" created="2018-02-14 15:25:32.0" updated="2018-02-19 15:36:05.0" resolutiondate="2018-02-19 15:36:05.0" votes="0" watches="3" workflowId="27720"> <description><! CDATA *Description:* When the block_info data is get from another transaction family, the information can miss (despite block_info being injected first) and this leads to undesired behavior for the validator.  *Reproducibility:* The bug is reproducible with the following modifications to the Intkey transaction family. Have any Intkey transaction get the timestamp from the block_info. Whe the block_info information is missing then Intkey raise an InternalError exception. This InternalError exception is causing the validator to retry to execute the transaction at the next block – which is fine -- but the block_info is missing for every attempt of the validator. This leads to validator spinning forever trying to execute the same transaction again and again with the same InternalError exception. The Intkey Smoke test has been modified to send 100 Intkey transactions with a SLEEP_BETWEEN_TXN = 0.03 in between. The value of 0.03 appears to be a threshold triggering the bug on our machine.  The following branch allows to reproduce the bug:  https://github.com/benoitrazet/sawtooth-core/tree/block_info_missing_bug   start the validator and the other containers in one terminal:  ./bin/run_docker_test test_intkey_smoke_python  in another terminal enter the test container and then run the test  docker exec -it latest_test-intkey-smoke-python_1 bash  nose2-3 -c /project/sawtooth-core/integration/sawtooth_integration/nose2.cfg -v -s /project/sawtooth-core/integration/sawtooth_integration/tests test_intkey_smoke.TestIntkeySmoke  Looking at the logs of the first terminal should show validator trying execute forever some intkey transactions that miss the block_info.  *Remarks:* the same type of bug occurs when the transaction family checks `sawtooth settings` instead of block_info. This suggests that it is not a block_info per se but a broader validator bug.     ></description> </Issue>
