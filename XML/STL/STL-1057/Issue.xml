<Issue id="27663" key="STL-1057" number="1057" project="10001" reporter="geraldoyudo" assignee="cintel" creator="geraldoyudo" type="10004" summary="Parallel Scheduling doesn&apos;t improve transaction rate" priority="3" status="10100" created="2018-02-13 09:36:36.0" updated="2019-05-21 14:33:43.0" votes="0" watches="1" workflowId="27664"> <environment><! CDATA * Windows 10 * Sawtooth Core V 1.0 * Virtual Environment (Docker toolbox)  * Docker v 17.  * Steps to reproduce: ** Pull sawtooth core v1.0 ** Modify docker/compose/sawtooth-default.yaml to use parallel scheduling ** run sawtooth-default.yaml with docker-compose ** Build int-key java and do the same.  ></environment> <description><! CDATA The table below shows the timing measured when the validator is tested by sending transactions to the IntegerKey Transaction Processor. The batches were created using the intkey cli command for different values of count, maxBatches and Key size.  intkey create_batch -c  count  -B  maxBatches   -K   key size   intkey load --url  http://rest-api:8008|http://rest-api:8008/       |Num of batches -c|Max transactions per batch -B|Number of keys to set initially -k|Timing (ms)| |10|10|10|2166| |10|40|10|5,254| |40|40|10|33,016| |40|40|40|30,882| As seen, the system barely handles multiple transactions well. In addition to this, it gives the following error intermittently:   {code:java}   2018-02-08 17:02:49.517 ERROR    future  An unhandled error occurred while running future callback  sawtooth-validator-default | Traceback (most recent call last):  sawtooth-validator-default |   File "/usr/lib/python3/dist-packages/sawtooth_validator/networking/future.py", line 79, in run_callback  sawtooth-validator-default |     self._callback_func(self._request, self._result)  sawtooth-validator-default |   File "/usr/lib/python3/dist-packages/sawtooth_validator/execution/executor.py", line 132, in _future_done_callback  sawtooth-validator-default |     data=data)  sawtooth-validator-default |   File "/usr/lib/python3/dist-packages/sawtooth_validator/execution/scheduler_parallel.py", line 652, in set_transaction_execution_result  sawtooth-validator-default |     self._set_least_batch_id(txn_signature=txn_signature)  sawtooth-validator-default |   File "/usr/lib/python3/dist-packages/sawtooth_validator/execution/scheduler_parallel.py", line 616, in _set_least_batch_id  sawtooth-validator-default |     batch = self._batches_by_txn_id txn_signature   sawtooth-validator-default | KeyError: '4171590e1d28e787347c00d79d04c3c92d837866213b9baa0a39ae1e559cf81a15d6219ce535cd30f20dfbb974abb867a19a5ccd8e710868e250ee1c3381240e {code} When the java-sdk is used to create a transaction processor and parallel scheduling is used, it gives the following error on the transaction processor:   {code:java}  cTaskExecutor-1  s.sdk.processor.TransactionProcessor     : State Exception!: sawtooth.sdk.processor.exceptions.InternalError: java.util.concurrent.TimeoutException: Future Timed out {code}      ></description> </Issue>
