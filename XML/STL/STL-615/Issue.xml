<Issue id="19399" key="STL-615" number="615" project="10001" reporter="dhuseby" assignee="dan.middleton@intel.com" creator="dhuseby" type="10004" summary="PoET SGX implementation deviates from spec" priority="2" resolution="10000" status="10001" created="2017-07-20 23:04:47.0" updated="2017-09-06 20:25:32.0" resolutiondate="2017-09-05 19:40:05.0" votes="0" watches="2" workflowId="19456" security="10000"> <description><! CDATA PoET SGX Implementation deviates from spec on use of monotonic counters.  An attacker could work around the anti-sybil protections to increase their odds of winning a block.  This attack does not compromise State integrity or liveness, but it does compromise fairness.     Limitations: * An attacker must control a valid registered PoET endpoint. * All winning blocks will still be associated with the registered identity. * Defense in depth features, will limit the impact of the attack. * > z-test will prevent winning beyond network defined limits. * > SGX will limit total number of enclaves the machine can run (limited monotonic counters and other resources)     Defect:  The enclave does not destroy its poet validator signup info if the monotonic counter is lost.     Theoretic Attack: # An attacker must control a valid registered PoET endpoint. # Attacker launches the enclave, # call the ecall_Terminate() function to release the monotonic counter. # Launch multiple poet enclaves which each then create their own counters without knowledge of other enclave instances. # Counter binding to the signup info is lost. # Each enclave could then independently generate a new wait timer increasing the odds of winning a block. # The resulting wait certificate will pass validator registry checks because it is still signed with the registered poet key.  ></description> </Issue>
