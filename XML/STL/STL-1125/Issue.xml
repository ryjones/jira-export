<Issue id="28812" key="STL-1125" number="1125" project="10001" reporter="arthurgreef" assignee="agunde" creator="arthurgreef" type="10004" summary="Validator peering fails with error: Endpoint cannot include &apos;lo&apos;: tcp://hashblock3.westus2.cloudapp.azure.com:8800" priority="3" resolution="10000" status="10001" created="2018-03-23 20:13:27.0" updated="2019-09-09 19:29:31.0" resolutiondate="2019-09-09 19:29:31.0" votes="0" watches="4" workflowId="28815"> <description><! CDATA Create external endpoint for validator in yaml file: {color:#ce9178}sawtooth-validator -vv {color}{color:#d7ba7d}\{color} --endpoint tcp://hashblock0.westus2.cloudapp.azure.com:8800 {color}{color:#d7ba7d}\{color} Run validator on two nodes:  Expected behavior is that peers will connect.     Actual behavior is that peers do not connect. Here is the trace.   2018-03-23 19:11:54.920 DEBUG    dispatch  Added send_message function for connection OutboundConnectionThread-tcp://hashblock1.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.931 DEBUG    dispatch  Added send_last_message function for connection OutboundConnectionThread-tcp://hashblock1.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.950 DEBUG    gossip  Endpoint has not completed authorization in 10 seconds: tcp://hashblock2.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.951 DEBUG    gossip  attempting to peer with tcp://hashblock2.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.959 DEBUG    interconnect  Adding connection to tcp://hashblock2.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.969 DEBUG    selector_events  Using selector: ZMQSelector  2018-03-23 19:11:54.979 DEBUG    dispatch  Added send_message function for connection OutboundConnectionThread-tcp://hashblock2.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.979 DEBUG    dispatch  Added send_last_message function for connection OutboundConnectionThread-tcp://hashblock2.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.990 DEBUG    gossip  Endpoint has not completed authorization in 10 seconds: tcp://hashblock3.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.999 DEBUG    gossip  attempting to peer with tcp://hashblock3.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:54.999 DEBUG    interconnect  Adding connection to tcp://hashblock3.westus2.cloudapp.azure.com:8800  2018-03-23 19:11:55.008 DEBUG    handlers  got connect message from 51c0bbe35439f57eebf8141a3f6bc080b884ca6c827be97ebfe0c41714afcff1dbab31dbd41764866b151b0692901e605fe63cc5d11494220b9dacf0bbb4186e. sending ack  2018-03-23 19:11:55.009 DEBUG    selector_events  Using selector: ZMQSelector  2018-03-23 19:11:55.010 DEBUG    handlers  Endpoint cannot include 'lo': tcp://hashblock3.westus2.cloudapp.azure.com:8800     The problem is on line 88 of this file:  https://github.com/hyperledger/sawtooth-core/blob/9ccff708ef5a20e236756089722825f0026934bd/validator/sawtooth_validator/networking/handlers.py   The statement is: if{color}{color:#24292e} interface {color}{color:#d73a49}in{color}{color:#24292e} message.endpoint:{color}  The statement should be some form of this?{color:#24292e}:{color} {color:#c586c0}import{color}{color:#d4d4d4} re{color}  {color:#d4d4d4}endpoint {color}{color:#d4d4d4}={color} {color:#ce9178}'tcp://hashblock.westus2.cloudapp.azure.com:8800'{color} {color:#d4d4d4}endpoint1{color}{color:#d4d4d4}={color}{color:#ce9178}'tcp://lo:8800'{color} {color:#d4d4d4}nic{color}{color:#d4d4d4}={color}{color:#ce9178}'lo'{color}  {color:#d4d4d4}match {color}{color:#d4d4d4}={color}{color:#d4d4d4} re.search({color}{color:#569cd6}r{color}{color:#d16969}'{color}{color:#d7ba7d}\/\/{color}{color:#ce9178}({color}{color:#d16969}.{color}{color:#d7ba7d}*{color}{color:#ce9178}){color}{color:#d7ba7d}\:{color}{color:#d16969}'{color}{color:#d4d4d4}, endpoint1, re.I){color} {color:#c586c0}if{color}{color:#d4d4d4} match {color}{color:#569cd6}is{color} {color:#569cd6}not{color} {color:#569cd6}None{color} {color:#569cd6}and{color}{color:#d4d4d4} match.lastindex {color}{color:#d4d4d4}=={color} {color:#b5cea8}1{color}{color:#d4d4d4}:{color} {color:#d4d4d4} host{color}{color:#d4d4d4}={color}{color:#d4d4d4}match.group(match.lastindex){color} {color:#c586c0}if{color}{color:#d4d4d4} nic.lower() {color}{color:#d4d4d4}=={color}{color:#d4d4d4} host.lower():{color} {color:#dcdcaa}print{color}{color:#d4d4d4}({color}{color:#ce9178}'error'{color}{color:#d4d4d4}){color} {color:#c586c0}else{color}{color:#d4d4d4}:{color} {color:#dcdcaa}print{color}{color:#d4d4d4}({color}{color:#ce9178}'no error'{color}{color:#d4d4d4}){color} {color:#24292e}This is because I have a file /etc/network/interfaces.d/50-cloud-init.cfg with the following content:{color} # This file is generated from information provided by # the datasource.  Changes to it will not persist across an instance. # To disable cloud-init's network configuration capabilities, write a file # /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following: # network: \{config: disabled} {color:#f6c342}auto lo{color} iface lo inet loopback auto eth0 iface eth0 inet dhcp   'lo' is an interface and 'l' and 'o' are characters in 'hashblock'.    ></description> </Issue>
