<Issue id="24479" key="STL-900" number="900" project="10001" reporter="tom barnes" assignee="rberg2" creator="tom barnes" type="10005" summary="File permissions for sawtooth private key" priority="3" resolution="10000" status="10001" created="2017-11-27 17:30:47.0" updated="2017-12-05 21:14:14.0" resolutiondate="2017-12-05 16:58:30.0" votes="0" watches="2" workflowId="24479"> <description><! CDATA Reported by Graham at Nettitude:  As part of the Nettitude assessment of Sawtooth, I’ve found that a default installation does not restrict access to the validator private key, located at “/etc/sawtooth/keys/validator.priv”.  This was found to be an issue with both the current stable Ubuntu packages and the most recent nightly build of the same. The installation and configuration procedure was as follows:  apt-get install sawtooth  sawadm keygen     The following file and directory modes were found:  drwxr-xr-x /etc/sawtooth  drwxr-xr-x /etc/sawtooth/keys  -rw-r--r-- /etc/sawtooth/keys/validator.priv  -rw-r--r-- /etc/sawtooth/keys/validator.pub     It was then confirmed that the private key could be accessed from an unprivileged account.  Running the validator in a separate docker container (as will often be the case) strongly mitigates this issue, however it would be imprudent to assume that configuration.  At a minimum, Nettitude would recommend changing the default file mode for the private key file from 644 to 600. Traditional UNIX philosophy would be to leave the public key as 644, but for a security-critical application like this there may be a case for restricting the entire hierarchy from /etc/sawtooth downwards (depending on what adverse impact, if any, this would have).  There are a number of other files and directories with public read access, and I’m currently in the process of looking to see if there is any security impact, but it is likely that the above private key is the most serious.  ></description> </Issue>
