<Issue id="46139" key="STL-1711" number="1711" project="10001" reporter="arjanvaneersel" assignee="mfford" creator="arjanvaneersel" type="10004" summary="Go SDK should not require a protobuf package in the Go path" priority="1" status="10100" created="2020-09-23 06:22:54.0" updated="2020-09-23 06:22:54.0" votes="0" watches="1" workflowId="60043" archived="N"> <description><! CDATA The Go SDK requires a protobuf package in the Go path, because the SDK itself uses imports like "protobuf/transaction_pb2". Before Go 1.13 this is already completely against the principles of idiomatic Go and how package paths should look like, but at least it worked.   After Go 1.13, when modules became the new standard, this approach no longer works. This "hacky" protobuf package will NEVER get vendored when using `go mod vendor` and it will cause errors like this:  ``` # github.com/hyperledger/sawtooth-sdk-go/processor vendor/github.com/hyperledger/sawtooth-sdk-go/processor/context.go:330:3: cannot use event (type *"github.com/hyperledger/sawtooth-sdk-go/protobuf/events_pb2".Event) as type *"protobuf/events_pb2".Event in field value vendor/github.com/hyperledger/sawtooth-sdk-go/processor/worker.go:57:30: cannot use header (type *"protobuf/transaction_pb2".TransactionHeader) as type *"github.com/hyperledger/sawtooth-sdk-go/protobuf/transaction_pb2".TransactionHeader in argument to findHandler ``` and  ``` /core/vendor/github.com/hyperledger/sawtooth-sdk-go/protobuf/batch_pb2/batch.pb.go:10:2: cannot find package "." in: /core/vendor/protobuf/transaction_pb2 ```  OS version: x86_64 GNU/Linux Sawtooth version: 1.2 Environment details (virtual, physical, etc.): physical and docker Steps to reproduce the issue: 1. Install Sawtooth as according the docs 2. Use `go mod vendor` to prepare the vendor directory 3. Create a docker image  Actual results: See above Expected results: Successful image creation  ></description> </Issue>
