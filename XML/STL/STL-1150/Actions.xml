<Action id="44414" issue="29228" author="dbosschaert" type="comment" body="Ping? Any thought around this?" created="2018-05-15 10:38:39.0" updateauthor="dbosschaert" updated="2018-05-15 10:38:39.0"/>
<Action id="44483" issue="29228" author="boydjohnson" type="comment" body="It would be possible to write immutability into the transaction processor. The check would be that if some object already exists in state, don&apos;t make a new one. Something similar is true in sawtooth-marketplace where if a user is created with a particular private/public key pair, no other user can be created with the same key-pair." created="2018-05-16 13:49:07.0" updateauthor="boydjohnson" updated="2018-05-16 13:49:07.0"/>
<Action id="44486" issue="29228" author="dbosschaert" type="comment" created="2018-05-16 14:40:10.0" updateauthor="dbosschaert" updated="2018-05-16 14:40:10.0"> <body><! CDATA Hi  ~boydjohnson  thanks for your thoughts. This would be possible, but I guess it doesn't take advantage of the immutability of the blockchain. For me the key benefit of the blockchain is its immutable records. Especially when I'd like to prove that an event happened.   If I have to implement the immutability in my own transaction processor then in what way do I take advantage of the blockchain immutability? Maybe I'm missing something, but I'd really like to be able to store my data on the blocks themselves so that they are guaranteed to be immutable. Is there an API I can use for that?  ></body> </Action>
<Action id="45692" issue="29228" author="dbosschaert" type="comment" body="Ping? Anyone an answer to my question? For me the key differentiator with using a blockchain implementation is the immutability guarantees. Do I have to implement that immutability myself in my tx processor? That seems odd to me... " created="2018-06-08 12:52:24.0" updateauthor="dbosschaert" updated="2018-06-08 12:52:24.0"/>
<Action id="45730" issue="29228" author="boydjohnson" type="comment" created="2018-06-08 18:01:35.0" updateauthor="boydjohnson" updated="2018-06-08 18:01:35.0"> <body><! CDATA Hi  ~dbosschaert , So I think we view the Merkle state hash that is stored in the block as the immutable record, whereas what is in the actual Validator's state as more of a cache. So if someone were to audit intkey and block 1 had a transaction that sets "c" to 1 and block 2 has a transaction that sets "c" to 5, both transactions are stored in a block even though the current state as the transaction processor sees it "c" is 2.  You will probably get quicker responses at the #sawtooth channel on https://chat.hyperledger.org.  ></body> </Action>
