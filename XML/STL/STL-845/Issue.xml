<Issue id="23824" key="STL-845" number="845" project="10001" reporter="dhuseby" assignee="delventhalz" creator="dhuseby" type="10004" summary="/batch_status API hangs when id is an empty string" priority="3" resolution="10000" status="10001" created="2017-11-06 23:20:03.0" updated="2017-11-28 17:04:07.0" resolutiondate="2017-11-28 17:04:07.0" votes="0" watches="3" workflowId="23824" security="10000"> <description><! CDATA Reported by Graham from Nettitude:  As part of a security assessment of Sawtooth, Nettitude has been fuzzing the REST API, and has found a class of queries which can cause the connection to hang.  This is undesirable from a security perspective, because it can be utilised increase the potency of a denial-of-service attack: whilst the connection remains open, it consumes resources on the server.   The endpoint in question is “/batch_status” * If this is called with no id parameter, or an empty id parameter, then it returns immediately with in error message (code 66). * If it is supplied with one or more invalid but non-empty batch ids, then these are correctly reported as ‘invalid transactions’. * However, if it is presented with the empty string as a batch id, the request hangs until it times out after five minutes.  The simplest way to reproduce this effect is with a URL of the form:   http://rest-api:8080/batch_status?id =,  however a comma before or after a list of valid batch IDs will have a similar effect.  The root cause appears to be incomplete validation of the request by the REST API before it is passed onto the validator.  Beyond this specific issue, there does appear to be a lost opportunity here to perform more thorough validation within the REST API before data is passed on to the 0MQ interface. I can appreciate that there’s a desire to respect the DRY principle here, and I’m not advocating large-scale duplication of code from the validator to the REST API. However, there would be value in (for example) checking that arguments which are to be passed onwards as block, batch or transaction IDs do in fact consist of the appropriate number of hex digits.  ></description> </Issue>
