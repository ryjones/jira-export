<Issue id="24064" key="FAB-7054" number="7054" project="10002" reporter="sanchezl" assignee="sanchezl" creator="sanchezl" type="10003" summary="Enable a more forgiving Kafka version setting in orderer.yaml" priority="3" resolution="10000" status="6" created="2017-11-20 18:53:39.0" updated="2018-07-20 14:14:59.0" resolutiondate="2017-11-22 15:34:36.0" votes="0" watches="3" workflowId="40548"> <description><! CDATA When configuring a kafka based ordering service node, one of the configuration options is {{Kafka.Version}}. We currently limit the valid values of this setting to the values exposed by the underlying {{sarama}} Kafka client library.  Kafka recently stopped publishing Kafka {{0.10.2.0}} and instead is now publishing {{0.10.2.1}}. Fabric users might attempt to set the {{Kafka.Version}} property to {{0.10.2.1}}, but the orderer will reject that value, as it does not exist in the {{sarama}} library.  The {{Kafka.Version}} corresponds better to the log message format, rather than the actual Kafka broker version (see {{log.message.format.version}} in the Kafka documentation for explanations on why these might be out of 'sync'). In addition, while Kafka itself does not change the log message format on 4th digit version changes, the underlying {{sarama}} library might use the 4th digit to work around issues that it might exist in a specific release of Kafka.  Instead of trying to come up with a complicated explanation of how to set the {{Kafka.Version}} properly, we will allow the user to set the version to any 3 or 4 digit Kafka version, and will then automatically map it to the appropriate underlying version in the {{sarama}} library. For example:  * {{0.10.2}} is interpreted as {{0.10.2.0}}  * {{0.10.2._n_}} is interpreted as {{0.10.2.0}}  (where _n_ is an int) * {{0.10.3}} is error (need to match at least the third digit) * {{0.10}} is error (need at least 3 digits)   ></description> </Issue>
