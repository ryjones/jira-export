<Issue id="43921" key="FAB-17344" number="17344" project="10002" reporter="sykesm" creator="sykesm" type="10004" summary="Mitigate unit test failure (timeout) in orderer/common/cluster/cluster_test with more aggressive timeout" priority="3" resolution="10000" status="6" created="2020-01-09 16:58:57.0" updated="2020-03-24 14:07:48.0" resolutiondate="2020-03-24 14:07:48.0" votes="0" watches="1" workflowId="57782"> <description><! CDATA Ah, yes. We're back to these...  {code} 2020-01-09T15:35:36.0081304Z panic: test timed out after 20m0s 2020-01-09T15:35:36.0081334Z  2020-01-09T15:35:36.0081381Z goroutine 2083  running : 2020-01-09T15:35:36.0081423Z testing.(*M).startAlarm.func1() 2020-01-09T15:35:36.0081488Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/testing/testing.go:1377 +0x11c 2020-01-09T15:35:36.0081534Z created by time.goFunc 2020-01-09T15:35:36.0081765Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/time/sleep.go:168 +0x52 2020-01-09T15:35:36.0081815Z  2020-01-09T15:35:36.0081857Z goroutine 1  chan receive, 19 minutes : 2020-01-09T15:35:36.0081905Z testing.(*T).Run(0xc0000fc900, 0x11edc59, 0x17, 0x121ddf0, 0x1) 2020-01-09T15:35:36.0082128Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/testing/testing.go:961 +0x68a 2020-01-09T15:35:36.0082196Z testing.runTests.func1(0xc0000fc900) 2020-01-09T15:35:36.0082247Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/testing/testing.go:1202 +0xa7 2020-01-09T15:35:36.0082302Z testing.tRunner(0xc0000fc900, 0xc0001a7cd8) 2020-01-09T15:35:36.0082371Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/testing/testing.go:909 +0x19a 2020-01-09T15:35:36.0082421Z testing.runTests(0xc00000fe80, 0x1bf17c0, 0x4a, 0x4a, 0x0) 2020-01-09T15:35:36.0082480Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/testing/testing.go:1200 +0x522 2020-01-09T15:35:36.0082546Z testing.(*M).Run(0xc000012500, 0x0) 2020-01-09T15:35:36.0082596Z 	/opt/hostedtoolcache/go/1.13.4/x64/src/testing/testing.go:1117 +0x300 2020-01-09T15:35:36.0082658Z main.main() 2020-01-09T15:35:36.0082718Z 	_testmain.go:254 +0x338 2020-01-09T15:35:36.0082748Z  2020-01-09T15:35:36.0082792Z goroutine 20  chan receive, 20 minutes : 2020-01-09T15:35:36.0082838Z testing.(*T).Parallel(0xc0000fca00) ... 2020-01-09T15:35:36.0475230Z goroutine 2059  select : 2020-01-09T15:35:36.0475289Z github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ccBalancerWrapper).watcher(0xc0003db240) 2020-01-09T15:35:36.0475358Z 	/home/vsts/work/1/go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:115 +0x253 2020-01-09T15:35:36.0475417Z created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newCCBalancerWrapper 2020-01-09T15:35:36.0475492Z 	/home/vsts/work/1/go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/balancer_conn_wrappers.go:106 +0x2b9 2020-01-09T15:35:36.0475549Z FAIL	github.com/hyperledger/fabric/orderer/common/cluster	1200.297s {code}  The test structure is unconventional so, at the very least, we should change that to to make it easier to debug some of this.  ></description> </Issue>
