<Action id="60754" issue="40462" author="yacovm" type="comment" created="2019-06-07 12:03:42.0" updateauthor="yacovm" updated="2019-06-07 12:03:42.0"> <body><! CDATA  ~jyellick   ~mastersingh24  it should be fairy easy to support this since we can configure to use a separate TLS listener for the intra-cluster comm.  What do you say?   ></body> </Action>
<Action id="60770" issue="40462" author="jyellick" type="comment" body="If it&apos;s easy to support, and we have a use case, I&apos;m not opposed." created="2019-06-07 18:32:20.0" updateauthor="jyellick" updated="2019-06-07 18:32:20.0"/>
<Action id="61301" issue="40462" author="guoger" type="comment" body="Followed mailing list here and I think this request makes sense.  ~raft 3  would you like to contribute?" created="2019-06-27 11:36:55.0" updateauthor="guoger" updated="2019-06-27 11:36:55.0"/>
<Action id="61302" issue="40462" author="raft 3" type="comment" body=" ~guoger  I would love to, but unfortunately neither I have time nor I know a bit about Go lang and internals of Fabric.." created="2019-06-27 11:40:53.0" updateauthor="raft 3" updated="2019-06-27 11:40:53.0"/>
<Action id="62000" issue="40462" author="guoger" type="comment" body="https://gerrit.hyperledger.org/r/c/fabric/+/32428" created="2019-07-22 09:35:42.0" updateauthor="guoger" updated="2019-07-22 14:13:20.0"/>
<Action id="63815" issue="40462" author="psanket" type="comment" body=" ~guoger  what version of the fabric is this available in and is it an environment variable in the compose fie that we need to set?" created="2019-09-18 12:20:25.0" updateauthor="psanket" updated="2019-09-18 12:20:25.0"/>
<Action id="63868" issue="40462" author="guoger" type="comment" created="2019-09-19 02:10:17.0" updateauthor="guoger" updated="2019-09-19 02:10:17.0"> <body><! CDATA  ~psanket  this is not backported to 1.4.x but maybe it should... you could try the tip of master  as for configs, you'll need to specify different addr/port in {{cluster}} section along with cert/key, and the orderer will recognize this as using seperate gRPC listener that has TLS enabled.  ></body> </Action>
<Action id="63873" issue="40462" author="psanket" type="comment" created="2019-09-19 09:37:50.0" updateauthor="psanket" updated="2019-09-19 09:37:50.0"> <body><! CDATA So my guess is that I cannot use  the 1.4.x versioned docker images for orderer with the environment variable changes that you have mentioned? And these are the variables that will need to be updated.  ORDERER_OPERATIONS_TLS_ENABLED  ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE  ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY  ORDERER_GENERAL_CLUSTER_LISTENPORT  ></body> </Action>
<Action id="65619" issue="40462" author="lmars" type="comment" body="Hi  ~guoger . Are you going to backport this to 1.4.x ?" created="2019-11-19 10:55:42.0" updateauthor="lmars" updated="2019-11-19 10:55:42.0"/>
<Action id="67943" issue="40462" author="denyeart" type="comment" body="Merged in master and release-1.4 for v1.4.5." created="2020-02-13 21:43:51.0" updateauthor="denyeart" updated="2020-02-13 21:43:51.0"/>
<Action id="68838" issue="40462" author="siddjain" type="comment" body="Could someone explain how to use this feature? what env variables need to be set and how?" created="2020-04-16 20:27:44.0" updateauthor="siddjain" updated="2020-04-16 20:27:44.0"/>
<Action id="68846" issue="40462" author="psanket" type="comment" created="2020-04-17 10:09:33.0" updateauthor="psanket" updated="2020-04-17 10:09:33.0"> <body><! CDATA  ~siddjain  See this link    https://github.com/hyperledger/fabric/releases/tag/v1.4.5      Basically, with this fix, you can enable TLS for intra-RAFT communication (That is needed for leader election) and disable mTLS for client communication so you can add service mesh for your services (like Istio). Earlier versions, it was either enabled for both or disabled for both.  The env variables to update are  ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE  ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY  ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE  ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY     ></body> </Action>
<Action id="68883" issue="40462" author="denyeart" type="comment" body=" ~guoger   ~joe-alewine  Did this one ever get formally documented?" created="2020-04-19 13:39:13.0" updateauthor="denyeart" updated="2020-04-19 13:39:13.0"/>
<Action id="68892" issue="40462" author="siddjain" type="comment" created="2020-04-20 20:12:34.0" updateauthor="siddjain" updated="2020-04-20 20:12:34.0"> <body><! CDATA one question i have is that if we are using tls we also need to provide the ca certs and i don't see any place to provide those in    {{# Cluster settings for ordering service nodes that communicate with other ordering service nodes}} {{# such as Raft based ordering service.}} {{Cluster:}} {{# SendBufferSize is the maximum number of messages in the egress buffer.}} {{# Consensus messages are dropped if the buffer is full, and transaction}} {{# messages are waiting for space to be freed.}} {{     SendBufferSize: 10}} {{# ClientCertificate governs the file location of the client TLS certificate}} {{# used to establish mutual TLS connections with other ordering service nodes.}} {{     ClientCertificate:}} {{# ClientPrivateKey governs the file location of the private key of the client TLS certificate.}} {{     ClientPrivateKey:}} {{# The below 4 properties should be either set together, or be unset together.}} {{# If they are set, then the orderer node uses a separate listener for intra-cluster}} {{# communication. If they are unset, then the general orderer listener is used.}} {{# This is useful if you want to use a different TLS server certificates on the}} {{# client-facing and the intra-cluster listeners.}}  {{# ListenPort defines the port on which the cluster listens to connections.}} {{    ListenPort:}} {{# ListenAddress defines the IP on which to listen to intra-cluster communication.}} {{    ListenAddress:}} {{# ServerCertificate defines the file location of the server TLS certificate used for intra-cluster}} {{# communication.}} {{    ServerCertificate:}} {{# ServerPrivateKey defines the file location of the private key of the TLS certificate.}} {{    ServerPrivateKey:}}   So against what CA are the certs being validated?   ></body> </Action>
<Action id="68893" issue="40462" author="siddjain" type="comment" created="2020-04-20 20:33:33.0" updateauthor="siddjain" updated="2020-04-20 20:33:33.0"> <body><! CDATA i have read about ORDERER_GENERAL_CLUSTER_ROOTCAS ** but 2 things: * this variable is not even defined in orderer.yaml * i am able to start a network of raft orderers without setting ORDERER_GENERAL_CLUSTER_ROOTCAS  ></body> </Action>
<Action id="68894" issue="40462" author="yacovm" type="comment" body="The TLS root CAs that are used are the union of all TLS root CAs of all channels (derived from the channel config) and also these root CAs that are statically defined in the orderer.yaml." created="2020-04-20 21:53:48.0" updateauthor="yacovm" updated="2020-04-20 21:53:48.0"/>
<Action id="69853" issue="40462" author="davidkhala" type="comment" body=" ~yacovm  Adding to the list, tlsCA root cert files under each orderer msp config path are also added to search scope . " created="2020-08-04 04:21:08.0" updateauthor="davidkhala" updated="2020-08-04 04:21:08.0"/>
<Action id="70928" issue="40462" author="lmars" type="comment" created="2020-12-08 09:02:52.0" updateauthor="lmars" updated="2020-12-08 09:02:52.0"> <body><! CDATA  ~yacovm  {quote}also these root CAs that are statically defined in the orderer.yaml{quote} What properties should I use for this? There is nothing similar in the "Cluster" section :(  We checked this issue in version 1.4.9 and we got a problem. We don't use TLS for the client facing port and we have not configured anything about TLS inside the configuration block. Raft cluster doesn't work in this case, because: {code}  core.comm  ServerHandshake -> ERRO 03e TLS handshake failed with error tls: failed to verify client's certificate: x509: certificate signed by unknown authority server=Orderer remoteaddress=172.22.0.1:57934 {code}  ></body> </Action>
<Action id="70929" issue="40462" author="yacovm" type="comment" body="https://github.com/hyperledger/fabric/blob/master/sampleconfig/orderer.yaml#L41" created="2020-12-08 09:06:08.0" updateauthor="yacovm" updated="2020-12-08 09:06:08.0"/>
<Action id="70930" issue="40462" author="yacovm" type="comment" created="2020-12-08 09:07:29.0" updateauthor="yacovm" updated="2020-12-08 09:07:29.0"> <body><! CDATA {code} If mutual TLS is enabled, ClientRootCAs contains a list of additional root certificates  used for verifying certificates of client connections.  It is not required to be set, but can be used to augment the set of TLS CA certificates  available from the MSPs of each channel’s configuration. {code}  ></body> </Action>
<Action id="70932" issue="40462" author="lmars" type="comment" created="2020-12-08 09:19:45.0" updateauthor="lmars" updated="2020-12-08 09:22:33.0"> <body><! CDATA Are you sure this property works for the cluster facing port?  Its name/section is strange :) and it doesn't work for us.  ></body> </Action>
<Action id="70934" issue="40462" author="yacovm" type="comment" created="2020-12-08 09:27:06.0" updateauthor="yacovm" updated="2020-12-08 09:27:06.0"> <body><! CDATA No, this property works for the client facing port (i thought that's what you wanted).     There is an equivalent property (I think hidden)  for the cluster|https://github.com/hyperledger/fabric/blob/d620ab33e9009c5e9f1ad03edab4bc9129f486ce/orderer/common/server/main.go#L482  too: {code} type Cluster struct { 	ListenAddress                        string 	ListenPort                           uint16 	ServerCertificate                    string 	ServerPrivateKey                     string 	ClientCertificate                    string 	ClientPrivateKey                     string 	RootCAs                                string // <--------- 	DialTimeout                          time.Duration 	RPCTimeout                           time.Duration 	ReplicationBufferSize                int 	ReplicationPullTimeout               time.Duration 	ReplicationRetryTimeout              time.Duration 	ReplicationBackgroundRefreshInterval time.Duration 	ReplicationMaxRetries                int 	SendBufferSize                       int 	CertExpirationWarningThreshold       time.Duration 	TLSHandshakeTimeShift                time.Duration } {code}  ></body> </Action>
<Action id="70935" issue="40462" author="lmars" type="comment" created="2020-12-08 10:06:55.0" updateauthor="lmars" updated="2020-12-08 10:07:29.0"> <body><! CDATA {quote}There is an equivalent property (I think hidden) for the cluster too{quote} I suppose, this is the property described in FAB-14780 :). We checked it too, but without success :( (error is the same).   ></body> </Action>
<Action id="70936" issue="40462" author="yacovm" type="comment" body="If you suspect a bug, please open a Jira issue and hopefully someone will look at it" created="2020-12-08 10:21:28.0" updateauthor="yacovm" updated="2020-12-08 10:21:28.0"/>
<Action id="70941" issue="40462" author="lmars" type="comment" body="Here you are: FAB-18370" created="2020-12-08 15:19:45.0" updateauthor="lmars" updated="2020-12-08 15:19:45.0"/>
