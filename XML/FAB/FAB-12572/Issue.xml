<Issue id="34834" key="FAB-12572" number="12572" project="10002" reporter="rhegde" assignee="clayton sims" creator="rhegde" type="10004" summary="IBM Kafka-Zookeeper container stops logging on using non-root user" priority="3" resolution="10201" status="6" created="2018-10-23 14:59:24.0" updated="2018-12-01 23:20:10.0" resolutiondate="2018-12-01 23:20:10.0" votes="0" watches="1" workflowId="46249"> <description><! CDATA {color:#000000}Here is the Kafka Service definition in the docker-compose file:{color}    {code:java}    kafka01clsorder.cit.clsnet:      image: ibmblockchain/fabric-kafka:1.2.0      container_name: kafka01clsorder.cit.clsnet      environment:        - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false        - KAFKA_BROKER_ID=0        - KAFKA_MIN_INSYNC_REPLICAS=2        - KAFKA_DEFAULT_REPLICATION_FACTOR=3        - KAFKA_ZOOKEEPER_CONNECT=zookeeper01clsorder.cit.clsnet:2181,zookeeper02clsorder.cit.clsnet:2181,zookeeper03clsorder.cit.clsnet:2181        - KAFKA_LOG_RETENTION_MS=-1      depends_on:        - zookeeper01clsorder.cit.clsnet        - zookeeper02clsorder.cit.clsnet        - zookeeper03clsorder.cit.clsnet      ports:        - '9092'      volumes:         - ./mount/kafka01/:/tmp/kafka-logs         - ./mount/kafka01_opt:/opt/kafka/config      user: "10130:1002" {code}    user: "10130:1002" is the UID:GID of the non-root user.  docker host mount point are pre-created before running the docker image with permission 755 for user 10130 .     Following is seen in the Kafka Logs which points to missing log4j.properties    {code:java}  rhegde@dusd1devrhap040 e2e_cli_v1_ops_kafka_tls $ docker logs -f kafka01clsorder.cit.clsnet mkdir: can't create directory '/opt/kafka/bin/../logs': Permission denied OpenJDK 64-Bit Server VM warning: Cannot open file /opt/kafka/bin/../logs/kafkaServer-gc.log due to No such file or directory log4j:ERROR Could not read configuration file from URL  file:/opt/kafka/bin/../config/log4j.properties . java.io.FileNotFoundException: /opt/kafka/bin/../config/log4j.properties (No such file or directory)         at java.io.FileInputStream.open0(Native Method)         at java.io.FileInputStream.open(FileInputStream.java:195)         at java.io.FileInputStream.<init>(FileInputStream.java:138)         at java.io.FileInputStream.<init>(FileInputStream.java:93)         at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)         at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)         at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:557)         at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)         at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)         at org.slf4j.impl.Log4jLoggerFactory.<init>(Log4jLoggerFactory.java:66)         at org.slf4j.impl.StaticLoggerBinder.<init>(StaticLoggerBinder.java:72)         at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:45)         at org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)         at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)         at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:412)         at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:357)         at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:383)         at org.apache.kafka.common.utils.Utils.<clinit>(Utils.java:75)         at kafka.Kafka$.getPropsFromArgs(Kafka.scala:44)         at kafka.Kafka$.main(Kafka.scala:81)         at kafka.Kafka.main(Kafka.scala) log4j:ERROR Ignoring configuration file  file:/opt/kafka/bin/../config/log4j.properties . log4j:WARN No appenders could be found for logger (kafka.server.KafkaConfig). log4j:WARN Please initialize the log4j system properly. log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info. {code}    Manually creating ./mount/kafka01_opt and pasting the same to ./mount/kafka01_opt rectifies the logging however this should be created through docker image run of kafka.  +Note+: There are more files that gets created upon running the docker image with root permission. we should review the other configuration files to be generated too when running through non-root user.  Same problem also exist for zookeeper.           ></description> </Issue>
