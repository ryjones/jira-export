<Issue id="41715" key="FAB-16268" number="16268" project="10002" reporter="nakaike" assignee="nakaike" creator="nakaike" type="10001" summary="Disable sync of LevelDB" priority="3" resolution="10001" status="6" created="2019-08-09 07:52:47.0" updated="2019-10-01 21:00:06.0" resolutiondate="2019-10-01 20:59:50.0" votes="0" watches="3" workflowId="54749"> <description><! CDATA BlockIndex, StateLevelDB, and HistoryLevelDB enable sync when the data is written to the DBs. When sync enabled, a fsync system call is called after every write. The fsync system call flushes the data on a page cache (memory) to a disk. Although the fsync system call guarantees to persist the data, it has large overhead because it does not return during writing the data to a disk. Since the writes to the DBs are done by a single committer goroutine, they affect the performance significantly.  I propose to disable sync for BlockIndex, StateLevelDB, and HistoryDB. This should be possible because the DBs can be recovered from block files, which contents are still written to a disk with fsync system calls, even when a system crashes before writing the data to the DB files from memory.  This is a prototype for these changes  https://gerrit.hyperledger.org/r/c/fabric/+/32807.   These changes gives 15% TPS improvement for a simple benchmark which sends a single PutState transaction iteratively.  ></description> </Issue>
