<Action id="70600" issue="46276" author="yacovm" type="comment" body="Did you also replace the bootstrap block of the orderer with the block of the latest configuration block of the system channel?" created="2020-11-02 18:25:13.0" updateauthor="yacovm" updated="2020-11-02 18:25:33.0"/>
<Action id="70601" issue="46276" author="yacovm" type="comment" body="By the way, there is a very big problem that I see, and that is - even if you could make it work, imagine you wanted to add a new orderer, or a new peer to the network - you are stuck. Because every orderer, or every peer, will try to replicate blocks and validate them, and these blocks, in the past, had RSA type CAs. " created="2020-11-02 18:28:10.0" updateauthor="yacovm" updated="2020-11-02 18:28:10.0"/>
<Action id="70602" issue="46276" author="yacovm" type="comment" created="2020-11-02 18:42:00.0" updateauthor="yacovm" updated="2020-11-02 18:42:00.0"> <body><! CDATA In theory, if we had archive and pruning feature that supports pruning the orderer, then you could checkpoint, prune the blocks that contain RSA certificates for CAs, and then you'd be good.  However:  1. We don't have archive and pruning in any release at the moment 2. Even if we had, it would've gone to 2.x stream and not to 1.x so no way to really use it.  So the only solution I see, is to... make Fabric have RSA again  ></body> </Action>
<Action id="70603" issue="46276" author="JIRAUSER21020" type="comment" created="2020-11-02 20:43:11.0" updateauthor="JIRAUSER21020" updated="2020-11-02 20:43:11.0"> <body><! CDATA We are facing the same issue with RSA certs only being supported under 1.4.x and not 2.x  Our company CA does not issue ECDSA certs, so we are stuck with 1.4 at the moment...  ></body> </Action>
<Action id="70606" issue="46276" author="denyeart" type="comment" body="Given there was a decision not to support RSA, and that the decision was in the official documentation since v1.0, I&apos;d suggest the correct path would be to open an RFC at  https://github.com/hyperledger/fabric-rfcs/  for adding RSA support. It should mention the rationale, but more importantly what is the proposed test and support approach, as I believe those were the considerations behind the prior decision." created="2020-11-02 23:07:56.0" updateauthor="denyeart" updated="2020-11-02 23:07:56.0"/>
<Action id="70660" issue="46276" author="JIRAUSER21018" type="comment" created="2020-11-11 12:27:10.0" updateauthor="JIRAUSER21018" updated="2020-11-11 12:27:10.0"> <body><! CDATA We have created the RFC:  https://github.com/hyperledger/fabric-rfcs/pull/36  ></body> </Action>
<Action id="70778" issue="46276" author="denyeart" type="comment" created="2020-11-21 12:44:48.0" updateauthor="denyeart" updated="2020-11-21 12:44:48.0"> <body><! CDATA Given that RSA CA was added to v2.3.0 and upcoming v2.2.2, and the fix was confirmed by  ~iocm  , I believe this issue can now be closed. Here's the text from the v2.3.0 release note:    {code:java} FAB-18308: peer and orderer - Restore support for MSPs that contain RSA certificate authorities While Fabric has never supported RSA for transaction signatures or validation, certificate authorities included in MSP definitions could be associated with RSA keys. This ability was inadvertently removed during the development of release 2.0 and prevented migration of some networks to a 2.x version. With these changes, version 2.x components will no longer panic when attempting to initialize MSPs that include CA certificates associated with RSA keys. {code}    ></body> </Action>
