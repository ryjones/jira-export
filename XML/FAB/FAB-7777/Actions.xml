<Action id="38761" issue="26884" author="denyeart" type="comment" created="2018-01-17 18:50:22.0" updateauthor="denyeart" updated="2018-02-16 11:26:48.0"> <body><! CDATA -----------FAB-3067----------- proposed adding *peer.ledger.state.couchDBConfig.autoDeployChaincodeIndexes* config option so that if an error like this was hit, the peer admin could suspend auto index deployment, and bring peer back up so that the chaincode instantiate transaction could be processed successfully without the index deployment.  This is fine for peer committing blocks, but without the index the peer may not be able to perform some chaincode queries.  The index would have to be deployed by some other means to make the peer fully capable of executing chaincode queries.  This may be sufficient if the error happened on a single peer, but if the index fails to be deployed due to invalid index json, it would fail on all peers in the network.  In that case a new chaincode installation package (new version) would need to be provided with fixed indexes, and instantiated on the channel.  The takeaway here is twofold:  1) Administrators of peers must pre-test all chaincode installation packages before installing the chaincode package on production peers, to protect against such scenarios. One would hope that this testing is performed regardless, but this new issue makes the pre-testing all the more critical.  2) Peer needs built-in protection against such index create failures rather than panic, as index creation is not needed for commits, and therefore index creation failure should not block peer's committer role.    -------FAB-7715------- and -------FAB-7863------- added couchdb index validation checks at chaincode packaging time, which improves the chance that index creation will succeed at runtime.  But there is still possibility that index create fails at runtime for unexpected reasons, potentially on a single peer's couchdb database. This work item will suppress the peer panic and simply log the error.  In future work item FAB-8268, a mechanism to re-process failed index create statements is proposed.        ></body> </Action>
<Action id="40125" issue="26884" author="denyeart" type="comment" created="2018-02-14 11:21:56.0" updateauthor="denyeart" updated="2018-02-16 11:28:55.0"> <body><! CDATA Initial CR proposed writing failed index create statements to another directory for re-processing:   https://gerrit.hyperledger.org/r/#/c/17425/   Current CR simply logs the error and proposes re-processing feature to be added in FAB-8268:   https://gerrit.hyperledger.org/r/#/c/17971/      ></body> </Action>
