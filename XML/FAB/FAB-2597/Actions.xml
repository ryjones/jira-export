<Action id="22654" issue="15164" author="smithbk" type="comment" body=" http://gerrit.hyperledger.org/r/8173  FAB-2597  Del cfssl prefix from REST APIs" created="2017-04-18 19:23:09.0" updateauthor="smithbk" updated="2017-04-18 19:23:09.0"/>
<Action id="22678" issue="15164" author="baohua" type="comment" created="2017-04-19 02:42:09.0" updateauthor="baohua" updated="2017-04-19 02:42:09.0"> <body><! CDATA I agree to remove the cfssl prefix, while suggest we keep the "api/v1" prefix for further upgrading. This is quite common in the RESTful API service.  ></body> </Action>
<Action id="22703" issue="15164" author="smithbk" type="comment" created="2017-04-19 11:48:19.0" updateauthor="smithbk" updated="2017-04-19 11:48:19.0"> <body><! CDATA http://www.lexicalscope.com/blog/2012/03/12/how-are-rest-apis-versioned/ has some interesting info on this When I look at the content at that link rather than just the author's beginning paragraph, I see a lot more variance.  My preference is that REST APIs can most often be made backwards compatible by modifying the body of a POST. For example, if I want a POST request to do something different, then I add a new option to the body of the POST. All of the fabric-ca-server APIs are POST requests with one exception: GET /info In that case, I would favor a simple query parm.  In the rare case where I can't use one of these schemes, I would just create a new URI with a different name and deprecate the other one if I want.  Some disadvantages I see to version numbers are: 1) They are not as flexible as other schemes because they are strictly linear.  Let's say I have an API which returns field F1.  In version 2, it returns fields F1 and F2.  And in version 3, it returns fields F1, F2, and F3.   Suppose further that returning these fields require some computation on the server.  Now, suppose I only want to return fields F1 and F3.  I can't do this with a version number, but I could do it with either a change to the body of a POST or a (or two) query parms on a GET. 2) Not self-documenting.  I have to read the documentation to map a version number to its semantics.     ></body> </Action>
<Action id="22719" issue="15164" author="mastersingh24" type="comment" created="2017-04-19 16:29:06.0" updateauthor="mastersingh24" updated="2017-04-19 16:29:06.0"> <body><! CDATA I agree with  ~baohua  for the following reasons:  1) In the history of the fabric project we have never been able to maintain backwards compatibility with a single API 2) I think having multiple versions is actually more clear especially if we add APIs (and perhaps even want to change APIs) 3) Combining 1) and 2), this allow us to release a new version of fabric-ca with an updated API while at the same time supporting old clients   ></body> </Action>
<Action id="22764" issue="15164" author="smithbk" type="comment" created="2017-04-20 13:56:06.0" updateauthor="smithbk" updated="2017-04-20 13:56:06.0"> <body><! CDATA OK, I changed http://gerrit.hyperledger.org/r/8173 to use the "/api/v1" prefix. For now, I will not be removing the "no prefix" endpoints because it would require changing a bunch of small changes to other client code. This can be cleaned up later after all SDKs are changed to use "/api/v1" prefixes.  ></body> </Action>
