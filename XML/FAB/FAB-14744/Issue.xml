<Issue id="38627" key="FAB-14744" number="14744" project="10002" reporter="balaji.viswanathan" creator="balaji.viswanathan" type="10001" summary="As a blockchain solution developer, I need platform capability to transfer private data between collections" priority="3" resolution="10001" status="6" created="2019-03-21 03:42:57.0" updated="2020-01-22 22:32:54.0" resolutiondate="2020-01-22 22:32:54.0" votes="0" watches="1" workflowId="50272"> <description><! CDATA In our solution, at the time of adding a private data on the ledger, we do not know the sub-set of peers it will need to be shared with. Hence, all new private data will be written to a single peer collection. The membership information is known only over time and then we need to share the private data with other peer(s) dynamically.  The expected effect (for that private data) is similar to expanding a collection membership with additional peers (i.e., new peers see the existing private data w/o any explicit txns performed by chaincode).  Option 1: 1 Collection created dynamically per key T1: Create CollectionK1 (peerA), Write K1 to CollectionK1 T2: Create CollectionK2 (peerB), Write K2 to CollectionK2 T3: Change Membership(CollectionK1) = peerA,peerB T4: Change Membership(CollectionK2) = peerA,peerB,peerC  K1 is visible to peerA and peerB. K2 is visible to peerA, peerB and peerC  Each collection will contain only 1 kv pair Cons: Management & Scalability?   With millions of state variables, will need to create 1 collection per kv pair.   Need to perform a chaincode instantiate/upgrade every time we change a collection membership (causing chaincode version bump and associated MVCC failures for unrelated in-flight txns)    i.e., Millions of collections, Millions of collection spec changes.  Option 2: Pre-defined collections and Transfer private data across them. CollectionA (peerA) CollectionAB (peerA,peerB) CollectionABC (peerA,peerB,peerC) CollectionBC (peerB,peerC)  T1: Write K1 to CollectionA T2: Write K2 to CollectionA T3: Transfer K1 from CollectionA to CollectionAB <-- peerB has access to K1 T4: Transfer K2 from CollectionA to CollectionABC <-- peerB & peerC have access to K2 T5: Transfer K1 from CollectionABC to CollectionBC <-- peerA looses access to K1     ></description> </Issue>
