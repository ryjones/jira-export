<Issue id="33013" key="FAB-11635" number="11635" project="10002" reporter="scottz" assignee="scottz" creator="scottz" type="10004" summary="fabric-test daily PTE tests stderr msgs for missing optional files" priority="3" resolution="10000" status="6" created="2018-08-17 17:50:03.0" updated="2019-03-19 11:13:09.0" resolutiondate="2018-11-20 14:33:26.0" votes="0" watches="1" workflowId="44214"> <description><! CDATA Some error msgs are confusing people that examine logs after automated test jobs. These seem to be msgs that can be ignored, because they are not actually indicative of (or causing) test failures. We should clean them up, at least in master branch, assuming there are no conditions that require them to be printed. # Can't find a suitable configuration file in this directory or any parent. Are you in the right directory?  Supported filenames: docker-compose.yml, docker-compose.yaml # ls: cannot access 'CITest/FAB-3832-4i/preconfig/channels/runCases*update*': No such file or directory     *+Probable Solution for #1+*: This error comes from executing a PTE test for the first time, when no network is running yet. The error msg comes from any typcial test_nl.sh script for virtually every PTE test, for example PTE/CITest/FAB-3832-4i/test_nl.sh. All the tests use the default docker-compose.yml filename, so none of them bother to specify the yml filename on the command line `./networkLauncher.sh -a down`. The solution is to fix the NL/cleanNetwork.sh shell script, to check if a docker-compose.yml or .yaml file exists; and if yes then call "docker-compose down" as usual to clean up a network, else (to cover all usecases) we can echo a line to stdout such as "cannot clean up any network; cannot find docker-compose.yaml file". Currently, when running a group of PTE tests, each one always tries to clean up any network leftover from previous test and then creates its own network. Obviously the first one will try to cleanup a network that does not exist - thus leading to the stderr msg.     *+Probable Solution for #2:+*  this is produced when certain optional files (for config updates for anchor peers) do not exist in the testcase. When inside PTE/CITest/scripts/test_channel.sh, a script used by virtually all PTE testcases, we could redirect stderr to /dev/null during the execution of the "ls" command (see below), since we know the files named '**update**' are optional. The subsequent lines in test_channel.sh obviously allow for the fact that there could be Probable Solution for #1no files listed, so it is ok to actually hide the stderr msg that is triggered by executing the "ls" command in line 43 of  https://gerrit.hyperledger.org/r/#/c/24477/4/tools/PTE/CITest/scripts/test_channel.sh|https://gerrit.hyperledger.org/r/#/c/24477/4/tools/PTE/CITest/scripts/test_channel.s   Change this from old (current):      runUpdate=`ls CITest/$PrecfgDir/preconfig/channels/runCases*update*`  Change to new:      runUpdate=`ls CITest/$PrecfgDir/preconfig/channels/runCases*update* 2>/dev/null`  Note: Similar enhancement could conceivably be made to other similar lines in this same script file, too, including the following, if it is determined that these could be optional too in any testcases:      runCreate=`ls CITest/$PrecfgDir/preconfig/channels/runCases*create`  and      runJoin=`ls CITest/$PrecfgDir/preconfig/channels/runCases*join*`  ></description> </Issue>
