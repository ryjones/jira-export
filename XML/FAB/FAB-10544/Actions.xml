<Action id="45714" issue="30885" author="scottz" type="comment" body="How often does this occur? How many days per week? How many tests per day?" created="2018-06-08 15:00:33.0" updateauthor="scottz" updated="2018-06-08 15:00:33.0"/>
<Action id="45784" issue="30885" author="sambhavdutt" type="comment" created="2018-06-11 13:40:41.0" updateauthor="sambhavdutt" updated="2018-06-11 13:40:41.0"> <body><! CDATA The unit tests are failing again , with the Gossip failure. This is happening once or maybe twice a week, but mainly with the same error which can be looked at. The latest fail is posted below, this has failed in the last build, was successful in the build before.  *fabric Commit: 8e98c25*   {code:java} *20:20:19* {color:#cdcd00}unit-tests_1  |{color} --- FAIL: TestLeaderYield (117.02s)*20:20:19* {color:#cdcd00}unit-tests_1  |{color} 	integration_test.go:156: p0 started its delivery service*20:20:19* {color:#cdcd00}unit-tests_1  |{color} 	integration_test.go:161: p0 stopped its delivery service*20:20:19* {color:#cdcd00}unit-tests_1  |{color} 	integration_test.go:171: p1 hasn't taken over leadership within 1m0s: -1*20:20:19* {color:#cdcd00}unit-tests_1  |{color} {color:#cd0000}2018-06-11 00:19:33.967 UTC  gossip/service  updateAnchors -> ERRO 07e{color} Tried joining channel A but our org( OrgMSP0 ), isn't among the orgs of the channel:  Org0  , aborting. {code}   *Build Log* https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/84/consoleFull  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/84/  ></body> </Action>
<Action id="45929" issue="30885" author="denyeart" type="comment" body="Fix not required for v1.2 per se, but let&apos;s keep this in the list to fix sooner than later." created="2018-06-14 13:22:31.0" updateauthor="denyeart" updated="2018-06-14 13:22:31.0"/>
<Action id="47656" issue="30885" author="sambhavdutt" type="comment" created="2018-07-23 14:32:01.0" updateauthor="sambhavdutt" updated="2018-07-23 14:32:01.0"> <body><! CDATA The unit-test is failing in the daily tests due to gossip errors, Noticed the following errors in this order. The unit-test failed in *fabric-unit-test-daily-master-x86_64* twice in a row.  *FABRIC COMMIT: 42ea3f5a*  {code:java} 20:27:35 unit-tests_1  | 2018-07-23 00:27:04.311 UTC  gossip/privdata  NewCoordinator -> WARN 001 Configuration key peer.gossip.pvtData.transientstoreMaxBlockRetention isn't set, defaulting to 1000 20:27:35 unit-tests_1  | 2018-07-23 00:27:04.318 UTC  gossip/state  directMessage -> ERRO 004 Got nil message via end-to-end channel, should not happen!  20:27:35 unit-tests_1  | 2018-07-23 00:27:20.586 UTC  gossip/state  handleStateRequest -> ERRO 08d cannot read block number 11 from ledger, because no block with seq = 11 found, skipping... 20:27:35 unit-tests_1  | 2018-07-23 00:27:20.586 UTC  gossip/state  handleStateRequest -> ERRO 08e cannot read block number 11 from ledger, because no block with seq = 11 found, skipping... 20:27:35 unit-tests_1  | 2018-07-23 00:27:20.587 UTC  gossip/state  requestBlocksInRange -> WARN 08f Wasn't able to process state response for blocks  11...11 , due to Received state transfer response without payload 20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateResponse 20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:470 20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).requestBlocksInRange 20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:662 20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy 20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:599 20:27:35 unit-tests_1  | runtime.goexit 20:27:35 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2361 20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).requestBlocksInRange 20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:665 20:27:35 unit-tests_1  | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).antiEntropy 20:27:35 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:599 20:27:35 unit-tests_1  | runtime.goexit 20:27:35 unit-tests_1  | 	/opt/go/src/runtime/asm_amd64.s:2361 20:27:35 unit-tests_1  | 2018-07-23 00:27:20.587 UTC  gossip/state  handleStateRequest -> ERRO 090 cannot read block number 11 from ledger, because no block with seq = 11 found, skipping... {code}  *Build Logs*  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/135/  https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/135/consoleFull   ></body> </Action>
<Action id="48303" issue="30885" author="sambhavdutt" type="comment" created="2018-08-02 15:53:12.0" updateauthor="sambhavdutt" updated="2018-08-02 15:53:12.0"> <body><! CDATA This is the latest observed fail in unit-tests-master due to the Gossip error,   *fabric Commit: 3f56d49*  {code:java} 20:22:51 unit-tests_1  | --- FAIL: TestLeaderYield (117.02s) 20:22:51 unit-tests_1  | 	integration_test.go:156: p0 started its delivery service 20:22:51 unit-tests_1  | 	integration_test.go:161: p0 stopped its delivery service 20:22:51 unit-tests_1  | 	integration_test.go:171: p1 hasn't taken over leadership within 1m0s: -1 20:22:51 unit-tests_1  | 2018-08-02 00:22:04.614 UTC  gossip/service  updateAnchors -> ERRO 088 Tried joining channel A but our org( OrgMSP0 ),  {code}  *Build Log*  https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/146/consoleFull  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/146/   ></body> </Action>
<Action id="48733" issue="30885" author="sambhavdutt" type="comment" created="2018-08-10 18:47:41.0" updateauthor="sambhavdutt" updated="2018-08-10 18:47:41.0"> <body><! CDATA There is another unit-test failure observed in the day's build due to Gossip test timeouts in fabric-unit-test-daily-master-x86_64,  *fabric commit: b0cb0a4*   {code:java} 20:25:04 unit-tests_1  | goroutine 24584  select : 20:25:04 unit-tests_1  | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).periodicalPurgeUnusedIdentities(0xc423587340) 20:25:04 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:91 +0x11c 20:25:04 unit-tests_1  | created by github.com/hyperledger/fabric/gossip/identity.NewIdentityMapper 20:25:04 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:85 +0x228 20:25:04 unit-tests_1  |  20:25:04 unit-tests_1  | go<<<TestConnectToAnchorPeers>>> 20:25:04 unit-tests_1  | --- FAIL: TestConnectToAnchorPeers (367.07s) 20:25:04 unit-tests_1  | 	assertions.go:247:   	Error Trace:	gossip_test.go:1530 20:25:04 unit-tests_1  | 		 	            	 			asm_amd64.s:2361 20:25:04 unit-tests_1  | 		 	Error:      	Didn't stop within a timely manner 20:25:04 unit-tests_1  | 		 	Test:       	TestConnectToAnchorPeers 20:25:04 unit-tests_1  | 	assertions.go:247:   	Error Trace:	gossip_test.go:1590 20:25:04 unit-tests_1  | 		 	            	 			gossip_test.go:474 20:25:04 unit-tests_1  | 		 	Error:      	Timeout expired! 20:25:04 unit-tests_1  | 		 	Test:       	TestConnectToAnchorPeers 20:25:04 unit-tests_1  | 	assertions.go:247:   	Error Trace:	gossip_test.go:1590 {code}  *Build Log* https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-unit-test-daily-master-x86_64/155/  https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-daily-master-x86_64/155/consoleFull  ></body> </Action>
<Action id="49385" issue="30885" author="sambhavdutt" type="comment" created="2018-08-26 15:03:23.0" updateauthor="sambhavdutt" updated="2018-08-26 15:03:23.0"> <body><! CDATA fabric-merge-x86_64 failed in gossip tests, Copying the errors below,  *fabric Commit: 8df055572b21286b7a96467d512e3ef054b786a2*  {code:java} 08:46:02 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:960 +0x1b5 08:46:02 unit-tests_1  | created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).connect 08:46:02 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/--- FAIL: TestEndedGoroutines (432.59s) 08:46:02 unit-tests_1  | 	assertions.go:247:   	Error Trace:	gossip_test.go:1494 08:46:02 unit-tests_1  | 		 	            	 			gossip_test.go:1365 08:46:02 unit-tests_1  | 		 	Error:      	Goroutine(s) haven't ended: 08:46:02 unit-tests_1  | 		 	Test:       	TestEndedGoroutines 08:46:02 unit-tests_1  | 		 	Messages:   	 sync.runtime_Semacquire(0xc4223a2494) 	/opt/go/src/runtime/sema.go:56 +0x39 sync.(*RWMutex).RLock(0xc4223a2488) 	/opt/go/src/sync/rwmutex.go:50 +0x49 github.com/hyperledger/fabric/gossip/comm.(*connectionStore).getConnection(0xc4223a2460, 0xc426eee510, 0x0, 0x0, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/conn.go:57 +0x65 github.com/hyperledger/fabric/gossip/comm.(*commImpl).sendToEndpoint(0xc420ab57a0, 0xc426eee510, 0xc423f1ec10, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:244 +0x1d0 github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send.func1(0xc420ab57a0, 0xc426eee510, 0xc423f1ec10) 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:231 +0x44 created by github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:230 +0x1ac  08:46:02 unit-tests_1  | FAIL {code}  *Build Logs*  https://jenkins.hyperledger.org/view/birds-eye/job/fabric-merge-x86_64/4390/consoleFull  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-x86_64/4390/   ></body> </Action>
<Action id="49921" issue="30885" author="sambhavdutt" type="comment" created="2018-09-05 19:49:49.0" updateauthor="sambhavdutt" updated="2018-09-05 19:49:49.0"> <body><! CDATA In the *fabric-merge-x86_64* job, unit-test is failing consistently in gossip tests,   *fabric commit: fb2ce97a848ac369457884d860b11c8e4a948377* {code:java} 15:33:18 unit-tests_1  | goroutine 594  semacquire, 19 minutes : 15:33:18 unit-tests_1  | sync.runtime_Semacquire(0xc4202b7f2c) 15:33:18 unit-tests_1  | 	/opt/go/src/runtime/sema.go:56 +0x39 15:33:18 unit-tests_1  | sync.(*WaitGroup).Wait(0xc4202b7f20) 15:33:18 unit-tests_1  | 	/opt/go/src/sync/waitgroup.go:129 +0x72 15:33:18 unit-tests_1  | github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).Stop(0xc42031c000) 15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:781 +0x1f7 15:33:18 unit-tests_1  | github.com/hyperledger/fabric/gossip/service.(*gossipServiceImpl).Stop(0xc4204c0120) 15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:364 +0x4c0 15:33:18 unit-tests_1  | github.com/hyperledger/fabric/gossip/service.stopPeers.func1(0xc4202b7f00, 0x1, 0x10e95e0, 0xc4204c0120) 15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:604 +0x5a 15:33:18 unit-tests_1  | created by github.com/hyperledger/fabric/gossip/service.stopPeers 15:33:18 unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:602 +0x99 15:33:18 unit-tests_1  | FAIL	github.com/hyperledger/fabric/gossip/service	1200.042s 15:33:51 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state	30.382s	coverage: 80.3% of statements 15:33:53 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state/mocks	0.006s	coverage: 58.8% of statements 15:33:59 unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/util	4.010s	coverage: 79.1% of statements 15:34:00 unit-test_unit-tests_1 exited with code 1 15:34:00 Stopping couchdb                ...  {code}  *Build Logs*  https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/4458/consoleFull  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-x86_64/4460/  ></body> </Action>
<Action id="50209" issue="30885" author="denyeart" type="comment" body=" ~sambhavdutt   ~C0rWin   ~yacovm  Is this still happening? Any plan?" created="2018-09-11 04:02:53.0" updateauthor="denyeart" updated="2018-09-11 04:02:53.0"/>
<Action id="50773" issue="30885" author="denyeart" type="comment" body=" ~C0rWin   ~yacovm  Do you want to investigate more, move to FixVersion v1.4.0, or Withdraw/Close?" created="2018-09-19 20:20:17.0" updateauthor="denyeart" updated="2018-09-19 20:20:17.0"/>
<Action id="50798" issue="30885" author="c0rwin" type="comment" created="2018-09-19 21:11:57.0" updateauthor="c0rwin" updated="2018-09-19 21:13:38.0"> <body><! CDATA  ~denyeart  I'd personally would prefer to close this one is it's scope too broad IMO, since ppl kept posting here everything. While some of reported issues has been taken care already. //cc  ~yacovm   PS. For instance one reported in description has been taken care of here: https://gerrit.hyperledger.org/r/#/c/26129/  ></body> </Action>
<Action id="50804" issue="30885" author="denyeart" type="comment" created="2018-09-19 21:43:40.0" updateauthor="denyeart" updated="2018-09-19 21:43:40.0"> <body><! CDATA  ~sambhavdutt  closing this one.  Please open *separate* Jira issue for each unique unit test failure that happens multiple times, so that they can be tracked down and fixed one by one.  ></body> </Action>
<Action id="50806" issue="30885" author="c0rwin" type="comment" created="2018-09-19 22:04:46.0" updateauthor="c0rwin" updated="2018-09-19 22:04:46.0"> <body><! CDATA  ~denyeart ,  ~sambhavdutt  please see: FAB-12068, FAB-12067, FAB-12066 and FAB-12065. Created them as a bug, maybe we need to group them under one story or epic wdyt  ~denyeart ?   ></body> </Action>
<Action id="50808" issue="30885" author="denyeart" type="comment" created="2018-09-19 22:22:52.0" updateauthor="denyeart" updated="2018-09-19 22:22:52.0"> <body><! CDATA  ~C0rWin  thanks.  now we can comment on each one whenever we see them, to try to understand relative frequencies/priorities.  I've labeled each as *flakes* , so that we can query to find all the open unit test flakes.  I think that's all the grouping we need.  ></body> </Action>
