<Issue id="18566" key="FAB-4931" number="4931" project="10002" reporter="suryalnvs" assignee="wlahti" creator="suryalnvs" type="10004" summary="setting CORE_LOGGING_LEVEL to error is not getting reflected in the other peer modules (like gossip, ledger) log level" priority="3" resolution="10000" status="6" created="2017-06-22 15:09:03.0" updated="2018-07-20 14:13:33.0" resolutiondate="2017-07-02 19:43:51.0" votes="0" watches="5" workflowId="39231" security="10001"> <description><! CDATA When launching the network, used CORE_LOGGING_LEVEL=ERROR in docker-compose file which is not getting reflected for peer modules like gossip, ledger.  *Steps:*  1) Add CORE_LOGGING_LEVEL=ERROR to peer environment variables in the docker-compose.yml,  launch the network and then run e2e script  2) Check for the logs of any peer, once the test is finished or during the test in another terminal by using the command *docker logs -f peer0.org1.example.com*  3) Observe that the logs should contain the information as shown below {code}  2017-06-21 17:02:17.465 UTC  kvledger  Commit -> INFO 2025 Channel  mychannel0 : Created block  3405  with 10 transaction(s) 2017-06-21 17:02:18.411 UTC  kvledger  Commit -> INFO 2026 Channel  mychannel0 : Created block  3406  with 10 transaction(s) 2017-06-21 17:02:19.074 UTC  kvledger  Commit -> INFO 2027 Channel  mychannel0 : Created block  3407  with 10 transaction(s) 2017-06-21 17:02:19.390 UTC  kvledger  Commit -> INFO 2028 Channel  mychannel0 : Created block  3408  with 10 transaction(s) 2017-06-21 17:02:20.078 UTC  gossip/state  directMessage -> WARN 2029 Received state transfer request for channel mychannel1 while expecting channel mychannel0 skipping request... 2017-06-21 17:02:20.084 UTC  gossip/state  handleStateResponse -> WARN 202a Payload with sequence number 3397 was received earlier 2017-06-21 17:02:20.086 UTC  gossip/state  handleStateResponse -> WARN 202b Payload with sequence number 3398 was received earlier 2017-06-21 17:02:20.096 UTC  gossip/state  handleStateResponse -> WARN 202c Payload with sequence number 3399 was received earlier 2017-06-21 17:02:20.106 UTC  gossip/state  handleStateResponse -> WARN 202d Payload with sequence number 3400 was received earlier 2017-06-21 17:02:20.108 UTC  gossip/state  handleStateResponse -> WARN 202e Payload with sequence number 3401 was received earlier 2017-06-21 17:02:20.111 UTC  gossip/state  handleStateResponse -> WARN 202f Payload with sequence number 3402 was received earlier 2017-06-21 17:02:20.113 UTC  gossip/state  handleStateResponse -> WARN 2030 Payload with sequence number 3403 was received earlier 2017-06-21 17:02:20.116 UTC  gossip/state  handleStateResponse -> WARN 2031 Payload with sequence number 3404 was received earlier 2017-06-21 17:02:20.123 UTC  gossip/state  handleStateResponse -> WARN 2032 Payload with sequence number 3405 was received earlier 2017-06-21 17:02:20.126 UTC  gossip/state  handleStateResponse -> WARN 2033 Payload with sequence number 3406 was received earlier 2017-06-21 17:02:20.176 UTC  gossip/state  handleStateResponse -> WARN 2034 Payload with sequence number 3407 was received earlier 2017-06-21 17:02:20.176 UTC  gossip/state  directMessage -> WARN 2035 Received state transfer request for channel mychannel1 while expecting channel mychannel0 skipping request... 2017-06-21 17:02:20.178 UTC  kvledger  Commit -> INFO 2036 Channel  mychannel1 : Created block  3396  with 10 transaction(s) 2017-06-21 17:02:20.214 UTC  kvledger  Commit -> INFO 2037 Channel  mychannel1 : Created block  3397  with 10 transaction(s) 2017-06-21 17:02:20.249 UTC  kvledger  Commit -> INFO 2038 Channel  mychannel1 : Created block  3398  with 10 transaction(s) 2017-06-21 17:02:20.286 UTC  kvledger  Commit -> INFO 2039 Channel  mychannel1 : Created block  3399  with 10 transaction(s) 2017-06-21 17:02:20.380 UTC  kvledger  Commit -> INFO 203a Channel  mychannel1 : Created block  3400  with 10 transaction(s)  {code} which implies that default logging level is still in place even after setting the CORE_LOGGING_LEVEL=ERROR     *Expected:*  By setting CORE_LOGGING_LEVEL=ERROR should be reflected to all the peer modules.  *Default:*  peer: info cauthdsl: warning gossip: warning ledger: info msp: warning policies: warning grpc: error  ></description> </Issue>
