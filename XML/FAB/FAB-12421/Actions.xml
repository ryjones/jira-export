<Action id="52097" issue="34603" author="latitiah" type="comment" created="2018-10-11 12:49:35.0" updateauthor="latitiah" updated="2018-10-11 12:52:22.0"> <body><! CDATA The Timeout class may not be checking for the values before waiting for the expected timeout value. The following log from CI shows a jump in the timevalues between checks. For example,  04:07:29 2018-10-10 08:07:15.903 UTC  nodeCmd  func8 -> INFO 0fe Starting profiling server with listenAddress = 0.0.0.0:6060 04:07:29 2018-10-10 08:07:16.292 UTC  nodeCmd  func8 -> INFO 0fe Starting profiling server with listenAddress = 0.0.0.0:6060 04:07:29 2018-10-10 08:07:18.684 UTC  nodeCmd  func8 -> INFO 100 Starting profiling server with listenAddress = 0.0.0.0:6060 {color:#4C9AFF}04:07:29{color} 2018-10-10 08:07:17.321 UTC  nodeCmd  func8 -> INFO 102 Starting profiling server with listenAddress = 0.0.0.0:6060 {color:#4C9AFF}04:12:29{color} 2018-10-10 08:07:15.903 UTC  nodeCmd  func8 -> INFO 0fe Starting profiling server with listenAddress = 0.0.0.0:6060 04:12:29 2018-10-10 08:07:16.292 UTC  nodeCmd  func8 -> INFO 0fe Starting profiling server with listenAddress = 0.0.0.0:6060 04:12:30 2018-10-10 08:07:18.684 UTC  nodeCmd  func8 -> INFO 100 Starting profiling server with listenAddress = 0.0.0.0:6060 04:12:30 2018-10-10 08:07:17.321 UTC  nodeCmd  func8 -> INFO 102 Starting profiling server with listenAddress = 0.0.0.0:6060 04:12:30       Assertion Failed: The kafka containers are not ready in the allotted time (300 seconds)   ></body> </Action>
<Action id="52324" issue="34603" author="sambhavdutt" type="comment" created="2018-10-16 14:43:11.0" updateauthor="sambhavdutt" updated="2018-10-16 14:44:35.0"> <body><! CDATA I noticed these errors in the last Behave daily test.  1. CouchDB_Index *FAB 7254, 7255, 7256, 7260, 7261, 7262, 7269 *  {code:java} The expected chaincode container 7587c2fcd10511e8b828fa163e433785-peer0.org1.example.com-mycc1-0 is not running {code}  *FAB-7264*  {code:java} CouchDB_index.Testing Fabric CouchDB indexing.FAB-7264: Test CouchDB indexing using CC upgrade with marbles chaincode using GOLANG with 3 channels and 1 upgrade -- @1.1   Failing step: Then a user receives a response containing no_usable_index ... failed in 0.001s {code}   *Build Logs* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-master-x86_64/57/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/  2. Chaincodes Testing *FAB-5971*  {code:java} chaincodes.Chaincodes Testing.FAB-5791: Test API in SHIM interface using marbles02 and shimApiDriver chaincodes for kafka orderer couchdb db NODE lang -- @1.4   The expected chaincode container 38cb6e1cd11a11e8b828fa163e433785-peer0.org1.example.com-mycc-0 is not running Scenario Outline: FAB-5791: Test API in SHIM interface using marbles02 and shimApiDriver chaincodes for kafka orderer couchdb db NODE lang -- @1.4  Given I have a bootstrapped fabric network of type kafka ... passed in 27.620s When an admin sets up a channel ... passed in 50.955s And I vendor "NODE" packages for fabric-based chaincode at "../chaincodes/shimApiDriver/node" ... passed in 2.243s When an admin deploys chaincode at path "../../fabric-test/chaincodes/marbles/node" with args  ""  with name "mycc" with language "NODE" ... failed in 623.490s {code}  *Build Log* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-master-x86_64/57/testReport/chaincodes/Chaincodes%20Testing/FAB_5791__Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_kafka_orderer_couchdb_db_NODE_lang_____1_4_/  3. Fabric-CA Service , Interoperability Test *FAB-6489*  {code:java} fabric-ca.Fabric-CA Service.FAB-6489: Interoperability Test using kafka based orderer -- @1.2  The expected chaincode container c77fa1d0d11c11e8b828fa163e433785-peer0.org1.example.com-mycc-0 is not running  @interop @daily Scenario Outline: FAB-6489: Interoperability Test using kafka based orderer -- @1.2  Given I have a bootstrapped fabric network of type kafka using state-database couchdb with tls ... passed in 35.506s And I use the CLI interface ... passed in 0.001s And I enroll the following users using fabric-ca ... passed in 114.433s | username | organization     | password | role   | certType | | latitia  | org1.example.com | h3ll0    | admin  | x509     | | scott    | org2.example.com | th3r3    | member | x509     | | adnan    | org1.example.com | wh@tsup  | member | x509     | When an admin sets up a channel ... passed in 54.432s And an admin deploys chaincode at path "../../fabric-test/chaincodes/example02/node" with args  "init","a","1000","b","2000"  with name "mycc" with language "NODE" ... failed in 630.307s {code}  *Build Logs* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-master-x86_64/57/testReport/fabric-ca/Fabric-CA%20Service/FAB_6489__Interoperability_Test_using_kafka_based_orderer_____1_2_/  4. The Orderer Service and Peer Service seem to be fine in the console output (Pleasecorrect me if I'm wrong) but the xml files are not generated somehow and hence not displayed in the TestResultsAnalyzer.     ></body> </Action>
<Action id="52340" issue="34603" author="adnanchoudhury" type="comment" created="2018-10-16 19:48:30.0" updateauthor="adnanchoudhury" updated="2018-10-16 19:48:30.0"> <body><! CDATA The CouchDB behave test failures are of two categories: 1) Any test with Node chaincodes are failing to bring up the CC container 2) The tests that search for "no usable index" are failing due to the recent CouchDB upgrade.  They look like two separate issues, Created two separate jiras to track. FAB-12493 FAB-12494    ></body> </Action>
<Action id="52469" issue="34603" author="latitiah" type="comment" created="2018-10-19 21:54:32.0" updateauthor="latitiah" updated="2018-10-19 21:56:07.0"> <body><! CDATA  ~sambhavdutt : #4 in your list of behave failures is also a separate issue.  Behave is crashing, thus the xml files are not generated. There are 2 issues that are open to address the test failure that causes the crash and a separate issue for not giving a false positive result.   FAB-10805 - is for handling Memory allocation.  FABCI-155 - is for erroring out when behave crashes.  I'd like this issue to not be a catch-all for behave failures, otherwise the actual cause for the failures can get lost - #2 and #3 seem like possibilities for this intermittent Timeout error, but we need to triage them to be sure.  ></body> </Action>
<Action id="62431" issue="34603" author="scottz" type="comment" created="2019-07-30 19:54:23.0" updateauthor="scottz" updated="2019-07-30 19:54:23.0"> <body><! CDATA Lately, not seeing this. Longterm, behave tests framework is being deprecated, so we can close this.  ></body> </Action>
