<Issue id="16117" key="FAB-3520" number="3520" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Eventer doesn&apos;t trigger subsequent config updates" priority="3" resolution="10000" status="6" created="2017-04-29 18:27:47.0" updated="2018-07-20 14:12:28.0" resolutiondate="2017-04-30 23:38:30.0" votes="0" watches="1" workflowId="38230"> <description><! CDATA There is a bug in the  eventer | https://github.com/hyperledger/fabric/blob/master/gossip/service/eventer.go#L69-L90  code: {code} func (ce *configEventer) ProcessConfigUpdate(config Config) { 	logger.Debugf("Processing new config for channel %s", config.ChainID())  	if ce.lastConfig != nil && reflect.DeepEqual(ce.lastConfig.orgMap, config.Organizations()) { 		logger.Debugf("Ignoring new config for channel %s because it contained no anchor peer updates", config.ChainID()) 		return 	}  	var newAnchorPeers   *peer.AnchorPeer 	for _, group := range config.Organizations() { 		newAnchorPeers = append(newAnchorPeers, group.AnchorPeers()...) 	}  	newConfig := &configStore{ 		orgMap:      config.Organizations(), 		anchorPeers: newAnchorPeers, 	} 	ce.lastConfig = newConfig  	logger.Debugf("Calling out because config was updated for channel %s", config.ChainID()) 	ce.receiver.configUpdated(config) } {code}  The first config's orgMap is updated to be the *config.Organizations()*, but that object is the same object after the config updates, just with different content.  The simple test below proves it: {code} 	if ce.lastConfig != nil && reflect.DeepEqual(ce.lastConfig.orgMap, config.Organizations()) { 		fmt.Println("<<<", config.Organizations(), ce.lastConfig.orgMap) 		logger.Debugf("Ignoring new config for channel %s because it contained no anchor peer updates", config.ChainID()) 		return 	} {code} peer0's log prints: {quote} <<< map Org0MSP:0xc42160dc80 Org1MSP:0xc42160dce0  map Org0MSP:0xc42160dc80 Org1MSP:0xc42160dce0  {quote}  This bug prevents an update of anchor peers, namely as done in the e2e.   ></description> </Issue>
