<Issue id="43509" key="FAB-17170" number="17170" project="10002" reporter="sykesm" assignee="jyellick" creator="sykesm" type="10004" summary="Package metadata must be carried through to external builder unmodified" priority="3" resolution="10000" status="6" created="2019-12-02 15:45:42.0" updated="2019-12-12 03:12:03.0" resolutiondate="2019-12-12 03:12:03.0" votes="0" watches="2" workflowId="57252"> <description><! CDATA I was looking through the code and it appears that the {{PackageMetadata}} structure in {{internal/peer/lifecycle/chaincode/package.go}} is defined as: {code} // PackageMetadata holds the path and type for a chaincode package type PackageMetadata struct { 	Path  string `json:"Path"` 	Type  string `json:"Type"` 	Label string `json:"Label"` } {code}  In the {{externalbuilder}} package, we reference the {{ChaincodePackageMetadata}} structure from {{core/chaincode/persistence/chaincode_package.go}}. This is defined as: {code} // ChaincodePackageMetadata contains the information necessary to understand // the embedded code package. type ChaincodePackageMetadata struct { 	Type  string `json:"type"` 	Path  string `json:"path"` 	Label string `json:"label"` } {code}  Since JSON is case sensitive, the case sensitivity may be a problem when using the same external builder implementation for legacy and new lifecycle models.  An additional issue is that extra keys in the metadata will be lost when round-tripping the {{persistence.ChaincodePackageMetadata}} in the external builder {{BuildContext}}.  It is extremely important that we do not modify the metadata file provided in the chaincode package when using the external builder.  /cc  ~jyellick   ></description> </Issue>
