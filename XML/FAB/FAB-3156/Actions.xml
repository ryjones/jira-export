<Action id="22694" issue="15743" author="elli-androulaki" type="comment" created="2017-04-19 09:20:16.0" updateauthor="elli-androulaki" updated="2017-04-19 09:20:16.0"> <body><! CDATA This may only require a review of existing code to ensure that this check takes place.  ~muralisr  retrieves already the chaincode instalaltion referring to a chain based on the most recently registered chaincode information on the chain (version, name, ccInvocation policy, and owners).    ></body> </Action>
<Action id="22705" issue="15743" author="mne" type="comment" created="2017-04-19 12:10:59.0" updateauthor="mne" updated="2017-04-19 12:10:59.0"> <body><! CDATA in lscc.go, getCCCode() uses ValidateCC to check the package on disk vs the one referenced on the chain: {noformat} 	//this is the big test and the reason every launch should go through 	//getChaincode call. We validate the chaincode entry against the 	//the chaincode in FS 	if err = ccpack.ValidateCC(cd); err != nil { 		return nil, nil, nil, InvalidCCOnFSError(err.Error()) 	} {noformat}  ></body> </Action>
<Action id="22775" issue="15743" author="elli-androulaki" type="comment" body="Link to related pending CR (https://gerrit.hyperledger.org/r/#/c/8313/)" created="2017-04-20 20:26:13.0" updateauthor="elli-androulaki" updated="2017-04-20 20:26:13.0"/>
<Action id="23082" issue="15743" author="binhn" type="comment" body=" ~ellaki  We only support the latest version instantiated on the channel, so why would we allow specifying the version on the proposal. That should have been the bug, and we can just document that the version is ignored in 1.0." created="2017-04-27 17:29:17.0" updateauthor="binhn" updated="2017-04-27 17:29:17.0"/>
<Action id="23392" issue="15743" author="muralisr" type="comment" created="2017-05-04 20:11:55.0" updateauthor="muralisr" updated="2017-05-04 20:14:18.0"> <body><! CDATA  ~ellaki  lets separate two issues out for clarity. *Issue 1 -  the user to specify version in invoke and check lscc against that* don't need (see  ~binhn  comment above)  *Issue 2 - To summarize the second (main) issue from  ~ellaki  description... fingerprint checks of chaincode against installed chaincodes during Invoke time*  Currently we don't do fingerprint checks of chaincode for each Invoke. We only do it while launching a chaincode.  A bad peer  P2, knowing a chaincode name/version on Channel A , can instantiate a different chaincode with same name/version on Channel B.  It will be nice if all committers can check the chaincode hash etc against the actual installed chaincode but we cannot do that as not all committers will have the CC installed. Hence, such an instantiation will pass and the CC with same name/version but different hash will be on Channel B. Now both the good peer P1 and bad peer P2 can field invokes to the chaincode on Channel B with different chaincodes - if we don't do hash checks.   Doing the check is simple enough but doing it efficiently means we don't read from the FS everytime.... some cache management is necessary.     ></body> </Action>
<Action id="23679" issue="15743" author="christopherferris" type="comment" body="https://gerrit.hyperledger.org/r/#/c/8313/" created="2017-05-10 18:23:18.0" updateauthor="christopherferris" updated="2017-05-10 18:23:18.0"/>
