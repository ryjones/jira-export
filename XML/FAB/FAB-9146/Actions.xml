<Action id="46677" issue="28874" author="sykesm" type="comment" created="2018-06-28 13:37:09.0" updateauthor="sykesm" updated="2018-06-28 13:37:09.0"> <body><! CDATA The race is in gossip and does not present itself when running the test in isolation. (Oh yeah, the test can't be run in isolation because it assumes it's running after another test called the Initialize method.) Running the test multiple times also fails (with -count n) because the chain is created with a static name and the test verifies only a single channel exists at the end of the test. {code:java} 2018-06-28 09:35:29.863 EDT  gossip/state  NewGossipStateProvider -> INFO 012 Updating metadata information, current ledger sequence is at = 0, next expected block is = 1 ================== WARNING: DATA RACE Write at 0x00c4201c8000 by goroutine 106:   runtime.mapassign_faststr()       /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:694 +0x0   github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Set()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:772 +0xc6   github.com/hyperledger/fabric/vendor/github.com/spf13/viper.Set()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:768 +0x72   github.com/hyperledger/fabric/core/peer.setupPeerFS()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/peer/configtx_test.go:41 +0xec   github.com/hyperledger/fabric/core/peer.TestCreateChainFromBlock()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/peer/peer_test.go:90 +0x53   testing.tRunner()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d  Previous read at 0x00c4201c8000 by goroutine 67:   runtime.mapaccess2_faststr()       /usr/local/Cellar/go/1.10.3/libexec/src/runtime/hashmap_fast.go:261 +0x0   github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).find()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:628 +0x16a   github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).Get()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:404 +0x106   github.com/hyperledger/fabric/vendor/github.com/spf13/viper.(*Viper).GetDuration()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:481 +0x4c   github.com/hyperledger/fabric/vendor/github.com/spf13/viper.GetDuration()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/spf13/viper/viper.go:479 +0x5e   github.com/hyperledger/fabric/gossip/util.GetDurationOrDefault()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/util/misc.go:177 +0x87   github.com/hyperledger/fabric/gossip/discovery.getReconnectInterval()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:1000 +0x51   github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).periodicalReconnectToDead()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:606 +0x35e{code}  ></body> </Action>
<Action id="46708" issue="28874" author="sykesm" type="comment" body="https://gerrit.hyperledger.org/r/23831" created="2018-06-28 20:04:02.0" updateauthor="sykesm" updated="2018-06-28 20:04:02.0"/>
