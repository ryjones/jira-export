<Issue id="15505" key="FAB-2926" number="2926" project="10002" reporter="passkit" assignee="wlahti" creator="passkit" type="10004" summary="Panic thrown if no GOPATH env on chaincode installer" priority="4" resolution="10000" status="6" created="2017-03-29 18:50:30.0" updated="2018-07-20 14:12:05.0" resolutiondate="2017-05-25 11:22:48.0" votes="0" watches="2" workflowId="37868"> <description><! CDATA {code} panic: runtime error: index out of range  goroutine 1  running : github.com/hyperledger/fabric/core/chaincode/platforms/golang.(*Platform).ValidateSpec(0x12d06f8, 0xc4202edb00, 0x12d06f8, 0x0) 	/go/src/github.com/hyperledger/fabric/core/chaincode/platforms/golang/platform.go:87 +0x34b {code}  Line 87: {{gopath = filepath.SplitList(gopath)\ 0\ }} assumes gopath string is not empty.  {code} //Treat empty scheme as a local filesystem path 	if path.Scheme == "" { 		gopath := os.Getenv("GOPATH") 		// Only take the first element of GOPATH 		gopath = filepath.SplitList(gopath) 0  		pathToCheck := filepath.Join(gopath, "src", spec.ChaincodeId.Path) 		exists, err := pathExists(pathToCheck) 		if err != nil { 			return fmt.Errorf("Error validating chaincode path: %s", err) 		} 		if !exists { 			return fmt.Errorf("Path to chaincode does not exist: %s", spec.ChaincodeId.Path) 		} 	} {code}  Feels like this is hardcoded for convenience, but should provide a friendly warning if not GOPATH is not set.   Command line prompts and other documentation should specify that the chaincode path (-p) parameter should be provided relative to the GOPATH   ></description> </Issue>
