<Issue id="20158" key="FAB-5756" number="5756" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10003" summary="Extend private data message with additional information required by ledger" priority="3" resolution="10000" status="6" created="2017-08-14 08:06:21.0" updated="2018-07-20 14:14:05.0" resolutiondate="2017-08-14 21:24:08.0" votes="0" watches="1" workflowId="39729"> <description><! CDATA At the moment FAB-4976 and subsequent  commit|https://gerrit.hyperledger.org/r/#/c/12177/  added following structures into ledger APIs:  {code} 	// GetPvtDataAndBlockByNum returns the block and the corresponding pvt data. 	// The pvt data is filtered by the list of 'ns/collections' supplied 	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum 	GetPvtDataAndBlockByNum(blockNum uint64, filter PvtNsCollFilter) (*BlockAndPvtData, error) 	// GetPvtDataByNum returns only the pvt data  corresponding to the given block number 	// The pvt data is filtered by the list of 'ns/collections' supplied in the filter 	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum 	GetPvtDataByNum(blockNum uint64, filter PvtNsCollFilter) (  *TxPvtData, error) 	// CommitWithPvtData commits the block and the corresponding pvt data in an atomic operation 	CommitWithPvtData(blockAndPvtdata *BlockAndPvtData) error {code}   Which operates on structures   {code} // TxPvtData encapsulates the transaction number and pvt write-set for a transaction type TxPvtData struct { 	SeqInBlock uint64 	WriteSet   *rwset.TxPvtReadWriteSet }  // BlockAndPvtData encapsultes the block and a map that contains the tuples <seqInBlock, *TxPvtData> // The map is expected to contain the entries only for the transactions that has associated pvt data type BlockAndPvtData struct { 	Block        *common.Block 	BlockPvtData map uint64 *TxPvtData } {code}  While {{TxPvtData}} has to be replicated we need to add additional information into message, such as {{SeqInBlock}}. Hence there is a need to add new message type into protobuf to capture this information during replication, e.g.:  {code} // PvtPayload augments private rwset data and tx index // inside the block message PvtDataPayload { uint64 tx_seq_in_block = 1; bytes payload = 2; } {code}  This message will be serialized into payload of private data field:  {code} // Payload contains a block message Payload { uint64 seq_num              = 1; bytes data                  = 2; repeated bytes private_data = 3; } {code}  ></description> </Issue>
