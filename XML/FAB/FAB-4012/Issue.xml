<Issue id="16862" key="FAB-4012" number="4012" project="10002" reporter="nishi" assignee="kchristidis" creator="nishi" type="10004" summary="failing to recognize newly elected kafka leader orderer fails to process a transaction" priority="3" resolution="10000" status="6" created="2017-05-18 15:06:26.0" updated="2018-07-20 14:12:50.0" resolutiondate="2017-06-09 19:24:29.0" votes="0" watches="3" workflowId="38571"> <description><! CDATA commit levels: fabric-sdk-node *8e878750e8d9d4a213e976eceb57699393f74aeb* fabric *217b8f60c625a6ffaddd3219bd60baca415e2b7c*  When we were testing fabric-sdk-node e2e scneario with a docker network based on docker-compose-e2e.yaml file (attached here)  Following scenario failed during our kafka broker testing.  1. Bring up the network. (1 orderer, 3 kafka brokers, 3 zoo-keepers, 2 org with 2 peer each with TLS) 2. Send a invoke transaction 3. Query yields successful results as expected 4. Now identify leader of kafka cluster, from logs in our scenario it was broker1 i.e. kafka0 (kafka0:1, kafka1:2, kafka2: 3) 5. Pause all kafka brokers in the order below  1. docker pause kafka1 2. docker pause kafka2 3. docker pause kafka0 (leader stopped at end) 6. Wait 30 seconds 7. docker unpause kafka1(non-leader) 8. Issue a transaction  Expected Result:  Kafka1 to be elected as leader Transaction to complete successfully  Actual Result: Transaction fails  "error:  Orderer.js : sendBroadcast - reject with SERVICE_UNAVAILABLE not ok 10 Failed to send transaction and get notifications within the timeout"  Orderer Logs: {code:java} "licy=&{0xc420d79380 1  0xc420024d68 }) %!s(*policies.implicitMetaPolicy=&{0xc420d79940 1  0xc420024de8 0xc420024ea8 }) } 2017-05-18 14:45:01.484 UTC  orderer/kafka  Enqueue -> DEBU a30  channel: mychannel  Enqueueing envelope... 2017-05-18 14:45:13.113 UTC  orderer/kafka  Send -> WARN a31  channel: mychannel  Blob destined for partition 0, but posted to -1 instead 2017-05-18 14:45:13.113 UTC  orderer/kafka  Send -> INFO a32  channel mychannel  Failed to post blob to the Kafka cluster: kafka server: In the middle of a leadership election, there is currently no leader for this partition and hence it is unavailable for writes. 2017-05-18 14:45:13.114 UTC  orderer/kafka  Enqueue -> ERRO a33  channel: mychannel  cannot enqueue envelope: kafka server: In the middle of a leadership election, there is currently no leader for this partition and hence it is unavailable for writes. 2017-05-18 14:45:13.114 UTC  orderer/common/broadcast  Handle -> INFO a34 Consenter instructed us to shut down" {code} kafka1 Logs:  From logs it appears kafka1 is elected as leader but it appears message does not get communicated to orderer.  {code:java} " 2017-05-18 14:44:49,555  INFO 2 successfully elected as leader (kafka.server.ZookeeperLeaderElector) ..  2017-05-18 14:44:49,786  INFO New leader is 2 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)" {code}  Â   ></description> </Issue>
