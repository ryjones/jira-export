<Issue id="36589" key="FAB-13583" number="13583" project="10002" reporter="dileban" creator="dileban" type="10001" summary="Retrieving Chaincode ID Correctly in Chaincode-Chaincode Calls." priority="3" resolution="10001" status="6" created="2019-01-09 04:10:44.0" updated="2020-01-22 22:32:26.0" resolutiondate="2020-01-22 22:32:26.0" votes="0" watches="2" workflowId="48134"> <description><! CDATA Retrieving the chaincode ID is a little involved today and requires digging through signed proposal, specifically, looking at the ChaincodeHeaderExtension within the proposal's header.  Further, retrieving this chaincode ID can be counter-intutive to what a programmer would expect when the current chaincode was called by another. In this case, the chaincode ID is the ID of the calling chaincode, not the callee (current) chaincode.  This issue proposes adding a new method to the ChaincodeStubInterface that will simplify the process of retrieving the current or calling chaincode's ID.  Proposed methods to ChaincodeStubInterface:  // GetChaincodeID returns a sequence of chaincode IDs from the "chaincode-call-stack". // For instance, give an invoke sequence ChaincodeA->ChaincodeB->ChaincodeC // this function will return   string\{ChaincodeA, ChaincodeB, ChaincodeC}. GetChaincodeID()   string  In the case of a direct call, the function above would return a slice with just one element containing the ID of the executing chaincode. In the case of a series of calls, the function would return a slice of strings of chaincode IDs in the order in which the chaincode-to-chaincode invocation happened.  ></description> </Issue>
