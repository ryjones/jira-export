<Issue id="15698" key="FAB-3111" number="3111" project="10002" reporter="christopherferris" assignee="markparz" creator="christopherferris" type="10001" summary="revamp docs" priority="1" resolution="10000" status="6" created="2017-04-11 22:53:59.0" updated="2018-07-20 18:57:17.0" resolutiondate="2018-03-30 00:59:35.0" votes="0" watches="5" timeoriginalestimate="288000" timeestimate="288000" workflowId="43078"> <description><! CDATA The documentation is in really bad shape. Some of it is not consistent with the code, or completely outdated, and much is just plain missing.  The table of contents is impossible to navigate and there is actually much more in the source tree that is not reflected in the TOC and therefore doesn't exist.  I've said previously that we need a less complicated TOC that can fit in a single view. Not some tome that people need to scroll through.  Look at other examples of open source (not product) documentation. Docker is a good example: https://docs.docker.com/  The TOC expands, but here's the gist: Get Docker Get Started User Guide Admin Guide Troubleshooting Manage a swarm Secure Engine Extend Engine  Docker isn't alone. This is how most are organized. I checked hadoop, cloud foundry, openstack, kubernetes, they are all roughly organized like this, and this is what I had previously been recommending.  As someone coming to the documentation page, I want to easily find where I need/want to dig in. First, I need to get X. Then, I probably want to get started. Of course, if I am an operations guy, I might want to skip right to the admin/operations guide. Or, if I am a developer, I can dive right into the user guide or a tutorial. My point is that we need to make it THAT simple for people to find what they want.  Now, I do think that we need something that tells people what Fabric is and what its capabilities are.  So, I recommend the following outline:  Introduction to Fabric - Features - Use cases - Glossary - Architecture Get Fabric - v1.0 (coming soon) - v1.0-alpha - v0.6 (deprecated) (link to v0.6 docs) Get Started - Deploy your first peer cluster - Sample apps User Guide - Tutorial - CLI - Node SDK - Java SDK - Developing Chaincode -- Golang -- Java Operations Guide - Setting up a network - Manage a peer cluster - Manage a Kafka orderer - Managing peers with CouchDB - Managing fabric-ca -- with ldap -- with an alternate provider -- cluster operations with haproxy Troubleshooting Fabric Developer Guide - Setup development environment - Building Fabric components - Contributing - Maintainers  Again, only the top level are exposed unless the user toggles a top level to expose the next level.   ></description> </Issue>
