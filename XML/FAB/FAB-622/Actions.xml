<Action id="19149" issue="12924" author="rameshthoomu" type="comment" created="2016-10-06 23:33:59.0" updateauthor="rameshthoomu" updated="2016-10-06 23:33:59.0"> <body><! CDATA  ~gongsu  I could see chaincode ID is changed in the above log. This only happens when you run *node-sdk-unit-tests* first and then run *"make unit-tests"*. Could you please confirm.  chaincodeID1:ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46 exectransaction_test.go:898: Error invoking <44d53a299f3f92fafcb0452877148f5d699247f20caa8756bf204d829338f73ee0a8168d8060a090330fd56cb770c3daa9dece75064532e2b2b2ca731e3f4ff6>: Error invoking   For more reference, please refer JIRA issue#https://jira.hyperledger.org/browse/FAB-287  ></body> </Action>
<Action id="19151" issue="12924" author="gongsu" type="comment" body="No I did not run node-sdk-unit-tests before running unit-test. Also note that I ran &quot;make unit-test&quot;, not &quot;make unit-tests&quot;." created="2016-10-07 00:47:51.0" updateauthor="gongsu" updated="2016-10-07 00:47:51.0"/>
<Action id="19159" issue="12924" author="sriramasharma" type="comment" created="2016-10-07 14:41:23.0" updateauthor="sriramasharma" updated="2016-10-07 14:41:23.0"> <body><! CDATA I am able to reproduce the same issue when I run 'make unit-test' on v0.6 branch on ppc64le architecture as well. Currently in v0.6 branch, I am at the below specified commit level:  commit adc16001552cfff073c8e7004ae4f1a093a7a350 Author: Christopher Ferris <chrisfer@us.ibm.com> Date:   Sat Oct 1 14:45:16 2016 +0200  Fix FAB-578  Fix FAB-578 incorrect chaincode signature in REST API fix rest_api.json  NB: Cherry-picked from a96b9edc80e86 after reverting inadvertent merge of master - GMH  Change-Id: I852de103d902d5630f27b43a8057e0ee82f1b020 Signed-off-by: Christopher Ferris <chrisfer@us.ibm.com> Signed-off-by: Greg Haskins <gregory.haskins@gmail.com>   ></body> </Action>
<Action id="19203" issue="12924" author="gongsu" type="comment" created="2016-10-11 20:00:34.0" updateauthor="gongsu" updated="2016-10-11 20:00:34.0"> <body><! CDATA Here is the log of running the failed chaincode unit-test with DEBUG level using the command:  # CORE_LOGGING_LEVEL=DEBUG go test -ldflags "-X github.com/hyperledger/fabric/metadata.Version=0.7.0-snapshot-c8e6615" github.com/hyperledger/fabric/core/chaincode -p 1 -timeout=20m   ^unit-test-chaincode.log    ></body> </Action>
<Action id="19216" issue="12924" author="gongsu" type="comment" created="2016-10-12 18:15:16.0" updateauthor="gongsu" updated="2016-10-12 18:15:16.0"> <body><! CDATA OK here is the problem although I don't know yet why this is happening on z but not x86. When chaincode_example02 is deployed on z, it gets an ef78... ID, as shown below:  {quote}--- FAIL: TestChaincodeInvokeChaincode (94.57s) exectransaction_test.go:797: TestChaincodeInvokeChaincode starting db_test_exports.go:47: Creating testDB exectransaction_test.go:862: deployed chaincode_example02 got cID1:path:"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" name:"ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46" , *chaincodeID1:ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46*{quote}  However, when later when invoked, the chaincode ID became ee5b...  {quote}13:37:09.747  chaincode  afterInvokeChaincode -> DEBU 8b3 Received INVOKE_CHAINCODE in state busyxact, invoking another chaincode 13:37:09.747  chaincode  func1 -> DEBU 8b4  5ecacdd4 state is busyxact 13:37:09.747  chaincode  func1 -> DEBU 8b5  5ecacdd4  C-call-C 13:37:09.747  chaincode  func1 -> DEBU 8b6  5ecacdd4  *C-call-C ee5b24a1f17c356dd5f6e37307922e39ddba12e5d2e203ed93401d7d05eb0dd194fb9070549c5dc31eb63f4e654dbd5a1d86cbb30c48e3ab1812590cd0f78539* 13:37:09.747  chaincode  func1 -> DEBU 8b7  5ecacdd4 Failed to launch invoked chaincode. Sending ERROR {quote}  On x86, chaincode_example02 gets the correct ID ee5b... when it was deployed.  ></body> </Action>
<Action id="19232" issue="12924" author="gongsu" type="comment" created="2016-10-14 17:27:58.0" updateauthor="gongsu" updated="2016-10-14 17:27:58.0"> <body><! CDATA OK the bug has been chased down. When chaincode_example02 gets deployed, the calculation of the hashcode includes ALL files in the chaincode_example02 directory. I have some stray files there over the course of playing with various things. So the hashcode came out as ef78... Later when chaincode_example04 invokes chaincode_example02, the "correct" hashcode ee5b... is hardcoded in chaincode_example04.go.  Instead of hardcoding the hashcode of chaincode_example02, a better solution would be to have exectransaction_test.go pass in whatever the deployment hashcode of chaincode_example02 into chaincode_example04. I will push a patch to gerrit.  ></body> </Action>
