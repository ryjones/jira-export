<Action id="19338" issue="12968" author="tuand" type="comment" body="Use this story to decide how to distribute and where on the orderer file system to put the resulting file from fab-665" created="2016-10-21 13:11:48.0" updateauthor="tuand" updated="2016-10-21 13:11:48.0"/>
<Action id="19442" issue="12968" author="kchristidis" type="comment" created="2016-10-24 21:37:05.0" updateauthor="kchristidis" updated="2016-10-31 01:36:41.0"> <body><! CDATA We should be able to set the genesis block's location either via the config file, or via a command-line flag when booting.  Then the process will copy it over to the proper location; I guess it's the equivalent of `/var/hyperledger/production/db` for 0.5-0.6.  The deliverable here is an orderer that can be booted using this process and can serve broadcast and deliver RPCs from the chain that begins with the given genesis block.  ></body> </Action>
<Action id="19561" issue="12968" author="kchristidis" type="comment" created="2016-10-31 01:38:56.0" updateauthor="kchristidis" updated="2016-10-31 01:38:56.0"> <body><! CDATA Update on the deliverables:  I want to make it explicit that part of this task is to also replace the "fake genesis" block injection that currently happens at the Kafka orderer: see {{sendBlock()}} call in the {{Broadcast()}} function, which needs to go.  ></body> </Action>
<Action id="19703" issue="12968" author="tuand" type="comment" created="2016-11-09 14:26:21.0" updateauthor="tuand" updated="2016-11-09 14:26:21.0"> <body><! CDATA Currently the orderer loads configuration from a .yaml file from which it pulls what protocol it wants to run and what url:port to listen on. Orderer then calls static which creates the fake genesis block which contains only default policies.  The tool from FAB-665 nows gives you a fully-formed genesis block so we'll need to modify the orderer launch code to read the block from file , retrieve consensus configurationItems, apply configuration and write the block.  One thing to think about is that orderer currently determines whether to launch solo fileledger, solo ramledger or kafka. We might want to separate into 3 distinct executables, using a common bootstrap helper to get the genesis block but each processing the config data contained in the genesis block in a different way.  The only input argument would be the filename of the file containing the genesis block. Then at some later point, we can see if a plugin method is better.  ></body> </Action>
<Action id="19705" issue="12968" author="kchristidis" type="comment" created="2016-11-09 15:31:52.0" updateauthor="kchristidis" updated="2016-11-09 15:31:52.0"> <body><! CDATA Thanks for updating the issue.  > We might want to separate into 3 distinct executables, using a common bootstrap helper to get the genesis block but each processing the config data contained in the genesis block in a different way.  I'm not sure I got that part, can you elaborate?  ></body> </Action>
<Action id="19709" issue="12968" author="tuand" type="comment" created="2016-11-09 17:12:21.0" updateauthor="tuand" updated="2016-11-09 17:12:21.0"> <body><! CDATA currently we use the same configuration file for all solo and kafka config including which ledger type to use and what address:port to listen on. The orderer.main() parses this config file then decides in a hardcoded case statement whether to launch kafka or solo ram or solo file .  To get away from having to hardcode all types of consensus protocol before we start up the orderer, I'm thinking we should have a KafkaOrderer, a SoloRamLedgerOderer, a SoloFileLedgerOrderer,  all of which call a common helper to get the genesis block but otherwise separately decide how to continue bootstrapping.  The admin decides beforehand which orderer to use.  A side effect is that we can add more consensus types without having to touch existing code.  ></body> </Action>
<Action id="19804" issue="12968" author="kchristidis" type="comment" body="Changeset: https://gerrit.hyperledger.org/r/#/c/2605/" created="2016-11-19 20:46:40.0" updateauthor="kchristidis" updated="2016-11-19 20:46:40.0"/>
<Action id="19805" issue="12968" author="kchristidis" type="comment" body="I noticed certain TODOs in the changeset. If these are not to be tackled as part of this story, can we please itemize them here?" created="2016-11-19 20:47:27.0" updateauthor="kchristidis" updated="2016-11-19 20:47:27.0"/>
<Action id="19899" issue="12968" author="tuand" type="comment" body="working with  ~ellaki  and team to combine FAB-634 MSP configuration with this tool" created="2016-11-30 13:58:14.0" updateauthor="tuand" updated="2016-11-30 13:59:22.0"/>
<Action id="20008" issue="12968" author="tuand" type="comment" created="2016-12-06 22:08:48.0" updateauthor="tuand" updated="2016-12-06 22:08:48.0"> <body><! CDATA Waiting on FAB-665 and getting configuration to MSP only.  The flow in https://gerrit.hyperledger.org/r/#/c/2605/  is still valid. I will update and rebase once Alex and Angelo get MSP running  ></body> </Action>
