<Issue id="16765" key="FAB-3950" number="3950" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="gossip generateCertificates fails because of concurrency" priority="2" resolution="10000" status="6" created="2017-05-16 13:51:21.0" updated="2018-07-20 14:12:48.0" resolutiondate="2017-05-22 16:52:59.0" votes="0" watches="1" workflowId="38540"> <description><! CDATA * gossip/comm/crypto.go:GenerateCertificates * receives as input 2 file names, and creates certificates and writes them into these files, and later on these files are deleted by the calling functions.  In the tests we always use the same file names, because sometimes it's called in the same function that is re-used and this results into a race condition in which files are deleted via some goroutines and read attempts are made by other goroutines because some tests run concurrently.  I think we need to refactor the GenerateCertfificate method to simply create a private and public key pair with random file names (to support concurrency)  internally and then simply return the loaded TLS certs.   ~C0rWin   ></description> </Issue>
