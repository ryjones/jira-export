<Action id="22269" issue="15706" author="rameshthoomu" type="comment" body="Patch has been submitted https://gerrit.hyperledger.org/r/#/c/7987/ - In-Review" created="2017-04-12 19:14:35.0" updateauthor="rameshthoomu" updated="2017-04-12 19:14:35.0"/>
<Action id="22629" issue="15706" author="greg.haskins" type="comment" created="2017-04-18 13:16:34.0" updateauthor="greg.haskins" updated="2017-04-18 13:16:34.0"> <body><! CDATA Architecturally, the peer container was meant to be a minimal vehicle for running a peer node.  It would, therefore, be suboptimal to include peripheral binaries such as configtxgen because it should remain as small and focused as possible.  However, I also understand what you are after here.  I would suggest that we can move forward with this plan only with the notion that it is temporary.  Longer term, we should strive to split out the CLI components from the peer.  Once this occurs, we can once again make "fabric-peer" a minimal container.   ></body> </Action>
<Action id="22644" issue="15706" author="rameshthoomu" type="comment" body="Yes  ~greg.haskins  this is a temporary fix.. Going forward we will generate binary artifacts to nexus repository.  ~mastersingh24  has submitted this change in Makefile (https://gerrit.hyperledger.org/r/#/c/7981/) and I am working on publishing binary artifacts to nexus repository through Jenkins (https://jira.hyperledger.org/browse/FAB-2986). " created="2017-04-18 18:28:58.0" updateauthor="rameshthoomu" updated="2017-04-18 18:28:58.0"/>
<Action id="23156" issue="15706" author="rameshthoomu" type="comment" body="As per  ~greg.haskins  comments I have abandon the patch. Greg have different approaches to implement this.. Closing this JIRA item.. " created="2017-04-28 14:11:53.0" updateauthor="rameshthoomu" updated="2017-04-28 14:11:53.0"/>
