<Issue id="14168" key="FAB-1739" number="1739" project="10002" reporter="adnanchoudhury" assignee="adnanchoudhury" creator="adnanchoudhury" type="10002" summary="Find the issue behind Ledger-&gt;Couchdb tests passing on package level but failing as a part of Fabric Unit test." priority="3" resolution="10000" status="6" created="2017-01-18 22:51:15.0" updated="2018-07-20 14:11:16.0" resolutiondate="2017-01-23 21:31:21.0" votes="0" watches="1" workflowId="37096"> <description><! CDATA The unit tests that are available in /fabric/core/ledger/util/couchdb passes with 50%+ coverage, but when all the unit-tests are run, it fails.  More details: Steps to run as a single package test # run the couchDB container via the command {{couchdb start}} # set the configuration to be CouchDB with the followig statement inside test code: {{viper.Set("ledger.state.stateDatabase", "CouchDB")}} # In the folder, run {{go test ./.. -cover -v}} Partial output: {code}  2017/01/18 17:08:20 ===COUCHDB=== Entering CreateConnectionDefinition() 2017/01/18 17:08:20 ===COUCHDB=== Created database configuration  URL= http://localhost:5984   database=testdb1 2017/01/18 17:08:20 ===COUCHDB=== Exiting CreateConnectionDefinition() 2017/01/18 17:08:20 ===COUCHDB=== Entering DropDatabase() 2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=DELETE  url=http://localhost:5984/testdb1 2017/01/18 17:08:20 DELETE /testdb1 HTTP/1.1 Host: localhost:5984 User-Agent: Go-http-client/1.1 Accept-Encoding: gzip 2017/01/18 17:08:20 ===COUCHDB=== Couch DB error  status code=404  error={"error":"not_found","reason":"Database does not exist."} 2017/01/18 17:08:20 ===COUCHDB=== Entering CreateConnectionDefinition() 2017/01/18 17:08:20 ===COUCHDB=== Created database configuration  URL= http://localhost:5984   database=testdb1 2017/01/18 17:08:20 ===COUCHDB=== Exiting CreateConnectionDefinition() 2017/01/18 17:08:20 ===COUCHDB=== Entering CreateDatabaseIfNotExist() 2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5984/testdb1 2017/01/18 17:08:20 GET /testdb1 HTTP/1.1 Host: localhost:5984 User-Agent: Go-http-client/1.1 Accept: multipart/related Accept-Encoding: gzip  2017/01/18 17:08:20 ===COUCHDB=== Couch DB error  status code=404  error={"error":"not_found","reason":"Database does not exist."} 2017/01/18 17:08:20 ===COUCHDB=== Database testdb1 does not exist. 2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=PUT  url=http://localhost:5984/testdb1 2017/01/18 17:08:20 PUT /testdb1 HTTP/1.1 Host: localhost:5984 User-Agent: Go-http-client/1.1 Content-Length: 0 Accept: application/json Content-Type: application/json Accept-Encoding: gzip  2017/01/18 17:08:20 ===COUCHDB=== Exiting handleRequest() 2017/01/18 17:08:20 ===COUCHDB=== Created database testdb1  2017/01/18 17:08:20 ===COUCHDB=== Exiting CreateDatabaseIfNotExist() 2017/01/18 17:08:20 ===COUCHDB=== Entering SaveDoc() 2017/01/18 17:08:20 ===COUCHDB===   id=2,  value={"asset_name":"marble1","color":"blue","size":"35","owner":"jerry"} 2017/01/18 17:08:20 ===COUCHDB=== Entering ReadDoc()  id=2 2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5984/testdb1/2?attachments=true 2017/01/18 17:08:20 GET /testdb1/2?attachments=true HTTP/1.1 Host: localhost:5984 User-Agent: Go-http-client/1.1 Accept: multipart/related Accept-Encoding: gzip  2017/01/18 17:08:20 ===COUCHDB=== Couch DB error  status code=404  error={"error":"not_found","reason":"missing"} 2017/01/18 17:08:20 ===COUCHDB===   rev= 2017/01/18 17:08:20 ===COUCHDB=== Entering handleRequest()  method=PUT  url=http://localhost:5984/testdb1/2 2017/01/18 17:08:20 PUT /testdb1/2 HTTP/1.1 Host: localhost:5984 User-Agent: Go-http-client/1.1 Content-Length: 67 Accept: application/json Content-Type: application/json Accept-Encoding: gzip {code}  Steps to run a part of the unit-tests # run the couchDB container via the command {{couchdb start}} # set the configuration to be CouchDB with the followig statement inside test code: {{viper.Set("ledger.state.stateDatabase", "CouchDB")}} # in fabric/, run {make unit-test} # Relevant output: {code}   33munit-tests_1  | 0m Here..........................  33munit-tests_1  | 0m   33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL= http://localhost:5984   database=testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering DropDatabase()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=DELETE  url=http://localhost:5984/testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 DELETE /testdb1 HTTP/1.1  33munit-tests_1  | 0m Host: localhost:5984  33munit-tests_1  | 0m User-Agent: Go-http-client/1.1  33munit-tests_1  | 0m Accept-Encoding: gzip  33munit-tests_1  | 0m   33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL= http://localhost:5984   database=testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateDatabaseIfNotExist()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5984/testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 GET /testdb1 HTTP/1.1  33munit-tests_1  | 0m Host: localhost:5984  33munit-tests_1  | 0m User-Agent: Go-http-client/1.1  33munit-tests_1  | 0m Accept: multipart/related  33munit-tests_1  | 0m Accept-Encoding: gzip  33munit-tests_1  | 0m   33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL= http://localhost:5984   database=testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering DropDatabase()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=DELETE  url=http://localhost:5984/testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 DELETE /testdb1 HTTP/1.1  33munit-tests_1  | 0m Host: localhost:5984  33munit-tests_1  | 0m User-Agent: Go-http-client/1.1  33munit-tests_1  | 0m Accept-Encoding: gzip  33munit-tests_1  | 0m   33munit-tests_1  | 0m --- FAIL: TestDBCreateSaveWithoutRevision (100.00s)  33munit-tests_1  | 0m 	test_util.go:162: Error when trying to create database - Error: Get http://localhost:5984/testdb1: dial tcp  ::1 :5984: getsockopt: connection refused  33munit-tests_1  | 0m 		 CallerInfo =  /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/util/couchdb/couchdb_test.go:91   33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Created database configuration  URL= http://localhost:5990   database=testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Exiting CreateConnectionDefinition()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering CreateDatabaseIfNotExist()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering handleRequest()  method=GET  url=http://localhost:5990/testdb1  33munit-tests_1  | 0m 2017/01/17 20:22:16 GET /testdb1 HTTP/1.1  33munit-tests_1  | 0m Host: localhost:5990  33munit-tests_1  | 0m User-Agent: Go-http-client/1.1  33munit-tests_1  | 0m Accept: multipart/related  33munit-tests_1  | 0m Accept-Encoding: gzip  33munit-tests_1  | 0m   33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering SaveDoc()  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB===   id=3,  value={"asset_name":"marble1","color":"blue","size":"35","owner":"jerry"}  33munit-tests_1  | 0m 2017/01/17 20:22:16 ===COUCHDB=== Entering ReadDoc()  id=3  {code}  ></description> </Issue>
