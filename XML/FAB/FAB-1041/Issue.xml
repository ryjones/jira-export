<Issue id="13372" key="FAB-1041" number="1041" project="10002" reporter="jjjjibm" assignee="jjjjibm" creator="jjjjibm" type="10002" summary=" node-SDK   Remove hard coded addresses, passwords, etc from unit tests" priority="3" resolution="10000" status="6" created="2016-11-08 19:51:43.0" updated="2018-07-20 14:10:46.0" resolutiondate="2018-07-09 18:23:32.0" votes="0" watches="4" workflowId="36670"> <description><! CDATA 1.sdk/node/test/unit test cases make liberal use of hard coding in ways that make these tests difficult to execute on nonVagrant platforms such as HSBN and Bluemix.  Examples: chain.setMemberServicesUrl('grpc://localhost:7054');  <-- hard coded protocol, address, and port chain.enroll('admin', 'Xurw3yU9zI0l') <--- hard coded password  2.Key value stores are named randomly, which makes it hard for automation to clean up prior to execution:  Examples:  var keyValStorePath = path.join(getUserHome(), 'kvsTemp'); headless-tests.js:var keyValStorePath1 = 'tmp/keyValStore1';  <-- project directory not /tmp headless-tests.js:var keyValStorePath2 = '/tmp/keyValStore2'; headless-tests.js:var keyValStorePath3 = '/tmp/keyValStore3'; headless-tests.js:var keyValStorePath4 = '/tmp/keyValStore4';  <-- arbitrary names  3.Test cases need to be sensitive to the possibility TLS is enabled.    Example of correct test:   // // Configure the test chain // if (tutil.tlsOn) {               <=== checks for TLS  // set up test case for TLS enabled } else { // set up test case for TLS disabled }      ></description> </Issue>
