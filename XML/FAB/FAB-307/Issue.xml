<Issue id="12608" key="FAB-307" number="307" project="10002" reporter="mintzhao" creator="mintzhao" type="10004" summary="swagger generated client code can&apos;t fit fabric proto enum" priority="3" resolution="10000" status="6" created="2016-09-06 02:24:46.0" updated="2018-07-20 14:10:07.0" resolutiondate="2017-04-07 12:50:09.0" votes="0" watches="2" workflowId="36173"> <description><! CDATA hi, everyone, I have a question. We know that fabric rest api is based on swagger. And so I am using swagger client generator to generate client sdk for golang. The generated code looks seems good, but can't be use. ```"ConfidentialityLevel":{ "type": "string", "default": "PUBLIC", "example": "PUBLIC", "enum":  "PUBLIC", "CONFIDENTIAL"  , "description": "Confidentiality level of the Chaincode." },```  ConfidentialityLevel will be generated as ```  /*ConfidentialityLevel Confidentiality level of the Chaincode.  swagger:model ConfidentialityLevel */ type ConfidentialityLevel string  // for schema var confidentialityLevelEnum   interface{}  func (m ConfidentialityLevel) validateConfidentialityLevelEnum(path, location string, value ConfidentialityLevel) error { if confidentialityLevelEnum == nil { var res   ConfidentialityLevel if err := json.Unmarshal(  byte(` "PUBLIC","CONFIDENTIAL" `), &res); err != nil { return err } for _, v := range res { confidentialityLevelEnum = append(confidentialityLevelEnum, v) } } if err := validate.Enum(path, location, value, confidentialityLevelEnum); err != nil { return err } return nil }  // Validate validates this confidentiality level func (m ConfidentialityLevel) Validate(formats strfmt.Registry) error { var res   error  // value enum if err := m.validateConfidentialityLevelEnum("", "body", m); err != nil { return err }  if len(res) > 0 { return errors.CompositeValidationError(res...) } return nil } ``` but vp will get ``` rest  ProcessChaincode -> ERRO 04f Error unmarshalling chaincode request payload: json: cannot unmarshal string into Go value of type protos.ConfidentialityLevel ``` Is there a solution to avoid the bug?  ></description> </Issue>
