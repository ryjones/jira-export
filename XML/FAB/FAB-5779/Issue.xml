<Issue id="20190" key="FAB-5779" number="5779" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10003" summary="Expose new ledger API for coordinator and committer interfaces" priority="3" resolution="10000" status="6" created="2017-08-15 10:18:30.0" updated="2018-07-20 14:14:06.0" resolutiondate="2017-09-07 09:49:55.0" votes="0" watches="1" workflowId="39742"> <description><! CDATA In context of FAB-1151, there ledger introduced a set of new API's to support update of private data collection during chaincode invocations, as well added new API's to commit blocks atomically with private data and request private data for given block sequence:  {code} 	// GetPvtDataAndBlockByNum returns the block and the corresponding pvt data. 	// The pvt data is filtered by the list of 'ns/collections' supplied 	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum 	GetPvtDataAndBlockByNum(blockNum uint64, filter PvtNsCollFilter) (*BlockAndPvtData, error) 	// GetPvtDataByNum returns only the pvt data  corresponding to the given block number 	// The pvt data is filtered by the list of 'ns/collections' supplied in the filter 	// A nil filter does not filter any results and causes retrieving all the pvt data for the given blockNum 	GetPvtDataByNum(blockNum uint64, filter PvtNsCollFilter) (  *TxPvtData, error) 	// CommitWithPvtData commits the block and the corresponding pvt data in an atomic operation 	CommitWithPvtData(blockAndPvtdata *BlockAndPvtData) error {code}   While taking care to replicate state, state transfer module works against coordinator, therefore coordination has to leverage new ledger capabilities to be able to request blocks with private data as well as to commit blocks with relevant private data. In order to support this requirement {{Committer}} interface need to be extended.  ></description> </Issue>
