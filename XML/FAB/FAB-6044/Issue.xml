<Issue id="20625" key="FAB-6044" number="6044" project="10002" reporter="dubovitskaya" assignee="mdr" creator="dubovitskaya" type="10002" summary="Implement Identity.Validate() with cryptographic verification of an Idemix Credential for Idemix MSP" priority="3" resolution="10000" status="6" created="2017-09-06 08:13:50.0" updated="2018-12-04 20:49:35.0" resolutiondate="2017-10-18 14:39:25.0" votes="0" watches="2" timeoriginalestimate="86400" timeestimate="86400" workflowId="39928"> <description><! CDATA Identity.Validate() currently requires cryptographic validation of a membership certificate.   Due to the nature of zero-knowledge proofs, an Idemix signature also 'contains' the proof of certificate validity, whereas with x509 the certificate is individually verified in Validate() and a signature is verified separately by calling a signature verification algorithm (without re-verifying the certificate). When first calling Validate() and later verifying signatures with an Identity, both the msp-impl and idemixmsp give the guarantee that the messages were signed by members that were issued a credential.  However, if you only call Identity.Validate() without later verifying a signature produced by this identity, the behaviour is currently different.   While we are not aware of the scenarios when a separate identity validation is required (without verifying a signature) and calling Validate() and then Verify() for Idemix Identity will result into overhead of verifying two zero-knowledge proofs instead of one, we were requested to implement Validate() with cryptographic verification so that the behaviour and guarantees of msp-impl and idemixmsp are the same.   ></description> </Issue>
