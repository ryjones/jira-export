<Issue id="29309" key="FAB-9452" number="9452" project="10002" reporter="manish-sethi" assignee="manish-sethi" creator="manish-sethi" type="10001" summary="Enhance chaincode lifecycle event listener" priority="3" resolution="10000" status="6" created="2018-04-10 19:22:11.0" updated="2018-07-20 18:49:08.0" resolutiondate="2018-04-14 15:00:03.0" votes="0" watches="1" workflowId="41808"> <description><! CDATA In the current implementation, the chaincode life-cycle related events are synchronized and when a condition 'installed AND deployed' becomes true for a tuple <channel, chaincode>, the event is passed on to the handlers that want to do some processing for the tuple <channel, chaincode>.  Two such handlers currently in use are - 1) handler for creating indices for couchdb and 2) handler for updating the service discovery metadata.  However, they differ in the need slightly. The first handler in the list above, prefers to receive the events before the state is committed because otherwise, there may be a peer crash immediately after commit (before handler gets invoked) and this will not give the handler a chance to create the indices. On the other hand, the second handler in the above list, wants to receive the events when the state is committed so that the information is published in discovery only after the commit.  Â   In order to accommodate both the above cases, enhance the chaincode event listener such the listener receives a call back after the commit (for deploy trans) or install (cc install).  ></description> </Issue>
