<Issue id="42821" key="FAB-16878" number="16878" project="10002" reporter="sykesm" assignee="wlahti" creator="sykesm" type="10004" summary="Intermittent test failure in lifecycle suite" priority="3" resolution="10000" status="6" created="2019-10-18 18:13:42.0" updated="2019-10-21 19:50:25.0" resolutiondate="2019-10-21 19:50:25.0" votes="0" watches="1" workflowId="55904"> <description><! CDATA {code} â€¢ Failure  115.824 seconds                                                                                                                                                            Release interoperability solo network  It  deploys and executes chaincode (simple), upgrades the channel application capabilities to V2_0 and uses _lifecycle to update the endorseme nt policy                                                                                                                                                                             /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/lifecycle/interop_test.go:73                                                                               Got stuck at:                                                                                                                                                                       80                                                                                                                                                                               Waiting for:                                                                                                                                                                        70                                                                                                                                                                               github.com/hyperledger/fabric/integration/lifecycle/lifecycle_suite_test.go:114   {code}  The query does not see the committed value because a different peer was used for the query than executed the transactions. This is related to the structure of {{RunQueryInvokeQuery}} vs {{RunQueryInvokeQueryWithAddresses}}.  If the {{WithAddressess} variant is used, the peer that's used for query *must* be one of the peers that the invocation was done against.  Adding an assertion to {{RunQueryInvokeQueryWithAddresses}} that validates the query peer is a member of the endorsing peers {code} diff --git a/integration/lifecycle/lifecycle_suite_test.go b/integration/lifecycle/lifecycle_suite_test.go index 26740ba61..2246acc6d 100644 --- a/integration/lifecycle/lifecycle_suite_test.go +++ b/integration/lifecycle/lifecycle_suite_test.go @@ -82,6 +82,9 @@ func RunQueryInvokeQuery(n *nwo.Network, orderer *nwo.Orderer, peer *nwo.Peer, c }  func RunQueryInvokeQueryWithAddresses(n *nwo.Network, orderer *nwo.Orderer, peer *nwo.Peer, chaincodeName string, initialQueryResult int, addresses ...string) { +       By("validating query is executed against an endorser") +       Expect(addresses).To(ContainElement(n.PeerAddress(peer, nwo.ListenPort)), "query must be executed against an endorser") + By("querying the chaincode") sess, err := n.PeerUserSession(peer, "User1", commands.ChaincodeQuery{ ChannelID: "testchannel", {code}  results in the following failures: {code} Summarizing 4 Failures:   Fail  Release interoperability solo network  It  deploys and executes chaincode (simple), upgrades the channel application capabilities to V2_0 and uses _lifecycle to update the endorsement policy  /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/lifecycle/lifecycle_suite_test.go:86   Fail  Release interoperability solo network Interoperability scenarios  It  deploys a chaincode with the legacy lifecycle, invokes it and the tx is committed only after the chaincode is upgraded via _lifecycle  /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/lifecycle/lifecycle_suite_test.go:86   Fail  Release interoperability solo network using ccenv-1.4  It  deploys and executes chaincode (simple)  /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/lifecycle/lifecycle_suite_test.go:86   Fail  Lifecycle  It  deploys and executes chaincode using _lifecycle and upgrades it  /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/integration/lifecycle/lifecycle_suite_test.go:86 {code}    ></description> </Issue>
