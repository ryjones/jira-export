<Issue id="38132" key="FAB-14451" number="14451" project="10002" reporter="suryalnvs" creator="suryalnvs" type="10004" summary="Orderer is crashing with panic unable to parse TickInterval" priority="3" resolution="10204" status="6" created="2019-03-01 17:05:37.0" updated="2019-05-30 11:39:07.0" resolutiondate="2019-03-01 17:48:12.0" votes="0" watches="2" workflowId="49752"> <description><! CDATA Orderer is crashing when using latest master (commit number: d29dc24bb Merge " FAB-14419  Increase leaderless check interval to 10s"Â ) and {code:java} TickInterval: 500ms{code} with error: {code:java} 2019-03-01 16:32:16.681 UTC  orderer.commmon.multichannel  newChainSupport -> PANI 014  channel: orderersystemchannel  Error creating consenter: failed to parse TickInterval () to time duration panic:  channel: orderersystemchannel  Error creating consenter: failed to parse TickInterval () to time durationgoroutine 1  running : github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc0003c0f20, 0x0, 0x0, 0x0) /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:229 +0x515 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).log(0xc000170068, 0x4, 0x148d1a4, 0x2a, 0xc00062b738, 0x2, 0x2, 0x0, 0x0, 0x0) /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0xf6 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).Panicf(0xc000170068, 0x148d1a4, 0x2a, 0xc00062b738, 0x2, 0x2) /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159 +0x79 github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(0xc000170070, 0x148d1a4, 0x2a, 0xc00062b738, 0x2, 0x2) /go/src/github.com/hyperledger/fabric/common/flogging/zap.go:74 +0x60 github.com/hyperledger/fabric/orderer/common/multichannel.newChainSupport(0xc0003b78c0, 0xc0002d0aa0, 0xc0009be570, 0x158fe00, 0x1fb3af0, 0xc0008fefd0, 0x0) /go/src/github.com/hyperledger/fabric/orderer/common/multichannel/chainsupport.go:89 +0x668 github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).Initialize(0xc0003b78c0, 0xc0009be570) /go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:166 +0x30a github.com/hyperledger/fabric/orderer/common/server.initializeMultichannelRegistrar(0xc00017acc0, 0xc0002becc0, 0xc00040e3d0, 0x0, 0xc0003b7830, 0x1f555e0, 0xc0008fe320, 0x2, 0x2, 0xc0008fe330, ...) /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:583 +0x315 github.com/hyperledger/fabric/orderer/common/server.Start(0x1465206, 0x5, 0xc000294000) /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:158 +0x7dd github.com/hyperledger/fabric/orderer/common/server.Main() /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:91 +0x1ce main.main() /go/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20 {code} Attaching the screenshots of configtx.yaml and genesis file to show tick interval notation.  Attached the genesis file (genesis.block) used.  Even with TickInterval set to 500, latest configtxgen is unable to create genesis file. If used older version of configtxgen to generate genesis file with TickInterval set to 500, orderer is still crashing with same error "unable to parse TickInterval"  ></description> </Issue>
