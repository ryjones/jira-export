<Action id="60238" issue="40048" author="btl5037" type="comment" body="What version of the Fabric peer cli are you using? Based on the stack trace, the last time the peer&apos;s main.go file was that long was Fabric 1.2. It appears the version you have predates the --tlsRootCertFiles flag, so there is no mechanism for parsing it." created="2019-05-22 03:46:09.0" updateauthor="btl5037" updated="2019-05-22 04:16:59.0"/>
<Action id="60262" issue="40048" author="siddjain" type="comment" created="2019-05-22 16:43:38.0" updateauthor="siddjain" updated="2019-05-22 16:43:38.0"> <body><! CDATA we were using 1.2. Sorry I should have stated that in my bug report. But we tried with 1.4 today and the issue is still there. Here is stacktrace using 1.4     ```  root@8d2e947cf506:/home# FABRIC_CFG_PATH=${PWD} CORE_PEER_TLS_CLIENTAUTHREQUIRED=true CORE_PEER_TLS_CLIENTCERT_FILE=admin-jnj-tls.pem CORE_PEER_TLS_CLIENTKEY_FILE=admin-jnj-tls.key CORE_PEER_TLS_ENABLED=true CORE_PEER_LOCALMSPID=jnjMSP CORE_LOGGING_LEVEL=DEBUG /etc/hyperledger/bin/peer chaincode query -C dscsa -n mycc -c '\{"Args": "verify","kp","00000" }' -o orderer1-ord:7050 --tls --cafile ord-ca-chain.pem --clientauth --peerAddresses peer3-jnj:7051 --tlsRootCertFiles jnj-ca-chain.pem --certfile admin-jnj-tls.pem --keyfile admin-jnj-tls.key  2019-05-22 16:39:36.011 UTC  main  InitCmd -> WARN 001 CORE_LOGGING_LEVEL is no longer supported, please use the FABRIC_LOGGING_SPEC environment variable  2019-05-22 16:39:36.031 UTC  main  SetOrdererEnv -> WARN 002 CORE_LOGGING_LEVEL is no longer supported, please use the FABRIC_LOGGING_SPEC environment variable  panic: runtime error: invalid memory address or nil pointer dereference   signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x12df01e      goroutine 1  running :  github.com/hyperledger/fabric/peer/common.NewPeerClientForAddress(0x7ffc97efd7e3, 0xe, 0x7ffc97efd805, 0x10, 0x171f483, 0xb, 0x171e515)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/peer/common/peerclient.go:44 +0x5e  github.com/hyperledger/fabric/peer/common.GetEndorserClient(0x7ffc97efd7e3, 0xe, 0x7ffc97efd805, 0x10, 0x13, 0xad0c3d, 0x1717228, 0x4)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/peer/common/peerclient.go:122 +0x56  github.com/hyperledger/fabric/peer/chaincode.InitCmdFactory(0x1718645, 0x5, 0x1, 0xc000455288, 0x14f47a0, 0x186a700)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/peer/chaincode/common.go:357 +0xaeb  github.com/hyperledger/fabric/peer/chaincode.chaincodeQuery(0xc000393180, 0x0, 0x0, 0x0)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/peer/chaincode/query.go:56 +0x9e  github.com/hyperledger/fabric/peer/chaincode.queryCmd.func1(0xc000393180, 0xc000188000, 0x0, 0x14, 0x0, 0x0)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/peer/chaincode/query.go:26 +0x34  github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc000393180, 0xc00003be00, 0x14, 0x14, 0xc000393180, 0xc00003be00)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:762 +0x473  github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x232c300, 0x8, 0x0, 0x232b4c0)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:852 +0x2fd  github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x232c300, 0xc0000e3f40, 0x1)  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:800 +0x2b  main.main()  /w/workspace/fabric-release-jobs-x86_64/gopath/src/github.com/hyperledger/fabric/peer/main.go:53 +0x2f7  ```     and to confirm that we are using 1.4     ```  root@8d2e947cf506:/home# FABRIC_CFG_PATH=$PWD /etc/hyperledger/bin/peer version  peer:  Version: 1.4.0  Commit SHA: d700b43  Go version: go1.11.1  OS/Arch: linux/amd64  Chaincode:    Base Image Version: 0.4.14    Base Docker Namespace: hyperledger    Base Docker Label: org.hyperledger.fabric    Docker Namespace: hyperledger  ```  ></body> </Action>
<Action id="60265" issue="40048" author="siddjain" type="comment" body="That&apos;s just a warning. and the stacktrace is also similar to original." created="2019-05-22 16:49:15.0" updateauthor="siddjain" updated="2019-05-22 16:49:15.0"/>
<Action id="61091" issue="40048" author="sykesm" type="comment" created="2019-06-18 19:17:32.0" updateauthor="sykesm" updated="2019-06-18 19:17:32.0"> <body><! CDATA SEGFAULT is due to missing error check at https://github.com/hyperledger/fabric/blob/0e94f86c9327ac3a8e89ad4729d6a66df8fa837d/peer/common/peerclient.go#L43-L44  The call to {{configFromEnv}} done at that line doesn't make sense as it tries to load the tls files from what is setup in viper for a fully functional TLS environment but, when the tls flags are set on the command line, the tls information is not part of environment.  When viper is not fully setup, the {{configFromEnv}} function bails with an error and returns with a partially populated client config with nil security options field.  Basically, it's a comedy of errors.  /cc  ~wlahti   ></body> </Action>
<Action id="61096" issue="40048" author="wlahti" type="comment" body="My bad. Not sure how I overlooked that. " created="2019-06-18 20:02:37.0" updateauthor="wlahti" updated="2019-06-18 20:02:37.0"/>
<Action id="61585" issue="40048" author="wlahti" type="comment" body="There&apos;s a build break in master since this was merged and hadn&apos;t been rebased and then reverified in CI. Fixed via:  https://gerrit.hyperledger.org/r/c/fabric/+/32250 " created="2019-07-10 18:55:06.0" updateauthor="wlahti" updated="2019-07-10 18:55:06.0"/>
