<Issue id="12841" key="FAB-540" number="540" project="10002" reporter="kchristidis" assignee="jeffgarratt" creator="kchristidis" type="10004" summary="Networking issue with Docker Compose file for BDD tests" priority="2" resolution="10000" status="6" created="2016-09-30 03:46:56.0" updated="2018-07-20 14:10:20.0" resolutiondate="2016-09-30 16:29:22.0" votes="0" watches="2" workflowId="36332"> <description><! CDATA As a reminder, we are dealing with three components when we talk about the Kafka orderer:  # The Kafka/ZooKeeper container  0  # The Kafka orderer  1  # A client that interacts with the orderer (sample client  2 )  Everything works great in both localhost and the Vagrant environment.  Things start to fail interesting ways if you bring up the Kafka orderer in its own container. Consider the Docker Compose file  4  which takes care of bringing up Kafka/Zookeeper and the orderer. A successful connection is established between these two containers, however an attempt to interact with the orderer via the client (bd_counter -rpc broadcast -count 1 -server 127.0.0.1:5005) fails with the following error:  {quote}2016/09/29 22:36:09 grpc: ClientConn.resetTransport failed to create client transport: connection error: desc = "transport: write tcp 127.0.0.1:60785->127.0.0.1:5005: write: broken pipe"; Reconnecting to "127.0.0.1:5005"  22:36:09     broadcast.go:55:  DEBUG  Sent broadcast message "0" to orderer 2016/09/29 22:36:09 transport: http2Client.notifyError got notified that the client transport was broken read tcp 127.0.0.1:60787->127.0.0.1:5005: read: connection reset by peer. panic: Failed to receive a broadcast reply from orderer: rpc error: code = 13 desc = "transport is closing"{quote}  All scenarios in the orderer-kafka.feature  4  file fail as well.  The only way I could finally get it to work was by modifying the Docker Compose file so as to have both Kafka/ZooKeeper and the orderer use the Docker host's (i.e. the Vagrant environment's) network interfaces (net: "host"), and hard-coding references to "localhost" in both the Docker Compose file  5  and orderer_util.py  6 .  Do we have any idea what's going wrong here?         0  docker run -p 2181:2181 -p 9092:9092 --env ADVERTISED_HOST=0.0.0.0 --env ADVERTISED_PORT=9092 --name kafka kchristidis/kafka  1  https://github.com/kchristidis/fabric/tree/803297429738731542148a043f49e368c2d0e09e/orderer (go install; ORDERER_GENERAL_ORDERERTYPE=kafka orderer)  2  https://github.com/kchristidis/fabric/tree/803297429738731542148a043f49e368c2d0e09e/orderer/sample_clients/bd_counter (go install; bd_counter -rpc broadcast -count 1)  3  https://github.com/kchristidis/fabric/blob/06b0fd0ddf5b97e220f26aee87f5a9668499832d/bddtests/docker-compose-orderer-kafka.yml  4  https://github.com/kchristidis/fabric/blob/803297429738731542148a043f49e368c2d0e09e/bddtests/orderer-kafka.feature  5  https://github.com/kchristidis/fabric/commit/803297429738731542148a043f49e368c2d0e09e#diff-78b987050d93022b0ba15ff7f82b0944  6  https://github.com/kchristidis/fabric/commit/803297429738731542148a043f49e368c2d0e09e#diff-94b9f1f04698ba57fc7283087f8194cf  ></description> </Issue>
