<Action id="33144" issue="22827" author="yacovm" type="comment" created="2017-10-25 06:47:26.0" updateauthor="yacovm" updated="2017-10-25 06:47:26.0"> <body><! CDATA Don't see the point in doing that: * You can always create a message that aggregates smaller messages * When you send a message to a peer, it is queued into a buffer for transmission.   So, to send n messages you can just iterate and invoke Send() n times.   By the way, there are no real rounds as you mentioned since we work in the real world in which time advances asynchronously and not synchronously :)   ></body> </Action>
<Action id="33145" issue="22827" author="grapebaba" type="comment" created="2017-10-25 06:58:06.0" updateauthor="grapebaba" updated="2017-10-25 06:58:06.0"> <body><! CDATA Yeah, I noted we have a batch emit and buffer the messages in channel, iterate and invoke Send() n times. How about aggregates these messages and invoke Send() one time? I am not sure if the latter one can reduce time since I don't test it.  Â   ></body> </Action>
<Action id="33146" issue="22827" author="yacovm" type="comment" created="2017-10-25 07:03:03.0" updateauthor="yacovm" updated="2017-10-25 07:03:03.0"> <body><! CDATA Don't see how we really reduce time by doing this. We're saving here nano-seconds in the "green path" where buffers are not full. In any case you'll need a for loop down the path path to put the batch of messages into the channels that act as queues, so I don't see how we save code in the macro level   ></body> </Action>
<Action id="33147" issue="22827" author="c0rwin" type="comment" created="2017-10-25 07:40:19.0" updateauthor="c0rwin" updated="2017-10-25 07:40:19.0"> <body><! CDATA {quote}  Yeah, I noted we have a batch emit and buffer the messages in channel, iterate and invoke Send() n times. How about aggregates these messages and invoke Send() one time? I am not sure if the latter one can reduce time since I don't test it. {quote}  You can aggregate those messages into one message and use regular Send API, for example you can have recursive messages which will include many other messages and call Send(). I'm not convinced you need another API to support this functionality.  ></body> </Action>
<Action id="33148" issue="22827" author="grapebaba" type="comment" body="My point is network transfer overhead, may send 1 big message through grpc connection better than parallel send 100 small messages through that connection. However I have no real test results.:P" created="2017-10-25 07:41:34.0" updateauthor="grapebaba" updated="2017-10-25 07:41:34.0"/>
<Action id="33149" issue="22827" author="grapebaba" type="comment" body=" ~C0rWin agree. Actually in my origin description I said we don&apos;t need API change, however rather than leave this to top level user, we may do that underlying make them transparent." created="2017-10-25 07:47:43.0" updateauthor="grapebaba" updated="2017-10-25 07:47:43.0"/>
<Action id="33150" issue="22827" author="c0rwin" type="comment" body=" ~grapebaba  gossip is the communication middleware with internal API so not sure about top level users, since it&apos;s not exposed externally. Only Fabric components which requires broadcasting functionality. I wouldn&apos;t go with any API changes at the moment unless there is an explicit profiling results showing usefulness of such optimization or specific use case. " created="2017-10-25 07:53:38.0" updateauthor="c0rwin" updated="2017-10-25 07:54:00.0"/>
<Action id="33151" issue="22827" author="grapebaba" type="comment" body="That&apos;s fine. It indeed need profiling result support." created="2017-10-25 08:26:15.0" updateauthor="grapebaba" updated="2017-10-25 08:26:15.0"/>
