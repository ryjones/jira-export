<Issue id="28316" key="FAB-8731" number="8731" project="10002" reporter="adnanchoudhury" assignee="wlahti" creator="adnanchoudhury" type="10004" summary="Usability: `peer chaincode install` behaves differently/unexpectedly for Node chaincode " priority="3" resolution="10000" status="6" created="2018-03-08 20:03:08.0" updated="2018-07-20 14:15:57.0" resolutiondate="2018-03-09 23:00:34.0" votes="0" watches="4" workflowId="41474"> <description><! CDATA *Observation*: While doing {code:java} peer chaincode install{code}  through the CLI container, The \{path} flag behavior is different for node chaincode vs. golang chaincode.  *to reproduce:* In the CLI container, the location  {code:java} /opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/marbles02{code} has two folders `go` and `node` and they have a golang chaincode and node chaincode correspondingly. To install the golang cc, this works:    {code:java} peer chaincode install --name mycc1 --lang GOLANG --version 0 --path github.com/hyperledger/fabric-samples/chaincode/marbles02/go  {code}  But the corresponding command for Node cc fails. i.e. if the following command is tried,    {code:java} peer chaincode install --name mycc1 --lang NODE --version 0 --path github.com/hyperledger/fabric-samples/chaincode/marbles02/node {code}    It fails with the message: {code:java} Error: Error getting chaincode code chaincode: path to chaincode does not exist: github.com/hyperledger/fabric-samples/chaincode/marbles02/node{code} *Expectation*: The node chaincode install should pass.  *Note*:  The node cc install passes if relative path is used i.e.     {code:java} --path ../..fabric-samples/chaincode/marbles02/node {code}  ></description> </Issue>
