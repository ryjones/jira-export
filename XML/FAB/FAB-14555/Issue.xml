<Issue id="38317" key="FAB-14555" number="14555" project="10002" reporter="sheehan" assignee="sheehan" creator="sheehan" type="10001" summary="Ensure serialized Operation message produces same bytes across endorsers" priority="3" resolution="10001" status="6" created="2019-03-08 21:44:24.0" updated="2020-01-22 22:32:38.0" resolutiondate="2020-01-22 22:32:38.0" votes="0" watches="2" workflowId="49949"> <description><! CDATA The serialized operation message must produce the same bytes across endorsers.   https://developers.google.com/protocol-buffers/docs/encoding#order   This is likely already the case given that the Operation message from the chaincode (in Go, Java, Node, etc.) is unmarshalled on the endorser peer and always marshalled in Go before being added to the read/write/operation set.     Tasks  1) look in Go source for protocol buffer marshalling to ensure bytes produced are always the same.  2) do we have to be concerned about different versions of the peer. At this point, protocol buffer serializing is likely stable between versions.  3) Consider converting Operation message to DER encoded ASN.1 on the peer.    https://golang.org/pkg/encoding/asn1/   We would not want to expose this API to chaincode writers, but may be ok to keep on the peer side and ensure bytes produced are always the same.     4) Consider custom serialization based on proto serialization rules. See FAB-11418 and FAB-11419.        ></description> </Issue>
