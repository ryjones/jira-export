<Issue id="14963" key="FAB-2400" number="2400" project="10002" reporter="elli-androulaki" assignee="angelo.decaro" creator="elli-androulaki" type="10001" summary="Allow OUs to be contained in MSP description" priority="3" resolution="10000" status="6" created="2017-02-21 09:42:45.0" updated="2018-07-20 18:54:40.0" resolutiondate="2017-04-23 15:47:35.0" votes="1" watches="5" timeoriginalestimate="10800" timeestimate="10800" workflowId="37557"> <description><! CDATA This is the item involving extending our default MSP implementation to include an OU specificiation in its description, and subsequently deem as valid certificates that are signed by one of the listed root / intermediate CAs and their organizational unit equals the one in the MSP configuration.  This item consists of three sub-tasks:  A) Update of fabric MSP configuration as follows: - Root CAs (*done*) - Intermediate CAs (*done*) - (a list of) a list of OU identifier (*almost done*: field is there but is not used) - Admin (*done*) - CRL (*done*)  This is reflected to extended FabricMSPConfig to include an additional field (*done*) - repeated FabricOUIdentifier OUs   where FabricOUIdentifier is a an additionally defined message in common package defined as follows (*done*) - byte  /string certifiersIdentiifer // hash of certificate chain to the root - string OrganizationalUnit // current organizational unit identifier  B) Update the fabric MSP setup, and ValidateIdentity, GetOrganizationalUnit function implementation as follows: - Setup is to take as input the OUs and stored within the MSP (*todo*) - ValidateIdentity would need to check if the OUs listed within the identity match the OUs of the MSP state (*todo*: perhaps by using the satisfiesMSPPrincipal function that is already implemented :)) - GetOrganizationalUnit function needs to be changed to return FabricOUIdentifiers (*done*)  C) Computation of the FabricOUIdentifier.certifiersIdentifier is to be computed as follows (*done*):  - Get certificate's certification chain to the top (created at validation time), let it be CertChain.  - Compute the hash (CertChain), say HCertChain - Set FabricOUIdentifier.certifiersIdentifier to HCertChain     ></description> </Issue>
