<Issue id="40964" key="FAB-15903" number="15903" project="10002" reporter="scottz" assignee="dongming" creator="scottz" type="10101" summary="Replacement for Behave chaincodes.feature cc2cc tests with 2 channels or invalid channel names args" priority="2" resolution="10000" status="6" created="2019-07-09 20:03:51.0" updated="2019-09-09 19:11:21.0" resolutiondate="2019-09-09 19:11:21.0" votes="0" watches="3" workflowId="53931"> <description><! CDATA >>>>>    * Note: after this task was created, some UT tests were found (in fabric/core/chaincode/exectransaction_test.go). Whoever implements this task should examine the scenarios covered by those cc2cc tests, and maybe consider whether to extend those instead of new integration tests.  >>>>>  This task is to ensure coverage in the fabric/integration/e2e tests for Items 19,21,22,49 of the "Behave Testcases" tab of  https://docs.google.com/spreadsheets/d/1MIz_E0iFC3lCJGCmXCmRvSYt5yvMhzhSK6Bop0QJOAY/edit#gid=663331741 .  The relevant behave tests at  https://github.com/hyperledger/fabric-test/blob/master/feature/chaincodes.feature , which are being deprecated, do the following: * +Item 19+ old lifecycle and +Item 49+ new lifecycle - validate correct functionality of cc2cc when the chaincodes installed in different channels * +Item 21+ - use incorrect channel name in the invoke, to ensure proper rejection response code and error msg, when both chaincodes in *same* channel * +Item 22+ - use incorrect channel name in the invoke, to ensure proper rejection response code and error msg, when chaincodes in *different* channels  It should be easy to insert statments inside existing fabric/integration/e2e/lifecycle test to invoke with invalid channel name arg before using valid one, for single channel (Item 21). And do the same for the 2-channel testcase (Item 22), once that is written (Item 19/49).  Existing CR which adds the lifecycle cc2cc integration/interoperability tests:Â  https://gerrit.hyperledger.org/r/c/fabric/+/31730   ></description> </Issue>
