<Issue id="34159" key="FAB-12204" number="12204" project="10002" reporter="adnanchoudhury" assignee="chris.elder" creator="adnanchoudhury" type="10004" summary="Peer panics during CouchDB stress test with concurrent queries and invokes " priority="2" resolution="10201" status="6" created="2018-09-27 15:22:27.0" updated="2020-01-15 20:37:54.0" resolutiondate="2020-01-15 20:37:54.0" votes="0" watches="5" workflowId="45482"> <description><! CDATA *Scenario*: 4 peer 2 org with CouchDB as state DB, 2 million records existing.  *Test*: start 2 million invokes and 2 million queries simultaneously.  *Expectation*: the network is able to complete the queries and invokes.  *Observed*: Peer panics with the following message: {code:java} ^  33m2018-09-27 04:38:25.616 UTC  couchdb  handleRequest -> WARN 14463^  0m Retrying couchdb request in 250ms. Attempt:2  Error:Post http://couchdb0:5984/testorgschannel2_marbles02_go_ch2/_ensure_full_commit: net/http: request canceled (Client.Timeout exceeded while awaiting headers) ^  33m2018-09-27 04:38:40.673 UTC  couchdb  handleRequest -> WARN 14464^  0m Retrying couchdb request in 1s. Attempt:4  Error:Post http://couchdb0:5984/testorgschannel1_marbles02_go_ch1/_all_docs?include_docs=true: net/http: request canceled (Client.Timeout exceeded while awaiting headers) panic: error during commit to txmgr: Post http://couchdb0:5984/testorgschannel1_marbles02_go_ch1/_all_docs?include_docs=true: net/http: request canceled (Client.Timeout exceeded while awaiting headers)  goroutine 604  running : github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc42271b9f0, 0xc423519a20, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:279 +0xae6 github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitWithPvtData(0xc4205d3aa0, 0xc423519a20, 0xc4226add40, 0x1b7) /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:93 +0x6b github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc42260a210, 0xc420be7600, 0x0, 0x0, 0x0, 0xc4226ade78, 0x7657a0) /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:229 +0x1278 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc422c31180, 0xc420be7600, 0x0, 0x0, 0x0, 0x3, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:771 +0x6c github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc422c31180) /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:558 +0x3e0 created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:239 +0x699  {code} Peer and CC logs added. Tested on 1.3-rc1 image.     Allow me to add some more test description:  Test script:  https://github.com/hyperledger/fabric-test/blob/master/tools/PTE/CITest/scenarios/FAB-8251.sh   VLaunch machine, docker containers, with 2 Orgs, 2 peers each.  peer1.org1 - used for endorsements, two threads peer2.org1 peer1.org2 - used for endorsements, two threads peer2.org2  Test steps summary: 1. Send 1 million invokes, with no indexes, split among 4 concurrent threads 2. Place index files and 3. Start sending 1M invokes AND 2M 2-field rich queries, and then immediately 4. Upgrade (and build indexes) =====> both endorser peers panic approximately after 800 invokes!     ></description> </Issue>
