<Action id="21593" issue="13742" author="kchristidis" type="comment" body="As is the case with  FAB-1306 , this should leverage  ~jeffgarratt &apos;s BDD work. I suggest we proceed with a feature file that is posted as a WIP changeset, then work with Jeff to make sure the missing functionality is added to his _impl files." created="2017-03-21 15:59:26.0" updateauthor="kchristidis" updated="2017-03-21 15:59:26.0"/>
<Action id="23180" issue="13742" author="latitiah" type="comment" created="2017-04-28 19:08:01.0" updateauthor="latitiah" updated="2017-04-28 19:08:01.0"> <body><! CDATA 1. Create a network containing an orderer (configured as kafka), 3 kafka brokers(, and 1 peer? Can I send transaction without the peer?) 2. Set up an authorized user (bihn) for the orderer service 3. The authorized user should "broadcast" 20 unique messages to the orderer 4. The authorized user should request a "deliver" message from the orderer starting with ??? and ending with ??? 5. Within a certain amount of time , the "deliver" message should contain: a. 2 blocks b. ? c. ? 6. Take down the kakfa network (all 3 brokers) 7. The authorized user should "broadcast" 40 unique messages to the orderer 8. The authorized user waits for a certain amount of time 9. Should a failed deliver message come from the orderer?? 10. Bring back 2 brokers of the kafka network 11. Does a "deliver" message get sent at this time?  12. The authorized user should "broadcast" 40 unique messages to the orderer 13. The authorized user should receive a "deliver" message from the orderer with a windowsize of 10 14. Within a certain amount of time , the "deliver" message should contain: a. 4 blocks (or will it be 8?) b. ? c. ?  ></body> </Action>
<Action id="23752" issue="13742" author="latitiah" type="comment" created="2017-05-11 16:17:48.0" updateauthor="latitiah" updated="2017-05-11 16:17:48.0"> <body><! CDATA Chain topic partition leader changes due to broker down. Orderer service should continue to function as long as it can communicate with a chain partition leader.  We need the number of replicas for the chain's topic to equal the number of brokers. We can do this by ensuring that the the default.replication.factor of the kafka brokers is set to the preferred value.  ></body> </Action>
