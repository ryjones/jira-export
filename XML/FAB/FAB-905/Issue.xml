<Issue id="13236" key="FAB-905" number="905" project="10002" reporter="scottz" assignee="dongming" creator="scottz" type="10001" summary="enhance tools and write scalability tests" priority="3" resolution="10000" status="6" created="2016-10-28 21:07:30.0" updated="2018-07-20 18:53:45.0" resolutiondate="2017-09-14 18:31:40.0" votes="0" watches="2" workflowId="36583"> <description><! CDATA PREFACE:  In this description, "peers" refers to the peers in a v0.6 network. In v1.0, the "peer" will include the concept of endorser and committer - everything EXCEPT the orderer nodes which are actually used for consensus to order batches. So, when implementing this story for v1.0, use the term "orderer node" instead of peer.   We should measure scalability : measure network throughput rates and timings (durations to deploy or process transactions) or other performance characteristics, for different sized networks.  STEP 0:  First modify tests as needed to run with different sized networks. Devise smarter tests that can run, take down a peer, and rerun, and compare differences in throughput, etc.  STEP 1: We can run specific existing performance measurement tests on different size networks, for example, 4, 7, 10, 16 peers (when F is 1, 2, 3, 5). At first, tests may need to be run in separate networks, statically created, because fabric does not allow dynamically changing the number of peers in the network (or the number of peers required for consensus).  STEP 2: Another thought is to measure performance of the same network when some peers are not operating. For example, using a network of 6 peers (N=6, F=2), we could create a network and run the tests to collect performance measurements while all 6 nodes are running, then stop one peer and collect measurements, and then stop a 2nd peer and collect measurements. (Stopping a third peer would leave only 3 running, and the network would halt processing.)  STEP 3: Once fabric is enhanced to allow dynamically adding a peer to a network (and change both N and F), then we could extend the tests in STEP2 for example to run in a network with N=10 and F=3, and stop a peer, rerun, stop another to reduce to 8, rerun, 7, rerun, ..., 4, rerun.   ></description> </Issue>
