<Action id="43681" issue="21731" author="muralisr" type="comment" created="2018-05-01 12:19:40.0" updateauthor="muralisr" updated="2018-05-01 19:29:12.0"> <body><! CDATA Fabric exercises access control (ACL) at various access points in the system. Some examples of these are * ACL to allow a proposal request to the peer * ACL to allow a query to the "query system chaincode" * ACL to allow events to be sent to client  From the point of view of ACL, an access point is treated as a "resource". A policy *(<refer to policy documentation here>)* is attached to each resource on per-channel basis. The access control for the identity associated with the request is evaluated against the policy associated with the resource. A policy can be associated with more than one resource.  Resources and the default policy associated with them are enumerated as properties under the "Application:ACLs" section in configtx.yaml. They can be overridden on a per-channel basis. {code:java} Note - sampleconfig/configtx.yaml contains default policy mapping for all the resources currently supported.{code} Â   Rest of this document use the configtx.yaml under "sampleconfig" directory to illustrate use of resource policies.  If you would like to modify the "peer/Propose" default from "/Channel/Application/Writers" to another policy for SampleSingleMSPChannel: {code:java} SampleSingleMSPChannel: Consortium: SampleConsortium Application: <<: *ApplicationDefaults ACLs: <<: *ACLsDefault peer/Propose: /Channel/Application/MyPolicy Organizations: - *SampleOrg Policies: <<: *ApplicationDefaultPolicies MyPolicy: Type: Signature Rule: "OR('SampleOrg.admin')"{code} "MyPolicy" is defined on the "SampleSingleMSPChannel" scope and is not visible to other channels.  One could also define "MyPolicy" globally under "Application:Policies" and use that in other channels to override default resource mapping. For instance, assume "MyPolicy" is added to "Application:Policies" globally {code:java} # Policies defines the set of policies at this level of the config tree # For Application policies, their canonical path is # /Channel/Application/<PolicyName> Policies: &ApplicationDefaultPolicies Readers: Type: ImplicitMeta Rule: "ANY Readers" Writers: Type: ImplicitMeta Rule: "ANY Writers" Admins: Type: ImplicitMeta Rule: "MAJORITY Admins" MyPolicy: Type: Signature Rule: "OR('SampleOrg.admin')"{code} "MyPolicy" can then be used in channel definitions. For example, "peer/Propose" is overridden to use the global "MyPolicy" {code:java} SampleSingleMSPChannel: Consortium: SampleConsortium Application: <<: *ApplicationDefaults ACLs: <<: *ACLsDefault peer/Propose: /Channel/Application/MyPolicy Organizations: - *SampleOrg{code}  ></body> </Action>
<Action id="44221" issue="21731" author="joe-alewine" type="comment" body="https://gerrit.hyperledger.org/r/c/21447/" created="2018-05-10 21:33:39.0" updateauthor="joe-alewine" updated="2018-05-10 21:33:39.0"/>
