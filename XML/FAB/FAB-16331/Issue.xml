<Issue id="41848" key="FAB-16331" number="16331" project="10002" reporter="dereckluo" assignee="dereckluo" creator="dereckluo" type="10004" summary="Configtxgen/encoder integration test " priority="3" resolution="10000" status="6" created="2019-08-16 17:40:15.0" updated="2019-09-10 19:28:18.0" resolutiondate="2019-09-10 19:28:18.0" votes="0" watches="2" workflowId="54887"> <description><! CDATA  internal/configtxgen/encoder/integration_test.go integration test are not correctly structured for ginkgo. This should use the table extension for ginkgo.   {code:java} var _ = Describe("Integration", func() { 	for _, profile := range   string{ 		genesisconfig.SampleInsecureSoloProfile, 		genesisconfig.SampleSingleMSPSoloProfile, 		genesisconfig.SampleDevModeSoloProfile, 		genesisconfig.SampleInsecureKafkaProfile, 		genesisconfig.SampleSingleMSPKafkaProfile, 		genesisconfig.SampleDevModeKafkaProfile, 	} { 		It(fmt.Sprintf("successfully parses the %s profile", profile), func() { 			config := configtxgentest.Load(profile) 			group, err := encoder.NewChannelGroup(config) 			Expect(err).NotTo(HaveOccurred())  			cryptoProvider, err := sw.NewDefaultSecurityLevelWithKeystore(sw.NewDummyKeyStore()) 			Expect(err).NotTo(HaveOccurred()) 			_, err = channelconfig.NewBundle("test", &cb.Config{ 				ChannelGroup: group, 			}, cryptoProvider) 			Expect(err).NotTo(HaveOccurred())  			err = hasModPolicySet("Channel", group) 			Expect(err).NotTo(HaveOccurred()) 		}) 	} {code}   ></description> </Issue>
