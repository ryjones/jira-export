<Issue id="12773" key="FAB-472" number="472" project="10002" reporter="corecode" creator="corecode" type="10001" summary="sbft: state transfer" priority="3" resolution="10000" status="6" created="2016-09-27 11:55:08.0" updated="2018-07-20 18:56:26.0" resolutiondate="2016-11-02 09:01:40.0" votes="0" watches="2" workflowId="36282"> <description><! CDATA Use (to be) existing orderer atomic broadcast service to retrieve batches from other replicas.  process outline: - on restart, mark as passive - while passive, when observing a weak certificate for a seqno, ask application to sync to that batch - start participating in consensus (i.e. mark active), also committing new batches, which might lead to holes in the ledger - ledger component needs to be able to deal with holes - to actively catch up to the network, exchange last checkpoint certificate when connections are re-established - when active, hearing about a future checkpoint certificate does not necessarily trigger immediate state transfer - while we have holes in our ledger, we do not service requests that are submitted via atomic broadcast.  This ensures that the network only progresses when there is at least one replica with a gapless ledger.  notes: - how do we deal with (local) batches that lack signatures.  do we state transfer (signatures/batch) from elsewhere?  tests: - rotate disconnects and reconnects so that all correct nodes have gaps in their ledgers.  state transfer finally manages to sync everybody to the latest batch.  ></description> </Issue>
