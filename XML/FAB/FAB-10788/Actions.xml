<Action id="46418" issue="31260" author="manish-sethi" type="comment" body=" https://gerrit.hyperledger.org/r/23503  (master)" created="2018-06-22 04:47:56.0" updateauthor="denyeart" updated="2018-06-25 11:03:57.0"/>
<Action id="46478" issue="31260" author="denyeart" type="comment" body=" https://gerrit.hyperledger.org/r/#/c/23595/  (release-1.2)" created="2018-06-25 11:03:38.0" updateauthor="denyeart" updated="2018-06-25 11:03:38.0"/>
<Action id="46484" issue="31260" author="denyeart" type="comment" created="2018-06-25 12:37:35.0" updateauthor="denyeart" updated="2018-06-26 11:31:04.0"> <body><! CDATA The impact of this is that there is a regression in current v1.2 which cause phantom reads to not be invalidated as they were in v1.1.  Therefore this is a must-fix for v1.2.  More details - A phantom read is a condition that invalidates a transaction. It occurs when the result set of a range query changes between chaincode execution time and validation/commit time. For example if you wish to transfer all Alice's assets to Bob, you would do a query for all of Alice's assets and then update ownership of each to Bob.  However before this transaction is committed, another transaction may have added another asset for Alice, and therefore the list of assets being updated in the update transaction is no longer valid at the latest block height - there would be an extra 'phantom' item in the latest result set which is missed in the write set. Phantoms are detected by re-executing the query at validation time and comparing the result sets (if the result set is large a hash of the result set is utilized so that transaction size doesn't grow with result set size). The queries and result sets are added to the transaction read set in a RangeQueryInfo object.   With this defect, the RangeQueryInfo was not getting added to the read set, and therefore phantoms were not being detected in recent v1.2 builds.  The fix is to add the RangeQueryInfo to the read set at the same time as when other simulation results are being added to the read set, as opposed to when the simulation is marked as Done, due to recent changes in the simulation lifecycle.  ></body> </Action>
