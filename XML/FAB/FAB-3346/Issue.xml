<Issue id="15939" key="FAB-3346" number="3346" project="10002" reporter="amjadnz" creator="amjadnz" type="10004" summary="Issue with starting chaincode - after deploy" priority="2" resolution="10000" status="6" created="2017-04-23 06:20:52.0" updated="2018-07-20 14:12:21.0" resolutiondate="2017-04-29 09:21:19.0" votes="0" watches="1" workflowId="38115"> <environment><! CDATA Mac Pro OSX 10.11.6 running Virtual Host (FEDORA LINUX 13) VM Fedora Version: Fedora release 25 (Twenty Five) Hyper-ledger Fabric : 1.0.0 - Alpha Samples : Downloaded latest form the "getting started guide" Go : 1.7 Docker compose version: ------------------------- docker-compose version 1.8.0, build 94f7016 docker-py version: 1.10.6 CPython version: 2.7.13 OpenSSL version: OpenSSL 1.0.2j-fips  26 Sep 2016 --------------------------  Docker Version: --------------------------------------- Client: Version:      1.13.0 API version:  1.25 Go version:   go1.7.3 Git commit:   49bf474 Built:        Tue Jan 17 09:58:06 2017 OS/Arch:      linux/amd64  Server: Version:      1.13.0 API version:  1.25 (minimum version 1.12) Go version:   go1.7.3 Git commit:   49bf474 Built:        Tue Jan 17 09:58:06 2017 OS/Arch:      linux/amd64 Experimental: false --------------------------------------- User: Running everything as root   ></environment> <description><! CDATA {code:java} 2017-04-22 11:37:07.177 UTC  msp  Sign -> DEBU 006 Sign: plaintext: 0A8B050A5508032205616A3030352A40...304D53500A04657363630A0476736363  2017-04-22 11:37:07.177 UTC  msp  Sign -> DEBU 007 Sign: digest: C0955F453C7309BFB4096941118E7F28B3901A655C2E08C6365D36027EF3388B  Error: Error endorsing chaincode: rpc error: code = 2 desc = Timeout expired while starting chaincode aj005:1.0(networkid:dev,peerid:peer0,tx:3edd80708ea8ed61285933575b094356a743d142c6431ef8445f9120d932d136) {code}  Following the steps as mentioned in the getting started guide: # Step 1: Create new channel with TX and BLOCK files (as per the getting started on fabric site) # Step 2: Create a new channel at the start up by pasing the channel name 	CHANNEL_NAME=aj005 docker-compose -f ./docker-compose.yaml up -d # Step 3: Create a new network of peers using docker-compose.yaml ##*	this creates 4 Peers Peer 0, Peer 1 for (ORG0) and Peer 2 and Peer 3 (for ORG1) ##*	1 Orderer ##*	4 Couch DB State DBs ##*	1 Fabric CA ##*	1 Cli # Step 4: All start up fine and I login to CLI (as per the fabric site) # Step 5: Create channels again within CLI (by passing peer0 to peer3) - All looks fine. # Step 6: Join the channels - all is fine here too (no errors) # Step 7: Deploy the chaincode - all fine here too (no errors) # Step 8: Initialize the chain code - here is where the things breaks and cannot get hte container up and running.  My "docker images" output:  {code:java} REPOSITORY                     TAG                  IMAGE ID            CREATED             SIZE dev-peer0-aj005-1.0            latest               ca2bae4d3179        3 hours ago         176 MB dev-peer0-aj004-1.0            latest               e6773217c7e4        4 hours ago         176 MB dev-peer0-aj002-1.0            latest               f3e828838f17        2 days ago          176 MB {code}  So my chaincode is getting deployed by not getting initiated.  Command used to initiate: {code:java} CORE_PEER_ADDRESS=peer0:7051 peer chaincode instantiate -o orderer0:7050 --tls false --cafile $GOPATH/src/github.com/hyperledger/fabric/peer/crypto/orderer/localMspConfig/cacerts/ordererOrg0.pem -C aj005 -n aj005 -v 1.0 -p tts/sc/user05 -c '{"Args": "init" }' -P "OR ('Org0MSP.member','Org1MSP.member')" {code}  Now tried with the script as well that is shipped with the getting started pack. {code:java} 2017-04-23 10:36:00.203 UTC  logging  InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode' 2017-04-23 10:36:00.213 UTC  msp  GetLocalMSP -> DEBU 002 Returning existing local MSP 2017-04-23 10:36:00.213 UTC  msp  GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity 2017-04-23 10:36:00.213 UTC  golang-platform  collectChaincodeFiles -> DEBU 004 not using input for hash computation for path:"tts/sc/user05" name:"aj009" version:"1.0"   2017-04-23 10:36:00.213 UTC  golang-platform  getCodeFromFS -> DEBU 005 getCodeFromFS tts/sc/user05 2017-04-23 10:36:00.213 UTC  util  HashFilesInDir -> DEBU 006 hashFiles /opt/gopath/src/tts/sc/user05 2017-04-23 10:36:00.214 UTC  golang-platform  writeGopathSrc -> INFO 007 rootDirectory = /opt/gopath/src 2017-04-23 10:36:00.214 UTC  container  WriteFolderToTarPackage -> INFO 008 rootDirectory = /opt/gopath/src 2017-04-23 10:36:00.216 UTC  msp  Sign -> DEBU 009 Sign: plaintext: 0A84050A4E08032A4062316462333934...C13EFF370000FFFF7AA0F75500800000  2017-04-23 10:36:00.216 UTC  msp  Sign -> DEBU 00a Sign: digest: 710BB9E967C398DA73EC3110D3BA6D450085E2B34DF714E45F05DCCCA918AD5E  2017-04-23 10:36:00.218 UTC  chaincodeCmd  install -> DEBU 00b Installed remotely %v response:<status:200 payload:"OK" >  2017-04-23 10:36:00.219 UTC  main  main -> INFO 00c Exiting..... ===================== Chaincode is installed on remote peer PEER2 =====================   Instantiating chaincode on Peer2/Org1 ... CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer2/localMspConfig/cacerts/peerOrg1.pem CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/keystore/peer0Signer.pem CORE_PEER_LOCALMSPID=Org1MSP CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/signcerts/peer0Signer.pem CORE_PEER_ADDRESSAUTODETECT=true CORE_PEER_TLS_ENABLED=true CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer2/localMspConfig CORE_PEER_ID=cli CORE_LOGGING_LEVEL=DEBUG CORE_PEER_ADDRESS=peer2:7051 CORE_PEER_ENDORSER_ENABLED=true CORE_NEXT=true 2017-04-23 10:36:00.252 UTC  logging  InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode' 2017-04-23 10:36:00.260 UTC  msp  GetLocalMSP -> DEBU 002 Returning existing local MSP 2017-04-23 10:36:00.260 UTC  msp  GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity 2017-04-23 10:36:00.271 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default escc 2017-04-23 10:36:00.272 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 005 Using default vscc 2017-04-23 10:36:00.283 UTC  msp  Sign -> DEBU 006 Sign: plaintext: 0A8B050A5508032205616A3030392A40...314D53500A04657363630A0476736363  2017-04-23 10:36:00.283 UTC  msp  Sign -> DEBU 007 Sign: digest: 12D9BBC2DB04066A53374514335FB92E745BFFA06B7DCFD205E18295AC5D6497  Error: Error endorsing chaincode: rpc error: code = 2 desc = Timeout expired while starting chaincode aj009:1.0(networkid:dev,peerid:peer2,tx:3b8b586fe5477d248920c41530a0d4826921a698c763fd1a8fe198a0a188570d) Usage: peer chaincode instantiate  flags   Global Flags: --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint -C, --chainID string             The chain on which this command should be executed (default "testchainid") -c, --ctor string                Constructor message for the chaincode in JSON format (default "{}") -E, --escc string                The name of the endorsement system chaincode to be used for this chaincode -l, --lang string                Language the chaincode is written in (default "golang") --logging-level string       Default logging level and overrides, see core.yaml for full syntax -n, --name string                Name of the chaincode -o, --orderer string             Ordering service endpoint -p, --path string                Path to chaincode -P, --policy string              The endorsement policy associated to this chaincode --test.coverprofile string   Done (default "coverage.cov") -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64 --tls                        Use TLS when communicating with the orderer endpoint -u, --username string            Username for chaincode operations when security is enabled -v, --version string             Version of the chaincode specified in install/instantiate/upgrade commands -V, --vscc string                The name of the verification system chaincode to be used for this chaincode  !!!!!!!!!!!!!!! Chaincode instantiation on PEER2 on channel 'aj009' failed !!!!!!!!!!!!!!!! ================== ERROR !!! FAILED to execute End-2-End Scenario ================== {code}  ></description> </Issue>
