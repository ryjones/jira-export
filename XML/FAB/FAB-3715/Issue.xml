<Issue id="16436" key="FAB-3715" number="3715" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Peer TLS CA certs given to deliveryService need to be per channel and not global" priority="2" resolution="10000" status="6" created="2017-05-08 10:28:57.0" updated="2018-07-20 14:12:37.0" resolutiondate="2017-06-09 15:45:44.0" votes="5" watches="5" workflowId="38382"> <description><! CDATA The connection from the peer to the ordering service with TLS  iterates over all root CA certs|https://github.com/hyperledger/fabric/blob/master/core/comm/connection.go#L90-L112  that are of orgs that have ordering service instances and configures the rootCA cert pool accordingly.  This has the following vulnerability:  Consider a network with 3 orgs: \{A, B, C} and 2 channels:  X: \{A, C}, Y: \{B, C}  and let's say that the ordering service of X is of org A and the ordering service of Y is of org B.  If we have a peer in org C or in org A and it connects (to obtain blocks of channel X) to an ordering service that its host is *orderer.orgA.com*, the TLS handshake would work also for a malicious node from orgB that has a certificate with *orderer.orgA.com* that is signed by the CA of orgB.  This exposes the connection from the peer to the ordering service (in orgA) to a MITM attack in which an attacker (that stands between the peer and the ordering service from orgA) impersonates *orderer.orgA.com* and tunnels the connection through itself without the peer knowing it.     This can be fixed if when we obtain the rootCA cert pool, it will be in the context of a channel.  ></description> </Issue>
