<Action id="59199" issue="39082" author="ales" type="comment" created="2019-04-12 13:55:06.0" updateauthor="ales" updated="2019-04-12 13:55:06.0"> <body><! CDATA I'll change the defect from bug to documentation, because really what's missing is an explanation of what the query does.  In short, the query - given a chaincode name - reports the approval status (i.e. which orgs have approved the definition with the supplied terms) of the chaincode definition that may supplant the current one, or the first if none exist yet for that name.  It is intended to serve as a synchronisation mechanism for org admins to determine when is a good time for a chaincode definition to be committed, given that a successful commit requires the approval of a majority of orgs. Clearly the subject of the query is restricted to a definition that has a chance of being approved: this can only be one with sequence number 1 or n+1, where n is the sequence numberÂ  of the currently committed one.  ></body> </Action>
<Action id="59210" issue="39082" author="harrisob@us.ibm.com" type="comment" body="I still do not understand why if I run the query after CommitChaincodeDefinition it fails , shouldn&apos;t I get a list of those that have approved and not approved. Then as an Organization I would be able to check if I have to run the ApproveChaincodeDefinitionForMyOrg for my organization on that specific definition." created="2019-04-12 15:34:58.0" updateauthor="harrisob@us.ibm.com" updated="2019-04-12 15:34:58.0"/>
<Action id="59213" issue="39082" author="ales" type="comment" body="The purpose of the query is to determine the approval status of a definition +that is not yet committed+. So after definition with sequence number n commits, your next legal query is for sequence number n+1. We can certainly expose a different query, or change the semantics of this one" created="2019-04-12 16:23:04.0" updateauthor="ales" updated="2019-04-12 16:23:04.0"/>
