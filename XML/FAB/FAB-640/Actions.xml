<Action id="19191" issue="12942" author="christopherferris" type="comment" created="2016-10-10 18:09:48.0" updateauthor="christopherferris" updated="2016-10-10 18:09:48.0"> <body><! CDATA We are currently using v4.1 of RocksDB. As we progress towards v1.0 we will be updating our dependencies. For now, you need to build RocksDB v4.1 locally on MacOSX.  http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/build/#building-natively-on-osx  The instructions are a little confusing, but basically follow the directions for building 4.1 of RocksDB  brew install go rocksdb snappy gnu-tar cd /tmp git clone https://github.com/facebook/rocksdb.git cd rocksdb git checkout v4.1 PORTABLE=1 make shared_lib INSTALL_PATH=/usr/local make install-shared    ></body> </Action>
<Action id="19192" issue="12942" author="donovanhide" type="comment" created="2016-10-10 18:28:27.0" updateauthor="donovanhide" updated="2016-10-10 18:28:27.0"> <body><! CDATA That's a lot of hoops to jump through to build a year old version of RocksDB :D Was there any particular issue with a version of RocksDB between 4.1.0 and 4.12.0?  I guess in an ideal world we could just do:  {code} brew update && brew install hyperledger-fabric {code}  ></body> </Action>
<Action id="19608" issue="12942" author="stevenroose" type="comment" body="This CR should fix this: https://gerrit.hyperledger.org/r/#/c/2181/" created="2016-11-02 14:15:53.0" updateauthor="stevenroose" updated="2016-11-02 14:15:53.0"/>
<Action id="19609" issue="12942" author="stevenroose" type="comment" body="It might be good to change the topic of the issue to not be specific to Homebrew. It fails to build against the  latest version in Arch (https://aur.archlinux.org/packages/rocksdb/) too." created="2016-11-02 14:36:16.0" updateauthor="stevenroose" updated="2016-11-02 14:37:14.0"/>
<Action id="19851" issue="12942" author="christopherferris" type="comment" body=" ~stevenroose  that changeset does not build (sorry for not following up... been on holiday). As to why we use the older version of RocksDB this is mostly just anachronism and not a high priority. If we do update RocksDB, then the corresponding code in Fabric that calls the relevant APIs that have changed will need to be addressed as part of this changeset." created="2016-11-23 15:46:33.0" updateauthor="christopherferris" updated="2016-11-23 15:46:33.0"/>
