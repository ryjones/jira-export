<Issue id="19010" key="FAB-5204" number="5204" project="10002" reporter="ynamiki" assignee="ynamiki" creator="ynamiki" type="10004" summary="docker-compose does not work in the documented development environment" priority="3" resolution="10000" status="6" created="2017-07-07 04:23:32.0" updated="2018-07-20 14:13:43.0" resolutiondate="2017-09-10 09:57:34.0" votes="0" watches="1" workflowId="39392"> <description><! CDATA I have set up a development environment by following  the document|http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv.html  (revision 5a66dd38) with a newly-created Amazon EC2 instance with image "Ubuntu Server 16.04 LTS (HVM), SSD Volume Type - ami-785c491f".  After executing the pip commands in the document, docker-compose does not work.  {code} $ sudo apt update $ sudo apt -y install python-pip $ pip --version pip 8.1.1 from /usr/lib/python2.7/dist-packages (python 2.7) $ sudo apt -y install libssl-dev # for cryptography  $ sudo pip install --upgrade pip $ pip --version pip 9.0.1 from /usr/local/lib/python2.7/dist-packages (python 2.7)  $ sudo pip install behave nose docker-compose ... Successfully installed PyYAML-3.12 backports.ssl-match-hostname-3.5.0.1 behave-1.2.5 cached-property-1.3.0 colorama-0.3.9 docker-2.4.2 docker-compose-1.14.0 docker-pycreds-0.2.1 dockerpty-0.4.1 docopt-0.6.2 enum34-1.1.6 functools32-3.2.3.post2 ipaddress-1.0.18 jsonschema-2.6.0 nose-1.3.7 parse-1.8.2 parse-type-0.3.4 requests-2.11.1 six-1.10.0 texttable-0.8.8 websocket-client-0.44.0 $ docker-compose version docker-compose version 1.14.0, build c7bdf9e docker-py version: 2.4.2 CPython version: 2.7.12 OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016  $ # Install requests==2.4.3 according to the document $ sudo pip install -I flask==0.10.1 python-dateutil==2.2 pytz==2014.3 pyyaml==3.10 couchdb==1.0 flask-cors==2.0.1 requests==2.4.3 pyOpenSSL==16.2.0 pysha3==1.0b1 grpcio==1.0.4 ... Successfully installed Jinja2-2.9.6 MarkupSafe-1.0 Werkzeug-0.12.2 asn1crypto-0.22.0 cffi-1.10.0 couchdb-1.0 cryptography-1.9 enum34-1.1.6 flask-0.10.1 flask-cors-2.0.1 futures-3.1.1 grpcio-1.0.4 idna-2.5 ipaddress-1.0.18 itsdangerous-0.24 protobuf-3.3.0 pyOpenSSL-16.2.0 pycparser-2.18 pysha3-1.0b1 python-dateutil-2.2 pytz-2014.3 pyyaml-3.12 requests-2.11.1 setuptools-36.0.1 six-1.10.0  $ sudo pip install urllib3 ndg-httpsclient pyasn1 ecdsa python-slugify grpcio-tools jinja2 b3j0f.aop six ... Successfully installed Unidecode-0.4.21 b3j0f.aop-0.8.4 b3j0f.utils-1.4.4 ecdsa-0.13 grpcio-1.4.0 grpcio-tools-1.4.0 ndg-httpsclient-0.4.2 ordereddict-1.1 pyasn1-0.2.3 python-slugify-1.2.4 urllib3-1.21.1 $ docker-compose version Traceback (most recent call last): File "/usr/local/bin/docker-compose", line 7, in <module> from compose.cli.main import main File "/usr/local/lib/python2.7/dist-packages/compose/cli/main.py", line 17, in <module> from . import errors File "/usr/local/lib/python2.7/dist-packages/compose/cli/errors.py", line 11, in <module> from docker.errors import APIError File "/usr/local/lib/python2.7/dist-packages/docker/__init__.py", line 2, in <module> from .api import APIClient File "/usr/local/lib/python2.7/dist-packages/docker/api/__init__.py", line 2, in <module> from .client import APIClient File "/usr/local/lib/python2.7/dist-packages/docker/api/client.py", line 6, in <module> import requests File "/usr/local/lib/python2.7/dist-packages/requests/__init__.py", line 53, in <module> from .packages.urllib3.contrib import pyopenssl File "/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/contrib/pyopenssl.py", line 73, in <module> ssl.PROTOCOL_SSLv3: OpenSSL.SSL.SSLv3_METHOD, AttributeError: 'module' object has no attribute 'PROTOCOL_SSLv3' {code}  I found that we can fix the issue by upgrading requests.  {code} $ sudo pip install -U requests ... Successfully installed certifi-2017.4.17 chardet-3.0.4 requests-2.18.1 $ docker-compose version docker-compose version 1.14.0, build c7bdf9e docker-py version: 2.4.2 CPython version: 2.7.12 OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016 {code}  Do we need to stick to requests-2.4.3?  Outputs of pip freeze (before and after upgrading requests) are attached.  ></description> </Issue>
