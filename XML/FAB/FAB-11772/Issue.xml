<Issue id="33285" key="FAB-11772" number="11772" project="10002" reporter="rlalgowdar" assignee="dongming" creator="rlalgowdar" type="10101" summary="SIdeDB - Reconciliation - Add New Peer to Channel" priority="2" resolution="10000" status="6" created="2018-08-28 13:08:22.0" updated="2020-01-09 23:30:18.0" resolutiondate="2019-07-31 15:51:41.0" votes="0" watches="2" workflowId="44555"> <description><! CDATA +*Setup:*+  Network Topology: 1 channel, 2 orgs, 2 peers per org, each peer with CouchDB container for stateDB, 3 kafka, 1 zookeepers, 3 orderers, 2 ca, TLS enabled, put all peers in both orgs in the private collection from the start, require only any 1 peer endorsement, BTL=0,  *push/required=0*. When start network, join only org1peer0 to the channel;  do not join the other 3 peers yet. Client Driver: PTE  *Note:* Since PTE cannot join only some peers of an org, we'll need to fix up PTE first. Or we can do this step manually by joining org1peer0 by CLI command.  Or, maybe we could start network with 2 orgs and 2 peers per org - but INSTALL cc ONLY on org1peer0 (if PTE is able to do that).  +*Test Steps:*+  1) chaincode: install only one chaincode, https://github.com/hyperledger/fabric/blob/master/examples/chaincode/go/map/map.go; and join only org1peer0 to channel1, but still include all peers in the privatedb collection, and instantiate on channel1 on org1peer0  2) Using 1 (or more threads if that is not enough), send 1000 invoke getPutPrivate transactions with private data to org1peer0  *  thread 1 invokes 1000 TXs to org1 peer0 *     ...  thread <n> invokes 1000 TXs to org1 peer0     3) *Add/join a new peer org1peer1 to channel1*, with a large amount of private data history. (Or install cc on org1peer1 now.)  4) Ensure org1peer1 can reconcile old private data efficiently: simultaneously send transactions to both peers, WHILE Query ALL the transactions on the newly joined peer:  *  thread 2 invokes 1000 TXs to org1 peer0 *  thread 3 invokes 1000 TXs to org1 peer1 and then validates/queries the last few TXs *  thread 4 queries on org1peer1 all 2000 TXs with reconciled data from threads 1 and 2  Analyze TPS on all peers, and ensure all queries work. Note: we may need to use longer pte query timeout values. And/or to configure a reduced timeout value in the peer from 60 secs to 1 or 2 secs to hurry things along (refer to FAB-10599 for details).  +*Report Results in fields TestResult and TestDetails:*+ 1) hardware setup 2) Observe if TPS achieved for queries is too slow, or any other problems 3) CPU and memory usage for the Peers and CouchDB containers  ></description> </Issue>
