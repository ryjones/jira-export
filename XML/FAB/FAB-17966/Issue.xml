<Issue id="45221" key="FAB-17966" number="17966" project="10002" reporter="tock" assignee="wlahti" creator="tock" type="10001" summary="Integration tests for channel participation API" priority="3" resolution="10000" status="6" created="2020-06-08 13:05:29.0" updated="2020-11-17 13:56:55.0" resolutiondate="2020-11-17 13:56:55.0" votes="0" watches="1" workflowId="59133" archived="N"> <description><! CDATA Integration tests for the channel participation API. - Create test helpers that create and invoke REST API calls on server.  (/)  *Test cases*  With a system channel: * Test list, list all, of network with system channel, w solo/kafka/ & raft. On raft: with multiple orderers & multiple channels, not all orderers on all channels. (/) * Test the negatives of a network with a system channel - cannot join, cannot delete an app channel.   (/)  Without a system channel (raft only): * Test join: as member, follower, with & without on-boarding.   (/) * Test join: switch between member & follower and vise versa.   (/) * Test remove: remove app channels. Add and remove same channel multiple times.  (/) * Remove a channel from an orderer and join it back again to the same orderer. (/) * Verify the effects of join & remove with list & list all   (/)  Test crash fault tolerance: * On-boarding: when the orderer crashes before the follower reaches the join-block (i.e. before it was deleted from the file repo) (/) * Following: when the orderer crashes after the follower reaches the join-block (i.e. it was already deleted form the file repo) (/) * Remove: orderer crashes while removing a (big) channel (i.e. before removing the marker form the file repo - not sure how to crash the orderer in the right time for this...)  Transitions between system-channel-style & API style * Test create system channel on empty network, continue to create channels the old way. (/) * Test removal of system channel on a network with channels, continue to manage with channel participation API.  (/)  ></description> </Issue>
