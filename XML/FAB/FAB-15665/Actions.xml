<Action id="60795" issue="40487" author="hengming-zhang" type="comment" created="2019-06-09 13:47:51.0" updateauthor="hengming-zhang" updated="2019-06-09 13:47:51.0"> <body><! CDATA My OS version:  macOS 10.14.5 (18F132).  ></body> </Action>
<Action id="60801" issue="40487" author="hengming-zhang" type="comment" body="Golang version: 1.11.5." created="2019-06-09 16:47:43.0" updateauthor="hengming-zhang" updated="2019-06-09 16:47:43.0"/>
<Action id="60820" issue="40487" author="denyeart" type="comment" created="2019-06-10 11:06:17.0" updateauthor="denyeart" updated="2019-06-10 11:06:17.0"> <body><! CDATA Works on my mac with {code:java} make docker-clean docker{code}  ></body> </Action>
<Action id="60826" issue="40487" author="hengming-zhang" type="comment" created="2019-06-10 11:50:26.0" updateauthor="hengming-zhang" updated="2019-06-10 11:52:50.0"> <body><! CDATA What is your environment? (Golang, macOS version, and the tar)  ~denyeart   I tried to run this command, but it still doesn't work for me...  ></body> </Action>
<Action id="61033" issue="40487" author="mastersingh24" type="comment" created="2019-06-15 17:52:04.0" updateauthor="mastersingh24" updated="2019-06-15 17:53:11.0"> <body><! CDATA You need to install GNU Tar as the version of tar that comes with macOS is incompatible with Linux/Docker.  See  https://hyperledger-fabric.readthedocs.io/en/release-1.4/dev-setup/devenv.html?highlight=tar   I believe the {{--with-default-names}} might have been deprecated in which you add GNU Tar to your path: {{export PATH=/usr/local/opt/gnu-tar/bin:$PATH}}  should work  ></body> </Action>
<Action id="61034" issue="40487" author="hengming-zhang" type="comment" created="2019-06-16 08:24:28.0" updateauthor="hengming-zhang" updated="2019-06-16 08:25:01.0"> <body><! CDATA  ~mastersingh24  Now my tar has switched to:  {{$ which tar}}  {{/usr/bin/tar}}  And I followed your suggestion to make the PATH variable:   {{$ echo $PATH}}  {{/usr/local/opt/gnu-tar/bin:/...}}  But I have still encountered the build error which you can see in the debug.log file:     debug.log: {noformat} $ cat debug.log Building docker peer-image docker build  -t hyperledger/fabric-peer .build/image/peer Sending build context to Docker daemon   33.5MB Step 1/7 : FROM hyperledger/fabric-baseos:amd64-0.4.15  ---> 9d6ec11c60ff Step 2/7 : ENV FABRIC_CFG_PATH /etc/hyperledger/fabric  ---> Running in 0b788a026e98 Removing intermediate container 0b788a026e98  ---> d6a59fbe4f2c Step 3/7 : RUN mkdir -p /var/hyperledger/production $FABRIC_CFG_PATH  ---> Running in e676a2f93296 Removing intermediate container e676a2f93296  ---> a1857b724e80 Step 4/7 : COPY payload/peer /usr/local/bin  ---> 990e0e9e27f1 Step 5/7 : ADD  payload/sampleconfig.tar.bz2 $FABRIC_CFG_PATH failed to copy files: Error processing tar file(bzip2 data invalid: bad magic value in continuation file):  make: ***  .build/image/peer/.dummy-amd64-1.4.2-snapshot-28217fe51  Error 1 {noformat}    ></body> </Action>
<Action id="61188" issue="40487" author="hengming-zhang" type="comment" created="2019-06-23 06:46:22.0" updateauthor="hengming-zhang" updated="2019-06-23 06:52:53.0"> <body><! CDATA After removing the .build directory, I can build by the `make docker` command successfully. Suggest that `make docker-clean` also removes .build directory.  ></body> </Action>
<Action id="63417" issue="40487" author="mhbauer" type="comment" created="2019-08-30 02:30:43.0" updateauthor="mhbauer" updated="2019-08-30 02:30:43.0"> <body><! CDATA I think it's debatable whether bsdtar or gnutar is doing the wrong thing here.  Either way, with the use of the -f flag, they both work the same way. There's some leading `./` added, but I'm not 100% sure if that breaks anything.  Check if https://gerrit.hyperledger.org/r/c/fabric/+/33289 helps.  ></body> </Action>
<Action id="63418" issue="40487" author="hengming-zhang" type="comment" body=" ~MHBauer  When there is a build error in .build or ./build directory in the first build `make docker` command, caused by the user is not switched to the gnutar on macOS. Then if the user switched to gnutar and rerun `make docker-clean docker` commands doesn&apos;t solve the build error problem. I think the `make docker-clean` command doesn&apos;t clean the previous build failed .tar.bz2 file(s) in .build or ./build directory." created="2019-08-30 02:53:40.0" updateauthor="hengming-zhang" updated="2019-08-30 02:53:40.0"/>
<Action id="63636" issue="40487" author="sykesm" type="comment" created="2019-09-09 18:08:39.0" updateauthor="sykesm" updated="2019-09-09 18:08:39.0"> <body><! CDATA While I don't doubt you encountered issues, this seems to be working for most of the people doing development.  If you want to clean the .build tree, you can use {{make clean}}.  ></body> </Action>
<Action id="71352" issue="40487" author="JIRAUSER21383" type="comment" created="2021-02-04 19:53:07.0" updateauthor="JIRAUSER21383" updated="2021-02-04 19:53:07.0"> <body><! CDATA I *can* confirm to  ~Hengming-Zhang . Deleting the `fabric-ca` directory altogether and redoing everything fixed it for me. The `docker-clean` command was *not* sufficient.  Also note, that just `export PATH="/usr/local/opt/gnu-tar/libexec/gnubin/tar:$PATH"` did *not* make my shell actually refer to the gnu-version of `tar`. I actually had to *still restart* the terminal.  ></body> </Action>
