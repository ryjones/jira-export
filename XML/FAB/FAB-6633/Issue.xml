<Issue id="22428" key="FAB-6633" number="6633" project="10002" reporter="binhn" creator="binhn" type="10001" summary="Microservices chaincode" priority="3" resolution="10001" status="6" created="2017-10-16 16:04:04.0" updated="2020-01-22 22:13:40.0" resolutiondate="2020-01-22 22:13:40.0" votes="0" watches="14" workflowId="35378"> <description><! CDATA Microservices architecture is a better software development style that enables flexibility in deployment and management of the applications. Basically this style decomposes the software into a suite of independently deployable (micro) services.  We want to apply this style to chaincode development.  The current chaincode runtime model loads a chaincode per container to ensure complete isolation of chaincode address space. This certainly provides security protection between chaincodes such that one chaincode can't negatively interfere with or bring down the others. However, this model comes with a cost of system resource to accommodate containers, which encourages monolithic chaincodes.   We want to improve the chaincode model such that we would have an option to load chaincode into an existing container, especially with VM-based chaincodes like Java or Nodejs. It would encourage decomposing chaincode into microservices, where each may be independently deployed and managed. We also need the chaincode life-cycle to be feather light such that microservices chaincodes can easily come and go as use-cases require short-live chaincodes.  I'd like to open up for discussion and comment on this thought, especially the following folks who have intimate knowledge in this area:  ~muralisr   ~yacovm   ~ellaki   ~ales   ~greg.haskins   ~jeffgarratt      ></description> </Issue>
