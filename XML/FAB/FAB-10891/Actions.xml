<Action id="46606" issue="31413" author="denyeart" type="comment" body=" ~yacovm  Could you assess?" created="2018-06-27 13:30:42.0" updateauthor="denyeart" updated="2018-06-27 13:30:42.0"/>
<Action id="46615" issue="31413" author="yacovm" type="comment" created="2018-06-27 14:57:03.0" updateauthor="yacovm" updated="2018-06-27 14:58:14.0"> <body><! CDATA Sure can, and  ~denniskuhnert  here is right in the reason for this - the discovery policy parsing (by design) requires some principals to be present in the policy definition.  I'm not sure it's worthwhile to support this kind of policy though, because I think it's useless for testing purposes for application developers. An empty policy means that any client can create its own RWSet and send it to the orderer to be included in the block and then deemed valid by the validation in the peer. However - client's don't have any code that creates RWSets on their own, so why would they do that? Instead, for testing - what I think make sense is that the policy would be the default policy which is "any member" and this is translated to a signature policy that the discovery service can analyze.   ~denniskuhnert  - can you describe why you're using this policy for testing fabric?     Edit: For the meantime I changed this to a story, because to me - this isn't a bug as it works by design.  ></body> </Action>
<Action id="46617" issue="31413" author="denniskuhnert" type="comment" created="2018-06-27 16:30:01.0" updateauthor="denniskuhnert" updated="2018-06-27 16:30:01.0"> <body><! CDATA I agree that this is a bad policy :)  I just used it when writing the workflow and structure of my application. And this was a predefined policy which I wanted to change later.  Just wanted to let you know that this predefined policy is not accepted. Wouldn't have thought so. Maybe a hint to the user would be nice ;)  ></body> </Action>
<Action id="46619" issue="31413" author="yacovm" type="comment" created="2018-06-27 16:44:48.0" updateauthor="yacovm" updated="2018-06-27 16:50:56.0"> <body><! CDATA {quote}Maybe a hint to the user would be nice {quote}  I think we can just document it in the  special requirements|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-overview.html#special-requirements  section  The thing is - even if the discovery service would consider this policy to be valid, it would return an empty endorsement descriptor, since the smallest set of peers to endorse the policy is actually an empty set of peers, and then the SDK would pick an empty set of peers which is really odd and I'm sure that would fail the transactions in the SDKs, so without SDK support - there is no point in doing this on the server side.  Of course, what we could do in the discovery service is just translate an empty policy to a "any member" policy, which would solve the problem completely, but then someone can argue that the discovery service isn't sound because sending to some peer an endorsement isn't the minimal number of peers (which is zero).  I'd like to hear more opinions about whether it's worth to support an empty policy at all and what should be the approach... My opinion is that it's not worth addressing as I don't see a real world use case for that.   ~jyellick  ,  ~mastersingh24  ,  ~C0rWin  ,     ></body> </Action>
<Action id="67416" issue="31413" author="sykesm" type="comment" body="Stale" created="2020-01-22 22:32:28.0" updateauthor="sykesm" updated="2020-01-22 22:32:28.0"/>
