<Action id="27520" issue="18574" author="wlahti" type="comment" created="2017-06-28 16:05:46.0" updateauthor="wlahti" updated="2017-06-28 16:05:46.0"> <body><! CDATA This looks similar (identical?) to FAB-4931. I just added the following comment there:   "This is currently working as designed. CORE_LOGGING_LEVEL sets the overall default logging level and then uses the different component levels (e.g. CORE_LOGGING_GOSSIP, CORE_LOGGING_LEDGER) to override the level for that specific component.   Perhaps to add flexibility in configuring log levels we should add a CORE_LOGGING_OVERRIDE flag to specify when to use the component override levels? There are many developers who want the currently functionality maintained but I definitely understand the desire to not use the component overrides."  ></body> </Action>
<Action id="27524" issue="18574" author="adnanchoudhury" type="comment" created="2017-06-28 16:15:12.0" updateauthor="adnanchoudhury" updated="2017-06-28 16:23:18.0"> <body><! CDATA The documentation provided in the sampleconfig/core.yaml indicates that CORE_LOGGING_LEVEL overrides the component logging, not the other way around (or maybe i am reading it wrong?) here is what the file says:    {code:java} logging: # Default logging levels are specified here. # Valid logging levels are case-insensitive strings chosen from # CRITICAL | ERROR | WARNING | NOTICE | INFO | DEBUG # The logging levels specified here can be overridden in various ways, # listed below from strongest to weakest: # # 1. The --logging-level=<level> command line option overrides all other # specifications. # # 2. The environment variable CORE_LOGGING_LEVEL otherwise applies to # all peer commands if defined as a non-empty string. # # 3. Otherwise, the specifications below apply. # Default for all modules running within the scope of a peer {code} Specifically, it seems to indicate that there are multiple ways to override logging levels, and one of the ways is to use core_logging_level.  ></body> </Action>
<Action id="27529" issue="18574" author="wlahti" type="comment" body="That section should be updated to clarify the usage, especially the line about --logging-level. " created="2017-06-28 16:22:36.0" updateauthor="wlahti" updated="2017-06-28 16:22:36.0"/>
<Action id="27531" issue="18574" author="adnanchoudhury" type="comment" body="Ah ok, is there any other documentation/comment on the usage of core-logging-level?  ~wlahti " created="2017-06-28 16:24:33.0" updateauthor="adnanchoudhury" updated="2017-06-28 16:24:33.0"/>
<Action id="27534" issue="18574" author="wlahti" type="comment" body="No other documentation but there is more planned. I think my earlier comment about covers the current functionality of CORE_LOGGING_LEVEL at the moment but please bring up any questions you may have. I&apos;ll be sure to update the comments section of core.yaml to more accurately reflect its usage. We can also consider adding the flag I mentioned to expand the functionality for different use cases/user expectations. " created="2017-06-28 16:31:58.0" updateauthor="wlahti" updated="2017-06-28 16:36:28.0"/>
<Action id="27552" issue="18574" author="adnanchoudhury" type="comment" created="2017-06-28 18:37:16.0" updateauthor="adnanchoudhury" updated="2017-06-28 18:37:37.0"> <body><! CDATA Thanks  ~wlahti  for the info, a few follow-up questions to clarify the working of the logging:  1) If there is no core_logging_level set *and* no log level mentioned for peer or peer modules in the core.yaml file, what will be logging level of the components? i.e. what is the default logging level of the components?  2) if I set the core_logging_level to DEBUG *and* have no log level mentioned for peer modules in the core.yaml file, then all the modules should log at DEBUG level, is this assumption correct?  3)  if I set the core_logging_level to DEBUG *and* have log level mentioned for *some* peer modules (not all), then all the modules that were not specified by name should log at DEBUG level, and the ones that have specific log levels will log at that specific level, is this assumption correct?  As far as the flag for override goes, I personally don't think its very important, I would be more interested in specifying the expected behavior of the loggings. In that note, it would be nice to know a) what components are there b) and their default logging levels and c) and in core.yaml file, maybe have a commented out line for each component and their defaults.     ></body> </Action>
<Action id="27557" issue="18574" author="wlahti" type="comment" created="2017-06-28 19:32:57.0" updateauthor="wlahti" updated="2017-06-28 19:32:57.0"> <body><! CDATA # The default level is INFO.  # Yes, that should be correct.  # Yes, that should be correct.   ></body> </Action>
<Action id="27716" issue="18574" author="adnanchoudhury" type="comment" body="The test description have been changed after the core_logging_level working became clear. " created="2017-06-30 16:16:21.0" updateauthor="adnanchoudhury" updated="2017-06-30 16:16:21.0"/>
