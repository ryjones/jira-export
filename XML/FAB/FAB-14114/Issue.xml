<Issue id="37533" key="FAB-14114" number="14114" project="10002" reporter="sykesm" creator="sykesm" type="10004" summary="Intermittent test failure in integration tests - panic in etcdraft_reconfig_test" priority="3" resolution="10002" status="6" created="2019-02-08 14:47:37.0" updated="2019-04-01 14:11:21.0" resolutiondate="2019-04-01 14:11:21.0" votes="0" watches="2" workflowId="49144"> <description><! CDATA In CR build https://gerrit.hyperledger.org/r/c/29177/  {code} 20:38:14 EndToEnd basic single node etcdraft network with 2 orgs and 2 channels executes a basic etcdraft network with 2 orgs and 2 channels  20:38:14 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/e2e_test.go:298 20:38:14 ------------------------------ 20:39:30 panic:  20:39:30 Your test failed. 20:39:30 Ginkgo panics to prevent subsequent assertions from running. 20:39:30 Normally Ginkgo rescues this panic so you shouldn't see it. 20:39:30  20:39:30 But, if you make an assertion in a goroutine, Ginkgo can't capture the panic. 20:39:30 To circumvent this, you should call 20:39:30  20:39:30 	defer GinkgoRecover() 20:39:30  20:39:30 at the top of the goroutine that caused this panic. 20:39:30  20:39:30  20:39:30 goroutine 3914  running : 20:39:30 github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo.Fail(0xc000bd6000, 0x171, 0xc000dccc18, 0x1, 0x1) 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:257 +0xc8 20:39:30 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match.func1(0x10efb32, 0x9) 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:130 +0x3ad 20:39:30 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc000b9fb40, 0x11e3280, 0x1ac6cc8, 0x7e7f01, 0x0, 0x0, 0x0, 0x1ac6cc8) 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:152 +0x43d 20:39:30 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc000b9fb40, 0x11e3280, 0x1ac6cc8, 0x0, 0x0, 0x0, 0xc000b9fb40) 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:49 +0x81 20:39:30 github.com/hyperledger/fabric/integration/e2e.waitForBlockReception(0xc00102e200, 0xc00114b740, 0xc00010ca00, 0x10f2269, 0xb, 0x1) 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/etcdraft_reconfig_test.go:588 +0x26e 20:39:30 github.com/hyperledger/fabric/integration/e2e.assertBlockReception.func1.1(0xc0004632a0, 0xc00114b740, 0xc00010ca00, 0x10f2269, 0xb, 0x1, 0xc00102e200) 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/etcdraft_reconfig_test.go:547 +0x87 20:39:30 created by github.com/hyperledger/fabric/integration/e2e.assertBlockReception.func1 20:39:30 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/etcdraft_reconfig_test.go:542 +0xfd {code}  ></description> </Issue>
