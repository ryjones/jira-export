<Issue id="30327" key="FAB-10161" number="10161" project="10002" reporter="nagap" assignee="ratnakar" creator="nagap" type="10001" summary="Upgrade Test: NodeJs SDK 1.1 compatibility against 1.2 network compornents" priority="2" resolution="10000" status="6" created="2018-05-17 02:40:55.0" updated="2018-09-13 20:13:26.0" resolutiondate="2018-06-22 13:35:50.0" votes="0" watches="4" workflowId="42212"> <description><! CDATA ||Integration Test Suite||Node.js SDK||Fabric (peer/orderer)||Fabric-CA|| Description of the testcase|| |1.1|1.1|1.1|*1.2*|Refer  #Case 1  below| |1.1|1.1|*1.2*|1.1|Refer Case 2 below| |1.1|1.1|*1.2*|*1.2*|Refer Case 3 below| |1.1|*1.2*|*1.2*|*1.2*|Refer Case 4 below|     _+Pre-requisite+_:  1. pull the the fabric-peer / fabric-orderer /fabric-ca docker images with tag *x86_64-1.1.0*  2. Generate the latest images on master branch of *fabric* and *fabric-ca* repo  At the time of this test image versions are as following  fabric version      : *amd64-1.2.0-snapshot-3436f454f*  fabric-ca version : *amd64-1.2.0-snapshot-744e032*    ----  #Case 1  {code:java} Nodejs Integration Test Suite at 1.1 , Node.js SDK at 1.1, Fabric is at 1.1 & Fabric-CA is at 1.2  Step 1 : Clone the repo (Default it points to release-1.1 branch) git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:x86_64-1.1.0 export DOCKER_IMG_CA_TAG=:amd64-1.2.0-snapshot-744e032 export THIRDPARTY_IMG_TAG=:x86_64-0.4.6  Step 6: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 7: Execute the following command and make sure all the tests are passing now   "gulp test"{code} ---- Case 2 {code:java} Nodejs Integration Test Suite at 1.1 , Node.js SDK at 1.1, Fabric is at 1.2 & Fabric-CA is at 1.1  Step 1 : Clone the repo (Default it points to release-1.1 branch) git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.2.0-snapshot-3436f454f export DOCKER_IMG_CA_TAG=:x86_64-1.1.0 export THIRDPARTY_IMG_TAG=:amd64-0.4.8  Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.2 network needs all the required crypto/channel artifacts that are available in master branch)   Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code} ---- Case 3 {code:java} Nodejs Integration Test Suite at 1.1 , Node.js SDK at 1.1, Fabric is at 1.2 & Fabric-CA is at 1.2   Step 1 : Clone the repo (Default it points to release-1.1 branch) git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.2.0-snapshot-3436f454f export DOCKER_IMG_CA_TAG=:amd64-1.2.0-snapshot-744e032 export THIRDPARTY_IMG_TAG=:amd64-0.4.8  Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.2 network needs all the required crypto/channel artifacts that are available in master branch)   Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code} ---- Case 4: {code:java} Nodejs Integration Test Suite at 1.1 , Node.js SDK at 1.2, Fabric is at 1.2 & Fabric-CA is at 1.2   Step 1 : Clone the repo (Default it points to release-1.1 branch) git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install make sure to use latest 1.2 node modules for the clients fabric-client and fabric-ca-client (As of this testing used the version: 1.2.0-snapshot.62) rm -rf node_modules/fabric-c* npm install fabric-client@1.2.0-snapshot.68 npm install fabric-ca-client@1.2.0-snapshot.68  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.2.0-snapshot-3436f454f export DOCKER_IMG_CA_TAG=:amd64-1.2.0-snapshot-744e032 export THIRDPARTY_IMG_TAG=:amd64-0.4.8  Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.2 network needs all the required crypto/channel artifacts that are available in master branch)   Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code}  ></description> </Issue>
