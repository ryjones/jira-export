<Action id="23669" issue="16558" author="kchristidis" type="comment" body=" ~mastersingh24 ,  ~yacovm ,  ~Ratnakar : Let me know what you think." created="2017-05-10 17:49:19.0" updateauthor="kchristidis" updated="2017-05-10 17:49:36.0"/>
<Action id="23688" issue="16558" author="yacovm" type="comment" created="2017-05-10 19:07:07.0" updateauthor="yacovm" updated="2017-05-10 19:08:07.0"> <body><! CDATA 1) Well first of all, we both know that: {quote}- time.Sleep(2 * time.Second) + time.Sleep(10 * time.Second) {quote} Isn't a fix in any way ;)  We need to wait for  ~nnao  's fix (Do you need help by the way?  ~nnao )  2) Ideally we'd want to have some easy way to toggle this using the network_setup.sh script, and I assume we can somehow leverage extensions like:    {quote}orderer.example.com: extends: file: base/docker-compose-base.yaml service: orderer.example.com container_name: orderer.example.com {quote}  From  docker-compose-cli.yaml|https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/docker-compose-cli.yaml#L7   3) {quote}Do we modify the default configuration so that it runs on Kafka? {quote} If Kafka orderer is stable and its the one that everyone are going to use in production I see benefit in doing so, because it would make more bugs to surface quicker don't you think?  ></body> </Action>
<Action id="23690" issue="16558" author="kchristidis" type="comment" created="2017-05-10 19:20:58.0" updateauthor="kchristidis" updated="2017-05-10 19:20:58.0"> <body><! CDATA Yacov, thanks for the feedback.  > Isn't a fix in any way  !https://jira.hyperledger.org/images/icons/emoticons/wink.png|width=16,height=16!  I know – see  https://chat.hyperledger.org/channel/fabric-consensus?msg=WajejQvRJS5zSudb8  and the fact that I had added Nao's fix as a blocker in this issue.  > If Kafka orderer is stable and its the one that everyone are going to use in production I see benefit in doing so, because it would make more bugs to surface quicker don't you think?  I'm with you. I'd like us to move to that direction actually.  Let's see what Ratnakar and Gari have in mind as well.  If there are no disagreements, I'll ping Ratnakar so that we proceed as you suggest.     ></body> </Action>
<Action id="23697" issue="16558" author="ratnakar" type="comment" created="2017-05-10 20:01:53.0" updateauthor="ratnakar" updated="2017-05-10 20:01:53.0"> <body><! CDATA  ~kchristidis  I was requested by some people from community about including kafka brokers in e2e_cli as well.  since I was asked to kee minimal configurations I used solo orderer earlier. however I would agree with you and  ~yacovm  to use KAFKA as default configuration for e2e_cli  For our tests with kafka configuration, we used a work around. I.e, after create channel (failure) we do fetch to get the block .   ~mastersingh24  could you please provide your inputs here.     ></body> </Action>
<Action id="23702" issue="16558" author="kchristidis" type="comment" created="2017-05-10 21:17:12.0" updateauthor="kchristidis" updated="2017-05-10 21:17:12.0"> <body><! CDATA > For our tests with kafka configuration, we used a work around. I.e, after create channel (failure) we do fetch to get the block .  Can you expand on this?  ></body> </Action>
<Action id="23720" issue="16558" author="ratnakar" type="comment" created="2017-05-11 04:56:35.0" updateauthor="ratnakar" updated="2017-05-11 04:57:20.0"> <body><! CDATA when Kafka is used instead of solo, It always fails at channel creation. hence I wait for few seconds and fetch for channel block.  It is not a best practice or a work around, However for end2end usecase  to work i added this.  For instance, see the following  lines|https://github.com/ratnakar-asara/fabric_e2e_cli/blob/master/scripts/script.sh#L72-L74  from the script  {code:java} peer channel create -o orderer0.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA sleep 5 peer channel fetch -o orderer0.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA  {code}  ></body> </Action>
<Action id="23722" issue="16558" author="kchristidis" type="comment" body="Got it, thanks - Yacov clarified this for me as well." created="2017-05-11 06:31:41.0" updateauthor="kchristidis" updated="2017-05-11 06:31:41.0"/>
<Action id="23797" issue="16558" author="kchristidis" type="comment" body=" ~Ratnakar : When you find some spare cycles, let us please proceed as Yacov described esp. now that FAB-2892 is merged. I am assigning this to you so that it doesn&apos;t slip through the cracks, but feel free to re-assign as you see fit." created="2017-05-12 13:11:33.0" updateauthor="kchristidis" updated="2017-05-12 13:11:33.0"/>
<Action id="24718" issue="16558" author="kchristidis" type="comment" created="2017-05-31 04:16:24.0" updateauthor="kchristidis" updated="2017-05-31 04:16:24.0"> <body><! CDATA Given the number of open fronts we still have and the deadlines for the 1.0 cut, this will probably need to be deferred. (This is unfortunate, and kinda backwards, but it is what it is.)  Updating this JIRA accordingly.  ></body> </Action>
<Action id="28683" issue="16558" author="kchristidis" type="comment" created="2017-07-19 16:23:51.0" updateauthor="kchristidis" updated="2017-07-19 16:23:51.0"> <body><! CDATA  ~Ratnakar : When you find some spare cycles, can we please revive this for inclusion in v1.x.x.?  For reference to others, Ratnakar's abandoned changeset is here: https://gerrit.hyperledger.org/r/#/c/9501/  ></body> </Action>
<Action id="29048" issue="16558" author="ratnakar" type="comment" body="https://gerrit.hyperledger.org/r/#/c/11789" created="2017-07-26 15:48:30.0" updateauthor="ratnakar" updated="2017-07-26 15:48:30.0"/>
