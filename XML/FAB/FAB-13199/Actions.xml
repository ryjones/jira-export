<Action id="54622" issue="36011" author="c0rwin" type="comment" created="2018-12-10 21:02:28.0" updateauthor="c0rwin" updated="2018-12-10 21:02:28.0"> <body><! CDATA seems like following test caused timeout:  {code} 			It("late node can catch up", func() { 				network.init() 				network.start(1, 2) 				network.elect(1)  				c1.cutter.CutNext = true 				err := c1.Order(env, 0) 				Expect(err).ToNot(HaveOccurred())  				Eventually(func() int { return c1.support.WriteBlockCallCount() }, LongEventualTimeout).Should(Equal(1)) 				Eventually(func() int { return c2.support.WriteBlockCallCount() }, LongEventualTimeout).Should(Equal(1)) 				Eventually(func() int { return c3.support.WriteBlockCallCount() }, LongEventualTimeout).Should(Equal(0))  				network.start(3)  				c1.clock.Increment(interval) 				Eventually(func() int { return c3.support.WriteBlockCallCount() }, LongEventualTimeout).Should(Equal(1))  				network.stop() 			}) {code}  /cc  ~guoger   ></body> </Action>
<Action id="54674" issue="36011" author="sykesm" type="comment" created="2018-12-11 15:20:27.0" updateauthor="sykesm" updated="2018-12-11 15:20:27.0"> <body><! CDATA Hit again on current master in ci.   ^console-timestamp.log.gz.txt    ></body> </Action>
<Action id="54952" issue="36011" author="sykesm" type="comment" created="2018-12-19 01:40:39.0" updateauthor="sykesm" updated="2018-12-19 01:40:39.0"> <body><! CDATA Hit again on current master in ci.  https://gerrit.hyperledger.org/r/c/28266/1 https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/7304/console  ></body> </Action>
<Action id="55801" issue="36011" author="sykesm" type="comment" created="2019-01-18 16:45:26.0" updateauthor="sykesm" updated="2019-01-18 16:45:26.0"> <body><! CDATA And again.  https://gerrit.hyperledger.org/r/c/28798/  {code} 16:42:45 panic: test timed out after 20m0s {code}  ></body> </Action>
<Action id="55884" issue="36011" author="guoger" type="comment" body=" https://gerrit.hyperledger.org/r/c/28846  hopefully makes this timeout more debuggable. l don&apos;t currently have a better approach except for waiting for its next occurrence..." created="2019-01-21 02:54:45.0" updateauthor="guoger" updated="2019-01-21 02:55:51.0"/>
<Action id="56301" issue="36011" author="guoger" type="comment" body="This is fairly hard to reproduce locally, and CI doesn&apos;t give us much debug info. A CR is submitted to hopefully make this more debuggable. Given the rate of this occurrence is fairly low, I&apos;m closing this task for now, and pls feel free to reopen when anyone hits this again." created="2019-01-29 02:52:15.0" updateauthor="guoger" updated="2019-01-29 02:52:15.0"/>
