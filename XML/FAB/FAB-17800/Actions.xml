<Action id="70471" issue="44933" author="wenjian" type="comment" body="PR:Â https://github.com/hyperledger/fabric/pull/1990" created="2020-10-08 14:46:15.0" updateauthor="wenjian" updated="2020-10-08 14:46:15.0"/>
<Action id="70559" issue="44933" author="manish-sethi" type="comment" created="2020-10-26 03:28:48.0" updateauthor="manish-sethi" updated="2020-10-26 03:28:48.0"> <body><! CDATA Adding more details on the decision:  In the current implementation, the command {{reset}} drops the derived databases (such as statedb, historydb, and blockindex) and truncates the blockfiles for all the channels to the genesis block level. This leaves the peer largely in a state as if the peer has just joined the channels using the genesis blocks, except some additional maintenance of maximum visited height for each channel to defer endorsements until the peer reaches the previous height. However, with the introduction of joining a channel using a snapshot instead of a genesis block, we cannot allow for dropping the databases. This is because, these databases cannot be rebuilt in the absence of missing data that was supplied by the snapshot. This leaves us with the following two options if we want to continue to support the reset command  1)  Keep the snapshot package even after channel has been constructed only for the purpose of supporting the {{reset}} command. However, this approach requires additional storage just for supporting the {{reset}}, which is not a strategic operation as such. Instead a new peer can always be built  2) Make the {{reset}} a channel specific command and allow only for the channels that has been bootstrapped from the genesis block. However, this introduces non-uniformity in operations management across channels - based on how the channel has been created. In addition, this breaks the backward compatibility, as this would require the couchdb to be up while peer to be down, so that we can delete the channel specific data from couchdb.  Considering the above, it is better to keep supporting the {{reset}} command in the current form for backward compatibility only (i.e., as long as peer does not use snapshots) but return error if any channel on the peer is bootstrapped from snapshot. Instead, we would later introduce another command {{unjoin channel}} that should work across channels in a uniform way and would perhaps be more useful in broader scenarios beyond allowing for fixing the bugs.  The above description largely applies to other similar commands i.e., {{rollback}} and {{rebuilddbs}}. We can give the same treatment to those commands as well. Having said that, rollback command may still offer some benefits if supported in a different form for limited number of previous blocks across channels types. One way of achieving this is by maintaining the undo logs for limited number of db batches. However, since with the combination of snaphots and unjoin command, it may always be possible to unjoin and join again by the recent snapshot. So, it's better to see if there would be a requirement for the rollback in the future.  ></body> </Action>
<Action id="70562" issue="44933" author="manish-sethi" type="comment" body="https://github.com/hyperledger/fabric/pull/2044" created="2020-10-26 14:44:57.0" updateauthor="manish-sethi" updated="2020-10-26 14:44:57.0"/>
