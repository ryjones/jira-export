<Issue id="32344" key="FAB-11371" number="11371" project="10002" reporter="elli-androulaki" assignee="mathiasb303" creator="elli-androulaki" type="10003" summary="As a token infrastructure (peer) developer I would like to implement the Token Management System Transactor interface for transferring tokens and be able to verify its outputs" priority="3" resolution="10000" status="6" created="2018-07-27 14:20:25.0" updated="2018-11-27 08:29:54.0" resolutiondate="2018-11-12 12:21:02.0" votes="0" watches="2" workflowId="43545"> <description><! CDATA A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).     At the completion of this work a Token Management System (TMS) is implemented as follows:  * the Token Management System accommodates requests to construct _transfer proofs_ * the TMS accommodates requests to verify _transfer_ requests __ assuming a mockup of ledger (KVS) as follows: ** *malformed* _transfer_ _requests_ or_requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created, double-spending attacks spending attacks) are *rejected* and have *no* impact to the mockup ledger ** *wellformed* _transfer_ _requests_ or _requests_ that conform with the TMS rules (e.g., correctness of the tokens created w.r.t. the ones consumed) are *accepted* and modify the state of mockup ledger   ></description> </Issue>
