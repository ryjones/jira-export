<Issue id="31562" key="FAB-10991" number="10991" project="10002" reporter="scottz" assignee="scottz" creator="scottz" type="10004" summary="fabric-test daily svt, 2 behave test scenarios fail for orderer.feature test FAB-4808 when batchTimeout=10s" priority="2" resolution="10000" status="6" created="2018-07-02 18:59:58.0" updated="2019-03-19 11:13:24.0" resolutiondate="2018-07-05 16:35:49.0" votes="0" watches="1" workflowId="42599"> <description><! CDATA In today's daily svt fabric-test results in master (v1.2), https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-svt-x86_64/68/consoleFull, 2 out of 4 behave test scenarios for FAB-4808 are failing - the two with a longer batchTimeout of 10s (instead of 2s).  This passes fine on desktop. And usually passes in the CI tests too. Not sure what happened today. It appears it is taking longer for our behave framework code to get a return, and when we try to sleep 5s and query before the 10s timeout, we are too late. The invoke is getting processed BEFORE we expect. My proposed solution is to allow a few seconds for this inconsistency. We can increase the batchTimeout to 20s in our test (and increase the internal "wait time" after the first query from 8 to 16 secs.     The failing test scenarios are: |13:44:29 orderer.feature:306 FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for solo orderer -- @1.3| |13:44:29 orderer.feature:307 FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.4|  ></description> </Issue>
