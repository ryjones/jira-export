<Issue id="41914" key="FAB-16355" number="16355" project="10002" reporter="denyeart" assignee="wenjian" creator="denyeart" type="10001" summary="CouchDB channel application capability - As a channel administrator, I want to ensure all channel transactions conform to CouchDB requirements" priority="3" status="10100" created="2019-08-20 12:22:11.0" updated="2020-04-25 14:09:25.0" votes="0" watches="8" workflowId="54955"> <description><! CDATA *Background*:  Chaincode written to work against LevelDB will also work against CouchDB, as the CouchDB state database supports a superset of the chaincode APIs â€“ everything LevelDB state database supports plus JSON query (GetQueryResult API).  There is one caveat - chaincode execution on CouchDB state database performs additional validation (at endorsement and validation time):  1) Check for CouchDB reserved fields in the top level of the JSON (FAB-8006): _id, _rev, _deleted, ~version.  2) Check for CouchDB valid keys - keys must be valid UTF8, and not start with underscore.  A mixed network with some LevelDB peers and some CouchDB peers could therefore result in state forks, if all the endorsers of a transaction are using LevelDB, and their read/write set includes invalid CouchDB keys or fields (would be validated on LevelDB peers and invalidated on CouchDB peers).  *Proposal*:  To protect against this possibility, a new CouchDB validation "application capability" will be added to the channel configuration.  With the capability enabled, all transactions  must adhere to the CouchDB restrictions in order to be successfully endorsed. Note that this will not be re-checked at validation time, since peers without access to private data will not be able to validate the endorsed data. That is, the endorsement policy must be strong enough to ensure that the endorsed transactions adhere to the CouchDB validations.  *Notes:*  A LevelDB based peer can still join a channel with CouchDB capability and can even endorse transactions, but any data endorsed on this peer must adhere to CouchDB restrictions. Of course, older LevelDB peers will not enforce the CouchDB capability, therefore it is advised that channel administrators also enable a minimum application capability matching the release where the CouchDB capability was added. e.g. if the CouchDB validation capability was added in v1.4.3, it would be advised to set channel application capability of v1.4.3 as well as the CouchDB capability.  A CouchDB based peer can still join a channel without CouchDB capability, however this is not recommended and the peer owner needs to be aware that their peer's state may not match other peers in the channel. If a fork does result on this peer, the BlockCommitHash for this peer will be different than the other LevelDB peers, and the fork will therefore be detectable.  For existing channels, the channel administrators must validate that all channel data conforms to CouchDB before enabling the capability.  This can be accomplished by joining an existing channel from a CouchDB peer  and from a LevelDB peer and ensuring that their BlockCommitHash's match (any invalidations only on the CouchDB peer would result in a BlockCommitHash mismatch relative to the LevelDB peers).     ></description> </Issue>
