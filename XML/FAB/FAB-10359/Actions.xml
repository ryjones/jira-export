<Action id="45203" issue="30591" author="sambhavdutt" type="comment" created="2018-05-28 17:00:00.0" updateauthor="sambhavdutt" updated="2018-05-28 17:36:28.0"> <body><! CDATA The daily tests fail now starting from CouchDB tests in Behave feature tests, as a chaincode container peer0.org1.example.com-mycc1-0 is not running.   *fabric-test Commit: ef3cfae*  {code:java} 00:08:33     When a user defines a couchDB index named index_behave_test with design document name "indexdoc_behave_test" containing the fields "size" to the chaincode at path "github.com/hyperledger/fabric-samples/chaincode/marbles02/go"                     # steps/basic_impl.py:146 00:08:33     When a user sets up a channel named "mychannel1"                                                                                                                                                                                                      # steps/endorser_impl.py:45 00:08:33 2018-05-28 04:08:33.400 UTC  common/tools/configtxgen  main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'. 00:08:33 2018-05-28 04:08:33.400 UTC  common/tools/configtxgen  main -> INFO 002 Loading configuration 00:08:33 2018-05-28 04:08:33.466 UTC  common/tools/configtxgen  doOutputChannelCreateTx -> INFO 003 Generating new channel configtx 00:08:33 2018-05-28 04:08:33.466 UTC  common/tools/configtxgen/encoder  NewApplicationGroup -> WARN 004 Default policy emission is deprecated, please include policy specificiations for the application group in configtx.yaml 00:08:33 2018-05-28 04:08:33.467 UTC  common/tools/configtxgen/encoder  NewApplicationOrgGroup -> WARN 005 Default policy emission is deprecated, please include policy specificiations for the application org group Org1ExampleCom in configtx.yaml 00:08:33 2018-05-28 04:08:33.467 UTC  common/tools/configtxgen/encoder  NewApplicationOrgGroup -> WARN 006 Default policy emission is deprecated, please include policy specificiations for the application org group Org2ExampleCom in configtx.yaml 00:08:33 2018-05-28 04:08:33.468 UTC  common/tools/configtxgen  doOutputChannelCreateTx -> INFO 007 Writing new channel tx 00:10:43     And a user deploys chaincode at path "github.com/hyperledger/fabric-samples/chaincode/marbles02/go" with args  ""  with name "mycc1" with language "GOLANG" on channel "mychannel1"                                                                   # steps/endorser_impl.py:93 00:16:04       Assertion Failed: The expected chaincode container b7eb0d22622c11e89dccfa163e425a82-peer0.org1.example.com-mycc1-0 is not running 00:16:04       Captured stdout: 00:16:04       testConfigs: configs/b7eb0d22622c11e89dccfa163e425a82 00:16:04        'index_behave_test.json', 'indexOwner.json'  {code}  *Build Log* https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/365/consoleFull  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/365/  ></body> </Action>
<Action id="45344" issue="30591" author="sambhavdutt" type="comment" created="2018-05-31 14:00:29.0" updateauthor="sambhavdutt" updated="2018-05-31 14:02:46.0"> <body><! CDATA The OTE tests are failing in the fabric-test-daily with Assertion error. I have copied the errors from the recent tests,  *fabric-test Commit: 64b7526*  {code:java} 04:39:44 E           AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-6996_1ch_solo test with OTE====================\nnumber of orderers: 1\nordererLogLevel:  INFO\nnumber of CA: 0\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 1\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=solo, nKafka=0, nOrderer=1, nZoo=0\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-test-daily-x86_64/gopath\n \n        ####################################################### \n        #                generate crypto-config.yaml          # \n        ####################################################### \ngenerate crypto-config.yaml ...\n./gen_crypto_cfg.sh -o 1 -r 1 -p 1 -C example.com\nnOrderer:  1\nnOrg:  1\npeersPerOrg: 1\ncomName:  example.com\nnOrderer=1, peersPerOrg=1, nOrg=1\ncfgOutFile=/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL/crypto-config.yaml\n \n        ####################################################### \n        #                execute cryptogen                    # \n         02:55:20 orderer_ote.py::perf_orderer::test_FAB_6996_solo_1ch FAILED 02:59:43 orderer_ote.py::perf_orderer::test_FAB_7024_solo_1ch_500batchsize FAILED 03:04:05 orderer_ote.py::perf_orderer::test_FAB_7026_solo_3ch FAILED 03:08:28 orderer_ote.py::perf_orderer::test_FAB_7027_solo_3ch_500batchsize FAILED 03:12:57 orderer_ote.py::perf_orderer::test_FAB_7036_3ord_kafka_1ch FAILED 03:17:27 orderer_ote.py::perf_orderer::test_FAB_7037_3ord_kafka_1ch_500batchsize FAILED 03:22:02 orderer_ote.py::perf_orderer::test_FAB_7038_3ord_kafka_3ch FAILED 03:26:37 orderer_ote.py::perf_orderer::test_FAB_7039_3ord_kafka_3ch_500batchsize FAILED 03:31:10 orderer_ote.py::perf_orderer::test_FAB_7058_6ord_kafka_1ch FAILED 03:35:44 orderer_ote.py::perf_orderer::test_FAB_7059_6ord_kafka_1ch_500batchsize FAILED 03:40:31 orderer_ote.py::perf_orderer::test_FAB_7060_6ord_kafka_3ch FAILED 03:45:16 orderer_ote.py::perf_orderer::test_FAB_7061_6ord_kafka_3ch_500batchsize FAILED 03:49:41 orderer_ote.py::perf_orderer::test_FAB_7070_solo_1ch_10kpayload FAILED 03:54:08 orderer_ote.py::perf_orderer::test_FAB_7071_solo_1ch_500batchsize_10kpayload FAILED 03:58:33 orderer_ote.py::perf_orderer::test_FAB_7072_solo_3ch_10kpayload FAILED 04:02:59 orderer_ote.py::perf_orderer::test_FAB_7073_solo_3ch_500batchsize_10kpayload FAILED 04:07:28 orderer_ote.py::perf_orderer::test_FAB_7074_3ord_kafka_1ch_10kpayload FAILED 04:11:57 orderer_ote.py::perf_orderer::test_FAB_7075_3ord_kafka_1ch_500batchsize_10kpayload FAILED 04:16:31 orderer_ote.py::perf_orderer::test_FAB_7076_3ord_kafka_3ch_10kpayload FAILED 04:21:06 orderer_ote.py::perf_orderer::test_FAB_7077_3ord_kafka_3ch_500batchsize_10kpayload FAILED 04:25:40 orderer_ote.py::perf_orderer::test_FAB_7078_6ord_kafka_1ch_10kpayload FAILED 04:30:13 orderer_ote.py::perf_orderer::test_FAB_7079_6ord_kafka_1ch_500batchsize_10kpayload FAILED 04:34:59 orderer_ote.py::perf_orderer::test_FAB_7080_6ord_kafka_3ch_10kpayload FAILED 04:39:44 orderer_ote.py::perf_orderer::test_FAB_7081_6ord_kafka_3ch_500batchsize_10kpayload FAILED {code}  *Build Logs* https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/368/testReport/orderer_ote/perf_orderer/test_FAB_6996_solo_1ch/  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/368/   ></body> </Action>
<Action id="45368" issue="30591" author="scottz" type="comment" body=" https://gerrit.hyperledger.org/r/#/c/22643/  addresses the problem with the networks not being created (and  observable as the cause for the &quot;chaincode not instantiated&quot; error) due to the &quot;peer channel create&quot; command missing the &quot;s&quot; for seconds when specifying a timeout of 300s" created="2018-05-31 17:55:24.0" updateauthor="scottz" updated="2018-05-31 17:55:24.0"/>
<Action id="45408" issue="30591" author="sambhavdutt" type="comment" created="2018-06-01 13:34:25.0" updateauthor="sambhavdutt" updated="2018-06-01 13:34:25.0"> <body><! CDATA  ~scottz   ~latitiah   ~AdnanChoudhury   The OTE test is passing in the smoke tests merge jobs, and the daily smoke tests, that build on the latest merged commit. There are some fails in the verify tests but they will pass if the patch is re based. The merge tests that run on the latest commit are passing the OTE.   *Build Logs*   https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/test_results_analyzer/   *Daily* -  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-smoke-test-daily-x86_64/150/   *Merge* -  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-merge-x86_64/305/   ></body> </Action>
