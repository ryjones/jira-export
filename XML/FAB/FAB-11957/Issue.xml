<Issue id="33674" key="FAB-11957" number="11957" project="10002" reporter="kirin" creator="kirin" type="10004" summary="use kubernetes deploy fabric 1.1.0" priority="3" resolution="10204" status="6" created="2018-09-12 04:21:16.0" updated="2018-12-01 11:20:44.0" resolutiondate="2018-12-01 11:20:44.0" votes="0" watches="2" workflowId="44973"> <description><! CDATA I'm use kubernetes deployment fabric   Basic environmental instructions  operating system： Ubuntu 16.04.3  kubernetes version: v1.11.2   kubernetes network plugin: flannel  kubernetes DNS use: core dns  kubernetes one master and one work node.  fabric use release 1.1.0 docker images.     fabric topology  consensus： kafka  three zookeeper node and four kafka node.  three orderer node and four peer node  The deployment of orderer，  the orderer container log    !image-2018-09-12-12-16-02-408.png!  I'm use deployment orderer yaml file     --- kind: Service apiVersion: v1 metadata: name: orderer0 namespace: dev spec: clusterIP: None #type: NodePort ports: - name: orderer port: 7050 targetPort: 7050 selector: app: orderer0  --- apiVersion: apps/v1beta1 kind: StatefulSet metadata: name: orderer0 namespace: dev labels: app: orderer0 spec: serviceName: orderer0 selector: matchLabels: app: orderer0 replicas: 1 template: metadata: labels: app: orderer0 spec: restartPolicy: Always #hostname: orderer0.arxanfintech.com containers: - name: orderer0 image: hyperledger/fabric-orderer:x86_64-1.1.0 imagePullPolicy: IfNotPresent ports: - containerPort: 7050 command:   "/bin/bash","-c","hostname `echo $HOST_NAME` ; orderer"   securityContext: capabilities: add: - SYS_ADMIN env: - name: HOST_NAME value: orderer0.arxanfintech.com - name: MY_POD_IP valueFrom: fieldRef: fieldPath: status.podIP - name: ORDERER_GENERAL_LISTENPORT value: '7050' - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE value: "host" - name: ORDERER_GENERAL_LOGLEVEL value: debug - name: ORDERER_GENERAL_LISTENADDRESS value: '0.0.0.0' - name: ORDERER_GENERAL_GENESISMETHOD value: file - name: ORDERER_GENERAL_GENESISFILE value: /var/hyperledger/orderer/orderer.genesis.block - name: ORDERER_GENERAL_LOCALMSPID value: OrdererMSP - name: ORDERER_GENERAL_LOCALMSPDIR value: /var/hyperledger/orderer/msp - name: ORDERER_GENERAL_TLS_ENABLED value: 'true' - name: ORDERER_GENERAL_TLS_PRIVATEKEY value: /var/hyperledger/orderer/tls/server.key - name: ORDERER_GENERAL_TLS_CERTIFICATE value: /var/hyperledger/orderer/tls/server.crt - name: ORDERER_GENERAL_TLS_ROOTCAS value: ' /var/hyperledger/orderer/tls/ca.crt ' - name: ORDERER_KAFKA_RETRY_SHORTINTERVAL value: '1s' - name: ORDERER_KAFKA_RETRY_SHORTTOTAL value: '30s' - name: ORDERER_KAFKA_VERBOSE value: 'true' - name: CORE_LOGGING_GRPC value: debug - name: CORE_VM_ENDPOINT value: unix:///host/var/run/docker.sock readinessProbe: tcpSocket: port: 7050 initialDelaySeconds: 15 periodSeconds: 5 livenessProbe: tcpSocket: port: 7050 initialDelaySeconds: 10 periodSeconds: 10 volumeMounts: - mountPath: /var/hyperledger/orderer/msp name: orderer0 subPath: crypto-config/ordererOrganizations/arxanfintech.com/orderers/orderer0.arxanfintech.com/msp - mountPath: /var/hyperledger/orderer/tls name: orderer0 subPath: crypto-config/ordererOrganizations/arxanfintech.com/orderers/orderer0.arxanfintech.com/tls/ - mountPath: /var/hyperledger/orderer/orderer.genesis.block name: orderer0 subPath: channel-artifacts/genesis.block - mountPath: /var/hyperledger/production name: orderer0 subPath: data - mountPath: /host/var/run/docker.sock name: run - mountPath: /etc/hostname name: orderer0 subPath: hostname volumes: - name: orderer0 persistentVolumeClaim: claimName: orderer0 - name: run hostPath: path: /var/run/docker.sock  ></description> </Issue>
