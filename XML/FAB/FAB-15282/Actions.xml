<Action id="59505" issue="39519" author="yacovm" type="comment" created="2019-04-25 17:57:28.0" updateauthor="yacovm" updated="2019-04-25 17:57:28.0"> <body><! CDATA  ~sykesm    ></body> </Action>
<Action id="59506" issue="39519" author="nyet" type="comment" body="UDP behaves a bit differently on connection refused, but I think it still fails if DNS doesn&apos;t resolve, need to do further testing." created="2019-04-25 18:12:03.0" updateauthor="nyet" updated="2019-04-25 18:12:03.0"/>
<Action id="59507" issue="39519" author="nyet" type="comment" created="2019-04-25 18:17:29.0" updateauthor="nyet" updated="2019-04-25 18:17:29.0"> <body><! CDATA BTW this makes me think the upstream zap code probably also does not handle the case where the DNS changes for a host once the operations subsystem is initialized  That would be really really bad as well. Possibly worse, since stuff will just disappear with no trace.  ></body> </Action>
<Action id="59508" issue="39519" author="nyet" type="comment" created="2019-04-25 18:19:44.0" updateauthor="nyet" updated="2019-04-25 18:22:01.0"> <body><! CDATA In particular, docker may give components on the docker network a different internal IP. This means if the component is restarted 1) the fabric process will panic 2) if this bug is fixed, fabric will not be able to contact the statsd listener if its ip changed.  ></body> </Action>
<Action id="59533" issue="39519" author="sykesm" type="comment" created="2019-04-26 16:11:11.0" updateauthor="sykesm" updated="2019-04-26 16:11:11.0"> <body><! CDATA The panic at start is from the pre-flight check on the endpoint and intentional. If you point to a destination that does appear to be "correct," we terminate the process. If the endpoint becomes unreachable after launch or a write attempt fails, the go-kit connection manager includes recovery logic for reconnect and exponential backoff.  Also, I have no idea what this has to do with "the upstream zap" code that you're referring to.  ></body> </Action>
<Action id="59534" issue="39519" author="nyet" type="comment" created="2019-04-26 16:15:30.0" updateauthor="nyet" updated="2019-04-26 16:16:14.0"> <body><! CDATA Sorry, I misunderstood the backtrace. I assumed it was part of a connect library, but it seems to be a logging library?  Â   Also if the DNS changes, will it pick it up or will it continue to use the IP resolved at launch time?  ></body> </Action>
<Action id="59535" issue="39519" author="nyet" type="comment" created="2019-04-26 16:33:57.0" updateauthor="nyet" updated="2019-04-26 16:34:16.0"> <body><! CDATA Finally it doesn't seem to affect UDP (assuming DNS resolves); is that expected?  Thanks!  ></body> </Action>
<Action id="59598" issue="39519" author="sykesm" type="comment" created="2019-04-30 13:28:31.0" updateauthor="sykesm" updated="2019-04-30 13:28:31.0"> <body><! CDATA > Finally it doesn't seem to affect UDP (assuming DNS resolves); is that expected?  UDP is connectionless so, yeah, it's expected. Sending a UDP message presents very few failure modes to the sender but there are no assurances that the message makes it to its intended destination.  ></body> </Action>
<Action id="59599" issue="39519" author="sykesm" type="comment" created="2019-04-30 13:29:36.0" updateauthor="sykesm" updated="2019-04-30 13:29:36.0"> <body><! CDATA > Also if the DNS changes, will it pick it up or will it continue to use the IP resolved at launch time?  System and environment dependent. Using cgo resolver or plain old go resolver, TTL on DNS records, etc. No easy answer. You have to try in your target environment.  ></body> </Action>
