<Issue id="45224" key="FAB-17969" number="17969" project="10002" reporter="sstone1" creator="sstone1" type="10004" summary="Cannot enable HSM for peer CLI with environment variables" priority="3" resolution="10203" status="6" created="2020-06-08 15:00:37.0" updated="2022-10-25 18:40:43.0" resolutiondate="2022-10-25 01:11:00.0" votes="0" watches="4" workflowId="59136" archived="N"> <description><! CDATA According to this documentation:  https://hyperledger-fabric.readthedocs.io/en/release-2.0/hsm.html   You should be able to enable the use of HSM by setting the following environment variables: {noformat} CORE_PEER_BCCSP_DEFAULT=PKCS11 CORE_PEER_BCCSP_PKCS11_LIBRARY=/etc/hyperledger/fabric/libsofthsm2.so CORE_PEER_BCCSP_PKCS11_PIN=71811222 CORE_PEER_BCCSP_PKCS11_LABEL=fabric{noformat}   This works in Fabric v1.4.7 but does not work in master.  Looking at changes that might have caused this, FAB-15951 looks like a good candidate:  https://github.com/hyperledger/fabric/commit/4f7e4755fa7abc0d49a479e795923b587272cba4   It calls factory.GetDefault() very early on, before factory.InitFactories() is called. This results in the "boot BCCSP" (SW) being used and then being passed into the commands. You can see this in the log messages: {noformat} 2020-06-08 15:53:45.200 BST  bccsp  GetDefault -> DEBU 001 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2020-06-08 15:53:45.212 BST  bccsp  GetDefault -> DEBU 002 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.{noformat} (Side note, if you want to enforce call orders like that, maybe it should be a panic instead of a debug level log message?)  The end result is that the SW implementation is used instead of PKCS11, and failures occur later on as there are no private keys in the file system for the SW implementation to use.   ~sykesm   ~dereckluo  could you take a look please?  ></description> </Issue>
