<Action id="41554" issue="28495" author="susmita" type="comment" body="Please let me know your comments . ~tkueda ,  ~yoheiueda  ,  ~Exci  , ~muralisr   ." created="2018-03-13 20:26:38.0" updateauthor="susmita" updated="2018-03-13 20:26:38.0"/>
<Action id="41564" issue="28495" author="davidkhala" type="comment" body="So which part of this story you think is problematic?" created="2018-03-14 00:41:54.0" updateauthor="davidkhala" updated="2018-03-14 00:41:54.0"/>
<Action id="41569" issue="28495" author="yoheiueda" type="comment" created="2018-03-14 03:15:06.0" updateauthor="yoheiueda" updated="2018-03-14 03:15:06.0"> <body><! CDATA  ~davidkhala   The problem is that every time we submit a invoke/query transaction, the chaincode cointainer is recreated.  If we submit a second transaction while the chaincode cointainer is being recreated, we see error messages like "error: premature execution - chaincode (mycc:v0) is being launched"     I tried the balance-transfer example 10 times, I observed the symptom 3 times.  This issue significantly affects the performance.     ></body> </Action>
<Action id="41570" issue="28495" author="yoheiueda" type="comment" created="2018-03-14 03:46:20.0" updateauthor="yoheiueda" updated="2018-03-14 03:46:20.0"> <body><! CDATA I wrote down the description of my environment and instructions to reproduce the issue using balance-transfer. I saw the symptom 3 times while I tried the instructions 10 times.  {{$ lscpu}} {{Architecture:          x86_64}} {{CPU op-mode(s):        32-bit, 64-bit}} {{Byte Order:            Little Endian}} {{CPU(s):                32}} {{On-line CPU(s) list:   0-31}} {{Thread(s) per core:    2}} {{Core(s) per socket:    8}} {{Socket(s):             2}} {{NUMA node(s):          2}} {{Vendor ID:             GenuineIntel}} {{CPU family:            6}} {{Model:                 45}} {{Model name:            Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz}} {{Stepping:              7}} {{CPU MHz:               1237.371}} {{CPU max MHz:           3800.0000}} {{CPU min MHz:           1200.0000}} {{BogoMIPS:              5801.60}} {{Virtualization:        VT-x}} {{L1d cache:             32K}} {{L1i cache:             32K}} {{L2 cache:              256K}} {{L3 cache:              20480K}} {{NUMA node0 CPU(s):     0-7,16-23}} {{NUMA node1 CPU(s):     8-15,24-31}} {{Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb retpoline kaiser tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm arat pln pts}}  {{$ docker version}} {{Client:}} {{ Version:    17.12.1-ce}} {{ API version:    1.35}} {{ Go version:    go1.9.4}} {{ Git commit:    7390fc6}} {{ Built:    Tue Feb 27 22:17:40 2018}} {{ OS/Arch:    linux/amd64}}  {{Server:}} {{ Engine:}} {{  Version:    17.12.1-ce}} {{  API version:    1.35 (minimum version 1.12)}} {{  Go version:    go1.9.4}} {{  Git commit:    7390fc6}} {{  Built:    Tue Feb 27 22:16:13 2018}} {{  OS/Arch:    linux/amd64}} {{  Experimental:    false}}  {{$ node --version}} {{v8.10.0}}  {{$ lsb_release --all}} {{No LSB modules are available.}} {{Distributor ID:    Ubuntu}} {{Description:    Ubuntu 16.04.4 LTS}} {{Release:    16.04}} {{Codename:    xenial}}  {{$ uname -a}} {{Linux fx1 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux}}  {{$ for i in hyperledger/fabric-tools hyperledger/fabric-orderer hyperledger/fabric-peer  hyperledger/fabric-ccenv hyperledger/fabric-ca; do docker pull $i:x86_64-1.1.0-rc1; docker tag $i:x86_64-1.1.0-rc1 latest; done}} {{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-tools}} {{Digest: sha256:e80b049473792fe82c18418f2b06541b84ed7b0ccf90d24f61872773ecff4a72}} {{Status: Image is up to date for hyperledger/fabric-tools:x86_64-1.1.0-rc1}} {{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-orderer}} {{Digest: sha256:fd5549b24c1ebd1b69ac9863aafe36220d9c554066ba48f49dc4bbb6cb8d7bdb}} {{Status: Image is up to date for hyperledger/fabric-orderer:x86_64-1.1.0-rc1}} {{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-peer}} {{Digest: sha256:2cd593c5821b7b30997eebd87284d766501c1c98ba0838c6478fe45bb4ae9552}} {{Status: Image is up to date for hyperledger/fabric-peer:x86_64-1.1.0-rc1}} {{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-ccenv}} {{Digest: sha256:62a9a37d3bb00fc945b9284eaf018d8a2f99eb6c80c400ac012a7d0f8b6cda92}} {{Status: Image is up to date for hyperledger/fabric-ccenv:x86_64-1.1.0-rc1}} {{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-ca}} {{Digest: sha256:fb458b405ea1aaf7570a10cc1f914de2ca5ddb683f13138e380c00d180683afc}} {{Status: Image is up to date for hyperledger/fabric-ca:x86_64-1.1.0-rc1}}  {{$ git clone -b v1.1.0-rc1 https://github.com/hyperledger/fabric-samples.git}} {{Cloning into 'fabric-samples'...}} {{remote: Counting objects: 1348, done.}} {{remote: Compressing objects: 100% (10/10), done.}} {{remote: Total 1348 (delta 2), reused 10 (delta 1), pack-reused 1337}} {{Receiving objects: 100% (1348/1348), 509.34 KiB | 164.00 KiB/s, done.}} {{Resolving deltas: 100% (604/604), done.}} {{Checking connectivity... done.}} {{Note: checking out '9f9fc7e5aca48b6920b19512a26be8d79ac51886'.}}  {{You are in 'detached HEAD' state. You can look around, make experimental}} {{changes and commit them, and you can discard any commits you make in this}} {{state without impacting any branches by performing another checkout.}}  {{If you want to create a new branch to retain commits you create, you may}} {{do so (now or later) by using -b with the checkout command again. Example:}}  {{  git checkout -b <new-branch-name>}}  {{$ cd fabric-samples/balance-transfer/}} {{$ ./runApp.sh}}  {{In another terminal}}  {{$ ./testAPIs.sh}} {{$ token=$(curl -s -X POST http://localhost:4000/users -H "content-type: application/x-www-form-urlencoded" -d 'username=Jim&orgName=Org1' | jq -r '.token')}} {{$ curl -s -X GET "http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.org1.example.com&fcn=query&args=%5B%22a%22%5D" -H "authorization: Bearer $token" -H "content-type: application/json" & curl -s -X GET "http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.org1.example.com&fcn=query&args=%5B%22a%22%5D" -H "authorization: Bearer $token" -H "content-type: application/json"}} {{ 1  10229}} {{a now has {color:#ff0000}Error: error executing chaincode: premature execution - chaincode (mycc:v0) is being launched{color} after the move}} {{a now has 90 after the move}} {{$ docker logs peer0.org1.example.com 2>&1 | grep -a 'ERRO '}} {{2018-03-14 01:37:34.529 UTC  chaincode  processStream -> ERRO 537 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}} {{2018-03-14 01:38:00.926 UTC  chaincode  processStream -> ERRO 697 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}} {{2018-03-14 01:38:42.106 UTC  chaincode  processStream -> ERRO 901 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}} {{2018-03-14 01:38:53.318 UTC  chaincode  processStream -> ERRO 9c4 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}} {{2018-03-14 01:42:20.174 UTC  chaincode  ExecuteChaincode -> ERRO abf {color:#ff0000}premature execution - chaincode (mycc:v0) is being launched{color}}} {{2018-03-14 01:42:20.175 UTC  endorser  simulateProposal -> ERRO ac1  mychannel  9ad42641  {color:#ff0000}failed to invoke chaincode name:"mycc" , error: premature execution - chaincode (mycc:v0) is being launched{color}}} {{2018-03-14 01:42:20.218 UTC  chaincode  processStream -> ERRO ac5 Error handling chaincode {color:#ff0000}support stream: rpc error: code = Canceled desc = context canceled{color}}} {{2018-03-14 01:42:59.738 UTC  chaincode  processStream -> ERRO b88 Error handling chaincode {color:#ff0000}support stream: rpc error: code = Canceled desc = context canceled{color}}}  ></body> </Action>
<Action id="41572" issue="28495" author="muralisr" type="comment" created="2018-03-14 06:49:00.0" updateauthor="muralisr" updated="2018-03-14 06:49:00.0"> <body><! CDATA The problem started with FAB-5591 where there's a path where deregister occurs without corresponding chaincode removal. The problem is that the error maybe benign and chaincode not removed thus leaving the system in an inconsitent state where it believes there's no chaincode registered (and running) when it actually is. This causes subsequent invoke to attempt to restart. Eventually it does settle down.  The fix would be to always leave the deregister to be handled consistent error handling path.   ></body> </Action>
<Action id="41573" issue="28495" author="muralisr" type="comment" body="In master - https://gerrit.hyperledger.org/r/#/c/19147/ . This should be backported to 1.1 and better even 1.0." created="2018-03-14 07:08:54.0" updateauthor="muralisr" updated="2018-03-14 13:15:25.0"/>
<Action id="41596" issue="28495" author="yoheiueda" type="comment" created="2018-03-14 12:23:57.0" updateauthor="yoheiueda" updated="2018-03-14 12:23:57.0"> <body><! CDATA I applied the patch to the RC1 code, and tried the steps I described above.  I repeated 100 times, but I never see the symptom any more.  I think the patch fixed the issue. Thank you very much!  ></body> </Action>
<Action id="41613" issue="28495" author="muralisr" type="comment" body=" ~yoheiueda  thank you for testing and verifying!" created="2018-03-14 13:15:36.0" updateauthor="muralisr" updated="2018-03-14 13:15:36.0"/>
<Action id="41621" issue="28495" author="bmos299" type="comment" body=" ~muralisr   ~yoheiueda  Thanks!   ~denyeart   ~simsc  will this be ported to the release-1.0 and the release-1.1 branches? " created="2018-03-14 14:26:25.0" updateauthor="bmos299" updated="2018-03-14 14:26:25.0"/>
<Action id="41625" issue="28495" author="muralisr" type="comment" created="2018-03-14 15:23:51.0" updateauthor="muralisr" updated="2018-03-14 15:24:17.0"> <body><! CDATA Should correct this statement in my earlier comment  _The problem started with FAB-5591 ..._  That's incorrect. It predates that and in fact FAB-5591 helps in fixing this in a cleaner manner by allowing the error  to be handled (or disregarded) cleanly.   ></body> </Action>
<Action id="41628" issue="28495" author="denyeart" type="comment" body="Fix cherry picked to release-1.1: https://gerrit.hyperledger.org/r/#/c/19157/" created="2018-03-14 16:13:24.0" updateauthor="denyeart" updated="2018-03-14 16:13:24.0"/>
<Action id="41641" issue="28495" author="denyeart" type="comment" body="Merged to release-1.1 and master.  There was not a clean cherry pick to release-1.0, deferring that for now.  We can re-visit if needed." created="2018-03-14 19:11:31.0" updateauthor="denyeart" updated="2018-03-14 19:11:31.0"/>
<Action id="41714" issue="28495" author="tkueda" type="comment" body="Also, confirmed the x86_64-1.1.0 images published a few hours ago in Docker Hub have fixed this issue. Thank you so much!" created="2018-03-16 01:19:09.0" updateauthor="tkueda" updated="2018-03-16 01:19:09.0"/>
<Action id="41746" issue="28495" author="exci" type="comment" body="Can confirm that the issue is fixed for me with the 1.1.0 images. Thank you!" created="2018-03-16 12:35:16.0" updateauthor="exci" updated="2018-03-16 12:35:16.0"/>
<Action id="41753" issue="28495" author="muralisr" type="comment" body="thanks  ~tkueda   ~Exci   ~yoheiueda  for testing and confirming. Much appreciated!" created="2018-03-16 13:06:40.0" updateauthor="muralisr" updated="2018-03-16 13:06:40.0"/>
