<Issue id="45045" key="FAB-17874" number="17874" project="10002" reporter="guoger" assignee="guoger" creator="guoger" type="10002" summary="Messages in etcdraft UTs should be delivered in order" priority="3" resolution="10001" status="6" created="2020-05-12 01:59:49.0" updated="2021-05-11 14:18:04.0" resolutiondate="2021-05-11 14:18:04.0" votes="0" watches="1" workflowId="58953" archived="N"> <description><! CDATA Today in etcdraft UTs, whenever a message is sent to a node, it calls {{Consensus(req, sender)}} on that instance in a **new goroutine**. Therefore, messages are delivered out of order due to Go scheduler. This wouldn't cause much problem in real network as Raft is resilient enough to such faults. However, in UT, we normally do not send extra ticks for a node to recover.  We could use a channel to buffer ingress messages, which are consumed in original order  ></description> </Issue>
