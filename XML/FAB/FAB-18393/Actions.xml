<Action id="71098" issue="46473" author="yacovm" type="comment" created="2021-01-08 16:36:21.0" updateauthor="yacovm" updated="2021-01-08 16:36:21.0"> <body><! CDATA {quote}The `client_id` should be _MSPID_._SubjectKeyIdentifier_ {quote}    Why not just the MSP ID? You can compute SKI at the server side from the certificate if you need it, and then you don't need to write code in the client side to hash the public key.  Moreover, you do not need the SKI as there is no API in Fabric where you can use it. In fact, the only place where SKI is used in *authentication*, it is computed by the MSP and not by the caller.     ></body> </Action>
<Action id="71099" issue="46473" author="yacovm" type="comment" created="2021-01-08 16:48:50.0" updateauthor="yacovm" updated="2021-01-08 16:48:50.0"> <body><! CDATA {quote}The  `private_key_jwt`  private_key_jwt  client authentication method allows a client to use a private key associated with a registered public key to sign an authentication token and assert its own identity.  {quote}  How do you register the public key in the Fabric case? I guess you mean the client has registered it when it was issued in a CA right?  {quote}The algorithm claimed in the header must be appropriate for the certificate included in the header and must be the one used to generate the signature.{quote}  So the header has a certificate. Perhaps it might be good to outline in the RFC exactly the structure of the fields that are sent over the wire.   ></body> </Action>
<Action id="71102" issue="46473" author="sykesm" type="comment" created="2021-01-08 18:35:37.0" updateauthor="sykesm" updated="2021-01-08 18:36:12.0"> <body><! CDATA {quote} Why not just the MSP ID? You can compute SKI at the server side from the certificate if you need it, and then you don't need to write code in the client side to hash the public key. {quote}  Agreed. I'll remove it.  {quote} How do you register the public key in the Fabric case? I guess you mean the client has registered it when it was issued in a CA right? {quote}  That's actually a quote from the spec. For our purposes, the registration is implicitly performed when the certificate was issued by the CA.  {quote} Perhaps it might be good to outline in the RFC exactly the structure of the fields that are sent over the wire. {quote}  The {{x5c}} format is as described in section 4.7 of RFC 7517. As for outlining the structure of the header fields, they were already enumerated: {{typ}}, {{alg}}, and {{x5c}}. All have definitions from the referenced IETF RFCs. For our initial implementation, the type is "JWT", the algorithm must be "ES256", and the certificate must be a base64 encoded representation of the DER PKIX certificate value. Any other combination will be rejected.  ></body> </Action>
