<Issue id="33256" key="FAB-11755" number="11755" project="10002" reporter="senthil1" assignee="manish-sethi" creator="senthil1" type="10003" summary="PvtDataStore Recovery After a Rollback or peer crash" priority="3" resolution="10000" status="6" created="2018-08-27 17:17:00.0" updated="2020-06-11 15:30:58.0" resolutiondate="2018-12-03 15:37:12.0" votes="0" watches="2" workflowId="44526"> <description><! CDATA As  ~manish-sethi  suggested, we need the following recovery mechanism for PvtDataStore. * In the current PvtDataStore, first, we store dataEntries, expiryEntries, and missingDataEntries. * Second, the block is written to the BlockStore. * Third, commit() is called on the PvtDataStore.  After the step 1, there is a possibility of rollback on step 3 or a peer can crash. When a peer starts again and try to commit the same block, we must consider the existing entries in the PvtDataStore. Otherwise, we might be storing incorrect missingDataEntries and expiryEntries.  For e.g., assume that ns-1:coll-1, and ns-2:coll-1 PvtData were missing during the first commit (before failure). During the commit of the same block next time, assume that only the PvtData of ns-1:coll-1 is missing. If we do not consider the existing missingDataEntries, we would have a missingDataEntry for ns-2:coll-1 in the store which is incorrect. Similarly, we can have incorrect expiryEntries.  During the second commit of the same block, if we consider the existing missingDataEntries and expiryEntries, we can avoid storing incorrect details into PvtDataStore.  ></description> </Issue>
