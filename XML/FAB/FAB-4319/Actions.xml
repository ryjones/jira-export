<Action id="25070" issue="17399" author="yacovm" type="comment" created="2017-06-02 08:55:52.0" updateauthor="yacovm" updated="2017-06-02 08:55:52.0"> <body><! CDATA Thinking aloud: So at genesis block creation the channel readers and writers are encoded by the configtxgen tool into the channel.  Do we have a way of creating a configtx.yaml such that not all channel members are writers?  ~jyellick ? If not - then with every genesis block created, all channel members are writers, and the user can't make a channel that some clients in the channel are not writers.  The only thing left is to ensure that every transaction that enters the ledger, was made by a client in the channel. Let's separate for 2 cases: * If the ordering service is not malicious then it checks that the client is in the channel, so we're safe here * If the ordering service is malicious it might accept an endorsement response from a client that is not in the channel. ** The endorsement response could not have been simulated by a non-malicious peer, because it checks the signed proposal is in the ChannelApplicationWriters. ** Else, the endorsement response was simulated by a malicious peer. But, a malicious peer can anyway do whatever it wants- including giving wrong results to the simulation, so I don't think this is an option we can protect against anyway. I'd say If the chaincode instantiator is afraid of malicious endorsers it needs to protect itself by an endorsement policy that specifies at least one signature from its organization or something...  ></body> </Action>
<Action id="25071" issue="17399" author="angelo.decaro" type="comment" body="It might just also be because of a bug at the ordering service and a transaction is accepted in a channel even though the creator does not satisfy the channel&apos;s policy. In that case it is better that the committing peers protect the ledger at the maximum because they are the last check point in the system, no?" created="2017-06-02 09:03:40.0" updateauthor="angelo.decaro" updated="2017-06-02 09:03:40.0"/>
<Action id="25072" issue="17399" author="yacovm" type="comment" created="2017-06-02 09:33:59.0" updateauthor="yacovm" updated="2017-06-02 09:34:53.0"> <body><! CDATA {quote}It might just also be because of a bug at the ordering service and a transaction is accepted in a channel even though the creator does not satisfy the channel's policy{quote} I think that bug and malicious are interchangeable in our case. I think that we should ensure that there is no such a bug in the ordering service (IIRC they had a policy filter somewhere) in any case.  Your suggestion makes sense in general, just not sure if we would want to have this now for v1.0 or not, therefore I would wait for a clarification from  ~jyellick  because that prunes a branch from our decision tree.  ></body> </Action>
<Action id="25073" issue="17399" author="ales" type="comment" body="+1  ~angelo.decaro , it&apos;s a small and safe change and it&apos;s good to have for v1" created="2017-06-02 09:38:09.0" updateauthor="ales" updated="2017-06-02 09:38:09.0"/>
<Action id="26478" issue="17399" author="binhn" type="comment" created="2017-06-15 20:52:01.0" updateauthor="binhn" updated="2017-06-15 20:52:01.0"> <body><! CDATA  ~yacovm  {quote}Do we have a way of creating a configtx.yaml such that not all channel members are writers? {quote} The answer is yes. Configtx is not necessarily the config tool in production. Customers build their own admin (like Bluemix). The policy allows admins/writers/readers, so each set might be different.  ></body> </Action>
<Action id="29593" issue="17399" author="elli-androulaki" type="comment" created="2017-08-09 12:55:55.0" updateauthor="elli-androulaki" updated="2017-08-09 12:56:40.0"> <body><! CDATA Ok, I guess this needs to be updated to reflect the access control policy specified in RSCC for proposal processing :) I would also be up for this being checked for sanity.   But do you think this should be considered a "bug" or "improvement" of an existing functionality?  ></body> </Action>
<Action id="30436" issue="17399" author="elli-androulaki" type="comment" body="Hi, pinging  ~angelo.decaro ,  ~ales : though the check makes sense as a sanity check/detecting switch of orderers to something beyond of our threat model, would you be fine if we lowered its priority for now (that is, given our threat model, we are already covered) ? " created="2017-09-01 07:30:40.0" updateauthor="elli-androulaki" updated="2017-09-01 07:30:40.0"/>
<Action id="32950" issue="17399" author="denyeart" type="comment" body="Based on Elli&apos;s comments, lowering to High." created="2017-10-20 19:29:10.0" updateauthor="denyeart" updated="2017-10-20 19:29:10.0"/>
<Action id="38246" issue="17399" author="mastersingh24" type="comment" body=" ~elli-androulaki    ~angelo.decaro   Are we actually doing this for 1.1?  I also don&apos;t think this is a bug given the trust model between the peer and the ordering service.  " created="2018-01-06 13:39:01.0" updateauthor="mastersingh24" updated="2018-01-06 13:39:01.0"/>
<Action id="38263" issue="17399" author="denyeart" type="comment" body="Given that orderers are trusted I think this can be changed to Medium.  Feel free to increase priority if it is thought that this is a High issue for v1.1." created="2018-01-08 02:28:53.0" updateauthor="denyeart" updated="2018-01-08 02:28:53.0"/>
<Action id="38304" issue="17399" author="elli-androulaki" type="comment" created="2018-01-08 17:40:19.0" updateauthor="elli-androulaki" updated="2018-01-08 17:40:19.0"> <body><! CDATA Also, just to note:  This item refers to code changes at tx commitment time. However, these changes are not prone to causing ledger forks. The reason is that we trust the ordering service to honor this check, and if the ordering service it at error (i.e., behaves in a byzantine manner), then our whole system is susceptible to forking attacks for other reasons.  ></body> </Action>
<Action id="39489" issue="17399" author="elli-androulaki" type="comment" created="2018-02-01 13:13:02.0" updateauthor="elli-androulaki" updated="2018-02-01 13:13:02.0"> <body><! CDATA Hi, given transaction lifecycle is being reworked, and we agree i think that this is not strictly speaking a bug (given our threat model), I think it makes sense to be marked for 1.2. Wdyt?    ~denyeart ,  ~mastersingh24 ,  ~angelo.decaro ,  ~ales ?  ></body> </Action>
<Action id="39803" issue="17399" author="clayton sims" type="comment" created="2018-02-07 18:40:42.0" updateauthor="clayton sims" updated="2018-02-07 18:40:42.0"> <body><! CDATA Any updates?  if not lets move to v1.2     ></body> </Action>
<Action id="40366" issue="17399" author="scottz" type="comment" body="What is the expected behavior? What should the v1.1 orderer do with a TX that was submitted by a client that is not a writer? From what I am reading, it seems it should NOT be delivered, because the peer has no way to know, and would not mark it invalid." created="2018-02-19 02:10:52.0" updateauthor="scottz" updated="2018-02-19 02:10:52.0"/>
<Action id="40391" issue="17399" author="elli-androulaki" type="comment" created="2018-02-19 14:58:46.0" updateauthor="elli-androulaki" updated="2018-02-19 14:58:46.0"> <body><! CDATA  ~scottz , assuming a tx referring to channel C, the v1.1 orderer would only consider tx for ordering within C's transactions.  Also, the v1.1 orderer would check writer permissions on tx's creator w.r.t to C's channel writers and would reject tx if the check does not pass.  ></body> </Action>
<Action id="40395" issue="17399" author="denyeart" type="comment" body=" ~scottz  The orderer does indeed perform this check, transactions from clients without channel writers privilege are not included in blocks and are not sent to peers for commit.  That&apos;s why it is acceptable to defer this to 1.2." created="2018-02-19 17:55:20.0" updateauthor="denyeart" updated="2018-02-19 17:55:20.0"/>
<Action id="43862" issue="17399" author="jyellick" type="comment" body="Additionally, transactions should only be endorsed if the submitter is a member of the /Channel/Application/Writers (or some other condition given by the ACLs).  So, even if the transaction were not signed by a valid writer, it would almost definitely be marked as invalid for failing to satisfy the endorsement policy.  I agree this would be a &apos;nice to have&apos;, but I&apos;d prefer to put this an an improvement on the backlog.  What do you think  ~angelo.decaro  ?" created="2018-05-04 17:06:28.0" updateauthor="jyellick" updated="2018-05-04 17:06:28.0"/>
<Action id="44766" issue="17399" author="kchristidis" type="comment" created="2018-05-21 18:13:41.0" updateauthor="kchristidis" updated="2018-05-21 18:13:41.0"> <body><! CDATA Moving this to Backlog and marking it as an improvement. If it can be tackled on time for 1.2, please update.  Let's also please not assign until we're ready to work on something. We've assigned way too many issues on  ~ales .  ></body> </Action>
<Action id="67044" issue="17399" author="sykesm" type="comment" body="Stale" created="2020-01-22 19:14:38.0" updateauthor="sykesm" updated="2020-01-22 19:14:38.0"/>
