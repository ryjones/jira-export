<Action id="20069" issue="13473" author="jeffgarratt" type="comment" created="2016-12-12 15:08:26.0" updateauthor="jeffgarratt" updated="2016-12-12 21:51:23.0"> <body><! CDATA Now create the genesis block (still need to verify with orderer --bootstrap).  Had to update several pip installs.  The pysha3 is required to compute the has of the blockData using sha3 256.  1)  sudo pip install --upgrade grpcio 2)  sudo pip install "pysha3==1.0b1" 3) sudo pip install pyopenssl   ></body> </Action>
<Action id="20154" issue="13473" author="jeffgarratt" type="comment" created="2016-12-17 17:25:17.0" updateauthor="jeffgarratt" updated="2016-12-17 17:25:17.0"> <body><! CDATA Pushed update in https://gerrit.hyperledger.org/r/#/c/3357/  Now creates orderer geneisis block file and feeds to orderer.  Waiting on orderer to actually pick this file up in future change set.  ></body> </Action>
<Action id="20288" issue="13473" author="jeffgarratt" type="comment" body="Now working on linking in orderer with generated genesis block and creating local msp config. " created="2017-01-06 19:10:11.0" updateauthor="jeffgarratt" updated="2017-01-06 19:10:11.0"/>
<Action id="20333" issue="13473" author="jeffgarratt" type="comment" created="2017-01-11 14:28:31.0" updateauthor="jeffgarratt" updated="2017-01-11 14:28:31.0"> <body><! CDATA New change set now creates the local MSP configuration, places it into a shared volume for access by peer containers, and supplies the proper env variable settings per peer container.  https://gerrit.hyperledger.org/r/#/c/3823/  ></body> </Action>
<Action id="20335" issue="13473" author="jeffgarratt" type="comment" created="2017-01-11 19:07:32.0" updateauthor="jeffgarratt" updated="2017-01-11 19:07:32.0"> <body><! CDATA Changing to ECDSA keys for signing.   Need to install another python module:  sudo pip install ecdsa  ></body> </Action>
<Action id="20341" issue="13473" author="jeffgarratt" type="comment" created="2017-01-12 22:09:03.0" updateauthor="jeffgarratt" updated="2017-01-12 22:09:20.0"> <body><! CDATA Met today from 10-2 to discuss bootstrap for peers and orderes.  Updated the feature file to include additional steps for the ordererBootstrapAdmin to create the chainCreatorsPolicy prior to starting network, and to create the orderer configuration template after the network has been composed.  Will work to update the behave to accomodate these newly defined steps.     ></body> </Action>
<Action id="20365" issue="13473" author="jeffgarratt" type="comment" created="2017-01-16 01:44:56.0" updateauthor="jeffgarratt" updated="2017-01-16 01:44:56.0"> <body><! CDATA Following change set now creates the bootstrap genesis file and passes to orderer.  Creates the peer's local MSPs, and then successfully broadcasts the config TX to create a new channel, and receives the new block from the channel.  https://gerrit.hyperledger.org/r/#/c/3985/  Still need to work on the peer join step and subsequent chaincode deploy (endorsments) etc.  ></body> </Action>
<Action id="20385" issue="13473" author="jeffgarratt" type="comment" body="Now working on join channel and adding the mspConfigPath usage to peer so behave tests can configre MSPs per generated key materials." created="2017-01-17 16:00:51.0" updateauthor="jeffgarratt" updated="2017-01-17 16:00:51.0"/>
<Action id="20419" issue="13473" author="jeffgarratt" type="comment" body="Modified signing to use sha256 digest and proposal now passes validation.  Working on putting proper MSPConfig info into the Create channel request so it will be in the delivered block for join." created="2017-01-18 17:43:04.0" updateauthor="jeffgarratt" updated="2017-01-18 17:43:04.0"/>
<Action id="20455" issue="13473" author="jeffgarratt" type="comment" created="2017-01-20 16:16:23.0" updateauthor="jeffgarratt" updated="2017-01-20 16:16:23.0"> <body><! CDATA Just submitted https://gerrit.hyperledger.org/r/#/c/4629/  This gets the bootstrap.feature all the way to join channel where we fail in the peer.  Going to work with  ~ales  to fix the peer now.  ></body> </Action>
<Action id="20457" issue="13473" author="jeffgarratt" type="comment" body="After working with  ~ales , join channel now succeeds!!!!  Resubmitted patch 3 to change set, waiting for verify and reviews.   Will now move on to deployment on top of this change set." created="2017-01-20 18:00:10.0" updateauthor="jeffgarratt" updated="2017-01-20 18:00:10.0"/>
<Action id="20512" issue="13473" author="jeffgarratt" type="comment" body="https://gerrit.hyperledger.org/r/#/c/4629/ merged.  Added anchor items to signed config envelope for gossip.  Now going to work on deployment and then doc gen." created="2017-01-22 15:29:43.0" updateauthor="jeffgarratt" updated="2017-01-22 15:29:43.0"/>
<Action id="20539" issue="13473" author="jeffgarratt" type="comment" body="Made change set https://gerrit.hyperledger.org/r/#/c/4715/ to fix an issue that Kosta&apos;s now requires 4 block metadata entries.  Added for now, need to more fully understand ramifications with respect to orderer type (solo v. kafka)." created="2017-01-23 22:10:54.0" updateauthor="jeffgarratt" updated="2017-01-23 22:10:54.0"/>
<Action id="20625" issue="13473" author="jeffgarratt" type="comment" created="2017-01-31 03:55:30.0" updateauthor="jeffgarratt" updated="2017-02-08 02:41:57.0"> <body><! CDATA Latest change set adds deployment to bootstrap feature : https://gerrit.hyperledger.org/r/#/c/5095/  Here are the latest steps to insure all python modules are available:  From fabric folder:  make peer make peer-docker make orderer-docker #Now the pip installs sudo pip install --upgrade grpcio-tools sudo pip install "pysha3==1.0b1" sudo pip install pyopenssl sudo pip install ecdsa sudo pip install python-slugify  ></body> </Action>
<Action id="21044" issue="13473" author="jeffgarratt" type="comment" created="2017-02-19 21:52:50.0" updateauthor="jeffgarratt" updated="2017-02-19 21:53:35.0"> <body><! CDATA Latest change set adds document generation to bootstrap feature: https://gerrit.hyperledger.org/r/#/c/6257/  Also updates to latest Configuration mechanisms for bootstrap.  Here are the latest steps to insure all python modules are available: From fabric folder: make peer make peer-docker make orderer-docker #Now the pip installs sudo pip install --upgrade grpcio-tools sudo pip install "pysha3==1.0b1" sudo pip install pyopenssl sudo pip install ecdsa sudo pip install python-slugify sudo pip install b3j0f.aop  ></body> </Action>
<Action id="21067" issue="13473" author="binhn" type="comment" created="2017-02-20 21:32:10.0" updateauthor="binhn" updated="2017-02-20 21:32:10.0"> <body><! CDATA I also needed to   sudo pip install -U "jinja2"  ></body> </Action>
<Action id="21119" issue="13473" author="jeffgarratt" type="comment" created="2017-02-22 22:02:46.0" updateauthor="jeffgarratt" updated="2017-02-22 22:02:46.0"> <body><! CDATA Pushed new CR https://gerrit.hyperledger.org/r/#/c/6389/  Fails with:  The proposal does not comply with the channel writers for channel com.acme.blockchain.jdoe.Channel1, error No such policy type: Application/Writers)  Pushed to allow  ~rameshthoomu  to verify fix for https://jira.hyperledger.org/browse/FAB-2406  ></body> </Action>
<Action id="21293" issue="13473" author="jeffgarratt" type="comment" created="2017-03-03 14:48:09.0" updateauthor="jeffgarratt" updated="2017-03-03 14:48:09.0"> <body><! CDATA Patched https://gerrit.hyperledger.org/r/#/c/6389/  Now complete.  Here are the latest steps to insure all python modules are available: From fabric folder: make peer make peer-docker make orderer-docker #Now the pip installs sudo pip install --upgrade grpcio-tools sudo pip install "pysha3==1.0b1" sudo pip install pyopenssl sudo pip install ecdsa sudo pip install python-slugify sudo pip install b3j0f.aop # You may also need sudo pip install -U "jinja2"  ></body> </Action>
<Action id="21325" issue="13473" author="jeffgarratt" type="comment" created="2017-03-04 16:51:36.0" updateauthor="jeffgarratt" updated="2017-03-04 16:51:36.0"> <body><! CDATA Patched https://gerrit.hyperledger.org/r/#/c/6389/ and walked through succesfully with  ~binhn .  There is a new README.md file that can be followed for behave setup using Python virtual environments.  ></body> </Action>
<Action id="21337" issue="13473" author="jeffgarratt" type="comment" created="2017-03-06 14:57:12.0" updateauthor="jeffgarratt" updated="2017-03-06 14:57:12.0"> <body><! CDATA Spoke with  ~binhn , looking to do the following asap.  Base Fabric * Enhance bootstrap to include TLS * Policy:  Add reader, writer and admin policies to 1, and exercise different users in those policies calling chaincodes * Endorsement:  Add endorsement policies to each chaincodes in 2  ></body> </Action>
<Action id="21405" issue="13473" author="jeffgarratt" type="comment" created="2017-03-08 23:02:28.0" updateauthor="jeffgarratt" updated="2017-03-08 23:02:28.0"> <body><! CDATA Pushed latest CR:  https://gerrit.hyperledger.org/r/#/c/7055/  Now works correctly.  Still need to make sure gossip configuration utilizes leader vs static.  ></body> </Action>
<Action id="21418" issue="13473" author="jeffgarratt" type="comment" created="2017-03-09 20:20:15.0" updateauthor="jeffgarratt" updated="2017-03-09 20:20:15.0"> <body><! CDATA Update TLS setting and gossip config.  Now works as closely to correctly as currently possible.  https://gerrit.hyperledger.org/r/#/c/7085/  ></body> </Action>
<Action id="21524" issue="13473" author="jeffgarratt" type="comment" created="2017-03-15 02:47:14.0" updateauthor="jeffgarratt" updated="2017-03-15 20:16:03.0"> <body><! CDATA Now TLS is used by default as of https://gerrit.hyperledger.org/r/#/c/7219/  Plan to work on next few items next:  1) Kafka integration into BDD with  ~kchristidis  2) Add ability to disable TLS  3) Policy: Add reader, writer and admin policies to 1, and exercise different users in those policies calling chaincodes 4) Endorsement: Add endorsement policies to each chaincodes in 2  ></body> </Action>
<Action id="21601" issue="13473" author="jeffgarratt" type="comment" created="2017-03-22 15:04:27.0" updateauthor="jeffgarratt" updated="2017-03-22 15:04:27.0"> <body><! CDATA Added support to mix and match various configs including Solo/Kafka and couchdb.  Also bumped the default orderer count to 3 as this is the mimimal set we would use in a real environment.  For solo, this is simulated through the use of orderer aliasing in the examples table.  Orderer1 and orderer2 alias back to orderer0.  So in fact for solo, there is still a single orderer, though artifacts are created for 2 additional orderers and display in the composition diagram.  https://gerrit.hyperledger.org/r/#/c/7227/  ></body> </Action>
<Action id="22488" issue="13473" author="kchristidis" type="comment" created="2017-04-14 19:34:38.0" updateauthor="kchristidis" updated="2017-04-14 19:40:40.0"> <body><! CDATA  ~jeffgarratt : Running this with the latest master (tip: fe8c71da0fe52867ee91be188e2480056f820682) and running into issues on Step 39 (And user "dev0Org0" using cert alias "dev0Org0App1" sends proposal "instantiateProposal1" to endorsers with timeout of "90" seconds with proposal responses "instantiateProposalResponses").  This is the traceback:  {noformat} Traceback (most recent call last): File "/home/ubuntu/envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run match.run(runner.context) File "/home/ubuntu/envs/behave_venv/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run self.func(context, *args, **kwargs) File "steps/endorser_impl.py", line 124, in step_impl resultsDict =  dict(zip(endorsers,  respFuture.result() for respFuture in proposalResponseFutures )) File "/home/ubuntu/envs/behave_venv/local/lib/python2.7/site-packages/grpc/_channel.py", line 294, in result raise self _Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INVALID_ARGUMENT, Received message larger than max (24430277 vs. 4194304))>  Captured stdout: Will copy gensisiBlock over at this point  ipAddress in getABStubForComposeService == 0.0.0.0:32777 Returning GRPC for address: 0.0.0.0 dev0Org0 received reply: status: SUCCESS , counter = 1 Done Start and end = 0/0  SeekInfo = start { specified { } } stop { specified { } } behavior: FAIL_IF_NOT_READY   Done receiving blocks Returning GRPC for address: 0.0.0.0 Returning GRPC for address: 0.0.0.0 ProposalResponse:  response { status: 200 }    Returning GRPC for address: 0.0.0.0 Returning GRPC for address: 0.0.0.0 ProposalResponse:  response { status: 200 }    ccSpec = type: GOLANG chaincode_id { path: "github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" name: "example02" version: "test" } input { args: "init" args: "a" args: "100" args: "b" args: "200" }  Returning GRPC for address: 0.0.0.0 Returning GRPC for address: 0.0.0.0 Endorsers =  u'peer0', u'peer2' , rsults keys =  u'peer0', u'peer2'  Returning GRPC for address: 0.0.0.0 Returning GRPC for address: 0.0.0.0 {noformat}  Are you expecting this?  If not, do any suggestions for fixing this come off the top of your head? (If not no worries, will attempt to debug.)  I followed the instructions in bddtests/README.md to a T and also made sure the binaries and Docker images are fresh:  {noformat} fabric$ docker images REPOSITORY                                            TAG                             IMAGE ID            CREATED             SIZE fb97334c214711e7972002dafa61222d-vp2-example02-test   latest                          f0ac3a23035b        9 minutes ago       177MB fb97334c214711e7972002dafa61222d-vp0-example02-test   latest                          9bfb672c7f72        9 minutes ago       177MB c68fe70c214711e7972002dafa61222d-vp0-example02-test   latest                          5257f3cf2e1b        10 minutes ago      177MB c68fe70c214711e7972002dafa61222d-vp2-example02-test   latest                          58ddb524faf3        10 minutes ago      177MB hyperledger/fabric-orderer                            latest                          f667fddf67b2        12 minutes ago      182MB hyperledger/fabric-orderer                            x86_64-1.0.0-snapshot-fe8c71d   f667fddf67b2        12 minutes ago      182MB hyperledger/fabric-peer                               latest                          6e58450fa5a5        12 minutes ago      185MB hyperledger/fabric-peer                               x86_64-1.0.0-snapshot-fe8c71d   6e58450fa5a5        12 minutes ago      185MB hyperledger/fabric-javaenv                            latest                          e87578e57b08        18 minutes ago      1.43GB hyperledger/fabric-javaenv                            x86_64-1.0.0-snapshot-fe8c71d   e87578e57b08        18 minutes ago      1.43GB hyperledger/fabric-ccenv                              latest                          23bf9a40fa7f        18 minutes ago      1.3GB hyperledger/fabric-ccenv                              x86_64-1.0.0-snapshot-fe8c71d   23bf9a40fa7f        18 minutes ago      1.3GB hyperledger/fabric-orderer                            x86_64-1.0.0-snapshot-0f3c9f9   a0548216d766        29 minutes ago      182MB hyperledger/fabric-peer                               x86_64-1.0.0-snapshot-0f3c9f9   26226d06de29        2 hours ago         185MB dev-peer3-mycc-1.0                                    latest                          0b52cb2fe814        3 days ago          177MB dev-peer0-mycc-1.0                                    latest                          4e4f5647d639        3 days ago          177MB dev-peer2-mycc-1.0                                    latest                          854bddac7cc5        3 days ago          177MB busybox                                               latest                          00f017a8c2a6        5 weeks ago         1.11MB hyperledger/fabric-baseimage                          x86_64-0.3.0                    f4751a503f02        2 months ago        1.27GB hyperledger/fabric-baseos                             x86_64-0.3.0                    c3a4cf3b3350        2 months ago        161MB {noformat}   ></body> </Action>
<Action id="22492" issue="13473" author="kchristidis" type="comment" created="2017-04-14 20:25:23.0" updateauthor="kchristidis" updated="2017-04-14 20:25:34.0"> <body><! CDATA Upon further inspection, something seems to be up with the local MSP configuration.  A "docker-compose logs" on the network brings this up:  {noformat} peer0_1     | panic: Fatal error when setting up MSP from directory /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig: err Could not load a valid signer certificate from directory /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig/signcerts, err Could not read directory open /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig/signcerts: no such file or directory, err /var/hyperledger/bddtests/volumes/peer/e30da748214c11e7972002dafa61222d/peer0/localMspConfig/signcerts ... orderer0_1  | 2017-04-14 20:13:31.013 UTC  orderer/main  main -> INFO 001 Starting orderer with TLS enabled orderer0_1  | 2017-04-14 20:13:31.013 UTC  orderer/main  main -> CRIT 002 Failed to load ServerCertificate file '/var/hyperledger/bddtests/volumes/orderer/e30da748214c11e7972002dafa61222d/orderer0/tls_config/orderer0Signer-orderer0-ordererOrg0-tls.crt' (open /var/hyperledger/bddtests/volumes/orderer/e30da748214c11e7972002dafa61222d/orderer0/tls_config/orderer0Signer-orderer0-ordererOrg0-tls.crt: no such file or directory) {noformat}  I've included only the peer0_1 output for brevity but the same message applies to all peers.  !Screen Shot 2017-04-14 at 16.23.56.png|thumbnail!  Related to that, the `bddtests/volumes` directory seems to carry no files, just folders.  ></body> </Action>
<Action id="47011" issue="13473" author="christopherferris" type="comment" body="no longer relevant" created="2018-07-06 12:43:24.0" updateauthor="christopherferris" updated="2018-07-06 12:43:24.0"/>
