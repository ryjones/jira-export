<Issue id="30835" key="FAB-10512" number="10512" project="10002" reporter="denyeart" assignee="senthil1" creator="denyeart" type="10004" summary="Fix error message: chaincode upgrade without passing config for already existing private data collections" priority="4" resolution="10000" status="6" created="2018-06-01 17:16:39.0" updated="2018-07-20 14:16:53.0" resolutiondate="2018-06-11 11:54:58.0" votes="0" watches="2" workflowId="42388"> <description><! CDATA If a private data collection is configured in a chaincode v1, it may have data on the chain and therefore can never be deleted.  Chaincode upgrade to v2 therefore must pass collection configuration for any already existing collections.  *Test:* Attempt to delete (not specify) collection during chaincode upgrade .  *Actual Results:* Instantiate/upgrade tran gets invalidated with an error message: {code:java} "Some existing collection configurations are missing in the new collection configuration package".{code} *Expected Results:* For troubleshooting purpose, it would be expected that the *name* of any missing collection would be included in the error message.  Actually, the logic to print the name of the missing collection is there in this section of validation_logic: {code:java}     // In the new collection config package, ensure that there is one entry per old collection. Any     // number of new collections are allowed.{code} But this scenario never gets there because it first hits this condition with the not as good message: {code:java}     // All old collections must exist in the new collection config package     if len(newCollectionConfigs) < len(oldCollectionConfigs) {         return policyErr(fmt.Errorf("Some existing collection configurations are missing in the new collection configuration package"))     }{code} The first check can simply be removed so that it hits the latter check with better information.     ></description> </Issue>
