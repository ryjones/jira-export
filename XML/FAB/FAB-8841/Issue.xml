<Issue id="28490" key="FAB-8841" number="8841" project="10002" reporter="pd93" creator="pd93" type="10001" summary="Fabric should be able fetch/verify vendored dependencies when the chaincode image is built" priority="3" resolution="10001" status="6" created="2018-03-13 14:44:31.0" updated="2019-12-02 21:36:01.0" resolutiondate="2019-12-02 21:36:01.0" votes="1" watches="4" workflowId="35613"> <description><! CDATA *###Scenario*  A user has a chaincode written in golang with several external dependencies. They would like to use the `dep` tool to vendor these dependencies and the shim (as is advised in the latest build), but they don't want to commit a large number of files to what is otherwise a small repository.     *Current Behaviour*  Users are forced to commit their `vendor` directory along with their chaincode in order to include the dependencies in their chaincode container.     *Suggested Behaviour*  When the chaincode is built, we should search for `Gopkg.toml` and `Gopkg.lock` files. If they are present, then we should run `dep ensure`. This will fetch the dependencies from their respective upstreams and build them into the dependency tree without the user having to commit them to their repository.     It's also worth noting that.. If a user _wants_ to commit their vendor directory to their repository, this will still work - and has the added benefit of running `dep ensure` - which will make sure that the committed dependency tree is valid.     ></description> </Issue>
