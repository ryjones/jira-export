<Issue id="31241" key="FAB-10771" number="10771" project="10002" reporter="nileshdeotale" creator="nileshdeotale" type="10004" summary="Error: unknown flag: --peerAddresses : peer chaincode invoke does not recognize --peerAddresses flag." priority="3" resolution="10000" status="6" created="2018-06-20 18:07:20.0" updated="2018-07-20 14:17:01.0" resolutiondate="2018-06-27 14:54:48.0" votes="0" watches="3" workflowId="42510"> <description><! CDATA {quote}Created network manually as per steps in http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#createchanneltx  {quote} Network:  nileshs-mbp:first-network nileshdeotale$ docker ps -a  CONTAINER ID        IMAGE                                                                                                  COMMAND                  CREATED             STATUS              PORTS                                              NAMES  5307a4337834        dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9   "chaincode -peer.add…"   2 hours ago         Up 2 hours                                                             dev-peer0.org1.example.com-mycc-1.0  3a4d5bbf9de5        hyperledger/fabric-tools:latest                                                                        "/bin/bash"              3 hours ago         Up 3 hours                                                             cli  3caa85f46253        hyperledger/fabric-peer:latest                                                                         "peer node start"        3 hours ago         Up 3 hours          0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp     peer1.org1.example.com  3334c0ae3e55        hyperledger/fabric-orderer:latest                                                                      "orderer"                3 hours ago         Up 3 hours          0.0.0.0:7050->7050/tcp                             orderer.example.com  e9370e4cff66        hyperledger/fabric-peer:latest                                                                         "peer node start"        3 hours ago         Up 3 hours          0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp     peer0.org1.example.com  4ca5c1f944d3        hyperledger/fabric-peer:latest                                                                         "peer node start"        3 hours ago         Up 3 hours          0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp     peer0.org2.example.com  cced00c58c40        hyperledger/fabric-peer:latest                                                                         "peer node start"        3 hours ago         Up 3 hours          0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp   peer1.org2.example.com     Then followed all the steps, successfully installed, instantiated and queried  nileshs-mbp:first-network nileshdeotale$ docker logs 5307a4337834  ex02 Init  Aval = 100, Bval = 200  ex02 Invoke  Query Response:\{"Name":"a","Amount":"100"}  ex02 Invoke  Query Response:\{"Name":"a","Amount":"100"}  nileshs-mbp:first-network nileshdeotale$      Then tried to invoke as per command in Invoke section of documentation {quote}peer chaincode invoke -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n mycc --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '\{"Args": "invoke","a","b","10" }' {quote} But this returned error:  Error: unknown flag: --peerAddresses  Usage:    peer chaincode invoke  flags      Flags:    -C, --channelID string   The channel on which this command should be executed    -c, --ctor string        Constructor message for the chaincode in JSON format (default "\{}")    -n, --name string        Name of the chaincode     Global Flags:        --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint        --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint        --clientauth                          Use mutual TLS when communicating with the orderer endpoint        --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint        --logging-level string                Default logging level and overrides, see core.yaml for full syntax    -o, --orderer string                      Ordering service endpoint        --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.        --tls                                 Use TLS when communicating with the orderer endpoint        --transient string                    Transient map of arguments in JSON encoding    -v, --version                             Display current version of fabric peer server     ></description> </Issue>
