<Issue id="15696" key="FAB-3109" number="3109" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Anchor peer connection logic on joinChannel is flawed" priority="3" resolution="10000" status="6" created="2017-04-11 21:49:19.0" updated="2018-07-20 14:12:11.0" resolutiondate="2017-05-21 16:34:40.0" votes="0" watches="3" workflowId="37959"> <description><! CDATA The connection to anchor peer logic works well if mutual TLS is used: https://github.com/hyperledger/fabric/blob/master/gossip/discovery/discovery_impl.go#L139-L163 {code} func (d *gossipDiscoveryImpl) Connect(member NetworkMember, sendInternalEndpoint func() bool) { 	d.logger.Debug("Entering", member) 	defer d.logger.Debug("Exiting")  	go func() { 		for i := 0; i < maxConnectionAttempts && !d.toDie(); i++ { 			peer := &NetworkMember{ 				InternalEndpoint: member.InternalEndpoint, 				Endpoint:         member.Endpoint, 			}  			if !d.comm.Ping(peer) { 				if d.toDie() { 					return 				} 				d.logger.Warning("Could not connect to", member) 				time.Sleep(getReconnectInterval()) 				continue 			} 			req := d.createMembershipRequest(sendInternalEndpoint()).NoopSign() 			d.comm.SendToPeer(peer, req) 			return 		} 	}() } {code} But, if we don't have mutual TLS, the probe works(because, the server (anchor peer) doesn't authenticate the client) as long as the remote anchor peer is online, regardless if join channel was called on it or not. A very likely scenario is that a peer connects to an anchor peer that join channel wasn't called on it yet, and the membership request is sent, but is discarded by the anchor peer because it cannot find the MSP manager for the channel (because, it hadn't join a channel yet...).  IMO We need to change the logic to support such scenarios.  * I guess the simplest thing would be to periodically (once in every few minutes?) send a membership request, if the peer is responding to a ping.  * Or, maybe have only anchor peers do that to other anchor peers?   ~C0rWin   ~gennadyl  thoughts?   ></description> </Issue>
