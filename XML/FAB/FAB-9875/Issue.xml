<Issue id="29937" key="FAB-9875" number="9875" project="10002" reporter="clayton sims" assignee="jyellick" creator="clayton sims" type="10002" summary="TEST PLAN: Finalize Fabric access control (ACL) mechanism" priority="3" resolution="10000" status="6" created="2018-05-03 20:15:30.0" updated="2018-07-20 14:16:32.0" resolutiondate="2018-06-18 15:58:02.0" votes="0" watches="3" workflowId="42061"> <description><! CDATA    Feature Test Plan for Finalize Fabric access control (ACL) mechanism. Before closing this testplan task, coverage must be reviewed and approved (via upvote or comment) by the epic feature owner and the test leads identified below.  +*Location / Description of*+ docs, APIs, config vars, system configuration (fabric, SDKs, fabric-samples) :   Defaults and sample are together in {{sampleconfig/configtx.yaml}}.  This file is automatically included in the images, as well as in the config directory of the binary distribution.  Docs are available https://hyperledger-fabric.readthedocs.io/en/latest/access_control.html   +*Unit Test (UT) leader*+: Jason Yellick  Automated unit tests are merged in repo, as go tests or otherwise part of build/verify jenkins jobs. Code coverage tracked in Jenkins:  https://jenkins.hyperledger.org/view/Daily/job/fabric-unit-test-coverage-daily-master-x86_64/      +*Function Test (FVT) leader*+: Jason Yellick In v1.2 the peer is not well structured for integration tests, therefore we will compensate with expanded Unit tests and expanded E2E tests using ginkgo. Describe function test coverage approach here:  A.  Expand unit testcases beyond traditional UT coverage, for the following integration scenarios that otherwise might be done using the ginko framework): # There are existing integration test style unit-tests which were merged in v1.1 # These tests need to be audited to identify any coverage gaps FAB-10308  B.  E2E testcases scenarios (Add one individual jira TASK within this feature Epic for each of these): # Test that LSCC get instantiated chaincodes respects ACL, positive and negative using 'peer chaincodes list' FAB-9655 # Test that the Filtered events respects ACL, positive and negative, using 'peer chaincode invoke' with wait for commit. -FAB-9873- # Test that the peer deliver service respects ACL, positive and negative, using 'peer chaincode fetch` (requires improvement to CLI) -FAB-10307-  +*System Verification Test (SVT) leader*+: Latitia Haskins V1.2 System Test Plan (Epic) --FAB-9898--: https://jira.hyperledger.org/browse/FAB-9898 Covers stress, load, performance, full system integration, resiliency, recover, etc.  Considering this feature, what scenarios are of particular interest and concern: # Scenario Description X # Scenario Description Y # Scenario Description Z        ></description> </Issue>
