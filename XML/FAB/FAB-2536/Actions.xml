<Action id="21249" issue="15103" author="wlahti" type="comment" created="2017-03-01 17:44:17.0" updateauthor="wlahti" updated="2017-03-01 17:44:17.0"> <body><! CDATA The problem was caused by the foo.configtx file in src/test/fixture for the java-sdk, which did not include any MSP information. I generated a new foo.configtx using {code}configtxgen -outputCreateChannelTx foo.configtx -profile SampleSingleMSPSolo -channelID foo{code} and end2end for java now runs successfully for channel foo.   I still need to look into why the lack of MSP information is causing a panic on the peer and make sure the code can handle that situation gracefully.   ></body> </Action>
<Action id="21253" issue="15103" author="binhn" type="comment" created="2017-03-01 19:30:50.0" updateauthor="binhn" updated="2017-03-01 19:30:50.0"> <body><! CDATA If msp is nil, referencing a struct variable would cause this segment violation  mspimpl.go, line 480 if sId.Mspid != msp.name  msp.name would panic   ~adc   ~ales   ></body> </Action>
<Action id="21273" issue="15103" author="binhn" type="comment" body="I think we need to introduce Recover() to all ingresses to prevent someone from able to bring down the network." created="2017-03-02 14:16:29.0" updateauthor="binhn" updated="2017-03-02 14:16:29.0"/>
<Action id="21276" issue="15103" author="angelo.decaro" type="comment" body=" ~binhn  How would that be possible? There is no way to reach the DeserializeIdentity function on instance msp if msp itself is nil. Also, sId is not nil at that time. Am I missing something?" created="2017-03-02 14:46:46.0" updateauthor="angelo.decaro" updated="2017-03-02 14:50:55.0"/>
<Action id="21277" issue="15103" author="angelo.decaro" type="comment" body="It might be that the problem is in mspmgrimpl.go#67. If one calls GetIdentityDeserializer for a non-existing channel, then GetIdentityDeserializer creates a new MSP manager but does not initialize it and mspmgrimpl.go#67 would panic then. Just an hypothesis. " created="2017-03-02 14:57:05.0" updateauthor="angelo.decaro" updated="2017-03-02 14:57:05.0"/>
<Action id="21279" issue="15103" author="binhn" type="comment" body=" ~adc  yes, a function can be invoked on a nil object -- funny thing in golang http://grokbase.com/t/gg/golang-nuts/151v0s0vp1/go-nuts-how-can-go-execute-a-method-of-a-nil-pointer" created="2017-03-02 16:18:10.0" updateauthor="binhn" updated="2017-03-02 16:18:10.0"/>
<Action id="21306" issue="15103" author="clayton sims" type="comment" created="2017-03-03 20:19:51.0" updateauthor="clayton sims" updated="2017-03-03 20:19:51.0"> <body><! CDATA wil update comments with cr number   ></body> </Action>
<Action id="21307" issue="15103" author="wlahti" type="comment" body="The CR to ensure that the peer doesn&apos;t panic in this situation has been pushed to gerrit for code review: https://gerrit.hyperledger.org/r/#/c/6801/" created="2017-03-03 20:23:44.0" updateauthor="wlahti" updated="2017-03-03 20:23:44.0"/>
<Action id="21399" issue="15103" author="wlahti" type="comment" body="The CR with the bug fix was merged into master last night. " created="2017-03-08 19:53:39.0" updateauthor="wlahti" updated="2017-03-08 19:53:39.0"/>
<Action id="21431" issue="15103" author="wlahti" type="comment" body=" ~rickr  Can you try the end2end tests with the old config.tx without MSP information and ensure that the peer no longer panics? Once you&apos;ve done that, can you close out this bug?" created="2017-03-10 14:44:06.0" updateauthor="wlahti" updated="2017-03-10 14:44:06.0"/>
<Action id="21483" issue="15103" author="rickr" type="comment" created="2017-03-13 13:07:04.0" updateauthor="rickr" updated="2017-03-13 13:07:04.0"> <body><! CDATA  ~wlahti   Seems not to panic :  orderer_1  | 2017-03-13 13:05:08.635 UTC  orderer/multichain  Apply -> DEBU 125 Rejecting channel creation because: Failed to create config manager and handlers: Error deserializing key IngressPolicyNames for group /Channel/Orderer: Unexpected key IngressPolicyNames orderer_1  | 2017-03-13 13:05:08.635 UTC  orderer/common/broadcast  Handle -> WARN 126 Rejecting broadcast message because of filter error: Rejected by rule: *multichain.systemChainFilter   ></body> </Action>
