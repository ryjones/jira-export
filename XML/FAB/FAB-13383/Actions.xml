<Action id="55047" issue="36309" author="denyeart" type="comment" body=" ~mne   ~ales  Could you provide your thoughts..." created="2018-12-20 12:56:35.0" updateauthor="denyeart" updated="2018-12-20 12:56:35.0"/>
<Action id="55048" issue="36309" author="mne" type="comment" created="2018-12-20 13:09:08.0" updateauthor="mne" updated="2018-12-20 13:09:08.0"> <body><! CDATA State-based endorsement itself does not require the ext shim, which is a convenience layer to facilitate handling the endorsement policies for SBE.  For the ext-shim I thought that the preferred way of resolving such chaincode dependencies would be vendoring, which I also mention in the documentation of the SBE fabric sample  https://gerrit.hyperledger.org/r/#/c/26232/|https://gerrit.hyperledger.org/r/#/c/26232/).    However, if there is a "whitelist" for fabric-internal dependencies, then I guess it makes sense to add the SBE ext shim to it. I assume the "github.com/hyperledger/fabric/core/chaincode/shim" entry does not include subdirectories?  ></body> </Action>
<Action id="55049" issue="36309" author="mastersingh24" type="comment" created="2018-12-20 13:10:07.0" updateauthor="mastersingh24" updated="2018-12-20 13:10:07.0"> <body><! CDATA We need to completely  move away from this model.  We need to separate out all user libraries and chaincode developers need to be responsible for vendoring all dependencies.  ~sykesm  - Anything to add?  ></body> </Action>
<Action id="55063" issue="36309" author="sykesm" type="comment" created="2018-12-20 16:25:46.0" updateauthor="sykesm" updated="2018-12-20 16:25:46.0"> <body><! CDATA  ~mastersingh24  - not really. At the end of the day, it was a mistake for fabric to try to accept any responsibility for go dependency management. This is especially true of how we explicitly remove packages that have been vendored (the white list that's referenced.)  Beyond that, binding the shim package implementation to fabric core has also generated a lot of angst and we need to address that be completely separating it from the fabric repo. It's this tight coupling that complicates our story and makes life more difficult for developers of go chaincode.  ></body> </Action>
<Action id="55140" issue="36309" author="denyeart" type="comment" created="2018-12-26 15:41:28.0" updateauthor="denyeart" updated="2018-12-26 15:45:13.0"> <body><! CDATA I agree with Matt and Gari.  Given the CURRENT chaincode model, it would make sense to track this item as a bug.  Given the FUTURE intent however, it would make sense to close this as Won't Do, upon meeting these two criteria:  1) Merge the interest rate swap sample https://gerrit.hyperledger.org/r/#/c/26232/ so that people know that they need to vendor the dependencies in v1.4 timeframe.  2) Create Jira items describing the future chaincode intent and link to this item.   ~sykesm  or  ~mastersingh24  could you help with #1 and #2 so that we can close this item?  ></body> </Action>
<Action id="55146" issue="36309" author="baohua" type="comment" created="2018-12-27 01:50:40.0" updateauthor="baohua" updated="2018-12-27 01:54:37.0"> <body><! CDATA  ~denyeart   I read the doc and think it's a nice guideline for the new state-based feature.  For the v1.4.0 timeframe, do you think i should highlight the vendor step in the official doc?  Thanks!  ></body> </Action>
<Action id="55200" issue="36309" author="denyeart" type="comment" created="2018-12-31 19:02:20.0" updateauthor="denyeart" updated="2018-12-31 19:02:20.0"> <body><! CDATA  ~baohua  I've improved the vendoring documentation here:  https://gerrit.hyperledger.org/r/#/c/28436/   The interest rate swap state-based endorsement sample with vendoring instructions is now merged:  https://github.com/hyperledger/fabric-samples/tree/master/interest_rate_swaps#prerequesites    ~sykesm  Let us know when you create the Jiras to capture the future chaincode improvements (even if they are slim placeholders, it will be helpful to have anchors for the work).  ></body> </Action>
<Action id="55375" issue="36309" author="denyeart" type="comment" body="Let&apos;s go ahead and close as Won&apos;t Do now that the vendoring solution is documented." created="2019-01-07 18:08:09.0" updateauthor="denyeart" updated="2019-01-07 18:08:09.0"/>
