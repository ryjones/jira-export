<Issue id="15503" key="FAB-2924" number="2924" project="10002" reporter="nishi" assignee="muralisr" creator="nishi" type="10004" summary="How To CallAChaincodeFromChaincode: Suggestions to improve Chaincode_Example05 for better understanding this" priority="2" resolution="10000" status="6" created="2017-03-29 18:33:04.0" updated="2018-07-20 14:12:04.0" resolutiondate="2017-04-21 20:29:50.0" votes="0" watches="2" workflowId="37866"> <description><! CDATA While testing "chaincode calling another chaincode" feature I was using chaincode_example05 calling chaincode_example02.  Following are few improvements we can make to serve our community to use this sample better: {panel} 1. To replace variable 'chaincodeURL' with 'chaincodeName'. 2. We can pass in channelName  a) as third argument to invoke - now args passed to chaincode are -  _emphasis_   "invoke","mycc02", "sum", "myc1"  _emphasis_ b) append channelName to as chaincodeName/ channelName in the first arg.  -  _emphasis_   "invoke","mycc02/myc1", "sum"   _emphasis_  Both these options were tested using CLI and Bashscripting in e2e flow.  3. We decide which one of these we would like to use in chaincode_example05 and update chaincode_example05 with right comments and may be document alternative usage as w ell in comments.  4. To maintain consistent docs. Go do on chaincode.go sometimes gives a third argument for chanelName and some times it displays only two arguments to InvokeChaincode as follows.  {code} func (stub *ChaincodeStub) InvokeChaincode(chaincodeName string, args     byte) (  byte, error) InvokeChaincode locally calls the specified chaincode `Invoke` using the same transaction context; that is, chaincode calling chaincode doesn't create a new transaction message. {code} {panel}  ></description> </Issue>
