<Action id="19920" issue="12483" author="muralisr" type="comment" created="2016-12-01 03:55:12.0" updateauthor="muralisr" updated="2016-12-01 04:03:13.0"> <body><! CDATA There are three major parts to the implementation of Upgrade  *Client* # introducing a new "upgrade" command to CLI in addition to "deploy", "invoke" and "query"  *Endorser*  # implementing "upgrade" command in LCCC - this will bump up the transaction and replace the ChaincodeDeploymentSpec # treating the "upgrade" as a new "deploy" but using the old chaincode namespace - this is chaincode intensive work where the framework has to be modified to accept the new chaincode but run it on the same namespace as the old  *Committer* # validate the upgrade transation on the block first and if good,  remove other transactions in the block that are  to the same chaincode   ></body> </Action>
<Action id="20804" issue="12483" author="zamrokk" type="comment" created="2017-02-09 15:54:09.0" updateauthor="zamrokk" updated="2017-02-09 15:54:09.0"> <body><! CDATA I thought the container's name was made from the "hash" of the source code.  Is the "namespace" the name as the container's id ? In this case it means that the old namespace will not match the hash of the new source code   Am i right ?   ></body> </Action>
<Action id="20806" issue="12483" author="muralisr" type="comment" body=" ~bfuentes@fr.ibm.com  in V1.0 we no longer use hash to identify chaincode. User provides a unique name at the time of deploy that is associated with the CC during its entire lifecycle." created="2017-02-09 16:17:39.0" updateauthor="muralisr" updated="2017-02-09 16:17:39.0"/>
<Action id="20819" issue="12483" author="zamrokk" type="comment" body=" ~muralisr  , you mean only to identify / use. But about the container&apos;s id, it is still the hash of the full code, right ? Because I think is important to prove that the container running is from particular source code" created="2017-02-10 09:00:50.0" updateauthor="zamrokk" updated="2017-02-10 09:00:50.0"/>
<Action id="23029" issue="12483" author="jimthematrix" type="comment" body="to clean up and avoid confusion on what work is still remaining, after discussing with  ~binhn  I&apos;m closing this task with the note that a bug for FAB-198 still needs to be fixed" created="2017-04-26 14:01:18.0" updateauthor="jimthematrix" updated="2017-04-26 14:01:18.0"/>
