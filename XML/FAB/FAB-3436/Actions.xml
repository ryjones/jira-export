<Action id="23116" issue="16031" author="kchristidis" type="comment" created="2017-04-27 22:16:23.0" updateauthor="kchristidis" updated="2017-04-27 22:16:23.0"> <body><! CDATA Hi Rick, you are not signing the configupdate envelope in a way that satisfies the mod_policy of the application config group. This mod_policy defaults to the consortium's ChannelCreationPolicy. If you're using configtxgen to set up your consortiums, this ChannelCreationPolicy defaults to ANY of the participating org's ADMINS. So, as long as one of the admins of any of the orgs that participate in the new channel signs off on this configupdate envelope you will be good to go.  As always, the E2E CLI test and  ~jeffgarratt 's bootstrap.feature are good guides on how to get this to work.  ></body> </Action>
<Action id="23117" issue="16031" author="rickr" type="comment" created="2017-04-27 22:21:55.0" updateauthor="rickr" updated="2017-04-27 22:21:55.0"> <body><! CDATA There  has been need ever to sign the binary that we get from configtx.    ></body> </Action>
<Action id="23119" issue="16031" author="kchristidis" type="comment" created="2017-04-27 22:25:22.0" updateauthor="kchristidis" updated="2017-04-27 22:57:54.0"> <body><! CDATA Indeed that used to be case, because the way configtxgen used to work, it was a free-for-all (ACCEPT_ALL policy in place) and no actual ACL enforcement was in place.  With the latest set of patches, this changes. Refer to this changeset for more details: https://gerrit.hyperledger.org/r/#/c/7105/  Concretely: https://github.com/hyperledger/fabric/blob/master/peer/channel/create.go#L123...L135  ></body> </Action>
<Action id="23121" issue="16031" author="rickr" type="comment" created="2017-04-27 22:31:51.0" updateauthor="rickr" updated="2017-04-27 22:32:48.0"> <body><! CDATA How does the SDKs know the polices in place and who has the sign ? This was like the admin root certs we get. It should be signed already by the confitx tool   ></body> </Action>
<Action id="23122" issue="16031" author="kchristidis" type="comment" created="2017-04-27 22:54:52.0" updateauthor="kchristidis" updated="2017-04-27 22:55:34.0"> <body><! CDATA Ah, excellent question. When the consortium is created, the members agree on the ChannelCreationPolicy that will apply. I am guessing that this is information that has to be maintained by the application during that agreement phase, and which needs to be consulted whenever a channel creation occurs.  What concerns me here (besides the sheer impracticality of what I wrote above) -- and what's tangentially related to your question-- is the following:  How are _any_ changes on the consortium communicated back to the member orgs? Say, we want to modify the channel creation policy, or take org "foo" out of the consortium. Submitting such a transaction to the ordering service is relatively obvious. What is not obvious is how this change is communicated back to the member orgs. It almost feels like there's a need for yet another chain to keep track of. But I have not been involved in the design process of this so my usefulness ends here.  ></body> </Action>
<Action id="23123" issue="16031" author="kchristidis" type="comment" created="2017-04-27 22:57:37.0" updateauthor="kchristidis" updated="2017-04-27 22:57:37.0"> <body><! CDATA {quote}This was like the admin root certs we get. It should be signed already by the confitx tool{quote}  This bit was added while I was writing my previous response. I would note that the configtxgen tool suffers from the same "how do I know how to sign" problem that the SDK faces, so this suggestion doesn't really solve anything.  ></body> </Action>
<Action id="23124" issue="16031" author="mastersingh24" type="comment" created="2017-04-27 23:01:54.0" updateauthor="mastersingh24" updated="2017-04-27 23:01:54.0"> <body><! CDATA This is why I continue to say that we should not be implementing all this stuff in each and every SDK. It's fine for the SDK to submit the final blob as a transaction to the orderer, but otherwise it gets hairy because typically there's going to be some sort of workflow which requires collection of multiple signatures.  The SDK does not really need to know these policies because unless the policy only requires a single signature (which is the default case), it won't even have access to all the keys required to sign.  ></body> </Action>
<Action id="23125" issue="16031" author="kchristidis" type="comment" body="I&apos;m with you but what is still not clear to me is: _who_ keeps track of the signatures that need to be added. (Also the specifics of that workflow, but I&apos;ll defer that for now.)" created="2017-04-27 23:15:38.0" updateauthor="kchristidis" updated="2017-04-27 23:15:38.0"/>
<Action id="28700" issue="16031" author="zuochuanmin" type="comment" created="2017-07-20 02:13:27.0" updateauthor="zuochuanmin" updated="2017-07-20 02:13:27.0"> <body><! CDATA I also encountered the same issue, who can tell me the final solution to fix? Thanks a lot in advance.  The folloowing is the details of error message:  Error: Got unexpected status: BAD_REQUEST orderer.example.com | 2017-07-20 01:47:12.949 UTC  orderer/common/broadcast  Handle ->  WARN 20d Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet:  Policy for  Groups  /Channel/Application not satisfied:  Failed to reach implicit threshold of 1 sub-policies, required 1 remaining  ></body> </Action>
<Action id="28701" issue="16031" author="zuochuanmin" type="comment" created="2017-07-20 02:15:55.0" updateauthor="zuochuanmin" updated="2017-07-20 02:16:41.0"> <body><! CDATA Â Besides, I use following command to generate genesis.block: ./configtxgen -profile TwoOrgsOrdererGenesis -outputBlock genesis.block The fabric version I'm using is 1.0.0.  ></body> </Action>
<Action id="72434" issue="16031" author="JIRAUSER23050" type="comment" body="Hi,bro. Have you solved this problem? I also encountered the same problem with you. Thanks!" created="2022-03-05 11:59:11.0" updateauthor="JIRAUSER23050" updated="2022-03-05 11:59:11.0"/>
