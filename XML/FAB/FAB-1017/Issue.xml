<Issue id="13348" key="FAB-1017" number="1017" project="10002" reporter="scottz" assignee="bmos299" creator="scottz" type="10000" summary="Identify and write System and Feature tests with a backend support structure for future tests" priority="2" resolution="10000" status="6" created="2016-11-07 21:02:07.0" updated="2019-08-01 01:09:14.0" resolutiondate="2019-08-01 01:09:14.0" votes="1" watches="2" workflowId="43147"> <description><! CDATA TEAM: Read all these architecture and design docs, and discuss each one amongst the team at regular review meetings.  https://wiki.hyperledger.org/community/fabric-design-docs  Determine what and how to test v1.0 fabric. (all - breakdown by component endorsers, committers, consenter/orderers, ledger, SDKs, etc.) Get the current fabric v1.0 testbed running on our laptops with correct readme instructions (Ratnakar and Barry).  Catchup phase: Examine stories completed to date in each component area to identify missing feature tests, and work with developers to identify use-cases and write baseline feature file tests using gherkin language.  Backend utilities for functions that drive the feature files will be identified and written as needed. When writing the underlying code behind the feature files, certain details of implementation should be understood and used, but this should not stop the initial setup of the tests.  Functional and behavior driven tests should be written based on the understanding of a fabric requirement (story) and not on the implementation of the requirement. These and future tests can then be executed to verify that the implementation was completed as expected.  These stories should cover existing behavior and allow for the basic setup of functional and behavior tests for the Hyperledger Fabric project.  Components for focused testing of configuration and operation may include (but may not be limited to) the following: * COP * Orderer * Endorser * Gossip * MSP * Peer * Ledgers  ></description> </Issue>
