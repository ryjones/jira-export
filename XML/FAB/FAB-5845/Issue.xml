<Issue id="20294" key="FAB-5845" number="5845" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Trusted roots population should not assume separation between orderer orgs and application orgs" priority="3" resolution="10000" status="6" created="2017-08-18 20:25:45.0" updated="2018-07-20 14:14:09.0" resolutiondate="2017-08-19 21:12:08.0" votes="0" watches="4" workflowId="39790"> <description><! CDATA The code in *core/peer/peer.go* has the following logic:  {code} 				for _, root := range v.GetTLSRootCerts() { 					// check to see of this is an app org MSP 					if _, ok := appOrgMSPs k ; ok { 						peerLogger.Debugf("adding app root CAs for MSP  %s ", k) 						appRootCAs = append(appRootCAs, root) 					} else { 						peerLogger.Debugf("adding orderer root CAs for MSP  %s ", k) 						ordererRootCAs = append(ordererRootCAs, root) 					} 				} {code}  This assumes that the application orgs and the orderer orgs are separate, but a peer and an orderer may be in the same org and then this code might not (for example) populate the orderer TLS root CA certs.   The implication, is that a peer might not be able to connect to an orderer. I think this is the case with the  following |https://stackoverflow.com/questions/45736954/setting-up-tls-communication-between-orderers-and-peers stackoverflow issue.   ~jyellick   ~mastersingh24   ></description> </Issue>
