<Issue id="12468" key="FAB-169" number="169" project="10002" reporter="bmos299" creator="bmos299" type="10004" summary="Blockchain hangs with a height of 21" priority="1" resolution="10000" status="6" created="2016-08-18 15:17:18.0" updated="2018-07-20 14:10:02.0" resolutiondate="2016-09-05 10:23:17.0" votes="0" watches="4" workflowId="36086"> <description><! CDATA I am copying an issue that was opened in git 27 days ago.  There is a project for IGF being developed on the 0.5-developer-preview branch that is incurring the same problem.  This problem is the highest issue.       Description  commit level : 3e0e80a branch: v0.5-developer-preview  while working on bug #2262, set the chaincode timeout from 1s to 30s for test, deploy artchaincode on a 4-peer network with pbft-batch, security and privacy enabled, observed that the chain height can only reach 21 and then no more invoke transactions can be recorded into the ledger. Each invoke with function PostItem will create the binary data (about 1.3 MB) from the input argument art1.png and inserts that data in to the tables, Invoke request's aren't received to chaincode.  The space, /dev/sda1, is only 20% when this occurs vagrant@hyperledger-devenv:v0.0.10-3e0e80a:/opt/gopath/src/github.com/hyperledger/fabric$ df Filesystem 1K-blocks Used Available Use% Mounted on udev 2019780 8 2019772 1% /dev tmpfs 404820 752 404068 1% /run /dev/sda1 40636768 7708024 30841476 20% / none 4 0 4 0% /sys/fs/cgroup none 5120 0 5120 0% /run/lock none 2024096 936 2023160 1% /run/shm none 102400 0 102400 0% /run/user none 488384532 179941176 308443356 37% /vagrant none 488384532 179941176 308443356 37% /local-dev none 488384532 179941176 308443356 37% /hyperledger none 488384532 179941176 308443356 37% /opt/gopath/src/github.com/hyperledger/fabric  This test was executed on a Lenovo W540. The issue was seen with batchsize 500 and 100. Describe How to Reproduce  launch a 4-peer network with pbft-batch, security and privacy enabled  login and deploy artchaincode: https://github.com/ratnakar-asara/artchaincode peer chaincode deploy -l golang -n mycc -c '{"Function": "init", "Args": "INITIALIZE" }'  invoke "PostItem" peer chaincode invoke -l golang -n mycc -c '{"Function": "PostItem", "Args": "1000", "ARTINV", "Shadows by Asppen", "Asppen Messer", "20140202", "Original", "landscape", "Canvas", "15 x 15 in", "art1.png","600", "100" }'  invoke 200 times with 1 thread for PostItem from SoapUI  wait sufficient time for the transactions to be processed, then check the chain height, in my test, the height is 21.  send few more invokes again, the chain height stays at 21.  @dongmingh dongmingh referenced this issue 27 days ago Open invokes do not go thru with large payload (1M) #2262   ></description> </Issue>
