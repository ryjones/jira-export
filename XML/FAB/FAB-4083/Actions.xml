<Action id="24122" issue="16971" author="kchristidis" type="comment" body=" ~mastersingh24 ,  ~sanchezl : FYI as you may have a take here. (If I missed anything, or got anything wrong, please let me know.)" created="2017-05-21 23:14:57.0" updateauthor="kchristidis" updated="2017-05-22 00:33:30.0"/>
<Action id="24144" issue="16971" author="sanchezl" type="comment" created="2017-05-22 15:59:43.0" updateauthor="sanchezl" updated="2017-05-22 15:59:43.0"> <body><! CDATA h3. Producer.MaxMessageBytes  We currently set the value of Producer.MaxMessageBytes to 100MiB, to match the default value of socket.request.max.bytes. Setting this value so high does not incur any memory or performance cost, and should work in most cases. So why make it smaller? (I'm making the assumption that a message >100MiB is unrealistic)  While we could calculate Producer.MaxMessageBytes based on AbsoluteMaxBytes, I don't think it buys us anything, as we will already be limiting our blocks to AbsoluteMaxBytes.  Note that the corresponding consumer setting is Consumer.Fetch.Max and it is set to 100MiB by default.     ></body> </Action>
<Action id="24777" issue="16971" author="kchristidis" type="comment" created="2017-05-31 14:57:36.0" updateauthor="kchristidis" updated="2017-05-31 14:57:36.0"> <body><! CDATA Producer. MaxMessageBytes should be strictly smaller than socker.request.max.bytes to account for headers. You'll notice that the sarama logger will complain about this (and does complain about this in our case) as well.  It seems to me that the most minimally invasive approach is the following: # socket.request.max.bytes = 100 MB (current default as set by the Kafka folks themselves) # message.max.bytes = socket.request.max.bytes - delta # replica.fetch.max.bytes = message.max.bytes # Producer.MaxMessageBytes = AbsoluteMaxBytes + delta # AbsoluteMaxBytes = 10 MiB # PreferredMaxBytes = 512 KiB  Where: * Delta is set to some fixed value which can be ridiculously generous to account for headers, etc. (cue "640K ought to be enough for anybody" references * Values 1 to 4 are not exposed to the user * Values 5 and 6 are exposed as they currently are * We switch the default for AbsoluteMaxBytes to 10 MiB  Thoughts?  ></body> </Action>
<Action id="24797" issue="16971" author="mastersingh24" type="comment" body="The above seems reasonable to me" created="2017-05-31 16:24:06.0" updateauthor="mastersingh24" updated="2017-05-31 16:24:06.0"/>
<Action id="24838" issue="16971" author="sanchezl" type="comment" body="I&apos;m good with Kostas&apos;s proposal." created="2017-05-31 18:38:00.0" updateauthor="sanchezl" updated="2017-05-31 18:38:00.0"/>
<Action id="25960" issue="16971" author="kchristidis" type="comment" body="Labeling this as a bug since the current default will result in errors. Extremely rare, but still." created="2017-06-10 18:11:18.0" updateauthor="kchristidis" updated="2017-06-10 18:11:18.0"/>
<Action id="26023" issue="16971" author="kchristidis" type="comment" body="https://gerrit.hyperledger.org/r/#/c/10469/" created="2017-06-12 14:43:36.0" updateauthor="kchristidis" updated="2017-06-12 14:43:36.0"/>
