<Issue id="14019" key="FAB-1608" number="1608" project="10002" reporter="jyellick" creator="jyellick" type="10001" summary="Normalize fabric directory structure, with common components inside fabric/common" priority="3" resolution="10000" status="6" created="2017-01-11 19:29:25.0" updated="2018-07-20 18:54:11.0" resolutiondate="2018-04-12 13:12:34.0" votes="0" watches="4" workflowId="37004"> <description><! CDATA There used to only be one peer binary which linked in all of the code.  However, in the v1 architecture, the orderer has been introduced, which means that certain components (like MSP, BCCSP, etc.) need to be linked by both the orderer and the peer.  Having the orderer link into {{fabric/core}} is dangerous because it might develop import cycles or pull in large amounts of code it didn't intend to.  This decreases build speed, increases testing time, and generally makes the code more difficult to understand.  Instead, we propose the following conventions.   * {{fabric/vendor}} # Used as it is today * {{fabric/orderer}} # May link to anything in fabric/common, fabric/vendor, fabric/protos, and itself * {{fabric/peer}} # May link to anything in fabric/common, fabric/vendor, fabric/protos, and itself * {{fabric/protos}} # May not reference anything but itself * {{fabric/common}} # May reference fabric/protos and itself  This is going to require a lot of cleanup across the codebase, but should be a significant improvement.  ></description> </Issue>
