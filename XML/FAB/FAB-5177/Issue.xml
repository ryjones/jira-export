<Issue id="18958" key="FAB-5177" number="5177" project="10002" reporter="greg.haskins" assignee="sykesm" creator="greg.haskins" type="10001" summary="peer/ccenv should not include the shim" priority="3" resolution="10000" status="6" created="2017-07-05 02:44:41.0" updated="2019-09-05 21:08:10.0" resolutiondate="2019-08-31 11:59:08.0" votes="1" watches="19" workflowId="35243"> <description><! CDATA In the past, we made the decision to include the shim both as a convenience to our users (to avoid explicit vendoring) and as a space optimization (why have every chaincode include the same shim lib over and over?).  Fast forward to now: go dependency management leaves much to be desired.  Having the ccenv include the shim can be problematic w.r.t. fragility between the included shim and the chaincode application.  For example, try to write an application which uses the timestamp features of the shim and you will receive errors due to conflicts between the fabric vendored version of the protobuf library and the chaincode application.  Now that we have auto-vendoring, the convenience factor for including the shim is gone.  It only leaves the space optimization consideration.  Considering how fragile go dependency management is, we may want to go the conservative route and simply remove all dependencies from the ccenv and make "peer package" / "chaintool package" provide them via the auto-vendor feature.     If we are going to do this, we should do it before v1.0 is cut so that chaincode apps for 1.0 are properly formed in a non-breaking way going forward.  ></description> </Issue>
