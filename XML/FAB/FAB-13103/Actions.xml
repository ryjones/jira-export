<Action id="54719" issue="35790" author="smithbk" type="comment" created="2018-12-12 14:41:54.0" updateauthor="smithbk" updated="2018-12-12 14:41:54.0"> <body><! CDATA Questions/comments regarding the attached PDF ...  1) On chart 4 ... the "Issuance" page: Can't "get next revocation handle" (step 4) fail, causing the CA to generate a new CRI?  Is that reflected anywhere?   2) On chart 5 ... "Revoking a credential" page: a) How does the admin get the revocation handle (rh) for a user's credential? b) For X509 revocation, CA currently allows revoking a single cert (by serial number) and a user (which revokes all certs issued to the user and disables the account so the user can't enroll again.  We should support the same model for idemix credentials.  We revoke a single idemix credential issued to user1 which requires that the admin knows the revocation handle or something unique about the credential, or we revoke the user in which case the CA must know the revocation handle for each credential issued and not yet revoked for the user. c) I think we would want to wait to return the response to the admin (step 3) until after the generateCRI (step 4) and updated CRI (step 5) are complete in case there is an error in step 4 or 5.  Shouldn't the admin know about this failure?  3) On chart 6, "Signing transactions" page: a) I'm wondering why "rh" is passed to getCRI.  Is there a single current CRI per CA, or are there multiple but only one active per "rh"? b) This chart seems to imply that we call the CA for each transaction.  I don't think we want this requirement.  There is also a timing window between when we get the current CRI and when verification occurs such that verification would fail because the CRI was updated.  I think the SDKs should recognize this particular type of verification failure and only get a new CRI then.  4) On chart 7, "Verifying transactions" page, we can't call the CA from the peer  5) WRT the two revocation approaches, are you recommending that we support both or just one for now?  If both, what is the effort to support both?  What does it mean adminstratively?  Could we switch between approaches automatically? If one, which one?  It looks like approach 2 is better when the number of credentials > 1000 to 10000, so I would lean towards 2.    ></body> </Action>
<Action id="54750" issue="35790" author="angelo.decaro" type="comment" created="2018-12-13 06:16:31.0" updateauthor="angelo.decaro" updated="2018-12-13 06:16:31.0"> <body><! CDATA  ~smithbk , thanks for you questions. Very good sanity checks. Let me answer one by one. # In case of a failure, the CA should not generate a new CRI. Indeed, I will add a new slide that shows an optimisation on that side. Namely, when a new idemix credential is issued, the CRI does not need to be regenerated (no epoch increment). There is a way to update it by essentially signing the new revocation handle with the epoch signing key. I have already submitted a change-set ( https://gerrit.hyperledger.org/r/#/c/28098/)  that add supports for updatable CRI. Anyway, I have updated the slide to show that at step 6 also an error can be returned. # Multiple answers here: ## To simplify admin's life, we should have fabric-ca storing the revocation handles binging them to the associated enrolment id.  ## If fabric-ca stores the revocation handles, then revoking a user is easy. To revoke a single credential, then I would say that the admin must know the revocation handle, like she has to know the x509 certificate. We can discuss further and see if we can alleviate this in some way. ## Agreed, I have updated the slide accordingly. # Multiple answers here: ## That's an optimisation. Indeed, a user does not need the entire CRI but only the common part and the part related to her revocation handle.  ## I agree with you. The user does not have to get the CRI each time. I have updated the slide to reflect this. # Totally agree. That slide is wrong. The peer retrieves the current epoch from the ledger. # I recommend approach 1. Approach 2 is much more expensive in terms of computation. Also, then a new CRI is created, the CA does not need to resign all the non-revoked revocation handles. This can be done also on the fly when the users start asking.  ></body> </Action>
<Action id="54751" issue="35790" author="angelo.decaro" type="comment" body=" ~smithbk , I have updated the slides. Please, have a look again. Thanks :) " created="2018-12-13 06:22:26.0" updateauthor="angelo.decaro" updated="2018-12-13 06:22:26.0"/>
<Action id="60054" issue="35790" author="rickr" type="comment" body="Don&apos;t think there&apos;s any plan for this in v2.0 release. Can reassign and change status if anyone knows different." created="2019-05-16 12:00:25.0" updateauthor="rickr" updated="2019-05-16 12:00:25.0"/>
