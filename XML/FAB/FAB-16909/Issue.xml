<Issue id="42943" key="FAB-16909" number="16909" project="10002" reporter="scottz" assignee="rameshthoomu" creator="scottz" type="10004" summary="fabric-test-svt-weekly-pte 12hr test fails: orderer3 tlscacerts not found" priority="3" resolution="10201" status="6" created="2019-10-22 16:12:53.0" updated="2019-11-15 18:08:28.0" resolutiondate="2019-11-15 18:08:28.0" votes="0" watches="1" workflowId="56045"> <description><! CDATA   This failure is from the weekly test result, running a single NL / PTE test 12HrTest.py (FAB-7204). ALL proposals are rejected. The first error indication is is: {quote}*tls_cacerts* does not exist: caRootsPath: /w/workspace/fabric-test-svt-weekly-pte-x86_64/gopath/src/github.com/hyperledger/fabric-test/fabric/internal/cryptogen/crypto-config/ordererOrganizations/example.com/orderers/*orderer3*.example.com/msp/tlscacerts/tlsca.example.com-cert.pem{quote}   This failure at first seemed to be a pathname issue, with PTE looking for tls_cacerts whereas cryptogen generated pathname without the underscore (tlscacerts). HOWEVER, tls_cacerts is a hardcoded string printed by the logger statement, which I believe is simply outdated and so this may be just a typo and red herring.   I think the real clue is that PTE function getTLSCert cannot find any certs for *orderer3*. The PTE/CITest/FAB-7204-4i/test_nl.sh script launches the network with 3 orderers, not 4, and they are zero-indexed, so PTE should be using one of the first 3 orderers, not a non-existent orderer. We should examine what leads it to look for orderer3 certs: it seems the function chainAddOrderer apparently finds an orderer3 in the connection profile and uses that for all 4 of the threads, so the generated connection profile seems wrong. Why does it contain orderer3 but not orderer0 or 1 or 2?   Another question: why is it only this test that fails in this manner? The other NL / PTE tests in the daily test suite ran successfully last night.  ></description> </Issue>
