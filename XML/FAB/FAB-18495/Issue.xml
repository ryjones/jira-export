<Issue id="46942" key="FAB-18495" number="18495" project="10002" reporter="JIRAUSER21452" creator="JIRAUSER21452" type="10001" summary="Thinning clients: Extracting functionality from client to peers" priority="3" status="10100" created="2021-06-15 11:49:21.0" updated="2021-06-15 11:49:21.0" votes="1" watches="2" workflowId="60853" archived="N"> <description><! CDATA Currently, clients have quite a lot of responsibility and tasks to perform when creating a transaction: 1) Requesting chaincode callgraph from peer (to see which nodes can execute the transaction), 2) fetch chaincode information from the ledger, 3) discover network topology, 4) Submit transaction proposal to all endorsers, 5) wait for endorsement replies, 6) validate all endorsements and merge to a single (ProposalResponse / transaction) object, 7) broadcast transaction to ordering service.  Â   While conducting benchmarks with HL Caliper for stress-testing a network of 3 organizations and 2 ordering nodes, I found that the process of creating a transaction on the client is much more CPU-demanding than ordering/applying it by nodes. Considering the growing relevance of blockchain in IoT-use cases, it could be desirable to make the clients very thin and lightweight to 1) reduce their CPU usage and activity, and 2) to enable devices to only connect to a single (local) node to reduce connectivity requirements of the client (i.e., the local peer can request for endorsements / broadcast the tx, such that the IoT device does not need internet access).  ></description> </Issue>
