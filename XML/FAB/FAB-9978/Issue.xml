<Issue id="30071" key="FAB-9978" number="9978" project="10002" reporter="adnanchoudhury" assignee="chris.elder" creator="adnanchoudhury" type="10004" summary="`peer query` command returns incorrect error when a non-matching index is specified" priority="3" resolution="10000" status="6" created="2018-05-09 17:33:52.0" updated="2019-06-24 08:29:40.0" resolutiondate="2019-06-24 08:29:40.0" votes="0" watches="4" workflowId="42788"> <description><! CDATA Using CouchDB, when an index name is specified as a part of query argument in `peer query` (i.e. requesting that the mentioned index be used in the query), if the index specified is present but its fields does not match with the query fields, the output is: ` {code:java} Error: error query chaincode by endorsing: status:500 message:"http: read on closed response body"{code} ` this is an incorrect error message. To compare, if the same query is done directly to CouchDB container of the peer, the output in the error message is more clear: {code:java} {"error":"badmatch","reason":"","ref":1414584017}{code} +*how to reproduce:* +in a fabric network with CouchDB as statedb, install-instantiate marbles02 chaincode with index specified as below: {code:java} {"index": {"fields":  "owner" }, "ddoc": "indexdoc_behave_test", "type": "json", "name": "index_behave_test"}{code} Then do a peer query: ` {code:java} peer chaincode query --name mycc1 --ctor '{\"Args\":  \"queryMarbles\",\"{\\\"selector\\\":{\\\"size\\\":5}, \\\"use_index\\\":\\\"_design/indexdoc_behave_test\\\", \\\"index_behave_test\\\"}\" }' --channelID mychannel1 `{code} i.e. ask the query to use the index but with a different field other than in the index definition.  Output: ```    {code:java} 2018-05-09 14:51:51.410 UTC  grpc  Printf -> DEBU 002 scheme "" not registered, fallback to default scheme       2018-05-09 14:51:51.410 UTC  grpc  Printf -> DEBU 003 ccResolverWrapper: sending new addresses to cc:  \{peer0.org1.example.com:7051 0  <nil>}        2018-05-09 14:51:51.410 UTC  grpc  Printf -> DEBU 004 ClientConn switching balancer to "pick_first"       2018-05-09 14:51:51.411 UTC  grpc  Printf -> DEBU 005 pickfirstBalancer: HandleSubConnStateChange: 0xc4205f7a10, CONNECTING       2018-05-09 14:51:51.413 UTC  grpc  Printf -> DEBU 006 pickfirstBalancer: HandleSubConnStateChange: 0xc4205f7a10, READY       2018-05-09 14:51:51.413 UTC  msp  GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity       2018-05-09 14:51:51.414 UTC  chaincodeCmd  getChaincodeSpec -> DEBU 008 java chaincode enabled       2018-05-09 14:51:51.414 UTC  msp/identity  Sign -> DEBU 009 Sign: plaintext: 0AB6070A6908031A0C088796CCD70510...785F6265686176655F74657374225D7D       2018-05-09 14:51:51.415 UTC  msp/identity  Sign -> DEBU 00a Sign: digest: 942E4468AF1CB48D689842B13023892CD5F9640D84C24C790586FFBD824C5300       Error: error query chaincode by endorsing: status:500 message:"http: read on closed response body" {code} ```  +*Expected*+: The error message should not indicate its an http read error and should probably let the CouchDB error ("badmatch") float up to the peer query output.  ></description> </Issue>
