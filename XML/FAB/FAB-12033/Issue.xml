<Issue id="33838" key="FAB-12033" number="12033" project="10002" reporter="manish-sethi" assignee="manish-sethi" creator="manish-sethi" type="10002" summary="Add check for verifying block.Header.PreviousHash field" priority="3" resolution="10000" status="6" created="2018-09-17 21:00:37.0" updated="2018-09-18 12:22:26.0" resolutiondate="2018-09-18 12:22:26.0" votes="0" watches="1" workflowId="45153"> <description><! CDATA In the current code, before adding the block to the ledger, ledger verifies the correct sequence number of the block just to double check that gossip is delivering the right sequence of blocks. In addition, before block is delivered to ledger, the signatures of the ordering service node(s) are verified that fulfills the requirement of the trust model.  Though the above checks are sufficient for keeping an unintended block from getting committed to ledger. Still, it may not be a bad idea to add an additional check that verifies that the field `block.Header.PreviousHash` present in the block matches with the hash of the last committed block. This check is a simple bytes comparison and hence does not cause any observable performance penalty and may help in detecting a rare scenario if there is any bug in the ordering service.  ></description> </Issue>
