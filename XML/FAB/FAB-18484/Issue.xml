<Issue id="46915" key="FAB-18484" number="18484" project="10002" reporter="denyeart" creator="denyeart" type="10001" summary="Upon transaction submit, orderer should return error to submitting client if the transaction cannot be forwarded to Raft leader" priority="3" status="3" created="2021-06-08 14:56:16.0" updated="2021-06-14 08:00:44.0" votes="0" watches="2" workflowId="60818" archived="N"> <description><! CDATA When a transaction is submitted to a Raft orderer node, as soon as it accepts the transaction a success is returned to the client. If the orderer node is not the Raft leader, it will attempt to forward the transaction to the Raft leader. If this fails, for example due to a network issue, the orderer does not log the error, and does not retry the send.  FAB-18479 added a log error message to orderer log for cases where the transaction cannot be forwarded to the Raft leader.  This Jira item proposes to enhance the Raft ordering from the current async submission and instead make it a sync submission that ensures that the transaction is submitted to Raft leader before returning success to client. Note however that even the Raft leader may not cut the transaction into a block (e.g. leader crash, config change gets ordered before the transaction, etc), and therefore clients will continue to need to listen for block events to ensure submitted transactions get ordered and validated.  ></description> </Issue>
