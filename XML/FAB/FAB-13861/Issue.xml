<Issue id="37098" key="FAB-13861" number="13861" project="10002" reporter="adnanchoudhury" assignee="suryalnvs" creator="adnanchoudhury" type="10101" summary="Onboard an OSN upon startup and dynamically (no crashes of other OSNs)" priority="2" resolution="10000" status="6" created="2019-01-24 01:07:25.0" updated="2019-07-23 20:59:58.0" resolutiondate="2019-07-23 20:59:58.0" votes="0" watches="1" workflowId="48675"> <description><! CDATA An admin decides to increase the number of OSNs in the system channel and an application channel, and starts the new orderer using configuration blocks containing all the necessary updates. h2. Setup # Create a network and run a minimum of 10,000 transactions, as in FAB-13601. For a better test, establish 100,000 blocks on the application channel.  h2. Inputs # Add O4 to the {{orderersystemchannel}}: ## Fetch latest config block of {{orderersystemchannel}}. ## Edit to add O4. ## Sign and submit the {{orderersystemchannel}} config update to O1. ## Fetch latest config block again and use it as genesis block for O4 in path ORDERER_GENERAL_GENESISFILE. # Start O4, using the latest config block (edited to include O4). # *Verify* O4 participates in the {{orderersystemchannel}} by ensuring the debug logs contain "leader changed" to the appropriate orderer for the {{orderersystemchannel}}. # Dynamic Onboard O4 to the application channel, {{channel1}}: ## Fetch latest config block of {{channel1}}. ## Edit {{channel1}} config to add O4. ## Sign and submit the channel update transaction to O1. # *Verify* O4 participates in the application {{channel1}} by ensuring the debug logs contain "leader changed" to the appropriate orderer for the {{channel1}}. # Watch O4 {{channel1}} block height grow as it retrieves blocks from O1 and/or O2 and/or O3. # Once O4 catches up, send another transaction through O4 and verify that new block is added to all the OSNs as well as the peer ledger.  h2. Expectations # Verify all blocks in {{channel1}} are retrieved by O4. # Observe the rate, how long it takes to catch up. # All nodes remain in service throughout the test. # No errors in the logs of peers and orderers. # No failures or errors reported by PTE.  h2. More variations for consideration: # +Onboard two new OSNs at once:+ add blocks to channel1 (say with minimum 100,000K blocks) so we can create a situation where both new orderers are pulling blocks simultaneously to catch up. To do this: repeat the test and immediately after step 2 (restarting the O4), reexecute steps 1 and 2 for O5 (_Add O5_ and _Start O5_).   Passed Feb 02   # +Run traffic during the onboarding phase+: To do this: repeat the test while broadcasting transactions to all the orderers concurrently.  Passed Feb 02   # +Restart the onboarding OSN before it finishes+: Refer to FAB-14047. # +Restart the established orderer(s) during onboarding phase:+ Refer to FAB-14058.  ></description> </Issue>
