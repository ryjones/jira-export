<Issue id="43472" key="FAB-17158" number="17158" project="10002" reporter="sykesm" assignee="guoger" creator="sykesm" type="10004" summary="ledger_generate_test leaves garbage behind" priority="3" resolution="10000" status="6" created="2019-11-26 19:00:51.0" updated="2019-12-02 13:53:02.0" resolutiondate="2019-12-02 13:53:02.0" votes="0" watches="2" workflowId="56586"> <description><! CDATA There is an integration tests that leaves this test config tree behind: {code} reset-rollback053831867 {code}  The stem leads me to believe that the directory is from the reset/rollback test but, no... the stem used in this code {code} func initThreeOrgsSetup() *setup {                                                                                                                                                    var err error                                                                                                                                                                     testDir, err := ioutil.TempDir("", "reset-rollback")                                                                                                                              Expect(err).NotTo(HaveOccurred() {code} that is in {{reset_rollback_test.go}} but that is used in tests distributed across multiple files...  Turns out the problem is from {{ledger_generate_test.go}} where the network configuration is created, but never cleaned up. That was, apparently, intentional. {code} AfterEach(func() {                                                                                                                                                                setup.terminateAllProcess()                                                                                                                                                   setup.network.Cleanup()                                                                                                                                                       // do not delete testDir and log it so that we can copy the test data to unit tests for verification purpose                                                                  fmt.Printf("The test dir is %s. Use peers/org2.peer0/filesystem/ledgersData as the sample ledger for kvledger rebuild tests\n", setup.testDir)                                }) {code}  (side comment: we should not be writing to stdout in test but using the GinkgoWriter so we can correlate output with tests instead of just spamming as things run...)  Looking at the test, we see this: {code} Skip("Uncomment to generate sample ledger in v2.0 with new lifecycle chaincode deployment")                                                                                   {code}  I'm sure that means the assumption was that this would never run, right? The test is skipped so can't be run... except it is. The {{Skip}} function is just that - a function. It _must_ be executed for it to take effect. By extension, that means the {{BeforeEach}} and {{AfterEach}} are run. Since {{AfterEach}} isn't cleaning up the tree, it just gets left behind.  Summary: use a build tag.  ></description> </Issue>
