<Action id="65378" issue="43232" author="yacovm" type="comment" created="2019-11-08 13:06:42.0" updateauthor="yacovm" updated="2019-11-08 13:06:56.0"> <body><! CDATA The *Could not acquire policy manager* error means that your peer hasn't joined the channel.  Given that this happens while anchor peers are probed, it means you joined it to the channel, so it's not benign for sure...   ></body> </Action>
<Action id="65379" issue="43232" author="yacovm" type="comment" created="2019-11-08 13:15:17.0" updateauthor="yacovm" updated="2019-11-08 13:15:17.0"> <body><! CDATA i think it's somewhat related to initialization order in: {code} 	cs.bundleSource = channelconfig.NewBundleSource( 		bundle, 		gossipCallbackWrapper, 		trustedRootsCallbackWrapper, 		mspCallback, 		peerSingletonCallback, 		cp.updateChannelConfig, 	) {code}  ></body> </Action>
<Action id="65380" issue="43232" author="yacovm" type="comment" body=" What do you think  ~jyellick  ?" created="2019-11-08 13:16:40.0" updateauthor="yacovm" updated="2019-11-08 13:16:40.0"/>
<Action id="65391" issue="43232" author="jyellick" type="comment" created="2019-11-08 16:09:46.0" updateauthor="jyellick" updated="2019-11-08 16:13:11.0"> <body><! CDATA If you are joined to a channel, then absolutely the policy manager for that channel should be available.  In general, our startup/joinchannel logic is poorly structured.  To me, the most likely thing is that we're seeing a race between channel initialization completing and acquiring the policy manager.  As a rule, we should really be getting our dependencies pushed to us, not receiving an event that triggers us to go poll for our dependencies, as it invites this sort of bug.   ></body> </Action>
<Action id="67905" issue="43232" author="denyeart" type="comment" body="Other deployments have also reported this error, although it seems that gossip recovers and peer functions as normal after startup." created="2020-02-11 16:42:41.0" updateauthor="denyeart" updated="2020-02-11 16:42:41.0"/>
<Action id="69484" issue="43232" author="siddjain" type="comment" created="2020-06-16 23:35:36.0" updateauthor="siddjain" updated="2020-06-16 23:35:36.0"> <body><! CDATA we are also seeing this error when a peer node boots up. example:  {{$ ./run-xxx-peer.sh && docker logs -f peer0.xxx.com}} {{31283094c5a0e3f8bc2fbd8d238b13189cff101da8b43fd289ce804d994a7100}} {{peer0.xxx.com}} {{2020-06-16 23:24:58.751 UTC  nodeCmd  serve -> INFO 001 Starting peer:}} {{ Version: 2.0.1}} {{ Commit SHA: 1cfa5da}} {{ Go version: go1.13.4}} {{ OS/Arch: linux/amd64}} {{ Chaincode:}} {{ Base Docker Namespace: hyperledger}} {{ Base Docker Label: org.hyperledger.fabric}} {{ Docker Namespace: hyperledger}} {{2020-06-16 23:24:58.751 UTC  peer  getLocalAddress -> INFO 002 Auto-detected peer address: 172.18.0.11:8055}} {{2020-06-16 23:24:58.751 UTC  peer  getLocalAddress -> INFO 003 Returning peer0.xxx.com:8055}} {{2020-06-16 23:24:58.857 UTC  gossip.service  New -> INFO 004 Initialize gossip with endpoint peer0.xxx.com:8055}} {{2020-06-16 23:24:58.858 UTC  gossip.gossip  New -> INFO 005 Creating gossip service with self membership of Endpoint: peer0.xxx.com:8055, InternalEndpoint: peer0.xxx.com:8055, PKI-ID: f42d70c3282398833314d4c23ba2931ec716b527b27d282f11be89b7b7528bdb, Metadata:}} {{2020-06-16 23:24:58.859 UTC  gossip.gossip  start -> INFO 006 Gossip instance peer0.xxx.com:8055 started}} {{2020-06-16 23:24:58.861 UTC  ledgermgmt  NewLedgerMgr -> INFO 007 Initializing LedgerMgr}} {{2020-06-16 23:24:59.367 UTC  ledgermgmt  NewLedgerMgr -> INFO 008 Initialized LedgerMgr}} {{2020-06-16 23:24:59.378 UTC  lifecycle  InitializeLocalChaincodes -> INFO 009 Initialized lifecycle cache with 2 already installed chaincodes}} {{2020-06-16 23:24:59.378 UTC  nodeCmd  computeChaincodeEndpoint -> INFO 00a Entering computeChaincodeEndpoint with peerHostname: peer0.xxx.com}} {{2020-06-16 23:24:59.378 UTC  nodeCmd  computeChaincodeEndpoint -> INFO 00b Exit with ccEndpoint: peer0.xxx.com:8056}} {{2020-06-16 23:24:59.381 UTC  sccapi  DeploySysCC -> INFO 00c deploying system chaincode 'lscc'}} {{2020-06-16 23:24:59.381 UTC  sccapi  DeploySysCC -> INFO 00d deploying system chaincode 'cscc'}} {{2020-06-16 23:24:59.381 UTC  sccapi  DeploySysCC -> INFO 00e deploying system chaincode 'qscc'}} {{2020-06-16 23:24:59.381 UTC  sccapi  DeploySysCC -> INFO 00f deploying system chaincode '_lifecycle'}} {{2020-06-16 23:24:59.381 UTC  nodeCmd  serve -> INFO 010 Deployed system chaincodes}} {{2020-06-16 23:24:59.381 UTC  peer  Initialize -> INFO 011 Loading chain mychannel}} {{2020-06-16 23:24:59.381 UTC  ledgermgmt  OpenLedger -> INFO 012 Opening ledger with id = mychannel}} {{2020-06-16 23:24:59.494 UTC  lifecycle  update -> INFO 013 Updating cached definition for chaincode 'test3' on channel 'mychannel'}} {{2020-06-16 23:24:59.559 UTC  lifecycle  update -> INFO 014 Updating cached definition for chaincode 'my_awesome_cc' on channel 'mychannel'}} {{2020-06-16 23:24:59.578 UTC  lifecycle  update -> INFO 015 Chaincode with package ID 'mycc_2.0:422ce5cb243752226c86e04815f8e0725fba5574b576622e82aad21fb25ae2b2' now available on channel mychannel for chaincode definition my_awesome_cc:1.0}} {{2020-06-16 23:24:59.578 UTC  lifecycle  update -> INFO 016 Updating cached definition for chaincode 'my_awesome_chaincode' on channel 'mychannel'}} {{2020-06-16 23:24:59.602 UTC  lifecycle  update -> INFO 017 Chaincode with package ID 'mycc_2.0:422ce5cb243752226c86e04815f8e0725fba5574b576622e82aad21fb25ae2b2' now available on channel mychannel for chaincode definition my_awesome_chaincode:1.0}} {{2020-06-16 23:24:59.602 UTC  lifecycle  update -> INFO 018 Updating cached definition for chaincode 'mycc' on channel 'mychannel'}} {{2020-06-16 23:24:59.621 UTC  lifecycle  update -> INFO 019 Chaincode with package ID 'mycc_2.0:422ce5cb243752226c86e04815f8e0725fba5574b576622e82aad21fb25ae2b2' now available on channel mychannel for chaincode definition mycc:2.0}} {{2020-06-16 23:24:59.622 UTC  lifecycle  update -> INFO 01a Updating cached definition for chaincode 'mycc2' on channel 'mychannel'}} {{2020-06-16 23:24:59.640 UTC  lifecycle  update -> INFO 01b Chaincode with package ID 'mycc_2.0:422ce5cb243752226c86e04815f8e0725fba5574b576622e82aad21fb25ae2b2' now available on channel mychannel for chaincode definition mycc2:1.0}} {{2020-06-16 23:24:59.647 UTC  ledgermgmt  OpenLedger -> INFO 01c Opened ledger with id = mychannel}} {{2020-06-16 23:24:59.669 UTC  peer.orderers  Update -> WARN 01d Config defines both orderer org specific endpoints and global endpoints, global endpoints will be ignored channel=mychannel}} {{2020-06-16 23:24:59.669 UTC  gossip.gossip  JoinChan -> INFO 01e Joining gossip network of channel mychannel with 3 organizations}} {{2020-06-16 23:24:59.669 UTC  gossip.gossip  learnAnchorPeers -> INFO 01f Learning about the configured anchor peers of org2MSP for channel mychannel :  \{peer0.org2.com 8053} }} {{2020-06-16 23:24:59.669 UTC  gossip.gossip  learnAnchorPeers -> INFO 020 Learning about the configured anchor peers of xxxMSP for channel mychannel :  \{peer0.xxx.com 8055} }} {{2020-06-16 23:24:59.669 UTC  gossip.gossip  learnAnchorPeers -> INFO 021 Anchor peer with same endpoint, skipping connecting to myself}} {{2020-06-16 23:24:59.669 UTC  gossip.gossip  learnAnchorPeers -> INFO 022 Learning about the configured anchor peers of org1MSP for channel mychannel :  \{peer0.org1.com 8051} }} {{2020-06-16 23:24:59.675 UTC  gossip.comm  authenticateRemotePeer -> ERRO 023 Failed verifying signature from 172.18.0.9:8053 : Could not acquire policy manager for channel mychannel}}  ></body> </Action>
