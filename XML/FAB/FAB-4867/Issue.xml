<Issue id="18331" key="FAB-4867" number="4867" project="10002" reporter="reubent 1" assignee="c0rwin" creator="reubent 1" type="10004" summary="Index out of range error when loading certificate chain" environment="Running custom MSP within Kubernetes based setup. I totally acknowledge I&apos;ve done something wrong with the certs - it just shouldn&apos;t crash out." priority="3" resolution="10000" status="6" created="2017-06-19 16:33:29.0" updated="2018-07-20 14:13:31.0" resolutiondate="2017-06-21 11:31:03.0" votes="0" watches="3" workflowId="39190" security="10001"> <description><! CDATA *What happens:* If there is a problem with the certificate chain when instantiating the gossip system in a peer, the entire process bails out.  *When does it happen:* When trying to start gossip as part of the node start  *Expected behaviour:* an informative error to be returned {noformat} root@peer0-131666332-1jhl2:/etc/hyperledger/fabric# peer node start  2017-06-19 16:21:58.750 UTC  msp  getMspConfig -> INFO 001 crls folder not found at  /etc/hyperledger/fabric/msp/intermediatecerts . Skipping.:  stat /etc/hyperledger/fabric/msp/crls: no such file or directory  2017-06-19 16:21:58.775 UTC  nodeCmd  serve -> INFO 002 Starting peer: Version: 1.0.0-beta Go version: go1.7.5 OS/Arch: linux/amd64 Chaincode: Base Image Version: 0.3.1 Base Docker Namespace: hyperledger Base Docker Label: org.hyperledger.fabric Docker Namepace: hyperledger  2017-06-19 16:21:58.775 UTC  ledgermgmt  initialize -> INFO 003 Initializing ledger mgmt 2017-06-19 16:21:58.775 UTC  kvledger  NewProvider -> INFO 004 Initializing ledger provider 2017-06-19 16:21:58.776 UTC  kvledger.util  CreateDirIfMissing -> DEBU 005 CreateDirIfMissing  /var/hyperledger/production/ledgersData/ledgerProvider/  2017-06-19 16:21:58.776 UTC  kvledger.util  logDirStatus -> DEBU 006 Before creating dir -  /var/hyperledger/production/ledgersData/ledgerProvider/  exists 2017-06-19 16:21:58.776 UTC  kvledger.util  logDirStatus -> DEBU 007 After creating dir -  /var/hyperledger/production/ledgersData/ledgerProvider/  exists 2017-06-19 16:21:58.780 UTC  kvledger.util  CreateDirIfMissing -> DEBU 008 CreateDirIfMissing  /var/hyperledger/production/ledgersData/chains/index/  2017-06-19 16:21:58.780 UTC  kvledger.util  logDirStatus -> DEBU 009 Before creating dir -  /var/hyperledger/production/ledgersData/chains/index/  exists 2017-06-19 16:21:58.780 UTC  kvledger.util  logDirStatus -> DEBU 00a After creating dir -  /var/hyperledger/production/ledgersData/chains/index/  exists 2017-06-19 16:21:58.786 UTC  kvledger  NewProvider -> DEBU 00b Constructing leveldb VersionedDBProvider 2017-06-19 16:21:58.786 UTC  stateleveldb  NewVersionedDBProvider -> DEBU 00c constructing VersionedDBProvider dbPath=/var/hyperledger/production/ledgersData/stateLeveldb 2017-06-19 16:21:58.787 UTC  kvledger.util  CreateDirIfMissing -> DEBU 00d CreateDirIfMissing  /var/hyperledger/production/ledgersData/stateLeveldb/  2017-06-19 16:21:58.787 UTC  kvledger.util  logDirStatus -> DEBU 00e Before creating dir -  /var/hyperledger/production/ledgersData/stateLeveldb/  exists 2017-06-19 16:21:58.787 UTC  kvledger.util  logDirStatus -> DEBU 00f After creating dir -  /var/hyperledger/production/ledgersData/stateLeveldb/  exists 2017-06-19 16:21:58.790 UTC  historyleveldb  NewHistoryDBProvider -> DEBU 010 constructing HistoryDBProvider dbPath=/var/hyperledger/production/ledgersData/historyLeveldb 2017-06-19 16:21:58.790 UTC  kvledger.util  CreateDirIfMissing -> DEBU 011 CreateDirIfMissing  /var/hyperledger/production/ledgersData/historyLeveldb/  2017-06-19 16:21:58.790 UTC  kvledger.util  logDirStatus -> DEBU 012 Before creating dir -  /var/hyperledger/production/ledgersData/historyLeveldb/  exists 2017-06-19 16:21:58.790 UTC  kvledger.util  logDirStatus -> DEBU 013 After creating dir -  /var/hyperledger/production/ledgersData/historyLeveldb/  exists 2017-06-19 16:21:58.792 UTC  kvledger  NewProvider -> INFO 014 ledger provider Initialized 2017-06-19 16:21:58.792 UTC  kvledger  recoverUnderConstructionLedger -> DEBU 015 Recovering under construction ledger 2017-06-19 16:21:58.792 UTC  kvledger  recoverUnderConstructionLedger -> DEBU 016 No under construction ledger found. Quitting recovery 2017-06-19 16:21:58.792 UTC  ledgermgmt  initialize -> INFO 017 ledger mgmt initialized 2017-06-19 16:21:58.794 UTC  peer  func1 -> INFO 018 Auto detected peer address: 172.17.0.7:7051 2017-06-19 16:21:58.795 UTC  peer  func1 -> INFO 019 Auto detected peer address: 172.17.0.7:7051 2017-06-19 16:21:58.797 UTC  nodeCmd  serve -> INFO 01a Starting peer with TLS enabled 2017-06-19 16:21:58.799 UTC  eventhub_producer  AddEventType -> DEBU 01b Registering BLOCK 2017-06-19 16:21:58.800 UTC  eventhub_producer  AddEventType -> DEBU 01c Registering CHAINCODE 2017-06-19 16:21:58.800 UTC  eventhub_producer  AddEventType -> DEBU 01d Registering REJECTION 2017-06-19 16:21:58.800 UTC  eventhub_producer  AddEventType -> DEBU 01e Registering REGISTER 2017-06-19 16:21:58.800 UTC  eventhub_producer  start -> INFO 01f Event processor started 2017-06-19 16:21:58.801 UTC  nodeCmd  registerChaincodeSupport -> DEBU 020 Chaincode startup timeout value set to 5m0s 2017-06-19 16:21:58.801 UTC  chaincode  NewChaincodeSupport -> INFO 021 Chaincode support using peerAddress: 172.17.0.7:7051 2017-06-19 16:21:58.802 UTC  chaincode  NewChaincodeSupport -> DEBU 022 Turn off keepalive(value 0) 2017-06-19 16:21:58.802 UTC  chaincode  NewChaincodeSupport -> DEBU 023 Setting execute timeout value to 30s 2017-06-19 16:21:58.803 UTC  chaincode  getLogLevelFromViper -> DEBU 024 CORE_CHAINCODE_LEVEL set to level debug 2017-06-19 16:21:58.804 UTC  chaincode  getLogLevelFromViper -> DEBU 025 CORE_CHAINCODE_SHIM set to level debug 2017-06-19 16:21:58.805 UTC  sccapi  RegisterSysCC -> INFO 026 system chaincode cscc(github.com/hyperledger/fabric/core/scc/cscc) registered 2017-06-19 16:21:58.805 UTC  sccapi  RegisterSysCC -> INFO 027 system chaincode lscc(github.com/hyperledger/fabric/core/scc/lscc) registered 2017-06-19 16:21:58.806 UTC  sccapi  RegisterSysCC -> INFO 028 system chaincode escc(github.com/hyperledger/fabric/core/scc/escc) registered 2017-06-19 16:21:58.806 UTC  sccapi  RegisterSysCC -> INFO 029 system chaincode vscc(github.com/hyperledger/fabric/core/scc/vscc) registered 2017-06-19 16:21:58.806 UTC  sccapi  RegisterSysCC -> INFO 02a system chaincode qscc(github.com/hyperledger/fabric/core/chaincode/qscc) registered 2017-06-19 16:21:58.807 UTC  nodeCmd  serve -> DEBU 02b Running peer 2017-06-19 16:21:58.807 UTC  msp  GetLocalMSP -> DEBU 02c Returning existing local MSP 2017-06-19 16:21:58.807 UTC  msp  GetLocalMSP -> DEBU 02d Returning existing local MSP 2017-06-19 16:21:58.807 UTC  msp  GetDefaultSigningIdentity -> DEBU 02e Obtaining default signing identity 2017-06-19 16:21:58.808 UTC  gossip/service  func1 -> INFO 02f Initialize gossip with endpoint peer0 and bootstrap set  127.0.0.1:7051  2017-06-19 16:21:58.808 UTC  msp  GetLocalMSP -> DEBU 030 Returning existing local MSP 2017-06-19 16:21:58.808 UTC  msp  DeserializeIdentity -> INFO 031 Obtaining identity 2017-06-19 16:21:58.809 UTC  msp/identity  newIdentity -> DEBU 032 Creating identity instance for ID &{GospelTest c05fd73ae4c3fa9bf21f53780b33796d7e9888790f24e3b92ac0d3c0b6096c2a} 2017-06-19 16:21:58.809 UTC  msp  GetLocalMSP -> DEBU 033 Returning existing local MSP 2017-06-19 16:21:58.809 UTC  msp  Validate -> DEBU 034 MSP GospelTest validating identity 2017-06-19 16:21:58.811 UTC  msp  getCertificationChain -> DEBU 035 MSP GospelTest getting certification chain panic: runtime error: index out of range  goroutine 1  running : panic(0xc9c680, 0xc4200160a0) /opt/go/src/runtime/panic.go:500 +0x1a1 github.com/hyperledger/fabric/gossip/integration.newConfig(0xc4201f33b8, 0x5, 0xc42000c442, 0xa, 0xc4200ae7e0, 0x1, 0x1, 0x20) /opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:37 +0x6ea github.com/hyperledger/fabric/gossip/integration.NewGossipComponent(0xc420085080, 0x52b, 0x580, 0xc4201f33b8, 0x5, 0xc42017c780, 0x13d3fa0, 0xc4200ae9b0, 0x13e45e0, 0xc42036ae70, ...) /opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:79 +0x93 github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory.func1() /opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:146 +0x41d sync.(*Once).Do(0x1423388, 0xc4201756b8) /opt/go/src/sync/once.go:44 +0xdb github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory(0xc420085080, 0x52b, 0x580, 0xc4201f33b8, 0x5, 0xc42017c780, 0x13d3ea0, 0x14232b8, 0x13e45e0, 0xc42036ae70, ...) /opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:157 +0x139 github.com/hyperledger/fabric/gossip/service.InitGossipService(0xc420085080, 0x52b, 0x580, 0xc42034f200, 0xf, 0xc42017c780, 0x13e45e0, 0xc42036ae70, 0x13d3fa0, 0xc4200ae9b0, ...) /opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:129 +0x13a github.com/hyperledger/fabric/peer/node.serve(0x14232b8, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:174 +0x71c github.com/hyperledger/fabric/peer/node.glob..func1(0x13ca260, 0x14232b8, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:70 +0x3f github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x13ca260, 0x14232b8, 0x0, 0x0, 0x13ca260, 0x14232b8) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x13ca8c0, 0xf, 0xc420010455, 0xa) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x13ca8c0, 0x1b, 0xc420010455) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b main.main() /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:117 +0x54e {noformat} This was discussed with  ~yacovm  on Rocket Chat.  ></description> </Issue>
