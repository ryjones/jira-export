<Action id="46861" issue="31600" author="tecnalia" type="comment" created="2018-07-03 12:44:27.0" updateauthor="tecnalia" updated="2018-07-04 07:35:44.0"> <body><! CDATA From official Node.js SDK we have identified next issues to be solved: * winston based logger is not supported in JS * fs and fs-extra are not supported in JS (are used for chaincode packaging and compression) * pkcs11 (HSM) is not supported in native JS * client and ca configuration from json is not successfully loaded beacuse is loaded from a file on FS * KV Storage needs to be change to work on Browsers  ></body> </Action>
<Action id="46900" issue="31600" author="tecnalia" type="comment" created="2018-07-04 07:30:34.0" updateauthor="tecnalia" updated="2018-07-04 07:30:34.0"> <body><! CDATA Interactions with *fabric-ca* are locked due to missing CORS policy bug  https://jira.hyperledger.org/browse/FAB-11045     ></body> </Action>
<Action id="46902" issue="31600" author="yacovm" type="comment" created="2018-07-04 08:26:20.0" updateauthor="yacovm" updated="2018-07-04 08:26:20.0"> <body><! CDATA * I don't think the fabric-CA should be a blocker for such a thing to manifest. You can use fabric without fabric-CA at all.  * I don't know if you can use gRPC from javascript - can you contact a remote endpoint that isn't your web server?  ></body> </Action>
<Action id="46907" issue="31600" author="tecnalia" type="comment" body="Well, it is a blocker if you want to make cross origin request, as you can see on the picture. Also, I know that fabric can be used withour CA, you can use cryptogen or even an external CA for certificates, but it is good to have the option to enable/disable cors as part of a less failure prone software for fabric-ca." created="2018-07-04 09:16:49.0" updateauthor="tecnalia" updated="2018-07-04 09:16:49.0"/>
<Action id="47063" issue="31600" author="vdods" type="comment" body="Re: GRPC calls from Javascript client – it looks like it can be done:  https://github.com/grpc/grpc-web  but IIRC, there&apos;s some requirement of having an HTTP proxy service.  I haven&apos;t actually tried this myself (yet?)." created="2018-07-07 21:18:22.0" updateauthor="vdods" updated="2018-07-07 21:18:22.0"/>
<Action id="47087" issue="31600" author="tecnalia" type="comment" created="2018-07-09 10:20:13.0" updateauthor="tecnalia" updated="2018-07-09 10:20:13.0"> <body><! CDATA We were able to execute a minor migration of the Node SDK code to JS being able to: * Compile fabric .proto files for Javascript. * Load users authentication data from Browser persistence storage. * Executing enroll operation against fabric-ca server and saving the result on browser storage.  To do these tests, we ran into problems due to CORS, but we were able to make a workaround on Chrome using next flags:  {{google-chrome --disable-web-security --user-data-dir $HOME}}   Still, is s slow process because we need to port all the logic in charge of loading network configuration (connection profile, etc), and also figure out a way of using web-grpc (as proxy or whatever) to communicate with fabric  ></body> </Action>
<Action id="47209" issue="31600" author="tecnalia" type="comment" body="An *envoy* ( https://github.com/envoyproxy/envoy ) based proxy (with *native grpc* support) seems a pretty good option to work with web-grpc from *JS*." created="2018-07-11 12:37:19.0" updateauthor="tecnalia" updated="2018-07-11 12:37:19.0"/>
<Action id="57985" issue="31600" author="tecnalia" type="comment" body="So far, we are experimenting with alternative ways that do not involve protobuffers and GRPC for peer communication, but nothing solid yet" created="2019-03-07 16:49:10.0" updateauthor="tecnalia" updated="2019-03-07 16:49:10.0"/>
<Action id="66731" issue="31600" author="koptan" type="comment" body=" ~Tecnalia  . I am interesting to work with you to solve this issue or create POC for browser wallet , please let me know how to help ." created="2020-01-17 02:24:14.0" updateauthor="koptan" updated="2020-01-17 02:27:07.0"/>
<Action id="67585" issue="31600" author="sykesm" type="comment" body="Stale" created="2020-01-22 22:33:41.0" updateauthor="sykesm" updated="2020-01-22 22:33:41.0"/>
