<Issue id="24013" key="FAB-7030" number="7030" project="10002" reporter="denyeart" creator="denyeart" type="10001" summary="Allow Channel Readers to invoke chaincode that reads from the ledger" priority="2" resolution="10002" status="6" created="2017-11-18 15:52:40.0" updated="2020-01-17 19:37:13.0" resolutiondate="2020-01-17 14:04:09.0" votes="1" watches="5" workflowId="35408"> <description><! CDATA If you are not a ChannelWriter you will not be able to invoke chaincode (propose) on an endorser, and therefore identities that are ChannelReaders but not ChannelWriters have no mechanism to call read-only chaincode functions.  Based on the role name, I would expect ChannelReaders should be able to call chaincode read-only functions.  Currently in 1.1 this can be achieved by overriding the Propose ACL to be something different than ChannelWriters.  This work item proposes that ChannelReaders should be able to call chaincode functions that read from ledger using the default configuration.  Option 1: Re-introduce a chaincode Query() function (it was there in 0.6 but not 1.0, removed in --FAB-1055--), which would only require you to be a ChannelReader to call chaincode read-only functions (functions that attempt to write in the context of a Query would immediately return an error). The Query() would also be more streamlined than Invoke() as the peer simulator would not need to generate a RWSet and the ProposalResponse would not include a RWSet.  Option 2: Set the Propose ACL to be ChannelReaders instead of ChannelWriters. If the chaincode simulation has writes, then we could additionally ensure that client is a ChannelWriter.  ></description> </Issue>
