<Issue id="16102" key="FAB-3505" number="3505" project="10002" reporter="nishi" assignee="nishi" creator="nishi" type="10003" summary="Test chaincode_example02 using a BDD feature file" priority="2" resolution="10000" status="6" created="2017-04-28 19:08:07.0" updated="2018-07-20 14:12:27.0" resolutiondate="2017-06-22 13:48:29.0" votes="0" watches="1" workflowId="38217"> <description><! CDATA * +Test Name+: Test example02 stopping and starting peers * +Component+:  peer/endorser * +Description+: Deploy, invoke and query against the fabric network using example02 chaincode. Then stop and start a peer and ensure that the network continues as expected. * +Artifact Locations+:  fabric/test/feature/peer.feature * +Network Topology+:  3 orderers, 3 zookeepers, 4 kafka brokers (both solo and kafka orderers) 2 organizations with 2 peers each * +Client Driver+:  behave * +Input+:  behave -n "FAB-3505" * +Output+: 1 scenarios passed, 0 failed     Steps to test:  1. Bring up a 4 peer network with 1 orderer, 4 peers 2. Create a channel 3. Join channel all 4 peers (with 2 peers from 2 organization).  4. Install chaincode_example02 on all peers 5. Instantiate chaincode( a= 1000, b=2000) on one peer from channel.  6. Query on initial value of "a" Result: 1000  7. Invoke (a, b, 100) 8. Query on updated value of "a" Result:900  9. Bring down pee0  10. Invoke (a, b 100) 11. Query on updated value of "a' on peer1 Result: 800  12. Bring up peer0 13. Query on updated "a" Result: 800  ></description> </Issue>
