<Issue id="14085" key="FAB-1658" number="1658" project="10002" reporter="kchristidis" assignee="kchristidis" creator="kchristidis" type="10004" summary="Fix occasional Deliver failure on Kafka BDD tests" priority="3" resolution="10000" status="6" created="2017-01-15 05:07:38.0" updated="2018-07-20 14:11:12.0" resolutiondate="2017-01-15 23:52:22.0" votes="0" watches="1" workflowId="37038"> <description><! CDATA In  FAB-1382  the Deliver API was modified so as to work with a range. The BDD implementation of Deliver was also modified in that changesetso as to take an end block of `NEWEST`.  Occasionally, the Kafka orderer will fail on one of these BDD tests because the Deliver request comes before all the incoming (via Broadcast) messages have been processed. In that case, the `NEWEST` value is translated to a lower-numbered block than the expected one.  As an example, consider the case where we send 100 messages to the orderer, and each block has 10 messages. When we send the Deliver call, Kafka has processed 90 messages, so it translates NEWEST to 9. Our test expects NEWEST to be 10 and thus fails.  Until we find an elegant fix for this, I am adding a 1-second sleep before the Deliver call is invoked on the Kafka cases. This should add 14 seconds to the duration of these tests.  I stress that this is a temporary patch, and I am open to a more elegant solution, but the default should _not_ be a setup where the orderer fails occasionally.  ></description> </Issue>
