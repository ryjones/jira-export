<Issue id="40541" key="FAB-15699" number="15699" project="10002" reporter="vijaypunugubati" creator="vijaypunugubati" type="10004" summary="PTE_Functions:test_FAB7929_8i failed in fabric-test merge job." priority="3" resolution="10203" status="6" created="2019-06-12 15:37:17.0" updated="2019-07-28 18:05:10.0" resolutiondate="2019-07-28 18:03:21.0" votes="0" watches="3" workflowId="53490"> <description><! CDATA *Summary:* systest_pte.py::PTE_Functions::test_FAB7929_8i FAILED  *Branch:* Master**  *Platform:* ** x86_64  *Error* Snippet:  {code:java} /systest_pte.py::PTE_Functions::test_FAB7929_8i FAILED 00:24:50.860  00:24:50.860  generated xml file: /w/workspace/fabric-test-merge-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/smoke/results_systest_pte.xml  00:24:50.860 =================================== FAILURES =================================== 00:24:50.860 ________________________ PTE_Functions.test_FAB7929_8i _________________________ 00:24:50.860  00:24:50.860 self = <systest_pte.PTE_Functions testMethod=test_FAB7929_8i> 00:24:50.860  00:24:50.860     def test_FAB7929_8i(self): 00:24:50.860         ''' 00:24:50.860             Description: 00:24:50.860      00:24:50.860             Functional and TPS performance measurement test. 00:24:50.860             - This scenario launches a network, as defined below, 00:24:50.860               and runs two tests - for invokes, and for queries - 00:24:50.860               on single host using networkLauncher (after removing 00:24:50.860               any existing network and artifacts). 00:24:50.860      00:24:50.860             Network Topology: 3 Ord, 4 KB, 3 ZK, 2 Org, 2 Peers/Org, TLS enabled 00:24:50.860               LevelDB, 4 Channels, 1 chaincode (sample_cc), 8 threads total 00:24:50.860      00:24:50.861             Part 1: 00:24:50.861             - Use PTE in Constant Stress Mode to continuously send INVOKE 00:24:50.861               transactions concurrently to 1 peer in both orgs, 00:24:50.861               for each of the 4 channels (8 threads total, each 00:24:50.861               send 100 transaction proposals) 00:24:50.861             - Register a listener to receive an event for each 00:24:50.861               Block (not per transaction) per 00:24:50.861               Channel (full block events - not filtered blocks) 00:24:50.861             - Count TXs and ensure events are received for each one (indicating 00:24:50.861               each was written to ledger successfully) and calculate TPS results 00:24:50.861      00:24:50.861             Part 2: 00:24:50.861             - QUERY all the invoked transactions 00:24:50.861             - Count successes and calculate TPS results 00:24:50.861      00:24:50.861             Logs Artifacts Locations, PTE Testcase Logs: 00:24:50.861                 fabric-test/tools/PTE/CITest/Logs/FAB-7929-8i-pteReport.log 00:24:50.861                 fabric-test/tools/PTE/CITest/Logs/FAB-7929-8i-<MMDDHHMMSS>.log 00:24:50.861                 fabric-test/tools/PTE/CITest/Logs/FAB-7929-8q-<MMDDHHMMSS>.log 00:24:50.861             ''' 00:24:50.861      00:24:50.861         # Run the test scenario: launch network and run the invokes and query tests. 00:24:50.861         # We do these two testcases together in this one test scenario, with 00:24:50.861         # one network, because the query test needs to query all those same 00:24:50.861         # transactions that were done with the invokes. 00:24:50.861         returncode = subprocess.call("./FAB-7929-8i.sh", cwd=scenarios_directory, shell=True) 00:24:50.861         self.assertEqual(returncode, 0, msg="Test Failed with non-zero exit code; check for errors in fabric-test/tools/PTE/CITest/Logs/") 00:24:50.861         # tear down the network, including all the nodes docker containers 00:24:50.861         returncode = subprocess.call("./networkLauncher.sh -a down", cwd=nl_directory, shell=True) 00:24:50.861      00:24:50.861         # Check log file for the expected output lines. 00:24:50.861         # 00:24:50.861         # Output Summary should include lines like these for the Invokes portion of the test: 00:24:50.861         #    CONSTANT INVOKE Overall number of PTE: 4 00:24:50.861         #    CONSTANT INVOKE Overall processes: 8 00:24:50.861         #    CONSTANT INVOKE Overall transactions: sent 800 received 800 00:24:50.861         #    CONSTANT INVOKE Overall failures: proposal 0 transactions 0 00:24:50.861         #    CONSTANT INVOKE Overall event: received 800 timeout 0 unreceived 0 00:24:50.861         #    CONSTANT INVOKE Overall time: start 1536676220165 end 1536676228702 duration 8537 00:24:50.862         #    CONSTANT INVOKE Overall CONSTANT INVOKE TPS 93.71 00:24:50.862         #    CONSTANT INVOKE Overall latency summary 00:24:50.862         #        CONSTANT INVOKE Overall proposals latency 800 min 4 ms max 178ms avg 19.35 ms 00:24:50.862         #        CONSTANT INVOKE Overall transactions latency 800 min 5 ms max 158 ms avg 44.10 ms 00:24:50.862         #        CONSTANT INVOKE Overall events latency 800 min 468 ms max 3097 ms avg 1652.28 ms 00:24:50.862         # 00:24:50.862         # Output Summary should include lines like these for the Query portion of the test: 00:24:50.862         #    CONSTANT QUERY Overall number of PTE: 4 00:24:50.862         #    CONSTANT QUERY Overall processes: 8 00:24:50.862         #    CONSTANT QUERY Overall transactions: sent 800 received 800 failures 0 00:24:50.862         #    CONSTANT QUERY Overall time: start 1536676374892 end 1536676376872 duration 1980 00:24:50.862         #    CONSTANT QUERY Overall CONSTANT QUERY TPS 404.04 00:24:50.862      00:24:50.862         # First check if the test finished and created the report file; then check it for accurate counts 00:24:50.862         logfilelist = subprocess.check_output("ls", cwd=logs_directory, shell=True) 00:24:50.862         self.assertIn("FAB-7929-8i-pteReport.log", logfilelist) 00:24:50.862      00:24:50.862         count = subprocess.check_output( 00:24:50.862                 "grep \"CONSTANT INVOKE Overall transactions: sent 800 received 800\" FAB-7929-8i-pteReport.log | wc -l", 00:24:50.862                 cwd=logs_directory, shell=True) 00:24:50.862 >       self.assertEqual(int(count.strip()), 1) 00:24:50.862 E       AssertionError: 0 != 1 00:24:50.862  00:24:50.862 systest_pte.py:90: AssertionError/ code placeholder {code} *Build Logs:*  https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/687/consoleFull   ></description> </Issue>
