<Action id="45379" issue="30055" author="pandrejko" type="comment" body=" ~joe-alewine  - This came in through the Support team. Ticket CS0032097. I was wondering if you could take a look here and see if this could be addressed in the ACL doc updates you are making?" created="2018-05-31 20:27:22.0" updateauthor="pandrejko" updated="2018-05-31 20:27:22.0"/>
<Action id="45380" issue="30055" author="joe-alewine" type="comment" created="2018-05-31 20:43:29.0" updateauthor="joe-alewine" updated="2018-05-31 20:44:32.0"> <body><! CDATA  ~pandrejko   I poked around a little yesterday and found the ACL resources file:  https://github.com/hyperledger/fabric/blob/13447bf5ead693f07285ce63a1903c5d0d25f096/core/aclmgmt/resources/resources.go   I've hesitated adding it to the doc barring more input that I should because I'm worried about the ACL doc becoming an infinite series of regressions (the ACL resources information won't make much sense unless you describe what lifecycle chaincode is and what query system chaincode is and so on).  For example, the QSCC code is here:  https://github.com/hyperledger/fabric/blob/13447bf5ead693f07285ce63a1903c5d0d25f096/core/scc/qscc/query.go   Is this really the kind of thing we want to expose?  It's becoming clear that perhaps we need to say something, but I'm very concerned about opening a can of worms.  ></body> </Action>
<Action id="45385" issue="30055" author="pandrejko" type="comment" created="2018-05-31 21:09:59.0" updateauthor="pandrejko" updated="2018-05-31 21:09:59.0"> <body><! CDATA OK Let's talk about this some more then.     Also what about her comment that `even though that InvokeChaincode called on different channel is essentially a read only transaction, CHANNELWRITERS permission is still needed. ` Is that something that changes in 1.2/Can we doc this?  ></body> </Action>
<Action id="45387" issue="30055" author="joe-alewine" type="comment" created="2018-05-31 21:36:55.0" updateauthor="joe-alewine" updated="2018-05-31 21:37:46.0"> <body><! CDATA Talking about it some more seems like a good idea.  I should have read the comment in this JIRA closer. I'm now a bit confused. It would be news to me that you could invoke a chaincode on a different channel. Why or how would that be permitted?  You *can* invoke a chaincode on your own channel (which is defined by "Writers", sensibly). And you can invoke a chaincode with another chaincode, which has a "Readers" permission. But invoking a chaincode on another channel? I'm lost.  ></body> </Action>
<Action id="45418" issue="30055" author="pandrejko" type="comment" created="2018-06-01 18:12:36.0" updateauthor="pandrejko" updated="2018-06-01 18:12:36.0"> <body><! CDATA  ~yingmsky    ~joe-alewine  and I looked at this some more.     1) We were wondering if we could get clarification from you on your statement ```even though that InvokeChaincode called on different channel is essentially a read only transaction,```  Chaincode instantiation is scoped to a channel. So one would not invoke a chaincode  against different channel.  Could you elaborate a little more on what you were trying to do?      2) Joe is in the process of writing a document describing how ACLs work (https://jira.hyperledger.org/browse/FAB-6546).   https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/353/html/access_control.html   In there, he includes a link to the  https://github.com/hyperledger/fabric/blob/master/sampleconfig/configtx.yaml  which contains the list  of resources that can be secured by an ACL. We were wondering if this answers your question above, or if there is additional content you were looking for?     ></body> </Action>
<Action id="46631" issue="30055" author="pandrejko" type="comment" created="2018-06-27 20:48:01.0" updateauthor="pandrejko" updated="2018-06-27 20:48:01.0"> <body><! CDATA  ~yingmsky  Does this new information address your questions:  http://hyperledger-fabric.readthedocs.io/en/latest/access_control.html  ></body> </Action>
<Action id="67517" issue="30055" author="sykesm" type="comment" body="Stale" created="2020-01-22 22:32:45.0" updateauthor="sykesm" updated="2020-01-22 22:32:45.0"/>
