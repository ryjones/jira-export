<Issue id="40629" key="FAB-15735" number="15735" project="10002" reporter="yoheiueda" assignee="yoheiueda" creator="yoheiueda" type="10001" summary="Improving EventHub scalability" priority="3" status="10100" created="2019-06-17 16:24:45.0" updated="2019-06-18 09:09:30.0" votes="0" watches="2" workflowId="53579"> <description><! CDATA When we use many EventHub connection to a peer, TPS performance is degraded due to excessive object allocations. Our experiments show that TPS decreases by *13%* when we use 8 EventHub connections, and decreases by *55%* when we use 64 EventHub connections.  This is a serious problem, when Node SDK is used to archive thousands of TPS. A Node.js process is single-threaded, so we need to use a lot of Node.js processes to achieve high TPS. If each of such Node SDK processes establishes a EventHub connection, total TPS performance is degraded significantly.  Â   We identified the following two causes of this scalability issue. * FAB-15736 Redundant deserialization of blocks * FAB-15737 Redundant generation of FilteredBlock objects  We implemented patches that alleviate these problems, and measured the performance improvement. With these patches, we obtained 2.2x TPS improvement when 64 EventHub connections are established, and TPS decrease becomes less than 2%.  Please see attached PDF file for details.  ></description> </Issue>
