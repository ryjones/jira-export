<Issue id="31209" key="FAB-11246" number="11246" project="10002" reporter="andrew-coleman" assignee="mbwhite" creator="andrew-coleman" type="10000" summary="Programming model - Transaction methods in chaincode" priority="2" resolution="10000" status="6" created="2018-06-20 08:27:15.0" updated="2019-12-02 17:59:28.0" resolutiondate="2018-12-06 15:15:09.0" votes="4" watches="24" workflowId="35875"> <description><! CDATA A new theme ‘programming model enhancements’ aims to introduce a set of higher level abstractions to the Fabric SDKs and chaincode interface.  The aim of this is to simplify the development experience and reduce the amount of boilerplate code that the developer has to write for many of the common use-cases when creating applications that access a Fabric network.  Much of this is driven by feedback from users and from experience with the Hyperledger Composer project which adds business level abstractions on top of the existing Fabric APIs.  Initially, these enhancements will be delivered to the Node.js versions of the SDK and chaincode.  This epic adds the ability to define individual transaction processing functions as an alternative to a single ‘chaincode’ class with an Invoke() method.  The reduces the amount of boilerplate 'method dispatch' code that typically has to be written by the chaincode developer.  Defining a well known structure to a chaincode class will allow development tools (future epic) to introspect the transaction functions and enable features such as content assist when writing the client side code.  Functional delivery will include associated unit and e2e tests to support the feature.  Full details  here|https://docs.google.com/document/d/1_np3fnT_OludRGcF3PbubDooNsH8J-_G7UaWhk8a_cU/edit?usp=sharing      +*EDIT*+ - information fed back from users is being held  here|https://docs.google.com/document/d/1adtrpG-IWlpOUWxDwFbiQq_trh_aleKnTyAR3I5rmm8/edit?usp=sharing  commentable in Google Docs ---- Checklist - Implementation, unit test, function and integration tests within the repo - Documentation - Updates to the main fabric docs (Ed P) - Updates to the repos readme for Node and GO - Sample using these features (node and go) - Current sample/tutorial available in  https://github.com/mbwhite/chaincode-commericalpaper  - Where should this move to - Tutorials - Check with Ed Prosser re where/if - Performance - Check with NickL if any performance issues or should be added to test - System Test - LatitiaH? - Typescrtip definitions  ></description> </Issue>
