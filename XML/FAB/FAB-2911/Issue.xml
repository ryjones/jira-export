<Issue id="15487" key="FAB-2911" number="2911" project="10002" reporter="rhegde" assignee="rhegde" creator="rhegde" type="10004" summary="Peer&apos;s CouchDB code incorrectly converts a Integer value to a Floating Number thus causing JSON unmarshalling error and leading for user-chaincode to fail the Endorsement Proposal" priority="1" resolution="10000" status="6" created="2017-03-28 18:55:26.0" updated="2018-07-20 14:12:04.0" resolutiondate="2017-03-31 17:49:34.0" votes="0" watches="3" workflowId="37857"> <description><! CDATA There is defect in https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go#L144    h5. Steps to Reproduce bq. 1. Install marbles02 using CouchDB bq. 2. for instantiate ==> -c '{"Args": "init" }' bq. 3. for creating a marble asset ==> -c '{"Args": "initMarble","marble1","blue","1000009","tom" }' bq. 4. for transferring the marble asset ==> -c '{"Args": "transferMarble","marble2","jerry" }'  Step 4 fails with  {quote}``` 2017-03-28 10:51:35.662 UTC  msp  Sign -> DEBU 005 Sign: digest: E8E5581A81BEF35E104FAD041A8E81AD549C517FCFE7612B50FDE5E78505AC97  Error: Error endoatrsing invoke: rpc error: code = 2 desc = json: cannot unmarshal number 1.000009e+06 into Go value of type int Usage: ```{quote} Note: This doesn't get reproduced on Level-DB  *Root Cause* bq. statecouchdb.go for unwrapping the data namespace (removeDataWrapper) uses the generic interface representation and causes the golang JSON package API to retain the floating point representation. A integer size >= 7 is represented with E notation internally by JSON package and this field upon un-marshalling result in the above error.  h5. *Fix in Peer Code* Need to replace the following line https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go#L147 to use json package NewDecoder API with UseNumber call. {quote} decoder := json.NewDecoder(bytes.NewBuffer(wrappedValue)) decoder.UseNumber() err := decoder.Decode(&jsonResult); {quote}  Reference: http://stackoverflow.com/questions/16946306/preserve-int64-values-when-parsing-json-in-go   ></description> </Issue>
