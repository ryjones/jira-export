<Issue id="14851" key="FAB-2289" number="2289" project="10002" reporter="markparz" assignee="markparz" creator="markparz" type="10002" summary="Modeling concepts &amp; descriptions" priority="2" resolution="10000" status="6" created="2017-02-16 19:45:48.0" updated="2018-07-20 14:11:41.0" resolutiondate="2017-04-25 15:32:20.0" votes="0" watches="2" workflowId="37482"> <description><! CDATA We need to describe at a high level how Fabric accomplishes work such as transactions and security.  Nick/Josh,  Here is my feedback on transaction data model.  I honestly think the section would really be called data model possibly- not transaction data model.. .There are transactions and transaction flow... and there is data model. Outlining what is the data on the immutable ledger is quite important.  So, I walked away thinking the structure and what it covers doesn't feel quite right to me for transaction data model and hard to follow the way it starts out.  If I were to lay out topics in this section, I would do the following (see in bold with comments behind each): (I think you can use the material you have also written, but i think there is more to do here)  - what is the model of the data: You define the data as Assets and Asset Registries is the data to be stored and exchanged across the business network.. This is NOT crypto currency only.. you can trade money if you define the asset as money, if asset is pianos that move around the world,.. .  Now one can do UTXO mode which has a particular format (ie entry is spent/not spent,.. it must add up every time in a transaction-Chris Ferris should comment  here on how he likes to define this here)  - The ledger : it is immutable, it is read/write sets that are signed transactions.  Ledger can be shared across all in the network, or you can have ledgers that are only for a set of participants (relating to channel). We should probably mention here that if you want to encrypt your payload- you can and what "encrypt this" means. (ie is it SHA0-256,etc,.?)  The Hyperledger-fabric data model allows for (here's where I would include bullet points in no great order at this point) -properties (things like immutable, it's file based,.) - all the things actually on the ledger in detail: configuration block on the ledger, read/write set,etc,. - transactions are ordered coming from consensus - how couchdb level db are related to it - what goes on the ledger is validated (ie goes through VSCC, but explain in human layman terms) pointing to below section - ask chris what else to ask here  Chaincode-Here is explanation  of chaincode related to data model-- What is put on the ledger is enforced by chaincode which has a series of transactions.  the Transaction is proposed to move asset a from bank 1 to bank 2.  Maybe defining this at a high level as it relates to the data model.  PArticipants I think you do need to describe here who can access what data, based on being a permissioned network.  Transactions  Transactions are used to read and write to the ledger and going through the actual flow of transaction proosal, send to orderer, get an event to validate what's on the ledger or a failure of transaction going onto the block (be careful how i've identified events here) This is where you go through the transaction flow, particularly explaining transaction ordering and transaction validation   ></description> </Issue>
