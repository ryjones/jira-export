<Action id="41301" issue="28259" author="jyellick" type="comment" body="I can certainly see removing the option from {{orderer.yaml}} but are we sure there&apos;s no value in leaving at least the RAM ledger implementation around? In particular, for doing things like integration tests with multiple logical orderer processes, it still seems like a handy thing to keep around. Are we actively encountering problems maintaining them? Are we trying to change the ledger interface or similar?" created="2018-03-07 15:19:48.0" updateauthor="jyellick" updated="2018-03-07 15:19:48.0"/>
<Action id="41314" issue="28259" author="kchristidis" type="comment" created="2018-03-07 15:37:30.0" updateauthor="kchristidis" updated="2018-03-07 15:37:30.0"> <body><! CDATA I see these benefits that the RAM ledger in particular gives us ( ~guoger  also mentioned benchmarks where we want to eliminate I/O as a throughput bottleneck), but I maintain that they are quite small and this doesn't justify their place in the master tree.  For instance, it is trivial to set {{Fileledger.Location}} to a temp path and defer-remove it at the end of the test. And I suspect the orderer is not the only component that writes to disk and then deletes those artifacts during testing.  FWIW, there _are_ also minor interface issues. Consider the fact that the {{Next}} method blocks until there is a new block available _or until {{Close}} is called_, which _is_ the case for the file ledger implementation, but is _not_ the case from RAM/JSON. (Can we fix that? Yeah. But we shouldn't have to carry that baggage along to begin with.)  ></body> </Action>
<Action id="62373" issue="28259" author="mastersingh24" type="comment" body="No activity in a year or more" created="2019-07-30 02:59:49.0" updateauthor="mastersingh24" updated="2019-07-30 02:59:49.0"/>
