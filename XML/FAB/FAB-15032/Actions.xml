<Action id="58903" issue="39037" author="sykesm" type="comment" body="Similar failures observed https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/11312/console - panic from timeout but different stacks." created="2019-04-03 17:38:18.0" updateauthor="sykesm" updated="2019-04-03 17:38:18.0"/>
<Action id="59767" issue="39037" author="mhbauer" type="comment" created="2019-05-06 20:55:51.0" updateauthor="mhbauer" updated="2019-05-06 20:55:51.0"> <body><! CDATA Looks like a deadlock from this particular stack   goroutine 39049  semacquire, 17 minutes : sync.runtime_SemacquireMutex(0xc0005f977c, 0x0) 	/usr/local/Cellar/go/1.12.1/libexec/src/runtime/sema.go:71 +0x3d sync.(*Mutex).Lock(0xc0005f9778) 	/usr/local/Cellar/go/1.12.1/libexec/src/sync/mutex.go:134 +0x109 sync.(*RWMutex).Lock(0xc0005f9778) 	/usr/local/Cellar/go/1.12.1/libexec/src/sync/rwmutex.go:93 +0x2d github.com/hyperledger/fabric/gossip/comm.(*connectionStore).shutdown(0xc0005f9740) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/conn.go:147 +0x4b github.com/hyperledger/fabric/gossip/comm.(*commImpl).Stop(0xc000317440) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:375 +0x136 github.com/hyperledger/fabric/gossip/gossip.(*gossipServiceImpl).Stop(0xc000648c80) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:759 +0x1a5 github.com/hyperledger/fabric/gossip/service.(*gossipServiceImpl).Stop(0xc0001ff7c0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:425 +0x4e6 github.com/hyperledger/fabric/gossip/service.(*gossipGRPC).Stop(0xc00041aef0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:745 +0x2e github.com/hyperledger/fabric/gossip/service.stopPeers.func1(0xc002cc60f0, 0x1, 0x4a853e0, 0xc00041aef0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:627 +0x5a created by github.com/hyperledger/fabric/gossip/service.stopPeers 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/service/gossip_service_test.go:625 +0xb2  It's a series of calls to Stop() that end in a rwMutex.Lock()  ></body> </Action>
<Action id="59768" issue="39037" author="mhbauer" type="comment" created="2019-05-06 21:02:12.0" updateauthor="mhbauer" updated="2019-05-06 21:02:12.0"> <body><! CDATA The repeated stack of   goroutine 37191  semacquire, 17 minutes : sync.runtime_SemacquireMutex(0xc0005f9784, 0xc000cbe000) 	/usr/local/Cellar/go/1.12.1/libexec/src/runtime/sema.go:71 +0x3d sync.(*RWMutex).RLock(...) 	/usr/local/Cellar/go/1.12.1/libexec/src/sync/rwmutex.go:50 github.com/hyperledger/fabric/gossip/comm.(*connectionStore).getConnection(0xc0005f9740, 0xc0022c7560, 0x0, 0x0, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/conn.go:61 +0x80c github.com/hyperledger/fabric/gossip/comm.(*commImpl).sendToEndpoint(0xc000317440, 0xc0022c7560, 0xc0006b7540, 0xc001ea8000) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:231 +0x1d4 github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send.func1(0xc000317440, 0xc0022c7560, 0xc0006b7540) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:218 +0x44 created by github.com/hyperledger/fabric/gossip/comm.(*commImpl).Send 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:217 +0x179  is the same mutex on RLock()  Although there may be multiple instances of these connections. I can't tell what test this is.  ></body> </Action>
<Action id="59769" issue="39037" author="mhbauer" type="comment" created="2019-05-06 21:05:34.0" updateauthor="mhbauer" updated="2019-05-06 21:05:34.0"> <body><! CDATA goroutine 7611  chan receive, 19 minutes : github.com/hyperledger/fabric/gossip/comm.(*connection).drainOutputBuffer(0xc000f1c5b0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/conn.go:353 +0x36 github.com/hyperledger/fabric/gossip/comm.(*connection).close(0xc000f1c5b0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/conn.go:252 +0x78 github.com/hyperledger/fabric/gossip/comm.(*connectionStore).onConnected(0xc0005f9740, 0x4a7eac0, 0xc0018fc920, 0xc001d76500, 0xc00056ae70, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/conn.go:174 +0x3a5 github.com/hyperledger/fabric/gossip/comm.(*commImpl).GossipStream(0xc000317440, 0x4a7eac0, 0xc0018fc920, 0x0, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/comm/comm_impl.go:557 +0x361 github.com/hyperledger/fabric/protos/gossip._Gossip_GossipStream_Handler(0x4912d20, 0xc000317440, 0x4a7c7e0, 0xc002e6a540, 0x51066a0, 0xc0021cab00) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/gossip/message.pb.go:2758 +0xad github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processStreamingRPC(0xc0004d7500, 0x4a7fe40, 0xc002380300, 0xc0021cab00, 0xc0005781e0, 0x50d6fa0, 0x0, 0x0, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1175 +0xacd github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc0004d7500, 0x4a7fe40, 0xc002380300, 0xc0021cab00, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1254 +0xcbe github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc002e38a20, 0xc0004d7500, 0x4a7fe40, 0xc002380300, 0xc0021cab00) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:690 +0x9f created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:688 +0xa1  This looks like a race condition on reading from a channel.  ></body> </Action>
<Action id="61092" issue="39037" author="denyeart" type="comment" body="cherry picked to release-1.4: https://gerrit.hyperledger.org/r/#/c/fabric/+/31958/" created="2019-06-18 19:27:43.0" updateauthor="denyeart" updated="2019-06-18 19:27:43.0"/>
