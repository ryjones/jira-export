<Issue id="32384" key="FAB-11387" number="11387" project="10002" reporter="diizuka" assignee="diizuka" creator="diizuka" type="10004" summary="Fix num of params boundary check for cauthdsl" priority="3" resolution="10000" status="6" created="2018-07-30 02:27:23.0" updated="2018-11-27 15:08:08.0" resolutiondate="2018-11-27 15:08:08.0" votes="0" watches="2" workflowId="43589"> <description><! CDATA  Assume N is a integer number. SignaturePolicy DSL string "OutOf(N, sig1, ...)" means that it is required for N signatures evaluate true. # Phenomenon On common/cauthdsl/policyparser.go, calling FromString() with SignaturePolicy DSL string:   "OutOf(0, 'A.member', 'B.member'") is no error (wrong) - case A   "OutOf(1, 'A.member', 'B.member'") is no error (correct)   "OutOf(2, 'A.member', 'B.member'") is no error (correct)   "OutOf(3, 'A.member', 'B.member'") is no error (wrong) - case B   "OutOf(4, 'A.member', 'B.member'") is error (correct). # Cause Parameter boundary check on secoundPass() is wrong. ## In case A: Does not check lower boundary. ## In case B: At firstPass(), "OutOf(" is transformed to "OutOf(ID,", so number of parameter increases by 1 on calling secondPass(). Boundary check on second pass does not consider it. # Fix ## To fix case A: Boundary check is not only for upper, but also for lower. Current: if t > n \{ return nil, ... } Fix: if t > n || t < 1 \{ return nil, ...} ## To fix case B: Fix num of parameter calculation considering "ID" Current: var n int = len(args) - 1 Fix: var n int = len(args) - 2  ></description> </Issue>
