<Issue id="12478" key="FAB-178" number="178" project="10002" reporter="christopherferris" assignee="christopherferris" creator="christopherferris" type="10004" summary="calls to StoreState, which returns error are ignoring error" priority="5" resolution="10000" status="6" created="2016-08-19 12:12:24.0" updated="2018-07-20 14:10:03.0" duedate="2016-08-19 00:00:00.0" resolutiondate="2016-08-23 14:15:24.0" votes="0" watches="1" timeoriginalestimate="3600" timeestimate="3600" workflowId="36091"> <description><! CDATA eg consensus/pbft/pbft-persist.go line 70  func (instance *pbftCore) persistRequestBatch(digest string) { 	reqBatch := instance.reqBatchStore digest  	reqBatchPacked, err := proto.Marshal(reqBatch) 	if err != nil { 		logger.Warningf("Replica %d could not persist request batch %s: %s", instance.id, digest, err) 		return 	} 	instance.consumer.StoreState("reqBatch."+digest, reqBatchPacked) }  should be:  func (instance *pbftCore) persistRequestBatch(digest string) { 	reqBatch := instance.reqBatchStore digest  	reqBatchPacked, err := proto.Marshal(reqBatch) 	if err != nil { 		logger.Warningf("Replica %d could not persist request batch %s: %s", instance.id, digest, err) 		return 	} 	err = instance.consumer.StoreState("reqBatch."+digest, reqBatchPacked) if err != nil { 		logger.Warningf("Replica %d could not persist request batch %s: %s", instance.id, digest, err) } }   ></description> </Issue>
