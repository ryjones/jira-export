<Issue id="34400" key="FAB-12287" number="12287" project="10002" reporter="sykesm" assignee="sykesm" creator="sykesm" type="10004" summary="Address issues with CDSPackage and SignedCDSPackage that prevent protobuf dep updates" priority="3" resolution="10000" status="6" created="2018-10-03 15:09:07.0" updated="2018-11-19 05:06:20.0" resolutiondate="2018-11-19 05:06:20.0" votes="0" watches="1" workflowId="45800"> <description><! CDATA {{proto.Unmarshal}} is not guaranteed to fail when it's given garbage data. It's quite possible for a byte stream to decode "correctly" and result in an object that is full of meaningless garbage.  (Ask me how I know.)  Turns out that we have a pattern where we attempt to decode data from lifecycle into a CDSPackage and, if it works, we assume the data was an encoded CDSPackage. If the decode fails, we assume we have a SignedCDSPackage. This assumption works most of the time but not always.  With the new protobuf implementation, some garbage byte strings successfully decode into the chaincode name and version fields of the CDSPackage making the ccprovider believe that it successfully decoded a CDSPackage even though the data was for a SignedCDSPackage. This breaks a bunch of things.  In order to work around this, additional post-decode validation is needed.  ></description> </Issue>
