<Action id="66045" issue="43533" author="caod" type="comment" created="2019-12-03 21:11:47.0" updateauthor="caod" updated="2019-12-03 21:31:19.0"> <body><! CDATA Regarding issue2, looks like it's still skipping: {noformat} 2019-12-03 14:01:34.061 EST  gossip.privdata  populateFromRemotePeers -> DEBU 060 Attempting to retrieve 1 private write sets from remote peers. channel=mychannel 2019-12-03 14:01:34.061 EST  gossip.privdata  populateFromRemotePeers -> DEBU 061 Skipping invalid key  \{697d5471b1ce014251967dd6818ffa151dd719bb97ee8a8a54527f4200f20013 0 marblesp _implicit_org_Org1MSP feea17dd8c6aa05fc7017040814624bc5c9ee311ece8cb7df8fb428f53e859b2}  because peer is configured to skip pulling rwsets of invalid transactions. channel=mychannel{noformat} The log lines can look confusing though in this example since the way the pvtdataprovider works is it enters a retry loop for fetching from remote peers, prior to actually fetching from a peer it checks if the tx is invalid and if so just skips that attempt for that write set, this doesn't actually exit the retry loop so it will try again and skip the pull repeatedly until the pull retry loop exits (in this case once the threshold is reached). This behavior is intended such that if there are multiple missing write sets that need to be fetched from a peer (one of them being invalid), it won't quit the retry loop just because one of them is invalid. One edge case improvement for this case could be we quit the retry loop if we're only fetching write sets for invalid transactions.  Â   Do you have the surrounding log lines for the dissemination/receipt of private data? It looks like two pvtdata write sets are being committed, the one added to transient store was the non implicit collection write set (that org 1 peer is able to receive). If you look at the pvtdata retrieval it attempts to first fetch 2 write sets from transient store and is successfully able to retrieve the one persisted during dissemination. The ineligible write set is the one we try to fetch from remote peer but gets skipped due to the skipPullingInvalidTx flag {noformat} 2019-12-03 14:01:34.060 EST  gossip.privdata  RetrievePvtdata -> DEBU 059 Fetching 2 collection private write sets from transient store channel=mychannel 2019-12-03 14:01:34.060 EST  gossip.privdata  populateFromTransientStore -> DEBU 05a Attempting to retrieve 2 private write sets from transient store. channel=mychannel 2019-12-03 14:01:34.060 EST  transientstore  GetTxPvtRWSetByTxid -> DEBU 05b Getting private data from transient store for transaction 697d5471b1ce014251967dd6818ffa151dd719bb97ee8a8a54527f4200f20013 2019-12-03 14:01:34.060 EST  gossip.privdata  populateFromTransientStore -> WARN 05c The PvtRwset of PvtSimulationResultsWithConfig for txID  697d5471b1ce014251967dd6818ffa151dd719bb97ee8a8a54527f4200f20013  is nil. Skipping. channel=mychannel 2019-12-03 14:01:34.060 EST  transientstore  GetTxPvtRWSetByTxid -> DEBU 05d Getting private data from transient store for transaction 697d5471b1ce014251967dd6818ffa151dd719bb97ee8a8a54527f4200f20013 2019-12-03 14:01:34.061 EST  gossip.privdata  RetrievePvtdata -> DEBU 05e Could not find all collection private write sets in local peer transient store for block  45  channel=mychannel 2019-12-03 14:01:34.061 EST  gossip.privdata  RetrievePvtdata -> DEBU 05f Fetching 1 collection private write sets from remote peers for a maximum duration of 10s channel=mychannel 2019-12-03 14:01:34.061 EST  gossip.privdata  populateFromRemotePeers -> DEBU 060 Attempting to retrieve 1 private write sets from remote peers. channel=mychannel{noformat}  ></body> </Action>
<Action id="66121" issue="43533" author="caod" type="comment" body=" https://github.com/hyperledger/fabric/pull/365 " created="2019-12-05 15:14:56.0" updateauthor="caod" updated="2019-12-05 15:14:56.0"/>
