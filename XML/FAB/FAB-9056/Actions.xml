<Action id="42943" issue="28771" author="denyeart" type="comment" created="2018-04-14 12:14:56.0" updateauthor="denyeart" updated="2018-04-14 12:14:56.0"> <body><! CDATA To test this, you need to have a CA sign a CRL (Certificate Revocation List) and then send a config update to the channel.   ~sykesm  ,  ~lhaskins  what's your view of how these cross-component functions should be tested?  I expect you would say something like:  1) We need a small number of functional e2e tests that can test peers, orderers, CAs all together with real CRLs.  Question: will we have any e2e test examples that include CA in the short term?  2) We need a larger number of functional integration tests that for example would test specific peer functions, with CRL faked out.  3) We need (close to) 100% coverage at the unit test level with CRL faked out.  And I expect each of these would be considered 'functional' tests and as such the responsibility of the delivery team.  Whereas system testers for example would test an e2e scenario with huge numbers of CRL entries.  Please confirm/correct per your view  ~sykesm .     ></body> </Action>
<Action id="42945" issue="28771" author="yacovm" type="comment" created="2018-04-14 12:41:15.0" updateauthor="yacovm" updated="2018-04-14 12:41:15.0"> <body><! CDATA {quote}1) We need a small number of functional e2e tests that can test peers, orderers, CAs all together with real CRLs.  Question: will we have any e2e test examples that include CA in the short term?{quote} We don't really need the CA, I think... we can just write a CLI utility that signs a CRL given an un-signed CRL and the CA's private key, no? This is x509 stuff so it doesn't change and doesn't need code maintenance.   {quote}We need a larger number of functional integration tests that for example would test specific peer functions, with CRL faked out.{quote} What does CRL faked out mean? If we have a real config block then we have a real CRL. If we have a fake CRL then it means we also have a fake MSP and gossip already tests all these revocation stuff in UTs.  I think doing (1) suffices since we have UTs that mock the MSP (or - at least what gossip needs from it).  ~C0rWin  wdyt?  {quote}3) We need (close to) 100% coverage at the unit test level with CRL faked out.{quote} Gossip has a  UT|https://github.com/hyperledger/fabric/blob/release-1.1/gossip/gossip/gossip_test.go#L1299-L1333  that tests both expiration of peer certificate, and also CRL update via invoking the  method|https://github.com/hyperledger/fabric/blob/13447bf5ead693f07285ce63a1903c5d0d25f096/gossip/gossip/gossip.go#L67  that the peer  should invoke|https://github.com/hyperledger/fabric/blob/13447bf5ead693f07285ce63a1903c5d0d25f096/core/peer/peer.go#L317  when a config block is received.  ></body> </Action>
<Action id="45585" issue="28771" author="gennadyl" type="comment" created="2018-06-06 13:42:02.0" updateauthor="gennadyl" updated="2018-06-06 13:42:16.0"> <body><! CDATA I am stuck in private data dissemination during integration test. It works perfectly manually, using first-network, but not automatically, using integration test framework.  WIP change set in gerrit: https://gerrit.hyperledger.org/r/22813    ></body> </Action>
<Action id="46042" issue="28771" author="c0rwin" type="comment" body="https://gerrit.hyperledger.org/r/#/c/22813/" created="2018-06-17 21:34:54.0" updateauthor="c0rwin" updated="2018-06-17 21:34:54.0"/>
