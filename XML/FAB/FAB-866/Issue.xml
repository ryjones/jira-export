<Issue id="13171" key="FAB-866" number="866" project="10002" reporter="latitiah" creator="latitiah" type="10004" summary="Consensus continues when failure expected with docker compose" priority="3" resolution="10000" status="6" created="2016-10-25 16:54:18.0" updated="2018-07-20 14:10:37.0" resolutiondate="2017-04-13 23:39:18.0" votes="0" watches="1" workflowId="36560"> <description><! CDATA Given the following behave Scenario: ``` Scenario: 10 peer network - basic consensus Given we compose "docker-compose-10-consensus.yml" And I register with CA supplying username "binhn" and secret "7avZQLwcUe9q" on peers: | vp0  | And I use the following credentials for querying peers: | peer  |   username   |    secret    | | vp0   |  test_user0  | MS9qrN8hFjlE | | vp1   |  test_user1  | jGlNl6ImkuDo | | vp2   |  test_user2  | zMflqOKezFiA | | vp3   |  test_user3  | vWdLCE00vJy0 | | vp4   |  test_user4  | 4nXSrfoYGFCP | | vp5   |  test_user5  | yg5DVhm0er1z | | vp6   |  test_user6  | b7pmSxzKNFiw | | vp7   |  test_user7  | YsWZD4qQmYxo | | vp8   |  test_user8  | W8G0usrU7jRk | | vp9   |  test_user9  | H80SiB5ODKKQ |  When requesting "/network/peers" from "vp0" Then I should get a JSON response with array "peers" contains "10" elements  # Deploy When I deploy chaincode "github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" with ctor "init" to "vp0" | arg1 |  arg2 | arg3 | arg4 | |  a   |  200  |  b   |  300 | Then I should have received a chaincode name Then I wait up to "480" seconds for transaction to be committed to peers: | vp1 | vp2 | vp3 | vp4 | vp5 | vp6 | vp7 | vp8 | vp9 |  When I invoke chaincode "example2" function name "invoke" on "vp0" "10" times |arg1|arg2|arg3| | b  | a  | 1  | Then I should have received a transactionID Then I wait up to "480" seconds for transaction to be committed to peers: | vp1 | vp2 | vp3 | vp4 | vp5 | vp6 | vp7 | vp8 | vp9 |  When I query chaincode "example2" function name "query" with value "a" on peers: | vp0  | vp1 | vp2 | vp3 | Then I should get a JSON response from peers with "result.message" = "210" | vp0  | vp1 | vp2 | vp3 | And I wait "60" seconds  When requesting "/chain" from "vp0" Then I should "store" the "height" from the JSON response Given I stop peers: | vp1 | vp2 | vp3 | vp4 | vp5 |  And I wait "30" seconds  When I invoke chaincode "example2" function name "invoke" on "vp0" "1" times |arg1|arg2|arg3| | a  | b  | 5 | And I wait "60" seconds  When requesting "/chain" from "vp0" Then I should get a JSON response with "height" = "previous"  When I query chaincode "example2" function name "query" with value "a" on peers: | vp0 | vp7 | vp8 | vp9 | Then I should get a JSON response from peers with "result.message" = "210" | vp0 | vp7 | vp8 | vp9 |  Given I start peers: | vp3 | And I wait "30" seconds  When I invoke chaincode "example2" function name "invoke" on "vp0" |arg1|arg2|arg3| | a  | b  | 10 | Then I should have received a transactionID Then I wait up to "480" seconds for transaction to be committed to peers: | vp3 | vp5 | vp6 | vp7 | vp8 | vp9 | When I query chaincode "example2" function name "query" with value "a" on peers: | vp0  | vp3 | vp8 | vp9 | Then I should get a JSON response from peers with "result.message" = "200" | vp0  | vp3 | vp8 | vp9 |  When requesting "/chain" from "vp0" Then I should get a JSON response with "height" > "previous"  ``` After stopping 4 peers, it was expected that consensus will fail F=(N-1)/3. Consensus continues. (N=10, F=3, K=2)  When N=16 and F=5 (K=2), consensus breaks as expected when 6 peers are stopped. When N=16, F=2 (K=2), consensus continues even after stopping 15 peers.  Accompanying docker files have been attached.    ></description> </Issue>
