<Action id="21297" issue="15154" author="kletkeman" type="comment" body="By the way, one simple fix would be to add the project paths under local-dev to /opt/gopath ... the reason being that anyone doing chaincode dev in their own project is already forced to hang that stuff under /local-dev using the ENV VAR" created="2017-03-03 17:39:43.0" updateauthor="kletkeman" updated="2017-03-03 17:39:43.0"/>
<Action id="21298" issue="15154" author="bmos299" type="comment" created="2017-03-03 18:03:17.0" updateauthor="bmos299" updated="2017-03-03 18:03:17.0"> <body><! CDATA Hi Kim, this is a great point, and as you point out, the loss of the REST in V1 leaves the CLI as the primary testing chaincode option.  Do you think this is a bug? The cli is working as designed.  Maybe we can talk with Binh and Murali and make this a high enhancement request.  What do you think? Thanks, Barry  ></body> </Action>
<Action id="21300" issue="15154" author="greg.haskins" type="comment" body="I personally would not recommend using the CLI from a docker container.  Run a native CLI for a more natural experience.  The doc should probably be changed." created="2017-03-03 18:08:46.0" updateauthor="greg.haskins" updated="2017-03-03 18:08:46.0"/>
<Action id="21301" issue="15154" author="greg.haskins" type="comment" body="I should add: &quot;make native&quot; or more precisely &quot;make peer&quot; will build a native peer binary, assuming you have all the prerequisites met of course.  If you run this from within vagrant devenv, you should.  If you run it elsewhere, you may have to set your system up properly first." created="2017-03-03 18:12:56.0" updateauthor="greg.haskins" updated="2017-03-03 18:12:56.0"/>
<Action id="21304" issue="15154" author="kletkeman" type="comment" created="2017-03-03 20:01:43.0" updateauthor="kletkeman" updated="2017-03-03 20:01:43.0"> <body><! CDATA  ~bmos299  Not a bug, as Greg mentions. But an omission in how the cli container has mapped folders. Vagrant maps /opt/gopath to the GOPATH content, but scrubs away everything except hyperledger project. It allows the LOCAL-DEV var to map another work area though, and that works ok. Still have to execute "export GOPATH=/opt/gopath:/local-dev" to actually be able to build your stuff, but that's a small price. If local-dev were passed along in the container mappings for cli, then the same fix would work.  However, ideally, we'd stop conflating /opt/gopath with hyperledger only and just map everything there that is already on the path.    ~greg.haskins  I was following the instructions verbatim as this is the only way to retain any sanity in the middle of a maelstrom :-) ... but I agree with you that doing it the old way (natively at the vagrant ssh prompt) would be ideal. Do you know any reason why we are being told to do this from inside the cli container? And would I have to do something for a native cli to be able to execute using that container? Thx.  ></body> </Action>
<Action id="21642" issue="15154" author="kletkeman" type="comment" body="By the way, I was never able to get the cli built and running properly on the native Mac. Hopefully, that option will be made viable as a build option in the future ... or the container version will be fixed to have purview over the entire GOPATH and not just the Hyperledger subset." created="2017-03-25 14:27:24.0" updateauthor="kletkeman" updated="2017-03-25 14:27:24.0"/>
<Action id="22171" issue="15154" author="denyeart" type="comment" created="2017-04-12 02:18:58.0" updateauthor="denyeart" updated="2017-04-12 02:19:44.0"> <body><! CDATA  ~bmos299   ~ghaskins  To help get closure on this one, could you summarize in your opinion what enhancement(s) / decision(s) are needed for this one? And who would be a logical person to work on it? And is it needed for v1.0.0?  ></body> </Action>
<Action id="23775" issue="15154" author="christopherferris" type="comment" body=" ~bmos299  I&apos;m going to say that this isn&apos;t a bug as much as it is possible need of a new feature. The UX sucks, but that&apos;s not a bug. Can we reclassify this?" created="2017-05-11 22:42:21.0" updateauthor="christopherferris" updated="2017-05-11 22:42:21.0"/>
<Action id="24351" issue="15154" author="christopherferris" type="comment" body=" ~kletkeman  there&apos;s been no follow-up. The UX needs to be improved no doubt, but this is possible and working as of alpha2. Reclassifying as improvement and deferring for Future release." created="2017-05-25 16:46:52.0" updateauthor="christopherferris" updated="2017-05-25 16:46:52.0"/>
<Action id="24360" issue="15154" author="kletkeman" type="comment" created="2017-05-25 17:53:46.0" updateauthor="kletkeman" updated="2017-06-12 16:20:59.0"> <body><! CDATA  ~ChristopherFerris   ~bmos299   ~greg.haskins   ~denyeart  My apologies for being late to my own party here. I'm swamped, as are all of you.  EDIT: I just realized that you wrote that it **is** possible. I must have skimmed your reply the first time. Anyway, thanks.  ORIGINAL RESPONSE: V0.6 was difficult to learn, but once you learned it, it was easy to test. I used POSTMAN and our Monitoring UI regularly. I never used the CLI once I found POSTMAN. By contrast, v1 is considerably more difficult for developers, and I need only point to Greg's own alpha2 thread written as a true expert on v1 with respect to the difficulties he regularly experiences when writing and debugging real applications on v1.   V1 has no general REST interface (not counting Composer here). The CLI container does not map onto chaincode outside of the fabric's own project space. So there is no simple technology just to get going with your own chaincode unless you hack it into the fabric's space (and only rank beginners are willing to do that).  However, since the CLI can be used to create channels, and since Composer can be used for everything else (with limitations that are slowly disappearing), one supposes that we can consider the CLI issue with Go chaincode to be non-critical. I remain uncomfortable with such an obvious pain point for early users.      ></body> </Action>
<Action id="39655" issue="15154" author="mastersingh24" type="comment" body="There does not seem to be an action to take here.  Cleaning up of the CLI and our tools is something we need to do, but I believe this particular situation has been handled" created="2018-02-05 10:39:52.0" updateauthor="mastersingh24" updated="2018-02-05 10:39:52.0"/>
