<Action id="52620" issue="32328" author="elli-androulaki" type="comment" created="2018-10-25 09:01:31.0" updateauthor="elli-androulaki" updated="2018-10-25 09:02:14.0"> <body><! CDATA I am not sure that for token related requests to prover peer, the *client* side authentication is needed. Prover peer side TLS  connection should suffice...   ~angelo.decaro ,  ~KaoutarEL ,  ~wenjian ,  ~mathiasb303  what do you guys think?  Another question we should ask, is "do we care that the prover peer request (SignedCommand) is transferrable, i.e., can be relayed by a malicious /compromised prover peer to another peer who is not compromised"? The honest peer in this case would take for granted that the sender of the request is the actual client since the only way to authenticate the request would be the signature in the relayed signedCommand. Therefore the honest peer would respond (with a TokenTransaction in the case of issue/transfer/redeem or a list of client tokens in the case of list tokens).   That said, one of the core assumptions in the system is that the client *trusts* the prover peer. Therefore, protecting against such attack (assuming the client may accidentally connect to the wrong peer) could be less of a priority.   If we decide this is not needed, we should close this Jira or move it to another epic, related to future work on tokens.  ></body> </Action>
<Action id="52621" issue="32328" author="angelo.decaro" type="comment" body="There exists already code in Fabric that binds the request to the TLS Unique field. Look at what happens for the Events. We can just simply reuse that code. My suggestion, would be to give this less priority but to have it in at some point anyway." created="2018-10-25 09:10:42.0" updateauthor="angelo.decaro" updated="2018-10-25 09:10:42.0"/>
