<Action id="48945" issue="32860" author="mariwade" type="comment" created="2018-08-16 16:12:20.0" updateauthor="mariwade" updated="2018-08-16 16:14:15.0"> <body><! CDATA I was able to replicate the problem locally.  Note:  In our solutions, the chaincode is deployed  in an automated way.  The mismatch is the same error due to the chaincode source not being exactly the same.     Have a fabric org with 4 peers on 'mychannel'  Installed/upgraded the chaincode on 2 peers.  Invoked fine  Installed the chaincode on the other 2 peers  Invoked on any peer fine.     Failure test:  Installed/upgraded the chaincode on 2 peers.  Invoked fine  Updated the chaincode with a space or a byte difference.  Installed the chaincode on the other 2 peers  Invoke gave an error "error": "targetPeer: peer2.org1.example.com error message: 2 UNKNOWN: Error executing chaincode: Could not get deployment transaction from LSCC for document_manager_vTest:v3 - Get ChaincodeDeploymentSpec for document_manager_vTest/mychannel from LSCC error: chaincode fingerprint mismatch data mismatch; targetPeer: peer3.org1.example.com error message: 2 UNKNOWN: Error executing chaincode: Could not get deployment transaction from LSCC for document_manager_vTest:v3 - Get ChaincodeDeploymentSpec for document_manager_vTest/mychannel from LSCC error: chaincode fingerprint mismatch data mismatch", "type": "Error"       ></body> </Action>
<Action id="49083" issue="32860" author="mastersingh24" type="comment" created="2018-08-20 09:58:55.0" updateauthor="mastersingh24" updated="2018-09-02 14:33:32.0"> <body><! CDATA I commented on https://jira.hyperledger.org/browse/FABN-855 as it is definitely related to the solution. Unfortunately, there are a variety of things which can result in non-deterministic builds of the chaincode package on different machines even when using identical source. This is especially true (unfortunately) when using different SDKs. The best thing to so is to actually use the same package (built via *peer chaincode package ...*).  My comment on the related JIRA was around how to actually install packages using the Node SDK  ></body> </Action>
<Action id="50122" issue="32860" author="mastersingh24" type="comment" body="Setting this to medium given FABN-855 will allow the use of packages." created="2018-09-08 10:22:21.0" updateauthor="mastersingh24" updated="2018-09-08 10:22:21.0"/>
<Action id="50661" issue="32860" author="denyeart" type="comment" body=" ~mastersingh24  What&apos;s your opinion of what should be done in v1.3 versus future for this one?" created="2018-09-19 13:21:40.0" updateauthor="denyeart" updated="2018-09-19 13:21:40.0"/>
<Action id="51122" issue="32860" author="denyeart" type="comment" body="Changed from Node.js SDK to Fabric issue, as the problem may happen on differnt SDKs, or when using differnt SDKs." created="2018-09-24 20:04:07.0" updateauthor="denyeart" updated="2018-09-24 20:04:07.0"/>
<Action id="54164" issue="32860" author="mastersingh24" type="comment" body="The current resolution for this is to pass around the same package rather than everyone building the package themselves.   I don&apos;t think this is worth taking on at this point ... we&apos;ll be eliminating this issue in the future.  If anything, we could document the share package versus src flow, but other than that I&apos;d mark as won&apos;t fix" created="2018-12-02 14:46:51.0" updateauthor="mastersingh24" updated="2019-03-30 17:12:43.0"/>
<Action id="54174" issue="32860" author="denyeart" type="comment" body="Ok, let&apos;s use this Jira to document that distributing package is preferred." created="2018-12-03 05:57:59.0" updateauthor="denyeart" updated="2018-12-03 05:57:59.0"/>
<Action id="58761" issue="32860" author="mastersingh24" type="comment" body="This does not happen when using the new lifecycle." created="2019-03-30 17:13:14.0" updateauthor="mastersingh24" updated="2019-03-30 17:13:14.0"/>
<Action id="58762" issue="32860" author="mastersingh24" type="comment" created="2019-03-30 17:14:38.0" updateauthor="mastersingh24" updated="2019-03-30 17:14:38.0"> <body><! CDATA As mentioned in the other comments, you need to produce and share a single package ... everyone should not be producing their own packages with the current lifecycle design. Fir the new lifecycle in 2.0 this is no longer an issue  ></body> </Action>
