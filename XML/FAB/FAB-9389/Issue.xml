<Issue id="29208" key="FAB-9389" number="9389" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="peer deliver client crashes when it is started and stopped immediately after" priority="3" resolution="10000" status="6" created="2018-04-06 11:08:59.0" updated="2018-07-20 14:16:15.0" resolutiondate="2018-04-07 09:09:00.0" votes="0" watches="1" workflowId="41776"> <description><! CDATA A user posted on rocket chat the following stack trace:  {code} 2018-04-06 09:45:37.662 UTC  deliveryClient  StopDeliverForChannel -> DEBU 1ea19 This peer will stop pass blocks from orderer service to other peers panic: runtime error: invalid memory address or nil pointer dereference  signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0xaeb2db   `goroutine 121267  running : github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).StartDeliverForChannel.func1(0xc4357724e0, 0xc4256a4ba0, 0x8, 0xc42434a3a0) /opt/gopath/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:162 +0x5b created by github.com/hyperledger/fabric/core/deliverservice.(*deliverServiceImpl).StartDeliverForChannel /opt/gopath/src/github.com/hyperledger/fabric/core/deliverservice/deliveryclient.go:161 +0x672`  {code}   From looking at the code, this could happen if the deliver client is started and immediately afterwards - stopped. The goroutine not only doesn't lock, but also may hit a nil pointer.   ></description> </Issue>
