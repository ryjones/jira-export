<Action id="24776" issue="16535" author="wlahti" type="comment" created="2017-05-31 14:53:49.0" updateauthor="wlahti" updated="2017-05-31 14:53:49.0"> <body><! CDATA  ~bhaskerchatterjee  I just pulled the latest code from master and attempted to reproduce this issue following your steps.     I hit a different issue related to the MSP but I think it's a configuration problem and not a code problem:  {code:java} Error: Error endorsing chaincode: rpc error: code = 2 desc = Failed to deserialize creator identity, err MSP DEFAULT is unknown{code}    Can you pull the latest and see if you're still hitting the "handler not found" error?  ></body> </Action>
<Action id="25032" issue="16535" author="muralisr" type="comment" body=" ~bhaskerchatterjee  with  --peer-chaincodedev=true you have to do an additional step of starting the chaincode yourself. This is described in docs/source/peer-chaincode-devmode.rst." created="2017-06-01 22:41:01.0" updateauthor="muralisr" updated="2017-06-01 22:41:01.0"/>
<Action id="25263" issue="16535" author="scottz" type="comment" body="Bapi, can you retry with alpha2 or later? Please provide exact steps you followed when producing an error." created="2017-06-04 15:43:15.0" updateauthor="scottz" updated="2017-06-04 15:43:15.0"/>
<Action id="25265" issue="16535" author="muralisr" type="comment" created="2017-06-04 16:03:38.0" updateauthor="muralisr" updated="2017-06-04 16:04:12.0"> <body><! CDATA  ~bhaskerchatterjee  you'll also need to change the fabric/sampleconfig/orderer.yaml to change the GenesisProfile parameter to  {code:java} GenesisProfile: SampleSingleMSPSolo {code}  There are two doc issues with docs/source/peer-chaincode-devmode.rst. * change GenesisProfile in sampleconfig/orderer.yaml to GenesisProfile: SampleSingleMSPSolo * configtxgen -channelID ch1 -outputCreateChannelTx ch1.tx -profile SampleSingleMSPChannel configtxgen -channelID ch2 -outputCreateChannelTx ch2.tx -profile SampleSingleMSPChannel  ** should be two lines   ~Ratnakar  sounds like similar to what you ran into ?   ></body> </Action>
<Action id="25279" issue="16535" author="ratnakar" type="comment" created="2017-06-04 19:30:50.0" updateauthor="ratnakar" updated="2017-06-04 19:30:50.0"> <body><! CDATA  ~bhaskerchatterjee   Discussed with  ~muralisr  . following steps are working for me. Please try these steps and let us know.  Tested in Vagrant env  *Terminal-1* {code:java} ORDERER_GENERAL_GENESISPROFILE=SampleSingleMSPSolo orderer{code} *Terminal-2* {code:java} peer node start -o 127.0.0.1:7050 --peer-chaincodedev=true{code} *Terminal-3:* {code:java} cd $GOPATH/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 go build CORE_CHAINCODE_LOGLEVEL=debug CORE_PEER_ADDRESS=127.0.0.1:7051 CORE_CHAINCODE_ID_NAME=mycc:0  ./chaincode_example02 {code}  *Terminal-4*  create channel configuration transaction with default settings and the profile *SampleSingleMSPChannel*    {code:java} configtxgen -channelID myc -outputCreateChannelTx myc.tx -profile SampleSingleMSPChannel peer channel create -o 127.0.0.1:7050 -c myc -f myc.tx peer channel join -b myc.block {code}    +_Install and instantiate chaincode example02_+    {code:java} peer chaincode install -n mycc -v 0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 peer chaincode instantiate -n mycc -v 0 -c '{"Args": "init","a","100","b","200" }' -o 127.0.0.1:7050 -C myc {code} _+send a transactoin and verify the result with a query+_    {code:java} peer chaincode invoke -n mycc -c '{"Args": "invoke","a","b","10" }' -o 127.0.0.1:7050 -C myc peer chaincode query -n mycc -c '{"Args": "query","a" }' -o 127.0.0.1:7050 -C myc {code}    ></body> </Action>
<Action id="25281" issue="16535" author="ratnakar" type="comment" created="2017-06-04 19:50:49.0" updateauthor="ratnakar" updated="2017-06-04 19:50:49.0"> <body><! CDATA  ~nickgaski  Could you please help to update the document  http://hyperledger-fabric.readthedocs.io/en/latest/peer-chaincode-devmode.html   Below two points needs to be take care.   1) when default settings are used orderer uses *SampleInsecureSolo* as the GenesisProfile instead override the same with *SampleSingleMSPSolo*. Start the orderer with GenesisProfile as follows {code:java} ORDERER_GENERAL_GENESISPROFILE=SampleSingleMSPSolo orderer{code}  2) Split the lines from the section *Create channels ch1 and ch2 ,* http://hyperledger-fabric.latest.readthedocs/io/en/peer-chaincode-devmode.html#create-channels-ch1-and-ch2    {code:java} configtxgen -channelID ch1 -outputCreateChannelTx ch1.tx -profile SampleSingleMSPChannel  configtxgen -channelID ch2 -outputCreateChannelTx ch2.tx -profile SampleSingleMSPChannel  {code}    ></body> </Action>
<Action id="25358" issue="16535" author="ratnakar" type="comment" body=" ~bhaskerchatterjee  Can you re verify on fabric latest code using the instructions updated above." created="2017-06-05 15:03:58.0" updateauthor="ratnakar" updated="2017-06-05 15:03:58.0"/>
<Action id="25607" issue="16535" author="bhaskerchatterjee" type="comment" created="2017-06-07 06:42:27.0" updateauthor="bhaskerchatterjee" updated="2017-06-07 06:42:27.0"> <body><! CDATA Ratnakar Asara,     Yes, it is working fine now. Thanks. However, there is an issue that I need to resolve while following these step: this does not create an active container (checking by docker ps), which I can see the logs of. I guess I am missing something to modify in the yaml files in sampleconfig folder, however, am not able to figure that out. I would really appreciate any clue on the same. Thanks.     ></body> </Action>
<Action id="25636" issue="16535" author="muralisr" type="comment" created="2017-06-07 12:29:12.0" updateauthor="muralisr" updated="2017-06-07 12:29:12.0"> <body><! CDATA  ~bhaskerchatterjee   Containers are created by the peer to start the chaincode when NOT running in --peer-chaincodedev mode. The whole point of --peer-chaincodedev=true is that the developer starts the chaincode and attaches to the peer (the "Terminal-3" steps in the comment). basically, chaincode  containers won't be created in --peer-chaincodedev mode.   ></body> </Action>
<Action id="25638" issue="16535" author="bhaskerchatterjee" type="comment" body="Hi  ~muralisr  , yes I realized that - as mentioned here  http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup.html?highlight=container%20chaincodedev|http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup.html?highlight=container%20chaincodedev.  . Actually, my purpose is to look for the contents in the statedb/historydb . I could use docker logs to read the logs in the containers to view that simply, thought to do the same in devmode as well; my mistake. I can see .ldb files in the folders /var/hyperledger/production/ledgersData/stateLeveldb/ /var/hyperledger/production/ledgersData/historyLeveldb/ . Could you suggest some way out to browse these dbs? " created="2017-06-07 12:40:54.0" updateauthor="bhaskerchatterjee" updated="2017-06-07 12:40:54.0"/>
<Action id="25639" issue="16535" author="muralisr" type="comment" created="2017-06-07 12:53:19.0" updateauthor="muralisr" updated="2017-06-07 12:53:19.0"> <body><! CDATA  ~bhaskerchatterjee  Perhaps you could use the GetHistoryForKey chaincode api  ?  {code:java} // GetHistoryForKey function can be invoked by a chaincode to return a history of // key values across time. GetHistoryForKey is intended to be used for read-only queries. GetHistoryForKey(key string) (HistoryQueryIteratorInterface, error) {code}  There may be other ways to access the historydb. Best to use the fabric-ledger Rocket Chat for that.   Can you close this JIRA if your original issues are resolved please ?  ></body> </Action>
<Action id="25641" issue="16535" author="bhaskerchatterjee" type="comment" body="Thanks  ~muralisr  !" created="2017-06-07 13:13:27.0" updateauthor="bhaskerchatterjee" updated="2017-06-07 13:13:27.0"/>
