<Issue id="26152" key="FAB-7505" number="7505" project="10002" reporter="nasht00" creator="nasht00" type="10002" summary="Documentation: multiple chaincode" priority="3" resolution="10001" status="6" created="2017-12-19 12:33:14.0" updated="2020-01-22 22:21:41.0" resolutiondate="2020-01-22 22:21:41.0" votes="1" watches="2" workflowId="35472"> <description><! CDATA The documentation surrounding multiple chaincode scenarios is non-existent.  I will first cite several quotes from the existing documentation: {quote} Ledger state created by a chaincode is scoped exclusively to that chaincode and can’t be accessed directly by another chaincode. (https://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/chaincode4ade.html) {quote} Can someone clarify what that means? If my network deals with various types of assets, connected to each other through transactions, then ALL of the logic needs to be in a single chaincode? Other chaincodes on the same channel don't share the world state? I can't have a chaincode to manage Widgets lifecycle, and another to manage Gagdets lifecycle?  I'm asking both technically, and best practice. {quote}Given the appropriate permission, a chaincode may invoke another chaincode to access its state within the same network. (https://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/chaincode4ade.html) {quote} What appropriate permission? How? {quote}*State partitioning.* Keys in the KVS can be recognized from their name to belong to a particular chaincode, in the sense that only transaction of a certain chaincode may modify the keys belonging to this chaincode. In principle, any chaincode can read the keys belonging to other chaincodes.   https://hyperledger-fabric.readthedocs.io/en/v1.1.0-preview/arch-deep-dive.html#state  {quote} So when I call PutState/GetState, the key I pass is already appended with the current chaincode name? Or not?  How can I read keys belonging to other chaincodes?  What about across channels? I see some examples of this in the source code ( https://github.com/hyperledger/fabric/blob/master/examples/chaincode/go/chaincode_example05/chaincode_example05.go),  but no mentioning anywhere in the docs.     To sum up, I think an "Advanced Chaincode" tutorial is needed here to cover all those things. Or at the very least clarify what is supported and what is not.  ></description> </Issue>
