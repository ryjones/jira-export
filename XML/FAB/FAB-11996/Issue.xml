<Issue id="33738" key="FAB-11996" number="11996" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10003" summary="Enable Raft based (non-system) channel creation" priority="3" resolution="10000" status="6" created="2018-09-13 15:30:39.0" updated="2019-03-01 13:35:49.0" resolutiondate="2018-10-14 16:25:53.0" votes="0" watches="2" workflowId="45041"> <description><! CDATA Currently there is a limitation in the raft Chain code, which prevent user from creating a Raft based channel, i.e.:  {code} 	switch chdr.Type { 	case int32(common.HeaderType_ORDERER_TRANSACTION): 		return errors.Errorf("channel creation requests not supported yet") 	case int32(common.HeaderType_CONFIG): 		configEnv, err := configtx.UnmarshalConfigEnvelope(payload.Data) 		if err != nil { 			return err 		} 		configUpdateEnv, err := utils.EnvelopeToConfigUpdate(configEnv.LastUpdate) 		if err != nil { 			return err 		} 		configUpdate, err := configtx.UnmarshalConfigUpdate(configUpdateEnv.ConfigUpdate) 		if err != nil { 			return err 		}  		// ignoring the read set for now 		// check only if the ConsensusType is updated in the write set 		if ordererConfigGroup, ok := configUpdate.WriteSet.Groups "Orderer" ; ok { 			if _, ok := ordererConfigGroup.Values "ConsensusType" ; ok { 				return errors.Errorf("updates to ConsensusType not supported currently") 			} 		} 		return nil  	default: 		return errors.Errorf("config transaction has unknown header type") 	} {code}  in order to enable channel creation need to get rid of   {code} 	case int32(common.HeaderType_ORDERER_TRANSACTION): 		return errors.Errorf("channel creation requests not supported yet") {code}  and   {code} 	case int32(common.HeaderType_ORDERER_TRANSACTION): 		return nil {code}  ></description> </Issue>
