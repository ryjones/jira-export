<Action id="23313" issue="16153" author="denyeart" type="comment" created="2017-05-03 03:03:42.0" updateauthor="denyeart" updated="2017-05-03 03:03:42.0"> <body><! CDATA  ~mffrench  Please provide reproduction steps.  What is the key you are attempting?  When you say "logging a warning in the case we encounter non UTF8 key on the API implementations side" do you mean in the chaincode API return an error, so that we'll never get a transaction (and subsequent commit) with invalid key?  That seems like the most reasonable approach to me, but wanted to double check your intent.  ></body> </Action>
<Action id="23335" issue="16153" author="mffrench" type="comment" created="2017-05-03 14:36:13.0" updateauthor="mffrench" updated="2017-05-03 14:36:13.0"> <body><! CDATA Hi David,  the application which raised this error was initially sending this kind of data :  proCodeAsBytes, err := stub.GetCreator() proCode := string(proCodeAsBytes) // => non UTF8 string stub.PutState(proCode, "some data");  About the warning log : this was a proposal to keep goleveldb as it is today (and so being able to store non utf8 key into goleveldb storage) but raising a warning in the log can inform developers that this key insertion will not work with couchdb storage.  But I personnally think Fabric can align is key policy to the couchdb one and so raise the error from the chaincode API avoiding panic in the peer (my second proposal - and my favorite).  Finally, I let you the final choice as I don't have a clear view of all fabric use cases ;)  Kind regards,   ></body> </Action>
<Action id="25698" issue="16153" author="denyeart" type="comment" body="We are thinking that chaincode shim should require keys be UTF8, and return an endorsement error if not. Manish will do some trials before finalizing the approach." created="2017-06-07 20:38:33.0" updateauthor="denyeart" updated="2017-06-07 20:38:33.0"/>
<Action id="25791" issue="16153" author="manish-sethi" type="comment" created="2017-06-08 20:43:26.0" updateauthor="manish-sethi" updated="2017-06-08 20:43:26.0"> <body><! CDATA I have submitted a CR for this issue -  https://gerrit.hyperledger.org/r/#/c/10363   In this CR, I raise an error during simulation if a non utf-8 key is supplied and the configured db happens to be the couchdb.  In my opinion, I would be good to not limit the capability of leveldb. At times, folks may want to store binary contents as key (such as hash of some content). Also, it incurs a performance overhead of checking whether a key is a valid utf-8.  ></body> </Action>
