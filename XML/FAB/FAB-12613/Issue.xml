<Issue id="34895" key="FAB-12613" number="12613" project="10002" reporter="sykesm" creator="sykesm" type="10004" summary="Data race in tx simulator checks for &quot;done&quot;" priority="3" resolution="10001" status="6" created="2018-10-25 21:00:48.0" updated="2019-01-16 15:25:27.0" resolutiondate="2019-01-16 15:25:27.0" votes="0" watches="2" workflowId="46315"> <description><! CDATA If I disable the debug level logging in the chaincode package, {{TestQueries}} fails with races ^1. {code:java} ================== WARNING: DATA RACE Write at 0x00c0032338f0 by goroutine 16: github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).done.func1() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:289 +0x67 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).done() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:294 +0x78 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*lockBasedQueryExecutor).Done() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_query_executer.go:101 +0xda github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*lockBasedTxSimulator).Done() <autogenerated>:1 +0x43 github.com/hyperledger/fabric/core/chaincode.endTxSimulation() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:272 +0x67 github.com/hyperledger/fabric/core/chaincode.endTxSimulationCIS() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:258 +0x266 github.com/hyperledger/fabric/core/chaincode.invokeWithVersion.func1() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:500 +0x18f github.com/hyperledger/fabric/core/chaincode.invokeWithVersion() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:524 +0x788 github.com/hyperledger/fabric/core/chaincode.invoke() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:478 +0xef github.com/hyperledger/fabric/core/chaincode.TestQueries() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:1075 +0x167d github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.openDB() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db.go:130 +0xa00 github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/storage.(*fileStorage).List() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/storage/file_storage.go:458 +0x279 ... github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.OpenFile() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db.go:219 +0xa5 github.com/hyperledger/fabric/common/ledger/util/leveldbhelper.(*DB).Open() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/common/ledger/util/leveldbhelper/leveldb_helper.go:78 +0x1bb github.com/hyperledger/fabric/core/ledger/kvledger.openIDStore() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:263 +0x24e  Previous read at 0x00c0032338f0 by goroutine 108: github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).checkDone() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:316 +0x47 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).getStateRangeScanIterator() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:76 +0x50 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*lockBasedQueryExecutor).GetStateRangeScanIterator() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_query_executer.go:46 +0xa9 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*lockBasedTxSimulator).GetStateRangeScanIterator() <autogenerated>:1 +0xa2 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetStateByRange() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/handler.go:672 +0xc3b github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetStateByRange-fm() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/handler.go:210 +0x59 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/handler.go:257 +0xabb  Goroutine 16 (running) created at: testing.(*T).Run() /usr/local/Cellar/go/1.11.1/libexec/src/testing/testing.go:878 +0x650 testing.runTests.func1() /usr/local/Cellar/go/1.11.1/libexec/src/testing/testing.go:1119 +0xa8 testing.tRunner() /usr/local/Cellar/go/1.11.1/libexec/src/testing/testing.go:827 +0x162 testing.runTests() /usr/local/Cellar/go/1.11.1/libexec/src/testing/testing.go:1117 +0x4ee testing.(*M).Run() /usr/local/Cellar/go/1.11.1/libexec/src/testing/testing.go:1034 +0x2ee github.com/hyperledger/fabric/core/chaincode.TestMain() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/exectransaction_test.go:1402 +0x11c main.main() _testmain.go:82 +0x221  Goroutine 108 (finished) created at: github.com/hyperledger/fabric/core/chaincode.(*Handler).handleMessageReadyState() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/handler.go:210 +0x403 github.com/hyperledger/fabric/core/chaincode.(*Handler).handleMessage() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/handler.go:179 +0x22c github.com/hyperledger/fabric/core/chaincode.(*Handler).ProcessStream() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/handler.go:416 +0x655 github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).HandleChaincodeStream() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:182 +0x6d5 github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Register() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:187 +0x74 github.com/hyperledger/fabric/protos/peer._ChaincodeSupport_Register_Handler() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/peer/chaincode_shim.pb.go:1066 +0xcd github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processStreamingRPC() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1124 +0x11e0 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1212 +0x1318 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1() /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:686 +0xac ================== {code} In this test, grpc server is started to host the ChaincodeSupport server. A GetStateByRange query is executed that holds an iterator open. The chaincode then sleeps and the execute timeout occurs on the peer side and the caller invoking the chaincode gets control (with an async error) while the query continues to execute. Later, the chaincode wakes up and calls Next on the iterator.  Between the two, the simulator is checked for "done" during GetStateByRange on one go routine and it's closed on the invoker side in a separate go routine. There is no serialization on the simulator.  1: the extra logging seems to force some write barrier that's preventing the race from getting flagged.  ></description> </Issue>
