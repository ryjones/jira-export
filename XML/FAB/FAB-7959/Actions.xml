<Action id="43877" issue="27218" author="jyellick" type="comment" body="Since the FSM was removed, presumably this is done? If so, could you please mark it as such  ~muralisr " created="2018-05-04 17:52:08.0" updateauthor="jyellick" updated="2018-05-04 17:52:08.0"/>
<Action id="44771" issue="27218" author="kchristidis" type="comment" body=" ~muralisr : Can you take a moment to update this? See Jason&apos;s question above." created="2018-05-21 18:32:00.0" updateauthor="kchristidis" updated="2018-05-21 18:32:00.0"/>
<Action id="45807" issue="27218" author="christopherferris" type="comment" body="marking as Done per  ~muralisr " created="2018-06-11 20:44:36.0" updateauthor="christopherferris" updated="2018-06-11 20:44:36.0"/>
<Action id="45808" issue="27218" author="muralisr" type="comment" body=" ~ChristopherFerris  let me confirm on recent it (just to be sure as it&apos;s been a while)." created="2018-06-11 20:45:45.0" updateauthor="muralisr" updated="2018-06-11 20:45:45.0"/>
<Action id="45815" issue="27218" author="muralisr" type="comment" created="2018-06-11 23:03:25.0" updateauthor="muralisr" updated="2018-06-11 23:03:25.0"> <body><! CDATA  ~ChristopherFerris  Confirmed that error on invoke chaincode (in this case due to passing "NONEXISTENTCHANNEL") reaches the calling chaincode and the final error comes from the calling chaincode and not the fabric. {code:java} peer chaincode install -p github.com/hyperledger/fabric/examples/chaincode/go/example04/cmd -n mycc -v 0 peer chaincode instantiate -n mycc -v 0 -c '{"Args": "init", "e", "1" }' -C myc peer chaincode invoke -n mycc -c '{"Args": "invoke","myx","e","1","NONEXISTCHANNEL" }' -C myc {code} The invoke receives an error {code:java} chaincode result: status:500 message:"Failed to invoke chaincode. Got error: INVOKE_CHAINCODE failed: transaction ID: d786edc9dfeb55b8276e92fc47b8037471ca95f2f2794a83b7cd80c9d019d4ba: Failed to get policy manager for channel  NOCHAN  {code} This comes from this piece of code in example04 chaincode {code:java} invokeArgs := toChaincodeArgs(f, "a", "b", "10") response := stub.InvokeChaincode(chainCodeToCall, invokeArgs, channelID) if response.Status != shim.OK { errStr := fmt.Sprintf("Failed to invoke chaincode. Got error: %s", string(response.Payload)) fmt.Printf(errStr) return shim.Error(errStr) } {code}  ></body> </Action>
