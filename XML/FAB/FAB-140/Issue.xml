<Issue id="12439" key="FAB-140" number="140" project="10002" reporter="jonathanlevi" creator="jonathanlevi" type="10001" summary="Remove/parameterize the hard-coded file(names, prefixes, suffixes)" priority="5" resolution="10000" status="6" created="2016-08-17 05:07:38.0" updated="2018-07-20 18:56:04.0" resolutiondate="2017-06-03 10:11:27.0" votes="0" watches="2" workflowId="36075"> <description><! CDATA Original issue was  2110|https://github.com/hyperledger/fabric/issues/2110   Various services in Membership Services have the public *NewXXXX( name string )* or the private *createYYYY ( name string )* method expecting the string parameter `name`, which is later on being used for creating/writing and reading various (temporary?) files.  However, diving into the implementation(s), some of these has code which relies on some "secret magic" both underneath the services and their tests, e.g.,   {quote}err = ioutil.WriteFile(ca.path+"/" + *name* + *".priv"*, cooked, 0644) err = ioutil.WriteFile(ca.path+"/" + *name* + *".pub"*, cooked, 0644){quote}  Or when creating the ("server") objects/entities, for example: {quote} eca := &ECA{CA:NewCA( "*eca*" , initializeECATables) {quote}   h3. Proposed Solution  # Define these at the very least as constants/parameters (if not have them completely configurable, at this point - sill much better than hard-coding, inline). Plus, while we are at it (and I will mention that I'm not a fan of storing private keys in plaintext/files), we should use standard extensions: # We should probably use the more industry-standard file extensions (for `PEM, DER, CRT, CER, KEY, ...`)  ></description> </Issue>
