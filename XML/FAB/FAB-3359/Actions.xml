<Action id="22916" issue="15952" author="yacovm" type="comment" body=" ~C0rWin   ~mastersingh24   ~binhn  and also  ~ellaki  and  ~adc  and  ~ales  Please weigh in" created="2017-04-23 18:51:24.0" updateauthor="yacovm" updated="2017-04-24 09:31:51.0"/>
<Action id="22928" issue="15952" author="mastersingh24" type="comment" created="2017-04-24 09:29:44.0" updateauthor="mastersingh24" updated="2017-04-24 09:29:44.0"> <body><! CDATA this makes sense - I was also thinking that we might possible be able to try out using mutual TLS by making in optional but having the peer(s) use their MSP signing cert as their client certificate.  But I think that looking to add the TLS-Unique back might make sense.  Let's get through merging any new features and suggest we schedule a review of critical issues later in the week  ></body> </Action>
<Action id="22929" issue="15952" author="elli-androulaki" type="comment" body="Makes sense to me too. New version of TLS is to fix the issue with TLS-Unique (essentially being so short), so ideally we would finally move entirely to the TLS-Unique binding :)" created="2017-04-24 10:01:50.0" updateauthor="elli-androulaki" updated="2017-04-24 10:02:23.0"/>
<Action id="22930" issue="15952" author="yacovm" type="comment" body="I&apos;d say that ideally we use both since this only happens once per connection attempt so there is no waste of resources if we sign 2 challenges instead of 1" created="2017-04-24 11:11:39.0" updateauthor="yacovm" updated="2017-04-24 11:11:39.0"/>
<Action id="23530" issue="15952" author="binhn" type="comment" body="If we use TLS binding, would it work with TLS-terminating proxy (fronting peers)?" created="2017-05-08 13:24:58.0" updateauthor="binhn" updated="2017-05-08 13:24:58.0"/>
<Action id="23573" issue="15952" author="mastersingh24" type="comment" created="2017-05-08 20:49:48.0" updateauthor="mastersingh24" updated="2017-05-08 21:09:04.0"> <body><! CDATA Terminating proxies always present some type of problem when trying to do any type of mutual authentication end to end.  We'd have to do a little extra work, but it's possible to support both cases (depending on the proxy).  It's definitely easier to support mutual TLS because most proxies have the ability to use a standard HTTP header to pass the client certificate through to the actual backend node (which in our case is of course the peer).  I know you can extract tls-unique in haproxy but not sure about others.  My preference would be of course to use tls-unique but I fear that it *might* be hard to support proxies.  Of course there are only a few (well at least one - nghttpx) proxies which actually support acting as a reverse proxy for HTTP/2 in any case  ></body> </Action>
<Action id="23580" issue="15952" author="mastersingh24" type="comment" created="2017-05-08 22:42:33.0" updateauthor="mastersingh24" updated="2017-05-08 23:01:17.0"> <body><! CDATA OK - I vote for     * If TLS is enabled, request but not not require client certificates.  If the peer sends a client certificate, authenticate them at the gossip layer * If TLS is detected, and the client side peer hasn't sent it's certificate, reject them at the gossip layer * If TLS isn't detected, do what is done now * To support proxies, we'll look to use the common practice of having the proxy extract the client certificate and forward via an HTTP header  (this will require that the proxy authenticate with a client certificate though). * Test with at least one HTTP/2 reverse proxy (nghttpx is the only one I've seen to date which works with gRPC)     ></body> </Action>
<Action id="23596" issue="15952" author="yacovm" type="comment" body="https://gerrit.hyperledger.org/r/#/c/9119/" created="2017-05-09 13:06:14.0" updateauthor="yacovm" updated="2017-05-09 13:06:14.0"/>
<Action id="24652" issue="15952" author="christopherferris" type="comment" body="This CR has languished but does need to be addressed before 1.0. What it needs is careful scrutiny because of the production code changes. I doubt anyone would say that the fix should not be made. However, let&apos;s get some eyeballs on the CR please." created="2017-05-30 14:23:56.0" updateauthor="christopherferris" updated="2017-05-30 14:23:56.0"/>
<Action id="24657" issue="15952" author="yacovm" type="comment" body="I&apos;m waiting for  ~mastersingh24 &apos;s gRPC change set to be merged, no point in resolving the merge conflict before that." created="2017-05-30 14:35:18.0" updateauthor="yacovm" updated="2017-05-30 14:35:18.0"/>
<Action id="24814" issue="15952" author="christopherferris" type="comment" body=" ~yacovm  it&apos;s been merged..." created="2017-05-31 17:26:05.0" updateauthor="christopherferris" updated="2017-05-31 17:26:05.0"/>
<Action id="24833" issue="15952" author="yacovm" type="comment" created="2017-05-31 18:26:28.0" updateauthor="yacovm" updated="2017-05-31 18:28:08.0"> <body><! CDATA So it seems.  I will need to change the code of the change set and test it all over again, it's not so simple as resolving a merge conflict.  ></body> </Action>
<Action id="25329" issue="15952" author="christopherferris" type="comment" body="This now has the requisite votes to proceed and the CR may be merged when ready." created="2017-06-05 13:40:22.0" updateauthor="christopherferris" updated="2017-06-05 13:40:22.0"/>
<Action id="25332" issue="15952" author="yacovm" type="comment" body="I am testing. will comment when ready." created="2017-06-05 13:44:26.0" updateauthor="yacovm" updated="2017-06-05 13:44:26.0"/>
<Action id="25400" issue="15952" author="weeds" type="comment" body="Yacov- can you add the CR number please?  Thanks!" created="2017-06-05 17:47:47.0" updateauthor="weeds" updated="2017-06-05 17:47:47.0"/>
<Action id="25402" issue="15952" author="clayton sims" type="comment" created="2017-06-05 17:49:33.0" updateauthor="clayton sims" updated="2017-06-05 17:49:33.0"> <body><! CDATA  https://gerrit.hyperledger.org/r/#/c/9119/      ></body> </Action>
<Action id="25422" issue="15952" author="yacovm" type="comment" created="2017-06-05 19:29:36.0" updateauthor="yacovm" updated="2017-06-05 19:29:36.0"> <body><! CDATA OK I verified that the TLS change set works for gossip by deploying it on a few peers and: * Seeing that they chat with one another * Invoking *nmap --script ssl-enum-ciphers -p 7051* to ensure they indeed use TLS   ></body> </Action>
