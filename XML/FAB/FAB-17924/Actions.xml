<Action id="69549" issue="45129" author="denyeart" type="comment" body=" ~sykesm  Matt could you offer your opinion on this one?" created="2020-06-25 10:12:11.0" updateauthor="denyeart" updated="2020-06-25 10:12:11.0"/>
<Action id="69614" issue="45129" author="tsharris" type="comment" body=" ~shimos  As explained in this comment, Case 1 works as expected because an import path is not the same as a path. " created="2020-07-02 14:38:25.0" updateauthor="tsharris" updated="2020-07-02 14:38:50.0"/>
<Action id="69616" issue="45129" author="shimos" type="comment" body=" ~tsharris  Thank you for the comment. So is it right that the module mode works only with a real path (unless an import path happens to be the same as the real path)?" created="2020-07-02 18:17:18.0" updateauthor="shimos" updated="2020-07-02 18:17:18.0"/>
<Action id="69617" issue="45129" author="tsharris" type="comment" body="IIUC yes. " created="2020-07-02 20:05:27.0" updateauthor="tsharris" updated="2020-07-02 20:05:27.0"/>
<Action id="69633" issue="45129" author="tsharris" type="comment" created="2020-07-06 15:41:15.0" updateauthor="tsharris" updated="2020-07-06 15:41:15.0"> <body><! CDATA In Case 2, when running in module mode no compile checks are performed on the chaincode (or it's dependencies) that are being packaged. An error would most likely be seen at installation/invocation of the chaincode.   For both scenarios, there is no expectation that the chaincode packaging behavior will function the same across a variety of go versions, go.mod specifications, GOPATH mode, and Module mode.   ></body> </Action>
