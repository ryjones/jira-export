<Action id="70141" issue="45972" author="JIRAUSER20406" type="comment" created="2020-09-04 14:46:00.0" updateauthor="JIRAUSER20406" updated="2020-09-04 14:46:00.0"> <body><! CDATA Installing the latest version of gradle I've found that by default it comes with this google-oauth-client:1.25.0.   Have raised a question on the gradle forum to ask if there's any knowledge about updating this within  gradle.     ></body> </Action>
<Action id="70155" issue="45972" author="btl5037" type="comment" body="I also sent an email to their security mailbox per the instructions on the Security tab on GitHub. I tried to dig through what was pulling in the plugin (something with Kotlin/Android) but couldn&apos;t actually find the source as it was a never ending tree of deps to figure out what actually made the dep part of the standard plugin library." created="2020-09-08 01:43:42.0" updateauthor="btl5037" updated="2020-09-08 01:43:42.0"/>
<Action id="70184" issue="45972" author="JIRAUSER20406" type="comment" created="2020-09-10 08:08:34.0" updateauthor="JIRAUSER20406" updated="2020-09-10 08:08:34.0"> <body><! CDATA To summarise why Gradle is included within the javaenv docker image.  When Chaincode is used, it the package that contains the code will either have the original Java source code, or a prebuilt JAR file. With the source option it needs compiling - if the user has also included the gradlew wrapper in the package, that will be used.   If that isn't then the inbuilt gradle in the JavaEnv image would be used; hence why this is included. If this needs to be resolved then save for an update Gradle version - we would need to remove this last option.   ></body> </Action>
<Action id="70301" issue="45972" author="btl5037" type="comment" created="2020-09-10 21:49:08.0" updateauthor="btl5037" updated="2020-09-10 21:52:00.0"> <body><! CDATA I spoke with the security team at Gradle, this is in no way going to be a straightforward fix. They tried to remove the plugin after installation but they confirmed Gradle fails to build projects as their dependency injection expects the default set of plugins to be present, regardless of whether they are being used or not.  They said the plugin that uses the JAR is a very little used feature that allows users to specify an endpoint to Google Cloud Storage and an OAuth token to pull Gradle deps directly from Google Cloud Storage. So while we aren't using the plugin, it's not entirely impossible to think a user might make use of it to pull chaincode deps.  The Gradle project lead said while they are aware of the issue, since its such a little used feature its not at the top of their list, and not likely to be before the end of the year. He is going to send us some guidance on where to start if we want to contribute a fix ourselves, but the update also isn't going to be super straightforward due to some changes in the oauth library.  I'll chat with Ben and Pat and see what they think about this, but I suspect since it's possible a user could use it, and the fact it is being flagged it in their scans, not remediating it till next year may not be acceptable.  ></body> </Action>
<Action id="70305" issue="45972" author="JIRAUSER20406" type="comment" created="2020-09-11 07:34:02.0" updateauthor="JIRAUSER20406" updated="2020-09-11 10:05:22.0"> <body><! CDATA Thanks for following this up  ~btl5037   -I would suspect that we're heading towards removing the inbuilt gradle option.-      A suggestion from @sstone1 might have offered a solution... being tested currently. See https://github.com/hyperledger/fabric-chaincode-java/pull/134  ></body> </Action>
<Action id="70313" issue="45972" author="btl5037" type="comment" body="I tested this image (the one from Simons suggestion) in our system test suite and it works. It also prevents the plugin from ever being installed in its entirety, so we never see it at all even in the final chaincode image after installation and invoke" created="2020-09-11 17:09:11.0" updateauthor="btl5037" updated="2020-09-11 17:09:11.0"/>
<Action id="70363" issue="45972" author="btl5037" type="comment" created="2020-09-22 13:33:13.0" updateauthor="btl5037" updated="2020-09-22 13:33:13.0"> <body><! CDATA Patched in release-2.x with:   https://github.com/hyperledger/fabric-chaincode-java/pull/134|https://github.com/hyperledger/fabric-chaincode-java/pull/134/files   master in:   https://github.com/hyperledger/fabric-chaincode-java/pull/135|https://github.com/hyperledger/fabric-chaincode-java/pull/135/files   ></body> </Action>
<Action id="72103" issue="45972" author="benjsmi" type="comment" created="2021-09-30 17:15:38.0" updateauthor="benjsmi" updated="2021-09-30 17:15:38.0"> <body><! CDATA So to summarize, the team fixed this/addressed it by removing Gradle (and Maven, which had a related CVE in it) by removing them from distribution of the actual image and instead included the _Wrapper_ versions of these products, which are just scripts that help the developer of chaincode download Maven and Gradle themselves upon starting the image or building from it.     This helps a lot because it's likely to help developers of chaincode stay on par with the changes that are always happening in Maven and Gradle, which regularly get hit with new CVEs and reported vulnerabilities.  Thank you very much for addressing this one folks!  ></body> </Action>
<Action id="72105" issue="45972" author="ryjones" type="comment" body=" ~benjsmi  so I can close this issue?" created="2021-09-30 17:29:54.0" updateauthor="ryjones" updated="2021-09-30 17:29:54.0"/>
<Action id="72106" issue="45972" author="benjsmi" type="comment" body="Check with  ~calanais  and  ~btl5037 , but from my POV it&apos;s resolved." created="2021-09-30 19:07:44.0" updateauthor="benjsmi" updated="2021-09-30 19:07:44.0"/>
<Action id="72113" issue="45972" author="denyeart" type="comment" body="This is resolved, we can close it." created="2021-10-24 14:41:08.0" updateauthor="denyeart" updated="2021-10-24 14:41:08.0"/>
