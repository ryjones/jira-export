<Issue id="39512" key="FAB-15277" number="15277" project="10002" reporter="scottz" assignee="scottz" creator="scottz" type="10004" summary="fabric-test daily test suite: all 3 fabric-ca integration tests fail" priority="3" resolution="10000" status="6" created="2019-04-25 13:58:09.0" updated="2019-05-03 13:05:41.0" resolutiondate="2019-05-03 13:05:41.0" votes="0" watches="1" workflowId="52392"> <description><! CDATA In master branch, all 3 tests executed by runCATestSuite.sh fail consistently. After first examination: * it appears the fabric-samples/fabric-ca directory itself was removed, so we need to locate the new home where the test was moved. * the fabric-ca-fvt is no longer pushed to nexus, so probably we must build it ourselves  {quote}20:56:01 cd /w/workspace/fabric-test-daily-ca-master-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/daily && ./runCATestSuite.sh 20:56:01 ======== Fabric-CA ACL smoke test... ======== 20:56:02 ============================= test session starts ============================== 20:56:02 platform linux2 -- Python 2.7.12, pytest-2.8.7, py-1.4.31, pluggy-0.3.1 -- /usr/bin/python 20:56:02 cachedir: .cache 20:56:02 rootdir: /w/workspace/fabric-test-daily-ca-master-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/daily, inifile:  20:56:02 collecting ... collected 1 items 20:56:02  20:56:02 acl_happy_path.py::ACL::test_FAB6490_Using_FCA_With_ACL_Permissioning FAILED 20:56:02  20:56:02  generated xml file: /w/workspace/fabric-test-daily-ca-master-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/daily/results_acl.xml  20:56:02 =================================== FAILURES =================================== 20:56:02 ______________ ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning _______________ 20:56:02  20:56:02 self = <acl_happy_path.ACL testMethod=test_FAB6490_Using_FCA_With_ACL_Permissioning> 20:56:02  20:56:02     def test_FAB6490_Using_FCA_With_ACL_Permissioning(self): 20:56:02         ''' 20:56:02              In this ACL test, we execute the fabric-ca sample that 20:56:02              is located in the fabric-sample repository. This sample executes a 20:56:02              "happy path" scenario to ensure that the when a user is given limited 20:56:02              access, that the ACL rule is followed as expected. 20:56:02      20:56:02              Passing criteria: The sample executes with a congratulatory message. 20:56:02             ''' 20:56:02 >       self.assertTrue(os.path.exists(fca_sample_directory), msg="The fabric-ca chaincode test does not exist in this directory setup") 20:56:02 E       AssertionError: The fabric-ca chaincode test does not exist in this directory setup 20:56:02  20:56:02 acl_happy_path.py:24: AssertionError 20:56:02 =========================== 1 failed in 0.04 seconds =========================== 20:56:02 ======== Fabric-CA tests...======== 20:56:02 ============================= test session starts ============================== 20:56:02 platform linux2 -- Python 2.7.12, pytest-2.8.7, py-1.4.31, pluggy-0.3.1 -- /usr/bin/python 20:56:02 cachedir: .cache 20:56:02 rootdir: /w/workspace/fabric-test-daily-ca-master-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/daily, inifile:  20:56:02 collecting ... collected 2 items 20:56:02  20:56:02 ca_tests.py::FabricCaTests::test_FAB6863_BasicCAClustering FAILED 20:56:03 ca_tests.py::FabricCaTests::test_FAB7206_GenCrlWindows FAILED 20:56:03  20:56:03  generated xml file: /w/workspace/fabric-test-daily-ca-master-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/daily/results_fabric-ca_tests.xml  20:56:03 =================================== FAILURES =================================== 20:56:03 _________________ FabricCaTests.test_FAB6863_BasicCAClustering _________________ 20:56:03  20:56:03 self = <ca_tests.FabricCaTests testMethod=test_FAB6863_BasicCAClustering> 20:56:03  20:56:03     def test_FAB6863_BasicCAClustering(self): 20:56:03         createLog = 'mkdir -p /tmp/logs/FAB6863; chmod 777 /tmp/logs/FAB6863' 20:56:03         startContainer = 'docker run -v /tmp/logs/FAB6863:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8 128' 20:56:03         command = createLog + ';' + startContainer 20:56:03 >       output = check_output( command , shell=True) 20:56:03  20:56:03 ca_tests.py:17:  20:56:03 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  20:56:03  20:56:03 popenargs = ( 'mkdir -p /tmp/logs/FAB6863; chmod 777 /tmp/logs/FAB6863;docker run -v /tmp/logs/FAB6863:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8 128' ,) 20:56:03 kwargs = {'shell': True}, process = <subprocess.Popen object at 0x7f042a119d90> 20:56:03 output = '', unused_err = None, retcode = 125 20:56:03 cmd =  'mkdir -p /tmp/logs/FAB6863; chmod 777 /tmp/logs/FAB6863;docker run -v /tmp/logs/FAB6863:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8 128'  20:56:03  20:56:03     def check_output(*popenargs, **kwargs): 20:56:03         r"""Run command with arguments and return its output as a byte string. 20:56:03      20:56:03         If the exit code was non-zero it raises a CalledProcessError.  The 20:56:03         CalledProcessError object will have the return code in the returncode 20:56:03         attribute and output in the output attribute. 20:56:03      20:56:03         The arguments are the same as for the Popen constructor.  Example: 20:56:03      20:56:03         >>> check_output( "ls", "-l", "/dev/null" ) 20:56:03         'crw-rw-rw- 1 root root 1, 3 Oct 18  2007 /dev/null\n' 20:56:03      20:56:03         The stdout argument is not allowed as it is used internally. 20:56:03         To capture standard error in the result, use stderr=STDOUT. 20:56:03      20:56:03         >>> check_output( "/bin/sh", "-c", 20:56:03         ...               "ls -l non_existent_file ; exit 0" , 20:56:03         ...              stderr=STDOUT) 20:56:03         'ls: non_existent_file: No such file or directory\n' 20:56:03         """ 20:56:03         if 'stdout' in kwargs: 20:56:03             raise ValueError('stdout argument not allowed, it will be overridden.') 20:56:03         process = Popen(stdout=PIPE, *popenargs, **kwargs) 20:56:03         output, unused_err = process.communicate() 20:56:03         retcode = process.poll() 20:56:03         if retcode: 20:56:03             cmd = kwargs.get("args") 20:56:03             if cmd is None: 20:56:03                 cmd = popenargs 0  20:56:03 >           raise CalledProcessError(retcode, cmd, output=output) 20:56:03 E           CalledProcessError: Command ' 'mkdir -p /tmp/logs/FAB6863; chmod 777 /tmp/logs/FAB6863;docker run -v /tmp/logs/FAB6863:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt ./scripts/fvt/cluster_test.sh 4 4 8 128' ' returned non-zero exit status 125 20:56:03  20:56:03 /usr/lib/python2.7/subprocess.py:574: CalledProcessError 20:56:03 ----------------------------- Captured stderr call ----------------------------- 20:56:03 Unable to find image 'hyperledger/fabric-ca-fvt:latest' locally 20:56:03 docker: Error response from daemon: pull access denied for hyperledger/fabric-ca-fvt, repository does not exist or may require 'docker login'. 20:56:03 See 'docker run --help'. 20:56:03 ___________________ FabricCaTests.test_FAB7206_GenCrlWindows ___________________ 20:56:03  20:56:03 self = <ca_tests.FabricCaTests testMethod=test_FAB7206_GenCrlWindows> 20:56:03  20:56:03     def test_FAB7206_GenCrlWindows(self): 20:56:03         createLog = 'mkdir -p /tmp/logs/FAB7206; chmod 777 /tmp/logs/FAB7206' 20:56:03         startContainer = 'docker run -v $PWD/../../tools/CTE/:/tmp/test -v /tmp/logs/FAB7206:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt /tmp/test/crl_test.sh' 20:56:03         command = createLog + ';' + startContainer 20:56:03 >       output = check_output( command , shell=True) 20:56:03  20:56:03 ca_tests.py:25:  20:56:03 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  20:56:03  20:56:03 popenargs = ( 'mkdir -p /tmp/logs/FAB7206; chmod 777 /tmp/logs/FAB7206;docker run -v $PWD/../../tools/CTE/:/tmp/test -v /tmp/logs/...WD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt /tmp/test/crl_test.sh' ,) 20:56:03 kwargs = {'shell': True}, process = <subprocess.Popen object at 0x7f042a0c9410> 20:56:03 output = '', unused_err = None, retcode = 125 20:56:03 cmd =  'mkdir -p /tmp/logs/FAB7206; chmod 777 /tmp/logs/FAB7206;docker run -v $PWD/../../tools/CTE/:/tmp/test -v /tmp/logs/F...$PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt /tmp/test/crl_test.sh'  20:56:03  20:56:03     def check_output(*popenargs, **kwargs): 20:56:03         r"""Run command with arguments and return its output as a byte string. 20:56:03      20:56:03         If the exit code was non-zero it raises a CalledProcessError.  The 20:56:03         CalledProcessError object will have the return code in the returncode 20:56:03         attribute and output in the output attribute. 20:56:03      20:56:03         The arguments are the same as for the Popen constructor.  Example: 20:56:03      20:56:03         >>> check_output( "ls", "-l", "/dev/null" ) 20:56:03         'crw-rw-rw- 1 root root 1, 3 Oct 18  2007 /dev/null\n' 20:56:03      20:56:03         The stdout argument is not allowed as it is used internally. 20:56:03         To capture standard error in the result, use stderr=STDOUT. 20:56:03      20:56:03         >>> check_output( "/bin/sh", "-c", 20:56:03         ...               "ls -l non_existent_file ; exit 0" , 20:56:03         ...              stderr=STDOUT) 20:56:03         'ls: non_existent_file: No such file or directory\n' 20:56:03         """ 20:56:03         if 'stdout' in kwargs: 20:56:03             raise ValueError('stdout argument not allowed, it will be overridden.') 20:56:03         process = Popen(stdout=PIPE, *popenargs, **kwargs) 20:56:03         output, unused_err = process.communicate() 20:56:03         retcode = process.poll() 20:56:03         if retcode: 20:56:03             cmd = kwargs.get("args") 20:56:03             if cmd is None: 20:56:03                 cmd = popenargs 0  20:56:03 >           raise CalledProcessError(retcode, cmd, output=output) 20:56:03 E           CalledProcessError: Command ' 'mkdir -p /tmp/logs/FAB7206; chmod 777 /tmp/logs/FAB7206;docker run -v $PWD/../../tools/CTE/:/tmp/test -v /tmp/logs/FAB7206:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt /tmp/test/crl_test.sh' ' returned non-zero exit status 125 20:56:03  20:56:03 /usr/lib/python2.7/subprocess.py:574: CalledProcessError 20:56:03 ----------------------------- Captured stderr call ----------------------------- 20:56:03 Unable to find image 'hyperledger/fabric-ca-fvt:latest' locally 20:56:03 docker: Error response from daemon: pull access denied for hyperledger/fabric-ca-fvt, repository does not exist or may require 'docker login'. 20:56:03 See 'docker run --help'. 20:56:03 =========================== 2 failed in 0.73 seconds =========================== 20:56:03 ------> Archiving generated logs 20:56:03 cp: cannot stat '/w/workspace/fabric-test-daily-ca-master-x86_64/gopath/src/github.com/hyperledger/fabric-test/fabric-samples/fabric-ca/data/logs/*.log': No such file or directory{quote}  ></description> </Issue>
