<Issue id="17054" key="FAB-4136" number="4136" project="10002" reporter="kchristidis" assignee="kchristidis" creator="kchristidis" type="10004" summary="Fix orderer channel handling when Kafka cluster is not reachable" priority="1" resolution="10000" status="6" created="2017-05-24 13:04:35.0" updated="2018-07-20 14:12:56.0" resolutiondate="2017-06-12 11:19:51.0" votes="0" watches="10" timeoriginalestimate="288000" timeestimate="86400" timespent="129600" workflowId="38659" security="10001"> <description><! CDATA In short: if the Kafka cluster is not reachable when a new channel is created, or an existing channel in a just-rebooted orderer is reloaded, the orderer will Halt the chain object associated with that channel. This means it will not serve Broadcast/Deliver calls associated with it. This needs to be fixed by leveraging the retry knobs that the underlying library gives us, and extending them where necessary.  There are roughly 4 steps involved in fixing this: # Identify all the knob combinations that affect the retry mechanism # Identify the time defaults that we would set: see FAB-4084 # Identify the stop conditions (if any) for retrying: see FAB-4121 # Rewrite the code to implement this (and add related unit-tests – which is going to be tricky)  This issue is critical and we cannot/shouldn't cut a release w/o addressing it. By my estimate 75% of the bugs we have against the Kafka orderer in JIRA are affected by this. Even working weekends (which I'm already doing), I expect it to take at least two weeks before we have changesets out addressing this.  ></description> </Issue>
