<Action id="55719" issue="35104" author="sykesm" type="comment" created="2019-01-16 15:43:20.0" updateauthor="sykesm" updated="2019-01-16 15:43:20.0"> <body><! CDATA The code you're highlighting is related to decoding protobuf messages. As protobuf was not designed for large messages (default max message size is 4MiB), the entire message is received from the wire, decoded, and carried forward to the server side components. Since fabric uses an envelope model that contains arbitrary bytes, most of that message is simply held in memory for the duration of the request. If you're making 200+ concurrent requests, that can be a lot of data - especially as the enveloped data will be further decoded meaning multiple copies are floating around on the heap.  The block storage is similar. When a block is retrieved from the file storage on the peer because of a query, it's read into memory. The block contents are held in storage until no longer needed.  ></body> </Action>
