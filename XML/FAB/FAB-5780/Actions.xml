<Action id="29876" issue="20191" author="manish-sethi" type="comment" created="2017-08-15 20:46:54.0" updateauthor="manish-sethi" updated="2017-08-15 21:00:19.0"> <body><! CDATA Ledger's API that is used for simulation of a tran proposal is changed to include the pvt data. The return type of function `GetTxSimulationResults()` ( https://github.com/hyperledger/fabric/blob/master/core/ledger/ledger_interface.go#L168)  now includes the pvtdata as well, in addition to the public rwset. The endorser is to be changed to handle this pvt data. The endorser is expected to continue to sign and send the pub simulation results back to the sdk. However, in addition, the endorser is expected to  1) Persist the pvt data into the transient store (via transient coordinator APIs ?)  2) optionally, disseminate the pvt data to the other peers (the partial pvt data based on collection visibility) so that other peers also have the pvt data in advance  During commit, before calling the function `CommitWithPvtData` on ledger, the transient data coordinator fetches the pvt data from a combination of sources that include, the transient store of itself + transient data coordinator of other peer (which in turn combines the search over local transient store and committed data into the local copy of the ledger).     In phase-1, because of the simplified assumption (that all the peers would act as endorsers for all the transactions with pvt data), the ledger assumes that it does not need any pvt data other than the one that is produced by itself. Under this assumption, the ledger short-circuits the above described flow entirely and keeps the pvt data generated during simulation locally within ledger temp storage. During `Commit` function, the ledger pulls out the required pvt data (based on what trans are included inside the block) from this temp storage and calls the `CommitWithPvtData` function. Once, the committer/coordinator starts calling function `CommitWithPvtData` directly, we intend to get rid of the function `Commit` and the internal temp storage related code. Note, that for the internal temp storage, ledger uses an instance of the transient store - However, that should not stop the modifications in the transient coordinator/endorser/committer to start using the transient store as per above mentioned flow. Because, the ledger uses the an isolated instance of the transient store (pending this cr -  https://gerrit.hyperledger.org/r/#/c/12487/)  at entirely different filesystem path.     ></body> </Action>
