<Action id="22857" issue="15877" author="kchristidis" type="comment" created="2017-04-22 05:06:30.0" updateauthor="kchristidis" updated="2017-04-22 05:06:30.0"> <body><! CDATA On the latest master (??d661d11 Merge " FAB-3317  Update peer CouchDB timeout"??):  # The E2E CLI test passes w/o issues. # Created a genesis block for the SampleInsecureSolo profile, launched the orderer, ran the sample broadcast_config client against it (which generates a channel creation transaction using the same library as configtxgen), and the channel was created successfully.  So: so far I am unable to reproduce the problem.  I am currently extending the broadcast_config client so that it can use a channel creation TX produced by the configtxgen binary. This will allow me to get eveb closer to your sequence of steps. Will update.  ></body> </Action>
<Action id="22917" issue="15877" author="kchristidis" type="comment" created="2017-04-23 19:51:51.0" updateauthor="kchristidis" updated="2017-04-23 19:51:51.0"> <body><! CDATA I extended the broadcast_config client to have it send the channel creation TX produced by the configtxgen binary. Everything works w/o issues.  See the temporary commit I pushed here w/ instructions: https://gerrit.hyperledger.org/r/#/c/8459/  Let me know if I am missing something.  If I am not, let's proceed with closing this.  ></body> </Action>
<Action id="23136" issue="15877" author="kchristidis" type="comment" body="Marking this as done, if the issue persists, please re-open." created="2017-04-28 06:32:10.0" updateauthor="kchristidis" updated="2017-04-28 06:32:10.0"/>
<Action id="40483" issue="15877" author="zamrokk" type="comment" created="2018-02-21 09:56:42.0" updateauthor="zamrokk" updated="2018-02-21 09:56:42.0"> <body><! CDATA I encounter same issue while generating the binary.  Here attached the files : the config file , the output binary and the json displayed with the option  inspectChannelCreateTx     Here is the output log :  Caused by: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: Protocol message tag had invalid wire type.  at com.google.protobuf.InvalidProtocolBufferException.invalidWireType(InvalidProtocolBufferException.java:115)  at com.google.protobuf.CodedInputStream$ArrayDecoder.skipField(CodedInputStream.java:686)  at org.hyperledger.fabric.protos.common.Common$Envelope.<init>(Common.java:5641)     Docker Image version : 1.1.0-preview     SDK version : 1.1.0-SNAPSHOT        ></body> </Action>
<Action id="40491" issue="15877" author="kchristidis" type="comment" body="Are you getting the same issue as indicated in this JIRA&apos;s description a &quot;Rejecting CONFIG_UPDATE message&quot; or an &quot;invalid wire type&quot; message, as you indicate on your post?" created="2018-02-21 13:28:02.0" updateauthor="kchristidis" updated="2018-02-21 13:28:02.0"/>
<Action id="40559" issue="15877" author="zamrokk" type="comment" body="it is a different error message but the cause might be the same : the .tx binary cannot be parsed (same as the title)" created="2018-02-22 08:19:58.0" updateauthor="zamrokk" updated="2018-02-22 08:19:58.0"/>
<Action id="40572" issue="15877" author="kchristidis" type="comment" created="2018-02-22 15:25:47.0" updateauthor="kchristidis" updated="2018-02-22 15:25:47.0"> <body><! CDATA Thanks for clarifying.  When exactly do you get that error?  You write that this happens while generating the binary, but I'm not sure what binary you refer to.  And is this the Java SDK?  ></body> </Action>
<Action id="40573" issue="15877" author="zamrokk" type="comment" created="2018-02-22 15:28:00.0" updateauthor="zamrokk" updated="2018-02-22 15:28:00.0"> <body><! CDATA Using Java SDK, when try to connect to a channle using a new fresh enrolled user  the binary is the .tx file that is generated by fabric-tools   ></body> </Action>
<Action id="40585" issue="15877" author="kchristidis" type="comment" created="2018-02-22 18:50:03.0" updateauthor="kchristidis" updated="2018-02-22 18:50:03.0"> <body><! CDATA Here's what I got:  # The binary file that you have attached ({{channel1.tx}}) is indeed broken. When attempting to decode it, I get an {{bad wiretype for field common.Envelope.Payload: got wiretype 5, want 2}} error. A  length-delimited type|https://developers.google.com/protocol-buffers/docs/encoding#structure  is expected, but a 32-bit value is returned instead. # The JSON file that you have attached ({{channel1.json}}) works w/o issues. I can encode it into an {{Envelope}}, and decode that envelope just fine. # Using your {{configtx.yaml}} configuration file and a {{1.1.0-preview}} configtxgen binary, I created a channel creation transaction -- see {{channel1_repr.tx}}. This one works w/o issues -- it can be decoded using {{configtxlator}} just fine.  I've got two questions:  1. How did you generate that {{channel1.tx}} file. What is the output of {{configtx -version}}? 2. How did you generate its JSON representation. What is the output of {{configtxlator version}}?  ></body> </Action>
<Action id="40625" issue="15877" author="zamrokk" type="comment" created="2018-02-23 09:34:07.0" updateauthor="zamrokk" updated="2018-02-23 09:34:07.0"> <body><! CDATA I am using x86_64-1.1.0-alpha from all images     1)  I generate the channel from K8 scripting files , here is the line :  image: byomc/fabric-tools:x86_64-1.1.0-alpha                        <= this is the hyperledger/fabric-tools , just modified the ca.yaml to have only 1 org imagePullPolicy: Always command:  "sh", "-c", "cd /shared && pwd && ls && configtxgen -profile OneOrgsChannel -outputCreateChannelTx channel1.tx -inspectChannelCreateTx channel1.tx -channelID channel1 && touch /shared/status_channeltx_complete "   Juste did the same configtxlator commands as yours, get exactly same problem and got also the json displayed well on your channel1_repr.tx file  :s  Do you need also my ca.yaml file ?  2)  root@2edfa1b2b476:/shared# configtxlator version configtxlator: Version: development build Go version: go1.9.2 OS/Arch: linux/amd64  As you see the .json file is taken from the option "inspectChannelCreateTx" that displays it on the stdout while generating the binary     ></body> </Action>
<Action id="40626" issue="15877" author="zamrokk" type="comment" body="For info, my environnement is MacOs, but I ran the scripts on an IBM Cloud Kubernetes cluster" created="2018-02-23 09:34:43.0" updateauthor="zamrokk" updated="2018-02-23 09:34:43.0"/>
<Action id="40628" issue="15877" author="zamrokk" type="comment" body="just joined the ca.yaml file" created="2018-02-23 09:44:13.0" updateauthor="zamrokk" updated="2018-02-23 09:44:13.0"/>
<Action id="40649" issue="15877" author="kchristidis" type="comment" created="2018-02-23 14:31:54.0" updateauthor="kchristidis" updated="2018-02-23 14:31:54.0"> <body><! CDATA # You mention 1.1.0-alpha in your latest message, but you wrote 1.1.0-preview in your first message in this thread. Which one is it? # Your configtxlator version is "development build". This suggests that you are not using the binary that comes with whatever version (see question 1) you downloaded. Please use the configtxlator version that comes with the image you downloaded and let me know what you get.  I cannot reproduce this with the info that I have.  ></body> </Action>
<Action id="40650" issue="15877" author="kchristidis" type="comment" body="Switched to 1.1.0-alpha binaries. I can encode a channel creation transaction using 1.1.0-alpha configtxgen, and then decode it using configtxlator v1.1.0-alpha without issues. {{channel1_repr_alpha.tx}} gives me {{channel1_repr_alpha.json}}. See attached files." created="2018-02-23 14:40:25.0" updateauthor="kchristidis" updated="2018-02-23 14:40:25.0"/>
<Action id="40663" issue="15877" author="zamrokk" type="comment" created="2018-02-23 16:36:47.0" updateauthor="zamrokk" updated="2018-02-23 16:36:47.0"> <body><! CDATA It seems linked to this issue too : https://jira.hyperledger.org/browse/FAB-7585?page=com.atlassian.jira.plugin.system.issuetabpanels%3Aall-tabpanel     I am uploading a very light archive containing : configtx.yaml, crypto-config.yaml and docker-compose.yaml  just run a : docker-compose -f docker-compose.yaml up  and tell me if you get the same logs as mine     ^Archive.zip   ></body> </Action>
<Action id="40791" issue="15877" author="denyeart" type="comment" body="Deferring to 1.2 since we have not been able to reproduce on latest master." created="2018-02-26 11:58:48.0" updateauthor="denyeart" updated="2018-02-26 11:58:48.0"/>
<Action id="40847" issue="15877" author="kchristidis" type="comment" created="2018-02-26 17:17:35.0" updateauthor="kchristidis" updated="2018-02-26 17:17:35.0"> <body><! CDATA Unable to reproduce.  Using the {{hyperledger/fabric-tools:x86_64-1.1.0-alpha}} image (same as in your Docker Compose file), I cd'd to directory {{3285}} (see https://github.com/kchristidis/fabric/tree/fab-3285-dc/3285) and did the following: https://pastebin.com/Lwnawjtd  ></body> </Action>
<Action id="40851" issue="15877" author="zamrokk" type="comment" body="I created configtx.yaml back from scratch and now the binary is ok. Maybe something with a space or invisible character on file   o.O   . You can close for my case." created="2018-02-26 17:28:13.0" updateauthor="zamrokk" updated="2018-02-26 17:28:13.0"/>
