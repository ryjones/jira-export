<Issue id="12419" key="FAB-120" number="120" project="10002" reporter="christopherferris" creator="christopherferris" type="10004" summary="deploy transaction performance issue" priority="3" resolution="10000" status="6" created="2016-08-16 18:46:42.0" updated="2019-03-15 12:41:24.0" resolutiondate="2017-04-02 12:34:01.0" votes="0" watches="2" workflowId="36067"> <description><! CDATA Compared to invoke transactions (but also in absolute terms), deploy transactions take a very long time (many seconds).  With the sieve (non-deterministic) consensus protocol, we need to execute all transactions (and wait for their result) before the protocol can move on. However, to prevent against a malicious leader, the protocol also needs to use timeouts to ensure progress.  This timeout needs to accommodate the duration of deploy transactions (or at least the variation of the duration). Sizing this timeout conservatively means that faulty leaders will be detected more slowly.  Alternatively, we could split deploy transactions into a hint, which will initiate the deployment, and a final transaction, which will record the deployment on the ledger.  (see https://github.com/hyperledger/fabric/issues/452)  ></description> </Issue>
