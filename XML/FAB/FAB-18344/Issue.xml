<Issue id="46330" key="FAB-18344" number="18344" project="10002" reporter="JIRAUSER21088" creator="JIRAUSER21088" type="10004" summary="the connection issue in bringing up the test network" priority="3" resolution="10201" status="6" created="2020-11-18 07:59:39.0" updated="2020-12-02 09:53:09.0" resolutiondate="2020-12-02 09:53:09.0" votes="0" watches="1" workflowId="60246" archived="N"> <description><! CDATA when I deploy the fabric according to  test network| https://hyperledger-fabric.readthedocs.io/en/release-2.1/test_network.html ,  I encounter the problem in creating channel like this: {code:java}  root@node83 test-network # ./network.sh up createChannel -c test Creating channel 'test'. If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb with crypto from 'cryptogen' Bringing up networkLOCAL_VERSION=2.1.1 DOCKER_IMAGE_VERSION=2.1.1 /root/jjx-hyperledger/bin/cryptogen Generate certificates using cryptogen tool Create Org1 Identities + cryptogen generate --config=./organizations/cryptogen/crypto-config-org1.yaml --output=organizations org1.example.com + res=0 Create Org2 Identities + cryptogen generate --config=./organizations/cryptogen/crypto-config-org2.yaml --output=organizations org2.example.com + res=0 Create Orderer Org Identities + cryptogen generate --config=./organizations/cryptogen/crypto-config-orderer.yaml --output=organizations + res=0 Generate CCP files for Org1 and Org2 /root/jjx-hyperledger/bin/configtxgen Generating Orderer Genesis block + configtxgen -profile TwoOrgsOrdererGenesis -channelID system-channel -outputBlock ./system-genesis-block/genesis.block 2020-11-18 15:13:17.732 CST  common.tools.configtxgen  main -> INFO 001 Loading configuration 2020-11-18 15:13:17.792 CST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 002 orderer type: etcdraft 2020-11-18 15:13:17.792 CST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 003 Orderer.EtcdRaft.Options unset, setting to tick_interval:"500ms" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 2020-11-18 15:13:17.792 CST  common.tools.configtxgen.localconfig  Load -> INFO 004 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml 2020-11-18 15:13:17.797 CST  common.tools.configtxgen  doOutputBlock -> INFO 005 Generating genesis block 2020-11-18 15:13:17.799 CST  common.tools.configtxgen  doOutputBlock -> INFO 006 Writing genesis block + res=0 Creating network "net_test" with the default driver Creating volume "net_orderer.example.com" with default driver Creating volume "net_peer0.org1.example.com" with default driver Creating volume "net_peer0.org2.example.com" with default driver Creating peer0.org1.example.com ... done Creating orderer.example.com    ... done Creating peer0.org2.example.com ... done CONTAINER ID        IMAGE                              COMMAND             CREATED             STATUS                  PORTS                              NAMES 09d1eb085313        hyperledger/fabric-peer:2.1.1      "peer node start"   6 seconds ago       Up Less than a second   7051/tcp, 0.0.0.0:9051->9051/tcp   peer0.org2.example.com 9598ff64e761        hyperledger/fabric-orderer:2.1.1   "orderer"           6 seconds ago       Up Less than a second   0.0.0.0:7050->7050/tcp             orderer.example.com 407b5c87574f        hyperledger/fabric-peer:2.1.1      "peer node start"   6 seconds ago       Up Less than a second   0.0.0.0:7051->7051/tcp             peer0.org1.example.com Generating channel create transaction 'test.tx' + configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/test.tx -channelID test 2020-11-18 15:13:25.881 CST  common.tools.configtxgen  main -> INFO 001 Loading configuration 2020-11-18 15:13:25.933 CST  common.tools.configtxgen.localconfig  Load -> INFO 002 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml 2020-11-18 15:13:25.933 CST  common.tools.configtxgen  doOutputChannelCreateTx -> INFO 003 Generating new channel configtx 2020-11-18 15:13:25.938 CST  common.tools.configtxgen  doOutputChannelCreateTx -> INFO 004 Writing new channel tx + res=0 Generating anchor peer update transactions Generating anchor peer update transaction for Org1MSP + configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID test -asOrg Org1MSP 2020-11-18 15:13:25.985 CST  common.tools.configtxgen  main -> INFO 001 Loading configuration 2020-11-18 15:13:26.037 CST  common.tools.configtxgen.localconfig  Load -> INFO 002 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml 2020-11-18 15:13:26.037 CST  common.tools.configtxgen  doOutputAnchorPeersUpdate -> INFO 003 Generating anchor peer update 2020-11-18 15:13:26.042 CST  common.tools.configtxgen  doOutputAnchorPeersUpdate -> INFO 004 Writing anchor peer update + res=0 Generating anchor peer update transaction for Org2MSP + configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID test -asOrg Org2MSP 2020-11-18 15:13:26.092 CST  common.tools.configtxgen  main -> INFO 001 Loading configuration 2020-11-18 15:13:26.142 CST  common.tools.configtxgen.localconfig  Load -> INFO 002 Loaded configuration: /root/jjx-hyperledger/fabric-samples/test-network/configtx/configtx.yaml 2020-11-18 15:13:26.142 CST  common.tools.configtxgen  doOutputAnchorPeersUpdate -> INFO 003 Generating anchor peer update 2020-11-18 15:13:26.145 CST  common.tools.configtxgen  doOutputAnchorPeersUpdate -> INFO 004 Writing anchor peer update + res=0 Creating channel test Using organization 1 + peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem + res=1 + peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem + res=1 + peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem + res=1 + peer channel create -o localhost:7050 -c test --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/test.tx --outputBlock ./channel-artifacts/test.block --tls --cafile /root/jjx-hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem + res=1 Error: failed to create deliver client for orderer: orderer client failed to connect to localhost:7050: failed to create new connection: context deadline exceeded Channel creation failed Create channel failed {code} environment:  centos 7.2  docker: 19.03  docker-compose: 1.23.2  fabric: 2.1.1/2.2.1   Others also met this problem, however there isn't a solution. So I really wanna find out why it is？ Thanks.  ></description> </Issue>
