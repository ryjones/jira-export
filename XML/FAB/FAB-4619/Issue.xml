<Issue id="17866" key="FAB-4619" number="4619" project="10002" reporter="kchristidis" assignee="sanchezl" creator="kchristidis" type="10001" summary="Figure out easier way to set Kafka version" priority="3" resolution="10000" status="6" created="2017-06-14 05:37:58.0" updated="2018-07-20 18:56:58.0" resolutiondate="2017-06-24 18:23:37.0" votes="0" watches="2" workflowId="38999" security="10001"> <description><! CDATA As thing stand right now, if you wanted to run the orderers with a Kafka cluster that runs on Kafka 0.10 (or anything other than our default of 0.9.0.1), you would need to edit the `Version` field of the `defaults` struct in `orderer/localconfig/config.go` to `sarama.V0_10_0_1`, then rebuild the binary.  This is of course not user-friendly. (It is in fact a horrible way of going at it.)Â It was a however shortcut we had to take because of the type of that value, and an improvement that slipped through the cracks.  We should reconsider our approach here.  Off the top of my head, we can duplicate the functionality of the unexported `newKafkaVersion()` in `sarama/utils.go`, create a new `Kafka.Version`` field in `orderer.yaml` and add a comment to it enumerating the versions supported by the version of the vendored sarama library.  It's still not as clean and easy as it could be, but it beats the current implementation.  ></description> </Issue>
