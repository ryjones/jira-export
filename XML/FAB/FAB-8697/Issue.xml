<Issue id="28274" key="FAB-8697" number="8697" project="10002" reporter="sykesm" creator="sykesm" type="10002" summary="HYGIENE: Gossip unit tests take too long to complete" priority="1" status="10100" created="2018-03-07 16:40:42.0" updated="2019-12-02 20:30:11.0" votes="0" watches="5" workflowId="35591"> <description><! CDATA Gossip unit tests take nearly 8 minutes to run vs 3 minutes for the rest of the fabric code base. This is unnecessarily elongating the build process performed in each commit.  Example: {quote} Attaching to couchdb, unittest_unit-tests_1 couchdb       | WARNING: no logs are available with the 'none' log driver unit-tests_1  | experimental unit-tests_1  | ok  	github.com/hyperledger/fabric/bccsp	0.035s	coverage: 100.0% of statements ... unit-tests_1  | ok  	github.com/hyperledger/fabric/protos/utils	0.406s	coverage: 85.7% of statements unit-tests_1  |  unit-tests_1  | real	2m56.011s unit-tests_1  | user	6m31.110s unit-tests_1  | sys	2m57.420s unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/api	0.039s	coverage: 100.0% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/comm	18.118s	coverage: 89.0% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/comm/mock	0.042s	coverage: 83.3% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/common	0.007s	coverage: 87.5% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/discovery	28.087s	coverage: 83.5% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/election	9.280s	coverage: 93.8% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/filter	0.041s	coverage: 96.9% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip	69.855s	coverage: 85.6% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/algo	4.560s	coverage: 97.1% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/channel	18.720s	coverage: 93.8% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/msgstore	8.043s	coverage: 100.0% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/gossip/pull	4.390s	coverage: 91.8% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/identity	12.047s	coverage: 100.0% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/integration	0.114s	coverage: 78.6% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/privdata	17.742s	coverage: 87.9% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/service	125.806s	coverage: 81.2% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state	88.259s	coverage: 79.2% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/state/mocks	0.038s	coverage: 71.4% of statements unit-tests_1  | ok  	github.com/hyperledger/fabric/gossip/util	4.095s	coverage: 80.5% of statements unit-tests_1  | experimental pluginsenabled unit-tests_1  |  unit-tests_1  | real	7m50.811s unit-tests_1  | user	1m20.850s unit-tests_1  | sys	1m21.050s {quote}  * Where timeouts and polling in the production code are causing the delays, a mechanism should be introduced to prevent the the delays in unit tests. This could include things like fake clocks, mocked dependencies, or explicit configuration of very short timeouts. * Tests that take longer than a second should, ideally, be enabled for parallel execution. * Tests that take longer than 5 seconds should be skipped when the -short flag is used when testing   ></description> </Issue>
