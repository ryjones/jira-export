<Issue id="17665" key="FAB-4479" number="4479" project="10002" reporter="jyellick" assignee="jyellick" creator="jyellick" type="10004" summary="Malicious clients may theoretically crash the orderer" priority="3" resolution="10000" status="6" created="2017-06-08 17:35:51.0" updated="2018-07-20 14:13:13.0" resolutiondate="2017-06-09 15:06:45.0" votes="0" watches="1" workflowId="38902" security="10001"> <description><! CDATA Although the orderer makes every effort to validate all user provided data, especially when processing configuration updates, there is a very large attack surface where a specially crafted message _might_ be able to trigger a programming error like a nil pointer dereference, crashing the orderer.  Because the client threads for {{Broadcast}} and {{Deliver}} never have any direct affect on world state (ie writing to the ledger, or updating configuration), they may safely panic at any point, without worry of corrupting the orderer state.  Since these threads may panic without adversely affecting the orderer, these panics should be recovered and logged, instead of being allowed to crash the whole ordering process.  ></description> </Issue>
