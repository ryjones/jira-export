<Action id="70445" issue="46183" author="dongming" type="comment" created="2020-10-06 14:44:49.0" updateauthor="dongming" updated="2020-10-06 14:44:49.0"> <body><! CDATA steps to test: 1. set the peer to generate snapshot at block=20,000  2. send sufficient transactions to add 20,000 blocks to peer ledger  3. kill the peer when the peer is generating the snapshot at block 20,000  4. check the peer log ensure that the snapshot generation has started, but not yet completed  5 wait for 10 min  6. restart the peer, then check the peer log to ensure that the snapshot is automatically generated   Below is the peer log show that the snapshot generation starts but not completed before the restart, and is generated automatically after restart.  Â  ^  34m2020-10-05 17:55:27.873 UTC  kvledger  func1 -> INFO 9825^  0m Generating snapshot channelID=testorgschannel0 lastCommittedBlockNumber=20000 ^  34m2020-10-05 17:55:27.933 UTC  gossip.privdata  StoreBlock -> INFO 9826^  0m  testorgschannel0  Received block  20001  from buffer ^  34m2020-10-05 17:55:27.946 UTC  committer.txvalidator  Validate -> INFO 9827^  0m  testorgschannel0  Validated block  20001  in 13ms ^  34m2020-10-05 17:55:27.950 UTC  kvledger  processSnapshotMgmtEvents -> INFO 9828^  0m commit waiting on snapshot to be generated channelID=testorgschannel0 lastCommittedBlockNumber=20000 ^  34m2020-10-05 18:07:09.498 UTC  nodeCmd  serve -> INFO 001^  0m Starting peer: Version: 2.3.0 Commit SHA: 20eb852 Go version: go1.14.4 OS/Arch: linux/amd64 Chaincode: ... ^  34m2020-10-05 18:07:09.954 UTC  deliveryClient  StartDeliverForChannel -> INFO 01e^  0m This peer will retrieve blocks from ordering service and disseminate to other peers in the organization for channel testorgschannel0 ^  34m2020-10-05 18:07:09.955 UTC  discovery  NewService -> INFO 01f^  0m Created with config TLS: true, authCacheMaxSize: 1000, authCachePurgeRatio: 0.750000 ^  34m2020-10-05 18:07:09.955 UTC  nodeCmd  registerDiscoveryService -> INFO 020^  0m Discovery service activated ^  34m2020-10-05 18:07:09.955 UTC  nodeCmd  serve -> INFO 021^  0m Starting peer with ID= peer0-org1 , network ID= dev , address= peer0-org1:31000  ^  34m2020-10-05 18:07:09.955 UTC  nodeCmd  serve -> INFO 022^  0m Started peer with ID= peer0-org1 , network ID= dev , address= peer0-org1:31000  ^  34m2020-10-05 18:07:09.956 UTC  kvledger  LoadPreResetHeight -> INFO 023^  0m Loading prereset height from path  /var/hyperledger/production/ledgersData/chains  ^  34m2020-10-05 18:07:10.003 UTC  gossip.privdata  StoreBlock -> INFO 024^  0m  testorgschannel0  Received block  20001  from buffer ^  34m2020-10-05 18:07:10.019 UTC  committer.txvalidator  Validate -> INFO 025^  0m  testorgschannel0  Validated block  20001  in 15ms ^  34m2020-10-05 18:07:10.027 UTC  kvledger  processSnapshotMgmtEvents -> INFO 026^  0m commit waiting on snapshot to be generated channelID=testorgschannel0 lastCommittedBlockNumber=20000 ^  34m2020-10-05 18:07:17.044 UTC  kvledger  func1 -> INFO 027^  0m Generated snapshot channelID=testorgschannel0 lastCommittedBlockNumber=20000 ^  34m2020-10-05 18:07:17.101 UTC  kvledger  commit -> INFO 028^  0m  testorgschannel0  Committed block  20001  with 100 transaction(s) in 48ms (state_validation=14ms block_and_pvtdata_commit=17ms state_commit=8ms) commitHash= cd113019333ada8e3f0272a8ea9e1da7dcd625e3883e087b11816498553b7d8f  ^  34m2020-10-05 18:07:17.103 UTC  gossip.privdata  StoreBlock -> INFO 029^  0m  testorgschannel0  Received block  20002  from buffer  ></body> </Action>
