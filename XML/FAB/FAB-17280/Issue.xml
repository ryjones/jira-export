<Issue id="43755" key="FAB-17280" number="17280" project="10002" reporter="caduellery" assignee="caduellery" creator="caduellery" type="10004" summary="Remove CKA_PRIVATE from pubkeyT to broaden compatibility with HSMs" priority="3" resolution="10000" status="6" created="2019-12-17 18:05:51.0" updated="2019-12-18 12:02:43.0" resolutiondate="2019-12-18 12:02:43.0" votes="0" watches="1" workflowId="57607"> <description><! CDATA I was trying to integrate fabric-ca with an HSM, but right at the key pair generation function I was getting the error "*0x13: CKR_ATTRIBUTE_VALUE_INVALID*" ( ^fabric-ca-hsm.log  attached).  Fiddling with the templates passed on to the keypair generating function, I've found that commenting out the line #217 (*CKA_PRIVATE, false*) from fabric/bccsp/pkcs11.go the problem doesn't occur and the key pair is correctly generated by the HSM. So, with this line commented out, the attribute assumes a default value of *true* on my HSM. For some reason it doesn't accept the template of the public key being set with "CKA_PRIVATE=false".  At first seems weird to have a public key with an attribute called "PRIVATE" set true. But searching about this topic, I've found that CKA_PRIVATE isn't the attr that defines a private key as stated in: # The  4.4 Storage Objects|http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/errata01/os/pkcs11-base-v2.40-errata01-os-complete.html#_Toc441755768  section of Cryptoki Base Specification: ??_"When the CKA_PRIVATE attribute is CK_TRUE, a user may not access the object *until the user has been authenticated* to the token."_?? # The  4.9 Private key objects|http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/errata01/os/pkcs11-base-v2.40-errata01-os-complete.html#_Toc441755782  section: ??_"The CKA_ALWAYS_AUTHENTICATE attribute can be used to force re-authentication (i.e. force the user to provide a PIN) for each use of a private key. “Use” in this case means a cryptographic operation such as sign or decrypt. This attribute may only be set to CK_TRUE *when CKA_PRIVATE is also CK_TRUE*."_??  So it seems that if *any* storage object is set with CKA_PRIVATE=CK_TRUE, only an authenticated HSM/Token user can access this object. Doesn't matter if an object is a *private key* or a *public key*, the Cryptoki specification considers CKA_PRIVATE as a common Storage Object attribute that defines a kind of access level a user may have to that object.  There is another attribute that defines if a key object is the public or private member of a pair, and this is the *CKA_CLASS* attr, that may have the values of *CKO_PUBLIC_KEY*, *CKO_PRIVATE_KEY* or *CKO_SECRET_KEY*.  Saw that the FAB-5407 issue was about changing the CKA_PRIVATE attr from "true" to "false" for compatibility with another HSM. At that time the reporter mention that commenting out the line does work for his HSM too. *So, what about remove this line for broader compatibility with HSMs?* Also, the  Cryptoki specification reference implementation for the pubkey template|http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/errata01/os/pkcs11-base-v2.40-errata01-os-complete.html#_Toc441755812http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/errata01/os/pkcs11-base-v2.40-errata01-os-complete.html#_Toc441755812  doesn't have an CKA_PRIVATE defined.  Tested this change with SoftHSMv2 and there is no impact too.  ></description> </Issue>
