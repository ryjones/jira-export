<Issue id="28873" key="FAB-9145" number="9145" project="10002" reporter="sykesm" creator="sykesm" type="10004" summary="Data races when running TestDisconnectAndDisableEndpoint" priority="4" resolution="10002" status="6" created="2018-03-26 13:49:02.0" updated="2018-12-04 21:35:07.0" resolutiondate="2018-12-04 21:35:07.0" votes="0" watches="3" workflowId="35650"> <description><! CDATA Three data races are reported when running TestDisconnectAndDisableEndpoint. {code:java} WARNING: DATA RACE Read at 0x00c42050a280 by goroutine 41:   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:113 +0x40   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint.func6()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:718 +0x38  Previous write at 0x00c42050a280 by goroutine 65:   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).afterConnect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:169 +0x2ca   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).connect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:153 +0x861   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:114 +0x106   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint.func9()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:742 +0x38{code} The first is a data race between an unlocked read on {{conn}} in {{doAction}} and a locked set in {{afterConnect}} where the connection object is setup. As I commented in FAB-9144, the locking strategy here, in general, is suspect...  The second {code:java} WARNING: DATA RACE Read at 0x000004e3c850 by goroutine 41:   github.com/hyperledger/fabric/core/comm.(*connProducer).NewConnection()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/comm/producer.go:66 +0x1e9   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).connect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:139 +0xe4   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:114 +0x106   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint.func6()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:718 +0x38  Previous write at 0x000004e3c850 by goroutine 26:   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint.func1()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:696 +0x3a   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:749 +0x8a0   testing.tRunner()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d{code} is a race between an unlocked read of {{EndpointDisableInterval}} in {{NewConnection}} and an unlocked reset of the package scoped global variable in the test.  And a third shows up in the test {code:java} WARNING: DATA RACE Write at 0x00c420416030 by goroutine 22:   github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*csAttempt).recvMsg()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:503 +0xcbc   github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*clientStream).RecvMsg()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:384 +0x66   github.com/hyperledger/fabric/protos/orderer.(*atomicBroadcastDeliverClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/ab.pb.go:529 +0x82   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv.func1()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:62 +0xfb   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:133 +0x53   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint.func5()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:719 +0x38  Previous write at 0x00c420416030 by goroutine 59:   github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*csAttempt).recvMsg()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:503 +0xcbc   github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*clientStream).RecvMsg()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:384 +0x66   github.com/hyperledger/fabric/protos/orderer.(*atomicBroadcastDeliverClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/protos/orderer/ab.pb.go:529 +0x82   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv.func1()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:62 +0xfb   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:133 +0x53   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b   github.com/hyperledger/fabric/core/deliverservice.TestDisconnectAndDisableEndpoint.func8()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:743 +0x38{code} This is a race caused by concurrent calls to Recv on the stream. This looks like a misuse of the client and the second call isn't necessary.  ></description> </Issue>
