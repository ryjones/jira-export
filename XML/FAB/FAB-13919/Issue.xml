<Issue id="37184" key="FAB-13919" number="13919" project="10002" reporter="mghasletwala" creator="mghasletwala" type="10004" summary="Peer commits transaction even if storage location is not available" priority="2" resolution="10203" status="6" created="2019-01-28 11:08:49.0" updated="2019-01-31 22:10:54.0" resolutiondate="2019-01-29 14:27:31.0" votes="0" watches="5" workflowId="48765"> <description><! CDATA Test Scenario - To observe behavior of Peer container when its externally mounted ledger storage location is not available (simulate file system failure) Expectation - Endorsement or Commit should fail at Peer as ledger storage location is inaccessible Observation - Case I - when storage location is made inaccessible - Transaction endorsement is successful - Block commit is successful - GetBlockByNumber fails with message  "Failed to get block number 100, error error opening block file /var/hyperledger/production/ledgersData/chains/chains/mychannel/blockfile_000000: open /var/hyperledger/production/ledgersData/chains/chains/mychannel/blockfile_000000: no such file or directory"  - No error log in Peer but the error is returned as part of  response: status:500   Case II - after the store location is restored - Transaction endorsement is successful - Block commit is successful - GetBlockByNumber fails with message  "Failed to get block number 100, error error decoding varint with proto.Buffer: unexpected EOF"  - For block with transaction post restoration GetBlockByNumber fails with message  "Failed to get block number 106, error error peeking  -28848  bytes from block file: bufio: negative count"   - No error log in Peer but the error is returned as part of  response: status:500   Case III - after Peer is restarted - Blocks are synced from Orderer and Peer works normally  =====Log Reference Details===== Note - Some content in log files is masked  Peer Log Important Timestamps (peer1org1_Part1.log) ============================= 2019-01-25 15:28:03.786 ... retrieveBlockByNumber() - blockNum =  99   >>>> after this we moved the ledger files 2019-01-25 15:42:57.088 >>> new transaction for endorsement  2019-01-25 15:42:59.127 >>> Block 100 with the transaction 2019-01-25 15:43:25.084 >>> GetBlockByNumber to fetch Block 100  2019-01-25 15:43:33.961 >>> new transaction for endorsement  2019-01-25 15:43:35.991 >>> Block 101 with the transaction 2019-01-25 15:43:55.414 >>> GetBlockByNumber to fetch Block 101  ... more transactions  2019-01-25 15:47:24.830 >>> new transaction for endorsement  2019-01-25 15:47:26.855 >>> Block 105 with the transaction 2019-01-25 15:48:38.535 >>> GetBlockByNumber to fetch Block 105  Restore the ledger files 2019-01-25 15:56:31.151 >>> GetBlockByNumber to fetch Block 100 2019-01-25 15:59:31.523 >>> GetBlockByNumber to fetch Block 104  2019-01-25 16:01:13.192 >>> new transaction for endorsement  2019-01-25 16:01:15.224 >>> Block 106 with the transaction 2019-01-25 16:04:17.762 >>> GetBlockByNumber to fetch Block 106  Client Important Timestamps (putty-all.log) =========================== 2019-01-25 15:28:03.745 >>> Call from CLI to fetch Block 99 2019-01-25 15:28:03.782 >>> Block 99 details  2019-01-25 15:43:25.046 >>> Call from CLI to fetch Block 100 2019-01-25 15:43:25.082 >>> endorsement error from peer "response: status:500"  2019-01-25 15:48:38.492 >>> Call from CLI to fetch Block 105 2019-01-25 15:48:38.533 >>> endorsement error from peer "response: status:500"  After Restore the ledger files 2019-01-25 15:56:31.111 >>> Call from CLI to fetch Block 100 2019-01-25 15:56:31.149 >>> endorsement error from peer "response: status:500"  2019-01-25 15:59:31.483 >>> Call from CLI to fetch Block 104 2019-01-25 15:59:31.521 >>> endorsement error from peer "response: status:500"  2019-01-25 16:04:17.722 >>> Call from CLI to fetch Block 106 2019-01-25 16:04:17.759 >>> endorsement error from peer "response: status:500"  Peer Log post Restart ============= After couple of days we restarted the peer (peer1org1_Part2.log) 2019-01-28 06:33:01.078 >>> Peer syncs Block 100-106 from Orderer  ></description> </Issue>
