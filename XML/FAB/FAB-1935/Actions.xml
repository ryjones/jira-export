<Action id="20619" issue="14437" author="manish-sethi" type="comment" created="2017-01-30 12:01:55.0" updateauthor="manish-sethi" updated="2017-01-30 12:04:26.0"> <body><! CDATA Introduce two configurations enableHashing and maxDegree. If the `hashingEnabled` is set to true, a merkle tree is built of the hashes over the read-set of a range query.  The mental model of the tree can be as below: All the results are treated as leaf nodes (level 0) of the tree. Next up level of the tree is built by collecting 'maxDegree + 1' items from the previous level and hashing the entire collection. Further upper levels of the tree are built in similar manner however the only difference is that unlike level-0 (where collection consists of raw KVReads), collection at level 1 and above, consists of the hashes of the collection of previous level. This is repeated until we reach at a level where we are left with the number of items less than or equals to `maxDegree`. In the last collection, the number of items can be less than 'maxDegree' (except if this is the only collection at the given level).  As a result, if the number of total input results are less than or equals to 'maxDegree', no hashing is performed at all. And the final output of the computation is either the collection of raw results (if less that or equals to 'maxDegree') or a collection of hashes (that or equals to 'maxDegree') at some level in the tree.  During validation, re-execute the range query and start building the merkle tree incrementally. As the first miss-match is detected between the two hashes (constructed during simulation and constructed during validation), the transaction is marked as invalid.  ></body> </Action>
