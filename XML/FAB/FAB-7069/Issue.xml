<Issue id="24416" key="FAB-7069" number="7069" project="10002" reporter="wlahti" creator="wlahti" type="10002" summary="Filtering blocks in the deliver service" priority="3" resolution="10000" status="6" created="2017-11-21 19:26:20.0" updated="2018-07-20 14:15:00.0" resolutiondate="2018-01-20 08:08:41.0" votes="1" watches="12" workflowId="40560"> <description><! CDATA This analysis and design task is intended to satisfy the requirements of FAB-7088. Please refer to that item for a clear picture of what we're hoping to achieve.   The discussion regarding the filtering of blocks began in FAB-5481. The previous decision to create a new type, FilteredBlock, was made in the context of using the eventhub  (and similarly designed Channel Service) to deliver blocks to clients. Now that the peer will implement deliver, which will be used in place of the eventhub to notify clients on a per channel basis, I'd like to reopen the discussion of how blocks should be filtered in the event that peer wishes to do so.   One relevant piece of implementation detail I'd like to call out is that the deliver service currently sends back a response with the following definition: {code:java} message DeliverResponse { oneof Type { common.Status status = 1; common.Block block = 2; } }{code} The two filtering options that have been proposed so far (via FAB-5481): # use the FilteredBlock proto defined via FAB-5481 and add it as a type to the DeliverResponse # use the same Block proto but filter out fields  ></description> </Issue>
