<Action id="47408" issue="31959" author="yacovm" type="comment" body="My guess is that some of the peers didn&apos;t join the channel and as a result the channel MSP manager can&apos;t locate the channel MSP." created="2018-07-17 12:49:15.0" updateauthor="yacovm" updated="2018-07-17 12:49:15.0"/>
<Action id="47413" issue="31959" author="pankajcheema" type="comment" created="2018-07-17 12:59:57.0" updateauthor="pankajcheema" updated="2018-07-17 13:12:16.0"> <body><! CDATA  ~yacovm All the peers has joined the channel and it still throws same warning & error  EDIT: I thought only anchor peers need to join the channel. But as you said all the peers need to join the channel.  Thanks  ~yacovm   ></body> </Action>
<Action id="56142" issue="31959" author="baohua" type="comment" created="2019-01-24 06:46:00.0" updateauthor="baohua" updated="2019-01-24 06:46:00.0"> <body><! CDATA IMHO, It's unreasonable to force all peers to join the channel.  The correct ways should be to improve the gossip msg handling, especially the unknown peers, which should not waste too much resource, otherwise, it will be easy to trigger DoS.  ></body> </Action>
<Action id="56145" issue="31959" author="yacovm" type="comment" created="2019-01-24 08:24:30.0" updateauthor="yacovm" updated="2019-01-24 08:24:30.0"> <body><! CDATA {quote}IMHO, It's unreasonable to force all peers to join the channel. {quote}    Peers should not gossip with foreign peers (from other organizations) *UNLESS* they share a channel.  This is by design.     ></body> </Action>
<Action id="56152" issue="31959" author="baohua" type="comment" created="2019-01-24 14:51:09.0" updateauthor="baohua" updated="2019-01-24 14:51:23.0"> <body><! CDATA  ~yacovm , the case happens when two orgs joined the same channel, while only part of their peers joined that channel. The other peers will be member of the gossip, but they cannot verify the identities.   And this case is very usual to see.  Two potential solutions: # Enhance the verification process to improve the performance; # Let unjoined peer tell others his special case.  ></body> </Action>
<Action id="56160" issue="31959" author="yacovm" type="comment" created="2019-01-24 15:44:10.0" updateauthor="yacovm" updated="2019-01-24 15:44:10.0"> <body><! CDATA {quote}The other peers will be member of the gossip, but they cannot verify the identities. {quote}    Oh, I see what you mean now - you're saying that a peer in org O1 in channel A that also knows peers from org O2 , will forward alive messages to peers from O2 despite them not being in channel A, and they can't verify the peer's identity, right?  Unfortunately it's kinda of a chicken and egg problem, because you don't know if the other peer from org O2 is in the channel or not, before it tells you about it - but in order for it to tell you about it, it needs to know about you so you should send it a message before.  So, channel membership is built on top of non channel membership. That is actually to be more efficient, and not replicate non channel membership for each channel.    {quote}Enhance the verification process to improve the performance; {quote}    It actually doesn't have any impact on performance since no MSP manager can be found to verify a peer from another org that you don't share a channel with, so it costs nothing - it only prints an annoying message to the logs, but I hope I changed all the places to debug by now.     {quote}Let unjoined peer tell others his special case. {quote} Let it tell what?  ></body> </Action>
<Action id="56178" issue="31959" author="yacovm" type="comment" body="By the way - another option would be to make the peers not in the channel - not see the other peers in the channel (from the same org) by not setting bootstrap peers and only using anchor peers. if the anchor peers are disjoint - the peers of the same org won&apos;t know about each other and won&apos;t tell each other about peers of channels that a subset of peers in the org isn&apos;t part of." created="2019-01-24 18:53:00.0" updateauthor="yacovm" updated="2019-01-24 18:53:00.0"/>
<Action id="56197" issue="31959" author="baohua" type="comment" created="2019-01-25 07:29:04.0" updateauthor="baohua" updated="2019-01-25 07:29:04.0"> <body><! CDATA  ~yacovm , exactly.  These annoying warnings occupy CPU in comparing MSP and signature. When there're lot, it's noticeable.  Besides, i noticed that we enable the cache for valid signatures already, seems can enable caches for invalid signature, too.  Then when a peer join a new channel, he can disable part of (these belong to the org ca certs in that channel) or all of its invalid signature cache.  ></body> </Action>
<Action id="56198" issue="31959" author="yacovm" type="comment" created="2019-01-25 09:22:27.0" updateauthor="yacovm" updated="2019-01-25 09:22:27.0"> <body><! CDATA in case you get a message from a peer you don't share a channel or an organization with, you don't verify any signature, because there is no MSP manager that can do that. You literally iterate over all MSP managers you have and ask each if he knows MSP Foo, and they all say they don't. that's all.  ></body> </Action>
<Action id="56201" issue="31959" author="baohua" type="comment" created="2019-01-25 10:01:19.0" updateauthor="baohua" updated="2019-01-25 10:01:19.0"> <body><! CDATA LGTM and two suggestions: # Use map to improve the performance with lots of such cases; # Do not print stack msg with warning.  ></body> </Action>
