<Issue id="13227" key="FAB-896" number="896" project="10002" reporter="pmullaney" assignee="pmullaney" creator="pmullaney" type="10001" summary="Events support for new nodejs sdk (es6)" priority="2" resolution="10000" status="6" created="2016-10-28 15:14:56.0" updated="2018-07-20 18:54:02.0" resolutiondate="2017-04-21 13:41:41.0" votes="0" watches="6" timeoriginalestimate="144000" timeestimate="144000" workflowId="36576"> <description><! CDATA node.js SDK needs to expose the following events from the Peer to notify client applications of transaction processing results (protots/peer/events.proto):  ``` enum EventType { REGISTER = 0; BLOCK = 1; 	CHAINCODE = 2; 	REJECTION = 3; } ``` - BLOCK: notified when a block has been committed by the Peer in the ledger. event payload has the entire raw block content - CHAINCODE: also known as "custom events", which is defined by chaincode and is also notified when a Block containing transaction(s) processed by that chaincode is committed to the ledger - REJECTION: notified when a transaction is rejected by the Peer validator (eg. failed endorsement policy in VSCC) - REGISTER: not needed for applications, this looks like an internal event to notify the registration of a event by a consumer  The SDK should: - allow application to register listeners to events of the above types, plus a synthetic "Transaction Completed" event with a transaction ID - connect to the event stream (persistent grpc stream) and on receiving an event, decide whether it is of interest to the application based on the event listener registration - when an event of interest to the application has been received from the event stream, produce a JavaScript event object that encapsulates the useful payload (transaction, or error message) and emit to trigger the application event listeners  The event registration and triggering should be per-chain/channel, such that events by the same name (customer events produced by the identical chaincodes deployed to different chain/channels) don't get mixed up across chains.  ></description> </Issue>
