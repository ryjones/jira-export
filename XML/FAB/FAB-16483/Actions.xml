<Action id="63421" issue="42131" author="steveliuu" type="comment" created="2019-08-30 09:13:23.0" updateauthor="steveliuu" updated="2019-08-30 09:13:42.0"> <body><! CDATA It may be configtx.yaml problem. You can try to use this one.  https://jicki.me/fabric,kubernetes/2019/01/21/hyperledger-fabric-1.4-to-k8s/      ></body> </Action>
<Action id="63437" issue="42131" author="ravinayag" type="comment" body="I don&apos;t think so,  because of same configtx.yaml file works with the new channel name." created="2019-08-30 14:36:01.0" updateauthor="ravinayag" updated="2019-08-30 14:36:01.0"/>
<Action id="63465" issue="42131" author="caod" type="comment" body=" ~jyellick  do you think there&apos;s an area where the error messages can be improved for implicit meta policies? Or any ideas on why it was failing in the first place with the default channel name?" created="2019-08-30 19:13:57.0" updateauthor="caod" updated="2019-08-30 19:13:57.0"/>
<Action id="63497" issue="42131" author="jyellick" type="comment" created="2019-09-03 01:10:09.0" updateauthor="jyellick" updated="2019-09-03 01:10:09.0"> <body><! CDATA The client is deliberately/explicitly given a fairly vague error message.  The problem with more specific messages, is that it allows users who are not a member of a channel to do things like probe for membership.  The orderer logs are usually more helpful, in this case, it says that it was trying to process a config message from the client, but that it was rejected, because the client does not satisfy the Writers policy for this channel.  Had this user been authorized to broadcast on the channel, you would have seen a slightly more explicit message indicating that "could not apply config update for existing channel" or something similar.  My strong suspicion is that you are attempting to create a channel which already exists.  Because the orderer detects that the channel already exists, it treats your 'create' as an update, leading to the slightly odd error you see.  Of course error messages can and should be improved.  We had already tackled this particular issue in another path, but that path was for the same user trying to recreate the channel, in this case, it appears the user does not have write access to the extant channel.  ></body> </Action>
<Action id="63564" issue="42131" author="ravinayag" type="comment" created="2019-09-05 11:20:14.0" updateauthor="ravinayag" updated="2019-09-05 11:20:14.0"> <body><! CDATA I have ran this again and took the Orderer logs and console logs for ref. again.   I 'm not sure what you mean by User access, As i was running Admin privileges. My MSP Config for ref.   If you want to have specific user test, Do share those details i can trail this  in my lab.  *orderer Container :*  - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp  *Volumes :*  - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls  *Cli Container :* * CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp    h3. {{+*From Orderer*+}} {quote}{{```}} {{2019-09-05 09:26:05.225 UTC  orderer.common.server  Start -> INFO 005 Starting orderer:}} {{ Version: 1.4.1}} {{ Commit SHA: 87074a7}} {{ Go version: go1.11.5}} {{ OS/Arch: linux/amd64}} {{2019-09-05 09:26:05.225 UTC  orderer.common.server  Start -> INFO 006 Beginning to serve requests}} {{2019-09-05 10:50:22.647 UTC  orderer.common.broadcast  ProcessMessage -> WARN 007  channel: syschannel  Rejecting broadcast of config message from 172.21.0.10:50284 because of error: implicit policy evaluation failed - 0 sub-policies were satisfi ed, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied}} {{2019-09-05 10:50:22.647 UTC  comm.grpc.server  1 -> INFO 008 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=172.21.0.10:50284 grpc.code=OK grpc.call_duration=82.138364ms}} {{2019-09-05 10:50:22.655 UTC  common.deliver  Handle -> WARN 009 Error reading from 172.21.0.10:50282: rpc error: code = Can celed desc = context canceled}} {{2019-09-05 10:50:22.661 UTC  comm.grpc.server  1 -> INFO 00a streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=172.21.0.10:50282 error="rpc error: code = Canceled desc = context canceled" grpc.cod e=Canceled grpc.call_duration=108.539913ms}} {{2019-09-05 10:54:11.617 UTC  orderer.common.broadcast  ProcessMessage -> WARN 00b  channel: syschannel  Rejecting broadcast of config message from 172.21.0.10:50300 because of error: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied}} {{2019-09-05 10:54:11.618 UTC  comm.grpc.server  1 -> INFO 00c streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=172.21.0.10:50300 grpc.code=OK grpc.call_duration=706.89µs}} {{2019-09-05 10:54:11.621 UTC  common.deliver  Handle -> WARN 00d Error reading from 172.21.0.10:50298: rpc error: code = Canceled desc = context canceled}} {{2019-09-05 10:54:11.621 UTC  comm.grpc.server  1 -> INFO 00e streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=172.21.0.10:50298 error="rpc error: code = Canceled desc = context canceled" grpc.code=Canceled grpc.call_duration=49.191268ms}} {{2019-09-05 10:59:13.785 UTC  orderer.common.broadcast  ProcessMessage -> WARN 00f  channel: syschannel  Rejecting broadcast of config message from 172.21.0.10:50312 because of error: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied}} {{2019-09-05 10:59:13.789 UTC  comm.grpc.server  1 -> INFO 012 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=172.21.0.10:50310 error="rpc error: code = Canceled desc = context canceled" grpc.code=Canceled grpc.call_duration=24.702718ms}} {{2019-09-05 11:01:31.884 UTC  comm.grpc.server  1 -> INFO 013 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Broadcast grpc.peer_address=172.21.0.10:50328 grpc.code=OK grpc.call_duration=176.672662ms}} {{2019-09-05 11:01:31.910 UTC  fsblkstorage  newBlockfileMgr -> INFO 014 Getting block information from block storage}} {{2019-09-05 11:01:31.915 UTC  orderer.commmon.multichannel  newChain -> INFO 015 Created and starting new chain appchannel}} {{2019-09-05 11:01:31.922 UTC  comm.grpc.server  1 -> INFO 016 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=172.21.0.10:50326 grpc.code=OK grpc.call_duration=215.381986ms}}{quote} h3.  {{+*From native OS :*+}} h3.  {{ravi@lab:~/hypldgr$ export CHANNEL_NAME1="syschannel"}} {{ravi@lab:~/hypldgr$ export CHANNEL_NAME2="appchannel"}} {{ravi@lab:~/hypldgr$ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME1}} {{2019-09-05 16:19:25.448 IST  common.tools.configtxgen  main -> INFO 001 Loading configuration}} {{2019-09-05 16:19:25.670 IST  common.tools.configtxgen.localconfig  Load -> INFO 002 Loaded configuration: /home/ravi/hypldgr/configtx.yaml}} {{2019-09-05 16:19:25.744 IST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 003 orderer type: solo}} {{2019-09-05 16:19:25.744 IST  common.tools.configtxgen.localconfig  LoadTopLevel -> INFO 004 Loaded configuration: /home/ravi/hypldgr/configtx.yaml}} {{2019-09-05 16:19:25.744 IST  common.tools.configtxgen  doOutputChannelCreateTx -> INFO 005 Generating new channel configtx}} {{2019-09-05 16:19:25.810 IST  common.tools.configtxgen  doOutputChannelCreateTx -> INFO 006 Writing new channel tx}} {{ravi@lab:~/hypldgr$ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID $CHANNEL_NAME1 -asOrg Org1MSP}} {{2019-09-05 16:23:47.457 IST  common.tools.configtxgen  main -> INFO 001 Loading configuration}} {{2019-09-05 16:23:47.526 IST  common.tools.configtxgen.localconfig  Load -> INFO 002 Loaded configuration: /home/ravi/hypldgr/configtx.yaml}} {{2019-09-05 16:23:47.633 IST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 003 orderer type: solo}} {{2019-09-05 16:23:47.633 IST  common.tools.configtxgen.localconfig  LoadTopLevel -> INFO 004 Loaded configuration: /home/ravi/hypldgr/configtx.yaml}} {{2019-09-05 16:23:47.633 IST  common.tools.configtxgen  doOutputAnchorPeersUpdate -> INFO 005 Generating anchor peer update}} {{2019-09-05 16:23:47.634 IST  common.tools.configtxgen  doOutputAnchorPeersUpdate -> INFO 006 Writing anchor peer update}} {{ravi@lab:~/hypldgr$ docker exec cli peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME1 -f ./channel-artifacts/channel-artifacts/channel.tx}} {{2019-09-05 10:54:11.572 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized}} {{Error: got unexpected status: FORBIDDEN -- implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied}} {{ravi@lab:~/hypldgr$}} {{ravi@lab:~/hypldgr$ configtxgen -version}} {{configtxgen:}} {{ Version: 1.4.2}} {{ Commit SHA: c6cc550}} {{ Go version: go1.11.5}} {{ OS/Arch: linux/amd64}} {{ravi@lab:~/hypldgr$ docker exec cli peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME1 -f ./channel-artifacts/channel-artifacts/channel.tx}} {{2019-09-05 10:59:13.760 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized}} {{Error: got unexpected status: FORBIDDEN -- implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission deniedravi@lab:~/hypldgr$}} {{ravi@lab:~/hypldgr$}} {{ravi@lab:~/hypldgr$}} {{ravi@lab:~/hypldgr$}} {{ravi@lab:~/hypldgr$ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME2}} {{2019-09-05 16:30:49.340 IST  common.tools.configtxgen  main -> INFO 001 Loading configuration}} {{2019-09-05 16:30:49.434 IST  common.tools.configtxgen.localconfig  Load -> INFO 002 Loaded configuration: /home/ravi/hypldgr/configtx.yaml}} {{2019-09-05 16:30:49.506 IST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 003 orderer type: solo}} {{2019-09-05 16:30:49.507 IST  common.tools.configtxgen.localconfig  LoadTopLevel -> INFO 004 Loaded configuration: /home/ravi/hypldgr/configtx.yaml}} {{2019-09-05 16:30:49.507 IST  common.tools.configtxgen  doOutputChannelCreateTx -> INFO 005 Generating new channel configtx}} {{2019-09-05 16:30:49.508 IST  common.tools.configtxgen  doOutputChannelCreateTx -> INFO 006 Writing new channel tx}} {{ravi@lab:~/hypldgr$ docker exec cli peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME2 -f ./channel-artifacts/channel-artifacts/channel.tx}} {{2019-09-05 11:01:31.705 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized}} {{2019-09-05 11:01:31.919 UTC  cli.common  readBlock -> INFO 002 Received block: 0}}       {quote}{{*From configtx.yaml :*}}  Organizations:   - &OrdererOrg Name: OrdererOrg ID: OrdererMSP MSPDir: crypto-config/ordererOrganizations/example.com/msp Policies: Readers: Type: Signature Rule: "OR('OrdererMSP.member')" Writers: Type: Signature Rule: "OR('OrdererMSP.member')" Admins: Type: Signature Rule: "OR('OrdererMSP.admin')"  - &Org1 Name: Org1MSP ID: Org1MSP MSPDir: crypto-config/peerOrganizations/org1.example.com/msp Policies: Readers: Type: Signature Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')" Writers: Type: Signature Rule: "OR('Org1MSP.admin', 'Org1MSP.client')" Admins: Type: Signature Rule: "OR('Org1MSP.admin')" AnchorPeers: - Host: peer0.org1.example.com Port: 7051  Channel: &ChannelDefaults Policies: Readers: Type: ImplicitMeta Rule: "ANY Readers" Writers: Type: ImplicitMeta Rule: "ANY Writers" Admins: Type: ImplicitMeta Rule: "MAJORITY Admins" Capabilities: <<: *ChannelCapabilities Profiles:  TwoOrgsOrdererGenesis: <<: *ChannelDefaults Orderer: <<: *OrdererDefaults Organizations: - *OrdererOrg Capabilities: <<: *OrdererCapabilities Consortiums: SampleConsortium: Organizations: - *Org1 TwoOrgsChannel: Consortium: SampleConsortium <<: *ChannelDefaults Application: <<: *ApplicationDefaults Organizations: - *Org1 Capabilities: <<: *ApplicationCapabilities {quote}  ></body> </Action>
<Action id="63987" issue="42131" author="jyellick" type="comment" body="The above orderer logs are incomplete.  Please post (as a file to the description of the JIRA) the complete orderer logs for when your error occurs.  As mentioned above, it seems most likely that this channel already exists." created="2019-09-23 20:14:45.0" updateauthor="jyellick" updated="2019-09-23 20:14:45.0"/>
<Action id="64038" issue="42131" author="ravinayag" type="comment" created="2019-09-24 14:27:01.0" updateauthor="ravinayag" updated="2019-09-24 14:30:05.0"> <body><! CDATA  ~jyellick ,  you right, the channel already exists.. The description of this Jira is to give the right informational verbiage to the operator when the channel already exists.      I'm sharing my complete work environment you can replicate/duplicate at your machine.  console.logs, env.logs and configtx, crypto-config.yaml, docker-compose file.     filename attached to this jira : sample_config_FAB-16483.tar           ></body> </Action>
<Action id="64081" issue="42131" author="jyellick" type="comment" body="I&apos;ve submitted a CR which decorates the error with a little bit more information, saying the channel exists." created="2019-09-24 17:00:24.0" updateauthor="jyellick" updated="2019-09-24 17:00:24.0"/>
