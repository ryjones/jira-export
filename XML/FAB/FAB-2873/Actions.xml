<Action id="21625" issue="15446" author="harsha544" type="comment" body="  ^behave_Output  " created="2017-03-24 12:42:32.0" updateauthor="harsha544" updated="2017-03-24 12:42:32.0"/>
<Action id="21627" issue="15446" author="adnanchoudhury" type="comment" created="2017-03-24 14:23:31.0" updateauthor="adnanchoudhury" updated="2017-03-24 14:23:31.0"> <body><! CDATA 1. What is the commit level/image tag used?  2. Is it working with previous commits?  3. If its reproducable, A "steps to reproduce" would be helpful.   ></body> </Action>
<Action id="21630" issue="15446" author="rameshthoomu" type="comment" created="2017-03-24 16:01:24.0" updateauthor="rameshthoomu" updated="2017-03-24 16:01:24.0"> <body><! CDATA  ~harsha544  Also please provide the environment details as well.. I don't see any errors in CI Behave builds.. https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-behave-x86_64/  We observed this issue in previous commits but this should fix in latest fabric commits.. see the fix here https://gerrit.hyperledger.org/r/#/c/6979/  ></body> </Action>
<Action id="21631" issue="15446" author="harsha544" type="comment" created="2017-03-24 18:21:44.0" updateauthor="harsha544" updated="2017-03-24 18:21:44.0"> <body><! CDATA  ~AdnanChoudhury  So here are the details :-  1) This was tested on latest head code of fabric. 2) Per this https://github.com/hyperledger/fabric/blob/v1.0.0-alpha/bddtests/features/bootstrap.feature, there's no couchdb specific behave-testing done earlier in V1.0.0-alpha. 3) Yes the steps to reproduce would be per following this https://github.com/hyperledger/fabric/tree/v1.0.0-alpha/bddtests . The pip modules were installed --no-cache-dir option using the contents of  this txt file supplied by  ~jeffgarratt      ^requirements.txt      ~rameshthoomu   Here are my environment details :-   1) ARCH -- ppc64le, OS -- Ubuntu 1604 2) Python 2.7.12, pip 9.0.1 3) go version go1.7.4 4)  Docker version 1.12.6, docker-compose version 1.11.2. 5) It is more of a couchdb-testing that's failing, per  ~jeffgarratt  suggestion, I tested behave by increasing *SystemUpWaitTime* value to 8.10.20.40.60.90 intervals of https://github.com/hyperledger/fabric/blob/master/bddtests/features/bootstrap.feature#L283 , but it doesn't pass.  ></body> </Action>
<Action id="21701" issue="15446" author="adnanchoudhury" type="comment" body="Unable to reproduce in x86." created="2017-03-28 19:51:49.0" updateauthor="adnanchoudhury" updated="2017-03-28 19:51:49.0"/>
<Action id="21706" issue="15446" author="harsha544" type="comment" body=" ~AdnanChoudhury  I&apos;ve been hitting couple of issues while trying to setup the env on x86_64, but can you only run this scenario https://github.com/hyperledger/fabric/blob/master/bddtests/features/bootstrap.feature#L283 provided others are commented and kindly help me with O/P along with the scenario.html file that gets created in latest directory of $GOPATH/src/github.com/hyperledger/fabric/bddtests/tmp/ . Thank you !!" created="2017-03-29 02:03:12.0" updateauthor="harsha544" updated="2017-03-29 02:03:12.0"/>
<Action id="21777" issue="15446" author="harsha544" type="comment" created="2017-04-01 12:58:49.0" updateauthor="harsha544" updated="2017-04-01 12:59:04.0"> <body><! CDATA I've recently tested behave ( at that time fabric-commit was pointing at _375ccf1eb56dc74f1c22c5bdff25f531b8724465_) and I've observed that behave test(s) when executed multiple times inside virtualenv passed seamlessly for scenarios listed in line  https://github.com/hyperledger/fabric/blob/master/bddtests/features/bootstrap.feature#L283  of bootstrap.feature only. Enclosing tarball the encloses scenario.html file generate after each run.  Also, I've tested scenarios listed in 281,282,283 of bootstrap.feature and it passed.   ></body> </Action>
<Action id="21856" issue="15446" author="harsha544" type="comment" body="I&apos;ve tried behave on fabric-commit on _942814080f4defef916f56d955a3f4e277739597_ and unfortunately behave is not working, attaching scenario.html." created="2017-04-04 08:20:37.0" updateauthor="harsha544" updated="2017-04-04 08:20:37.0"/>
<Action id="21857" issue="15446" author="harsha544" type="comment" created="2017-04-04 12:54:31.0" updateauthor="harsha544" updated="2017-04-04 12:54:31.0"> <body><! CDATA I've performed the following steps :-   1) make dist-clean 2) make docker 3) Created a new virtualenv, installed the required python modules, and executed behave inside bddtests, and they appear to be passing now. Attaching the passing scenario.html file  ></body> </Action>
<Action id="21861" issue="15446" author="sanchezl" type="comment" body="The fix for https://jira.hyperledger.org/browse/FAB-2908 includes a fix to speedup the couchdb container startup when running outside of Vagrant. " created="2017-04-04 13:38:03.0" updateauthor="sanchezl" updated="2017-04-04 13:38:03.0"/>
<Action id="21864" issue="15446" author="harsha544" type="comment" body="Thanks for the update  ~sanchezl  " created="2017-04-04 14:11:38.0" updateauthor="harsha544" updated="2017-04-04 14:11:38.0"/>
<Action id="22053" issue="15446" author="adnanchoudhury" type="comment" created="2017-04-10 18:52:57.0" updateauthor="adnanchoudhury" updated="2017-04-10 19:24:07.0"> <body><! CDATA In the latest commit level (commit 7984725990fd8227124ab46cb27bed127e699cfc, Sat April 8th) unable to reproduce the issue in a ppc64le platform. Attaching the html that shows passing (file named scenario_passes_step_30.html).   The peer containers and the couch containers show expected behavior, the peers show via log that they were able to connect successfully to its corresponding couchdb container.   {code:java} new_behave_venv) u0017004@sys-86504:~/src/github.com/hyperledger/fabric/bddtests$ docker logs 388f60ee1e1911e7bddf5254008cf8f3_peer1_1  2017-04-10 18:12:25.596 UTC  ledgermgmt  initialize -> INFO 001 Initializing ledger mgmt 2017-04-10 18:12:25.596 UTC  kvledger  NewProvider -> INFO 002 Initializing ledger provider 2017-04-10 18:12:25.599 UTC  kvledger.util  CreateDirIfMissing -> DEBU 003 CreateDirIfMissing  /var/hyperledger/production/ledgersData/ledgerProvider/  2017-04-10 18:12:25.599 UTC  kvledger.util  logDirStatus -> DEBU 004 Before creating dir -  /var/hyperledger/production/ledgersData/ledgerProvider/  does not exist 2017-04-10 18:12:25.600 UTC  kvledger.util  logDirStatus -> DEBU 005 After creating dir -  /var/hyperledger/production/ledgersData/ledgerProvider/  exists 2017-04-10 18:12:25.613 UTC  kvledger.util  CreateDirIfMissing -> DEBU 006 CreateDirIfMissing  /var/hyperledger/production/ledgersData/chains/index/  2017-04-10 18:12:25.613 UTC  kvledger.util  logDirStatus -> DEBU 007 Before creating dir -  /var/hyperledger/production/ledgersData/chains/index/  does not exist 2017-04-10 18:12:25.614 UTC  kvledger.util  logDirStatus -> DEBU 008 After creating dir -  /var/hyperledger/production/ledgersData/chains/index/  exists 2017-04-10 18:12:25.739 UTC  kvledger  NewProvider -> DEBU 009 Constructing CouchDB VersionedDBProvider 2017-04-10 18:12:25.741 UTC  statecouchdb  NewVersionedDBProvider -> DEBU 00a constructing CouchDB VersionedDBProvider 2017-04-10 18:12:25.742 UTC  couchdb  CreateConnectionDefinition -> DEBU 00b Entering CreateConnectionDefinition() 2017-04-10 18:12:25.748 UTC  couchdb  CreateConnectionDefinition -> DEBU 00c Created database configuration  URL= http://couchdb1:5984  2017-04-10 18:12:25.748 UTC  couchdb  CreateConnectionDefinition -> DEBU 00d Exiting CreateConnectionDefinition() 2017-04-10 18:12:25.753 UTC  couchdb  handleRequest -> DEBU 00e Entering handleRequest()  method=GET  url=http://couchdb1:5984/ 2017-04-10 18:12:25.753 UTC  couchdb  handleRequest -> DEBU 00f HTTP Request: GET / HTTP/1.1 | Host: couchdb1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Accept-Encoding: gzip |  |  2017-04-10 18:12:25.762 UTC  couchdb  handleRequest -> WARN 010 Retrying couchdb request in 125ms. Attempt:1  Error:Get http://couchdb1:5984/: dial tcp 172.26.0.6:5984: getsockopt: connection refused 2017-04-10 18:12:25.890 UTC  couchdb  handleRequest -> WARN 011 Retrying couchdb request in 250ms. Attempt:2  Error:Get http://couchdb1:5984/: dial tcp 172.26.0.6:5984: getsockopt: connection refused 2017-04-10 18:12:26.150 UTC  couchdb  handleRequest -> WARN 012 Retrying couchdb request in 500ms. Attempt:3  Error:Get http://couchdb1:5984/: dial tcp 172.26.0.6:5984: getsockopt: connection refused 2017-04-10 18:12:26.657 UTC  couchdb  handleRequest -> WARN 013 Retrying couchdb request in 1s. Attempt:4  Error:Get http://couchdb1:5984/: dial tcp 172.26.0.6:5984: getsockopt: connection refused 2017-04-10 18:12:27.662 UTC  couchdb  handleRequest -> WARN 014 Retrying couchdb request in 2s. Attempt:5  Error:Get http://couchdb1:5984/: dial tcp 172.26.0.6:5984: getsockopt: connection refused 2017-04-10 18:12:29.887 UTC  couchdb  handleRequest -> DEBU 015 Exiting handleRequest() 2017-04-10 18:12:29.887 UTC  couchdb  VerifyConnection -> DEBU 016 VerifyConnection() dbResponseJSON: {"couchdb":"Welcome","version":"2.0.0","vendor":{"name":"The Apache Software Foundation"}}  {code}    {code:java}  ^scenario_passes_step_30.html   {code}    ></body> </Action>
<Action id="22402" issue="15446" author="christopherferris" type="comment" body="ok, if unreproducable now, closing." created="2017-04-14 00:36:35.0" updateauthor="christopherferris" updated="2017-04-14 00:36:35.0"/>
