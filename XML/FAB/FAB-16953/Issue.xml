<Issue id="43015" key="FAB-16953" number="16953" project="10002" reporter="ihormudryy" creator="ihormudryy" type="10004" summary="TLS certificate renewal deadlock after expiry" priority="3" resolution="10002" status="6" created="2019-10-28 16:23:47.0" updated="2020-04-26 04:46:18.0" resolutiondate="2020-04-26 04:46:18.0" votes="0" watches="4" workflowId="56119"> <description><! CDATA I run a fabric network which consists of a single RCA controlled by 'governor' organization and several 'regular' organization with their own ICA:s.  When TLS certificates on orderers get expired it is not possible to renew them as they are embedded into genesis blocks of the channels including system one (client/server certs, admins_certs, root_certs, tls_intermediate_certs, intermediate_certs).  This is a *deadlock* because the update of the channel config is being rejected after the TLS are expired.  When TLS certs are still valid there is no straight-forward solution for their renewal. Org Admin has to make a lot of steps on its own for each channel where MSP organization is added: # Reenroll all the new tls cryptomaterial aside using fabric-ca-client # Fetch channel config using peer cli # Create config update payload with base64 encoded tls certs using configtxgen and configtxlator # Update system config block using peer cli # Replace current node certificates with the new one # Restart orderer  Using an infinite date is not a good option because this is risky and bad practice in case keys get compromised.  IMHOÂ signing TLS cert and signing an enrollment cert by the same CA's root cert is not a good solution. TLS should be signed by a separate root TLS certificate which exists separately on CA node.  ></description> </Issue>
