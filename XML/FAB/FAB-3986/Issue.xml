<Issue id="16821" key="FAB-3986" number="3986" project="10002" reporter="leokotschenreuther" creator="leokotschenreuther" type="10004" summary="Chaincode can&apos;t reach Peer when TLS is on and CORE_PEER_ADDRESSAUTODETECT=true" priority="4" resolution="10000" status="6" created="2017-05-17 17:58:21.0" updated="2018-07-20 14:12:49.0" resolutiondate="2017-06-04 20:15:20.0" votes="0" watches="2" workflowId="38558"> <description><! CDATA I was trying to apply the  e2e example|https://github.com/hyperledger/fabric/tree/master/examples/dchackfest/samples/e2e  to my preexisting Hyperledger setup, especially the TLS settings. I was able to create and join channels and to install chaincode. However, when I was trying to instantiate chaincode, the chaincode container would crash about two seconds after it had started. I attached the chaincode container's log output in a file.  It turned out, I had the environment variable CORE_PEER_ADDRESSAUTODETECT set to "true" in my peers. Removing the variable and setting CORE_PEER_ADDRESS to the actual address (an URL like "peer0.org1.example.com") in the docker-compose network fixed the problem.  From looking at the log file, it seems like the certificates are generated for the full URL and not the actual IP address of the peer (which makes sense since the IP address can change). If CORE_PEER_ADDRESSAUTODETECT is set to true, the peer seems to get his own IP address and pass that one to the chaincode container instead of the full URL.  Is that behavior supposed to be like that or is that a bug?  ></description> </Issue>
