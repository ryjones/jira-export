<Action id="64919" issue="42979" author="angelo.decaro" type="comment" created="2019-10-24 10:49:08.0" updateauthor="angelo.decaro" updated="2019-10-24 10:49:08.0"> <body><! CDATA So, the error message is clearly saying that NodeOU is not enabled and the admin folder is empty. Can you give us a way to reproduce your scenario? Is /etc/hyperledger/fabric/msp pointing to crypto-config/peerOrganizations/aptalkarga.tr/peers/peer0.aptalkarga.tr/msp/? What's inside crypto-config/peerOrganizations/aptalkarga.tr/peers/peer0.aptalkarga.tr/msp/config.yaml?  ></body> </Action>
<Action id="64920" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-24 11:00:45.0" updateauthor="hakan.eryargi" updated="2019-10-24 11:00:45.0"> <body><! CDATA  ~angelo.decaro  where does it saying _NodeOU is not enabled_?  below is the contents of msp/_config.yaml_ {code:java} raft@CPX-A19YRWYW4YK:~/PIVT/network/fabric-kube/samples/simple$ cat crypto-config/peerOrganizations/aptalkarga.tr/peers/peer0.aptalkarga.tr/msp /config.yaml NodeOUs: Enable: true ClientOUIdentifier: Certificate: cacerts/ca.aptalkarga.tr-cert.pem OrganizationalUnitIdentifier: client PeerOUIdentifier: Certificate: cacerts/ca.aptalkarga.tr-cert.pem OrganizationalUnitIdentifier: peer {code} For reproducing, you can try to run any sample in our  Git repo|https://github.com/APGGroeiFabriek/PIVT . it just runs with cryptogen 1.4.1 and 1.4.2 but fails with 1.4.3  I guess you can also run any Fabric provided sample.  ></body> </Action>
<Action id="64921" issue="42979" author="hakan.eryargi" type="comment" body="And yes, _/etc/hyperledger/fabric/msp/_ got contents from _aptalkarga.tr/peers/peer0.aptalkarga.tr/msp/_" created="2019-10-24 11:26:32.0" updateauthor="hakan.eryargi" updated="2019-10-24 11:26:32.0"/>
<Action id="64925" issue="42979" author="angelo.decaro" type="comment" created="2019-10-24 12:14:40.0" updateauthor="angelo.decaro" updated="2019-10-24 12:16:11.0"> <body><! CDATA so, how can your scenario happening? The code speaks clearly {code:java} fabric/msp/mspimplsetup.go  func (msp *bccspmsp) setupAdminsV143(conf *m.FabricMSPConfig) error { 	// make and fill the set of admin certs (if present) 	if err := msp.setupAdminsPreV143(conf); err != nil { 		return err 	}  	if len(msp.admins) == 0 && (!msp.ouEnforcement || msp.adminOU == nil) { 		return errors.New("administrators must be declared when no admin ou classification is set") 	}  	return nil } {code}   ></body> </Action>
<Action id="64926" issue="42979" author="hakan.eryargi" type="comment" body="can you please just run cryptogen 1.4.3 and see yourself admincerts folder is empty? :)" created="2019-10-24 12:21:26.0" updateauthor="hakan.eryargi" updated="2019-10-24 12:21:26.0"/>
<Action id="64927" issue="42979" author="angelo.decaro" type="comment" body="Are you using commit: b8c4a6aa7da1deac0672e3bc54d429172ace9016 for v1.4.3?" created="2019-10-24 12:22:43.0" updateauthor="angelo.decaro" updated="2019-10-24 12:22:43.0"/>
<Action id="64929" issue="42979" author="angelo.decaro" type="comment" created="2019-10-24 12:24:19.0" updateauthor="angelo.decaro" updated="2019-10-24 12:24:19.0"> <body><! CDATA Oh, here is the issue, your configuration does not tell the MSP how to classify administrator. The configuration is missing the admin subsection {code:java} AdminOUIdentifier: Certificate: cacerts/ca.org1.example.com-cert.pem OrganizationalUnitIdentifier: admin {code}   ></body> </Action>
<Action id="64930" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-24 12:25:21.0" updateauthor="hakan.eryargi" updated="2019-10-24 12:25:21.0"> <body><! CDATA yes, downloaded from https://hyperledger-fabric.readthedocs.io/en/release-1.4/install.html  {code:java} raft@CPX-A19YRWYW4YK:~/cryptogen version cryptogen: Version: 1.4.3 Commit SHA: b8c4a6a <<<<---- Go version: go1.11.5 OS/Arch: linux/amd64 {code}  just try it yourself please!  ></body> </Action>
<Action id="64931" issue="42979" author="angelo.decaro" type="comment" body="and cryptogen generates that configuration. Look at common/tools/cryptogen/msp/generator.go line 262" created="2019-10-24 12:26:09.0" updateauthor="angelo.decaro" updated="2019-10-24 12:26:09.0"/>
<Action id="64932" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-24 12:28:56.0" updateauthor="hakan.eryargi" updated="2019-10-24 12:29:58.0"> <body><! CDATA sorry which configuration is that? _crypto-config.yaml_ is the configuration file for _cryptogen_, and it doesnt have such a thing to my knowledge     _msp/config.yaml_ is created by cryptogen itself  ></body> </Action>
<Action id="64933" issue="42979" author="angelo.decaro" type="comment" body="but the msp/config.yaml you posted is missing the admin subsection. So, the error you see is caused by the content of msp configuration and this is expected behaviour. That configuration was generated by previous version of cryptogen." created="2019-10-24 12:32:44.0" updateauthor="angelo.decaro" updated="2019-10-24 12:32:44.0"/>
<Action id="64934" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-24 12:37:24.0" updateauthor="hakan.eryargi" updated="2019-10-24 12:37:24.0"> <body><! CDATA ah right, it was created by older cryptogen, here is the config.yaml by 1.4.3   {code:java} raft@CPX-A19YRWYW4YK:~/PIVT/network/fabric-kube$ cat samples/simple/crypto-config/peerOrganizations/aptalkarga.tr/peers/peer0.aptalkarga.tr/msp/config.yaml NodeOUs: Enable: true ClientOUIdentifier: Certificate: cacerts/ca.aptalkarga.tr-cert.pem OrganizationalUnitIdentifier: client PeerOUIdentifier: Certificate: cacerts/ca.aptalkarga.tr-cert.pem OrganizationalUnitIdentifier: peer AdminOUIdentifier: Certificate: cacerts/ca.aptalkarga.tr-cert.pem OrganizationalUnitIdentifier: admin OrdererOUIdentifier: Certificate: cacerts/ca.aptalkarga.tr-cert.pem OrganizationalUnitIdentifier: orderer {code}  still no admincerts!  {code:java} raft@CPX-A19YRWYW4YK:~/PIVT/network/fabric-kube$ tree samples/simple/crypto-config/peerOrganizations/aptalkarga.tr/peers/peer0.aptalkarga.tr/ms p/ samples/simple/crypto-config/peerOrganizations/aptalkarga.tr/peers/peer0.aptalkarga.tr/msp/ ├── admincerts ├── cacerts │   └── ca.aptalkarga.tr-cert.pem ├── config.yaml ├── keystore │   └── 5520e62fad16ac005b24250f120b41661d6df3d92ce66f982df418c375683ddd_sk ├── signcerts │   └── peer0.aptalkarga.tr-cert.pem └── tlscacerts └── tlsca.aptalkarga.tr-cert.pem  5 directories, 5 files  {code}  just try it yourself please!!   ></body> </Action>
<Action id="64957" issue="42979" author="angelo.decaro" type="comment" body="and that&apos;s okay, now the peer knows that admins can be recognised by looking at their OU. Indeed, if you look at the output of cryptogen, the administrators&apos; cert has *admin* as one of their OU." created="2019-10-24 14:42:28.0" updateauthor="angelo.decaro" updated="2019-10-24 14:43:06.0"/>
<Action id="64970" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-24 16:15:55.0" updateauthor="hakan.eryargi" updated="2019-10-24 16:15:55.0"> <body><! CDATA ah, okay, so we need to provide _msp/config.yaml_ also to peer. now makes sense.  thanks for clarification, wrong alert, closing the issue  ></body> </Action>
<Action id="64972" issue="42979" author="siddjain" type="comment" created="2019-10-24 16:51:41.0" updateauthor="siddjain" updated="2019-10-24 16:51:41.0"> <body><! CDATA {quote}and that's okay, now the peer knows that admins can be recognised by looking at their OU. Indeed, if you look at the output of cryptogen, the administrators' cert has *admin* as one of their OU. {quote} no its not okay. Its not okay because even though administrator's cert has OU=admin in it, the Fabric backend is not setup to recognize that OU. See this task which is still pending: https://jira.hyperledger.org/browse/FAB-16376  Anyway and nevertheless, one would expect cryptogen to also populate the admincerts folder. For one, it maintains backward compatibility. This is a minor release so backward compatibility must be maintained.  This ticket ought to be reopened.  ></body> </Action>
<Action id="64974" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-24 16:57:47.0" updateauthor="hakan.eryargi" updated="2019-10-24 16:57:47.0"> <body><! CDATA {quote}Anyway and nevertheless, one would expect cryptogen to also populate the admincerts folder. For one, it maintains backward compatibility. This is a minor release so backward compatibility must be maintained. {quote}    ~siddjain  agree!  ></body> </Action>
<Action id="64975" issue="42979" author="siddjain" type="comment" body="also created this bug affecting cryptogen 1.4.3: https://jira.hyperledger.org/browse/FAB-16936" created="2019-10-24 16:59:34.0" updateauthor="siddjain" updated="2019-10-24 16:59:34.0"/>
<Action id="64997" issue="42979" author="angelo.decaro" type="comment" body="But  FAB-16376 is done, it is not related to cryptogen.  ~denyeart , what do you think?" created="2019-10-25 13:03:23.0" updateauthor="angelo.decaro" updated="2019-10-25 13:03:23.0"/>
<Action id="65024" issue="42979" author="denyeart" type="comment" body="FAB-16376 is merged in release-1.4, not yet in master. Regardless, cryptogen is not a production utility, it is a test utility. It was updated in v1.4.3 to test the new admin OU support - to test the admin OU support you must not have a cert in admincerts directory so that you can know that the admin OU is working. Closing." created="2019-10-28 10:47:44.0" updateauthor="denyeart" updated="2019-10-28 10:47:44.0"/>
<Action id="65031" issue="42979" author="hakan.eryargi" type="comment" body=" ~denyeart  is there an issue about using cryptogen for production? I found it handy for creating initial certificates." created="2019-10-28 12:43:57.0" updateauthor="hakan.eryargi" updated="2019-10-28 12:43:57.0"/>
<Action id="65043" issue="42979" author="siddjain" type="comment" body=" ~hakan.eryargi  I am also experimenting with using cryptogen to generate initial certificates. I started using this tool only recently. Do you know if there is a way to customize the attributes of the X.509 certificate generated by cryptogen? E.g., by default cryptogen generates a certificate with `C=US, ST=California, L=San Francisco`. How can I change these to something else?" created="2019-10-28 17:19:06.0" updateauthor="siddjain" updated="2019-10-28 17:19:06.0"/>
<Action id="65046" issue="42979" author="denyeart" type="comment" body=" ~hakan.eryargi   ~siddjain  You have no control over what cryptogen generates beyond the few things in crypto-config.yaml. This is why it is intended to be used for simple tests but not actual production usage." created="2019-10-28 19:04:36.0" updateauthor="denyeart" updated="2019-10-28 19:04:36.0"/>
<Action id="65068" issue="42979" author="hakan.eryargi" type="comment" created="2019-10-29 09:12:13.0" updateauthor="hakan.eryargi" updated="2019-10-29 09:12:13.0"> <body><! CDATA  ~denyeart  to my knowledge, cryptogen is the most convenient tool for now to create the initial certificates.  I dont want to create the certificates manually, nor want to write some scripts for certificate creation. Maybe cryptogen is not intended for this purpose but best option for now, especially if you dont need additional stuff in certificates.  So, if there is no *real* issue with it, like a security threat or whatever, we plan to go production with that.   It will also be nice if cryptogen is even more developed to cover other needs too :)   ></body> </Action>
