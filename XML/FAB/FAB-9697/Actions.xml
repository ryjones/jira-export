<Action id="43623" issue="29662" author="mastersingh24" type="comment" created="2018-04-29 08:57:00.0" updateauthor="mastersingh24" updated="2018-04-30 07:51:06.0"> <body><! CDATA  ~arman19940326  Instead of specifying {{127.0.0.1:7051}} as the address, you should specify {{localhost:7051}}. The error you are getting is telling you that the TLS server cert for {{peer0.org2.example.com}}  does not have an IP SAN (meaning that the cert says it is for peer0.org2.example.com or localhost but not for 127.0.0.1) so hostname verification at the TLS layer fails.  ></body> </Action>
<Action id="43647" issue="29662" author="mastersingh24" type="comment" body=" ~arman19940326  Feel free to reopen this if you believe there is still some type of bug or issue" created="2018-04-30 07:53:46.0" updateauthor="mastersingh24" updated="2018-04-30 07:53:46.0"/>
<Action id="44105" issue="29662" author="arman19940326" type="comment" body="I didn&apos;t specify anything with IP address. I set up a DNS server to be able to use FQDNs. FYI I did a &quot;grep -nr &quot;127.0.0.1&quot; in the balance transfer directory and to spot where the IP address &quot;127.0.0.1&quot; is used. It appears only in &quot;artifacts/channel/configtx.yaml&quot; line 131. I didn&apos;t use any kafka broker in my implementation and only used the default keys and certs. I don&apos;t know why I keep getting that warning before installing and instantiating the chaincode." created="2018-05-09 08:19:58.0" updateauthor="arman19940326" updated="2018-05-09 08:19:58.0"/>
<Action id="64182" issue="29662" author="jgdomine" type="comment" created="2019-09-27 15:01:44.0" updateauthor="jgdomine" updated="2019-09-27 15:01:44.0"> <body><! CDATA Hi,  Did you solve this  ~arman19940326 ? I've got the exact same problem with a real ip and not localhost.  I'm also not defining this IP anywhere as my certificates are made to work with the DNS system of Kubernetes.  I don't understand why it's looking to check an IP instead of a name... Especially because when I use cryptogen, I don't see the problem.  Question: what is the version of fabric you were using at that moment? Personally I've just moved to 1.4.2  ></body> </Action>
<Action id="64184" issue="29662" author="arman19940326" type="comment" created="2019-09-27 15:35:55.0" updateauthor="arman19940326" updated="2019-09-27 15:35:55.0"> <body><! CDATA Hi,   Yes, I solved this problem a long tine ago.  ~mastersingh24  was right about the certs. In crypto-config.yaml file I changed the SANs section like this: {quote}PeerOrgs: - Name: Org1 Domain: org1.example.com CA: Hostname: ca Template: Count: 2 SANS:  - "\{{.Hostname}}-org1-example-com" Users: Count: 1 {quote} It might seem a bit confusing. In our Kubernetes cluster, we had to change the dots to dashes in service names. (peer0.org1.example.com ---> peer0-org1-example-com)   In network config file we override the target name so that the node server can communicate with the fabric network when TLS is enabled: {quote}peers: peer0-org1-example-com: # this URL is used to send endorsement and query requests url: grpcs://peer0-org1-example-com:7051  # this URL is used to connect the EventHub and registering event listeners eventUrl: grpcs://peer0-org1-example-com:7053  grpcOptions: ssl-target-name-override: peer0-org1-example-com tlsCACerts: path: ../Balance-Base/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt {quote} We did the same for all peers and orderers to be able to solve the issue.     And about the Fabric version I think it was v1.1.      ></body> </Action>
<Action id="64199" issue="29662" author="jgdomine" type="comment" created="2019-09-30 07:28:26.0" updateauthor="jgdomine" updated="2019-09-30 07:53:42.0"> <body><! CDATA Hi,  Thank you for your quick reply.  I'm also deploying on Kubernetes and had the same problem as you regarding the dash vs dots. I ended up doing the same naming convention as you :)  I'm in a slightly different situation as I'm not using cryptogen but the CA to generate the certificates. With cryptogen though, everything works fine and I don't need to provide any SAN since I'm using the names of the K8S services.  What I do not understand is why I have this issue when I use the CA and not cryptogen...  Besides I already have peer0-org1-example-com as a SAN in my peers certificates so I don't know what else to do. I don't want to add an IP as a SAN, especially because it changes after each deployment in K8S...  I know this bug has been closed but I'm not sure I should create a ticket for this...  ~mastersingh24 , would you have any insight as to why and how to solve my problem?  Thank you  ></body> </Action>
<Action id="64200" issue="29662" author="arman19940326" type="comment" created="2019-09-30 08:32:39.0" updateauthor="arman19940326" updated="2019-09-30 08:32:39.0"> <body><! CDATA I did consider  and am still considering  using the CA to issue certificates for peers and orderers but never actually tried to implement it. So I don't know how to fix the problem you're having. Wish I could be of help. Sorry ...  P.S: When I asked this question I wasn't using Kubernetes; I was using just plain Docker with a DNS server to handle host to host communication between containers. But solved the problem the way I described before by editing cryptogen file.  ></body> </Action>
<Action id="64202" issue="29662" author="jgdomine" type="comment" created="2019-09-30 09:33:05.0" updateauthor="jgdomine" updated="2019-09-30 09:33:05.0"> <body><! CDATA I wish you good luck then with that because I've been spending days on the matter and still did not manage to find working configuration...  Thank you for your answers, I'm grateful for the time you took for me  ></body> </Action>
