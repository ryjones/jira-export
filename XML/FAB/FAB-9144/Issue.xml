<Issue id="28872" key="FAB-9144" number="9144" project="10002" reporter="sykesm" creator="sykesm" type="10003" summary="Data race when running TestDisconnect" priority="4" resolution="10000" status="6" created="2018-03-26 13:48:03.0" updated="2018-07-20 14:16:07.0" resolutiondate="2018-07-01 12:23:12.0" votes="0" watches="1" workflowId="41645"> <description><! CDATA {code:java} ================== WARNING: DATA RACE Write at 0x00c42019c138 by goroutine 50:   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).connect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:136 +0x5f   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).doAction()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:114 +0x106   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).try()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:91 +0x18b   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Recv()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:58 +0x7b   github.com/hyperledger/fabric/core/deliverservice.TestDisconnect.func6()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:641 +0x38  Previous write at 0x00c42019c138 by goroutine 41:   github.com/hyperledger/fabric/core/deliverservice.(*broadcastClient).Disconnect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client.go:228 +0x1c7   github.com/hyperledger/fabric/core/deliverservice.TestDisconnect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:665 +0x561   testing.tRunner()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d  Goroutine 50 (running) created at:   github.com/hyperledger/fabric/core/deliverservice.TestDisconnect()       /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/core/deliverservice/client_test.go:640 +0x51b   testing.tRunner()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d  Goroutine 41 (running) created at:   testing.(*T).Run()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:824 +0x564   testing.runTests.func1()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1063 +0xa4   testing.tRunner()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:777 +0x16d   testing.runTests()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:1061 +0x4e1   testing.(*M).Run()       /usr/local/Cellar/go/1.10.3/libexec/src/testing/testing.go:978 +0x2cd   main.main()       _testmain.go:94 +0x22a ================== 2018-06-19 09:38:35.934 EDT  deliveryClient  try -> WARN 073 Got error: rpc error: code = Canceled desc = context canceled , at 1 attempt. Retrying in 10ms 2018-06-19 09:38:36.434 EDT  deliveryClient  try -> WARN 074 Got error: rpc error: code = Canceled desc = context canceled , at 1 attempt. Retrying in 10ms --- FAIL: TestDisconnect (1.62s) testing.go:730: race detected during execution of test{code}    The race is on clearing the endpoint field in connect and Disconnect {code:java} func (bc *broadcastClient) Disconnect(disableEndpoint bool) { logger.Debug("Entering") defer logger.Debug("Exiting") bc.Lock() defer bc.Unlock() if disableEndpoint && bc.endpoint != "" { bc.prod.DisableEndpoint(bc.endpoint) } bc.endpoint = "" // <-- here if bc.conn == nil { return } bc.conn.Close() bc.conn = nil bc.BlocksDeliverer = nil } {code} and {code:java} func (bc *broadcastClient) connect() error { bc.endpoint = "" // <-- conn, endpoint, err := bc.prod.NewConnection() ...{code} There is a lock in the broadcast client but it doesn't seem to be used to protect this field in connect.  ></description> </Issue>
