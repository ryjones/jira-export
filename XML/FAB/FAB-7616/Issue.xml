<Issue id="26613" key="FAB-7616" number="7616" project="10002" reporter="elli-androulaki" assignee="ales" creator="elli-androulaki" type="10001" summary="Extend the identity deduplication mechanism performed prior to policy evaluation to ownership deduplication" priority="3" status="10000" created="2018-01-05 13:19:57.0" updated="2019-08-20 04:00:00.0" votes="0" watches="2" workflowId="35479"> <description><! CDATA *Motiva**tion*  In Fabric v1.0 only one enrollment identity was allowed per user. However there are two legitimate reasons for which in V1.1 it is possible that a user has two valid enrolment identities.  In particular, Fabric CA currently allows that a user obtains more than one enrollment identities to serve two purposes: # Allow the user to renew its identity without compromising the availability of the service itself; especially for the latter purpose, there is a period of time during which both identities are valid # Allow the user to issue enrollment identities with different attributes in them; this means that a user would obtain one or more enrollment identities each time a proof of ownership of different sets of attributes is needed.     Policies often include requests for signatures of t or more parties that satisfy certain criteria, where t>1. Given currently deduplication takes place statically prior to policy evaluation and at the level of identity. This means that a user with two different enrollment identities could still vote twice towards a policy’s evaluation.     *Solution*  The proposed solutions consists of two parts: * Expose an identifier of an identity’s owner in the identity interface (FAB-7278); this identifier needs to have the following properties: ** all enrollment identities of the same user are required to return identical owner identifiers ** anonymous identities are only required to return as “owner identifier” a string that is deterministically generated by the identity itself; no other requirement exists for owner identifier of anonymous identities  * Enhance the deduplication method mentioned above to maintain at most one valid identity of each user appearing in the owners of the identities passed as input at policy evaluation time.      The latter part is the goal of this JIRA. Regarding this task, deduplication at the identity level (not of their owner) is already done statically, but around a signature set (which would change as policies are moved to evaluate over identities instead of signatures): https://github.com/hyperledger/fabric/blob/master/common/cauthdsl/cauthdsl.go#L23-L43     In this JIRA we extend this function to keep only one identity of each user met in the set of identity owners.     ></description> </Issue>
