<Action id="21862" issue="15564" author="greg.haskins" type="comment" body="https://gerrit.hyperledger.org/r/#/c/7681/" created="2017-04-04 13:50:27.0" updateauthor="greg.haskins" updated="2017-04-04 13:50:27.0"/>
<Action id="21863" issue="15564" author="rameshthoomu" type="comment" body=" ~ghaskins  e2e CLI tests are using peer image in CLI container. If not fabric-peer image, which image fulfill CLI container needs. Could you please provide your inputs on how to fix this issue.. Thanks! " created="2017-04-04 13:51:50.0" updateauthor="rameshthoomu" updated="2017-04-04 13:51:50.0"/>
<Action id="21865" issue="15564" author="greg.haskins" type="comment" body="testenv is probably more appropriate" created="2017-04-04 15:06:20.0" updateauthor="greg.haskins" updated="2017-04-04 15:06:20.0"/>
<Action id="22108" issue="15564" author="greg.haskins" type="comment" created="2017-04-11 16:53:15.0" updateauthor="greg.haskins" updated="2017-04-11 16:53:33.0"> <body><! CDATA A better solution is probably to forego the container all together.  I would suggest we consider the following:  # Separate "peer node start" from all the other subcommands so that this is the only function for the "peer" binary. # Create a new binary ("fabric-cli", "fabric-ctl", etc) that implements the other subcommands (chaincode, channel, logging, etc) a)  Should ideally be buildable with minimal dependencies (e.g. "go get ../fabric-cli" should not need anything more than golang 1.7) # Integrate configtxgen into the CLI as a subcommand  ></body> </Action>
<Action id="22782" issue="15564" author="muralisr" type="comment" body=" ~greg.haskins  +1 for 1 and 2... need to think about 3" created="2017-04-20 22:57:47.0" updateauthor="muralisr" updated="2017-04-20 22:58:09.0"/>
