<Issue id="34773" key="FAB-12528" number="12528" project="10002" reporter="wlahti" assignee="skarim" creator="wlahti" type="10003" summary="Update level evaluation to use log spec" priority="3" resolution="10000" status="6" created="2018-10-18 15:01:32.0" updated="2018-10-29 22:02:11.0" resolutiondate="2018-10-29 22:02:11.0" votes="0" watches="2" workflowId="46183"> <description><! CDATA Loggers shouldn't need to be "registered" in order to determine their level. This task will update the Level() logic to evaluate a logger's module name against the current log spec.  Context from the parent item about log specs:  "The log spec is a single string that consists of colon separated tokens. Each token declares a logger name prefix and a optional log level. When the logger name prefix ends with a period, it indicates that the log level should only apply to the logger with the exact name when the trailing period is dropped. When the logger name pattern is omitted, it specifies the default log level. In cases where multiple entries reference the same name pattern or multiple instances of a default are provided, the last specification takes precedence.  When prefixes are evaluated against logger names, the longest match from the spec will be used.  Examples: `info` enables all loggers at the info level `a=debug` enables loggers with names like `a`, `a.b`, or `a.b.c` at the debug level; all other loggers will log at the info level `a.=debug:warn` enables the logger named `a` at the debug level; all other loggers will be at the warn level `a.b=debug:a.b.c.=warn` enables loggers with names that start with `a.b` at the debug level except for the one named `a.b.c` which will log at the warn level. All other loggers will log at the info level. `info:warn` enables all loggers at the warn level `broken` is rejected as an error and the logging configuration is unchanged. If a bad spec is provided as the process is starting, the process will execute with the default log specification of `info`."  ></description> </Issue>
