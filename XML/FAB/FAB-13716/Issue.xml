<Issue id="36840" key="FAB-13716" number="13716" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10003" summary="onboarding block verification support" priority="3" resolution="10000" status="6" created="2019-01-16 21:56:52.0" updated="2019-03-03 12:58:36.0" resolutiondate="2019-01-21 18:46:29.0" votes="0" watches="2" workflowId="48405"> <description><! CDATA Verification of block signature policy is needed for onboarding, but - we face 2 challenges:   * We don't have a chain support, nor a bundle, because onboarding might take place at boot time, before everything else, so we need to track ourselves of committed config blocks and build bundles from them and ensure they replace the older bundles when blocks are committed. * We need to give the block puller the same support it has that the channel config gives in terms of verification of block signature policy with a custom config envelope that is present inside an un-committed batch of blocks: *VerifyBlockSignature(sd   *common.SignedData, envelope *common.ConfigEnvelope)* will build a bundle out of the config envelope if it's not nil, but this code cannot be reused because it resides in the chain support (which isn't built when onboarding runs).  When the OSN detects it has now joined a new channel (dynamic onboarding) - it needs to verify the blocks it pulls but it can only use the genesis block it stored in the ledger (since it has the genesis block from the system channel's chain creation transaction).   ></description> </Issue>
