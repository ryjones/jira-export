<Action id="38552" issue="26790" author="denyeart" type="comment" body=" ~wlahti   ~jeffgarratt  Could you assess?  As this is a peer crash, we&apos;ll want to determine if a fix is possible before alpha release." created="2018-01-13 12:10:51.0" updateauthor="denyeart" updated="2018-01-13 12:15:37.0"/>
<Action id="38696" issue="26790" author="clayton sims" type="comment" body=" ~jeffgarratt   could you let us know your thoughts/assessment here.  thanks" created="2018-01-16 16:49:55.0" updateauthor="clayton sims" updated="2018-01-16 16:49:55.0"/>
<Action id="38705" issue="26790" author="muhammadsalah" type="comment" created="2018-01-16 18:12:23.0" updateauthor="muhammadsalah" updated="2018-01-16 18:12:23.0"> <body><! CDATA This function is what causes the error                     propRespPayload, err := utils.GetProposalResponsePayload(chaincodeActionPayload.Action.ProposalResponsePayload)  I discovered it through old school debugging  !firstshot.png! !secondshot.png!  ></body> </Action>
<Action id="38706" issue="26790" author="muhammadsalah" type="comment" body="!secondshot.png|thumbnail!" created="2018-01-16 18:30:24.0" updateauthor="muhammadsalah" updated="2018-01-16 18:30:24.0"/>
<Action id="38707" issue="26790" author="muhammadsalah" type="comment" created="2018-01-16 18:32:43.0" updateauthor="muhammadsalah" updated="2018-01-16 18:32:43.0"> <body><! CDATA In the python code we bypassed creating a proposal so the function doesn't find propsals !thirdshot.png!  ></body> </Action>
<Action id="38709" issue="26790" author="muhammadsalah" type="comment" body="I think the fix should be a suitable error handling here; in case there is no proposal it should just pop an error and continue." created="2018-01-16 18:34:58.0" updateauthor="muhammadsalah" updated="2018-01-16 18:34:58.0"/>
<Action id="38711" issue="26790" author="muhammadsalah" type="comment" body="I think it&apos;s not a nil proposal, but it&apos;s just a bad one (Sorry for being not fully accurate, but I think problem should be addressed better now)" created="2018-01-16 19:16:36.0" updateauthor="muhammadsalah" updated="2018-01-16 19:16:36.0"/>
<Action id="38714" issue="26790" author="c0rwin" type="comment" body=" ~MuhammadSalah  thanks for providing detailed analysis of the problem, going to add some UT to cover your use cases and provide a patch." created="2018-01-16 21:15:30.0" updateauthor="c0rwin" updated="2018-01-16 21:15:30.0"/>
<Action id="38715" issue="26790" author="muhammadsalah" type="comment" body=" ~C0rWin  I am already trying to work on a fix. I will be sharing what I have." created="2018-01-16 21:18:12.0" updateauthor="muhammadsalah" updated="2018-01-16 21:18:12.0"/>
<Action id="38717" issue="26790" author="muhammadsalah" type="comment" created="2018-01-16 22:14:50.0" updateauthor="muhammadsalah" updated="2018-01-16 22:14:50.0"> <body><! CDATA I have already spotted it Payload is empty  !foundit.png!  ></body> </Action>
<Action id="38721" issue="26790" author="muhammadsalah" type="comment" body="!bypass-fix.png|thumbnail!" created="2018-01-16 23:03:30.0" updateauthor="muhammadsalah" updated="2018-01-16 23:03:30.0"/>
<Action id="38722" issue="26790" author="muhammadsalah" type="comment" body="bypassed it in the getchaincode payload function just added a dummy check." created="2018-01-16 23:04:04.0" updateauthor="muhammadsalah" updated="2018-01-16 23:04:04.0"/>
<Action id="38723" issue="26790" author="muhammadsalah" type="comment" created="2018-01-16 23:08:25.0" updateauthor="muhammadsalah" updated="2018-01-16 23:08:25.0"> <body><! CDATA This is what I exactly did; if you find it sufficing commit it; if not I was just happy to be fiddling :)    // GetChaincodeActionPayload Get ChaincodeActionPayload from bytes func GetChaincodeActionPayload(capBytes   byte) (*peer.ChaincodeActionPayload, error) \{     cap := &peer.ChaincodeActionPayload\{}     err := proto.Unmarshal(capBytes, cap)     if len(capBytes) == 0 \{         return cap, errors.New("No payload")     }     return cap, err }  ></body> </Action>
<Action id="38725" issue="26790" author="c0rwin" type="comment" body=" ~MuhammadSalah  apologize, noticed your answer a bit late, already prepared a fix: https://gerrit.hyperledger.org/r/#/c/16883/ :/, could you please rebase on top of it and make an additional check to see whenever it solves your problem?" created="2018-01-17 00:22:54.0" updateauthor="c0rwin" updated="2018-01-17 00:22:54.0"/>
<Action id="38726" issue="26790" author="c0rwin" type="comment" created="2018-01-17 00:25:19.0" updateauthor="c0rwin" updated="2018-01-17 00:25:19.0"> <body><! CDATA {code} if len(capBytes) == 0 { return cap, errors.New("No payload") } {code}  you could have that one at the beginning before even trying to unmarshal bytes. At any case thanks for your help, this is pretty much exactly what I did + add UT to cover the fix and your particular use case.   ></body> </Action>
<Action id="38727" issue="26790" author="c0rwin" type="comment" body="CR: https://gerrit.hyperledger.org/r/#/c/16883/" created="2018-01-17 00:25:45.0" updateauthor="c0rwin" updated="2018-01-17 00:25:45.0"/>
<Action id="38728" issue="26790" author="muhammadsalah" type="comment" created="2018-01-17 00:26:08.0" updateauthor="muhammadsalah" updated="2018-01-17 00:26:08.0"> <body><! CDATA it is okay; I am thinking actually its way beyond just an empty payload; there has to be a system thats more reselient for malicious actions on the protocol level. But thank you for considering my humble fix.  ></body> </Action>
<Action id="38729" issue="26790" author="muhammadsalah" type="comment" created="2018-01-17 00:29:45.0" updateauthor="muhammadsalah" updated="2018-01-17 00:29:45.0"> <body><! CDATA I just saw what you did there; but I am not familiar with the software architecture yet; I just did it old school backlog trace. :) I was fiddling only a bit.  ></body> </Action>
