<Action id="21335" issue="15025" author="balaji.viswanathan" type="comment" created="2017-03-06 09:30:12.0" updateauthor="balaji.viswanathan" updated="2017-03-06 09:30:12.0"> <body><! CDATA I was looking at this and there seems to be multiple issue with this.  1. Incorrect Null checks. Closes the iterator when more results exist @@ -721,7 +724,7 @@ func (handler *Handler) handleGetStateByRange(msg *pb.ChaincodeMessage) { keysAndValues = append(keysAndValues, &keyAndValue) }  -               if qresult != nil { +               if qresult == nil { rangeIter.Close() handler.deleteQueryIterator(txContext, iterID) } @@ -811,7 +814,7 @@ func (handler *Handler) handleQueryStateNext(msg *pb.ChaincodeMessage) { chaincodeLogger.Errorf("Failed to get query result from iterator. Sending %s", pb.ChaincodeMessage_ERROR) return } -                       if qresult != nil { +                       if qresult == nil { break } @@ -998,7 +1001,7 @@ func (handler *Handler) handleGetQueryResult(msg *pb.ChaincodeMessage) { keysAndValues = append(keysAndValues, &keyAndValue) }  -               if qresult != nil { +               if qresult == nil { executeIter.Close() handler.deleteQueryIterator(txContext, iterID) }   2. How we handle RangeQueries and Rich queries  in core/chaincode/handler.go: handleQueryStateByRange expects QueryResult of type ledger.KV (line: 722) handleGetQueryResult expects QueryResult of type ledger.QueryRecord (line: 999)  However, when used in iterator. The Next() call will land up with handleQueryStateNext()  which will then need to have knowledge of how the iterator was created. The QueryIterator just holds an UUID now and does not contain this information.  It currently handles this as KV (line 820).   Why do we need namespace qualified QueryRecord from ledger when all calls to ledger are qualified with ns?  ></body> </Action>
<Action id="22875" issue="15025" author="christopherferris" type="comment" body="https://gerrit.hyperledger.org/r/#/c/7255/" created="2017-04-23 11:42:31.0" updateauthor="christopherferris" updated="2017-04-23 11:42:31.0"/>
