<Issue id="23839" key="FAB-6911" number="6911" project="10002" reporter="wlahti" creator="wlahti" type="10001" summary="Deliver service for blocks on the peer" priority="3" resolution="10000" status="6" created="2017-11-07 17:37:45.0" updated="2019-01-02 07:25:53.0" resolutiondate="2018-01-11 20:17:02.0" votes="7" watches="13" workflowId="40465"> <description><! CDATA The deliver service, which currently resides solely on the orderer, should be made available on the peer as well. This service can be used for events on a channel level. It will allow for access control as well as requesting information about previously committed blocks (or ones that may have been missed during a network outage/disconnection), two things currently not possible with the eventhub (and ACL of which has been accounted for by the WIP FAB-5695 that this JIRA will hopefully replace).   This will involve * moving the fabric/orderer/common/deliver package to fabric/common/deliver and reworking it to be compatible with both the peer and orderer * exposing the deliver service on the peer  This is doubly useful, in preparation for the addition of BFT ordering, and generally decreasing the trust the client places in the ordering service.  When connecting directly to the orderer to receive blocks, unless the client reimplements the peer functions of checking the hash chain, looking up the block validation policy, and checking the block validation policy against the orderer signatures, then the client is relying on the honesty of the OSN it connects to to return good blocks.  By adding the {{Deliver}} API to the peer, clients may use existing code invoked against the orderer, but exploit the trusted relationship between a client and its org's peers.     Acknowledgement:      originator:  ~jeffgarratt   ></description> </Issue>
