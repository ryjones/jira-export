<Action id="45248" issue="30711" author="odowdaibm" type="comment" created="2018-05-29 15:44:12.0" updateauthor="odowdaibm" updated="2018-05-29 15:44:12.0"> <body><! CDATA Created feature and let  ~isaacwch  know that it's created.   ~SjirNijssen   ~cmgabriel  note that I've created this.  Likewise  ~joe-alewine  and  ~pandrejko !    Issac has done the same for the Transactions topic that we're going to work together.  I will now transfer this feature to Chris G!  Thanks.  ></body> </Action>
<Action id="45249" issue="30711" author="odowdaibm" type="comment" body="Assigned to Chris G, as I&apos;m working the transaction topic with Isaac." created="2018-05-29 15:46:20.0" updateauthor="odowdaibm" updated="2018-05-29 15:46:20.0"/>
<Action id="45251" issue="30711" author="joe-alewine" type="comment" created="2018-05-29 15:48:38.0" updateauthor="joe-alewine" updated="2018-05-29 15:59:24.0"> <body><! CDATA Chaincode is neither a chain nor is it a secret code. Discuss!     ></body> </Action>
<Action id="45252" issue="30711" author="sjirnijssen" type="comment" body="I propose that we describe the full lifecycle of chaincode. Hence let us start with the business requirement, including the scenario&apos;s that can later be used to test the chaincode, expressed in a language that the business professionals understand. Describe every period in the lifecycle of the chaincode and where appropriate use the scenario&apos;s of the business as illustrations. " created="2018-05-29 15:55:29.0" updateauthor="sjirnijssen" updated="2018-05-29 15:55:29.0"/>
<Action id="45255" issue="30711" author="sjirnijssen" type="comment" created="2018-05-29 16:17:14.0" updateauthor="sjirnijssen" updated="2018-05-29 16:17:14.0"> <body><! CDATA I propose to refer to the concept as smart contract and give an extensive description of that concept, using illustrations that decision makers consider relevant. Let us admit that chaincode is used in the church of Fabrica as a synonym for what other people call smart contract. And please let us describe how smart contract relates to the legal concept with the name contract, using convincing illustrations.   Let us describe that chaincode consist primarily of update and retrieve functions. Let us also describe crystal clear what determines the scope of the ledger, said otherwise, which facts (fields) are stored in the chain and which in the world state.   ></body> </Action>
<Action id="45256" issue="30711" author="sjirnijssen" type="comment" created="2018-05-29 16:25:37.0" updateauthor="sjirnijssen" updated="2018-05-29 16:25:37.0"> <body><! CDATA More precise: Let us also describe crystal clear what determines the scope of the ledger, said otherwise, which facts (fields) are stored in the chain and which in the world state. Hence let us answer the question where these fields are defined. My assumption is that it a copied from the union of the JSON of the update functions. _Please correct me if I am wrong_.  ></body> </Action>
<Action id="45257" issue="30711" author="pandrejko" type="comment" body="Just a reminder that chaincode is (also) already defined in the Key Concepts Fabric model at https://hyperledger-fabric.readthedocs.io/en/latest/fabric_model.html#chaincode" created="2018-05-29 16:33:23.0" updateauthor="pandrejko" updated="2018-05-29 16:33:23.0"/>
<Action id="45262" issue="30711" author="sjirnijssen" type="comment" created="2018-05-29 17:07:47.0" updateauthor="sjirnijssen" updated="2018-05-29 17:07:47.0"> <body><! CDATA Let me copy here the definition that Pam refers to.  Chaincode¶  Chaincode is software defining an asset or assets, and the transaction instructions for modifying the asset(s); in other words, it’s the business logic. Chaincode enforces the rules for reading or altering key-value pairs or other state database information. Chaincode functions execute against the ledger’s current state database and are initiated through a transaction proposal. Chaincode execution results in a set of key-value writes (write set) that can be submitted to the network and applied to the ledger on all peers.  I would be in favour of extending the definition in such a way that the reader has a good feeling what this means for his blockchain application system.  Let us agree that chaincode as in Fabric is not restricted to assets as defined in the financial world. The concept chaincode is vastly broader. Hence let us replace the term assets. I propose we include as part of this task the improvement of the definition in the glossary as well. .  ></body> </Action>
<Action id="45647" issue="30711" author="cmgabriel" type="comment" body="In a brief review of the docs there are 45+ references to &apos;chaincode&apos; and less that half of that for &apos;smart contracts&apos;.  Another challenge is that the majority of all online content produced by this project or content that references it also refers (almost) exclusively to &apos;chaincode&apos;.  I propose that we think of smart contracts in terms of client transaction proposals and chaincode for everyting else (system chaincode).   Thoughts?" created="2018-06-07 13:39:47.0" updateauthor="cmgabriel" updated="2018-06-07 13:39:47.0"/>
<Action id="45659" issue="30711" author="joe-alewine" type="comment" created="2018-06-07 15:22:51.0" updateauthor="joe-alewine" updated="2018-06-07 22:06:40.0"> <body><! CDATA My sense of this, and how I'd phrase it, is that smart contracts are one type of chaincode. Specifically, they're user chaincodes that dictate the logic of *business* interactions (ie, interacting with the ledger). These are commonly referred to as "smart contracts", which makes sense given their business focus. But it also accurate to call them "chaincode", since smart contracts are a type of chaincode. These chaincodes are written and maintained by business users.  There are also chaincodes that aren't smart contracts: the system chaincodes that dictate *system* interactions. Writing/maintaining them is mainly the purview of system administrators (and many of them already come with Fabric, unlike smart contract chaincodes).  The concepts/functionality aren't entirely separate in that system chaincodes can and do ensure that the rules specified in smart contracts are carried out (VSCC for example). But I think the point we can lean in is the difference between business interactions and system interactions. I'm probably greying the line here more than I should but I think if we don't find a way to make a distinction we will confuse people. We need to settle this once and for all.  ></body> </Action>
<Action id="45666" issue="30711" author="sjirnijssen" type="comment" body="I support the proposal of Joe wrt the clear disctinction between business interactions and system interactions. But I would like to add that we first focus on business interactions. I also propose that we make crystal clear how the relationship is between a business chaincode and the data structure of the chain and the world state. " created="2018-06-07 19:45:01.0" updateauthor="sjirnijssen" updated="2018-06-07 19:45:01.0"/>
<Action id="45679" issue="30711" author="sjirnijssen" type="comment" created="2018-06-08 07:12:47.0" updateauthor="sjirnijssen" updated="2018-06-08 07:12:47.0"> <body><! CDATA I furthermore propose to describe the semantics of the three functions very clear. As this may be quite different for different countries or states I propose we select The Netherlands as test case. The createCar function means that the car may enter the public roads and that means that the transaction needs to be endorsed by three parties, the DMV, the dealer and the first owner. The function transferCar means that the car is transferred from the current owner to a new owner and that requires the edorsement of the DMV, the current owner and the new owner. The third function scrapCar means that the car may not any longer be used on the public roads and that the transaction proposal needs the endorsement of the scapp company, the current owner and the DMV.  Hence if the three functions are part of one and the same chaincode, how will we solve the challenge that the business requirements require three different sets of endorsers? If the three functions are each part of three separate chaincodes, how can this be done with one and the same ledger as it is assumed that the chaincode specifies the data structure of the ledger?     ></body> </Action>
<Action id="45680" issue="30711" author="sjirnijssen" type="comment" body="And let us not forget that when we have a Fabric network with three orgs, and org1 and org2 are a Java shop and org3 is a Go shop, that the chaincode for the three car functions needs to be in Java for the peers of org1 and org2 and in Go for Org3. It requires elaborate testing  to check that the three different chaincode are for all input the same." created="2018-06-08 07:25:47.0" updateauthor="sjirnijssen" updated="2018-06-08 07:25:47.0"/>
<Action id="45681" issue="30711" author="sjirnijssen" type="comment" body="In the Hyperledger Fabric Model in the Key Concepts section the subsection on Chaincode is too narrowly defined as defining in asset. The power of Fabric is much wider that describing assets that are too often equated with financial assets. " created="2018-06-08 07:37:05.0" updateauthor="sjirnijssen" updated="2018-06-08 07:37:05.0"/>
<Action id="45682" issue="30711" author="sjirnijssen" type="comment" body="Above it is said that smart contract (chaincode) is &quot;written and maintaind by business users&quot;. Often we can learn from history. In 1959 Grace Hopper of the US Navy proposed the COmmon Business Oriented Language, COBOL; it became a standard language for business application in the sixties. In the mid sixties a project was proposed in The Netherlands to have accountants acquire the skill to formulate in COBOL. History: the project was a complete flop. COBOL was much nearer to the world of accountants than Go.  " created="2018-06-08 07:53:14.0" updateauthor="sjirnijssen" updated="2018-06-08 07:53:14.0"/>
<Action id="45683" issue="30711" author="sjirnijssen" type="comment" body="I like the statement of Joe: &quot;We need to settle this once and for all.&quot; Indeed, let us describe the different subtypes of chaincode (and give understandable illustrations) and call the business version of chain code smart contracts. A smart proposal Joe, it has my endorsement. " created="2018-06-08 08:08:10.0" updateauthor="sjirnijssen" updated="2018-06-08 08:08:10.0"/>
<Action id="45738" issue="30711" author="cmgabriel" type="comment" created="2018-06-08 20:58:58.0" updateauthor="cmgabriel" updated="2018-06-08 20:58:58.0"> <body><! CDATA Link to Gerrit:   https://gerrit.hyperledger.org/r/c/22889/      ></body> </Action>
<Action id="45775" issue="30711" author="sjirnijssen" type="comment" created="2018-06-11 08:20:01.0" updateauthor="sjirnijssen" updated="2018-06-11 08:20:01.0"> <body><! CDATA  A few questions that need answers in the chaincode topic. The life cycle of smart contract will usually go through a number of different states.  1. The specifications for the smart contract are written by ... and approved by ...   2. The multi org aspects. When a smart contract is to be used by 3 orgs on channel1, and the three organizations have different policies wrt programmening, org1 will use procedural go, org2 only a declarative subset of go and org3 JavaScript, the developer of the smart contract need to start from the same specifications and testsets.   2a. Who is responsible for the testsets?   2b. How do we distinguish the three different versions of the smart contract?  3. What is the semantics of Initialize a chaincode?   4. Which actor has the power to propose the initialize?  5. Which endorsement policy is used to endorse an initialize?  6. Which actor can install a chaincode on a peer of org1?  7. Is this actor using a transaction proposal?  8. Which endorsement policy is involved with installation?  9. Who is responsible for the approval of the execution of the three test sets?  10. Who can propose the instatiate on channel1 of an installed smart contract on peer1 of org1?  11. Who has the power to give a client app of org1 the power to propose an invoke of a smart contract to an endorser of org2?  12. Who has the power to update the smart contract?  13. Who has the power to kill the smart contract on channel1?  14. Who has the power to kill the smart contract on a peer1 of org1?  ></body> </Action>
<Action id="47441" issue="30711" author="joe-alewine" type="comment" created="2018-07-17 20:45:01.0" updateauthor="joe-alewine" updated="2018-07-17 20:45:01.0"> <body><! CDATA So to Sjir's suggestions above, I would say that the majority of these questions would best be resolved through an operations guide-type topic (some of them would seem to belong in an architecture doc, imo), rather than a conceptual topic. Knowing who can install a chaincode on a peer of org1 is not critical information in understanding what chaincode/smart contracts are *for* and can *do*.  It's our mantra, and therefore worth repeating: what problem do smart contracts/chaincode solve? It's not the semantics of initialization (which anyway will be covered in the upcoming docs on LSCC). It's their place in a transaction and how they interact with applications/the SDK/etc (the latter part I did not cover as much since I'm not as familiar with it).  More than the answers to Sjir's questions, I would say that we need to know more about how to turn business language into programming language. How does one do that, outside of Composer? What regulations are there? What considerations? THAT would give decision makers and developers and users the information they need, imo. Are there tutorials out there we can link to?  ></body> </Action>
<Action id="47442" issue="30711" author="joe-alewine" type="comment" created="2018-07-17 20:48:14.0" updateauthor="joe-alewine" updated="2018-07-17 20:48:14.0"> <body><! CDATA Furthermore, to quote Sjir's email, this:  _Let us have a business example with several orgs, several channels and several policies, of course all needed in an example that is considered relevant by business decision makers._   Sounds an awful lot like mission creep. I like the idea of a use case, but we should not throw in a kitchen sink of orgs and policies. It should be focused, otherwise business decisions makers will make the business decision that it's time to stop reading and go eat a bagel instead.   ></body> </Action>
<Action id="66648" issue="30711" author="pandrejko" type="comment" body="Content delivered here: https://hyperledger-fabric.readthedocs.io/en/latest/smartcontract/smartcontract.html" created="2020-01-13 17:47:02.0" updateauthor="pandrejko" updated="2020-01-13 17:47:02.0"/>
