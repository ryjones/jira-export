<Issue id="44583" key="FAB-17624" number="17624" project="10002" reporter="sykesm" assignee="yacovm" creator="sykesm" type="10004" summary="SEGFAULT in gossip unit tests" priority="3" resolution="10000" status="6" created="2020-03-16 02:49:28.0" updated="2020-03-16 14:38:18.0" resolutiondate="2020-03-16 14:38:18.0" votes="0" watches="2" workflowId="58496" archived="N"> <description><! CDATA One of the gossip tests panics in vendored code.  {code} panic: runtime error: invalid memory address or nil pointer dereference         panic: runtime error: invalid memory address or nil pointer dereference  signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xade84b    goroutine 2471  running : github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*listenSocket).Close(0xc0036fbf00, 0xc003c1e900, 0xc003222490)         /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:533 +0x4b github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).Serve.func2(0xc000528580, 0xc0036fbf00)         /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:577 +0xa9 panic(0xde0740, 0x158cd80)         /usr/local/go/src/runtime/panic.go:973 +0x396 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).Serve(0xc000528580, 0x0, 0x0, 0x0, 0x0)         /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:586 +0x304 created by github.com/hyperledger/fabric/gossip/discovery.createDiscoveryInstanceThatGossipsWithInterceptors         /home/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/gossip/discovery/discovery_test.go:422 +0xb5e {code}  The source of the nil listener that caused the panic is hidden in the noise generated by the tests. {code} 2020-03-15T22:37:11.059-0400    INFO    discovery/discovery_impl.go:1059        Removing member: Endpoint: foo, InternalEndpoint: , PKIID: Error listening on :42612, listen tcp :42612: bind: address already in use2020-03-15 22:37:11.079 EDT  gossip.discovery#localhost:22612  getDeadMembers -> WARN 002 Haven't h eard from  108 111 99 97 108 104 111 115 116 58 50 50 54 49 48  for 3.018821637s {code}  Instead of just printing the error {code} ll, err := net.Listen("tcp", listenAddress)                                                                                                                               if err != nil {                                                                                                                                                           fmt.Printf("Error listening on %v, %v", listenAddress, err)                                                                                                           }  {code}  the test should immediately fail with a clear indication of what is wrong.  ></description> </Issue>
