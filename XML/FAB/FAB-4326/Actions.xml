<Action id="34579" issue="17407" author="sunhwei" type="comment" created="2017-11-13 02:00:01.0" updateauthor="sunhwei" updated="2017-11-13 02:00:01.0"> <body><! CDATA Query all peers to verify the tx successful result is not necessary, since Fabric is "Permissioned blockchain with immediate finality" system, when the transaction  is successful on one peer, the blockchain consensus mechanism can make all peer in the same results.   Suggest to close this issue with no change.  Please refer to :  http://hyperledger-fabric.readthedocs.io/en/latest/releases.html  ,    Key features:  Permissioned blockchain with immediate finality Chaincode (aka smart contract) execution environments Docker container (user chaincode) In-process with peer (system chaincode)         ></body> </Action>
<Action id="34589" issue="17407" author="scottz" type="comment" created="2017-11-13 14:04:36.0" updateauthor="scottz" updated="2017-11-13 14:04:36.0"> <body><! CDATA We should NOT close it. The objective is to test that claim. To verify that it works as intended.  We do not need to verify every transaction, or even do it for every test, but our tool would be more thorough if it could do the verification requested in the description section. This is not a high priority item, but I think is a good thing to do.  ></body> </Action>
<Action id="34602" issue="17407" author="sunhwei" type="comment" body=" ~scottz  , ~dongming  In current PTE implementation &quot;InvokeCheck&quot; option is used to control if verification function, to  support above function,  we can add a new configuration option (for example &apos;InvokeCheckPeers&apos;) to let end user configure which peers PTE will verify the transaction result against, It is  compatible with current implementation.  " created="2017-11-14 00:25:09.0" updateauthor="sunhwei" updated="2017-11-14 00:25:09.0"/>
<Action id="34604" issue="17407" author="scottz" type="comment" created="2017-11-14 02:44:42.0" updateauthor="scottz" updated="2017-11-14 02:44:42.0"> <body><! CDATA This is open for discussion, and I will discuss with Dongming tomorrow, but here is what I was thinking:  I imagined that this function enhancement would be required for all performance tests. It is good to count and verify that the proper number of success events were all received, but it would be better to actually query the last transaction sent (by each thread). Although it would be more thorough, I did NOT imagine that PTE would verify every transaction, let alone doing it on every peer, because it would slow down the PTE and negatively impact performance results.  I thought that, after all transactions are sent (and maybe after all notifications received), in each thread, we could query the last transaction from all the peers in the channel. Typically PTE creates all channels and joins all peers to every channel, so that task would be fairly simple; the only tricky part is to determine the key and value of the last transaction +in each thread+. So, I figured each thread could do its own querying, for all the peers, after it sends it's last invoke transaction.  But, I realize that when the network and channels are created before running PTE traffic, then PTE may not know which peers are members of each channel. In that situation, it is certainly possible that your suggestion (for the user to provide a list of peers) would be the best way to do that. But, how would you correlate a list of peers with each channel, or how to determine which key,value pairs to verify on which peers and channels? Maybe the answer is simple; admittedly, I haven't looked into it.  ></body> </Action>
<Action id="39384" issue="17407" author="dongming" type="comment" created="2018-01-30 19:54:12.0" updateauthor="dongming" updated="2018-01-30 19:54:12.0"> <body><! CDATA We provide user a script, PTE/CITest/scripts/get_peerStats.sh, to calculate TPS for any peers and channels from the peer log specified by the user.  Use "./get_peerStats.sh -?" for help.  Also there are many examples in PTE/CITest/scenarios.  This might be sufficient for users to validate transactions on all peers.  ></body> </Action>
<Action id="39441" issue="17407" author="scottz" type="comment" created="2018-01-31 17:10:49.0" updateauthor="scottz" updated="2018-01-31 17:10:49.0"> <body><! CDATA Let's document this a little more here. This does not verify values via queries, but I suppose we can live without that based on the fact that all peers validate and agree.  The get_peerStats.sh script is called by about half of the testcases in PTE/CITest/scenarios/FAB-*. It checks the number of blocks written on a peer ledger by looking at logs. Does it count transactions too?  In the automated tests that use it, will the test fail if the numbers do not match expected values or if are unequal on all peers?  This script should be used to verify for all testcases where it makes sense, wherever we can expect PTE to have no send-failures. Do we currently use it for all existing testcases where that is true?  In the test situations where PTE has non-zero send-failures, i.e. (Attempted > TxProposalAck) or (Attempted > BroadcastAck), does PTE compare the "successfully sent" TXs total with "successfully written to peer"?  ></body> </Action>
<Action id="39452" issue="17407" author="dongming" type="comment" created="2018-01-31 19:30:17.0" updateauthor="dongming" updated="2018-01-31 19:30:17.0"> <body><! CDATA  ~scottz   get_peerStats.sh counts both blocks and transactions in the peer logs.  Both PTE logs and get_peerStats.sh provides transaction numbers for user.  And the user will need to determine if both numbers match.  We will add get_peerStats.sh to all scenarios testcases.     ></body> </Action>
<Action id="39453" issue="17407" author="dongming" type="comment" body="FAB-7991: PTE add get_peerstats.sh to all scenarios testcases" created="2018-01-31 19:34:13.0" updateauthor="dongming" updated="2018-01-31 19:34:13.0"/>
