<Issue id="18603" key="FAB-4956" number="4956" project="10002" reporter="nemoto" assignee="nemoto" creator="nemoto" type="10001" summary="Enable debug-on-error in case of behave test failures" priority="4" resolution="10000" status="6" created="2017-06-23 11:04:55.0" updated="2018-07-20 18:56:56.0" resolutiondate="2018-07-06 13:55:18.0" votes="0" watches="1" workflowId="39241" security="10001"> <description><! CDATA Launch debugger like ipdb to easily investigate the reason when a step fails in behave tests by using the after_step() hook. Example usage is as follows.  Â  {code:java} $ behave peer.feature -D BEHAVE_DEBUG_ON_ERROR -n FAB-3866 --no-capture Successfully imported protobufs from bddtests directory Feature: Peer Service # peer.feature:16 As a user I want to be able have channels and chaincodes to execute @daily Scenario Outline: FAB-3866: Multiple Chaincodes Per Peer -- @1.1 (...snip) > /home/xxx/go/src/github.com/hyperledger/fabric/test/feature/steps/endorser_impl.py(148)step_impl() 147 print(result) --> 148 assert result peers 0   == "Query Result: {0}\n".format(value), "Expect {0} = {1}, received from the deploy: {2}".format(key, value, result peers 0  ) 149   ipdb> print(context.chaincode) {'args': u' "init", "a", "500" , "b", "1000" ', 'orderers':  'orderer0.example.com' , 'name': u'example02val', 'language': 'GOLANG', 'path': u'github.com/hyperledger/fabric/examples/chaincode/go/invokereturnsvalue', 'channelID': 'behavesystest'} ipdb> q (...continuing) {code}  ></description> </Issue>
