<Action id="45603" issue="30722" author="pandrejko" type="comment" body="https://gerrit.hyperledger.org/r/22817" created="2018-06-06 15:33:52.0" updateauthor="pandrejko" updated="2018-06-06 15:33:52.0"/>
<Action id="45604" issue="30722" author="pandrejko" type="comment" created="2018-06-06 15:47:53.0" updateauthor="pandrejko" updated="2018-06-06 15:47:53.0"> <body><! CDATA  ~denyeart  -   Could you help with the following information:    1. The client application submits the transaction to the ordering service (with    hashes of the private data) which gets distributed into blocks as normal.    The block with the public transaction (hashed values) is distributed to all    the peers. In this way, all peers on the channel can validate transactions    with private data in a consistent way, without knowing the actual private data.    <Can you explain more about how a peer validates a transaction based on the hash?>   2. If the parties transacting on the private data need to disclose the private data     to other channel members in the future, for example due to an asset transfer or     a dispute between the parties, the other channel members can confirm the     validity of the private data based on the hashes. < Can you explaine channel members can do this?>   3. When requiredPeerCount is set to {{0}}, this means that <please elaborate>.    ></body> </Action>
<Action id="45768" issue="30722" author="denyeart" type="comment" created="2018-06-11 00:10:14.0" updateauthor="denyeart" updated="2018-06-11 00:16:53.0"> <body><! CDATA  ~pandrejko   1)  All peers perform consistent deterministic validation of transactions.  Here are two aspects of validation (which are described in other places in the docs for public data), and how the validation works when private data is at play:  a) Each peer validates that the endorsers have signed over the same transaction content.  Because the private data hashes are in the public transaction, the peers can validate that the endorsers have signed over the same transaction content, without knowing the actual private data keys and values.  b) Each peer validates that the version of state data at commit time hasn't changed since endorsement time, for the keys read during endorsement.  This ensures that the chaincode execution results that were determined at endorsement time are still valid at commit time. By using hashes of the private data keys, each peer is able to track versions of the keys without knowing the actual keys.  2)  The parties with the private data may share private data of a transaction with non-members out of band, if there is some business need.  These non-members would then take a hash of the private data and confirm it matches the hash that is in the transaction on the chain.  (typically we don't go into specifics of how these types of things would technically be done in the docs, as we don't go into details of the transaction data structure in the docs. That level of knowledge requires reading the protobuf data structures that Fabric and the SDKs use, which people writing apps would typically do.  we could add such detailed examples to the future doc backlog.)  3)  When requiredPeerCount is 0, it means that an endorsing peer must send the private data to at least 0 other members as a condition for endorsement.  That is, no distribution is required, but there may be some distribution if maxPeerCount was greater than zero.  requiredPeerCount of 0 would typically not be recommended, as it could lead to loss of private data. Typically you would want to require at least some distribution of the private data before endorsement returns success, to ensure redundancy of the private data to multiple peers in the network, so that if (all) of the endorsing peers became unavailable before validation/commit time, at least some other peers in the network would have the private data, which other peers could pull from at validation/commit time.  ></body> </Action>
<Action id="45780" issue="30722" author="pandrejko" type="comment" body=" ~joe-alewine  - See Dave&apos;s answers to my questions above. Let me know if you want me to add this to the content or if you plan to do it while revising the content." created="2018-06-11 11:47:04.0" updateauthor="pandrejko" updated="2018-06-11 11:47:04.0"/>
<Action id="45826" issue="30722" author="joe-alewine" type="comment" body="I did an edit to the sideDB docs but haven&apos;t included this information yet. Will get on it." created="2018-06-12 12:48:16.0" updateauthor="joe-alewine" updated="2018-06-12 12:48:16.0"/>
