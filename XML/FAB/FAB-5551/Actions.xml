<Action id="30152" issue="19627" author="denyeart" type="comment" body=" ~manish-sethi  Could you take a look and get with Adnan as needed?" created="2017-08-24 13:50:04.0" updateauthor="denyeart" updated="2017-08-24 13:50:04.0"/>
<Action id="32648" issue="19627" author="manish-sethi" type="comment" created="2017-10-18 18:04:35.0" updateauthor="manish-sethi" updated="2017-10-18 18:04:35.0"> <body><! CDATA  ~AdnanChoudhury  - as discussed sometime ago, if someone has access to the file system and deletes the file to which the ledger is writing the blocks, this is the default behavior of most of the common filesystems.  The process that is writing to a file won't notice a delete from outside. For the writing process (peer process - in this case), the file still exists and it can keep writing as long it has the open file descriptor.  Think it from other perspective, someone can delete the already written files as well. It's is similar to deleting some of the files from the directory of a database. Mostly, dbs would figure this out when either you run some sanity checker tools or those files are read during query execution.  So, I would suggest that if the files are getting generated with the right permission (e.g., no read/write/delete allowed to the user/group other than the one who can manage peer process/machine - we should be fine.     ></body> </Action>
<Action id="32900" issue="19627" author="adnanchoudhury" type="comment" body="Thanks  ~manish-sethi . In the writing process, is there any manual flushing? A flushing event should detect the problem of a orphan file descriptor, is this assumption correct?" created="2017-10-19 18:26:22.0" updateauthor="adnanchoudhury" updated="2017-10-19 18:26:22.0"/>
<Action id="32936" issue="19627" author="adnanchoudhury" type="comment" body="As  ~manish-sethi  clarified, the flushing is happening after every block, and the files are generated with write permission, and the OS is handling the file-descriptor, the ledger behavior can be considered as &quot;as expected&quot;. Marking this as *Not a bug*  " created="2017-10-20 16:42:06.0" updateauthor="adnanchoudhury" updated="2017-10-20 16:42:06.0"/>
