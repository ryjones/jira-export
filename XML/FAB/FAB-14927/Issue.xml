<Issue id="38913" key="FAB-14927" number="14927" project="10002" reporter="sykesm" assignee="ynamiki" creator="sykesm" type="10004" summary="Stop using fabric/common/util from protoutil code" priority="3" resolution="10000" status="6" created="2019-04-01 16:15:10.0" updated="2019-04-10 14:04:14.0" resolutiondate="2019-04-10 14:04:14.0" votes="0" watches="2" workflowId="51770"> <description><! CDATA As of current master, the following functions are used by protoutil from the common/util package in fabric: - {{CreateUtcTimestamp}} - replace with ptypes.TimestampProto(time.Now().UTC()) - {{GetTestChainID}} - any constant string for tests... - {{ComputeSHA256}} - crypto/sha256.Sum256 - {{ConcatenateBytes}} - append  In most cases, the utility of the functions does not outweigh the coupling between the packages. {code:java} $ ag -w util protoutil/ protoutil/proputils.go 17:	"github.com/hyperledger/fabric/common/util" 302:	timestamp := util.CreateUtcTimestamp()  protoutil/proputils_test.go 18:	"github.com/hyperledger/fabric/common/util" 239:		util.GetTestChainID(), createCIS(), 353:		util.GetTestChainID(), 365:		util.GetTestChainID(), 481:	prop, _, err := protoutil.CreateChaincodeProposal(common.HeaderType_ENDORSER_TRANSACTION, util.GetTestChainID(), createCIS(), signerSerialized)  protoutil/blockutils.go 15:	"github.com/hyperledger/fabric/common/util" 63:	return util.ComputeSHA256(BlockHeaderBytes(b)) 67:	return util.ComputeSHA256(util.ConcatenateBytes(b.Data...))  protoutil/txutils_test.go 17:	"github.com/hyperledger/fabric/common/util" 474:	prop, _, err := protoutil.CreateChaincodeProposal(cb.HeaderType_ENDORSER_TRANSACTION, util.GetTestChainID(), createCIS(), signerSerialized)  protoutil/blockutils_test.go 16:	"github.com/hyperledger/fabric/common/util" 49:	headerHash := util.ComputeSHA256(asn1Bytes)  protoutil/signeddata.go 13:	"github.com/hyperledger/fabric/common/util" 44:			Data:      util.ConcatenateBytes(configSig.SignatureHeader, ce.ConfigUpdate), {code}  ></description> </Issue>
