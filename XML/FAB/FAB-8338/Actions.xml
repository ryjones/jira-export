<Action id="40291" issue="27799" author="mastersingh24" type="comment" created="2018-02-16 15:34:13.0" updateauthor="mastersingh24" updated="2018-02-16 15:34:13.0"> <body><! CDATA I think we should do this for 1.1.  I'd like to leverage multi-arch support if we can, but this seems like a fairly expedient solution depending on timing  ></body> </Action>
<Action id="40305" issue="27799" author="rameshthoomu" type="comment" body="Working on this" created="2018-02-16 19:11:12.0" updateauthor="rameshthoomu" updated="2018-02-16 19:11:12.0"/>
<Action id="40353" issue="27799" author="rickr" type="comment" created="2018-02-18 16:52:48.0" updateauthor="rickr" updated="2018-02-18 16:52:48.0"> <body><! CDATA If it's fairly easily doable can we post update Docker hub so that x86_64-1.1-LATEST is now an alias to  _*x86_64-1.1.0-alpha*_? When we publish _*x86_64-1.1.0-rc*_ we can see it get updated to that?  Also, this would allow for merging that change in the SDK right now. I'm guessing it's not easy so not expecting it.  But you can always ask :)  ></body> </Action>
<Action id="41016" issue="27799" author="rameshthoomu" type="comment" created="2018-02-28 17:16:02.0" updateauthor="rameshthoomu" updated="2018-02-28 17:16:02.0"> <body><! CDATA  ~mastersingh24 , proposal is submitted here for fabric-ca images  https://gerrit.hyperledger.org/r/#/c/18467/  . Please review and let me know if this works. I would suggest to push manifest with `latest` tag so that we can skip giving arch based tags in the docker-compose files.  I have tested this patch with my personal dockerhub account and it worked as expected.  I have pushed *latest* docker tag to *rameshthoomu/fabric-peer* and if you execute *docker pull rameshthoomu/fabric-peer* from x86_64, ** it will try to pull from _rameshthoomu/fabric-peer-x86_64_ *1.1.0-beta* image and the same works from s390x (_rameshthoomu/fabric-peer-s390x_) * docker manifest is pushed to the docker registry with *1.1.0-beta* to *latest* docker image tag. So that both tags are in sync..  ></body> </Action>
<Action id="41414" issue="27799" author="denyeart" type="comment" body="Discussed on maintainers channel, we will target 1.2 for this capability." created="2018-03-09 16:21:10.0" updateauthor="denyeart" updated="2018-03-09 16:21:10.0"/>
<Action id="41894" issue="27799" author="sanchezl" type="comment" created="2018-03-21 17:47:11.0" updateauthor="sanchezl" updated="2018-03-23 13:47:52.0"> <body><! CDATA In keeping with the  official guidance on tags|https://github.com/docker-library/official-images#tags-and-aliases , we should refrain from using the `latest` text on any tags (except the actual {{latest}}.  h6. Images should be tagged  A published image would be tagged with one or more of the following tags: |*{{m.n.p}}*|Latest build of patch version.| |*{{m.n}}*|Latest build of minor version.| |-*{{m}}*-|-Latest build of major version.- (we can skip this for fabric for now) | |*{{latest}}*|Latest recommended version image.| |*{{m.n.p-xxxx}}*|Latest milestone release build of a patch version (e.g. {{beta}}, {{alpha}}, {{rc}}, etc.. | h6. Tags pointing to releases  Based on the currently published images, I would expect to see the following tags: |{{1.1.0  1.1  latest}}|all point to 1.1.0 (a.k.a 1.1 release)| |{{1.0.6  1.0}}|all point to 1.0.6 (a.k.a 1.0 release)| |{{1.0.0  1.0.1  1.0.2  1.0.3  1.0.4  1.0.5}}|other release images| h6. Unreleased image tags  You should be able to start using the {{1.1.1}} and {{1.2.0}} and {{1.2}} tags now if you want to be on the bleeding edge: |{{1.2  1.2.0  1.2.0-xxxx}}|all point to latest build of 1.2 (where {{xxxx}} might be {{beta}}, {{alpha}}, {{snapshot}}, etc.).| |{{1.1.1}}   {{1.1.1-xxxx}}|all point to the latest build of the release-1.1 branch.| h6.  Use of these tags  It is up to the consumer of these tags to decide which ones to use when pulling images. For example,  ~rickr  would have to decide if he uses the {{1.2}} tag or the {{1.2.0}} tag to pick up the latest 1.2.0 builds depending on how much control he wants when it comes to moving up to new patch releases. h6. Multi-arch   The tags in this comment assume that this would happen together with the multi-arch support being added in FAB-5680.   ----  ~denyeart  ~ChristopherFerris  ~mastersingh24   ></body> </Action>
<Action id="42082" issue="27799" author="rickr" type="comment" created="2018-03-23 15:09:15.0" updateauthor="rickr" updated="2018-03-23 15:15:44.0"> <body><! CDATA I'm not going to get hung up on verbage here on tags. As the key word in that link is *guidance*.  The SDK or any dependencies of Fabric should be able to reference a stream of updates in a m.n of fix releases without being locked stepped in to having to issue a new release to match the latest fix version.   I'm fine with anything  as long as that is what is achieved.     ></body> </Action>
<Action id="43254" issue="27799" author="christopherferris" type="comment" body="I&apos;m working on this from https://jira.hyperledger.org/browse/FAB-9629" created="2018-04-21 23:43:35.0" updateauthor="christopherferris" updated="2018-04-21 23:43:35.0"/>
<Action id="43260" issue="27799" author="christopherferris" type="comment" body=" https://gerrit.hyperledger.org/r/20875  scripts for all images for 1.1.x release" created="2018-04-22 16:30:49.0" updateauthor="christopherferris" updated="2018-04-22 16:30:49.0"/>
<Action id="43261" issue="27799" author="christopherferris" type="comment" created="2018-04-22 16:51:46.0" updateauthor="christopherferris" updated="2018-04-22 16:51:46.0"> <body><! CDATA To be clear, docker multi-arch support essentially is a manifest list of published images that can be architecture and os specific, but referenced by the same tag "alias". You can still reference the images by their FQT (fully qualified name:tag). Hence, we can publish:  hyperledger/fabric-peer:x86_64-1.1.0  hyperledger/fabric-peer:ppc64le-1.1.0  hyperledger/fabric-peer:s390x-1.1.0  can all be referenced (from their respective architectures) as:  hyperledger/fabric-peer:latest  or  hyperledger/fabric-peer:1.1.0  and just as with docker tags, you can replace them any time. So, as 1.1.1 is published, it could receive the 'latest' tag, etc,.     ></body> </Action>
<Action id="44447" issue="27799" author="rameshthoomu" type="comment" body=" ~ChristopherFerris  I think publishing *`latest`* tag is only happen from *`master`* branch and not from any other branches (release-*).  What tags we use to publish images with docker multi-arch from release branches?" created="2018-05-15 21:16:17.0" updateauthor="rameshthoomu" updated="2018-05-15 21:16:17.0"/>
<Action id="44928" issue="27799" author="rameshthoomu" type="comment" body="Docker multi-arch support is now available for 1.1.0  https://hub.docker.com/r/hyperledger/fabric-tools/tags/ " created="2018-05-23 02:18:11.0" updateauthor="rameshthoomu" updated="2018-05-23 02:18:26.0"/>
