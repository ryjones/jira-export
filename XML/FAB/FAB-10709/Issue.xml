<Issue id="31168" key="FAB-10709" number="10709" project="10002" reporter="sykesm" assignee="sykesm" creator="sykesm" type="10004" summary="Test flake in inproccontroller_test - matcher is missed" priority="3" resolution="10000" status="6" created="2018-06-19 12:48:52.0" updated="2019-03-19 10:57:47.0" resolutiondate="2018-06-21 14:04:09.0" votes="0" watches="1" workflowId="42480"> <description><! CDATA {code:java} 00:07:39.050 unit-tests_1  | --- FAIL: TestLaunchprocShimStartInProcErr (0.00s) 00:07:39.051 unit-tests_1  | 	assertions.go:247:   	Error Trace:	inproccontroller_test.go:252 00:07:39.051 unit-tests_1  | 		 	            	 			inproccontroller.go:127 00:07:39.051 unit-tests_1  | 		 	            	 			asm_amd64.s:2361 00:07:39.052 unit-tests_1  | 		 	Error:      	Not equal:  00:07:39.052 unit-tests_1  | 		 	            	expected: *errors.errorString(&errors.errorString{s:"chaincode-support ended with err: error chaincode id not provided"}) 00:07:39.053 unit-tests_1  | 		 	            	actual  : string("chaincode-support ended with err: error") 00:07:39.053 unit-tests_1  | 		 	Test:       	TestLaunchprocShimStartInProcErr 00:07:39.053 unit-tests_1  | 		 	Messages:   	content is correct{code} The test code is: {code:java} _inprocLoggerErrorf = func(format string, args ...interface{}) { _inprocLoggerErrorfCounter = _inprocLoggerErrorfCounter + 1  if _inprocLoggerErrorfCounter == 2 { assert.Equal(t, format, "%s", "Format is correct") assert.Equal(t, args 0 , "chaincode-support ended with err: error", "content is correct") } } {code} And the production code is: {code:java} err = fmt.Errorf("chaincode-support ended with err: %s", err) _inprocLoggerErrorf("%s", err) {code} The argument to the logger is an error, not a string. The Equal matcher matches on type and value.  ></description> </Issue>
