<Action id="43415" issue="29585" author="lehors" type="comment" created="2018-04-25 13:16:27.0" updateauthor="lehors" updated="2018-04-25 13:16:27.0"> <body><! CDATA Hi,  There is an error all right but it has nothing to do with Java. Java isn't used here and the message merely relates to the fact that currently the support for Java chaincode is disabled. The e2e example uses a Go chaincode. You can see that the same message about Java is displayed on the previous step while installing the chaincode without triggering any error:  2018-04-22 01:57:11.582 UTC  chaincodeCmd  getChaincodeSpec -> DEBU 005 java chaincode disabled 2018-04-22 01:57:11.652 UTC  golang-platform  getCodeFromFS -> DEBU 006 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 2018-04-22 01:57:11.953 UTC  golang-platform  func1 -> DEBU 007 Discarding GOROOT package fmt 2018-04-22 01:57:11.953 UTC  golang-platform  func1 -> DEBU 008 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim 2018-04-22 01:57:11.953 UTC  golang-platform  func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/protos/peer 2018-04-22 01:57:11.953 UTC  golang-platform  func1 -> DEBU 00a Discarding GOROOT package strconv 2018-04-22 01:57:11.953 UTC  golang-platform  GetDeploymentPayload -> DEBU 00b done 2018-04-22 01:57:11.953 UTC  container  WriteFileToPackage -> DEBU 00c Writing file to tarball: src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go 2018-04-22 01:57:11.959 UTC  container  WriteFileToPackage -> DEBU 00d Writing file to tarball: src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02_test.go 2018-04-22 01:57:11.961 UTC  msp/identity  Sign -> DEBU 00e Sign: plaintext: 0AB4070A5C08031A0C08F7D7EFD60510...83C77F030000FFFF1E416A37002E0000 2018-04-22 01:57:11.961 UTC  msp/identity  Sign -> DEBU 00f Sign: digest: C304B0106D73D2FAAA1E2F1DAACC11164F3DFDB906D86B89EF13C905786F0A51 2018-04-22 01:57:11.981 UTC  chaincodeCmd  install -> DEBU 010 Installed remotely response:<status:200 payload:"OK" > 2018-04-22 01:57:11.981 UTC  main  main -> INFO 011 Exiting..... ===================== Chaincode is installed on remote peer PEER2 =====================  ></body> </Action>
<Action id="43443" issue="29585" author="pvrbharg" type="comment" created="2018-04-25 21:41:28.0" updateauthor="pvrbharg" updated="2018-04-25 21:41:28.0"> <body><! CDATA Hi,  Glad it is not Java that is the culprit and I know example02 is written in Go. I can understand the chaincode logic. .  So why are we seeing this bogus and non-issue messages when they are not in play - especially with some step failure not being material and other steps being failures - where you can not progress at all?  If there is no Java in play - perhaps we should not be seeing any of these unconnected messages at all - because there is no connection.  I attached peer and orderer logs and I could not find anything in their logs either. Did you find anything that missed? In any case the sample is not working out of the box on RHEL platform and my logs  both client and server side  are attached. Thanks.  ></body> </Action>
<Action id="43467" issue="29585" author="lehors" type="comment" created="2018-04-26 13:18:28.0" updateauthor="lehors" updated="2018-04-26 13:18:45.0"> <body><! CDATA I'm not sure why the message about Java is displayed at all. I agree it is confusing. Fabric isn't always the best at communicating with the user and we've a long standing effort to improve "serviceability" to address that.  As for the actual error you got, the Usage message is another distraction for which a fix has now been merged into master. The error is triggered as part of the chaincode instantiation and appears to be network and/or docker related:  Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: API error (404): \{"message":"network e2ecli_default not found"}  Unfortunately I tried to reproduce the error on my machine but without success. Interestingly enough I'm facing a problem too but a different one, later in the process...  Are you getting this repeatedly?  Could you please give us the output of 'docker ps' after the error has triggered and before you tear the network down?  Thanks.     ></body> </Action>
<Action id="43516" issue="29585" author="pvrbharg" type="comment" created="2018-04-26 19:07:08.0" updateauthor="pvrbharg" updated="2018-04-26 19:07:08.0"> <body><! CDATA Hello Arnaud Le Hors,  Thank you for your update. I locked in to the distracted and confusing message - given the network being still present and healthy. I do not understand how the network is not found on the failing step and is found on the previous step - all the while network actually exists and still there.  BTW - this only happens in the same release level of same image - in e2e_cli sample but not in byfn sample.     So what is different between them - as best as I can tell - not the chaincode or release binaries - just that one use case runs with SOLO and another runs with Kafka.     I would be happy to share my image if it helps - so you can actually work on the issue rather than having to setup the instance to replicate the issue.     Please let me know what else you need after you review my current attachment. Thanks.            ^Logs_April262018.zip   ></body> </Action>
<Action id="43625" issue="29585" author="mastersingh24" type="comment" body="This has been resolved on the master branch.  There seems to be something which changed within docker-compose in terms of how it deals with network names.  " created="2018-04-29 09:16:57.0" updateauthor="mastersingh24" updated="2018-04-29 09:16:57.0"/>
<Action id="43629" issue="29585" author="pvrbharg" type="comment" created="2018-04-29 15:47:05.0" updateauthor="pvrbharg" updated="2018-04-29 15:47:05.0"> <body><! CDATA Dear Gari,     Great news and thank you for this update - this is very helpful to me and my team. Regards.  ></body> </Action>
<Action id="43630" issue="29585" author="pvrbharg" type="comment" created="2018-04-29 17:44:11.0" updateauthor="pvrbharg" updated="2018-04-29 17:44:11.0"> <body><! CDATA Dear team,  Regret to let you us know - this is not the same issue as the one being marked as duplicate. I checked out the master branch, pulled the matching images, compiled the sources in fabric repo, built the docker images and made sure in the examples/e2e_cli - I have the missing .env file with correct content.     I still get the same problem and our out of box sample still does not work.     As I said - I would be happy to share my VM - so you can actually debug the issue yourself under your own control rather than loose time in building the instance to replicate the problem.     Thanks.  ></body> </Action>
<Action id="43631" issue="29585" author="pvrbharg" type="comment" created="2018-04-29 18:32:35.0" updateauthor="pvrbharg" updated="2018-04-29 18:32:35.0"> <body><! CDATA Dear team,   I meant to tell us - I tried in Master branch and also in v1.1.0 - same outcomes - unsuccessful. However error messages are somewhat different.   So what I attached is for master branch result.  What I am appending inline here is for branch v1.1.0 - with .env file now in my e2e_cli folder:  +++++  ===================== Chaincode is installed on remote peer PEER2 =====================  Instantiating chaincode on org2/peer2... CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key CORE_PEER_LOCALMSPID=Org2MSP CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt CORE_PEER_TLS_ENABLED=true CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ID=cli CORE_LOGGING_LEVEL=DEBUG CORE_PEER_ADDRESS=peer0.org2.example.com:7051 2018-04-29 18:17:03.591 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-04-29 18:17:03.591 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-04-29 18:17:03.595 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 003 Using default escc 2018-04-29 18:17:03.595 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default vscc 2018-04-29 18:17:03.596 UTC  chaincodeCmd  getChaincodeSpec -> DEBU 005 java chaincode disabled 2018-04-29 18:17:03.597 UTC  msp/identity  Sign -> DEBU 006 Sign: plaintext: 0ABF070A6708031A0C089F9898D70510...535010030A04657363630A0476736363 2018-04-29 18:17:03.597 UTC  msp/identity  Sign -> DEBU 007 Sign: digest: 49D025B879EF07D8107DFCD8C6A41B6BC5B90602FE3A12667DC9B57331DED584 Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: API error (404): \{"message":"network e2ecli_default not found"}  Usage: peer chaincode instantiate  flags   Flags: -C, --channelID string The channel on which this command should be executed --collections-config string The file containing the configuration for the chaincode's collection -c, --ctor string Constructor message for the chaincode in JSON format (default "\{}") -E, --escc string The name of the endorsement system chaincode to be used for this chaincode -l, --lang string Language the chaincode is written in (default "golang") -n, --name string Name of the chaincode -P, --policy string The endorsement policy associated to this chaincode -v, --version string Version of the chaincode specified in install/instantiate/upgrade commands -V, --vscc string The name of the verification system chaincode to be used for this chaincode  Global Flags: --cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint --certfile string Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint --clientauth Use mutual TLS when communicating with the orderer endpoint --keyfile string Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint --logging-level string Default logging level and overrides, see core.yaml for full syntax -o, --orderer string Ordering service endpoint --ordererTLSHostnameOverride string The hostname override to use when validating the TLS connection to the orderer. --tls Use TLS when communicating with the orderer endpoint --transient string Transient map of arguments in JSON encoding  !!!!!!!!!!!!!!! Chaincode instantiation on PEER2 on channel 'mychannel' failed !!!!!!!!!!!!!!!! ================== ERROR !!! FAILED to execute End-2-End Scenario ==================  ^C  hlbcadmin@kopernik e2e_cli $ docker network ls NETWORK ID NAME DRIVER SCOPE 0532b3a6bb07 bridge bridge local 7f8859e5d662 e2e_default bridge local 2fbbdc92592f host host local 15c57b0719e8 none null local  hlbcadmin@kopernik e2e_cli $ git stash list stash@\{0}: WIP on master: eca42cf3 Merge " FAB-9316  Update e2e_cli to use AND endorsement pol" stash@\{1}: WIP on (no branch): 523f644b  FAB-8883  Prepare for Fabric v1.1.0 release  hlbcadmin@kopernik e2e_cli $  +++++  ></body> </Action>
<Action id="43851" issue="29585" author="jyellick" type="comment" created="2018-05-04 15:52:33.0" updateauthor="jyellick" updated="2018-05-04 15:52:33.0"> <body><! CDATA The text:   {noformat} Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: API error (404): {"message":"network e2ecli_default not found"} {noformat}  makes me think that your environment might still not reflect master.  Please check in {{fabric/examples/e2e_cli/base/peer-base.yaml}} that you have the line:  {noformat} CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2e_default {noformat}  Especially note that this says "e2e_default" and not "e2ecli_default".  Although you said you have checked, please also ensure that there is a {{examples/e2e_cli/.env}} file which contains the line:  {noformat} COMPOSE_PROJECT_NAME=e2e {noformat}  ></body> </Action>
<Action id="43917" issue="29585" author="pvrbharg" type="comment" created="2018-05-05 00:43:48.0" updateauthor="pvrbharg" updated="2018-05-05 00:43:48.0"> <body><! CDATA Dear Jason, Gari and Arnaud,  My unconditional apologies to each of you. As each of you know - I am perfect and can not make any mistakes, right? Just kidding.  My bad and fault - base/peer-base.yaml file line - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2e_default had the wrong entry - Jason - you are *dead accurate* 2/2. THANK YOU!  !image-2018-05-04-17-40-54-674.png!     ></body> </Action>
<Action id="43992" issue="29585" author="lehors" type="comment" body="Thank you for confirming the problem is resolved." created="2018-05-07 13:14:50.0" updateauthor="lehors" updated="2018-05-07 13:14:50.0"/>
