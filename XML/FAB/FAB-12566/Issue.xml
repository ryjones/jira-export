<Issue id="34827" key="FAB-12566" number="12566" project="10002" reporter="nicezic" assignee="nicezic" creator="nicezic" type="10001" summary="Enabling re-start for fabric-ca in fabric-samples." priority="3" resolution="10000" status="6" created="2018-10-23 05:43:30.0" updated="2019-01-07 08:04:09.0" resolutiondate="2019-01-07 08:03:36.0" votes="0" watches="1" workflowId="46242"> <description><! CDATA h3. This is fix and improvement of the scripts of fabric-ca in fabric-samples.  * h4. 1st Issue : When running start.sh again,  it fails to remove data directory. {code:java} $ ./start.sh ... $ ./stop.sh ... $ ./start.sh ##### 2018-10-23 14:19:21 Cleaning up the data directory from previous run at ./data rm: cannot remove './data/tls/peer2-org1-cli-client.key': Permission denied rm: cannot remove './data/tls/peer1-org1-client.crt': Permission denied rm: cannot remove './data/tls/peer2-org2-client.crt': Permission denied rm: cannot remove './data/tls/peer2-org1-cli-client.crt': Permission denied rm: cannot remove './data/tls/peer1-org1-cli-client.crt': Permission denied rm: cannot remove './data/tls/peer2-org1-client.key': Permission denied rm: cannot remove './data/tls/peer1-org2-cli-client.key': Permission denied rm: cannot remove './data/tls/peer1-org2-client.crt': Permission denied rm: cannot remove './data/tls/peer1-org1-client.key': Permission denied rm: cannot remove './data/tls/peer2-org2-cli-client.key': Permission denied rm: cannot remove './data/tls/peer2-org2-client.key': Permission denied rm: cannot remove './data/tls/peer1-org2-client.key': Permission denied rm: cannot remove './data/tls/peer1-org2-cli-client.crt': Permission denied rm: cannot remove './data/tls/peer1-org1-cli-client.key': Permission denied rm: cannot remove './data/tls/peer2-org2-cli-client.crt': Permission denied rm: cannot remove './data/tls/peer2-org1-client.crt': Permission denied rm: cannot remove './data/orgs': Permission denied {code} ** Reason *** After running 'start.sh' the permission of the directory, './data',  is 'root:root' in a user's host.   *** Docker is usually using root's account. If a docker container makes some files, their ownership will be root, especially in shared volumes. ** Way round of avoiding the problem. *** a user must have to command 'sudo rm -rf data' in order to remove the dir. *** in start.sh script, use 'sudo rm -rf data', instead of 'rm -rf data' **** a user has to type the password, but it's not sophisticated. **  Suggestion (TODO) *** In the stage of preparing the docker containers in the script 'start.sh', add a new file '.host_env' into './data' directory, which is shared volume between the host and the containers.  '.host_evn' file should be filled with host's user-id-number and group-id-number. *** In the stage of finishing test through docker's container, the whole files in './data' directory ownership should be changed to the host's one through saved '.host_env' file.  * h4. 2nd Issue: Jenkins test case does NOT cover the restarting situation. ** Suggestion (TODO) *** After solving the 1st issue, a stopping and re-starting part should be also included into Jenkins test case.     ></description> </Issue>
