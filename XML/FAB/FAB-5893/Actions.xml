<Action id="30114" issue="20367" author="jkirke" type="comment" created="2017-08-23 17:44:01.0" updateauthor="jkirke" updated="2017-08-23 17:44:01.0"> <body><! CDATA n peers logs I can see: failed, err Failed to authenticate policy ï¿½ 31m2017-08-22 15:22:39.049 UTC  txvalidator  Validate -> ERRO 0b1ï¿½ 0m VSCCValidateTx for transaction txId = 4894d1a43cc538f47cfa9e6aac4c541e0ee8262a141a345bbe518d9c69c04782 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy ï¿½ 33m2017-08-22 15:22:39.049 UTC  statevalidator  ValidateAndPrepareBatch -> WARN 0b2ï¿½ 0m Block  20  Transaction index  0  marked as invalid by committer. Reason code  10  2017-08-22 15:22:39.052 UTC  kvledger  Commit -> INFO 0b3ï¿½ 0m Channel  lateadd : Created block  20  with 1 transaction(s) 2017-08-22 15:22:39.052 UTC  eventhub_producer  SendProducerBlockEvent -> INFO 0b4ï¿½ 0m Channel  lateadd : Sending event for block number  20   ></body> </Action>
<Action id="30115" issue="20367" author="jkirke" type="comment" body="I have attached the logs. In them the errors can be seen. I found that I could fix the problem by executing an update chaincode so towards the end of the logs the failure to invoke no longer occurs." created="2017-08-23 17:47:02.0" updateauthor="jkirke" updated="2017-08-23 17:47:02.0"/>
<Action id="39230" issue="20367" author="muralisr" type="comment" body=" ~jkirke Â as its been a while, thought I&apos;ll check if this is still an issue." created="2018-01-28 12:48:24.0" updateauthor="muralisr" updated="2018-01-28 12:48:24.0"/>
<Action id="39309" issue="20367" author="jkirke" type="comment" created="2018-01-29 16:23:18.0" updateauthor="jkirke" updated="2018-01-29 16:23:18.0"> <body><! CDATA Still happens with level 1.0.5 of fabric.Â  1. Create channel with org01 2. Add peers, install CC, instantiate CC, execute invokes  3. Create org02Â   4. Add org02 to channel  5. Add org02 peer, install CC, execute a query on org02 peer to start CC (works)  6. Attempt to execute invoke on org02 peer     33m2018-01-29 16:12:38.120 UTC  vscc  Invoke -> WARN b5cc 0m Endorsement policy failure for transaction txid=94a9bb418baad2a0670cad428fb956fea8b1025bdcb9908f95ffc303b09c9e75, err: Failed to authenticate policy  31m2018-01-29 16:12:38.120 UTC  txvalidator  VSCCValidateTxForCC -> ERRO b5cd 0m VSCC check failed for transaction txid=94a9bb418baad2a0670cad428fb956fea8b1025bdcb9908f95ffc303b09c9e75, error VSCC error: policy evaluation failed, err Failed to authenticate policy  31m2018-01-29 16:12:38.120 UTC  txvalidator  Validate -> ERRO b5ce 0m VSCCValidateTx for transaction txId = 94a9bb418baad2a0670cad428fb956fea8b1025bdcb9908f95ffc303b09c9e75 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy  33m2018-01-29 16:12:38.120 UTC  statevalidator  ValidateAndPrepareBatch -> WARN b5cf 0m Block  23235  Transaction index  0  marked as invalid by committer. Reason code  10  2018-01-29 16:12:38.125 UTC  kvledger  Commit -> INFO b5d0 0m Channel  throughui01 : Created block  23235  with 1 transaction(s) 2018-01-29 16:12:38.129 UTC  eventhub_producer  SendProducerBlockEvent -> INFO b5d1 0m Channel  throughui01 : Sending event for block number  23235   ></body> </Action>
<Action id="39334" issue="20367" author="muralisr" type="comment" created="2018-01-30 00:26:49.0" updateauthor="muralisr" updated="2018-01-30 00:26:49.0"> <body><! CDATA  ~jkirke Â Currently we do not support endorsement policies of the formÂ "ANY admin of the channel". It has to be specified in terms of MSPs. If you don't specifically set the endorsement policy at the time of instantiate, it'll compute a default endorsement policyÂ with any member of the MSPs in the channel {color:#d04437}*at the time of instantiation*.{color}Â   Only way to have some flexibility is to create a forward thinking endorsement policyÂ using Org2MSP even before adding it to the channel, which will work albeit ugly as heck.  Â CORE_PEER_ADDRESS=192.168.1.81:7051 peer chaincode instantiate -n mycc -v 0 -c '\{"Args": "init","a","100","b","200" }' -C myc -o orderer.example.com:7050 -P "OR('Org1MSP.admin', {color:#d04437}*'Org2MSP.admin'*{color})".  Bottom line, this is working as designed but a feature request forÂ aÂ *{color:#d04437}"*.admin"{color}*Â type of policy many not be a bad idea.  ></body> </Action>
<Action id="39335" issue="20367" author="jkirke" type="comment" body=" ~muralisr  The endorsement policy is updated when the second org is added but it is not working correctly. The channel is being updated. I can further see this by updating the chaincode to a new version which corrects the problem and allows both organizations to execute invokes on the channel. Reach out to me  jkirke@us.ibm.com|mailto:jkirke@us.ibm.com Â if you would like to discuss." created="2018-01-30 00:46:04.0" updateauthor="jkirke" updated="2018-01-30 00:46:04.0"/>
<Action id="39336" issue="20367" author="muralisr" type="comment" created="2018-01-30 00:57:14.0" updateauthor="muralisr" updated="2018-01-30 02:49:49.0"> <body><! CDATA  ~jkirke Â How do you mean "_The endorsement policy is updated when the second org is added" ..._Â yourÂ instructions above do not indicate endorsement policy update after the new Org is added.Â   Pinged you on RC for offline discussion.  ></body> </Action>
<Action id="39386" issue="20367" author="muralisr" type="comment" created="2018-01-30 20:37:43.0" updateauthor="muralisr" updated="2018-01-31 22:01:04.0"> <body><! CDATA  ~jkirke  per offline discussion, I think we are on the same page - this is working as designed but needs doc and possibly new feature request.  If not in the docs already, suggest we doc this ...  {code:java} Endorsement policy is specified at the time of chaincode instantiation. It is used at commit time to validate transactions signed by the endorsing peer against the endorsement policy.  A new Organization added to the channel after the instantiation maybe able to query a chaincode successfully but not commit a transaction per endorsement policy specified at chaincode instantiation time. {code}   ~denyeart   ~ales   ~angelo.decaro   ~elli-androulaki  We may want to consider some feature request to allow a more flexible endorsement policy * endorsement policies with wild cards (e.g., "*.admin") * allow updaing endorsement policy for an instantiated CC      ></body> </Action>
<Action id="39467" issue="20367" author="denyeart" type="comment" created="2018-01-31 22:30:47.0" updateauthor="denyeart" updated="2018-01-31 22:30:47.0"> <body><! CDATA I agree  ~muralisr  .Â  Let's use this JIRA to clarify the documentation.  And we will write up a new JIRA feature for dynamic endorsement policies (multiple options to consider), and then link this JIRA and the new JIRA item.  ></body> </Action>
<Action id="39568" issue="20367" author="angelo.decaro" type="comment" body="As a general line of thoughts, I think, we should first understand which problem we want to try to solve and see if there are already solutions available in the literature. For instance, Corda has an interesting setting that we might want to replicate." created="2018-02-02 08:55:54.0" updateauthor="angelo.decaro" updated="2018-02-02 08:55:54.0"/>
<Action id="39628" issue="20367" author="muralisr" type="comment" created="2018-02-04 17:22:33.0" updateauthor="muralisr" updated="2018-02-04 17:22:33.0"> <body><! CDATA created FAB-8053 to continue this discussion as a possible feature improvement.  Â _see if there are already solutions available in the literature._   ~angelo.decaro  could you comment on the above (and anything else) in that JIRA pretty please ?Â   ></body> </Action>
<Action id="40182" issue="20367" author="denyeart" type="comment" body=" ~muralisr  Can you proceed with the doc update for 1.1, now that the future feature has been created." created="2018-02-14 17:43:16.0" updateauthor="denyeart" updated="2018-02-14 17:43:16.0"/>
<Action id="40345" issue="20367" author="muralisr" type="comment" body="https://gerrit.hyperledger.org/r/#/c/18011/" created="2018-02-18 14:03:13.0" updateauthor="muralisr" updated="2018-02-18 14:03:13.0"/>
