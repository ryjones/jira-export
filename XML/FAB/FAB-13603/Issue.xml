<Issue id="36626" key="FAB-13603" number="13603" project="10002" reporter="scottz" assignee="adnanchoudhury" creator="scottz" type="10101" summary="Crash and restart follower OSNs (single-thread invocations, 1 channel, latency mode)" priority="1" resolution="10000" status="6" created="2019-01-09 21:57:42.0" updated="2019-01-18 23:18:14.0" resolutiondate="2019-01-18 23:18:14.0" votes="0" watches="5" workflowId="48321"> <description><! CDATA *Note:* The first four rows of this table are simplified versions of the test scenarios described later on in this text. These are executed when no transactions are entered into the system, for simpler debugging. The full objectives of the two scenarios of this testcase are actually outlined by the last four rows.  ||Date Done||Description|| |1/11|A. Stop follower OSN of orderersystemchannel| |1/11|B. Restart follower OSN of orderersystemchannel| |1/11|C. Stop follower OSN of channel1| |1/14|D. Restart follower OSN of channel1| |1/11|E. Stop non-ingress follower OSN of channel1 with single-thread invocations in latency mode| |1/14|F. Restart non-ingress follower OSN of channel1 with single-thread invocations in latency mode| |1/11|G. Stop ingress follower OSN of channel1 with single-thread invocations in latency mode| |1/14|H. Restart ingress follower OSN of channel1 with single-thread invocations in latency mode|  h2. Setup Create network as in FAB-13601.  h2. Scenario 1: Inputs # Start transactions as in FAB-13601. # Check orderer logs to determine which OSN is the leader (could be any of the three; ensure it is not the ingress OSN for this testcase). # While the traffic is running, stop and start the non-ingress follower OSN. (See Table rows E and F).  h2. Scenario 1: Expectations Same as in FAB-13601, with all nodes stable and no transactions lost. However, in the running OSNs, for the system channel and for each channel shared with the stopped OSN, we can expect to see an error log when their connection drops to the stopped OSN (followed by an info log indicating its recovery, whenever it is started again). Or something like that. The exact number of logs to expect for each channel are described in FAB-12687.  h2. Scenario 2: Inputs # After the previous test completes, after things are stable and idle again, identify the number of existing blocks and then repeat testcase to send another 10K transactions - but this time while traffic running we should stop and start the ingress OSN, i.e. the follower OSN that IS receiving transactions from the client. (See Table rows G and H).  h2. Scenario 2: Expectations Mostly same as above. Expect up to 10K additional blocks on the ledger; actually it will be less because we will see NACK'd transactions reported by the client (e.g. those TXs that are sent blindly to the O1 while O1 is stopped or not yet rejoined to the consensus group), and possibly another lost transaction if O1 receives and ACKs a TX but is stopped before forwarding it to the leader.  ></description> </Issue>
