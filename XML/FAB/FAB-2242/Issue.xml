<Issue id="14802" key="FAB-2242" number="2242" project="10002" reporter="scottz" assignee="kchristidis" creator="scottz" type="10004" summary="panic: Failed to create Kafka producer - when create non-default channelIDs on kafka orderer" priority="2" resolution="10000" status="6" created="2017-02-15 00:17:39.0" updated="2018-07-20 14:11:39.0" resolutiondate="2017-05-26 20:00:10.0" votes="0" watches="3" workflowId="37443"> <description><! CDATA Using commit ad986bbf000ff34ebeb8e142cfcd747a01f12617 Date:   Tue Feb 14 18:57:03 2017 +0000 plus some local test tool changes for test tool development (but no changes to fabric code),  Test passes running "ote" tool, using: * solo orderer with 1 channel, default testchainid, and when * solo orderer with 1 or 2 channels, test-chan.00001, test-chan.00002, * 1 kafka orderer with 3 kafka brokers and one channel with default channelID.  fabric/bddtests/regression/go/ote$ OTE_CHANNELS=1 CONFIGTX_ORDERER_ORDERERTYPE=kafka OTE_KAFKABROKERS=3  ./ote  Test FAILS when using 1 kafka orderer and 3 kafka-brokers with one or more non-default channelID, test-chan.00000.  Point of failure is when running the equivalent of this on the command line: peer channel create -c test-chan.00000  Observe in orderer0 logs the panic on kafka orderer:   $ docker logs orderer0 2017-02-14 23:48:39.611 UTC  viperutil  EnhancedExactUnmarshal -> INFO 001 map genesis:map DeprecatedBatchTimeout:10s DeprecatedBatchSize:99 MB SbftShared:map RequestTimeoutNsec:1000000000 Peers:map :6101:sbft/testdata/cert1.pem  N:1 F:0   general:map LedgerType:ram ListenAddress:0.0.0.0 LogLevel:info QueueSize:10 TLS:map ClientAuthEnabled:false ClientRootCAs:<nil> Enabled:false PrivateKey:<nil> Certificate:<nil> RootCAs:<nil>  Profile:map Address:0.0.0.0:6060 Enabled:false  MaxWindowSize:1000 ListenPort:5005 GenesisMethod:provisional GenesisFile:./genesisblock  ramledger:map HistorySize:1000  fileledger:map Location:<nil> Prefix:hyperledger-fabric-ordererledger  kafka:map TLS:map RootCAs:<nil> Enabled:false PrivateKey:<nil> Certificate:<nil>  Retry:map Stop:60s Period:3s  Verbose:false  sbftlocal:map CertFile:sbft/testdata/cert1.pem KeyFile:sbft/testdata/key.pem DataDir:/tmp PeerCommAddr::6101   2017-02-14 23:48:39.614 UTC  orderer/config  completeInitialization -> INFO 002 General.LocalMSPDir unset, setting to ../msp/sampleconfig/ 2017-02-14 23:48:39.614 UTC  orderer/config  completeInitialization -> INFO 003 General.LocalMSPID unset, setting to DEFAULT 2017-02-14 23:48:39.614 UTC  orderer/config  completeInitialization -> INFO 004 Validated configuration to: &{General:{LedgerType:ram QueueSize:10 MaxWindowSize:1000 ListenAddress:0.0.0.0 ListenPort:5005 TLS:{Enabled:false PrivateKey: Certificate: RootCAs:   ClientAuthEnabled:false ClientRootCAs:  } GenesisMethod:provisional GenesisFile:./genesisblock Profile:{Enabled:false Address:0.0.0.0:6060} LogLevel:info LocalMSPDir:/etc/hyperledger/msp/sampleconfig LocalMSPID:DEFAULT} RAMLedger:{HistorySize:1000} FileLedger:{Location: Prefix:hyperledger-fabric-ordererledger} Kafka:{Retry:{Period:3s Stop:1m0s} Verbose:false Version:{version: 0 9 0 1 } TLS:{Enabled:false PrivateKey: Certificate: RootCAs:   ClientAuthEnabled:false ClientRootCAs:  }} Genesis:{DeprecatedBatchTimeout:10s DeprecatedBatchSize:103809024 SbftShared:{N:1 F:0 RequestTimeoutNsec:1000000000 Peers:map :6101:sbft/testdata/cert1.pem }} SbftLocal:{PeerCommAddr::6101 CertFile:sbft/testdata/cert1.pem KeyFile:sbft/testdata/key.pem DataDir:/tmp}} 2017-02-14 23:48:39.670 UTC  configtx/tool/localconfig  Load -> INFO 005 Checking for genesis.yaml at: /etc/hyperledger/fabric 2017-02-14 23:48:39.670 UTC  configtx/tool/localconfig  Load -> INFO 006 Checking for genesis.yaml at:  2017-02-14 23:48:39.671 UTC  viperutil  EnhancedExactUnmarshal -> INFO 007 map orderer:map BatchSize:map MaxMessageCount:100 AbsoluteMaxBytes:99 MB PreferredMaxBytes:512 KB  Kafka:map Brokers: kafka0:9092,kafka1:9092,kafka2:9092   OrdererType:kafka Addresses: 0.0.0.0:5005  BatchTimeout:10s   2017-02-14 23:48:43.620 UTC  orderer/main  NewServer -> INFO 008 Starting orderer 2017-02-14 23:48:43.620 UTC  orderer/main  main -> INFO 009 Beginning to serve requests 2017-02-14 23:48:50.226 UTC  peer/sharedconfig  ProposeConfig -> WARN 00a Uknown Peer config item with key MSP 2017-02-14 23:48:50.237 UTC  peer/sharedconfig  ProposeConfig -> WARN 00b Uknown Peer config item with key MSP 2017-02-14 23:48:50.239 UTC  peer/sharedconfig  ProposeConfig -> WARN 00c Uknown Peer config item with key MSP panic: Failed to create Kafka producer: kafka: client has run out of available brokers to talk to (Is your cluster reachable?)  goroutine 59  running : panic(0xa2ce40, 0xc4200da480) 	/opt/go/src/runtime/panic.go:500 +0x1a1 github.com/hyperledger/fabric/orderer/kafka.newProducer(0xc42021c8e0, 0x1, 0x1, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/producer.go:51 +0x619 github.com/hyperledger/fabric/orderer/kafka.glob..func2(0xc42021c8e0, 0x1, 0x1, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:58 +0xb4 github.com/hyperledger/fabric/orderer/kafka.newChain(0x1001480, 0xc42018adc0, 0x1001d20, 0xc4202dacd0, 0xfffffffffffffffd, 0xc420206690) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:114 +0x37c github.com/hyperledger/fabric/orderer/kafka.(*consenterImpl).HandleChain(0xc42018adc0, 0x1001d20, 0xc4202dacd0, 0xc4202e98c0, 0x2, 0x2, 0xc4202cb400, 0xc4202dac30) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:83 +0x67 github.com/hyperledger/fabric/orderer/multichain.newChainSupport(0xc42034be20, 0xc42034bc40, 0xc4202e80c0, 0xff91c0, 0x103dae8, 0xc42034bd00) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/chainsupport.go:132 +0x57b github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newChain(0xc4202ec000, 0xc4201ea240) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:206 +0x237 github.com/hyperledger/fabric/orderer/multichain.(*systemChainCommitter).Commit(0xc4202d1600) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/systemchain.go:55 +0x3c github.com/hyperledger/fabric/orderer/multichain.(*chainSupport).WriteBlock(0xc4202db4a0, 0xc4202d1980, 0xc4202c3a40, 0x1, 0x1, 0xc4202c3b28, 0x2, 0x8, 0x1) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/chainsupport.go:243 +0x53 github.com/hyperledger/fabric/orderer/kafka.(*chainImpl).loop(0xc4203cc000) 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:284 +0x13a5 created by github.com/hyperledger/fabric/orderer/kafka.(*chainImpl).Start 	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:186 +0x567   ></description> </Issue>
