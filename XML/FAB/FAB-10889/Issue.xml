<Issue id="31406" key="FAB-10889" number="10889" project="10002" reporter="denyeart" assignee="manish-sethi" creator="denyeart" type="10000" summary="Chaincode lifecycle - implicit org-specific collections (enables lifecycle &apos;voting&apos;)" priority="1" resolution="10000" status="6" created="2018-06-27 10:44:25.0" updated="2021-01-11 05:30:35.0" resolutiondate="2021-01-11 05:30:35.0" votes="5" watches="20" workflowId="35899"> <description><! CDATA With implicit org-specific private data collections, it will be possible for an organization to privately 'pre-approve' transactions that will come for endorsement.  This facility will be used in the new v2.0 lifecycle to approve a chaincode before it becomes active on a channel. The same facility could also be used in regular chaincode applications.     *Implicit Collection Background:*  With normal private data collections, each collection must be defined at chaincode instantiation/upgrade time.  While this is fine if there is a limited number of private data partnerships, it is not feasible to administer when there are large numbers of collections, for example if a private data collection is needed for all bilateral (or trilateral, etc) combinations of N channel members. For these scenarios 'implicit' collections are required where the client can choose any N channel members to distribute the private data to.  This is similar to 'local collections', but with the following differences: * Each implicit collection has its own key namespace, while local collection has a single key namespace for all transactions * With implicit collection the members for any given key (asset) is forever fixed, while with local collections the key (asset) can later be transferred to different members * With implicit collection peers handle private data distribution, while with local collections clients have the responsibility to distribute private data  *Implicit org-specific collections (this epic):*  Implicit collections having a single org member is a special case that can be useful for storing "org specific state" in a variety of contexts. This org specific state can be used to provide human input to chaincode execution/endorsement for a certain key (asset).  Each org-specific collection has an implicit endorsement policy of the organization itself, so that any data in an org-specific collection can be guaranteed to have been endorsed by a peer of the associated organization. Each org can use their org-specific namespace to provide approval/voting instructions to chaincode for a certain key (asset). Examples include: * Provide chaincode with approval (or conditions to meet) prior to successful execution/endorsement of a key (asset) transfer * In the context of lifecycle system chaincode, provide lifecycle chaincode with metadata package approved by org, and only endorse chaincode deployment transactions that have a matching chaincode definition.  See charts attached to FAB-8812 for more information on collection types.  *This epic will target org-specific collections only.*  ></description> </Issue>
