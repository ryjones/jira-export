<Action id="64031" issue="39711" author="jyellick" type="comment" body=" ~C0rWin  any updates on this?  ~yacovm  any insights?" created="2019-09-24 14:13:24.0" updateauthor="jyellick" updated="2019-09-24 14:13:24.0"/>
<Action id="65260" issue="39711" author="denyeart" type="comment" created="2019-11-04 16:12:33.0" updateauthor="denyeart" updated="2019-11-04 16:12:33.0"> <body><! CDATA Since Artem is busy we'll have Danny work on this one now.  Looks like it was caused by FAB-12982 in v1.4.1 (and master).  ></body> </Action>
<Action id="65264" issue="39711" author="caod" type="comment" created="2019-11-04 16:36:54.0" updateauthor="caod" updated="2019-11-04 16:36:54.0"> <body><! CDATA I attempted to reproduce the error with latest 1.4 but wasn't able to reproduce with the tutorial:  After storing private data as peer0.org1 I see the following logs on the other peers  peer1.org1: {code:java} 2019-11-04 16:17:26.099 UTC  gossip.state  listen -> DEBU 3768c Dispatching a message GossipMessage: nonce:15248119270143486742 channel:"mychannel" tag:CHAN_ONLY private_data:<payload:<collection_name:"collectionMarbles" namespace:"marblesp" tx_id:"df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c" private_rwset:"\032\036\n\031\000color~name\000blue\000marble1\000\032\001\000\032W\n\007marble1\032L{\"docType\":\"marble\",\"name\":\"marble1\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" private_sim_height:6 collection_configs:<config:<static_collection_config:<name:"collectionMarbles" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > rules:<signed_by:1 > > > identities:<principal:"\n\007Org1MSP" > identities:<principal:"\n\007Org2MSP" > > > maximum_peer_count:3 block_to_live:1000000 member_only_read:true > > > > > , Envelope: 328 bytes, Signature: 0 bytes 2019-11-04 16:17:26.099 UTC  gossip.state  dispatch -> DEBU 3768d Handling private data collection message 2019-11-04 16:17:26.103 UTC  gossip.state  listen -> DEBU 376b9 Dispatching a message GossipMessage: nonce:10121211505448111222 channel:"mychannel" tag:CHAN_ONLY private_data:<payload:<collection_name:"collectionMarblePrivateDetails" namespace:"marblesp" tx_id:"df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c" private_rwset:"\032I\n\007marble1\032>{\"docType\":\"marblePrivateDetails\",\"name\":\"marble1\",\"price\":99}" private_sim_height:6 collection_configs:<config:<static_collection_config:<name:"collectionMarblePrivateDetails" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > > > identities:<principal:"\n\007Org1MSP" > > > maximum_peer_count:3 block_to_live:3 member_only_read:true > > > > > , Envelope: 289 bytes, Signature: 0 bytes 2019-11-04 16:17:26.103 UTC  gossip.state  dispatch -> DEBU 376ba Handling private data collection message 2019-11-04 16:17:26.108 UTC  gossip.state  privateDataMessage -> DEBU 376bc Private data for collection collectionMarbles has been stored 2019-11-04 16:17:26.110 UTC  gossip.state  privateDataMessage -> DEBU 376bd Private data for collection collectionMarblePrivateDetails has been stored 2019-11-04 16:17:26.115 UTC  gossip.state  listen -> DEBU 376e8 Dispatching a message GossipMessage: nonce:15627431509882369548 channel:"mychannel" tag:CHAN_ONLY private_data:<payload:<collection_name:"collectionMarblePrivateDetails" namespace:"marblesp" tx_id:"df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c" private_rwset:"\032I\n\007marble1\032>{\"docType\":\"marblePrivateDetails\",\"name\":\"marble1\",\"price\":99}" private_sim_height:6 collection_configs:<config:<static_collection_config:<name:"collectionMarblePrivateDetails" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > > > identities:<principal:"\n\007Org1MSP" > > > maximum_peer_count:3 block_to_live:3 member_only_read:true > > > > > , Envelope: 289 bytes, Signature: 0 bytes 2019-11-04 16:17:26.115 UTC  gossip.state  dispatch -> DEBU 376e9 Handling private data collection message 2019-11-04 16:17:26.122 UTC  gossip.state  privateDataMessage -> DEBU 376eb Private data for collection collectionMarblePrivateDetails has been stored 2019-11-04 16:17:28.144 UTC  peer.gossip.mcs  VerifyBlock -> DEBU 37811 Got policy manager for channel  mychannel  with flag  true  2019-11-04 16:17:28.144 UTC  peer.gossip.mcs  VerifyBlock -> DEBU 37812 Got block validation policy for channel  mychannel  with flag  true  2019-11-04 16:17:28.146 UTC  gossip.state  addPayload -> DEBU 37823  mychannel  Adding payload to local buffer, blockNum =  6  2019-11-04 16:17:28.146 UTC  gossip.state  addPayload -> DEBU 37824 Blocks payloads buffer size for channel  mychannel  is 1 blocks 2019-11-04 16:17:28.146 UTC  gossip.state  deliverPayloads -> DEBU 37825  mychannel  Ready to transfer payloads (blocks) to the ledger, next block number is =  6  2019-11-04 16:17:28.146 UTC  gossip.state  deliverPayloads -> DEBU 37826  mychannel  Transferring block  6  with 1 transaction(s) to the ledger 2019-11-04 16:17:28.146 UTC  gossip.privdata  StoreBlock -> INFO 37827  mychannel  Received block  6  from buffer 2019-11-04 16:17:28.146 UTC  gossip.privdata  StoreBlock -> DEBU 37828  mychannel  Validating block  6  2019-11-04 16:17:28.147 UTC  gossip.channel  AddToMsgStore -> DEBU 37833 Adding GossipMessage: Channel: mychannel, nonce: 0, tag: CHAN_AND_ORG Block message: {Data: 4369 bytes, seq: 6}, Envelope: 4393 bytes, Signature: 0 bytes to the block puller 2019-11-04 16:17:28.147 UTC  gossip.pull  Add -> DEBU 37834 Added 6, total items: 2 2019-11-04 16:17:28.176 UTC  gossip.privdata  listMissingPrivateData -> DEBU 378a3 Retrieving private write sets for 1 transactions from transient store 2019-11-04 16:17:28.191 UTC  gossip.privdata  StoreBlock -> DEBU 378ad  mychannel  No missing collection private write sets to fetch from remote peers 2019-11-04 16:17:28.191 UTC  gossip.privdata  StoreBlock -> DEBU 378ae  mychannel  Added 1 namespace private write sets for block  6 , tran  0  2019-11-04 16:17:28.238 UTC  gossip.state  commitBlock -> DEBU 37951  mychannel  Committed block  6  with 1 transaction(s) 2019-11-04 16:22:59.133 UTC  gossip.channel  func3 -> DEBU 4463a Removing 5 from the message store 2019-11-04 16:22:59.133 UTC  gossip.pull  Remove -> DEBU 4463b Removed 5, total items: 1 2019-11-04 16:24:11.088 UTC  gossip.channel  func3 -> DEBU 472d2 Removing 6 from the message store 2019-11-04 16:24:11.089 UTC  gossip.pull  Remove -> DEBU 472d3 Removed 6, total items: 0 {code} peer0.org2: {code:java} 2019-11-04 16:17:26.113 UTC  gossip.state  listen -> DEBU 49702 Dispatching a message GossipMessage: nonce:5139539834814862229 channel:"mychannel" tag:CHAN_ONLY private_data:<payload:<collection_name:"collectionMarbles" namespace:"marblesp" tx_id:"df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c" private_rwset:"\032\036\n\031\000color~name\000blue\000marble1\000\032\001\000\032W\n\007marble1\032L{\"docType\":\"marble\",\"name\":\"marble1\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" private_sim_height:6 collection_configs:<config:<static_collection_config:<name:"collectionMarbles" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > rules:<signed_by:1 > > > identities:<principal:"\n\007Org1MSP" > identities:<principal:"\n\007Org2MSP" > > > maximum_peer_count:3 block_to_live:1000000 member_only_read:true > > > > > , Envelope: 327 bytes, Signature: 0 bytes 2019-11-04 16:17:26.113 UTC  gossip.state  dispatch -> DEBU 49703 Handling private data collection message 2019-11-04 16:17:26.121 UTC  gossip.state  privateDataMessage -> DEBU 49705 Private data for collection collectionMarbles has been stored 2019-11-04 16:17:28.144 UTC  peer.gossip.mcs  VerifyBlock -> DEBU 4976b Got policy manager for channel  mychannel  with flag  true  2019-11-04 16:17:28.145 UTC  peer.gossip.mcs  VerifyBlock -> DEBU 4976c Got block validation policy for channel  mychannel  with flag  true  2019-11-04 16:17:28.147 UTC  gossip.state  addPayload -> DEBU 4977d  mychannel  Adding payload to local buffer, blockNum =  6  2019-11-04 16:17:28.147 UTC  gossip.state  addPayload -> DEBU 4977e Blocks payloads buffer size for channel  mychannel  is 1 blocks 2019-11-04 16:17:28.147 UTC  gossip.channel  AddToMsgStore -> DEBU 49780 Adding GossipMessage: Channel: mychannel, nonce: 0, tag: CHAN_AND_ORG Block message: {Data: 4369 bytes, seq: 6}, Envelope: 4393 bytes, Signature: 0 bytes to the block puller 2019-11-04 16:17:28.147 UTC  gossip.pull  Add -> DEBU 49781 Added 6, total items: 2 2019-11-04 16:17:28.147 UTC  gossip.state  deliverPayloads -> DEBU 49782  mychannel  Ready to transfer payloads (blocks) to the ledger, next block number is =  6  2019-11-04 16:17:28.147 UTC  gossip.state  deliverPayloads -> DEBU 49783  mychannel  Transferring block  6  with 1 transaction(s) to the ledger 2019-11-04 16:17:28.147 UTC  gossip.privdata  StoreBlock -> INFO 49784  mychannel  Received block  6  from buffer 2019-11-04 16:17:28.147 UTC  gossip.privdata  StoreBlock -> DEBU 49785  mychannel  Validating block  6  2019-11-04 16:17:28.180 UTC  gossip.privdata  isEligible -> DEBU 497dc Skipping namespace marblesp collection collectionMarblePrivateDetails because we're not eligible for the private data 2019-11-04 16:17:28.180 UTC  gossip.privdata  inspectTransaction -> DEBU 497dd Peer is not eligible for collection, channel  mychannel , chaincode  marblesp , collection name  collectionMarblePrivateDetails , txID  df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c  the policy is  &privdata.SimpleCollection{name:"collectionMarblePrivateDetails", accessPolicy:(*cauthdsl.policy)(0xc0042b0f20), memberOrgs:  string{"Org1MSP"}, conf:common.StaticCollectionConfig{Name:"collectionMarblePrivateDetails", MemberOrgsPolicy:(*common.CollectionPolicyConfig)(0xc00257c270), RequiredPeerCount:0, MaximumPeerCount:3, BlockToLive:0x3, MemberOnlyRead:true, XXX_NoUnkeyedLiteral:struct {}{}, XXX_unrecognized:  uint8(nil), XXX_sizecache:0}} . Skipping. 2019-11-04 16:17:28.185 UTC  gossip.privdata  listMissingPrivateData -> DEBU 497ee Retrieving private write sets for 1 transactions from transient store 2019-11-04 16:17:28.186 UTC  gossip.privdata  StoreBlock -> DEBU 497f1  mychannel  No missing collection private write sets to fetch from remote peers 2019-11-04 16:17:28.186 UTC  gossip.privdata  StoreBlock -> DEBU 497f2  mychannel  Added 1 namespace private write sets for block  6 , tran  0  2019-11-04 16:17:28.240 UTC  gossip.state  commitBlock -> DEBU 4986e  mychannel  Committed block  6  with 1 transaction(s) 2019-11-04 16:22:58.342 UTC  gossip.channel  func3 -> DEBU 5aef4 Removing 5 from the message store 2019-11-04 16:22:58.344 UTC  gossip.pull  Remove -> DEBU 5aef5 Removed 5, total items: 1 2019-11-04 16:24:10.266 UTC  gossip.channel  func3 -> DEBU 5ea9e Removing 6 from the message store 2019-11-04 16:24:10.266 UTC  gossip.pull  Remove -> DEBU 5ea9f Removed 6, total items: 0 {code} peer1.org2: {code:java} 2019-11-04 16:17:26.099 UTC  gossip.state  listen -> DEBU 42d51 Dispatching a message GossipMessage: nonce:4768890065711492980 channel:"mychannel" tag:CHAN_ONLY private_data:<payload:<collection_name:"collectionMarbles" namespace:"marblesp" tx_id:"df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c" private_rwset:"\032\036\n\031\000color~name\000blue\000marble1\000\032\001\000\032W\n\007marble1\032L{\"docType\":\"marble\",\"name\":\"marble1\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" private_sim_height:6 collection_configs:<config:<static_collection_config:<name:"collectionMarbles" member_orgs_policy:<signature_policy:<rule:<n_out_of:<n:1 rules:<signed_by:0 > rules:<signed_by:1 > > > identities:<principal:"\n\007Org1MSP" > identities:<principal:"\n\007Org2MSP" > > > maximum_peer_count:3 block_to_live:1000000 member_only_read:true > > > > > , Envelope: 327 bytes, Signature: 0 bytes 2019-11-04 16:17:26.099 UTC  gossip.state  dispatch -> DEBU 42d52 Handling private data collection message 2019-11-04 16:17:26.118 UTC  gossip.state  privateDataMessage -> DEBU 42d54 Private data for collection collectionMarbles has been stored 2019-11-04 16:17:28.154 UTC  peer.gossip.mcs  VerifyBlock -> DEBU 42e37 Got policy manager for channel  mychannel  with flag  true  2019-11-04 16:17:28.154 UTC  peer.gossip.mcs  VerifyBlock -> DEBU 42e38 Got block validation policy for channel  mychannel  with flag  true  2019-11-04 16:17:28.155 UTC  gossip.pull  Add -> DEBU 42e49 Added 6, total items: 2 2019-11-04 16:17:28.155 UTC  gossip.state  listen -> DEBU 42e4b Received new message via gossip channel 2019-11-04 16:17:28.155 UTC  gossip.state  addPayload -> DEBU 42e4c  mychannel  Adding payload to local buffer, blockNum =  6  2019-11-04 16:17:28.155 UTC  gossip.state  addPayload -> DEBU 42e4d Blocks payloads buffer size for channel  mychannel  is 1 blocks 2019-11-04 16:17:28.155 UTC  gossip.state  deliverPayloads -> DEBU 42e4e  mychannel  Ready to transfer payloads (blocks) to the ledger, next block number is =  6  2019-11-04 16:17:28.155 UTC  gossip.state  deliverPayloads -> DEBU 42e4f  mychannel  Transferring block  6  with 1 transaction(s) to the ledger 2019-11-04 16:17:28.155 UTC  gossip.privdata  StoreBlock -> INFO 42e50  mychannel  Received block  6  from buffer 2019-11-04 16:17:28.155 UTC  gossip.privdata  StoreBlock -> DEBU 42e51  mychannel  Validating block  6  2019-11-04 16:17:28.189 UTC  gossip.privdata  isEligible -> DEBU 42ee5 Skipping namespace marblesp collection collectionMarblePrivateDetails because we're not eligible for the private data 2019-11-04 16:17:28.189 UTC  gossip.privdata  inspectTransaction -> DEBU 42ee6 Peer is not eligible for collection, channel  mychannel , chaincode  marblesp , collection name  collectionMarblePrivateDetails , txID  df7788b87e9bfbd34f7689226c9dfed839199e583be6fe9e3677a806dcf2b37c  the policy is  &privdata.SimpleCollection{name:"collectionMarblePrivateDetails", accessPolicy:(*cauthdsl.policy)(0xc008fd8580), memberOrgs:  string{"Org1MSP"}, conf:common.StaticCollectionConfig{Name:"collectionMarblePrivateDetails", MemberOrgsPolicy:(*common.CollectionPolicyConfig)(0xc008fc1110), RequiredPeerCount:0, MaximumPeerCount:3, BlockToLive:0x3, MemberOnlyRead:true, XXX_NoUnkeyedLiteral:struct {}{}, XXX_unrecognized:  uint8(nil), XXX_sizecache:0}} . Skipping. 2019-11-04 16:17:28.199 UTC  gossip.privdata  listMissingPrivateData -> DEBU 42ef7 Retrieving private write sets for 1 transactions from transient store 2019-11-04 16:17:28.200 UTC  gossip.privdata  StoreBlock -> DEBU 42efa  mychannel  No missing collection private write sets to fetch from remote peers 2019-11-04 16:17:28.200 UTC  gossip.privdata  StoreBlock -> DEBU 42efb  mychannel  Added 1 namespace private write sets for block  6 , tran  0  2019-11-04 16:17:28.235 UTC  gossip.state  commitBlock -> DEBU 42f38  mychannel  Committed block  6  with 1 transaction(s) 2019-11-04 16:22:57.428 UTC  gossip.channel  func3 -> DEBU 52dc4 Removing 5 from the message store 2019-11-04 16:22:57.430 UTC  gossip.pull  Remove -> DEBU 52dc5 Removed 5, total items: 1 2019-11-04 16:24:09.349 UTC  gossip.channel  func3 -> DEBU 56511 Removing 6 from the message store 2019-11-04 16:24:09.349 UTC  gossip.pull  Remove -> DEBU 56512 Removed 6, total items: 0 {code} Looks like all 3 peers have the lines {code:java} 2019-11-04 16:17:26.099 UTC  gossip.state  dispatch -> DEBU 42d52 Handling private data collection message 2019-11-04 16:17:26.118 UTC  gossip.state  privateDataMessage -> DEBU 42d54 Private data for collection collectionMarbles has been stored {code} with peer1.org1 having the collection name as `collectionMarblesPrivateDetails` seeming to indicate dissemination was successful to all 3 peers  ></body> </Action>
<Action id="65266" issue="39711" author="denyeart" type="comment" created="2019-11-04 17:00:47.0" updateauthor="denyeart" updated="2019-11-04 17:00:47.0"> <body><! CDATA Strange, I'm still seeing that peer1.org2 doesn't get the private data at endorsement time: {code:java} 2019-11-04 16:52:21.235 UTC  transientstore  GetTxPvtRWSetByTxid -> DEBU 0f3 Getting private data from transient store for transaction 8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2 2019-11-04 16:52:21.235 UTC  gossip.privdata  StoreBlock -> DEBU 0f4  mychannel  Could not find all collection private write sets in local peer transient store for block  6 . 2019-11-04 16:52:21.235 UTC  gossip.privdata  StoreBlock -> DEBU 0f5  mychannel  Fetching 1 collection private write sets from remote peers for a maximum duration of 1m0s 2019-11-04 16:52:21.236 UTC  gossip.privdata  func1 -> DEBU 0f6 Fetching {8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2 0 marblesp collectionMarbles 6c6c363ba4824671dbb0f7ed703367a7c6d04733bb0e7b5c5ad4aa60bbbcac70} from peers 2019-11-04 16:52:21.236 UTC  gossip.privdata  fetchPrivateData -> DEBU 0f7 Total members in channel:  Endpoint: peer0.org2.example.com:9051, InternalEndpoint: peer0.org2.example.com:9051, PKI-ID: ddbd77574bb56224920028ba607cc3bdd15ebb8c767a47a66b55fcf725a01346, Metadata: Endpoint: peer0.org1.example.com:7051, InternalEndpoint: , PKI-ID: c2821cb13053978bae2c2676e3c98b08a28a026e1886ebfc7d41d3bcabdc3eb9, Metadata: Endpoint: peer1.org1.example.com:8051, InternalEndpoint: , PKI-ID: f9f0a631cbfe88e72d1ea59e78dd4925c8f9dc1716f42d867ee34c7c0368508c, Metadata:   2019-11-04 16:52:21.239 UTC  gossip.privdata  fetchPrivateData -> DEBU 0f8 Total members that fit some digest:  Endpoint: peer0.org2.example.com:9051, InternalEndpoint: peer0.org2.example.com:9051, PKI-ID: ddbd77574bb56224920028ba607cc3bdd15ebb8c767a47a66b55fcf725a01346, Metadata: Endpoint: peer0.org1.example.com:7051, InternalEndpoint: , PKI-ID: c2821cb13053978bae2c2676e3c98b08a28a026e1886ebfc7d41d3bcabdc3eb9, Metadata: Endpoint: peer1.org1.example.com:8051, InternalEndpoint: , PKI-ID: f9f0a631cbfe88e72d1ea59e78dd4925c8f9dc1716f42d867ee34c7c0368508c, Metadata:   2019-11-04 16:52:21.239 UTC  gossip.privdata  assignDigestsToPeers -> DEBU 0f9 Matching  Endpoint: peer1.org1.example.com:8051, InternalEndpoint: , PKI-ID: f9f0a631cbfe88e72d1ea59e78dd4925c8f9dc1716f42d867ee34c7c0368508c, Metadata: Endpoint: peer0.org1.example.com:7051, InternalEndpoint: , PKI-ID: c2821cb13053978bae2c2676e3c98b08a28a026e1886ebfc7d41d3bcabdc3eb9, Metadata: Endpoint: peer0.org2.example.com:9051, InternalEndpoint: peer0.org2.example.com:9051, PKI-ID: ddbd77574bb56224920028ba607cc3bdd15ebb8c767a47a66b55fcf725a01346, Metadata:   to {collectionMarbles:  8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2 } 2019-11-04 16:52:21.240 UTC  gossip.privdata  fetchPrivateData -> DEBU 0fa Matched 1 digests to 1 peer(s) 2019-11-04 16:52:21.241 UTC  gossip.privdata  scatterRequests -> DEBU 0fb Sending peer0.org1.example.com:7051 request  tx_id:"8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2" namespace:"marblesp" collection:"collectionMarbles" block_seq:6   2019-11-04 16:52:21.255 UTC  gossip.privdata  handleResponse -> DEBU 0fc Got elements:<digest:<tx_id:"8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2" namespace:"marblesp" collection:"collectionMarbles" block_seq:6 > payload:"\032\036\n\031\000color~name\000blue\000marble1\000\032\001\000\032W\n\007marble1\032L{\"docType\":\"marble\",\"name\":\"marble1\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" > from 172.18.0.4:55382 2019-11-04 16:52:21.255 UTC  transientstore  Persist -> DEBU 0fd Persisting private data to transient store for txid  8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2  at block height  6  2019-11-04 16:52:21.257 UTC  gossip.privdata  fetchFromPeers -> DEBU 0fe Fetched {8ab12dd04ef76de9aa738c64a91c74e9a45dbe4b5eaaf69b342e6233028f3ec2 0 marblesp collectionMarbles 6c6c363ba4824671dbb0f7ed703367a7c6d04733bb0e7b5c5ad4aa60bbbcac70} 2019-11-04 16:52:21.257 UTC  gossip.privdata  StoreBlock -> INFO 0ff  mychannel  Fetched all missing collection private write sets from remote peers for block  6  (21ms){code}  ></body> </Action>
<Action id="65274" issue="39711" author="caod" type="comment" body="Seems like this is happening because the SendCriteria isEligible filter for the remaining peers (after selecting preferably one from each org) ends up overlapping a remaining selected peer with one that had already been selected via the spray method introduced in the linked issue. We&apos;ll likely need to change the remaining peer send criteria to filter out already selected peers. There&apos;s a chance the SendByCriteria function chooses the correct remaining peer (in the example this is a 1/3 chance to choose the remaining peer in org2 that wasn&apos;t originally selected via the spray)" created="2019-11-04 19:55:51.0" updateauthor="caod" updated="2019-11-04 19:55:51.0"/>
<Action id="65294" issue="39711" author="caod" type="comment" created="2019-11-05 15:14:13.0" updateauthor="caod" updated="2019-11-06 20:40:13.0"> <body><! CDATA 1.4  https://gerrit.hyperledger.org/r/c/fabric/+/34233   2.0  https://gerrit.hyperledger.org/r/c/fabric/+/34270   ></body> </Action>
<Action id="65454" issue="39711" author="caod" type="comment" body="Updated 1.4.4 release note  https://gerrit.hyperledger.org/r/c/fabric/+/34329/7..8 " created="2019-11-11 20:03:11.0" updateauthor="caod" updated="2019-11-11 20:03:11.0"/>
