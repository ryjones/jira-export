<Action id="64577" issue="42688" author="angelo.decaro" type="comment" created="2019-10-11 08:56:15.0" updateauthor="angelo.decaro" updated="2019-10-11 08:56:15.0"> <body><! CDATA Hi  ~suryalnvs , please, can you tell me which commits are you using for fabric and fabric-samples? Just to be sure to reproduce the same issue. Thanks :)   ></body> </Action>
<Action id="64655" issue="42688" author="suryalnvs" type="comment" body=" ~angelo.decaro  fabric-samples - a42b858bc44a963dd54495a452013bb86dc20894, fabric -  3fbc37a58" created="2019-10-11 12:59:24.0" updateauthor="suryalnvs" updated="2019-10-11 12:59:24.0"/>
<Action id="64684" issue="42688" author="denyeart" type="comment" created="2019-10-14 03:57:35.0" updateauthor="denyeart" updated="2019-10-14 03:57:35.0"> <body><! CDATA  ~suryalnvs   ~angelo.decaro  Hmmm I'm not seeing this problem on latest master fabric and fabric-samples when setting EnableNodeOUs:true under the OrdererOrg. Anybody have another data point?  ></body> </Action>
<Action id="64693" issue="42688" author="angelo.decaro" type="comment" body=" ~suryalnvs can you confirm what  ~denyeart  reported?" created="2019-10-14 11:10:07.0" updateauthor="angelo.decaro" updated="2019-10-14 11:10:07.0"/>
<Action id="64698" issue="42688" author="suryalnvs" type="comment" created="2019-10-14 15:11:28.0" updateauthor="suryalnvs" updated="2019-10-14 15:17:13.0"> <body><! CDATA  ~denyeart  Have you changed orderer organization policies in configtx.yaml as following: {code:java} Organizations:    # SampleOrg defines an MSP using the sampleconfig.  It should never be used # in production but may be used as a template for other definitions - &OrdererOrg # DefaultOrg defines the organization which is used in the sampleconfig # of the fabric.git development environment Name: OrdererOrg        # ID to load the MSP definition as ID: OrdererMSP        # MSPDir is the filesystem path which contains the MSP configuration MSPDir: crypto-config/ordererOrganizations/example.com/msp        # Policies defines the set of policies at this level of the config tree # For organization policies, their canonical path is usually #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName> Policies: Readers: Type: Signature Rule: "OR('OrdererMSP.admin', 'OrdererMSP.orderer', 'OrdererMSP.client')" Writers: Type: Signature Rule: "OR('OrdererMSP.admin', 'OrdererMSP.client')" Admins: Type: Signature Rule: "OR('OrdererMSP.admin')" {code} I just tried again using latest master (commit: c78cccc) and fabric-samples, still see the same issue with create channel.  Attached the byfn output screenshot and orderer logs screenshot.  ></body> </Action>
<Action id="65301" issue="42688" author="denyeart" type="comment" created="2019-11-05 19:40:39.0" updateauthor="denyeart" updated="2019-11-05 19:47:49.0"> <body><! CDATA  ~suryalnvs  I get the same error with that config: {code:java} 2019-11-05 14:34:57.927 EST  orderer.common.msgprocessor  Apply -> DEBU 275 SigFilter evaluation failed: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied, policyName: /Channel/Writers, ConsensusState: STATE_NORMAL 2019-11-05 14:34:57.927 EST  orderer.common.broadcast  ProcessMessage -> WARN 276  channel: mychannel  Rejecting broadcast of config message from 127.0.0.1:65319 because of error: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied {code} To get it working I had to add 'OrdererMSP.orderer' to the Writers policy as follows:   {code:java} Policies: Readers: Type: Signature Rule: "OR('OrdererMSP.admin', 'OrdererMSP.orderer', 'OrdererMSP.client')" Writers: Type: Signature Rule: "OR('OrdererMSP.admin', 'OrdererMSP.orderer', 'OrdererMSP.client')" Admins: Type: Signature Rule: "OR('OrdererMSP.admin')" {code} I assume this is because the orderer is the one who actually takes the channel create request and 'writes' the config transaction.   ~jyellick  Is the requirement for orderer to have 'Writers' privilege something you'd expect? Can you describe how it works in some more detail?  ></body> </Action>
<Action id="65304" issue="42688" author="jyellick" type="comment" created="2019-11-05 19:45:34.0" updateauthor="jyellick" updated="2019-11-05 19:45:34.0"> <body><! CDATA  ~denyeart  Yes, in the default configuration, orderers must have write permission on all channels.  This is for two reasons.  1) The orderers process config update transactions into config transactions, and submit them under their own identity so that the processed config is attributable. 2) The default block validation policy requires that the orderer writers policy be satisfied.  ></body> </Action>
<Action id="65307" issue="42688" author="scottz" type="comment" body="Makes sense. Would it be appropriate to doc? Can you point us to any reminder or documentation or tutorial that mentions this? Maybe it is there with the MSP description, or is being added? As people enable Node OUs in v2.0 and remove *.member signees, our mistake might be made by others." created="2019-11-05 22:45:11.0" updateauthor="scottz" updated="2019-11-05 22:45:11.0"/>
<Action id="65311" issue="42688" author="jyellick" type="comment" body="Completeness of the channel config and policies documentation has always been a shortcoming of Fabric.  I&apos;d say it could be improved." created="2019-11-06 04:13:15.0" updateauthor="jyellick" updated="2019-11-06 04:13:15.0"/>
<Action id="65518" issue="42688" author="scottz" type="comment" created="2019-11-13 15:55:35.0" updateauthor="scottz" updated="2019-11-13 15:55:35.0"> <body><! CDATA I did some looking around. I think we could do two things.  1.  If I understand correctly, then as a first step I think we could edit this line in the sample config.yaml file to include  'SampleOrg.orderer' because an orderer must be a Writer.   https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/configtx.yaml#L47   2.  In readthedocs, I had trouble finding what/where to edit. I think a good place to start is here in the Operations Guide / MSP page in the "Identify Classification" section, near here:   https://hyperledger-fabric.readthedocs.io/en/release-1.4/msp.html?highlight=ordererouidentifier.|https://hyperledger-fabric.readthedocs.io/en/release-1.4/msp.html?highlight=ordererouidentifier  The top section contains 4 bullets with statements like this:  "An identity should be classified as an orderer if belongs to an ordering node."  This could be more helpful. I am thinking we could expand on these statements to explain what these roles are for, i.e. what actions require them. In our case, we could say an MSP.orderer must be included as a writer in the OrganizationsPoliciesWriters section of the configtx.yaml, because it is required for config transactions.  ~jyellick  Could you provide any additional words?  ></body> </Action>
<Action id="65524" issue="42688" author="denyeart" type="comment" body=" ~scottz  I agree with the proposals, we can use this Jira for them. Additionally the sample at  https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/configtx.yaml#L33-L42   should be updated. The sample is a bit more realistic than  https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/configtx.yaml#L47  since it has separate orderer and application orgs. Ideally the sample configs would utilize the minimum permissions necessary." created="2019-11-13 18:20:40.0" updateauthor="denyeart" updated="2019-11-13 18:20:40.0"/>
