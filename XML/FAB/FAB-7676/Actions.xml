<Action id="38356" issue="26694" author="yacovm" type="comment" created="2018-01-09 21:13:57.0" updateauthor="yacovm" updated="2018-01-09 21:13:57.0"> <body><! CDATA So from the logs I see:    {quote}peer0.org1.com ø 2018-01-09 18:19:56.437 UTC Ægossip/commÅ Send -> DEBU 267b Entering, sending GossipMessage: nonce:17180444032511408195 channel:"consortium" tag:CHAN_ONLY privateReq:<digests:<tx_id:"7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f" namespace:"mapcc" collection:"coll1" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes to 1 peers  peer0.org1.com ø 2018-01-09 18:19:56.437 UTC Ægossip/commÅ sendToEndpoint -> DEBU 267c Entering, Sending to peer0.org2.com:7051 , msg: GossipMessage: nonce:17180444032511408195 channel:"consortium" tag:CHAN_ONLY privateReq:<digests:<tx_id:"7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f" namespace:"mapcc" collection:"coll1" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes {quote} Meaning, peer0.org1 asked from peer0.org2 for the data.  Now, peer0.org2: {quote}peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/commÅ func1 -> DEBU 27c0 Got message: GossipMessage: nonce:17180444032511408195 channel:"consortium" tag:CHAN_ONLY privateReq:<digests:<tx_id:"7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f" namespace:"mapcc" collection:"coll1" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ handleRequest -> DEBU 27c1 Got GossipMessage: nonce:17180444032511408195 channel:"consortium" tag:CHAN_ONLY privateReq:<digests:<tx_id:"7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f" namespace:"mapcc" collection:"coll1" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes from 172.18.0.10:7051 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ CollectionRWSet -> DEBU 27c2 Current ledger height 7 is below requested block sequence number 7 retrieving private data from transient store, namespace mapcc collection name coll1 txID 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ createResponse -> DEBU 27c3 *Found 0 for TxID* 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f , collection coll1 for 172.18.0.10:7051 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ func1 -> DEBU 27c4 Returning 172.18.0.10:7051 0 elements {quote}   So the peer has decided it needs to return a response (the peer is eligible of receiving the data) but it didn't find any data when calling *CollectionRWSet() * {code:java} 		rwSets := p.CollectionRWSet(dig) 		logger.Debug("Found", len(rwSets), "for TxID", dig.TxId, ", collection", dig.Collection, "for", message.GetConnectionInfo().Endpoint) 		if len(rwSets) == 0 { 			continue 		} {code}  In the end, the peer gives up: {quote} peer0.org1.com    ø 2018-01-09 18:20:02.438 UTC Ægossip/privdataÅ StoreBlock -> WARN 285e Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f, seq: 0, namespace: mapcc, collection: coll1, hash:  {quote}   ~manish-sethi  ,  ~C0rWin   any idea what could make the peer not return anything from the transient store?   The method that does that didn't write into the logs above: {code} // GetTxPvtRWSetByTxid returns an iterator due to the fact that the txid may have multiple private // write sets persisted from different endorsers. func (s *store) GetTxPvtRWSetByTxid(txid string, filter ledger.PvtNsCollFilter) (RWSetScanner, error) {  	logger.Debugf("Getting private data from transient store for transaction %s", txid)  	// Construct startKey and endKey to do an range query 	startKey := createTxidRangeStartKey(txid) 	endKey := createTxidRangeEndKey(txid)  	iter := s.db.GetIterator(startKey, endKey) 	return &RwsetScanner{txid, iter, filter}, nil } {code}  ></body> </Action>
<Action id="38816" issue="26694" author="denyeart" type="comment" created="2018-01-18 00:28:47.0" updateauthor="denyeart" updated="2018-01-18 00:28:47.0"> <body><! CDATA  ~yacovm  I've found the issue in coordinator.go inspectTransaction():   https://github.com/hyperledger/fabric/blob/master/gossip/privdata/coordinator.go#L668-L692   It looks for private collections included in the transaction's hashed rwset.  If a collection is found it will ask the transient store for the private data (first local, then remote).  However if the transaction only has a private readset and no private writeset, there will be nothing in transient store, the transient store is only for private write sets. Private readsets are used only for MVCC validation later in the processing - there is nothing that needs to be retrieved from transient store.  So, when inspectTransaction() is building out the missing keys map, it should look specifically for collections with private writesets in the transaction's hashed rwset.  That is, only include  CollHashedRwSet.HashedRwSet having HashedWrites > 0.  ></body> </Action>
<Action id="38832" issue="26694" author="yacovm" type="comment" created="2018-01-18 09:39:53.0" updateauthor="yacovm" updated="2018-01-18 09:39:53.0"> <body><! CDATA Thanks  ~denyeart  (Odd - I couldn't find you when I tried to tag you in my previous comment). That is indeed the case :)   I pushed https://gerrit.hyperledger.org/r/#/c/16941/ as a fix.   ~bstasyszyn  May you check please?  ></body> </Action>
<Action id="38839" issue="26694" author="denyeart" type="comment" body="I tested the patch e2e, looks good." created="2018-01-18 13:20:21.0" updateauthor="denyeart" updated="2018-01-18 13:20:21.0"/>
<Action id="38850" issue="26694" author="bstasyszyn" type="comment" body="I tested the fix and it works fine now. Thanks!" created="2018-01-18 14:54:36.0" updateauthor="bstasyszyn" updated="2018-01-18 14:54:36.0"/>
