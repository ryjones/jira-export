<Issue id="33649" key="FAB-11944" number="11944" project="10002" reporter="tonyyang132" creator="tonyyang132" type="10004" summary="Invalid transactions are still reflected in world state" priority="2" resolution="10203" status="6" created="2018-09-11 08:30:40.0" updated="2018-09-18 13:54:44.0" resolutiondate="2018-09-18 13:54:44.0" votes="0" watches="3" workflowId="44945"> <description><! CDATA A customer of ours is running a Fabric v1.0.0 based BaaS solution, against which they conducted a pressure test recently. Out of around 10 million transactions 2 were deemed invalid:    {code:java} 2018-09-07 09:20:31.032 UTC  statevalidator  ValidateAndPrepareBatch -> WARN 72a Block  43887  Transaction index  95  TxId  24c387ec309d5cd4d1e561990bb0fbfb460e64781941ad66066d9f744e88a118  marked as invalid by state validator. Reason code  11  2018-09-07 09:20:31.035 UTC  statevalidator  ValidateAndPrepareBatch -> WARN 72b Block  43887  Transaction index  148  TxId  381240710bcf192c1d5bca3c19e1eced55ed6fc0bdecae9ee1f2722a9cb0c2f8  marked as invalid by state validator. Reason code  11  2018-09-07 09:20:31.058 UTC  kvledger  Commit -> INFO 72c Channel  pubchain : Created block  43887  with 250 transaction(s) 2018-09-07 09:20:31.077 UTC  eventhub_producer  SendProducerBlockEvent -> INFO 72d Channel  pubchain : Sending event for block number  43887  {code}       We have a little command-line tool that queries block data with fabric-sdk-go. These two transactions were indeed marked as invalid: {code:java} { "channel_id": "pubchain", "chaincode_id": "syccPubwelfare:", "transaction_id": "24c387ec309d5cd4d1e561990bb0fbfb460e64781941ad66066d9f744e88a118", "timestamp": { "seconds": 1536312029, "nanos": 324371266 }, "payload_size": 419, "is_invalid": true, "payload": "{\"id\":\"2021717\",\"doctype\":\"PweDcodeBind\",\"metadata\":{\"bcIsinventory\":0,\"donatorId\":\"1\",\"memberUnionCode\":\"用户联盟code\",\"orderId\":\"2021717\",\"orderSn\":\"101\",\"updatedAt\":1.526500214e+12},\"order_sn\":\"101\",\"donator_id\":\"1\"}" }, { "channel_id": "pubchain", "chaincode_id": "syccPubwelfare:", "transaction_id": "381240710bcf192c1d5bca3c19e1eced55ed6fc0bdecae9ee1f2722a9cb0c2f8", "timestamp": { "seconds": 1536312029, "nanos": 325652766 }, "payload_size": 419, "is_invalid": true, "payload": "{\"id\":\"2021723\",\"doctype\":\"PweDcodeBind\",\"metadata\":{\"bcIsinventory\":0,\"donatorId\":\"1\",\"memberUnionCode\":\"用户联盟code\",\"orderId\":\"2021723\",\"orderSn\":\"101\",\"updatedAt\":1.526500214e+12},\"order_sn\":\"101\",\"donator_id\":\"1\"}" }, {code}    My understanding is that an invalid transaction would not update world state. However, these transactions could still be queried with cli: {code:java} root@68721799b8b2:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C $CHANNEL_NAME -n syccPubwelfare -c '{"Args": "query","PweDcodeBind:2021717" }' 2018-09-10 12:27:20.198 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-09-10 12:27:20.198 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-09-10 12:27:20.198 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 003 Using default escc 2018-09-10 12:27:20.198 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default vscc 2018-09-10 12:27:20.199 UTC  msp/identity  Sign -> DEBU 005 Sign: plaintext: 0AFE070A6F08031A0B08A8C6D9DC0510...636F646542696E643A32303231373137 2018-09-10 12:27:20.199 UTC  msp/identity  Sign -> DEBU 006 Sign: digest: 12FBE93C47B678A2B6A751702F6E3D9B22F54A6899DD1925AFA41A0AA1AC7F6D Query Result: {"id":"2021717","doctype":"PweDcodeBind","metadata":{"bcIsinventory":0,"donatorId":"1","memberUnionCode":"用户联盟code","orderId":"2021717","orderSn":"101","updatedAt":1.526500214e+12},"order_sn":"101","donator_id":"1"} 2018-09-10 12:27:20.203 UTC  main  main -> INFO 007 Exiting..... root@68721799b8b2:/opt/gopath/src/github.com/hyperledger/fabric/peer# root@68721799b8b2:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C $CHANNEL_NAME -n syccPubwelfare -c '{"Args": "query","PweDcodeBind:2021723" }' 2018-09-10 12:27:22.316 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-09-10 12:27:22.316 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-09-10 12:27:22.316 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 003 Using default escc 2018-09-10 12:27:22.316 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default vscc 2018-09-10 12:27:22.316 UTC  msp/identity  Sign -> DEBU 005 Sign: plaintext: 0AFF070A7008031A0C08AAC6D9DC0510...636F646542696E643A32303231373233 2018-09-10 12:27:22.316 UTC  msp/identity  Sign -> DEBU 006 Sign: digest: 59E40DA74704539BB44C07E53C51AB7F5753C4007A5F844DDD80496ECE8D505F Query Result: {"id":"2021723","doctype":"PweDcodeBind","metadata":{"bcIsinventory":0,"donatorId":"1","memberUnionCode":"用户联盟code","orderId":"2021723","orderSn":"101","updatedAt":1.526500214e+12},"order_sn":"101","donator_id":"1"} 2018-09-10 12:27:22.321 UTC  main  main -> INFO 007 Exiting..... root@68721799b8b2:/opt/gopath/src/github.com/hyperledger/fabric/peer# {code} So am I missing something here?  ></description> </Issue>
