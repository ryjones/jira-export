<Issue id="17364" key="FAB-4298" number="4298" project="10002" reporter="markparz" creator="markparz" type="10001" summary="Clarification on configtx.yaml" priority="3" resolution="10000" status="6" created="2017-06-01 14:41:10.0" updated="2018-07-20 18:55:51.0" resolutiondate="2018-04-12 13:22:51.0" votes="1" watches="4" workflowId="38770" security="10001"> <description><! CDATA Hi, I went through the config file and listed some questions / clarification points that might help people. I cp/pst the file below and put comments in red. Let me know if you have questions and happy to help update the link in the doc I have listed below with anything you might want to add for robust clarification. Just let me know.        Copyright IBM Corp. All Rights Reserved. # # SPDX-License-Identifier: Apache-2.0 #  —  {color:#f691b2}##########{color}{color:#f691b2}# This file is consumed by the configuration transaction generator (configtxgen) that creates configuration artifacts (orderers, peers, and channels) that are subsequently used to deploy and configure and initial blockchain network. {color} ################################################################################ # #   {color:#f691b2}Section {color}Profiles # #   - Different configuration profiles may be encoded here to be specified #   as parameters to the configtxgen tool.  The profiles which specify consortiums #   are to be used for generating the orderer genesis block {color:#f691b2}used to bootstrap the orderer{color}.   With the correct #   consortium {color:#f691b2}organization {color}members defined in the orderer genesis block, channel creation #   requests may be generated with only the org{color:#f691b2}anization{color} member names and a consortium name # ################################################################################ {color:#ff0000}We should also include a link to : * http://hyperledger-fabric.readthedocs.io/en/latest/configtxgen.html?highlight=configtxgen#*  For any questions regarding this file{color}  Profiles:      # SampleInsecureSolo defines a configuration which {color:#f691b2}<tell me why i would use this configuration first?  i.e. can be used for kicking teh tires and deveopment when a robust orderer is not requird.  It > {color}uses the Solo orderer,     # contains no {color:#f691b2}membership services provider ({color}MSP) definitions, and allows all transactions and channel     # creation requests for the consortium SampleConsortium.     SampleInsecureSolo:         Orderer:             <<: *OrdererDefaults {color:#ff0000}use the defaults from orderer.yaml? If not using defaults what other options are there? What exactly does the syntax mean on all of these?{color}         Application:             <<: *ApplicationDefaults {color:#ff0000}Where are these picked up from? Are there other options?{color}         Consortiums:             SampleConsortium:                  Organizations: - {color:#ff0000}Comment that Org information will be consumed from sections below?{color}                {color:#ff0000}#define your organizations here, as example:{color} {color:#ff0000}               #- *AcmeOrg{color} {color:#ff0000}               #- *Org1{color}      # SampleInsecureKafka defines a configuration that differs from the     # SampleInsecureSolo one only in that is uses the Kafka-based orderer.     SampleInsecureKafka:         Orderer:             <<: *OrdererDefaults             OrdererType: kafka         Application:             <<: *ApplicationDefaults         Consortiums:             SampleConsortium:                 Organizations:                {color:#ff0000}#define your organizations here, as example:{color} {color:#ff0000}               #- *AcmeOrg{color} {color:#ff0000}               #- *Org1{color}      # SampleSingleMSPSolo defines a configuration which uses the Solo orderer,     # and contains a single MSP definition (the MSP sampleconfig).     # The Consortium SampleConsortium has only a single member, SampleOrg     SampleSingleMSPSolo:         Orderer:             <<: *OrdererDefaults             Organizations:                 - *SampleOrg         Application:             <<: *ApplicationDefaults             Organizations:                 - *SampleOrg         Consortiums:             SampleConsortium:                 Organizations:                     - *SampleOrg      # SampleEmptyInsecureChannel defines a channel with no members     # and therefore no access control     SampleEmptyInsecureChannel:         Consortium: SampleConsortium         Application:             Organizations:      # SampleSingleMSPChannel defines a channel with only the sample org as a     # member.  It is designed to be used in conjunction with SampleSingleMSPSolo     # and SampleSingleMSPKafka orderer profiles     SampleSingleMSPChannel:         Consortium: SampleConsortium         Application:             Organizations:                 - *SampleOrg  ################################################################################ # #   Section: Organizations # #   - This section defines the different organizational identities which will #   be referenced later in the configuration. # ################################################################################ Organizations:      # SampleOrg defines an MSP using the sampleconfig. It should never be used     # in production but may be used as a template for other definitions.     - &SampleOrg         # DefaultOrg defines the organization which is used in the sampleconfig         # of the fabric.git development environment.         Name: SampleOrg          # ID to load the MSP definition as. {color:#ff0000}What does DEFAULT mean? how do you set to something not default?{color}         ID: DEFAULT          # MSPDir is the filesystem path which contains the MSP configuration.         MSPDir: msp          # AdminPrincipal dictates the type of principal used for an         # organization's Admins policy. Today, only the values of Role.ADMIN and         # Role.MEMBER are accepted, which indicates a principal of role type         # ADMIN and role type MEMBER respectively.         AdminPrincipal: Role.ADMIN          # BCCSP: Select which crypto implementation or library to use for the         # blockchain crypto service provider.         BCCSP:             Default: SW {color:#ff0000}Does this mean software? and what other options do we have?{color}             SW:                 # TODO: The default Hash and Security level needs refactoring to                 # be fully configurable. Changing these defaults requires                 # coordination SHA2 is hardcoded in several places, not only                 # BCCSP. {color:#ff0000}Does this mean the user has to change this setting in other places? if so, we should doc this, and provide a link to what needs to happen. Plus, what are the other options SHA3, etc?{color}                 Hash: SHA2                 Security: 256                 # Location of key store. If this is unset, a location will be                 # chosen using: 'MSPDir'/keystore                 FileKeyStore:                     KeyStore:          AnchorPeers:             # AnchorPeers defines the location of peers which can be used for             # cross-org gossip communication. Note, this value is only encoded             # in the genesis block in the Application section context.             - Host: 127.0.0.1               Port: 7051  ################################################################################ # #   SECTION: Orderer # #   - This section defines the values to encode into a config transaction or #   genesis block for orderer related parameters. # ################################################################################ Orderer: &OrdererDefaults      # Orderer Type: The orderer implementation to start.     # Available types are "solo" and "kafka".     OrdererType: solo      Addresses:         - 127.0.0.1:7050      # Batch Timeout: The amount of time to wait before creating a batch. {color:#ff0000}Timeout and size configs are "or" configs right? meaning 2s or BatchSize as defined.{color}      BatchTimeout: 2s      # Batch Size: Controls the number of messages batched into a block.     BatchSize:          # Max Message Count: The maximum number of messages to permit in a         # batch.         MaxMessageCount: 10          # Absolute Max Bytes: The absolute maximum number of bytes allowed for         # the serialized messages in a batch. If the "kafka" OrdererType is         # selected, set 'message.max.bytes' and 'replica.fetch.max.bytes' on the         # Kafka brokers to a value that is equal to or larger than this one.         AbsoluteMaxBytes: 99 MB          # Preferred Max Bytes: The preferred maximum number of bytes allowed for         # the serialized messages in a batch. A message larger than the         # preferred max bytes will result in a batch larger than preferred max         # bytes.         PreferredMaxBytes: 512 KB      # Max Channels is the maximum number of channels to allow on the ordering     # network. When set to 0, this implies no maximum number of channels.     MaxChannels: 0      Kafka: {color:#ff0000}Since orderer type above is set to solo, should this section be commented out?{color}         # Brokers: A list of Kafka brokers to which the orderer connects. {color:#ff0000}If there are multiple, do you list out all the broker ip's?{color}         # NOTE: Use IP:port notation         Brokers:             - 127.0.0.1:9092      # Organizations is the list of orgs which are defined as participants on     # the orderer side of the network. {color:#ff0000}"orderer side of the network" is a little confusing, I'm assuming this means which the orgs in which the orderer will communicate with.{color}     Organizations:  ################################################################################ # #   SECTION: Application # #   - This section defines the values to encode into a config transaction or #   genesis block for application related parameters. # ################################################################################ Application: &ApplicationDefaults      # Organizations is the list of orgs which are defined as participants on     # the application side of the network. {color:#ff0000}What does this really mean, is this similar of the same list that would be above in the orderer section? Why would this be different, we should do more of a write up in the doc regarding this.{color}     Organizations:  ></description> </Issue>
