<Action id="18504" issue="12302" author="rseeger" type="comment" created="2016-08-09 17:49:46.0" updateauthor="rseeger" updated="2016-08-09 22:02:42.0"> <body><! CDATA First peer is started with:  {{docker run -d -it -e CORE_VM_ENDPOINT=http://172.17.42.1:2375 -e CORE_LOGGING_LEVEL=DEBUG -e CORE_PEER_ID=HL1 -e CORE_PEER_ADDRESSAUTODETECT=true -p 7051:7051 hyperledger/fabric-peer peer node start}}  Then we start subsequent peers (on different machines) to point to the external IP of the first (let's say it's 10.20.30.40):  {{docker run -d -it -e CORE_VM_ENDPOINT=http://172.17.0.1:2375 -e CORE_PEER_ID=HL2 -e CORE_PEER_ADDRESSAUTODETECT=true -e CORE_PEER_DISCOVERY_ROOTNODE=10.20.30.40:7051 -e CORE_LOGGING_LEVEL=DEBUG -p 7051:7051 hyperledger/fabric-peer peer node start}}  All the peers can talk to the first one (because the external IP is explicitly specified) but not each other (because they only announce their Docker IPs)  ></body> </Action>
<Action id="18505" issue="12302" author="rseeger" type="comment" body="I think the solution would be to pass the host IP to the docker container (as -e argument), then modify GetLocaIP() to check for that first. The docker-ized peer would then announce the correct IP to the network. I could make a pull request for this if it the correct approach. Thoughts?" created="2016-08-09 22:01:22.0" updateauthor="rseeger" updated="2016-08-09 22:01:22.0"/>
<Action id="18506" issue="12302" author="bgorman" type="comment" created="2016-08-10 02:34:51.0" updateauthor="bgorman" updated="2016-08-10 03:02:46.0"> <body><! CDATA Turn off autodetection and supply the external IP or hostname manually: -e CORE_PEER_ADDRESSAUTODETECT=false -e CORE_PEER_ADDRESS=routable.host.name.or.ip:7051  ></body> </Action>
<Action id="18508" issue="12302" author="rseeger" type="comment" body="Perfect! Thanks" created="2016-08-10 17:19:27.0" updateauthor="rseeger" updated="2016-08-10 17:19:27.0"/>
