<Action id="39797" issue="27452" author="clayton sims" type="comment" body="Yacov can you help assess. " created="2018-02-07 17:30:20.0" updateauthor="clayton sims" updated="2018-02-07 17:30:20.0"/>
<Action id="39799" issue="27452" author="yacovm" type="comment" created="2018-02-07 17:54:46.0" updateauthor="yacovm" updated="2018-02-07 17:54:46.0"> <body><! CDATA Yes, my assessment is that this is related to the  configtx|https://github.com/hyperledger/fabric/blob/0631ccd2b1e30f56088dd3905a78bfb73a93ed51/common/configtx/manager.go#L238  framework.   ~jyellick  ^   ></body> </Action>
<Action id="39805" issue="27452" author="jyellick" type="comment" created="2018-02-07 18:51:15.0" updateauthor="jyellick" updated="2018-02-07 18:51:15.0"> <body><! CDATA Correct.  This is related to the configtx framework.  When the capabilities framework is enabled, the way the new config is computed changes.  This means that the v1.0 peer is rejecting the update prior to getting to the point of the unrecognized key.  Since this is already code out in v1.0.x, I'm not sure that there is much to be done about it.  I would propose that this be treated as a doc defect.  ></body> </Action>
<Action id="39811" issue="27452" author="yacovm" type="comment" body="I agree with your analysis, Jason. " created="2018-02-07 19:17:38.0" updateauthor="yacovm" updated="2018-02-07 19:17:38.0"/>
<Action id="39829" issue="27452" author="scottz" type="comment" body="We should still fix it in code, so the log is clearer when this happens in *future* upgrades. And I suggest Surya create another bug/improvement to ALSO add something to the doc for upgrading to v1.1." created="2018-02-07 23:27:52.0" updateauthor="scottz" updated="2018-02-07 23:27:52.0"/>
<Action id="39947" issue="27452" author="clayton sims" type="comment" body="I think  ~jyellick  already has that in the newer code for going forward.    ~scottz   or  ~suryalnvs   I assume you will open the doc or better yet submit the doc change yourself. " created="2018-02-09 18:27:59.0" updateauthor="clayton sims" updated="2018-02-09 18:27:59.0"/>
<Action id="39995" issue="27452" author="scottz" type="comment" created="2018-02-11 20:05:09.0" updateauthor="scottz" updated="2018-02-11 20:05:09.0"> <body><! CDATA Not quite,  ~Clayton Sims .  Jason merely stated that since the v1.0 code is out in the field already, we cannot change it. The traceback and log we observed is in the v1.0 code. OK, I understand.  However, the point is that it says nothing about the peer not yet being upgraded, which is necessary before the peer can even handle the config update - and also says nothing about the particular config update "v1_1" which is causing the peer to intentionally crash. I realize we cannot change the error response or the traceback or the code logic in v1.0 software (unless we wanted to do that in another v1.0.8? release and force people to upgrade to that before proceeding towards v1.1 - which is NOT something I would recommend for merely this reason). Thus, we get to the alternative of capturing that panic log in the documentation and explain to the operators that the peer might not yet be upgraded and cannot handle the v1_1 capabilities update.  ~suryalnvs  can create a bug for enhancing the doc for that.  Of course,  ~jyellick  can confirm if my understanding is correct.  My suggestion was (in addition to the doc enhancement) to ensure this made sense IN THE v1.1 CODE and logs, so it would be accurate and helpful in FUTURE upgrades from v1.1 and up. Would it be clear, between the error logs and the panic traceback, that the panic occurs because we are trying to enable capability v1_2 while the peer binary is still on v1.1? It does not appear so, unless the v1.1 code adds that information to the CRIT log (because what we observed does NOT specify the config field that the user is attempting to change, which is causing the panic). That is the other point of my request. This should be made very obvious.      ></body> </Action>
<Action id="40010" issue="27452" author="jyellick" type="comment" created="2018-02-12 05:05:02.0" updateauthor="jyellick" updated="2018-02-12 05:05:02.0"> <body><! CDATA {quote} Not quite, Clayton Sims.  Jason merely stated that since the v1.0 code is out in the field already, we cannot change it. The traceback and log we observed is in the v1.0 code. OK, I understand.  However, the point is that it says nothing about the peer not yet being upgraded, which is necessary before the peer can even handle the config update - and also says nothing about the particular config update "v1_1" which is causing the peer to intentionally crash. I realize we cannot change the error response or the traceback or the code logic in v1.0 software (unless we wanted to do that in another v1.0.8? release and force people to upgrade to that before proceeding towards v1.1 - which is NOT something I would recommend for merely this reason). Thus, we get to the alternative of capturing that panic log in the documentation and explain to the operators that the peer might not yet be upgraded and cannot handle the v1_1 capabilities update. Naga Surya Lanka can create a bug for enhancing the doc for that. Of course, Jason Yellick can confirm if my understanding is correct. {quote}  Yes, in order to make this log message more descriptive, we would need to patch v1.0.x to be aware of, and to output a sensible log message for capabilities.  {quote} My suggestion was (in addition to the doc enhancement) to ensure this made sense IN THE v1.1 CODE and logs, so it would be accurate and helpful in FUTURE upgrades from v1.1 and up. Would it be clear, between the error logs and the panic traceback, that the panic occurs because we are trying to enable capability v1_2 while the peer binary is still on v1.1? It does not appear so, unless the v1.1 code adds that information to the CRIT log (because what we observed does NOT specify the config field that the user is attempting to change, which is causing the panic). That is the other point of my request. This should be made very obvious.  {quote}  This is already covered in the new code.  If you are curious, you may even test this today.  Simply define a new capability, say, {{V1_2}} or... {{Crazy_Peer_Crasher_7}} which the peer does not support.  Then, in the peer log, you will see a panic, but with an accompanying descriptive log message:  https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L130-L136 https://github.com/hyperledger/fabric/blob/master/common/capabilities/capabilities.go#L50  So, I would expect that the log should contain a panic like:  {noformat} Panic:  channel foo  incompatible Application capability V1_2 is required but not supported {noformat}   ></body> </Action>
<Action id="40073" issue="27452" author="clayton sims" type="comment" body="This now goes to a doc defect.  " created="2018-02-13 18:21:02.0" updateauthor="clayton sims" updated="2018-02-13 18:21:02.0"/>
<Action id="40452" issue="27452" author="denyeart" type="comment" body=" ~jyellick  Are you intending to document something for this one, and for FAB-8213?" created="2018-02-20 20:18:17.0" updateauthor="denyeart" updated="2018-02-20 20:18:17.0"/>
<Action id="40720" issue="27452" author="jyellick" type="comment" body="Yes, will make sure that this gets into the doc, but, we need the doc to exist first." created="2018-02-24 15:50:10.0" updateauthor="jyellick" updated="2018-02-24 15:50:10.0"/>
<Action id="40735" issue="27452" author="jyellick" type="comment" body="Verified this is captured in the upgrade doc." created="2018-02-24 19:05:52.0" updateauthor="jyellick" updated="2018-02-24 19:05:52.0"/>
