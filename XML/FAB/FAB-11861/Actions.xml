<Action id="49850" issue="33475" author="kchristidis" type="comment" body="Adarsh, thanks for creating this! When you take a moment, let&apos;s use the Description field to capture what we&apos;re doing, and why we&apos;re doing it." created="2018-09-04 19:56:19.0" updateauthor="kchristidis" updated="2018-09-04 19:56:19.0"/>
<Action id="49853" issue="33475" author="kchristidis" type="comment" created="2018-09-04 20:15:52.0" updateauthor="kchristidis" updated="2018-09-04 20:15:52.0"> <body><! CDATA  ~guoger : Based on what we discussed in {{fabric-orderer-dev}} earlier today, what we're talking about here is the definition and setting of defaults for, say, the following Raft FSM-specific settings: * TickInterval * ElectionTick * HeartbeatTick * MaxSizePerMsg * MaxInflightMsgs  These would be copied by the system channel to any newly-created channel, and from there, they'd be read and adopted by every participating Raft node in that channel.  My question however is: are these settings update-able? And if they are, i.e. if a channel configuration is submitted that, say, modifies the {{MaxSizePerMsg}}, what does the Raft node for that channel have to do so that this change takes effect? Halt and restart? If that is the case, we run into an issue of all nodes for that channel halting concurrently. We need to think this flow through. Please chime in with thoughts.  ></body> </Action>
<Action id="49872" issue="33475" author="guoger" type="comment" created="2018-09-05 07:25:27.0" updateauthor="guoger" updated="2018-09-06 02:08:02.0"> <body><! CDATA  ~kchristidis  Unfortunately or fortunately, these are not updateable at runtime in etcd/raft.  +Q1. should they be _global_ *or* _per channel_?+ First of all, both should work. - if we follow the pattern of kafka, then they should be global. Essentially they carry similar responsibilities as {{kafka}} section in {{orderer.yaml}}, deciding how raft works *internally* without affecting Fabric. I don't see an obvious reason in practice why a channel wants different {{ElectionTick}} than others, therefore we shouldn't provide unnecessary flexibility by burdening _channel admins_ with these options. - if we want configs to be self-contained for consensus plugins, then we could have them parsed from {{Orderer.ConsensusMetadata}} in {{consenter}}.  +Q2. should they be enforced to be consistent across all raft nodes? what would happen if they are not?+ Yes, even though this mechanism is no provided by etcd/raft out-of-box. - if {{ElectionTick}} or {{HeartbeatTick}} are different, cluster should still function, since it depends on terms and index. According to  etcd tunning|https://github.com/etcd-io/etcd/blob/master/Documentation/tuning.md  {quote}The heartbeat interval and election timeout value should be the same for all members in one cluster. Setting different values for etcd members may disrupt cluster stability. {quote} - if {{MaxSizePerMsg}} or {{MaxInflightMsgs}} are different, cluster should still function, because they take effect on leaders only. (basically, if another node is elected as leader in new term, we would be using different values from that node) - for other config options, I haven't studied the consequence of inconsistency. I could if necessary.  +Q3. what do {{etcd}} (not raftexample) and {{swarmkit}} configure these?+ ||Option||etcd||swarmkit||fabric|| |TickInterval|configurable (default: 100ms)|hardcoded 1s|we should follow etcd| |HeartbeatTick|configurable (default: 1)|hardcoded 1|maximum of average round-trip time (RTT) between members| |ElectionTick|configurable (deafult: 10)|hardcoded 10|it's suggested to be at least 10 times of heartbeat| |MaxSizePerMsg|hardcoded 1*1024*1024|hardcoded math.MaxUint16|TBD| |MaxInflightMsgs|hardcoded 512|hardcoded 256|TBD| |CheckQuorum|hardcoded true|hardcoded true|hardcoded true| |ReadOnlyOption|hardcoded ReadOnlySafe|hardcoded ReadOnlySafe|hardcoded ReadOnlySafe| |DisableProposalForwarding|default false| |hardcoded true because only leader can produce blocks|     ultimately, what really matters are {{TickInterval}}, {{ElectionTick}} and {{HeartbeatTick}}  ></body> </Action>
<Action id="49875" issue="33475" author="adarshsaraf123" type="comment" created="2018-09-05 08:12:48.0" updateauthor="adarshsaraf123" updated="2018-09-05 08:12:48.0"> <body><! CDATA IMO, these should be part of the channel config just to _ensure consistency across the orderer nodes_. If these are set locally in  {{orderer.yaml}} then we run the risks of them not being same across the orderer nodes leading to cluster instability as mentioned above.  If we do agree on the lack of a need to allow these to be configurable, we can still restrict updates to them in the same manner as we are restricting updates to the {{Consenters}} set in the {{Metadata}}.  ></body> </Action>
<Action id="49877" issue="33475" author="guoger" type="comment" body=" ~adarshsaraf123  I could live with it, as long as we have default value inherited from system chain :) ideally, we should have plugin level configurations." created="2018-09-05 08:55:38.0" updateauthor="guoger" updated="2018-09-05 08:56:44.0"/>
<Action id="49889" issue="33475" author="yacovm" type="comment" created="2018-09-05 13:46:23.0" updateauthor="yacovm" updated="2018-09-05 13:46:23.0"> <body><! CDATA I think for now (1.4) - for election ticks, HB ticks, etc. (all raft Node config) we can just change the fabric config and then have the node restarted to pick the latest values.  Since raft.Node doesn't support changing this dynamically, I guess that optimizing for a scenario that is unlikely to happen in v1.4 is pointless.      ~kchristidis  ?  ></body> </Action>
<Action id="49914" issue="33475" author="kchristidis" type="comment" created="2018-09-05 18:39:42.0" updateauthor="kchristidis" updated="2018-09-06 13:23:26.0"> <body><! CDATA Jay: Thanks for the detailed breakdown! Back when I was researching this, I had also bumped into  this thread|https://github.com/etcd-io/etcd/issues/4887  where the creator of Raft chimed in. Might also be useful when we're extracting sensible defaults, though what you have in the table should get us going. My notes were: * We get a heartbeat per tick * A tick is usually larger than the expected RTT * The election timeout is 10*ticks by default * Default heartbeat tick is ~100 ms  These values should be organized on the channel level (as Yacov and Adarsh have suggested), and will be inherited from the system channel defaults (as Jay noted, and as we do today with other values in the /Channel/Orderer part of the tree).  I agree with Yacov's proposal of not being too clever with the processing of these updates for now. If a node wishes to pick up the new values, the administrator will have to reboot it. The issue is that someone may reboot the node, and someone else may not, so we have two nodes running on different settings, but I honestly don't expect anyone to touch these settings anyway, and if they do, they should get on the phone and be ready to reboot.  Adarsh: let me know if you have a clear path forward!  ></body> </Action>
<Action id="49945" issue="33475" author="adarshsaraf123" type="comment" body=" ~kchristidis  Yes I do have a clear path forward. Thanks." created="2018-09-06 04:44:43.0" updateauthor="adarshsaraf123" updated="2018-09-06 04:44:43.0"/>
<Action id="49953" issue="33475" author="guoger" type="comment" created="2018-09-06 07:31:02.0" updateauthor="guoger" updated="2018-09-06 07:31:02.0"> <body><! CDATA Also, we need to validate raft configs to prevent it from crash. Logic can be taken  here|https://github.com/etcd-io/etcd/blob/master/raft/raft.go#L201-L231   cc  ~adarshsaraf123   ></body> </Action>
<Action id="49994" issue="33475" author="kchristidis" type="comment" body="^^ Great catch, thanks!" created="2018-09-06 13:04:17.0" updateauthor="kchristidis" updated="2018-09-06 13:04:17.0"/>
<Action id="50221" issue="33475" author="adarshsaraf123" type="comment" body="https://gerrit.hyperledger.org/r/#/c/26178/" created="2018-09-11 07:02:27.0" updateauthor="adarshsaraf123" updated="2018-09-11 07:02:27.0"/>
