<Action id="47167" issue="31758" author="jyellick" type="comment" body="Was the JSON created with a v1.2 {{configtxlator}}?  This error sounds to me like the config was decoded with a v1.1 version of configtxlator and you are attempting to re-encode with a v1.2 version." created="2018-07-10 13:55:27.0" updateauthor="jyellick" updated="2018-07-10 13:55:27.0"/>
<Action id="47169" issue="31758" author="dshuffma" type="comment" created="2018-07-10 14:53:19.0" updateauthor="dshuffma" updated="2018-07-10 14:54:45.0"> <body><! CDATA  ~jyellick  nope, all using a 1.2 configtxlator.  side note - its not possible for our code to use a different configtxlator for different operations since we only feed it 1 url.  looking back at the issue, I see my wording is a little confusing, i'll correct that.  ></body> </Action>
<Action id="47173" issue="31758" author="jyellick" type="comment" body="Can you post the original (binary) message to this JIRA so that I can attempt to reproduce locally?" created="2018-07-10 15:16:00.0" updateauthor="jyellick" updated="2018-07-10 15:16:00.0"/>
<Action id="47183" issue="31758" author="dshuffma" type="comment" body="since these are customer networks, I can&apos;t hand those out (probably). I suppose I can make my own network and contrive an update and give you that.  I&apos;ll try to get that together and post back tomorrow." created="2018-07-10 18:02:39.0" updateauthor="dshuffma" updated="2018-07-10 18:02:39.0"/>
<Action id="47426" issue="31758" author="jyellick" type="comment" created="2018-07-17 15:22:12.0" updateauthor="jyellick" updated="2018-07-17 15:22:12.0"> <body><! CDATA I've been unable to reproduce this.  To attempt, first I create a bare minimum proto message for the config containing a "type" field.  {noformat} $ cat test.json { "config": { "type": 1 } } {noformat}  Then, using the official v1.1 configtxlator release binary, I encoded this into its binary protobuf form.  {noformat} $ fabric-samples-v1.1/bin/configtxlator proto_encode --type common.ConfigEnvelope --input test.json --output test.pb {noformat}  From here, I used the official v1.2 configtxlator release binary to decode that binary proto to JSON.  Note, that there is no 'type' field present (though it does emit a default 'sequence' field, which is unrelated).  {noformat} $ fabric-samples-v1.2/bin/configtxlator proto_decode --type common.ConfigEnvelope --input test.pb { "config": { "sequence": "0" } } {noformat}  Just to verify, I also tried taking this 'type'-less output JSON back into binary protobuf, and things worked fine.  {noformat} $ fabric-samples-v1.2/bin/configtxlator proto_decode --type common.ConfigEnvelope --input test.pb | fabric-samples-v1.2/bin/configtxlator proto_encode --type common.ConfigEnvelope --output test-v12.pb {noformat}  Are you absolutely certain that the JSONs were generated by a v1.2 configtxlator and not an earlier version?  ></body> </Action>
<Action id="47432" issue="31758" author="dshuffma" type="comment" created="2018-07-17 17:23:34.0" updateauthor="dshuffma" updated="2018-07-17 17:23:34.0"> <body><! CDATA Well, i'm absolutely certain of nothing...  I'm wondering now if I picked up the wrong version of configtxlator and sent you on a wild goose chase...  Looks like I'm using `1.2.0-rc1`, which is mostly likely out of date. Can we keep this issue in the "returned" state until I find the time to update that and retest?  If I repeat it i'll post back with the binary this time.  thanks for the help so far!  also as a side note, the service is not blocked by this.  we now have the ability to switch between different configtxlators for different fabric versions.  ></body> </Action>
<Action id="47433" issue="31758" author="jyellick" type="comment" body="Works for me, if this is still open in a week or two I may give you a nudge, but no harm for now." created="2018-07-17 17:47:52.0" updateauthor="jyellick" updated="2018-07-17 17:47:52.0"/>
