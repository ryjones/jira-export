<Issue id="47029" key="FAB-18526" number="18526" project="10002" reporter="guoger" creator="guoger" type="10004" summary="Repeatedly creating same channel quickly may cause unrecoverable orderer panic" priority="2" status="10300" created="2021-07-16 17:48:38.0" updated="2021-09-24 08:52:33.0" votes="0" watches="3" workflowId="60942" archived="N"> <description><! CDATA reproduce step: 1. create a network with 3 or 5 orderers (so that consensus is reached slower than solo) 2. submit a tx to create channel 3. submit the same tx to create channel again *immediately* 4. there's a good chance that orderer will crash with following stack {code:java} 2021-07-06 13:07:52.348 UTC  orderer.commmon.multichannel  createNewChain -> PANI 028 Error creating chain support: error creating consenter for channel: lc5d2f1a: failed to restore persisted raft data: failed to create or read WAL: failed to open WAL: fileutil: file already locked panic: Error creating chain support: error creating consenter for channel: lc5d2f1a: failed to restore persisted raft data: failed to create or read WAL: failed to open WAL: fileutil: file already locked  goroutine 122  running : go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc00002c000, 0x0, 0x0, 0x0) /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:230 +0x545 go.uber.org/zap.(*SugaredLogger).log(0xc0000101e0, 0xc000331f04, 0x109e7da, 0x20, 0xc00025b4e8, 0x1, 0x1, 0x0, 0x0, 0x0) /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0x100 go.uber.org/zap.(*SugaredLogger).Panicf(...) /go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159 github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(...) /go/src/github.com/hyperledger/fabric/common/flogging/zap.go:74 github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).createNewChain(0xc00077a680, 0xc0002dc730, 0x0) /go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:562 +0x1ef github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newChain(0xc00077a680, 0xc0002dc730) /go/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:543 +0x9d github.com/hyperledger/fabric/orderer/common/multichannel.(*BlockWriter).WriteConfigBlock(0xc00025f040, 0xc00004e3c0, 0xc0000b0228, 0x7, 0x7) /go/src/github.com/hyperledger/fabric/orderer/common/multichannel/blockwriter.go:118 +0x357 github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeConfigBlock(0xc0001438c0, 0xc00004e3c0, 0x5) /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1272 +0x28f github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeBlock(0xc0001438c0, 0xc00004e3c0, 0x5) /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:842 +0x1a9 github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).apply(0xc0001438c0, 0xc000288588, 0x5, 0x5) /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:1036 +0x24a github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).run(0xc0001438c0) /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:750 +0x95c created by github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).Start /go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:368 +0x230 {code} Here's roughly what's going on in code: 1. 1st channel creation tx submitted, *but not committed yet*, so that channel hasn't been created 2. 2nd channel creation tx submitted, and *passes evaluation* because it does not exist in Registrar 3. 1st tx gets committed, and instantiates raft, which *locks wal files* 4. 2nd tx gets committed, and *attempts to lock wal files again* 5. panic  Â   To fix: an easy-to-think fix would be to insert a existence check  here|https://github.com/hyperledger/fabric/blob/44ab2bf96cf0d304a2f1d8f8b8cdd843e2279381/orderer/common/multichannel/registrar.go#L559  {code:go} 	chainID := ledgerResources.ConfigtxValidator().ChannelID() 	if _, exist := r.chains chainID ; exist { 		logger.Warnf("Channel  %s  already exist, it's likely that channel creation tx were re-submitted too quickly", chainID) 		return 	} {code}  ></description> </Issue>
