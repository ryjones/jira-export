<Issue id="20680" key="FAB-6078" number="6078" project="10002" reporter="nickgaski" assignee="tongliofcary" creator="nickgaski" type="10001" summary="Enhance cryptogen utility to persist a static Root CA configuration" priority="3" resolution="10000" status="6" created="2017-09-07 20:38:50.0" updated="2018-07-20 18:49:03.0" resolutiondate="2018-03-31 19:50:52.0" votes="0" watches="5" workflowId="39952"> <description><! CDATA There is currently a debilitating limitation with the cryptogen utility as it assumes the identity of a unique root CA with each use.  The outputted organizational CA root certs (`e.g. ca.org1.example.com-cert.pem`) are truly intermediate root certs.  As a result it is unfeasible to run the tool a second time to create certs and keys that are capable of interacting with an already bootstrapped fabric network  A simple objective is to use a basic crypto-config.yaml configuration to produce a set of crypto material for an orderer org and two peer orgs, and then bootstrap a network.  (The BYFN scenario).  Then use cryptogen a second time to produce crypto material for a third peer org and submit configuration updates to the ordering service to join this org (and by extension its peer(s)) to a channel and add the peer organization to the consortium definition at the system level.   There should also be accompanying documentation specifying 1. what the various certs and keys are used for 2. which certs exist within the orderer configuration block and channel configuration blocks.  Among the community, there is still a big gap of knowledge regarding Fabric's MSP implementation and the accompanying hierarchy.  ></description> </Issue>
