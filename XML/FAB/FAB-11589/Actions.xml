<Action id="48859" issue="32829" author="kchristidis" type="comment" created="2018-08-14 16:14:34.0" updateauthor="kchristidis" updated="2018-08-14 16:14:34.0"> <body><! CDATA The possible subtasks related to this story are captured in the Week 2 sheet (rows 3-5):  https://docs.google.com/spreadsheets/d/1R02-xjdl4hNw90kN4NZ1kX0f4QoIYn51_1UHlwy-GQs/edit#gid=724692156   Break them down and expand on them as you see fit.  ></body> </Action>
<Action id="49940" issue="32829" author="kchristidis" type="comment" body="Jay&apos;s note on why {{raftexample}} is not quite right in the way they&apos;re approaching crash-fault tolerance:Â https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=qRESNebBjdjpCGEqx" created="2018-09-06 00:48:46.0" updateauthor="kchristidis" updated="2018-09-06 00:48:46.0"/>
<Action id="49954" issue="32829" author="guoger" type="comment" created="2018-09-06 08:21:21.0" updateauthor="guoger" updated="2018-09-06 08:22:01.0"> <body><! CDATA A quick scan of {{etcd}} and {{swarmkit}} shows that their state machines are *idempotent*, meaning _it doesn't matter if an applied message is being applied again_, i.e. with /'my-key': 'foo'/, it doesn't matter if we set 'my-key' to 'foo' again during restart.  However, it's not the case for orderer, as we must not write a block to ledger more than once.  Luckily, {{etcd/raft}} provides a nice config  option|https://github.com/etcd-io/etcd/blob/master/raft/raft.go#L145-L149  *Applied uint64* to prevent raft from reporting already applied messages. So I propose to *persist raft {{Index}} in every block metadata*, which is used to restart a raft node. This is similar to what we have today for kafka.  wdyt,  ~kchristidis   ></body> </Action>
<Action id="52439" issue="32829" author="kchristidis" type="comment" body="I had missed that comment when it was originally posted, sorry. Just to close the loop on this, I&apos;m onboard with the idea, and this is in the CR that you submitted, so we&apos;re good. Thanks for capturing this in JIRA." created="2018-10-19 00:14:47.0" updateauthor="kchristidis" updated="2018-10-19 00:14:47.0"/>
