<Issue id="44767" key="FAB-17727" number="17727" project="10002" reporter="denyeart" assignee="denyeart" creator="denyeart" type="10004" summary="Fix error message for channel creation failures due to adding orgs that aren&apos;t in an (empty) consortium" priority="3" resolution="10000" status="6" created="2020-04-09 16:37:04.0" updated="2020-11-20 03:31:34.0" resolutiondate="2020-11-20 02:54:03.0" votes="0" watches="3" workflowId="58686" archived="N"> <description><! CDATA I accidentally used SampleInsecureSolo profile for the system channel since that is the default for release-1.4:   https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/orderer.yaml#L91   This profile has no consortium members. Then when trying to create a channel, I get error in orderer log: {code:java} 2020-04-09 11:42:55.648 EDT  orderer.common.broadcast  ProcessMessage -> WARN ab4  channel: mychannel  Rejecting broadcast of config message from 127.0.0.1:54015 because of error: error validating channel creation transaction for new channel 'mychannel', could not succesfully apply update to template configuration: error authorizing update: error validating ReadSet: existing config does not contain element for  Group   /Channel/Application/SampleOrg but was in the read set {code} The error message was confusing to me, because I looked in my channel config transaction, and I see both a ReadSet and WriteSet containing Application/SampleOrg (and the 'existing config' part of the message was also confusing, because the existing system channel config would never have application groups regardless).  Looking into the NewChannelConfig code, I see comment: {code:java} // If the consortium has no members, allow the source request to contain arbitrary members {code}  https://github.com/hyperledger/fabric/blob/release-1.4/orderer/common/msgprocessor/systemchannel.go#L295   So apparently this block of code will silently exclude the application orgs that are in the config update from being in the 'generated' config. The consequence is that eventually the validation against ReadSet will fail against the 'generated config' (not the 'existing config'!) with the above confusing error message.  I'm thinking it would be better NOT to "allow the source request to contain arbitrary members", and return an error at that point, rather than silently allowing it but having it fail later on with a confusing message about ReadSet.  ></description> </Issue>
