<Action id="26491" issue="18070" author="kchristidis" type="comment" body="Nishi, how does this relate to FAB-4583? Trying to cut down on the duplicates." created="2017-06-16 02:35:26.0" updateauthor="kchristidis" updated="2017-06-16 02:35:26.0"/>
<Action id="26600" issue="18070" author="nishi" type="comment" created="2017-06-16 17:40:48.0" updateauthor="nishi" updated="2017-06-16 17:40:48.0"> <body><! CDATA Added FAB-4373, so that I can verify once this get fixed. Filed it as a generic for anywhere we might encounter "BAD_STATUS".  When verifying FAB-4373, I got a simple message saying "BAD_STATUS" expecting a more detailed message with why Request Failed to deliver.  ></body> </Action>
<Action id="26605" issue="18070" author="kchristidis" type="comment" created="2017-06-16 18:23:45.0" updateauthor="kchristidis" updated="2017-06-16 18:23:45.0"> <body><! CDATA I don't follow. I'm asking what the relationship to FAB-4583 is, cause it seems to me like there's some overlap.  Put it another way: if FAB-4767 is addressed, is FAB-4583 taken care of?  If it is, please close FAB-4583. If it's not, let's explain the differences.  Let's clarify this.     ></body> </Action>
<Action id="26768" issue="18070" author="nishi" type="comment" body=" ~kchristidis  FAB-4583 is not related to &quot;BAD_STATUS&quot; issue. Commented on FAB-4583." created="2017-06-19 16:01:18.0" updateauthor="nishi" updated="2017-06-19 16:01:30.0"/>
<Action id="28083" issue="18070" author="kchristidis" type="comment" body="Just to be clear: the plan of attack here is adding a &quot;details&quot; (or whatever we want to call it) string field to the  BroadcastResponse proto definition|https://github.com/hyperledger/fabric/blob/master/protos/orderer/ab.proto#L26 ." created="2017-07-10 12:04:37.0" updateauthor="kchristidis" updated="2017-07-10 12:04:37.0"/>
<Action id="29729" issue="18070" author="nishi" type="comment" created="2017-08-11 15:26:08.0" updateauthor="nishi" updated="2017-08-11 15:26:08.0"> <body><! CDATA Fabric commit level: *4388f48ea62907daa7906c78235fe1de73c87c1e*  Steps to verify -FAB-4767- =========================  1. Get latest master 2. make clean docker-clean dist-clean 3. make release docker 4. cd fabric/examples/e2e_cli 5. make sure e2e_cli runs ok by default successfully 6. ./network_setup.sh up myc  7. cp scripts/script.sh scripts/script_original.sh 8. edit script.sh 9. In setGlobals function  comment where we pass admin certs #CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp and instead pass user cert CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp  10. run e2e_cli now again ./network_setup.sh restart myc  11. Detailed error message displayed as follows while creating channel which required admin certs: {code:java} ===================== Ordering Service is up and running =====================   Creating channel... CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key CORE_PEER_LOCALMSPID=Org1MSP CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt CORE_PEER_TLS_ENABLED=true CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp CORE_PEER_ID=cli CORE_LOGGING_LEVEL=DEBUG CORE_PEER_ADDRESS=peer0.org1.example.com:7051 2017-08-11 14:51:15.940 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2017-08-11 14:51:15.940 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2017-08-11 14:51:15.943 UTC  channelCmd  InitCmdFactory -> INFO 003 Endorser and orderer connections initialized 2017-08-11 14:51:15.944 UTC  msp  GetLocalMSP -> DEBU 004 Returning existing local MSP 2017-08-11 14:51:15.944 UTC  msp  GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity 2017-08-11 14:51:15.944 UTC  msp  GetLocalMSP -> DEBU 006 Returning existing local MSP 2017-08-11 14:51:15.944 UTC  msp  GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity 2017-08-11 14:51:15.944 UTC  msp/identity  Sign -> DEBU 008 Sign: plaintext: 0A88060A074F7267314D535012FC052D...53616D706C65436F6E736F727469756D  2017-08-11 14:51:15.944 UTC  msp/identity  Sign -> DEBU 009 Sign: digest: EC500E800BF822D0195C98A92D361F9A92E1D09472E2776A699C2BB10AF63802  2017-08-11 14:51:15.944 UTC  msp  GetLocalMSP -> DEBU 00a Returning existing local MSP 2017-08-11 14:51:15.944 UTC  msp  GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity 2017-08-11 14:51:15.944 UTC  msp  GetLocalMSP -> DEBU 00c Returning existing local MSP 2017-08-11 14:51:15.944 UTC  msp  GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity 2017-08-11 14:51:15.944 UTC  msp/identity  Sign -> DEBU 00e Sign: plaintext: 0AB9060A0F08021A0608E388B7CC0522...8AED28E5C0B63525E78A79D39FCCC751  2017-08-11 14:51:15.944 UTC  msp/identity  Sign -> DEBU 00f Sign: digest: BE22C2C90837236F160CC16FCEE1321F444C4C71A2959B621AF0977CEC76D14D   {code} Error: Got unexpected status: BAD_REQUEST – Error authorizing update: Error validating DeltaSet: Policy for  Groups  /Channel/Application not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining Usage: peer channel create  flags  {code:java} Flags: -c, --channelID string   In case of a newChain command, the channel ID to create. -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer -t, --timeout int        Channel creation timeout (default 5)  Global Flags: --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint --logging-level string                Default logging level and overrides, see core.yaml for full syntax -o, --orderer string                      Ordering service endpoint --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer. --test.coverprofile string            Done (default "coverage.cov") --tls                                 Use TLS when communicating with the orderer endpoint -v, --version                             Display current version of fabric peer server  !!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!! ================== ERROR !!! FAILED to execute End-2-End Scenario ================== {code}  ></body> </Action>
