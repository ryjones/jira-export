<Action id="68298" issue="44263" author="JIRAUSER19831" type="comment" created="2020-03-12 18:41:15.0" updateauthor="JIRAUSER19831" updated="2020-03-12 18:41:15.0"> <body><! CDATA Hi,  I posted an example of how to set up and use the external chaincode launcher without the docker socket on medium. Maybe this could be used as a starting point.  Here the article goes  Setting Up the External Chaincode Builder and Launcher in Hyperledger Fabric 2.0| https://medium.com/@robinklemens/setting-up-the-external-chaincode-builder-and-launcher-in-hyperledger-fabric-2-0-b17f43a3d8ed    Pau Aragoès Sabaté provided a great kubernetes example in this article  How to implement Hyperledger Fabric External Chaincodes within a Kubernetes cluster| https://medium.com/swlh/how-to-implement-hyperledger-fabric-external-chaincodes-within-a-kubernetes-cluster-fd01d7544523    I hope both article help the community until the official docs covers examples.  Cheers, Robin  ></body> </Action>
<Action id="68762" issue="44263" author="mirioeggmann" type="comment" created="2020-04-07 14:14:52.0" updateauthor="mirioeggmann" updated="2020-04-07 14:14:52.0"> <body><! CDATA We at PostFinance have recently open sourced our external chaincode builder and launcher for Hyperledger Fabric. It talks directly to the Kubernetes API and works without exposing the Docker socket.  The following points have been addressed: * Kubernetes security mechanisms can be enforced (network policies, host isolation, etc.) * There is no dependency on the Kubernetes CRI implementation (like Docker) * There is no need for priviledged pods * The chaincode must be usable without changes * Chaincode build runs separated from the peer * Chaincode is launched separated from the peer * The build and launch of chaincode is compatible with the default/internal system * stdout and stderr of the chaincode is forwarded to the peer * The peer notices when a chaincode fails  Take a look at here if you are interested:  https://github.com/postfinance/hlfabric-k8scc   The project is still in development, but works quite well already. We have it running in our test environment.  Best regards  ></body> </Action>
<Action id="71813" issue="44263" author="cmgabriel" type="comment" created="2021-05-26 11:49:16.0" updateauthor="cmgabriel" updated="2021-05-26 11:49:16.0"> <body><! CDATA This should take on a *higher sense of urgency* with the pending change to Kubernetes in v1.22 that will be a potentially breaking change (reference here:  https://dev.to/stack-labs/how-to-switch-container-runtime-in-a-kubernetes-cluster-1628|https://dev.to/stack-labs/how-to-switch-container-runtime-in-a-kubernetes-cluster-1628)  ) to the Docker-in-Docker (dind) priviledged chaincode containers currently being used by many.  This k8s version is scheduled to be released sometime in the summer of 2021.  Currently there are several good examples as pointed out by Robin and Mirio above, however, they are all based on externally building Go chaincodes and there are not any Node examples out there that I could find.   Also, the current documented tutorial in the docs which partially utilizes the test-network while very good, does not really reflect a real-world approach to how this would be done in response to upgrading from anyone currently using dind when a potentially breaking change is about hit them.  ></body> </Action>
