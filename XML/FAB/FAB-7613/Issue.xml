<Issue id="26610" key="FAB-7613" number="7613" project="10002" reporter="elli-androulaki" assignee="mathiasb303" creator="elli-androulaki" type="10001" summary="Extension of MSPPrincipal proto to consider a combination of principals" priority="3" resolution="10000" status="6" created="2018-01-05 13:12:09.0" updated="2020-06-11 15:30:34.0" resolutiondate="2018-05-16 19:15:41.0" votes="0" watches="2" workflowId="40886"> <description><! CDATA MSPPrincipal proto message as defined in the previous task is extended to include an additional classification type, e.g., {code:java} // message MSPPrincipal {       enum Classification {        ROLE = 0;  // Represents the one of the dedicated MSP roles, the        // one of a member of MSP network, and the one of an        // administrator of an MSP network        PROPERTY = 1; // Denotes a finer grained (property-based)        // groupping of entities, per MSP affiliation        // E.g., this can well be represented by an MSP's        // Organization unit        IDENTITY  = 2;    // Denotes a principal that consists of a single        // identity  COMBINED = 3; // Denotes a combined principal    }       // Classification describes the way that one should process    // Principal. An Classification value of "ByOrganizationUnit" reflects    // that "Principal" contains the name of an organization this MSP    // handles. A Classification value "ByIdentity" means that    // "Principal" contains a specific identity. Default value    // denotes that Principal contains one of the groups by    // default supported by all MSPs ("admin" or "member").    Classification principal_classification = 1;       // Principal completes the policy principal definition. For the default    // principal types, Principal can be either "Admin" or "Member".    // For the ByOrganizationUnit/ByIdentity values of Classification,    // PolicyPrincipal acquires its value from an organization unit or    // identity, respectively.    bytes principal = 2;  } {code}       Where classification “COMBINED” would lead principal to be deserialised as an array of principals. {code:java} // CombinedPrincipal governs the organization of the Principal  // field of a policy principal when principal_classification has  // indicated that a combined form of principals is required  message CombinedPrincipal {       // Principals refer to combined principals    repeated MSPPrincipals principals = 1;  } {code}    ></description> </Issue>
