<Issue id="44452" key="FAB-17557" number="17557" project="10002" reporter="kopaygorodsky" assignee="sykesm" creator="kopaygorodsky" type="10004" summary="2.0 invalid memory address or nil pointer reference when permission denied to scripts for external builder " priority="3" resolution="10000" status="6" created="2020-02-27 22:36:59.0" updated="2020-03-02 22:52:25.0" resolutiondate="2020-03-02 22:52:25.0" votes="0" watches="3" workflowId="58360" archived="N"> <description><! CDATA Using 2.0 peer (1.4 capability) I removed all the configuration for docker vm and configured only external builder.  I mounted scripts inside a container without executable permissions (using k8s configmap without defaultMode).  Peer panics when I try to install cc (with lscc). Adding executable permission for script s fixes the problem.  Is it expected for peer to panic in this case?   {code:java} 020-02-27 22:29:53.859 UTC  chaincode.externalbuilder  Detect -> DEBU 080 builder 'builder' detect failed: fork/exec /builders/golang/bin/detect: permission denied 2020-02-27 22:29:53.859 UTC  chaincode.externalbuilder  Build -> DEBU 081 no external builder detected for reference:1.0 panic: runtime error: invalid memory address or nil pointer dereference  signal SIGSEGV: segmentation violation code=0x1 addr=0x10 pc=0x150e6b7   goroutine 129  running : github.com/hyperledger/fabric/core/container/dockercontroller.(*DockerVM).preFormatImageName(0x0, 0xc00255ea50, 0xd, 0xc00261acb8, 0xaa5728) 	/go/src/github.com/hyperledger/fabric/core/container/dockercontroller/dockercontroller.go:510 +0x37 github.com/hyperledger/fabric/core/container/dockercontroller.(*DockerVM).GetVMNameForDocker(0x0, 0xc00255ea50, 0xd, 0xc000032000, 0x1830ea0, 0x18a54a0, 0x7f4dd15109c8) 	/go/src/github.com/hyperledger/fabric/core/container/dockercontroller/dockercontroller.go:490 +0x5d github.com/hyperledger/fabric/core/container/dockercontroller.(*DockerVM).Build(0x0, 0xc00255ea50, 0xd, 0xc00262c330, 0x7f4dd15109c8, 0xc00260e790, 0x40, 0x1bded00, 0xc00260e790, 0x0) 	/go/src/github.com/hyperledger/fabric/core/container/dockercontroller/dockercontroller.go:181 +0x5a github.com/hyperledger/fabric/core/container.(*Router).Build(0xc0002cabc0, 0xc00255ea50, 0xd, 0x0, 0x0) 	/go/src/github.com/hyperledger/fabric/core/container/container.go:124 +0x3ac github.com/hyperledger/fabric/core/scc/lscc.(*SCC).executeInstall(0xc0002b2be0, 0x1c18640, 0xc002610000, 0xc0003087e0, 0xe0, 0xe0, 0x0, 0x0) 	/go/src/github.com/hyperledger/fabric/core/scc/lscc/lscc.go:719 +0x950 github.com/hyperledger/fabric/core/scc/lscc.(*SCC).Invoke(0xc0002b2be0, 0x1c18640, 0xc002610000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...) 	/go/src/github.com/hyperledger/fabric/core/scc/lscc/lscc.go:980 +0x1e94 github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-chaincode-go/shim.(*Handler).handleTransaction(0xc0002ade00, 0xc000141200, 0xc000250778, 0xaa03a5, 0xc00027bc80) 	/go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-chaincode-go/shim/handler.go:209 +0x272 github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-chaincode-go/shim.(*Handler).handleStubInteraction(0xc0002ade00, 0xc00260e270, 0xc000141200, 0xc00020bf80) 	/go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-chaincode-go/shim/handler.go:159 +0x34 created by github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-chaincode-go/shim.(*Handler).handleReady 	/go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-chaincode-go/shim/handler.go:620 +0x1bd {code}     ></description> </Issue>
