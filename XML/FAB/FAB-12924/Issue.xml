<Issue id="35461" key="FAB-12924" number="12924" project="10002" reporter="senthil1" creator="senthil1" type="10002" summary="Drop pvtdatastore while reconstructing state and block store" priority="3" resolution="10001" status="6" created="2018-11-19 14:41:15.0" updated="2019-06-21 07:15:16.0" resolutiondate="2019-06-21 07:15:16.0" votes="0" watches="1" workflowId="46927"> <description><! CDATA If a state fork occurs during a regular block commit, we have a mechanism to drop all blocks followed by refetching of blocks and re-processing them. In the current way of doing this, we only drop the block files (and related artifacts) but we do not drop/overwrite the pvtdatastorage - because the assumption so far was to store full data (for valid and invalid transactions).  Now, we will have to allow dropping of pvtdatastorage as well. However, the issue is that its shared across channels (unlike block files).  The side effect of not dropping pvtdatastorage is that we may actually have some missing data entries sitting in the pvtdatastore for the invalid transactions which break our goal of storing only the pvtdata of valid tx. We might also miss pvtData of a valid transaction. Note that the RemoveStaleAndCommitPvtDataOfOldBlocks() in txmgr expects only valid transactions. Hence, it is necessary to rebuild pvtdatastore along with the blockstore to keep only valid tx data in the pvtdatastore.      ></description> </Issue>
