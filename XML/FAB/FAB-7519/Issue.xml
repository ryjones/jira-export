<Issue id="26197" key="FAB-7519" number="7519" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10001" summary="Remove initialization of broadcast handler from peer atomicbroadcast implementation" priority="3" resolution="10000" status="6" created="2017-12-20 09:43:32.0" updated="2018-07-20 18:49:49.0" resolutiondate="2017-12-27 15:38:28.0" votes="0" watches="1" workflowId="40824"> <description><! CDATA Since FAB-6911 exposed the {{ab.AtomicBroadacast}} service on peer in order to leverage it as a replacement for events service, namely to reuse {{Deliver}} API as source hub for block events. New implementation of {{AtomicBroadcast}} service has been added while the {{Broadcast}} API remained not implemented since this is not required for peer.  {code} // Broadcast is not implemented/supported on a peer func (s *server) Broadcast(srv ab.AtomicBroadcast_BroadcastServer) error { 	return srv.Send(&ab.BroadcastResponse{ 		Status: common.Status_NOT_IMPLEMENTED, 	}) } {code}  while during the initialization broadcast handle still initialized and not used anywhere:  {code} // NewAtomicBroadcastServer creates an ab.AtomicBroadcastServer based on the // ledger Reader. Broadcast is not implemented/supported on the peer. func NewAtomicBroadcastServer(timeWindow time.Duration, mutualTLS bool) ab.AtomicBroadcastServer { 	s := &server{ 		dh: deliver.NewHandlerImpl(DeliverSupportManager{}, policies.ChannelReaders, timeWindow, mutualTLS), 		bh: broadcast.NewHandlerImpl(nil), 	} 	return s } {code}  Therefore redundant initialization of {{bh: broadcast.NewHandlerImpl(nil),}} could be omitted.  ></description> </Issue>
