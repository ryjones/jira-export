<Issue id="34869" key="FAB-12597" number="12597" project="10002" reporter="denyeart" creator="denyeart" type="10004" summary="CouchDB state database cannot handle key with empty string" priority="3" resolution="10002" status="6" created="2018-10-24 22:05:58.0" updated="2018-11-27 18:20:07.0" resolutiondate="2018-11-27 18:20:07.0" votes="0" watches="2" workflowId="46286" security="10000"> <description><! CDATA If you try to create a key with an empty string using CouchDB state database, it will fail in commit with error: {code:java} panic: error during commit to txmgr: error handling CouchDB request. Error:illegal_docid, Status Code:400, Reason:Document id must not be empty{code} As chain cannot progress, peer panics.  Fortunately, go chaincode does not allow PutState() on a key with empty string.  Unfortunately, node chaincode has no such check.  statecouchdb ValidateKeyValue() (used on both simulation and validation sides) needs to validate against key with empty string.Â  Any peer hitting this issue on prior releases will need to reprocess blocks after fix is applied (remove last block file and drop block indexes), so that the transaction with empty string gets invalidated.  Additionally statecouchdb GetState() needs to validate against empty string, as the current behavior allows the query with empty key such as: {code:java} http://127.0.0.1:5984/my_db/?attachments=true{code}  http://127.0.0.1:5984/my_db/?attachments=true   which is interpreted as the query for the database itself rather than a key query, but the query will end up returning an error in couchdb.go like "no revision tag detected" since the database query has no ETag with a revision number (which is expected on key queries).  ></description> </Issue>
