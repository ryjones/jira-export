<Action id="28081" issue="19103" author="kchristidis" type="comment" created="2017-07-10 11:53:37.0" updateauthor="kchristidis" updated="2017-07-10 12:55:55.0"> <body><! CDATA Regarding the code, this is not a bug. The config file clearly states that that PrivateKey, Certificate, RootCAs, are supposed to hold the key *values*. If you wish to point to the file, just uncomment the File line and edit the path. See  https://github.com/hyperledger/fabric/blob/master/sampleconfig/orderer.yaml#L201...L223  for more.  We'll be looking into the TLS handshake issue.  ></body> </Action>
<Action id="28098" issue="19103" author="sanchezl" type="comment" created="2017-07-10 15:50:28.0" updateauthor="sanchezl" updated="2017-07-10 15:50:28.0"> <body><! CDATA  ~hongquan.zhang  please confirm that the issue is still occurring by either:   * inserting the text of the encoded certificate into the configuration yaml, or * specifying the file path to the encoded certificated in the configuration yaml, as per the previous comment.     ></body> </Action>
<Action id="28123" issue="19103" author="hongquan.zhang" type="comment" created="2017-07-11 01:53:03.0" updateauthor="hongquan.zhang" updated="2017-07-11 03:31:28.0"> <body><! CDATA Hi  ~sanchezl , the problem is still there after using the configuration method mentioned above. {code:java} Failed to connect to broker kafka0:9093: tls: first record does not look like a TLS handshake {code} I used tcpdump to capture tcp stream data between orderer and kafka, and found that kafka always return bunch of 0x00 byte instead of ServerHello message after receiving ClientHello from orderer.  It seems that kafka and orderer can't make a deal with the cipher method they want to use  ></body> </Action>
<Action id="28125" issue="19103" author="sanchezl" type="comment" created="2017-07-11 05:24:22.0" updateauthor="sanchezl" updated="2017-07-11 05:24:22.0"> <body><! CDATA  ~hongquan.zhang , the orderer to kafka TLS functionality appears to be working ok for me. I have attached a small docker-compose environment to this issue so you can try it yourself, and maybe compare to your own configuration: # Extract   ^fab-5226.zip  # {{cd fab-5226}} # Run {{./script.sh}} to generate sample crypto materials. # Run {{docker-compose up -d}} to start the environment. # View logs via {{docker-compose logs}} (see command help for details)     ></body> </Action>
<Action id="28131" issue="19103" author="hongquan.zhang" type="comment" created="2017-07-11 08:04:43.0" updateauthor="hongquan.zhang" updated="2017-07-11 08:04:43.0"> <body><! CDATA Hi  ~sanchezl , scripts you provided work very well.   So there should be some error in my configuration or keystore configuration. I'll check that.  Thank you very much, and very sorry for any inconvenience。  ></body> </Action>
