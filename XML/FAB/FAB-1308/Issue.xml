<Issue id="13715" key="FAB-1308" number="1308" project="10002" reporter="denyeart" creator="denyeart" type="10001" summary="I want to be able to read from CouchDB state database as an &apos;external&apos; user (not using the peer&apos;s admin user)" priority="2" status="10100" created="2016-12-08 15:10:58.0" updated="2021-04-30 18:31:43.0" votes="2" watches="4" workflowId="35024"> <description><! CDATA Currently only two modes are available when using CouchDB - completely open (no user security) and completely locked down (user security enabled).  Production environments utilize the locked down configuration, while development environments may decide to skip user security in order to allow direct access.  If user security is enabled, only the peer's admin user can read/write to CouchDB.  No other 'external' users can access CouchDB - access is locked down and all requests must go through the peer's CouchDB user.  If it is desired to have 'external' users be able to read (only) CouchDB directly, two changes would be required:  1) Add the 'external' users to the CouchDB database security object as members.  See http://docs.couchdb.org/en/2.2.0/api/database/security.html .  Currently peer writes the database security object with just the peer's admin user upon each startup (allowing for the ability to change the username).  Note - it may be possible to use a server admin instead of setting the admins role on each database, and only populate the members role.   2) Any database 'member' would have both read and write access.  To lock it down for read access only, a CouchDB 'validation function' (deployed as a design document to CouchDB) would be required, it could enforce that only the peer's admin user could perform writes.  ></description> </Issue>
