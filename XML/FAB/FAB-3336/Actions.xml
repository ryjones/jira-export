<Action id="22866" issue="15928" author="baohua" type="comment" created="2017-04-22 12:43:57.0" updateauthor="baohua" updated="2017-04-22 14:42:04.0"> <body><! CDATA Since the nodes are connected over IP, it should be not difficult in technique to provide cross zone/dc fabric network connectivity. Actually,  Cello (https://wiki.hyperledger.org/projects/cello) already supports multi-host deployment of fabric with Swarm as the underly infrastructure (with Swarm supported the overlay connectivity).  I think the key concerns may include:  1: What specific requirement for different node type configuration, e.g., for endorser or orderer, the hardware resources are various; 2: What specific requirement for the network configuration, e.g., to secure with VPN connection; 3: Best-practices in the deployment procedure.  Technical Working Group China has already started collecting and drafting the spec to guide the deployment and operations, I think it's good timing to start the deploying discussion in global community, and share those experience together.  ></body> </Action>
<Action id="22870" issue="15928" author="davi" type="comment" created="2017-04-22 21:06:15.0" updateauthor="davi" updated="2017-04-22 21:06:15.0"> <body><! CDATA Objective:  Get a set of different hosts (machines, VMs ,...) owned by different clients or entities . Over this "network" of machines ,each client/entity will be able to deploy its own blockchain(s) and make then available to their own customers.   Current idea:  set all the hosts in a docker swarm cluster . Each host joins as a "manager (so that each client/host owner can create its own network(s) over swarm.  Each client/entity has on it swarm manager node its own repository of blockchain code and can start a blockchain that will be distributed across all the hosts in the swarm cluster (or a definable subset of hosts)  using a docker-compose yaml file where it will be possible to either assign manually the different containers/roles (like by example have CA on its own host, orderer on identified host ,and peers automatically distributed) or let docker distribute the container across the hosts depending on the load/affinity definition ...   current attempts :  I'm trying to modify the docker-compose yaml file of the getting-started example to achieve a multi-host deployment . I'm encountering dificulties in 2 areas:   - first ,I'm not really familiar with docker swarm and related compose files (this is why I'm looking for tutorial or example)  -as soon swarm network is created , the level of the compose-files must be set to 3 ...and by exemple , extends are not supported in V3 ... so a lot of modification are needed in the docker-compose.yaml file.Docker-compose itself does not seems to be yet able to handle a swarm setup ...   currently I can deploy services on the different hosts but they do not start because they do not communicate with each others .. (bad docker configs on my side , but I'm still trying to discover what parameters I should add/modify for this multi-hosts setup)   suggestion :   of course it would be so nice to have all that managed through cello without having to learn docker  :-)   I"m attaching a short pdf trying to illustrate what I try to push forward.   ></body> </Action>
<Action id="67018" issue="15928" author="sykesm" type="comment" body="Stale" created="2020-01-22 19:07:00.0" updateauthor="sykesm" updated="2020-01-22 19:07:00.0"/>
