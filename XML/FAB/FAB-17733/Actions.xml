<Action id="68800" issue="44772" author="yacovm" type="comment" body="So, basically what you want is that upon adding a new consenter, to attempt to build a validation chain from some root TLS CA downto the supplied TLS certificates of the consenter , and if no such validation chain exists - to return an error to the user?" created="2020-04-09 22:15:06.0" updateauthor="yacovm" updated="2020-04-09 22:15:06.0"/>
<Action id="68801" issue="44772" author="varadatibm" type="comment" body="Yeap! Precisely!Â (y)" created="2020-04-10 00:19:10.0" updateauthor="varadatibm" updated="2020-04-10 00:19:10.0"/>
<Action id="69169" issue="44772" author="wlahti" type="comment" body="I have most of this done but I&apos;ve hit a blocker. Not sure how this can/should coexist with FAB-17220. Note this comment before the test that was added, which seems to be the opposite of what this story is requesting: https://github.com/hyperledger/fabric/blob/master/integration/raft/config_test.go#L306-L308" created="2020-05-06 19:38:58.0" updateauthor="wlahti" updated="2020-05-06 19:38:58.0"/>
<Action id="69170" issue="44772" author="yacovm" type="comment" created="2020-05-06 20:09:25.0" updateauthor="yacovm" updated="2020-05-06 20:09:25.0"> <body><! CDATA I think what you can do, is simply have an orderer with its own TLS root CA, and then you remove its TLS root CA, and restart the orderer. When you restart the orderer, there will be a new TLS handshake and the other consenters will refuse to connect to it, and you will ensure this is the case.   This retains testing that the TLS root CAs are dynamically updated upon a config change, and also doesn't interfere with this check, as this check is only for addition and not removal.   ></body> </Action>
<Action id="69230" issue="44772" author="denyeart" type="comment" body="https://github.com/hyperledger/fabric/pull/1223" created="2020-05-13 14:15:16.0" updateauthor="denyeart" updated="2020-05-13 14:15:16.0"/>
<Action id="70068" issue="44772" author="kopaygorodsky" type="comment" created="2020-08-26 20:57:20.0" updateauthor="kopaygorodsky" updated="2020-08-26 21:00:05.0"> <body><! CDATA this feature broke a usecase when you add a MSP along with consenters in a single config update.  Now I receive  `consensus metadata update for channel config update is invalid: verifying tls client cert with serial number 202563322038103064295345433482878287045550471240: x509: certificate signed by unknown authority`.  This certificate is singed by msp that is being added in this transaction.   ~yacovm  can we update a list of root CAs from submitted config block before verifying consenter?   ></body> </Action>
<Action id="70069" issue="44772" author="yacovm" type="comment" created="2020-08-26 21:09:54.0" updateauthor="yacovm" updated="2020-08-26 21:09:54.0"> <body><! CDATA I think it broke it because it validates against  the existing configuration|https://github.com/hyperledger/fabric/blob/master/orderer/consensus/etcdraft/chain.go#L957 , and not against a simulated one.  {quote} Yacov Manevich can we update a list of root CAs from submitted config block before verifying consenter?  {quote} I guess we're talking about the same thing, the right way would be to compute a simulated configuration and take the root CAs from it.  ></body> </Action>
<Action id="70070" issue="44772" author="kopaygorodsky" type="comment" body="yes, exactly. Do we need to reopen this ticket or create a new one? " created="2020-08-26 21:26:10.0" updateauthor="kopaygorodsky" updated="2020-08-26 21:26:10.0"/>
<Action id="70071" issue="44772" author="yacovm" type="comment" body="better create a new one and also link it to this JIRA" created="2020-08-26 22:18:41.0" updateauthor="yacovm" updated="2020-08-26 22:18:41.0"/>
