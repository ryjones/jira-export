<Action id="20082" issue="13748" author="adnanchoudhury" type="comment" created="2016-12-13 18:49:28.0" updateauthor="adnanchoudhury" updated="2016-12-13 20:57:47.0"> <body><! CDATA Cello runs a master node that can deploy, manage and check health of multiple hosts (worker nodes) running the blockchain fabric. The master node runs several containers 1) an http server (nginx) 2) a dashboard container 3) a mongo database and 4) a watchdog that tracks the log. The dashboard can add/delete hosts or chains by connecting to the docker daemon of the worker through a pre-defined port and running docker-compose files, as necessary, to bring up/bring down the service.     After following the deployment guide (https://github.com/yeasy/cello/blob/dev/docs/deployment.md) there are several issues to be resolved. 1. The README file (https://github.com/yeasy/cello/blob/dev/README.md) indicates that the setup provisions worker nodes, but the setup does not contain any script for creating any worker nodes (docker containers), and {{docker ps}} does not show any peer container., and the log shows 0 hosts connected. Either my assumption is incorrect, or the setup is incomplete. 2. The dashboard can be accessed through $master_ip:8080 with the login name and password given in docker_compose.yml, maybe this info can be added to readme. 3. The dashboard fails to add hosts with the given daemon URL "0.0.0.0:2375", gives error "Failed! failed to create host {name}"  The Watchdog log: {code} dashbard      |  2016-12-14 02:45:24,552  DEBUG  resources.host_api   utils.py:71        request_debug()  - path=/api/host, method=POST dashbard      |  2016-12-14 02:45:24,552  DEBUG  resources.host_api   utils.py:72        request_debug()  - request args: dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:75        request_debug()  - request form: dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:77        request_debug()  - Form: log_level:DEBUG dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:77        request_debug()  - Form: log_type:local dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:77        request_debug()  - Form: capacity:1 dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:77        request_debug()  - Form: name:test1 dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:77        request_debug()  - Form: daemon_url:0.0.0.0:2375 dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:77        request_debug()  - Form: log_server: dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:78        request_debug()  - request raw body data: dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:79        request_debug()  - b'' dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   utils.py:80        request_debug()  - None dashbard      |  2016-12-14 02:45:24,553  DEBUG  resources.host_api   host_api.py:58          host_create()  - name=test1, daemon_url=0.0.0.0:2375, capacity=1fillup=false, schedulable=false, log=local/ dashbard      |  2016-12-14 02:45:24,554  DEBUG  modules.host   host.py:67               create()  - Create host: name=test1, daemon_url=0.0.0.0:2375, capacity=1, log=local/, autofill=false, schedulable=false dashbard      |  2016-12-14 02:45:24,556  ERROR  agent.docker_swarm   docker_swarm.py:132         check_daemon()  - Exception in check_daemon Error while fetching server API version: HTTPConnectionPool(host='0.0.0.0', port=2375): Max retries exceeded with url: /version (Caused by NewConnectionError('<requests.packages.urllib3.connection.HTTPConnection object at 0x7f1cc67bbf60>: Failed to establish a new connection:  Errno 111  Connection refused',)) dashbard      |  2016-12-14 02:45:24,556  WARNING  modules.host   host.py:83               create()  - The daemon_url is inactive:tcp://0.0.0.0:2375 dashbard      |  2016-12-14 02:45:24,557  ERROR  agent.docker_swarm   docker_swarm.py:159   detect_daemon_type()  - Error while fetching server API version: HTTPConnectionPool(host='0.0.0.0', port=2375): Max retries exceeded with url: /version (Caused by NewConnectionError('<requests.packages.urllib3.connection.HTTPConnection object at 0x7f1cc67bb0b8>: Failed to establish a new connection:  Errno 111  Connection refused',)) dashbard      |  2016-12-14 02:45:24,557  ERROR  agent.docker_swarm   docker_swarm.py:238 setup_container_host()  - Invalid host_type=None dashbard      |  2016-12-14 02:45:24,557  WARNING  modules.host   host.py:89               create()  - test1 cannot be setup dashbard      |  2016-12-14 02:45:24,557  WARNING  resources.host_api   host_api.py:76          host_create()  - Failed to create host test1 dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:24  "POST /api/host HTTP/1.0" 400 - dashbard      |  2016-12-14 02:45:26,570  DEBUG  resources.index   utils.py:71        request_debug()  - path=/, method=GET dashbard      |  2016-12-14 02:45:26,571  DEBUG  resources.index   utils.py:72        request_debug()  - request args: dashbard      |  2016-12-14 02:45:26,571  DEBUG  resources.index   utils.py:75        request_debug()  - request form: dashbard      |  2016-12-14 02:45:26,572  DEBUG  resources.index   utils.py:78        request_debug()  - request raw body data: dashbard      |  2016-12-14 02:45:26,572  DEBUG  resources.index   utils.py:79        request_debug()  - b'' dashbard      |  2016-12-14 02:45:26,573  DEBUG  resources.index   utils.py:80        request_debug()  - None dashbard      |  2016-12-14 02:45:26,575  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      |  2016-12-14 02:45:26,575  DEBUG  modules.cluster   cluster.py:50                 list()  - List all released clusters dashbard      |  2016-12-14 02:45:26,576  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      |  2016-12-14 02:45:26,577  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET / HTTP/1.0" 200 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/css/bootstrap.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/css/dashboard.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/css/paginate.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/css/dataTables.bootstrap.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/jquery-2.2.3.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/script.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/bootbox.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/bootstrap.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/bootstrap-notify.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/css/jquery.dataTables.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/validator.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/ie10-viewport-bug-workaround.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/tether.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/highcharts-more.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/highcharts.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/solid-gauge.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/jquery.dataTables.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/js/dataTables.bootstrap.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  14/Dec/2016 02:45:26  "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.0" 304 -  {code}    ></body> </Action>
<Action id="20099" issue="13748" author="adnanchoudhury" type="comment" created="2016-12-14 20:51:34.0" updateauthor="adnanchoudhury" updated="2016-12-14 22:19:50.0"> <body><! CDATA After some clarifications from Baohua, was able to install and deploy master node and connect with a worker node(residing on a separate server). Here's my understanding as of now:  h4. 1. What is Cello: It claims to be a platform to provide blockchain as a service, where it can provision/manage a blockchain on a remote host(called a worker node) from the local server (called the master node).  h4. 2. What  Cello Performs: it claims to  1) Provision customizable Blockchains instantly, e.g., a 6-node chain using PBFT consensus. 2) Maintain a pool of running blockchains healthy with no manual operations. 3) Check the system status, scale the chain numbers, change resources... through a dashboard.  h4. 3. Cello requirements: For worker node, a recent Ubuntu machine (14.04+) with docker daemon running, and listening on port 2375. plus some docker images. For master node, a recent Ubuntu machine (14.04+) with docker, docker-compose, and some docker images.  h4. 4. Test and Evaluation: Cello performs the tasks by talking with the worker'd docker daemon, and uses Python Docker SDK to achieve that.   Was able to run a Cello master node locally and perform the following tasks: From the dashboard, # Add a remote server as a worker host (please see requirements for worker),  # Initiate a 4-peer network  chain in the worker (run 4 hyperledger-peer containers in the docker) # Stop(pause) the chain, restart the chain, and delete the chain # observe the health check (checking if the host is up, if thre chain is "healthy") being perfrmed in regular interval. h4. 5. Issues: # Was not able to delete the host through dashboard, errors out saying that "not enough data to delete", heres the log from "make log" in master {code} dashbard      |  2016-12-15 04:18:20,599  DEBUG  resources.host_api   utils.py:71        request_debug()  - path=/api/host, method=DELETE dashbard      |  2016-12-15 04:18:20,599  DEBUG  resources.host_api   utils.py:72        request_debug()  - request args: dashbard      |  2016-12-15 04:18:20,599  DEBUG  resources.host_api   utils.py:75        request_debug()  - request form: dashbard      |  2016-12-15 04:18:20,600  DEBUG  resources.host_api   utils.py:78        request_debug()  - request raw body data: dashbard      |  2016-12-15 04:18:20,600  DEBUG  resources.host_api   utils.py:79        request_debug()  - b'' dashbard      |  2016-12-15 04:18:20,600  DEBUG  resources.host_api   utils.py:80        request_debug()  - None dashbard      |  2016-12-15 04:18:20,600  WARNING  resources.host_api   host_api.py:108          host_delete()  - host delete without enough data dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:20  "DELETE /api/host HTTP/1.0" 400 - dashbard      |  2016-12-15 04:18:22,618  INFO  resources.host_view   host_view.py:25           hosts_show()  - /hosts method=GET dashbard      |  2016-12-15 04:18:22,618  DEBUG  resources.host_view   utils.py:71        request_debug()  - path=/view/hosts, method=GET dashbard      |  2016-12-15 04:18:22,618  DEBUG  resources.host_view   utils.py:72        request_debug()  - request args: dashbard      |  2016-12-15 04:18:22,618  DEBUG  resources.host_view   utils.py:75        request_debug()  - request form: dashbard      |  2016-12-15 04:18:22,618  DEBUG  resources.host_view   utils.py:78        request_debug()  - request raw body data: dashbard      |  2016-12-15 04:18:22,619  DEBUG  resources.host_view   utils.py:79        request_debug()  - b'' dashbard      |  2016-12-15 04:18:22,619  DEBUG  resources.host_view   utils.py:80        request_debug()  - None dashbard      |  2016-12-15 04:18:22,620  DEBUG  resources.host_view   host_view.py:30           hosts_show()  -  {'name': 'host_surya', 'log_type': 'local', 'clusters':  '585179be000911000191382f' , 'status': 'active', 'id': '585164ccf113a9000b4466cf', 'capacity': 1, 'schedulable': 'false', 'create_ts': datetime.datetime(2016, 12, 14, 23, 27, 8, 692000), 'type': 'single', 'log_server': '', 'daemon_url': 'tcp://9.42.137.193:2375', 'log_level': 'DEBUG', 'autofill': 'false'}  dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /view/hosts HTTP/1.0" 200 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/css/bootstrap.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/css/paginate.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/css/dataTables.bootstrap.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/css/dashboard.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/css/jquery.dataTables.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/jquery-2.2.3.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/bootbox.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/script.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/bootstrap-notify.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/validator.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/bootstrap.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/tether.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/ie10-viewport-bug-workaround.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/highcharts.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/highcharts-more.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/solid-gauge.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/jquery.dataTables.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/js/dataTables.bootstrap.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/images/sort_both.png HTTP/1.0" 404 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:18:22  "GET /static/images/sort_asc.png HTTP/1.0" 404 - {code} # After bringing up a chain in one of the host, the master thinks that the health of the chaincode is not satisfactory and brings down the chain and re-ups it, finds it not-healthy again, and continuously repeats the same process. {code} dashbard      |  2016-12-15 04:23:44,952  DEBUG  resources.index   utils.py:71        request_debug()  - path=/index, method=GET dashbard      |  2016-12-15 04:23:44,952  DEBUG  resources.index   utils.py:72        request_debug()  - request args: dashbard      |  2016-12-15 04:23:44,952  DEBUG  resources.index   utils.py:75        request_debug()  - request form: dashbard      |  2016-12-15 04:23:44,952  DEBUG  resources.index   utils.py:78        request_debug()  - request raw body data: dashbard      |  2016-12-15 04:23:44,952  DEBUG  resources.index   utils.py:79        request_debug()  - b'' dashbard      |  2016-12-15 04:23:44,952  DEBUG  resources.index   utils.py:80        request_debug()  - None dashbard      |  2016-12-15 04:23:44,953  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      |  2016-12-15 04:23:44,954  DEBUG  modules.cluster   cluster.py:50                 list()  - List all released clusters dashbard      |  2016-12-15 04:23:44,954  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      |  2016-12-15 04:23:44,954  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /index HTTP/1.0" 200 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/css/bootstrap.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/css/dashboard.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/js/jquery-2.2.3.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/css/paginate.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/css/dataTables.bootstrap.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/js/script.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/css/jquery.dataTables.min.css HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/js/bootbox.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/js/bootstrap-notify.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:44  "GET /static/js/bootstrap.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/tether.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/validator.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/highcharts.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/ie10-viewport-bug-workaround.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/solid-gauge.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/highcharts-more.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/jquery.dataTables.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/js/dataTables.bootstrap.min.js HTTP/1.0" 304 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:45  "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.0" 304 - dashbard      |  2016-12-15 04:23:47,944  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa4af113a900112d5cf4 dashbard      |  2016-12-15 04:23:47,950  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa4af113a900112d5cf4 dashbard      |  2016-12-15 04:23:48,407  DEBUG  resources.cluster_view   utils.py:71        request_debug()  - path=/view/clusters, method=GET dashbard      |  2016-12-15 04:23:48,407  DEBUG  resources.cluster_view   utils.py:72        request_debug()  - request args: dashbard      |  2016-12-15 04:23:48,407  DEBUG  resources.cluster_view   utils.py:74        request_debug()  - Arg: type:active dashbard      |  2016-12-15 04:23:48,407  DEBUG  resources.cluster_view   utils.py:75        request_debug()  - request form: dashbard      |  2016-12-15 04:23:48,408  DEBUG  resources.cluster_view   utils.py:78        request_debug()  - request raw body data: dashbard      |  2016-12-15 04:23:48,408  DEBUG  resources.cluster_view   utils.py:79        request_debug()  - b'' dashbard      |  2016-12-15 04:23:48,408  DEBUG  resources.cluster_view   utils.py:80        request_debug()  - None dashbard      |  2016-12-15 04:23:48,408  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:48  "GET /view/clusters?type=active HTTP/1.0" 200 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:48  "GET /static/images/sort_both.png HTTP/1.0" 404 - dashbard      | 172.19.0.4 - -  15/Dec/2016 04:23:48  "GET /static/images/sort_asc.png HTTP/1.0" 404 - watchdog      |  2016-12-15 04:23:56,925  INFO  __main__   watchdog.py:118            watch_run()  - Watchdog run checks with period = 15 s watchdog      |  2016-12-15 04:23:56,926  INFO  __main__   watchdog.py:120            watch_run()  - Found 1 hosts watchdog      |  2016-12-15 04:23:56,934  DEBUG  __main__   watchdog.py:102           host_check()  - Host host_surya/585164ccf113a9000b4466cf is active, start checking watchdog      |  2016-12-15 04:23:56,934  DEBUG  __main__   watchdog.py:66    host_check_chains()  - Host host_surya/585164ccf113a9000b4466cf: checking chains watchdog      |  2016-12-15 04:23:56,934  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters watchdog      |  2016-12-15 04:23:56,935  DEBUG  __main__   watchdog.py:29   chain_check_health()  - Chain test_chain_3/5851aa4af113a900112d5cf4: checking health watchdog      |  2016-12-15 04:23:56,935  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:23:56,939  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:01,944  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:01,949  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:06,955  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:06,964  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:11,970  WARNING  __main__   watchdog.py:50   chain_check_health()  - Chain test_chain_3/5851aa4af113a900112d5cf4 is unhealthy! watchdog      |  2016-12-15 04:24:11,971  INFO  __main__   watchdog.py:54   chain_check_health()  - Resetting free unhealthy chain test_chain_3/5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:11,971  DEBUG  modules.cluster   cluster.py:475       reset_free_one()  - Try reseting cluster 5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:11,971  DEBUG  modules.cluster   cluster.py:451                reset()  - Run recreate_work in background thread watchdog      |  2016-12-15 04:24:11,971  DEBUG  modules.cluster   cluster.py:208               delete()  - Delete cluster: id=5851aa4af113a900112d5cf4, forced=True watchdog      |  2016-12-15 04:24:11,972  DEBUG  modules.host   host.py:318 get_active_host_by_id()  - check host with id = 585164ccf113a9000b4466cf watchdog      |  2016-12-15 04:24:11,972  DEBUG  agent.docker_swarm   docker_swarm.py:544         compose_down()  - Compose remove 5851aa4af113a900112d5cf4 with daemon_url=tcp://9.42.137.193:2375, consensus=pbft Stopping 5851aa4af113a900112d5cf4_vp0 ... done Stopping 5851aa4af113a900112d5cf4_vp3 ... done Stopping 5851aa4af113a900112d5cf4_vp1 ... done Stopping 5851aa4af113a900112d5cf4_vp2 ... done Removing 5851aa4af113a900112d5cf4_vp0 ... done Removing 5851aa4af113a900112d5cf4_vp3 ... done Removing 5851aa4af113a900112d5cf4_vp1 ... done Removing 5851aa4af113a900112d5cf4_vp2 ... done  2016-12-15 04:24:14,524  DEBUG  agent.docker_swarm   docker_swarm.py:58 _clean_project_containers()  - Clean project containers, daemon_url=tcp://9.42.137.193:2375, prefix=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:14,538  DEBUG  agent.docker_swarm   docker_swarm.py:35 _clean_chaincode_images()  - clean chaincode images with prefix=5851aa4af113a900112d5cf4 watchdog      |  2016-12-15 04:24:14,628  INFO  modules.cluster   cluster.py:93               create()  - Create cluster test_chain_3, host_id=585164ccf113a9000b4466cf, consensus=pbft/batch, size=4 watchdog      |  2016-12-15 04:24:14,628  DEBUG  modules.host   host.py:318 get_active_host_by_id()  - check host with id = 585164ccf113a9000b4466cf watchdog      |  2016-12-15 04:24:14,628  DEBUG  modules.cluster   cluster.py:104               create()  - daemon_url=tcp://9.42.137.193:2375 watchdog      |  2016-12-15 04:24:14,629  DEBUG  modules.cluster   cluster.py:156               create()  - Start compose project with name=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:14,629  DEBUG  agent.docker_swarm   docker_swarm.py:355           compose_up()  - Compose start: name=5851aa6e0009110001f87777, host=host_surya, mapped_port={'event': 7053, 'tcaa': 7057, 'grpc': 7051, 'ecaa': 7055, 'ecap': 7054, 'tlscaa': 7059, 'cli': 7052, 'tcap': 7056, 'rest': 7050, 'tlscap': 7058}, consensus=pbft/batch,size=4 watchdog      |  2016-12-15 04:24:19,519  DEBUG  agent.docker_swarm   docker_swarm.py:376           compose_up()  - compose started with containers={'5851aa6e0009110001f87777_vp1': 'a29713158ef2ae077e17fcf0e1e6dc4603e8968bcc14e04d05a15df21380cc78', '5851aa6e0009110001f87777_vp2': 'c4a2feb6455a404bcd8f91ea3b12770939af51f8e8c6de2ebac29aa3aad5811e', '5851aa6e0009110001f87777_vp0': 'dba6108848498130c8d2860c31b2dd53a42d4b6e4f5e51563336d8e75cab1f2e', '5851aa6e0009110001f87777_vp3': 'a1a2d73214db330b873c2ef3211ab102f7866853a8cdb042e3f1b98a68e79a43'} watchdog      |  2016-12-15 04:24:19,520  DEBUG  modules.cluster   cluster.py:526      _get_service_ip()  - single host, ip = 9.42.137.193 watchdog      |  2016-12-15 04:24:19,520  DEBUG  modules.cluster   cluster.py:526      _get_service_ip()  - single host, ip = 9.42.137.193 watchdog      |  2016-12-15 04:24:19,521  INFO  modules.cluster   cluster.py:195               create()  - Create cluster OK, id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:24,526  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:24,535  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:29,953  INFO  __main__   watchdog.py:118            watch_run()  - Watchdog run checks with period = 15 s watchdog      |  2016-12-15 04:24:29,953  INFO  __main__   watchdog.py:120            watch_run()  - Found 1 hosts watchdog      |  2016-12-15 04:24:29,962  DEBUG  __main__   watchdog.py:102           host_check()  - Host host_surya/585164ccf113a9000b4466cf is active, start checking watchdog      |  2016-12-15 04:24:29,962  DEBUG  __main__   watchdog.py:66    host_check_chains()  - Host host_surya/585164ccf113a9000b4466cf: checking chains watchdog      |  2016-12-15 04:24:29,963  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters watchdog      |  2016-12-15 04:24:29,963  DEBUG  __main__   watchdog.py:29   chain_check_health()  - Chain test_chain_3/5851aa6e0009110001f87777: checking health watchdog      |  2016-12-15 04:24:29,963  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:29,967  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:34,973  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:34,978  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:39,984  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:39,988  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:44,992  WARNING  __main__   watchdog.py:50   chain_check_health()  - Chain test_chain_3/5851aa6e0009110001f87777 is unhealthy! watchdog      |  2016-12-15 04:24:44,993  INFO  __main__   watchdog.py:54   chain_check_health()  - Resetting free unhealthy chain test_chain_3/5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:44,993  DEBUG  modules.cluster   cluster.py:475       reset_free_one()  - Try reseting cluster 5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:44,993  DEBUG  modules.cluster   cluster.py:451                reset()  - Run recreate_work in background thread watchdog      |  2016-12-15 04:24:44,993  DEBUG  modules.cluster   cluster.py:208               delete()  - Delete cluster: id=5851aa6e0009110001f87777, forced=True watchdog      |  2016-12-15 04:24:44,994  DEBUG  modules.host   host.py:318 get_active_host_by_id()  - check host with id = 585164ccf113a9000b4466cf watchdog      |  2016-12-15 04:24:44,994  DEBUG  agent.docker_swarm   docker_swarm.py:544         compose_down()  - Compose remove 5851aa6e0009110001f87777 with daemon_url=tcp://9.42.137.193:2375, consensus=pbft Stopping 5851aa6e0009110001f87777_vp2 ... done Stopping 5851aa6e0009110001f87777_vp3 ... done Stopping 5851aa6e0009110001f87777_vp0 ... done Stopping 5851aa6e0009110001f87777_vp1 ... done Removing 5851aa6e0009110001f87777_vp2 ... done Removing 5851aa6e0009110001f87777_vp3 ... done Removing 5851aa6e0009110001f87777_vp0 ... done Removing 5851aa6e0009110001f87777_vp1 ... done  2016-12-15 04:24:47,710  DEBUG  agent.docker_swarm   docker_swarm.py:58 _clean_project_containers()  - Clean project containers, daemon_url=tcp://9.42.137.193:2375, prefix=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:47,715  DEBUG  agent.docker_swarm   docker_swarm.py:35 _clean_chaincode_images()  - clean chaincode images with prefix=5851aa6e0009110001f87777 watchdog      |  2016-12-15 04:24:47,797  INFO  modules.cluster   cluster.py:93               create()  - Create cluster test_chain_3, host_id=585164ccf113a9000b4466cf, consensus=pbft/batch, size=4 watchdog      |  2016-12-15 04:24:47,797  DEBUG  modules.host   host.py:318 get_active_host_by_id()  - check host with id = 585164ccf113a9000b4466cf watchdog      |  2016-12-15 04:24:47,797  DEBUG  modules.cluster   cluster.py:104               create()  - daemon_url=tcp://9.42.137.193:2375 watchdog      |  2016-12-15 04:24:47,798  DEBUG  modules.cluster   cluster.py:156               create()  - Start compose project with name=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:24:47,798  DEBUG  agent.docker_swarm   docker_swarm.py:355           compose_up()  - Compose start: name=5851aa8f0009110001f87778, host=host_surya, mapped_port={'event': 7053, 'tcaa': 7057, 'grpc': 7051, 'ecaa': 7055, 'ecap': 7054, 'tlscaa': 7059, 'cli': 7052, 'tcap': 7056, 'rest': 7050, 'tlscap': 7058}, consensus=pbft/batch,size=4 watchdog      |  2016-12-15 04:24:52,684  DEBUG  agent.docker_swarm   docker_swarm.py:376           compose_up()  - compose started with containers={'5851aa8f0009110001f87778_vp0': 'd1769d21c6df543ea4a36c833c110e10b0e60ad4fbf91ce8fb23a3b3e6a952af', '5851aa8f0009110001f87778_vp1': '4ae388a9c07b7348cacf4be8d3d16d47305adf973847454d3f4933831263ca5e', '5851aa8f0009110001f87778_vp3': '73c7b58b002a4956c64569e63fc9827148d37ea8180d717a064ea46ad1c5ce2c', '5851aa8f0009110001f87778_vp2': 'ddb95ced5e49ea456c8577c965cb274779f49516fdd8f42d0132c3b594ad215f'} watchdog      |  2016-12-15 04:24:52,685  DEBUG  modules.cluster   cluster.py:526      _get_service_ip()  - single host, ip = 9.42.137.193 watchdog      |  2016-12-15 04:24:52,685  DEBUG  modules.cluster   cluster.py:526      _get_service_ip()  - single host, ip = 9.42.137.193 watchdog      |  2016-12-15 04:24:52,686  INFO  modules.cluster   cluster.py:195               create()  - Create cluster OK, id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:24:57,691  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:24:57,695  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:02,972  INFO  __main__   watchdog.py:118            watch_run()  - Watchdog run checks with period = 15 s watchdog      |  2016-12-15 04:25:02,973  INFO  __main__   watchdog.py:120            watch_run()  - Found 1 hosts watchdog      |  2016-12-15 04:25:02,980  DEBUG  __main__   watchdog.py:102           host_check()  - Host host_surya/585164ccf113a9000b4466cf is active, start checking watchdog      |  2016-12-15 04:25:02,981  DEBUG  __main__   watchdog.py:66    host_check_chains()  - Host host_surya/585164ccf113a9000b4466cf: checking chains watchdog      |  2016-12-15 04:25:02,981  DEBUG  modules.cluster   cluster.py:46                 list()  - List all active clusters watchdog      |  2016-12-15 04:25:02,981  DEBUG  __main__   watchdog.py:29   chain_check_health()  - Chain test_chain_3/5851aa8f0009110001f87778: checking health watchdog      |  2016-12-15 04:25:02,982  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:02,985  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:07,988  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:07,998  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:13,005  DEBUG  modules.cluster   cluster.py:581       refresh_health()  - checking health of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:13,015  DEBUG  modules.cluster   cluster.py:607       refresh_health()  - checking result of cluster id=5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:18,021  WARNING  __main__   watchdog.py:50   chain_check_health()  - Chain test_chain_3/5851aa8f0009110001f87778 is unhealthy! watchdog      |  2016-12-15 04:25:18,022  INFO  __main__   watchdog.py:54   chain_check_health()  - Resetting free unhealthy chain test_chain_3/5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:18,022  DEBUG  modules.cluster   cluster.py:475       reset_free_one()  - Try reseting cluster 5851aa8f0009110001f87778 watchdog      |  2016-12-15 04:25:18,023  DEBUG  modules.cluster   cluster.py:451                reset()  - Run recreate_work in background thread watchdog      |  2016-12-15 04:25:18,023  DEBUG  modules.cluster   cluster.py:208               delete()  - Delete cluster: id=5851aa8f0009110001f87778, forced=True watchdog      |  2016-12-15 04:25:18,024  DEBUG  modules.host   host.py:318 get_active_host_by_id()  - check host with id = 585164ccf113a9000b4466cf watchdog      |  2016-12-15 04:25:18,024  DEBUG  agent.docker_swarm   docker_swarm.py:544         compose_down()  - Compose remove 5851aa8f0009110001f87778 with daemon_url=tcp://9.42.137.193:2375, consensus=pbft Stopping 5851aa8f0009110001f87778_vp0 ... done Stopping 5851aa8f0009110001f87778_vp2 ... done Stopping 5851aa8f0009110001f87778_vp1 ... done Stopping 5851aa8f0009110001f87778_vp3 ... done Removing 5851aa8f0009110001f87778_vp0 ... done {code}  h4. 5. Limitations:  # in its current state, the only customizable options for the deployed chaincode are 1) Number of peers(4 or 6), and 2) Consensus type (NOOP or pBFT) # in its current state, every chain created must reside on a single worker node, i.e all Peer containers reside in the single worker node. There is no way to spread out the Peers of a single chain over multiple workers.      ></body> </Action>
<Action id="20164" issue="13748" author="adnanchoudhury" type="comment" created="2016-12-19 21:55:15.0" updateauthor="adnanchoudhury" updated="2016-12-19 21:59:03.0"> <body><! CDATA After reiewing, Chef was chosen as the tool to move forward with, because of the flexibility and the potential re-use of existing code from https://github.ibm.com/IBM-Blockchain/blockchain-chef  The Chef jira is here: https://jira.hyperledger.org/browse/FAB-1431   ></body> </Action>
<Action id="20165" issue="13748" author="adnanchoudhury" type="comment" body="Chef was chosen as the tool to move forward." created="2016-12-19 21:58:10.0" updateauthor="adnanchoudhury" updated="2016-12-19 21:58:10.0"/>
