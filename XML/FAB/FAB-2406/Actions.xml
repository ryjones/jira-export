<Action id="21107" issue="14969" author="rameshthoomu" type="comment" body="Observed the same issue in Jenkins (CI).. Build Reference is here: https://jenkins.hyperledger.org/sandbox/job/fabric-verify-behave-x86_64/5/consoleText" created="2017-02-22 13:52:37.0" updateauthor="rameshthoomu" updated="2017-02-22 13:52:37.0"/>
<Action id="21116" issue="14969" author="jeffgarratt" type="comment" body="I have the changes for this one but a rebase now has an issue due to channel/writer policy requirement.  Trying to get in touch with either  ~jyellick  or  ~muralisr  to get last bit done.  Will update asap." created="2017-02-22 19:46:55.0" updateauthor="jeffgarratt" updated="2017-02-22 19:46:55.0"/>
<Action id="21118" issue="14969" author="jeffgarratt" type="comment" created="2017-02-22 22:00:47.0" updateauthor="jeffgarratt" updated="2017-02-22 22:00:47.0"> <body><! CDATA Pushed a CR https://gerrit.hyperledger.org/r/#/c/6389/  Fails on deployment due to: ''' The proposal does not comply with the channel writers for channel com.acme.blockchain.jdoe.Channel1, error No such policy type: Application/Writers) '''  Notified  ~rameshthoomu  to allow him to verify.  ></body> </Action>
<Action id="21130" issue="14969" author="bmos299" type="comment" created="2017-02-23 03:22:10.0" updateauthor="bmos299" updated="2017-02-23 03:22:10.0"> <body><! CDATA Hi Jeff, it looks like it got a lot further.  Is there where you now expect it to fail?  {code} When user "dev0Org0" connects to deliver function on orderer "orderer0"                                                                                                                                 # None And user "dev0Org0" sends deliver a seek request on orderer "orderer0" with properties                                                                                                                  # None | ChainId                           | Start | End | | com.acme.blockchain.jdoe.Channel1 | 1     | 1   | Then user "dev0Org0" should get a delivery "deploymentTransaction11Block" from "orderer0" of "1" blocks with "1" messages within "1" seconds                                                            # None  context.failed = True  Failing scenarios: features/bootstrap.feature:181  Bootstrap a development network with 4 peers (2 orgs)  and 1 orderer (1 org), each having a single independent root of trust (No fabric-ca, just openssl) -- @1.1 Orderer Options  0 features passed, 1 failed, 0 skipped 0 scenarios passed, 1 failed, 0 skipped 12 steps passed, 1 failed, 24 skipped, 2 undefined Took 0m3.112s  You can implement step definitions for undefined steps with these snippets:  @when(u'user "dev0Org0" creates a transaction "deploymentTransaction1" from proposal responses "deploymentProposalResponses"') def step_impl(context): raise NotImplementedError(u'STEP: When user "dev0Org0" creates a transaction "deploymentTransaction1" from proposal responses "deploymentProposalResponses"')  @when(u'the user "dev0Org0" broadcasts transaction "deploymentTransaction1" on channel "com.acme.blockchain.jdoe.Channel1" to orderer "orderer0"') def step_impl(context): raise NotImplementedError(u'STEP: When the user "dev0Org0" broadcasts transaction "deploymentTransaction1" on channel "com.acme.blockchain.jdoe.Channel1" to orderer "orderer0"')   {code}   ></body> </Action>
<Action id="21134" issue="14969" author="jeffgarratt" type="comment" body="It should get past this.  It appears to be failing on the docker compose step.  Can you post the complete console output?" created="2017-02-23 14:45:44.0" updateauthor="jeffgarratt" updated="2017-02-23 14:45:44.0"/>
<Action id="21135" issue="14969" author="rameshthoomu" type="comment" created="2017-02-23 14:53:31.0" updateauthor="rameshthoomu" updated="2017-02-23 14:53:31.0"> <body><! CDATA With gerrit patch  {noformat} https://gerrit.hyperledger.org/r/#/c/6389 {noformat} we are able to proceed further in CI but getting below error. Attached log file here.  {code:java} Exception TypeError: Couldn't build proto file into descriptor pool! Invalid proto descriptor for file "peer/chaincodeevent.proto": protos.ChaincodeEvent.chaincodeID: "protos.ChaincodeEvent.chaincodeID" is already defined in file "chaincodeevent.proto". protos.ChaincodeEvent.txID: "protos.ChaincodeEvent.txID" is already defined in file "chaincodeevent.proto". protos.ChaincodeEvent.eventName: "protos.ChaincodeEvent.eventName" is already defined in file "chaincodeevent.proto". protos.ChaincodeEvent.payload: "protos.ChaincodeEvent.payload" is already defined in file "chaincodeevent.proto". protos.ChaincodeEvent: "protos.ChaincodeEvent" is already defined in file "chaincodeevent.proto". {code}   ^behave_2406_CI failure.txt     ></body> </Action>
<Action id="21136" issue="14969" author="bmos299" type="comment" body="Hi Jeff, I am attaching the console for the failure.  Ramesh and I are working on getting the same failure in CI.  Once we do we can work through the CI. " created="2017-02-23 15:20:36.0" updateauthor="bmos299" updated="2017-02-23 15:20:36.0"/>
<Action id="21137" issue="14969" author="bmos299" type="comment" body="The attachment is 6389.console." created="2017-02-23 15:21:15.0" updateauthor="bmos299" updated="2017-02-23 15:21:15.0"/>
<Action id="21138" issue="14969" author="rameshthoomu" type="comment" body=" ~jeffgarratt  now CI is failing with the same error what  ~bmos299  mentioned above. Please see the build output here: https://jenkins.hyperledger.org/sandbox/job/fabric-verify-behave-x86_64/26/consoleText" created="2017-02-23 17:17:39.0" updateauthor="rameshthoomu" updated="2017-02-23 17:17:39.0"/>
<Action id="21139" issue="14969" author="jeffgarratt" type="comment" created="2017-02-23 17:34:54.0" updateauthor="jeffgarratt" updated="2017-02-23 17:34:54.0"> <body><! CDATA  ~rameshthoomu  and  ~bmos299 , this looks much better!!!  It is strange that you are getting this failure, but this scenario will not pass anyway given the current state of the system.  Says that "dump_publickey" is not in the module, but it is definitely due to "from OpenSSL import crypto" import.  This seems very strange.  Is it repeatable?  ></body> </Action>
<Action id="21140" issue="14969" author="rameshthoomu" type="comment" body="Yes  ~jeffgarratt  it is much better now.. Yes. it&apos;s is reproducible in Jenkins CI. I can re-test this in vagrant environment" created="2017-02-23 17:37:17.0" updateauthor="rameshthoomu" updated="2017-02-23 17:37:17.0"/>
<Action id="21164" issue="14969" author="ratnakar" type="comment" created="2017-02-25 14:20:43.0" updateauthor="ratnakar" updated="2017-02-25 14:20:43.0"> <body><! CDATA the keystore artifacts should be named as below , for bootstrap artifacts to work for e2e usecase *keystore/9346057e86eafe76e698497d6ec3c20af8ad5cecb72b8c1386f91f0f13fe0831_sk*   ></body> </Action>
<Action id="21189" issue="14969" author="rameshthoomu" type="comment" created="2017-02-27 14:39:10.0" updateauthor="rameshthoomu" updated="2017-02-27 14:39:10.0"> <body><! CDATA  ~jeffgarratt  Observed below error while running behave tests on latest commits:  {noformat} Traceback (most recent call last): File "/usr/local/lib/python2.7/dist-packages/behave/model.py", line 1456, in run match.run(runner.context) File "/usr/local/lib/python2.7/dist-packages/behave/model.py", line 1903, in run self.func(context, *args, **kwargs) File "steps/bootstrap_impl.py", line 261, in step_impl signedProposal = endorser_util.signProposal(proposal=proposal, entity=user, signersCert=signersCert) File "/w/workspace/fabric-verify-behave-x86_64/gopath/src/github.com/hyperledger/fabric/bddtests/steps/endorser_util.py", line 67, in signProposal entity.verifySignature(signature=signature, signersCert=signersCert, data=proposalBytes) File "/w/workspace/fabric-verify-behave-x86_64/gopath/src/github.com/hyperledger/fabric/bddtests/steps/bootstrap_util.py", line 189, in verifySignature vk = ecdsa.VerifyingKey.from_der(crypto.dump_publickey(crypto.FILETYPE_ASN1, signersCert.get_pubkey())) AttributeError: 'module' object has no attribute 'dump_publickey' {noformat}  Build Reference is here: https://jenkins.hyperledger.org/sandbox/job/fabric-verify-behave-x86_64/1/consoleText  ></body> </Action>
