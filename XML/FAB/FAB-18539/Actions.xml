<Action id="71063" issue="46462" author="harrisob@us.ibm.com" type="comment" created="2021-01-06 16:32:49.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-06 16:32:49.0"> <body><! CDATA When you pass the peers, discovery will not be used and the request will be sent to the peers specified. Without peers, the discovery service will be used to calculate the peers needed to successfully endorse the transaction. For some reason the discovery service on the peer is not able to build an endorsement plan.  Can you show me how you have pass the collection names to the NodeSDK and how you have created the collections.  It would also help to see a trace log,   export HFC_LOGGING='{"debug":"console"}'  You may replace console with a file name  ></body> </Action>
<Action id="71066" issue="46462" author="icarrascol" type="comment" created="2021-01-06 18:04:22.0" updateauthor="icarrascol" updated="2021-01-06 18:04:22.0"> <body><! CDATA this is the collection definition:  ^collections_config.js   i pass the collections like this on the sdk: {code:java} contract.addDiscoveryInterest({ name: nameChaincode, collectionNames:  'autentiaPrivateCollection', 'Org1privateCollection'  }); {code} this is the logfile:  ^fabriclog.txt   ></body> </Action>
<Action id="71068" issue="46462" author="icarrascol" type="comment" created="2021-01-06 19:28:36.0" updateauthor="icarrascol" updated="2021-01-07 13:41:48.0"> <body><! CDATA also there is another error related to this, i have the same collection definition but using OutOfN on the endorsing of all of them,  i pass the collections to the sdk as specified on my last comment. if all the peers are online it executes correctly,  but, if on purpose i stop one peer (peer4),  the sdk throws this same error. {code:java} 2021-01-06T19:04:27.190Z - error:  ServiceEndpoint : Error: Failed to connect before the deadline on Endorser- name: peer0.org4.autentia-bchain.com, url:grpcs://localhost:10051, connected:false, connectAttempted:true 2021-01-06T19:04:27.192Z - error:  ServiceEndpoint : waitForReady - Failed to connect to remote gRPC server peer0.org4.autentia-bchain.com url:grpcs://localhost:10051 timeout:3000 2021-01-06T19:04:27.201Z - info:  NetworkConfig : buildPeer - Unable to connect to the endorser peer0.org4.autentia-bchain.com due to Error: Failed to connect before the deadline on Endorser- name: peer0.org4.autentia-bchain.com, url:grpcs://localhost:10051, connected:false, connectAttempted:true at checkState (/home/italo/Documentos/mvp/pagare-mvp/api-chain/node_modules/@grpc/grpc-js/build/src/client.js:69:26) at Timeout._onTimeout (/home/italo/Documentos/mvp/pagare-mvp/api-chain/node_modules/@grpc/grpc-js/build/src/channel.js:292:17) at listOnTimeout (internal/timers.js:549:17) at processTimers (internal/timers.js:492:7) { connectFailed: true } 2021-01-06T19:04:27.356Z - error:  DiscoveryService : send pagare-cc  - Channel:pagare-channel received discovery error:failed constructing descriptor for chaincodes:<name:"pagare-cc" collection_names:"autentiaPrivateCollection" collection_names:"Org1privateCollection" >  {code} considering that this doesnt fail if all the peers are online and if i am correct  there exists another endorsing combination that fulfills the policy for both collections, that is Org1MSP and Org3MSP. So the endorsing from org4 isnt strictly needed right and discovery should be able to generate this alternative endorsing plan.  this is using the latest released version of the sdk: 2.2.4   ^newlog.txt   ^new_collections_config.js   ></body> </Action>
<Action id="71077" issue="46462" author="harrisob@us.ibm.com" type="comment" created="2021-01-07 16:45:48.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-07 16:45:48.0"> <body><! CDATA I do not see any issues with the NodeSDK. The discovery service on the peer is the source of the error shown. How are you installing the chaincode and applying the collections and policies. Is if possible that the collection policies and the active peers do not line up ?     ></body> </Action>
<Action id="71079" issue="46462" author="icarrascol" type="comment" created="2021-01-07 17:55:13.0" updateauthor="icarrascol" updated="2021-01-07 18:02:58.0"> <body><! CDATA i follow the chaincode lifecycle as shown on the examples, i am using node sdk v2.2.4 and fabric v2.2.0, the process to install the chaincode on 4 organizations is really long but in resume is - package the chaincode - install on all the peers - query the installed chaincode to get its ID - approve the chaincode definition on each org like this: {code:java} peer lifecycle chaincode approveformyorg -o orderer1.autentia-bchain.com:7050 --ordererTLSHostnameOverride orderer1.autentia-bchain.com --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem --channelID pagare-channel --name pagare-cc --collections-config /opt/gopath/src/github.com/chaincode/collections_config.js --version 1.0 --init-required --signature-policy 'OutOf (2, '\''Org1MSP.peer'\'', '\''Org2MSP.peer'\'', '\''Org3MSP.peer'\'','\''Org4MSP.peer'\'')' --waitForEvent --package-id pagare-cc_1.0:6138a5ac8fc496a1ed4df92c3706c84efdadf37bf782c6ef49ea8ae48a2df97d --sequence 1 {code}  - check if the definition is approved by everyone: {code:java} peer lifecycle chaincode checkcommitreadiness --channelID pagare-channel --name pagare-cc --version 1.0 --sequence 1 --collections-config /opt/gopath/src/github.com/chaincode/collections_config.js --output json --init-required --signature-policy 'OutOf (2, '\''Org1MSP.peer'\'', '\''Org2MSP.peer'\'', '\''Org3MSP.peer'\'','\''Org4MSP.peer'\'')'  { 	"approvals": { 		"Org1MSP": true, 		"Org2MSP": true, 		"Org3MSP": true, 		"Org4MSP": true 	} }  {code}  - commit the chaincode: {code:java} + peer lifecycle chaincode commit -o orderer1.autentia-bchain.com:7050 --ordererTLSHostnameOverride orderer1.autentia-bchain.com --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem --channelID pagare-channel --collections-config /opt/gopath/src/github.com/chaincode/collections_config.js --name pagare-cc --version 1.0 --sequence 1 --signature-policy 'OutOf (2, '\''Org1MSP.peer'\'', '\''Org2MSP.peer'\'', '\''Org3MSP.peer'\'','\''Org4MSP.peer'\'')' --waitForEvent --init-required --waitForEvent --peerAddresses peer0.org1.autentia-bchain.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.autentia-bchain.com/peers/peer0.org1.autentia-bchain.com/tls/ca.crt --peerAddresses peer0.org2.autentia-bchain.com:8051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.autentia-bchain.com/peers/peer0.org2.autentia-bchain.com/tls/ca.crt --peerAddresses peer0.org3.autentia-bchain.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.autentia-bchain.com/peers/peer0.org3.autentia-bchain.com/tls/ca.crt --peerAddresses peer0.org4.autentia-bchain.com:10051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org4.autentia-bchain.com/peers/peer0.org4.autentia-bchain.com/tls/ca.crt{code} {code:java} 2021-01-07 16:33:58.537 UTC  chaincodeCmd  ClientWait -> INFO 001 txid  5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31  committed with status (VALID) at peer0.org2.autentia-bchain.com:8051 2021-01-07 16:33:58.538 UTC  chaincodeCmd  ClientWait -> INFO 002 txid  5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31  committed with status (VALID) at peer0.org4.autentia-bchain.com:10051 2021-01-07 16:33:58.538 UTC  chaincodeCmd  ClientWait -> INFO 003 txid  5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31  committed with status (VALID) at peer0.org1.autentia-bchain.com:7051 2021-01-07 16:33:58.621 UTC  chaincodeCmd  ClientWait -> INFO 004 txid  5318b4b11ebe0e92f588795a027534df41d8a457be434f8a9f91c8ee58899a31  committed with status (VALID) at peer0.org3.autentia-bchain.com:9051  {code}  - init chaincode  i am using the same collection_config.json files i uploaded here, also in all the process i described i dont get any errors. i know the collections are working because my chaincode uses them, i can verify the collections on their respective couchdb when i add something to them. like i said before the endorsing plan isnt generated idk why, but if i set the peers manually to endorse the invoke is successful.  all the 4 peers are active and running, ive been doing some other tests with the peers down and the sdk throws other kinds of errors. but for this i make sure they are all up and running.  should i try the latest fabric version?  ></body> </Action>
<Action id="71189" issue="46462" author="harrisob@us.ibm.com" type="comment" created="2021-01-11 16:41:23.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-11 16:41:23.0"> <body><! CDATA I think the issue has something to do with the peer and it's Discovery Service, which relies on "Gossip" another service on the peers that exchanges information about the network with other peers.   https://hyperledger-fabric.readthedocs.io/en/release-2.2/gossip.html   ></body> </Action>
<Action id="71192" issue="46462" author="icarrascol" type="comment" created="2021-01-11 17:53:08.0" updateauthor="icarrascol" updated="2021-01-11 17:53:59.0"> <body><! CDATA so are  you saying it could be a bad configured peer? this is my config   ^peer.yaml  should be like the same for all of my peers, obviously with some variations on the urls and ports and paths. i know the default values for gossip are these {code:java} peer.gossip.orgLeader: true peer.gossip.useLeaderElection: false peer.gossip.state.enabled: false peer.gossip.maxBlockCountToStore: 10 peer.gossip.state.blockBufferSize: 20 {code} like  https://github.com/hyperledger/fabric/releases/tag/v2.2.0  says.  idk if they should be different or if my config is wrong or if its missing something?  ></body> </Action>
<Action id="71194" issue="46462" author="harrisob@us.ibm.com" type="comment" body="Have you defined an anchor peer for your network. This is done after channel is created and joined by peers, an update is performed on the channel to add the anchor peer. Now Gossip will be able to work properly and then Discovery Service will be able to build the endorsement plans." created="2021-01-11 20:07:35.0" updateauthor="harrisob@us.ibm.com" updated="2021-01-11 20:07:35.0"/>
<Action id="71196" issue="46462" author="icarrascol" type="comment" created="2021-01-11 20:38:23.0" updateauthor="icarrascol" updated="2021-01-11 20:38:23.0"> <body><! CDATA yes i defined the anchor peers, 1 anchor for each org.  this is an example but i use the same code just with different orgnames.    {code:java} Updating anchor peers for Enjoy... >>>>>>>>>>>>>>>>>><<< setGlobals PORT 7051 + peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/EnjoyMSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem + res=0 + set +x 2021-01-11 20:13:57.796 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized 2021-01-11 20:13:57.827 UTC  channelCmd  update -> INFO 002 Successfully submitted channel update ===================== Anchor peers updated for orgEnjoy on channel 'pagare-channel' ===================== Updating anchor peers for Clinica... >>>>>>>>>>>>>>>>>><<< setGlobals PORT 8051 + peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/ClinicaMSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem + res=0 + set +x 2021-01-11 20:14:00.967 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized 2021-01-11 20:14:00.985 UTC  channelCmd  update -> INFO 002 Successfully submitted channel update ===================== Anchor peers updated for orgClinica on channel 'pagare-channel' ===================== Updating anchor peers for Autentia1... >>>>>>>>>>>>>>>>>><<< setGlobals PORT 9051 + peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/Autentia1MSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem + res=0 + set +x 2021-01-11 20:14:04.164 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized 2021-01-11 20:14:04.189 UTC  channelCmd  update -> INFO 002 Successfully submitted channel update ===================== Anchor peers updated for orgAutentia1 on channel 'pagare-channel' ===================== Updating anchor peers for Autentia2... >>>>>>>>>>>>>>>>>><<< setGlobals PORT 10051 + peer channel update -o orderer1.autentia-bchain.com:7050 -c pagare-channel -f ./channel-artifacts/Autentia2MSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/autentia-bchain.com/orderers/orderer1.autentia-bchain.com/msp/tlscacerts/tlsca.autentia-bchain.com-cert.pem + res=0 + set +x 2021-01-11 20:14:07.356 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized 2021-01-11 20:14:07.374 UTC  channelCmd  update -> INFO 002 Successfully submitted channel update  {code}  ></body> </Action>
<Action id="71197" issue="46462" author="icarrascol" type="comment" created="2021-01-11 21:00:25.0" updateauthor="icarrascol" updated="2021-01-11 21:00:25.0"> <body><! CDATA Added a peer container log to show that the anchors are being added and there are no errors shown.   ^peerlogs.txt   ></body> </Action>
<Action id="72044" issue="46462" author="bestbeforetoday" type="comment" created="2021-08-20 11:32:29.0" updateauthor="bestbeforetoday" updated="2021-08-20 11:32:29.0"> <body><! CDATA Since the collection names in the error message from the description for this issue don't match the logs and configuration provided, it would be good to double-check that the names in the configuration and the chaincode interest supplied to the SDK really do match up exactly.  Assuming they do, as Brett mentioned previously, the SDK does seem to be successfully delivering the collection information to the discovery service OK, and the error is coming back from there. So probably this issue should be moved to the  Fabric (FAB)|https://jira.hyperledger.org/browse/FAB  project.  ></body> </Action>
