<Issue id="26339" key="FAB-7587" number="7587" project="10002" reporter="romain_griffiths" creator="romain_griffiths" type="10001" summary="MSP Child certificate filtering on Organization OR DistinguishedName" priority="3" resolution="10001" status="6" created="2018-01-03 14:36:59.0" updated="2020-01-22 22:22:28.0" resolutiondate="2020-01-22 22:22:28.0" votes="2" watches="5" workflowId="35477"> <description><! CDATA *Need*  Organizations CISO (Chief Information Security Officer) with strong PKI policies refuse to allow self-signed CA and derived certificates to sign transactions.  CISO would like to use their validated Certificate Authority Provider (CA Provider) and validated internal procedures and tools for management of Fabric Certificates.     *Problem*  Fabric MSP could trust CA Provider root certificate but it would end up trusting all certificates issued by the CA Provider.  Current Fabric version supports segregation of Clients, Peers and Orderer on the OU field and could be used for this purpose.  But the OU field cannot be validated by standard Certificate Issuance procedures.   *Proposal 1*     The O (Organization) field can have   ETSI|https://portal.etsi.org/TBSiteMap/ESI/TrustServiceProviders.aspx  validation procedure.  The MSP config.yaml file could have filtering configuration on the O (Organization field) to enable limited trust of child certificates.  Please see the detailed description:   ^FAB-OrganizationFilter-20180103-3.pdf      *Proposal 2*  Various restrictions could be applied on fields other than the O (Organization) field. This would enable restrictions by Departments, or force specific naming pattern.  The MSP config.yaml file could have filtering pattern on any Distinguished Name component to enable limited trust of child certificates.  Please see the detailed description:   ^FAB-DNFilter-20180103-3.pdf     h3. *^Proposition Comparison^*  ^Proposal 1 is easy to do and to test but is not very configurable.^  ^Proposal 2 is more configurable and future-proof but require more testing and might lead to security holes if the regex are not properly crafted.^        ></description> </Issue>
