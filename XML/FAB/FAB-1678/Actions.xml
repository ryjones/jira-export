<Action id="21442" issue="14105" author="jyellick" type="comment" body="This partially implemented via FAB-2335, though the &apos;and modify&apos; component is still lacking." created="2017-03-10 18:27:07.0" updateauthor="jyellick" updated="2017-03-10 18:27:07.0"/>
<Action id="21553" issue="14105" author="jyellick" type="comment" body="Opened a new story to FAB-2815 to track generating config updates, as this is a large piece of work, and outside the scope of this story." created="2017-03-17 15:07:25.0" updateauthor="jyellick" updated="2017-03-17 15:07:25.0"/>
<Action id="23285" issue="14105" author="clayton sims" type="comment" body="Kostas moving this to you since Jason is out.   I could not find a gerrit.   Whats left to get it merged?" created="2017-05-02 19:53:09.0" updateauthor="clayton sims" updated="2017-05-02 19:53:09.0"/>
<Action id="23346" issue="14105" author="kchristidis" type="comment" created="2017-05-03 15:50:55.0" updateauthor="kchristidis" updated="2017-05-08 14:25:07.0"> <body><! CDATA As things stand right now, we do not have a command line tool that allows us to fetch the most recent configuration, inspect it, and create a new configuration update that sets the right versions for the modified items and signs them accordingly.  The configtxgen tool does this currently for updating anchor peers (if they're still untouched), as a proof-of-concept.  This story aims to track this work.  We have decided we may need to re-evaluate our approach here altogether (i.e. maybe we use another tool to drive this).  I'm updating this JIRA accordingly.  ></body> </Action>
<Action id="23742" issue="14105" author="jyellick" type="comment" created="2017-05-11 14:25:19.0" updateauthor="jyellick" updated="2017-05-11 14:25:19.0"> <body><! CDATA This is a rather large piece of work, we can expect this to take another 2-3 weeks.  The rough design for the tool is as follows.  Expose the following 4 functions.  1. Decode config: Input: A proto {{Config}} message Output: A JSON representation of the entire config, (no opaque bytes)  2. Decode config update Input: A proto {{ConfigUpdate}} message Output: A JSON representation of the update message (no opaque bytes)  3. Compute config update Input: A JSON representation of the entire original config, a JSON representation of a modified config Output: A proto {{ConfigUpdate}} message  4. Simulate config update: Input: A proto {{ConfigMessage}} and a proto {{ConfigUpdateEnvelope}} message Output: A proto {{Config}} message or error  The workflow for using the tool for a config update would then be as follows:  1. Retrieve the current config from the orderer via SDK 2. Send config to "Decode config" 3. Edit the returned JSON as desired 4. Send original JSON from (2) and modified JSON from (3) to "Compute Config Update" 5. Distribute {{ConfigUpdate}} from (4) to all signatory parties 6. Each party which must sign examines the update via "Decode config update", then produces a {{ConfigSignature}} and returns it to the originator 7. The originator runs "Simulate config update" with the collected signatures and config update, to verify that the config is expected to succeed or determine the missing signature members. 8. The originator submits the {{ConfigUpdateEnvelope}} to ordering via the SDK.  This workflow should be able to handle all types of config updates and does not require specifying APIs for manipulating specific configuration components.  ></body> </Action>
<Action id="23878" issue="14105" author="jonathanlevi" type="comment" created="2017-05-15 19:19:33.0" updateauthor="jonathanlevi" updated="2017-05-15 19:19:33.0"> <body><! CDATA Shall we break this down to a few sub-tasks, with some time estimates? (I did note the estimated "2-3 weeks of work" quoted above)  ~jyellick  Can we somehow split the work? Or will it effectively be mostly you working on this?  ></body> </Action>
<Action id="24158" issue="14105" author="jyellick" type="comment" body=" ~JonathanLevi  As always, I am an eternal optimist, and thought things could be done much faster than the reality would indicate.  I&apos;ve finally worked out a design of the (IMO) hardest component of this.  Namely, the bidirectional proto -&gt; deep JSON -&gt; proto conversion.  I was holding off on creating the subtasks until I felt like I had a good grasp of what the components were going to look like.  I&apos;ll be creating subtasks for this work shortly.  I&apos;d assumed I would be tackling all of the work, but there are some componenets of this I would certainly welcome help on." created="2017-05-22 21:37:02.0" updateauthor="jyellick" updated="2017-05-22 21:37:02.0"/>
<Action id="24255" issue="14105" author="clayton sims" type="comment" created="2017-05-24 17:39:41.0" updateauthor="clayton sims" updated="2017-05-24 17:39:41.0"> <body><! CDATA Natasha - I just spoke to Jason.   This should be done by 1 week from Friday.    Jason - yell if I misunderstood        ></body> </Action>
<Action id="25208" issue="14105" author="jyellick" type="comment" body="I&apos;m marking this as done.  The remaining sub-task of adding a CLI interface, I&apos;ve moved to an enhancement.  But the basic function described is present." created="2017-06-03 05:58:41.0" updateauthor="jyellick" updated="2017-06-03 05:58:41.0"/>
