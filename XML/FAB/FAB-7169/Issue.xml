<Issue id="24554" key="FAB-7169" number="7169" project="10002" reporter="rameshthoomu" assignee="rameshthoomu" creator="rameshthoomu" type="10002" summary=" CI  - Optimize build processes for fabric-verify job" priority="3" resolution="10000" status="6" created="2017-11-28 22:30:15.0" updated="2018-07-20 14:15:04.0" resolutiondate="2018-04-15 15:42:24.0" votes="0" watches="7" workflowId="40628"> <description><! CDATA Optimize build processes for fabric-verify job. Existing fabric-verify jobs builds docker images and binaries at each job level (fabric-unit-tests, fabric-behave, fabric-smoke-tests, fabric-e2e-tests, etc..)  this is consuming lot of build time and wasting lot of resources. The below proposed approach should fix above said issues. * Create a build job which checks doc changes (.md or .rst or .txt) from the git commit messages * If patch set is related to above mentioned changes, then don't trigger any build and send +1 to Gerrit patch set. * If patch set is not related to above said changes, then build fabric and fabric-ca docker images also builds binaries. upon successful, push these images and binaries to nexus repository. * once the above job is successfully executed, trigger smoke job (byfn with sample channel) as downstream by pulling published images from nexus repository. * if successful, then run other verify test jobs in parallel (max 20-30 mins), including verifying basic tests for fabric-sdk-* and fabric-ca (and possibly soon to be added) cello and other tools: ** fabric UT tailored for the specific types and locations of files ** e2ecli ** behave tests ** fabric-ca ACL e2e integration test with fabric  ></description> </Issue>
