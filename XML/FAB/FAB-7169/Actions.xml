<Action id="35741" issue="24554" author="rameshthoomu" type="comment" body="Patch set has been submitted. looks like patch set is good but some testing is required on this. Will update the status once done." created="2017-12-01 21:52:54.0" updateauthor="rameshthoomu" updated="2017-12-01 21:52:54.0"/>
<Action id="35816" issue="24554" author="rameshthoomu" type="comment" created="2017-12-05 00:31:54.0" updateauthor="rameshthoomu" updated="2017-12-05 00:31:54.0"> <body><! CDATA Posting  ~ChristopherFerris  comments here:  Just so we are clear, I thought I would document what I believe we need to be doing, based on the discussion we just had.   1. break down the jenkins jobs:    a. - build x86 - cache images and binaries in a tarball tagged with the commit sha (abbreviated)    b. - if 1.a succeeds, trigger end-2-end "smoke test" using just the CLI (no java or node sdk passes) using the cached images and binaries from 1.a (see note below regarding dependent images)    c. - if 1.b succeeds, trigger x86-verify (UT) and x86-behave (BDD) tests with images and binaries cached from 1.a           (note, we will run the full set of UT tests here, not the desk-check)   2. since we are not building and testing Z on every CI pass, we should do this once daily. If it fails, notify the maintainers. At least we know the set of CRs to examine for the failure on Z and we can assign someone to fix it (would need to be someone from Systems anyway).   3. we should select a stable build each day to be designated the daily-stable-build from the cache (could be one from previous day) and tag it as something like "daily-stable". This will be the set of images and binaries that we use for the integration and svt tests.   If we need images/binaries from a dependent repo (e.g. fabric-ca, or fabric-sdk-* etc) then we should use either the published image, or the one that will be tagged as "daily-stable" once we adopt the pattern across all repos.   Note also that this will greatly facilitate publishing a release because we can advance a specific tagged set of images and binaries through the gauntlet of tests etc and we can simply publish those to DockerHub etc whenthe maintainers decide that we are at end of job.   As soon as  https://gerrit.hyperledger.org/r/c/15637/  is merged, I can submit the CR for fabric to remove couchdb and kafka etc from the fabric build and have it use the latest published images instead.  ></body> </Action>
<Action id="38851" issue="24554" author="rameshthoomu" type="comment" created="2018-01-18 15:00:10.0" updateauthor="rameshthoomu" updated="2018-01-18 15:09:07.0"> <body><! CDATA *CI Status:*  Comment based triggers are not working in production Jenkins. We have created fabric-verify-build-check-x86_64 job which verifies the changes in the commit message and trigger other jobs based on the condition/comment posted in the Custom Build Message. Below are the conditions                   – If the change is about WIP, Ignores the patch set and sends success back to gerrit with +1                   – If the change is doc change (only .md or .rst or .txt) then the build check job posts "Build DOCS" and which triggers fabric-docs-build-x86_64 job.                   – If any other change like (go files with doc changes) then build check job verifies basic checks and build and publish docker images & binaries to Nexus2 and nexus3.                            – Once these checks are passed, build check job triggers "fabric-verify-byfn-checks-x86_64" which runs e2e tests from fabric-samples repository by pulling images and binaries from nexus.                            – After the byfn tests are passed, this job posts "Build functional" comment to "fabric-verify-unit-tests-x86_64" job which executes unit-tests by pulling images and binaries from nexus.  Pushed above jobs to production Jenkins and skipping the failure Vote on Gerrit patch sets. Above *approach is not working* with the existing Gerrit/Jenkins Configuration and the same is working in personal Gerrit/Jenkins setup. I have informed Linux Foundation team about this issue and yet to get response from them.  ></body> </Action>
<Action id="39025" issue="24554" author="rameshthoomu" type="comment" created="2018-01-23 14:16:12.0" updateauthor="rameshthoomu" updated="2018-01-23 14:16:12.0"> <body><! CDATA Gerrit Trigger is not working to post comments to Jenkins jobs. We had discussion with LF team (@andy,  ~jwagantall , @ry and Tongli on this issue and it seems issue is with Gerrit running in production mode and it don't allow to post comment and listen on the same user. I have verified this in Gerrit running in developer mode (no restrictions applied on user) and it's working as expected.  We are still working on this and let you know the update soon.  ></body> </Action>
<Action id="39511" issue="24554" author="rameshthoomu" type="comment" created="2018-02-01 15:22:55.0" updateauthor="rameshthoomu" updated="2018-02-01 15:22:55.0"> <body><! CDATA We had discussion with LF developer (Tanhaa) on the issue (Jobs are not triggering for the comments posted in the gerrit patchset) .  He agreed that, existing Jenkins/Gerrit configuration has an issue. He said he will work on this to understand what is the exact issue causing here. He suggested another solution to unblock us while he is working on finding the root cause of the issue.  I have submitted multiple patches to trigger parametrized builds. This is still an experimental change  ></body> </Action>
<Action id="39800" issue="24554" author="rameshthoomu" type="comment" created="2018-02-07 18:08:24.0" updateauthor="rameshthoomu" updated="2018-02-07 18:08:24.0"> <body><! CDATA *latest update:*  CI flow is now working as expected: removed the docs job from this flow,  On every patch set submitted, Below is the flow working right now  -- Trigger "fabric-build-checks" job (fabric-verify-build-checks-x86_64), which checks the commit message first and do the below steps         – If commit has "WIP", Jenkins Ignore the build and notifies gerrit patch set with +1         – If it is non documentation changes, do basic checks like "license, linter, spelling" if successful, build docker images & binaries and push them to nexus2 & nexus3         – upon successful, triggers "smoke" test job (fabric-verify-byfn-checks-x86_64)  -- Smoke test job pulls docker images and binaries from the previous job and run the fabric-samples e2e tests      – upon successful, this triggers downstream job (fabric-verify-unit-tests-x86_64)  -- Unit-tests job pulls docker images, binaries and trigger the unit-tests.  Above flow is working as expected, and we are seeing build time is reduced by 10 mins in each build. As we have only two jobs (smoke and unit-tests) not seeing huge advantage with build time.  *Issues:*    **  1)  Downstream job results are not posting back to gerrit after execution. i.e it shows only the build-checks job result on gerrit patch set.    2) Upstream job result is overriding by the downstream job results. i.e you will always see +1 immediately after execute the build-checks job irrespective of the downstream job result    3) Downstream jobs may fail when a developer accidentally post a comment without checking success result of upstream job. This process will fail to pull the images and binaries when a developer triggers a downstream job by posting comments in the gerrit patch set.   ~tongliofcary  ^^  ></body> </Action>
<Action id="39956" issue="24554" author="rameshthoomu" type="comment" created="2018-02-09 19:57:21.0" updateauthor="rameshthoomu" updated="2018-02-09 19:57:21.0"> <body><! CDATA  ~tongliofcary   ~jwagantall   ~rjones-lf  I have submitted patch to disable this flow from production Jenkins system.. Will enable, once the above *issues* are addressed/resolved. We are also waiting for an update on Jenkins plugin issue (not able to trigger the Jenkins jobs after a comment is posted to gerrit patchset) from Linux Foundation team.   I don;t see Thanh ha JIRA ID.  ></body> </Action>
<Action id="40067" issue="24554" author="tongliofcary" type="comment" body=" ~jwagantall   ~ry  We really need to get these problems resolved to move forward. Invoking downstream jobs from upstream jobs creates multiple entries to a job because downstream jobs can be invoked by comments from a developer, and from upstream job, multiple ways of invoking a job creates a lot more code and making the voting process very complicated. I think that the LF systems really need to make sure that the comment can invoke the jobs, this is very basic and I have tried on so many version of jenkins and systems, they all worked perfectly. Without this basic function, we can not really put these new jobs in place. It is very urgent for your team to resolve this problem." created="2018-02-13 16:02:51.0" updateauthor="ryjones" updated="2018-02-13 23:00:30.0"/>
<Action id="40072" issue="24554" author="tongliofcary" type="comment" created="2018-02-13 18:12:43.0" updateauthor="ryjones" updated="2018-02-13 23:00:20.0"> <body><! CDATA  ~ry   ~jwagantall  please also see this ticket which has been open for a long time. https://rt-sso.linuxfoundation.org/Ticket/Display.html?id=51058   ></body> </Action>
<Action id="40096" issue="24554" author="ryjones" type="comment" created="2018-02-14 00:45:15.0" updateauthor="ryjones" updated="2018-02-14 00:45:15.0"> <body><! CDATA  ~tongliofcary   ~rameshthoomu   ~ChristopherFerris  This is our plan. The assumption is some plugin interaction in production is causing this failure. We are:  # standing up a new Jenkins system, with only the minimum number of plugins required to run # asking you to publish a set of jobs we can debug with on this new jenkins # slowly adding more of the needed plugins until we can support all of the jobs we use today, correctly, until your job either breaks or works # if it works, we will replace the current production Jenkins system with the new one. If it breaks, we will know which plugin exactly is causing the issue.  Once the new Jenkins instance exists, the exploration of the plugins will be time boxed to one week.   ></body> </Action>
<Action id="40141" issue="24554" author="tongliofcary" type="comment" body=" ~ryjones  ~jwagantall Thanks for doing this. Please let me know as soon as the env is up." created="2018-02-14 15:02:49.0" updateauthor="tongliofcary" updated="2018-02-14 15:02:49.0"/>
<Action id="40382" issue="24554" author="rameshthoomu" type="comment" body=" ~ryjones  any update on the new jenkins environment setup and testing on the patch  https://gerrit.hyperledger.org/r/#/c/17939/  ?" created="2018-02-19 13:49:16.0" updateauthor="rameshthoomu" updated="2018-02-19 13:49:16.0"/>
<Action id="40871" issue="24554" author="ryjones" type="comment" body="the &quot;build on comment&quot; issue is resolved. there is still work to atomize the builds." created="2018-02-26 21:01:43.0" updateauthor="ryjones" updated="2018-02-26 21:01:43.0"/>
<Action id="40880" issue="24554" author="bramwelt" type="comment" created="2018-02-26 23:08:51.0" updateauthor="bramwelt" updated="2018-02-26 23:08:51.0"> <body><! CDATA Hi  ~rameshthoomu  and  ~tongliofcary , I just wanted to chime in to comment on how OPNFV is already doing something similar to this.  We use the multijob plugin to trigger on changes to gerrit, using  phases|https://build.opnfv.org/ci/job/compass-verify-xenial-master/  (some in parallel) to easily identify parts of the build (basic, verify, smoke, etc). You can see the underlying JJB  here|https://github.com/opnfv/releng/blob/master/jjb/compass4nfv/compass-verify-jobs.yml#L52 .  We have a single docs job for all projects that watch '/docs/*', and we just ensure builds for projects don't trigger on changes to docs using the Gerrit file-path. Some of our projects don't need CI, but still need to have +1 verified, so we have a simple  hello-world|https://github.com/opnfv/releng/blob/master/jjb/global/basic-jobs.yml#L8  job that does that.  Our artifacts are also generally built in the first step, then pulled down in the next step, since we don't build & deploy on the same machines. All of this is managed through the build scripts through, and isn't Jenkins specific.  ></body> </Action>
<Action id="40938" issue="24554" author="tongliofcary" type="comment" body=" ~ryjones please add the solution why it was not working and now it is working so that when others having similar issues they can refer to this one easily. Thanks." created="2018-02-27 16:16:35.0" updateauthor="tongliofcary" updated="2018-02-27 16:16:35.0"/>
<Action id="40939" issue="24554" author="tongliofcary" type="comment" body=" ~bramwelt Thanks a lot Trevor for chiming in on the matter. your help is greatly appreciated." created="2018-02-27 16:17:26.0" updateauthor="tongliofcary" updated="2018-02-27 16:17:26.0"/>
<Action id="40957" issue="24554" author="ryjones" type="comment" created="2018-02-27 20:31:21.0" updateauthor="ryjones" updated="2018-02-27 20:31:50.0"> <body><! CDATA  ~tongliofcary  the email address the gerrit plugin in Jenkins used to return results was the same one used to trigger builds. This was changed, but it did not change the performance of the trigger. The next step is you need to stop and start the gerrit plugin - it does not read the config changes you make in real time, only on startup.  !Screen Shot 2018-02-27 at 12.29.24 PM.png|thumbnail!  once you make this change you need to click the blue ball here to stop the plugin, then the red ball to start it so it respects the config change  !Screen Shot 2018-02-27 at 12.30.23 PM.png|thumbnail!  ></body> </Action>
<Action id="42963" issue="24554" author="rameshthoomu" type="comment" body="This has been implemented few weeks back and it&apos;s working as expected in production. Thanks to everyone.. (y)" created="2018-04-15 15:38:47.0" updateauthor="rameshthoomu" updated="2018-04-15 15:39:48.0"/>
