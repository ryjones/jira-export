<Action id="71015" issue="46454" author="mastersingh24" type="comment" created="2020-12-26 09:19:53.0" updateauthor="mastersingh24" updated="2020-12-26 09:19:53.0"> <body><! CDATA  ~mcoblenz  - Can you try to download   {quote}https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-darwin-arm64-2.3.0.tar.gz{quote}  directly and then try to untar it?  ></body> </Action>
<Action id="71024" issue="46454" author="mcoblenz" type="comment" created="2020-12-28 13:59:45.0" updateauthor="mcoblenz" updated="2020-12-28 13:59:45.0"> <body><! CDATA There's no file at that URL. This page:  https://github.com/hyperledger/fabric/releases/tag/v2.3.0   lists only:  hyperledger-fabric-darwin-amd64-2.3.0.tar.gz|https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-darwin-amd64-2.3.0.tar.gz   hyperledger-fabric-linux-amd64-2.3.0.tar.gz|https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-linux-amd64-2.3.0.tar.gz   hyperledger-fabric-windows-amd64-2.3.0.tar.gz|https://github.com/hyperledger/fabric/releases/download/v2.3.0/hyperledger-fabric-windows-amd64-2.3.0.tar.gz   ></body> </Action>
<Action id="71027" issue="46454" author="btl5037" type="comment" created="2020-12-31 04:07:52.0" updateauthor="btl5037" updated="2020-12-31 04:07:52.0"> <body><! CDATA The new M1 Macs are Apples first foray into ARM. We don't support ARM as it is today. You would need to compile all of the images and binaries yourself. We've had this discussion in the past and have frequently punted on it. With Apple being all in on ARM now, and Microsoft's supposed support for ARM, it's not unreasonable to say we should at least find a path of least resistance for running the test-network on ARM.  Microsoft does support ARM in our CICD platform now, so we can test/build against it  ></body> </Action>
<Action id="71028" issue="46454" author="mcoblenz" type="comment" body="I was kind of hoping to run the amd64 image under emulation, but I&apos;m not sure how/whether that works with Docker." created="2020-12-31 04:33:02.0" updateauthor="mcoblenz" updated="2020-12-31 04:33:02.0"/>
<Action id="71029" issue="46454" author="btl5037" type="comment" body="So I could help you out to bootstrap it with the amd64 images, as the latest tech preview of Docker for M1 Mac does support emulation, you just need to add the `--platform linux/amd64` equivalent to the compose files. Let me take it for a spin on an M1 over on the Mac Stadium Cloud and see if it&apos;s possible (probably take me a few days to get through it with the holidays)." created="2020-12-31 04:56:58.0" updateauthor="btl5037" updated="2020-12-31 04:59:29.0"/>
<Action id="71030" issue="46454" author="btl5037" type="comment" body="Note: Adding the platform on the M1 preview will force emulation to use AMD instead or ARM" created="2020-12-31 04:58:50.0" updateauthor="btl5037" updated="2020-12-31 04:58:50.0"/>
<Action id="71105" issue="46454" author="JIRAUSER21148" type="comment" body="¿Any update on this? I would like to run Hyperledger Fabric on M1" created="2021-01-10 14:45:15.0" updateauthor="JIRAUSER21148" updated="2021-01-10 14:45:15.0"/>
<Action id="71106" issue="46454" author="btl5037" type="comment" created="2021-01-10 16:23:41.0" updateauthor="btl5037" updated="2021-01-10 16:26:59.0"> <body><! CDATA I haven't put documentation together yet on this, but you can run this under x86 emulation by bootstrapping Fabric-Samples using this method to build the binaries for native ARM: * Create the hyperledger directory on the GOPATH **  {code:java} mkdir -p $GOPATH/src/github.com/hyperledger{code}  * Bootstrap Fabric-Samples **  {code:java} cd $GOPATH/src/github.com/hyperledger && curl -sSL http://bit.ly/2ysbOFE | bash -s -b{code}  *  ** The `-b` flag will skip downloading the binaries * Clone Fabric **  {code:java} git clone https://github.com/hyperledger/fabric $GOPATH/src/github.com/hyperledger/fabric{code}  * Clone Fabric-CA **  {code:java} git clone https://github.com/hyperledger/fabric-ca $GOPATH/src/github.com/hyperledger/fabric-ca{code}  * Change to the Fabric repo **  {code:java} cd $GOPATH/src/github.com/hyperledger/fabric{code}  * Build the Fabric binaries **  {code:java} make native{code}  * Copy the binaries to the Fabric-Samples repo **  {code:java} mv build/bin $GOPATH/src/github.com/hyperledger/fabric-samples{code}  * Copy sampleconfig directory to Fabric-Samples and rename to "config' **  {code:java} mv sampleconfig $GOPATH/src/github.com/hyperledger/fabric-samples/config{code}  * Change to the Fabric-CA repo **  {code:java} cd $GOPATH/src/github.com/hyperledger/fabric-ca{code}  * Build the Fabric-CA-Client binary **  {code:java} make fabric-ca-client{code}  * Copy the Fabric-CA-Client binary to the Fabric-Samples `bin` directory **  {code:java} mv bin/fabric-ca-client $GOPATH/src/github.com/hyperledger/fabric-samples/bin{code}  That's all, you can now change back into Fabric-Samples and run the test-network *  {code:java} cd $GOPATH/src/github.com/hyperledger/fabric-samples/test-network {code}  ></body> </Action>
<Action id="71179" issue="46454" author="btl5037" type="comment" body="You can also do this by building native ARM docker images, which I&apos;ve also done and tested, but it&apos;s a little more work as you need to disable CGO" created="2021-01-11 03:54:53.0" updateauthor="btl5037" updated="2021-01-11 03:55:09.0"/>
<Action id="71266" issue="46454" author="JIRAUSER21288" type="comment" created="2021-01-13 10:30:05.0" updateauthor="JIRAUSER21288" updated="2021-01-13 10:30:05.0"> <body><! CDATA Hi I have a problem when i try to build the fabric-ca-client binary,  {code:java} Building fabric-ca-client in bin directory ... no required module provides package github.com/hyperledger/fabric-ca/cmd/fabric-ca-client: working directory is not part of a module make: ***  bin/fabric-ca-client  Error 1 {code} I've tried multiple things, and nothing seems to work for me.  Is there an easy fix, or maybe you can show the process of building native ARM docker images?   ></body> </Action>
<Action id="71268" issue="46454" author="btl5037" type="comment" created="2021-01-13 12:54:31.0" updateauthor="btl5037" updated="2021-01-13 12:54:31.0"> <body><! CDATA Ah, you need to disable modules temporarily: {code:java} GO111MODULE=off make fabric-ca-client {code}       ></body> </Action>
<Action id="71368" issue="46454" author="JIRAUSER21377" type="comment" created="2021-02-09 07:56:22.0" updateauthor="JIRAUSER21377" updated="2021-02-23 08:43:42.0"> <body><! CDATA I would like to ask for help on how to make native binary files using the M1 mac since I have been confused for a long time. Could anyone show us the instructions step by step?  {color:#4c9aff}+*23/Feb/21 update the recent progress---*+{color}  I've tried several times but when I make peer docker, the process was always stuck at   building .build/docker/bin/peer operation not permitted  and the remaining steps cannot be executed. Hope someone can help me out.  Many thx!  ></body> </Action>
<Action id="71642" issue="46454" author="JIRAUSER21624" type="comment" created="2021-03-30 12:38:09.0" updateauthor="JIRAUSER21624" updated="2021-03-30 12:39:56.0"> <body><! CDATA Hi I have a problem when i try to run /network.sh createChannel.  Environment:  * fabric latest * fabric-sample latest  {code:java} ./network.sh createChannel Creating channel 'mychannel'. If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb Generating channel genesis block 'mychannel.block' /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/../bin/configtxgen + configtxgen -profile TwoOrgsApplicationGenesis -outputBlock ./channel-artifacts/mychannel.block -channelID mychannel 2021-03-30 20:32:42.994 CST 0001 INFO  common.tools.configtxgen  main -> Loading configuration 2021-03-30 20:32:43.023 CST 0002 INFO  common.tools.configtxgen.localconfig  completeInitialization -> orderer type: etcdraft 2021-03-30 20:32:43.024 CST 0003 INFO  common.tools.configtxgen.localconfig  completeInitialization -> Orderer.EtcdRaft.Options unset, setting to tick_interval:"500ms" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 2021-03-30 20:32:43.024 CST 0004 INFO  common.tools.configtxgen.localconfig  Load -> Loaded configuration: /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/configtx/configtx.yaml 2021-03-30 20:32:43.035 CST 0005 INFO  common.tools.configtxgen  doOutputBlock -> Generating genesis block 2021-03-30 20:32:43.035 CST 0006 INFO  common.tools.configtxgen  doOutputBlock -> Creating application channel genesis block 2021-03-30 20:32:43.037 CST 0007 INFO  common.tools.configtxgen  doOutputBlock -> Writing genesis block + res=0 Creating channel mychannel Using organization 1 + osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key + res=1 + osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key + res=1 + osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key + res=1 + osnadmin channel join --channelID mychannel --config-block ./channel-artifacts/mychannel.block -o localhost:7053 --ca-file /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --client-cert /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt --client-key /Users/millionairez/go/src/github.com/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key + res=1 Error: Post "https://localhost:7053/participation/v1/channels": EOFChannel creation failed {code}  ></body> </Action>
<Action id="72053" issue="46454" author="JIRAUSER21644" type="comment" created="2021-08-26 13:57:21.0" updateauthor="JIRAUSER21644" updated="2021-08-26 13:58:25.0"> <body><! CDATA  ~btl5037   now fabric 2.4 released some how I have done some changes , now my test-network not running. tried a lot of ways , can you please guide some other ways or any new workground for Hyperledger-fabric on M1 setup.  or procedure for building docker images to arm64, something which we run the network.     Thanks a lot in Adv  ></body> </Action>
<Action id="72445" issue="46454" author="JIRAUSER23138" type="comment" created="2022-04-15 14:52:48.0" updateauthor="JIRAUSER23138" updated="2022-04-15 14:52:48.0"> <body><! CDATA I have forked the repository and updated the docker images to work on apple m1 chip.   https://github.com/gpietro/fabric-samples-apple-m1      ></body> </Action>
<Action id="72446" issue="46454" author="JIRAUSER23154" type="comment" created="2022-04-20 07:46:44.0" updateauthor="JIRAUSER23154" updated="2022-04-20 07:46:44.0"> <body><! CDATA  ~gpietro   Can you please explain how to use the repo?     So far I have been installing the fabric-samples with the:  {{curl -sSL https://bit.ly/2ysbOFE | bash -s}}   command.     Thanks.  ></body> </Action>
<Action id="72500" issue="46454" author="JIRAUSER23138" type="comment" body=" ~niall32  it works the same as the fabric-samples, the only change is on the docker images and platform to be compatible with M1 chip." created="2022-04-21 07:33:16.0" updateauthor="JIRAUSER23138" updated="2022-04-21 07:33:16.0"/>
<Action id="72701" issue="46454" author="JIRAUSER23601" type="comment" created="2022-09-22 22:34:40.0" updateauthor="JIRAUSER23601" updated="2022-09-22 22:37:48.0"> <body><! CDATA  ~gpietro  I've cloned your repo and I've followed the tutorial for installing Fabric and Fabric Installs. I assume your repository should replace the  fabric-samples repo|https://hyperledger-fabric.readthedocs.io/en/latest/install.html#choosing-which-components . If that's the case, I ended up with the same result as the following command still brings the old AMD64 container images:  !Screenshot 2022-09-22 at 11.23.58 PM.png|width=466,height=161!    {code:java} ./install-fabric.sh docker samples{code}       Containers after cloning * fabric-samples-apple-m1|https://github.com/gpietro/fabric-samples-apple-m1 * and following the * Getting Started - Install.|https://hyperledger-fabric.readthedocs.io/en/latest/getting_started.html *   !Screenshot 2022-09-22 at 11.34.15 PM.png|width=376,height=173,thumbnail!  Where: {code:java}  peer lifecycle chaincode install basic.tar.gz {code} Results in:  *!Screenshot 2022-09-22 at 11.31.56 PM.png|width=400,height=28,thumbnail!*  ></body> </Action>
