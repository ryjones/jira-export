<Issue id="36877" key="FAB-13734" number="13734" project="10002" reporter="tijohnson" assignee="tijohnson" creator="tijohnson" type="10002" summary="Add Error Handling to Build Script" priority="3" resolution="10000" status="6" created="2019-01-17 15:17:28.0" updated="2019-02-09 17:55:24.0" resolutiondate="2019-02-09 17:55:24.0" votes="0" watches="3" workflowId="48442"> <description><! CDATA The 'bootstrap' script (iscripts/bootstrap.sh) s called from numerous builds and it is lacking proper error handling. Proper error handling is necessary for any batch script in a Jenkins build.  This script is called two ways: * interactively by developers and from script during a Jenkins build. They would sometimes want to specify command line flags and due to the (incorrect) way they were being called the flags have to be specified after the command line arguments. * From a batch script in a Jenkins build  The author used some 'add-hoc' parsing & 'getops' to parse the flags, rather than use 'getopt' (which does support flags anywhere on the command line).   When I originally fixed FAB-12211 'Add Error Handling to build script' I used 'getopt' to parse command line flags/options, which was problematic because of an old version of 'getopt' being used by OS X. My second try used 'getops' but did not support the flags after the command line options. All were then reverted.  How I want to fix (in order preference): # Use original version of my fix. People who are running OSX need to update to recent version of 'getopt'. 'getopt' is the superior command line parser. It supports POSIX standards for command line parsing. # Use 'getopts' without the add-hoc parsing to allow the flags anywhere on the command line. This would require users to always have flags before arguments. # Use 'getopts' with add-hoc parsing to allow the flags anywhere on the command line. This would not support white-space in arguments.  I have already implemented #1 & #3  I dislike #3 because it add-hoc and against standard process for bash and Linux. And you can bet that someone will use it as an example in the future.      ></description> </Issue>
