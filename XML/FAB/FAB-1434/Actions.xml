<Action id="20169" issue="13843" author="latitiah" type="comment" created="2016-12-20 18:39:53.0" updateauthor="latitiah" updated="2016-12-20 19:13:03.0"> <body><! CDATA The following were assessed to be the BDD testable consensus/orderer stories that have been completed with the corresponding developer/owner (and questions as applicable):  {quote} Luis: - FAB-1253: Send transactions to orderer service larger than 1M (kafka, solo, sbft, ...) -- What size is considered too larger? - FAB-1232: Send a "too larger" transaction to orderer: (Recv: REQUEST_ENTITY_TOO_LARGE- 413 error) - FAB-890: Kafka: produce and consume a specific topic (Be sure that different topics work using the same orderer service) - FAB-890: Kafka: multiple kafka brokers - FAB-890: Kafka: all kafka brokers go down - what happens? -- What is "replication factor 3"? - FAB-890: Kakfa: Use the partition leader when using a broker connection - FAB-839: Create per-session buffered channel for broadcast responses - FAB-708: TLS gRPC certificate interaction - FAB-507: Each solo orderer client should have a separate flow control window  Kostas: - FAB-819: Multi-chain support in ordering service - FAB-998: Config envelope for new chain creation turns into genesis block - FAB-995: ChainPartition and DataHolder types -- Not sure what these are exactly... - FAB-621: Hash-chain for Kafka orderer -- 2 kafka partitions per chain??? - FAB-701: Authenication of connections between shims and kafka cluster - FAB-469: Multiple shims operating in parallel - FAB-467: Orderer config combinations - FAB-468: Orderer changing maxwindow size and queuesize - FAB-526: An orderer is able to reconnect, catch up as necessary and continue as if connection was not lost - FAB-1161: Creating genesis block when setting up broadcaster -- Be sure to verify the format of the block - FAB-892: Peer authentication when connecting to an orderer - FAB-821: Sizing a broadcaster batchchain -- What may cause this to change and not be a set value for a specific network? - FAB-899: Orderer Block timeout - FAB-1092, FAB-1013: Valid configuration envelope created by the orderer which then creates a genesis block - FAB-817: Add ACL support on the orderer service for channels  Tuan: - FAB-1094: Utilities to build configuration envelope for the genesis block - FAB-666: Orderer node should be able to retrieve the genesis block and join the network of nodes - FAB-666: All orderer nodes should recieve the genesis block - FAB-666: When an orderer is bootstrapped, the following should be performed: read genesis block, parse and save policies, orderer whitelist, and peer org certificates to correct locations -- how to you specify what is the correct location? Is this dynamic?  Jason: - FAB-918: Orderer configs should be processed correctly -- Namely, ORDERER_KAFKA_RETRY_PERIOD - Anything else? - FAB-761: gRPC API for broadcast and deliver with the orderer - FAB-498: Pluggable pieces for the orderer -- What are all of the pluggable pieces? - FAB-498: Updating the Policy via a policy manager -- What are some of the different policies? How can we validate if it is a valid policy? - FAB-498: Create signature validation DSL for use by filtering framework and later more broad use -- What is validation DSL? - FAB-498: Orderer configuration broadcast filter -- Not sure what this is exactly...  Murali: - FAB-1192: Be sure that there are multiple blocks and multiple batches (Change block sizes to allow)  Simon: - FAB-1095: atomic broadcast client needs to receive delivered batches from more than one orderer peer -- Is this still true? I thought there was communication between 1 orderer node and a peer. - FAB-967: View timer restarts after recieving a quorum of view change messages -- "Quorum" equates to what exactly?Is this policy driven? "#peers - 1"? - FAB-473: SBFT: Interaction with an atomic broadcast client and SBFT orderer - FAB-478/FAB-472/FAB-604: SBFT: Exchange Peer replica state and state transfer on new connection -- rotate disconnects and reconnects so that all correct nodes have gaps in their ledgers.  state transfer finally manages to sync everybody to the latest batch. -- Any other ways to get to this state? - FAB-603: Limit the number of messages per replica -- how is this done? Is this configurable?  - FAB-1139: Peer exit with panic when invoking the chaincode (Network unable to find stable certificate) - we do not want to see this error in log - FAB-1203: Non-vpN peer name {quote}   ></body> </Action>
<Action id="20184" issue="13843" author="latitiah" type="comment" body="Search for this issue included the &quot;fabric-consensus&quot; and &quot;fabric-orderer&quot; components and &quot;orderer&quot; and &quot;consensus&quot; labels." created="2016-12-22 15:57:23.0" updateauthor="latitiah" updated="2016-12-22 15:57:23.0"/>
