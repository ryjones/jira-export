<Action id="49462" issue="32437" author="c0rwin" type="comment" created="2018-08-27 22:20:05.0" updateauthor="c0rwin" updated="2018-08-27 22:20:05.0"> <body><! CDATA I think that instead of adding an API to the chaincode shim, we need to add a functionality to the handler, which will check the client identity and results in error (of course if we would like to preserve current behavior we can have collection config option to state whenever to allow any clients or follow collection policy).  Adding such functionality to the chaincode shim API most likely will result in everyone who writes chaincode to repeat same piece of code to restrict undesired clients over and over again.  ></body> </Action>
<Action id="52899" issue="32437" author="denyeart" type="comment" created="2018-11-01 14:49:59.0" updateauthor="denyeart" updated="2019-01-17 15:15:24.0"> <body><! CDATA I agree with  ~C0rWin .  It makes sense for peer to automatically handle the private data access control based on client identity membership in collection, and add a collection config option memberOnlyRead that specifies whether peer enforces the check.   ~Senthil1   ~manish-sethi  Do you see any drawbacks with that approach?  ></body> </Action>
<Action id="52904" issue="32437" author="senthil1" type="comment" created="2018-11-01 15:59:17.0" updateauthor="senthil1" updated="2018-11-01 15:59:17.0"> <body><! CDATA Looks good to me Dave. This is same as the implicit ACL approach mentioned in the above description.   Most solutions would choose the "restrict the access" option by default. Only a few might wants to show the private data to non-members (requirement might change dynamically as well).   I think, client can toggle access method by issuing an collection-upgrade-TX and change between full access & restricted access as needed.   Only minor drawback would be that even if a particular pvt data needs to be shown to a non-member, we need to enable the full access and anyone can read during that time.   ></body> </Action>
