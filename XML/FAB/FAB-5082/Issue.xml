<Issue id="18790" key="FAB-5082" number="5082" project="10002" reporter="denyeart" assignee="ellaki" creator="denyeart" type="10000" summary="Side DB - Chaincode policy to map private data collections to authorized organizations" priority="3" resolution="10000" status="6" created="2017-06-29 11:44:46.0" updated="2018-07-20 19:09:12.0" duedate="2019-09-10 00:00:00.0" resolutiondate="2018-05-03 13:48:22.0" votes="0" watches="4" workflowId="39331"> <description><! CDATA This item include a few work items to allow for collection definition within a chaincode's instantiation/deployment. At the first stage this is to be performed by doing changed to LSCC deploy arguments (P2). At later stage, when Resources configuration tree will be available, collection definition will be done as specified here FAB-6042. There will be a follow-up JIRA item to describe the way collection objects would be used in the implementation of PolicyStore/Parser in this case.     1. Define collection interface as abstraction to represent different collection organisation * Should include initialisation function that takes as input potentially secretly distributed parameters * Should be generic enough to cover any unlinkability property we want to add   2. Define collection config object - done here  https://gerrit.hyperledger.org/r/#/c/13231/     3. Enhance LSCC deploy to take as argument a set of collection config objects    4. Simplest implementation of collection object defined here  https://gerrit.hyperledger.org/r/#/c/12757/  and explained in pages 11/12 of this doc  https://docs.google.com/document/d/1xXl6KVeHusoQd7RsBmv_WTmVR6RrMmFRiyChVSB9DPA/edit?usp=sharing  to include * Collection name is the same across all collection state updates * Collection access policies and access are publicly visible and validatable   5. Update ValidateLSCCInvocation for the two cases:      - deploy validation to check correctness of the collections created      - upgrade validation to reject changes to cc collections   6. Implement PoicyStore/PolicyParser with simple lookups to stateDB, to retrieve collections’ policies         Flows for chaincode instantiation using the endorsement model:  !image-2017-10-03-13-55-33-325.png!     Chaincode upgrade flow:  !image-2017-10-03-13-56-35-939.png!     Endorser flow for chaincode that writes to a collection:  !image-2017-10-03-13-56-55-498.png!  ></description> </Issue>
