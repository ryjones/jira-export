<Action id="69858" issue="45742" author="JIRAUSER20452" type="comment" created="2020-08-04 16:43:19.0" updateauthor="JIRAUSER20452" updated="2020-08-04 17:06:45.0"> <body><! CDATA  ~jrasm91 's response on the Rocket Chat:  https://chat.hyperledger.org/channel/fabric-chaincode-dev?msg=o3io7tQoWtmGJfopN   {quote}_If you are using the contract-api (  https://www.npmjs.com/package/fabric-contract-api  ) the name you pass to `super("MyContract")` can be used as a prefix._ {code:sh} peer chaincode invoke -C $CHANNEL_NAME -n $CHAINCODE_NAME -c '{ "Args":  "MyContract:methodName", "{}"  }'  peer chaincode invoke -C $CHANNEL_NAME -n $CHAINCODE_NAME -c '{ "Args":  "MyOtherContract:methodName", "{}"  }' {code} {quote}    ></body> </Action>
<Action id="69941" issue="45742" author="lesleyannj" type="comment" created="2020-08-12 15:49:55.0" updateauthor="lesleyannj" updated="2020-08-12 15:49:55.0"> <body><! CDATA  ~pandrejko  following up with your request for how to specify which contract to invoke when chaincode contains multiple contracts using the Node SDK.  Its just a call to network.getContract()  - see docs  https://hyperledger.github.io/fabric-sdk-node/release-2.2/module-fabric-network.Network.html#getContract  The (optional) name parameter is the contract name where the chaincode contains multiple contracts.  e.g.  const contract = await network.getContract('papercontract');  Here is some relevant doc example : https://hyperledger-fabric.readthedocs.io/en/latest/developapps/application.html#construct-request   ></body> </Action>
<Action id="69947" issue="45742" author="pandrejko" type="comment" created="2020-08-13 17:04:04.0" updateauthor="pandrejko" updated="2020-08-13 18:43:51.0"> <body><! CDATA Places to update:  Peer chaincode invoke example:  https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchaincode.html#peer-chaincode-invoke-example|https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerchaincode.html#peer-chaincode-invoke      Writing your first application tutorial (add a tip when pkg includes > 1 smart contract):  https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html#third-the-sample-application-prepares-a-connection-to-the-channel-and-smart-contract     Content is already addressed in: Developing Applications construct request (add a tip when pkg includes > 1 smart contract):  https://hyperledger-fabric.readthedocs.io/en/latest/developapps/application.html#construct-request      ></body> </Action>
<Action id="69950" issue="45742" author="pandrejko" type="comment" body="PR: https://github.com/hyperledger/fabric/pull/1722" created="2020-08-13 18:51:39.0" updateauthor="pandrejko" updated="2020-08-13 18:51:39.0"/>
