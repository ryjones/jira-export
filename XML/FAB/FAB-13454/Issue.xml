<Issue id="36430" key="FAB-13454" number="13454" project="10002" reporter="emmanuel.kiametis" assignee="ales" creator="emmanuel.kiametis" type="10004" summary=" Possible Idempotency Issue while sending many transactions with same TxId - v1.3" priority="2" resolution="10204" status="6" created="2018-12-28 20:13:56.0" updated="2019-01-03 13:03:08.0" resolutiondate="2019-01-03 02:21:43.0" votes="0" watches="3" workflowId="47963"> <description><! CDATA   We found a possible Issue in Hyperledger Fabric 1.3.0 about Idempotency while sending many transactions with same TxId.   *SUMMARY*   Hyperledger Fabric does not guarantee the idempotency of the TransactionID, before it has been commited to the Ledger.   *DATABASE*   - CouchDB   *SCENARIO*   In Hyperledger Fabric, version 1.3, using a version of the "*fabric-client:1.3.0*" *SDK*, I'm generating a new transaction with "*newTransactionID()*" method of the "*Client*" class.   Based on TransactionID returned by the called method, I am performing an "*invoke*" on "*chaincode*", where the readset and writeset are dynamically generated, meaning there will be no version conflict. Because of that, transactions do not need to be serialized.      ></description> </Issue>
