<Issue id="45685" key="FAB-18089" number="18089" project="10002" reporter="denyeart" creator="denyeart" type="10001" summary="Start orderers with Raft WAL reset" priority="3" status="10100" created="2020-07-23 19:33:03.0" updated="2021-04-20 19:43:47.0" votes="0" watches="3" workflowId="59593" archived="N"> <description><! CDATA In some scenarios the Raft WAL data for the ordering service may need to be re-initialized: * The WAL data may have become corrupt. * In a disaster scenario you may need to restore ordering service from an existing block store that gets copied into ordering service node(s).  In order to re-initialize the Raft WAL, we need the last block in each channel to signal to the orderers that this is a WAL reset block. This could be implemented in various ways:  * We could append a new dummy block to every chain, which contains an empty meaningless transaction, and zero out the metadata in this block (CURRENT PREFERRED APPROACH) * We could open the blockstore, and modify the last block in the chain to zero out the block metadata.  This would invalidate the block signature, so we would need to have access to the orderer's certificate/key to make this change. * We could extend the metadata encoding for the field to allow additional unsigned data that the orderer would prefer, if it were present. Or, we could add a new metadata slot in the metadata slice, which would be for such overrides.    In any case, when the orderer starts up, it will find no consensus metadata and conclude that we are on the migration path of switching consensus types, and will initialize the WAL.  All OSNs will need to be at exactly the same block height for this to work. In some disaster recover scenarios, this may imply copying block stores from one orderer to the others, or even copying the block stores from a trusted peer to all the orderers. In the latter case the blocks will have transaction validation statuses already written, and while not expected, this is not technically an issue since orderers will ignore the validation status metadata, and peers will also ignore it as they always perform full validation and overwrite the validation status metadata if it happens to already be there. Upon startup, orderer will automatically create its required ledger index directory from the ledger block store, if it is missing.     ></description> </Issue>
