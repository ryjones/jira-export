<Issue id="37595" key="FAB-14141" number="14141" project="10002" reporter="suppandi" assignee="suppandi" creator="suppandi" type="10004" summary="Docker namespace confusion between base and fabric" priority="3" resolution="10000" status="6" created="2019-02-11 18:51:34.0" updated="2019-03-09 12:07:18.0" resolutiondate="2019-03-09 12:07:18.0" votes="0" watches="1" workflowId="49209"> <description><! CDATA By default the base and fabric namespaces are `hyperledger`. When you use two different values, it causes a lot of confusion. eg: the following images are built with  *DOCKER_NS=fabric-ns* and *BASE_DOCKER_NS=base-ns*     {{base-ns/fabric-peer:latest}}  {{fabric-ns/}}{{fabric-peer:2.0.0}}  {{fabric-ns/}}{{fabric-peer:amd64-2.0.0-snapshot-extra}}     Similar confusion gets across into baseos ... eg from sampleconfig/core.yaml, under the chaincode section.     {{builder: $(DOCKER_NS)/fabric-ccenv:$(PROJECT_VERSION)}}  {{golang:}} {{  # golang will never need more than baseos}} {{  runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(PROJECT_VERSION)}}{{ }}  {{car:}} {{  # car may need more facilities (JVM, etc) in the future as the catalog}} {{  # of platforms are expanded. For now, we can just use baseos}} {{  runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(PROJECT_VERSION)}}{{ }}  {{java:}} {{  # This is an image based on java:openjdk-8 with addition compiler}} {{  # tools added for java shim layer packaging.}} {{  # This image is packed with shim layer libraries that are necessary}} {{  # for Java chaincode runtime.}} {{  runtime: $(DOCKER_NS)/fabric-javaenv:latest}}     You can see the mixing of DOCKER_NS, BASE_DOCKER_NS, PROJECT_VERSION, latest.     I propose a standard naming convention - use DOCKER_NS for all images built using the fabric project and BASE_DOCKER_NS for all images built using the 3rd party fabric-baseimage project.  ></description> </Issue>
