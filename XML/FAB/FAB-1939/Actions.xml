<Action id="20628" issue="14441" author="manish-sethi" type="comment" body="This panic could have happened if you invoke Commit() function on a ledger instance concurrently. You can invoke Commit() function of different ledger instances in parallel but not on of a single instance. Can you please confirm if you see this error when you Commit to different ledgers in parallel but still Commit to a particular ledger serially?" created="2017-01-31 12:36:30.0" updateauthor="manish-sethi" updated="2017-01-31 12:37:40.0"/>
<Action id="20730" issue="14441" author="nishi" type="comment" created="2017-02-07 18:21:32.0" updateauthor="nishi" updated="2017-02-07 18:23:08.0"> <body><! CDATA I am locking a single instance of ledger to commit multiple txs on the same ledger in parallel. Test worked fine if I have only one batch being written from all keys on a single client, if the keys make up more than one block that's when I run into a crash.  ></body> </Action>
<Action id="20733" issue="14441" author="nishi" type="comment" created="2017-02-07 20:14:41.0" updateauthor="nishi" updated="2017-02-07 20:14:41.0"> <body><! CDATA This is the function where I build a single block and commit  func buildBatchAndCommitTransactions(ledgerNum int, batchSize int) { 	var globalCommitLock sync.Mutex 	chainSimulationResults :=     byte{} //works for a single block hence limiting tx's to 1 block 	for qIndex := 0; qIndex < batchSize; qIndex++ { 		chainSimulationResults = append(chainSimulationResults, OpenedChannels ledgerNum .myBatchQ qIndex ) 	} 	//construct a block from all transactions 	block1 := OpenedChannels ledgerNum .BG.NextBlock(chainSimulationResults, false) 	curChannel := OpenedChannels ledgerNum  	if curChannel.myLedger == nil { 		fmt.Println("Curchannel is NIL ******") 	} 	//commit transactions on channel 	globalCommitLock.Lock() 	err := curChannel.myLedger.Commit(block1) 	if err != nil { 		fmt.Println("Committed Block") 		panic(fmt.Errorf("Error Committing Block to Ledger: %s\n", err)) 	} 	globalCommitLock.Unlock()  	bcInfo, err := curChannel.myLedger.GetBlockchainInfo() 	if err != nil { 		fmt.Println("Failed to get Block Chain") 		panic(fmt.Errorf("Failed to get Block ChainInfo: %s\n", err)) 	} 	fmt.Printf("value in height %v:", bcInfo) }   ></body> </Action>
<Action id="21955" issue="14441" author="denyeart" type="comment" body="I believe this was a problem with test client.  Please reopen if you think otherwise." created="2017-04-07 18:23:18.0" updateauthor="denyeart" updated="2017-04-07 18:23:18.0"/>
