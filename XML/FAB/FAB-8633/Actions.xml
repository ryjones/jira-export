<Action id="41122" issue="28182" author="rameshthoomu" type="comment" created="2018-03-01 23:56:40.0" updateauthor="rameshthoomu" updated="2018-03-01 23:56:40.0"> <body><! CDATA {code:java} ##### 2018-03-01 18:50:32 Waiting for the 'setup' container to finish registering identities, creating the genesis block and other artifacts .... ##### 2018-03-01 18:50:33 Waiting for the docker 'run' container to start ............... ##### 2018-03-01 23:50:54 The docker 'run' container has started ##### 2018-03-01 23:50:54 Creating channel 'mychannel' on orderer1-org0 ... ##### 2018-03-01 23:50:54 Peer peer1-org1 is attempting to join channel 'mychannel' (attempt #1) ... ##### 2018-03-01 23:50:54 Peer peer1-org1 successfully joined channel 'mychannel' ##### 2018-03-01 23:50:54 Peer peer2-org1 is attempting to join channel 'mychannel' (attempt #1) ... ##### 2018-03-01 23:50:55 Peer peer2-org1 successfully joined channel 'mychannel' ##### 2018-03-01 23:50:55 Peer peer1-org2 is attempting to join channel 'mychannel' (attempt #1) ... ##### 2018-03-01 23:50:55 Peer peer1-org2 successfully joined channel 'mychannel' ##### 2018-03-01 23:50:55 Peer peer2-org2 is attempting to join channel 'mychannel' (attempt #1) ... ##### 2018-03-01 23:50:55 Peer peer2-org2 successfully joined channel 'mychannel' ##### 2018-03-01 23:50:55 Updating anchor peers for peer1-org1 ... ##### 2018-03-01 23:50:55 Updating anchor peers for peer1-org2 ... ##### 2018-03-01 23:50:56 Installing chaincode on peer1-org1 ... ##### 2018-03-01 23:50:59 Installing chaincode on peer1-org2 ... ##### 2018-03-01 23:51:02 Instantiating chaincode on peer1-org2 ... ##### 2018-03-01 23:51:15 Querying chaincode in the channel 'mychannel' on the peer 'peer1-org1' ... ##### 2018-03-01 23:51:30 Query of channel 'mychannel' on peer 'peer1-org1' was successful ##### 2018-03-01 23:51:30 Sending invoke transaction to peer1-org1 ... ##### 2018-03-01 23:51:31 Installing chaincode on peer2-org2 ... ##### 2018-03-01 23:51:44 Querying chaincode in the channel 'mychannel' on the peer 'peer2-org2' ... ##### 2018-03-01 23:51:59 Query of channel 'mychannel' on peer 'peer2-org2' was successful ##### 2018-03-01 23:51:59 Revoking the user 'user-org1' of the organization 'org1' with Fabric CA Client home directory set to /data/orgs/org1/admin and generating CRL ... ##### 2018-03-01 23:51:59 Fetching the configuration block of the channel 'mychannel' ##### 2018-03-01 23:51:59 Creating config update payload with the generated CRL for the organization 'org1' ##### 2018-03-01 23:51:59 Sleeping 5 seconds for configtxlator to start... ##### 2018-03-01 23:52:04 Updating the configuration block of the channel 'mychannel' ##### 2018-03-01 23:52:05 Querying the chaincode in the channel 'mychannel' on the peer 'peer1-org1' as revoked user 'user-org1' ... 2018-03-01 23:52:20.203 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-03-01 23:52:20.203 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-03-01 23:52:20.203 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 003 Using default escc 2018-03-01 23:52:20.203 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default vscc 2018-03-01 23:52:20.203 UTC  chaincodeCmd  getChaincodeSpec -> DEBU 005 java chaincode disabled 2018-03-01 23:52:20.204 UTC  msp/identity  Sign -> DEBU 006 Sign: plaintext: 0AF9080A6608031A0B08B4A4E2D40510...6D7963631A0A0A0571756572790A0161  2018-03-01 23:52:20.204 UTC  msp/identity  Sign -> DEBU 007 Sign: digest: D5D9F171A19BC58A7C5327CCD2227D841DE213C467DB07A18F75BC90AAA0A13E  Error: Error endorsing query: rpc error: code = Unknown desc = access denied: channel  mychannel  creator org  org1MSP  - <nil> Usage:   peer chaincode query  flags   Flags:   -C, --channelID string   The channel on which this command should be executed   -c, --ctor string        Constructor message for the chaincode in JSON format (default "{}")   -x, --hex                If true, output the query value byte array in hexadecimal. Incompatible with --raw   -n, --name string        Name of the chaincode   -r, --raw                If true, output the query value as raw bytes, otherwise format as a printable string   -t, --tid string         Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64  Global Flags:       --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint       --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint       --clientauth                          Use mutual TLS when communicating with the orderer endpoint       --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint       --logging-level string                Default logging level and overrides, see core.yaml for full syntax   -o, --orderer string                      Ordering service endpoint       --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.       --tls                                 Use TLS when communicating with the orderer endpoint       --transient string                    Transient map of arguments in JSON encoding   -v, --version                             Display current version of fabric peer server  ##### 2018-03-01 23:52:20 Tests did not complete successfully; see data/logs/run.log for more details (hyp) rameshs-mbp:fabric-ca thoomu@us.ibm.com$ docker images | grep 1.1.0-rc1 hyperledger/fabric-ca-tools                                                                x86_64-1.1.0-rc1                      d427e25d50ec        3 hours ago          1.55GB hyperledger/fabric-ca-peer                                                                 x86_64-1.1.0-rc1                      9a5a4eea6cb0        3 hours ago          270MB hyperledger/fabric-ca-orderer                                                              x86_64-1.1.0-rc1                      8862de47d06c        3 hours ago          264MB hyperledger/fabric-ca                                                                      x86_64-1.1.0-rc1                      8a6c8c2e2ebf        3 hours ago          283MB hyperledger/fabric-tools                                                                   x86_64-1.1.0-rc1                      006c689ec08e        4 hours ago          1.46GB hyperledger/fabric-orderer                                                                 x86_64-1.1.0-rc1                      10afc128d402        4 hours ago          180MB hyperledger/fabric-peer                                                                    x86_64-1.1.0-rc1                      6b44b1d021cb        4 hours ago          187MB hyperledger/fabric-javaenv                                                                 x86_64-1.1.0-rc1                      ea263125afb1        4 hours ago          1.52GB hyperledger/fabric-ccenv                                                                   x86_64-1.1.0-rc1                      65c951b9681f        4 hours ago          1.39GB{code}  ></body> </Action>
<Action id="41126" issue="28182" author="denyeart" type="comment" body=" ~aambati  Could you take a look?" created="2018-03-02 02:13:01.0" updateauthor="denyeart" updated="2018-03-02 02:13:01.0"/>
<Action id="41128" issue="28182" author="smithbk" type="comment" body="https://gerrit.hyperledger.org/r/18673" created="2018-03-02 04:50:52.0" updateauthor="smithbk" updated="2018-03-02 04:50:52.0"/>
<Action id="41146" issue="28182" author="denyeart" type="comment" body="fabric-samples has been retagged with v1.1.0-rc1 to include this fix." created="2018-03-02 14:27:47.0" updateauthor="denyeart" updated="2018-03-02 14:27:47.0"/>
<Action id="41149" issue="28182" author="rameshthoomu" type="comment" body="tested this test case after retag the v1.1.0-rc1 and it&apos;s working as expected. Thanks  ~smithbk  for the quick fix." created="2018-03-02 14:52:04.0" updateauthor="rameshthoomu" updated="2018-03-02 14:52:04.0"/>
