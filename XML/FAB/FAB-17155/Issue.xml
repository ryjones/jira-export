<Issue id="43469" key="FAB-17155" number="17155" project="10002" reporter="sykesm" assignee="wlahti" creator="sykesm" type="10004" summary="The &quot;fabric-run&quot; temporary directory for external chaincode is not cleaned up" priority="3" resolution="10000" status="6" created="2019-11-26 18:05:22.0" updated="2020-07-01 10:30:37.0" resolutiondate="2020-05-13 13:49:28.0" votes="0" watches="2" workflowId="56583"> <description><! CDATA My tmpfs ran out of space today. While looking through the temp directory, I noticed several directories that look like this: {code} drwx------ 2 sykesm sykesm 4096 Nov 26 17:14 fabric-run603673869 drwx------ 2 sykesm sykesm 4096 Nov 26 17:41 fabric-run624417420 drwx------ 2 sykesm sykesm 4096 Nov 26 17:34 fabric-run652706040 drwx------ 2 sykesm sykesm 4096 Nov 26 17:18 fabric-run654902945 drwx------ 2 sykesm sykesm 4096 Nov 26 16:57 fabric-run666202755 drwx------ 2 sykesm sykesm 4096 Nov 26 17:00 fabric-run680736876 drwx------ 2 sykesm sykesm 4096 Nov 26 17:33 fabric-run682985070 drwx------ 2 sykesm sykesm 4096 Nov 26 17:17 fabric-run700999953 drwx------ 2 sykesm sykesm 4096 Nov 26 17:41 fabric-run708670214 drwx------ 2 sykesm sykesm 4096 Nov 26 17:24 fabric-run709521898 drwx------ 2 sykesm sykesm 4096 Nov 26 17:27 fabric-run709732153 drwx------ 2 sykesm sykesm 4096 Nov 26 17:36 fabric-run719357960 drwx------ 2 sykesm sykesm 4096 Nov 26 17:17 fabric-run766972010 drwx------ 2 sykesm sykesm 4096 Nov 26 17:17 fabric-run783044266 drwx------ 2 sykesm sykesm 4096 Nov 26 17:17 fabric-run784857690 drwx------ 2 sykesm sykesm 4096 Nov 26 17:17 fabric-run787047340 drwx------ 2 sykesm sykesm 4096 Nov 26 17:18 fabric-run796470727 drwx------ 2 sykesm sykesm 4096 Nov 26 17:22 fabric-run805138893 drwx------ 2 sykesm sykesm 4096 Nov 26 17:47 fabric-run807247438 drwx------ 2 sykesm sykesm 4096 Nov 26 17:37 fabric-run809467179 drwx------ 2 sykesm sykesm 4096 Nov 26 17:52 fabric-run827966850 {code}  The code that creates the directory looks like this: {code} // Run starts the `run` script and returns a Session that can be used to // signal it and wait for termination. func (b *Builder) Run(ccid, bldDir string, peerConnection *ccintf.PeerConnection) (*Session, error) { 	launchDir, err := ioutil.TempDir("", "fabric-run") 	if err != nil { 		return nil, errors.WithMessage(err, "could not create temp run dir") 	}  	rc := newRunConfig(ccid, peerConnection) 	marshaledRC, err := json.Marshal(rc) 	if err != nil { 		return nil, errors.WithMessage(err, "could not marshal run config") 	}  	if err := ioutil.WriteFile(filepath.Join(launchDir, "chaincode.json"), marshaledRC, 0600); err != nil { 		return nil, errors.WithMessage(err, "could not write root cert") 	}  	run := filepath.Join(b.Location, "bin", "run") 	cmd := b.NewCommand(run, bldDir, launchDir) 	sess, err := Start(b.Logger, cmd) 	if err != nil { 		os.RemoveAll(launchDir) 		return nil, errors.Wrapf(err, "builder '%s' run failed to start", b.Name) 	}  	go func() { 		defer os.RemoveAll(launchDir) 		sess.Wait() 	}()  	return sess, nil } {code}  We should investigate what we can do to get these temporary directories cleaned up. There's a defer that waits for the run session to complete before cleanup but my guess is that peer is being terminated while the chaincode is running so the deferred function does not run.  If this theory is correct, we'll need to find a way to more cleanly terminate chaincode when the peer is signaled so we can clean things up.  ></description> </Issue>
