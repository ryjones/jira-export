<Issue id="46637" key="FAB-18438" number="18438" project="10002" reporter="jyellick" creator="jyellick" type="10001" summary="Allow config override transactions to recover from bad channel config" priority="3" status="10100" created="2021-03-12 00:38:37.0" updated="2021-04-20 19:45:55.0" votes="0" watches="2" workflowId="60583" archived="N"> <description><! CDATA One problem which has generally plagued management of Fabric networks is coping with the situation when a user inadvertently loses some critical key material, lets certificates expire, misconfigures a policy, or otherwise submits a valid configuration update which puts the channel configuration into an irrecoverable state.  One relatively simple solution for this problem is to introduce the notion of a config override transaction.  A config override transaction would not adhere to the typical config update validation but instead would follow a special but simple two-part rule.  1) All config override transactions are invalid by default. 2) If a node has added the hash of a config override transaction to its local configuration, then it is valid and the new config is applied.  This effectively is a way to trigger (through manipulation of local configuration files) a hard fork in the chain without requiring a custom software update be rolled out.  For those nodes which have the config override in their configuration, the update applies, and they begin transacting on a new (valid) configuration.  For those which do not have the config override in their configuration, they reject the transaction and stuck on the old fork (presumably without an ordering service, or if ordering is still intact soon, their chain will halt when the orderers commit the new config.  Thanks to the new snapshoting features in the peer, it would no longer be necessary to forever carry record of the config override transactions around, but it should be relatively simple for a network operator to curate such a list of approved config overrides that have committed in the past for new members who wish to reprocess those blocks.  ></description> </Issue>
