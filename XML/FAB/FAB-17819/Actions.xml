<Action id="69111" issue="44970" author="yacovm" type="comment" created="2020-04-29 10:34:09.0" updateauthor="yacovm" updated="2020-04-29 10:34:09.0"> <body><! CDATA {quote}Similarly, we should look at the error message for the following scenarios: len(peersOfChannel) == 0 len(chanMembership) == 0 {quote} It's == 1, because you always have your own peer right?  In any case - it's not that easy to return an error about not knowing any peer outside of yourself, because you might use service discovery and the peer that you query for discovery can satisfy the endorsement policy on its own.  We have logs in gossip that print membership changes, so you should be able to look at the logs and know if you know peers or not.  Discovery is not there to teach the user how to configure the network, because it's a service that is used in a non interactive manner (background task in the SDK, and not a synchronous one).    {quote} If you use the service discovery endorsement query, but chaincode is only installed on one peer in the network when endorsement policy requires that two orgs endorse, you'll get the following error message: {code:java}  discovery  chaincodeQuery -> ERRO 0b2 Failed constructing descriptor for chaincode chaincodes:<name:"papercontract" > ,: cannot satisfy any principal combination {code} Users don't know what a 'principal' is and therefore they don't know how to troubleshoot this error message. {quote}  The change was much bigger than i estimated:  https://github.com/hyperledger/fabric/pull/1193  . I had to preserve the current semantics of the service and wanted to make as less flow control changes as possible.         ></body> </Action>
