<Action id="22334" issue="15725" author="elli-androulaki" type="comment" created="2017-04-13 12:48:03.0" updateauthor="elli-androulaki" updated="2017-04-13 12:48:03.0"> <body><! CDATA So, you mean that there has to be a way to configure peers to accept gossip connections only by peers that satisfy a policy.  But is this need in the context of a channel, a chaincode, or in general gossip messages?   Separation of clients and peers is currently possible by having clients be represented by a different MSP, and configuring the peers to accept connections only by the MSP that represents a peer.  In the (near) future, there will be another way of allowing separation between the too at the gossip level, i.e., by having both under the same organization, but with client certificates being signed by a different intermediate CA (or belong to a different OU) than peers' certificates, and specifying in the policy to accept connections only by certificates with a specific certification path or OU. This does not accommodate concealing the MSP an identity is a member of though.    ></body> </Action>
<Action id="22335" issue="15725" author="yacovm" type="comment" created="2017-04-13 12:49:16.0" updateauthor="yacovm" updated="2017-04-13 12:49:16.0"> <body><! CDATA So, as I said in the rocket chat channel - gossip uses the MSP layer in order to verify certificates, so:  {quote}There needs to be a mechanism to validate that an entity is allowed to join the gossip network{quote} such a mechanism exists, The only thing that needs to be done, is to make it so that client certs, aren't considered as peer certs.    ></body> </Action>
<Action id="22346" issue="15725" author="gbolo" type="comment" body="Would it be a good idea to encode some of this information into the certificate itself? currently, only the CA knows of user type, affiliation, and attributes (users table) and the peer&apos;s don&apos;t talk to the CA." created="2017-04-13 14:45:22.0" updateauthor="gbolo" updated="2017-04-13 14:45:22.0"/>
<Action id="67005" issue="15725" author="sykesm" type="comment" body="Stale" created="2020-01-22 19:03:37.0" updateauthor="sykesm" updated="2020-01-22 19:03:37.0"/>
