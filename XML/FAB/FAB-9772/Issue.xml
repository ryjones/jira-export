<Issue id="29787" key="FAB-9772" number="9772" project="10002" reporter="sykesm" assignee="sykesm" creator="sykesm" type="10003" summary="Consider moving the evaluation of the instantiation policy out of the handler and into the launcher" priority="3" resolution="10001" status="6" created="2018-04-27 20:52:57.0" updated="2018-09-07 17:50:30.0" resolutiondate="2018-09-07 17:50:30.0" votes="0" watches="1" workflowId="35725"> <description><! CDATA One of the many things {{handleModState}} does is instantiation policy evaluation. Given the refactors, it may make more sense to move that function out. {code:java} var version string if !isscc { //if its a user chaincode, get the details cd, err := h.lifecycle.GetChaincodeDefinition(ctxt, msg.Txid, txContext.signedProp, txContext.proposal, calledCcIns.ChainID, calledCcIns.ChaincodeName) if err != nil { errHandler(  byte(err.Error()), " %s Failed to get chaincode data (%s) for invoked chaincode. Sending %s", shorttxid(msg.Txid), err, pb.ChaincodeMessage_ERROR) return }  version = cd.CCVersion()  err = ccprovider.CheckInstantiationPolicy(calledCcIns.ChaincodeName, version, cd.(*ccprovider.ChaincodeData)) if err != nil { errHandler(  byte(err.Error()), " %s CheckInstantiationPolicy, error %s. Sending %s", shorttxid(msg.Txid), err, pb.ChaincodeMessage_ERROR) return } } else { //this is a system cc, just call it directly version = util.GetSysCCVersion() }  cccid := ccprovider.NewCCContext(calledCcIns.ChainID, calledCcIns.ChaincodeName, version, msg.Txid, false, txContext.signedProp, txContext.proposal)  // Launch the new chaincode if not already running chaincodeLogger.Debugf(" %s  launching chaincode %s on channel %s", shorttxid(msg.Txid), calledCcIns.ChaincodeName, calledCcIns.ChainID)  cciSpec := &pb.ChaincodeInvocationSpec{ChaincodeSpec: chaincodeSpec} chaincodeInput := cciSpec.GetChaincodeSpec().Input  launchErr := h.handlerSupport.Launch(ctxt, cccid, cciSpec) {code} Need to study the paths to see if it's appropriate to do this...  ></description> </Issue>
