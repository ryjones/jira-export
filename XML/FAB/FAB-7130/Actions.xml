<Action id="35594" issue="24509" author="jyellick" type="comment" body="The description indicates that it would be &apos;rare&apos; that anyone would have created a channel with an ID longer than 118 characters.   But how would this case be handled? The orderer currently enforces a length limit of 249 characters on channel names, so there is certainly nothing which prevents this." created="2017-11-28 21:21:09.0" updateauthor="jyellick" updated="2017-11-28 21:21:09.0"/>
<Action id="35604" issue="24509" author="denyeart" type="comment" created="2017-11-29 01:55:32.0" updateauthor="denyeart" updated="2017-11-29 01:55:32.0"> <body><! CDATA  ~jyellick  Agreed, we would have to document in release notes that there would be no upgrade path for existing 1.0 channel names longer than 118 characters.  Alternatively, we could decide to enforce not at the channel level but at the ledger level when state database is CouchDB, since CouchDB was not positioned as a production option in 1.0 (due to lack of bulk processing and indexes).  That would also provide some more headroom since it would be the combined channel_chaincode length of 236 that would be the restriction, rather than a strict 118 character restriction on each.  But of course it would be better to do the validation at channel creation and chaincode installation time so that an error can be returned sooner than later in the deployment process.  Obviously these options are not great (hence review-needed), and would be impossible to make in later Fabric releases which have production deployments.  The judgement call here is whether to potentially impact a tiny fraction of 1.0 to 1.1 upgrades, or to implement a special solution to handle 1.0 deployments with extremely long channel names, but adds complexity and risk to Fabric that would be around forever.  ></body> </Action>
<Action id="35662" issue="24509" author="jyellick" type="comment" created="2017-11-30 03:33:00.0" updateauthor="jyellick" updated="2017-11-30 03:33:00.0"> <body><! CDATA With the last round of additional restrictions to accommodate Couch, we lost the ability to include mixed case in channel names, as well as the ability for channel names to start with a number.  As  ~jeffgarratt  can attest, losing the ability to begin channel names with a number broke the UUID generation scheme that the bdds were using for their channel names (but frustratingly only when the UUID randomly began with a number).  Now we find ourselves in a situation where we must change the channel name restrictions again to accommodate a backend storage limitation.  Would we simply be better off building a general channel name to storage name mapping layer so that when we (inevitably?) find some new storage naming problem (say in a new DB backend) that we do not have to weigh the benefits and costs of breaking existing users again?  Maybe adding a generic mapping layer isn't practical, I'm not sure how our users consume DBs like Couch, so please enlighten me if it is not.  ></body> </Action>
<Action id="35774" issue="24509" author="denyeart" type="comment" created="2017-12-04 12:04:41.0" updateauthor="denyeart" updated="2017-12-04 12:05:47.0"> <body><! CDATA  ~jyellick  After looking at various options I agree with you.  Let's keep the channel naming rules as is (allow up to 249 characters).  For the CouchDB channel_chaincode database name we can make it unique without complex name mapping by using a hash of channel_chaincode name. I'd recommend if channel_chaincode name exceeds 238 characters then make the CouchDB database name shortened and unique based on the following:  <First 64 characters of provided channel name> _ <First 64 characters of provided chaincode name> _ <SHA256 Hash base64 encoded (channel_chaincode)>  ></body> </Action>
<Action id="35786" issue="24509" author="jyellick" type="comment" body="Mostly makes sense to me.  Out of curiosity, where does the 238 character limit come from?" created="2017-12-04 16:44:39.0" updateauthor="jyellick" updated="2017-12-04 16:44:39.0"/>
<Action id="35795" issue="24509" author="denyeart" type="comment" body=" ~jyellick  The 238 character limit is based on 255 character limit for file system, minus 17 characters overhead that CouchDB uses.  I believe this is similar to how the 249 character limit for channels came into being (255 minus some Kafka overhead). " created="2017-12-04 18:30:47.0" updateauthor="denyeart" updated="2017-12-04 18:30:47.0"/>
<Action id="35799" issue="24509" author="jyellick" type="comment" body="Ah, I see, thanks  ~denyeart , you have my support/vote on this mapping proposal." created="2017-12-04 18:57:10.0" updateauthor="jyellick" updated="2017-12-04 18:57:10.0"/>
<Action id="37641" issue="24509" author="denyeart" type="comment" created="2017-12-19 17:52:37.0" updateauthor="denyeart" updated="2017-12-28 20:45:21.0"> <body><! CDATA In the case of private data, there can also be a collection db, so how about these db names:  Channel metadata db: {quote}{{channel_   // underscore required to distinguish from 1.0 channel db names}} {quote} Channel chaincode db: {quote}channel_chaincode  // note: this works since channel cannot have underscore) {quote} Channel chaincode collection db: {quote}channel_chaincode/collection  // note: use slash since chaincode can have underscore, neither can have slash {quote} And if any of these are longer than 238 characters then take the first 50 characters for each part and append a hash of the combined parts at the end, for example for a long channel_chaincode/collection the mapped name which is both user friendly and unique would be: {quote}<First 50 characters of provided channel name> _ <First 50 characters of provided chaincode name> / <First 50 characters of provided collection name> (  <SHA256 Hash base64 encoded (channel_chaincode/collection)> )    // note: parenthesis can not be included in any parts and can therefore denote the hash {quote} Also note that in 1.0 any channel name with a dot (.) was changed to an underscore (_) in couchdb database name.  In 1.1 any channel name with a dot (.) should be changed to a dollar ($) in couchdb database name, since we want to use underscore as the main separator between channel name and chaincode name.  ></body> </Action>
