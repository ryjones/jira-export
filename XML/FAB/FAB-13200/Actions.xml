<Action id="54536" issue="36014" author="kchristidis" type="comment" body="Copying  ~guoger  and  ~adarshsaraf123 . Let&apos;s discuss this and work towards a fix in tomorrow&apos;s scrum." created="2018-12-09 17:54:03.0" updateauthor="kchristidis" updated="2018-12-09 17:54:03.0"/>
<Action id="54614" issue="36014" author="c0rwin" type="comment" body="https://gerrit.hyperledger.org/r/28052" created="2018-12-10 18:51:57.0" updateauthor="c0rwin" updated="2018-12-10 18:51:57.0"/>
<Action id="54716" issue="36014" author="kchristidis" type="comment" body=" https://gerrit.hyperledger.org/r/c/28083/ " created="2018-12-12 14:26:50.0" updateauthor="kchristidis" updated="2018-12-12 14:26:50.0"/>
<Action id="54717" issue="36014" author="kchristidis" type="comment" body="Irrespective of the CRs that are posted here and whether they get merged, let&apos;s please keep this Jira open until we have reworked our unit tests to the point where we&apos;re being good test citizens again. (I will close this after review with the team.)" created="2018-12-12 14:33:38.0" updateauthor="kchristidis" updated="2018-12-12 14:33:38.0"/>
<Action id="54976" issue="36014" author="kchristidis" type="comment" body="Just so that we have something to measure ourselves against: currently, tests in {{etcdraft}} take 36 seconds." created="2018-12-19 15:27:51.0" updateauthor="kchristidis" updated="2018-12-19 15:27:51.0"/>
<Action id="54978" issue="36014" author="guoger" type="comment" created="2018-12-19 15:52:16.0" updateauthor="guoger" updated="2018-12-19 15:52:42.0"> <body><! CDATA {quote}ok github.com/hyperledger/fabric/orderer/consensus/etcdraft 20.265s coverage: 86.4% of statements{quote}   ~kchristidis  Is there an objective? i think it's still relatively slow mostly due to disk IO, which we probably couldn't do much about it...  ></body> </Action>
<Action id="54980" issue="36014" author="sykesm" type="comment" body="While I&apos;d like to agree that it&apos;s disk IO, I can&apos;t. Most of us are running on systems with fast SSDs and huge disk caches." created="2018-12-19 16:01:37.0" updateauthor="sykesm" updated="2018-12-19 16:01:37.0"/>
<Action id="55089" issue="36014" author="guoger" type="comment" created="2018-12-21 03:14:08.0" updateauthor="guoger" updated="2018-12-21 03:14:08.0"> <body><! CDATA Yep, you are right, i wasn't being very accurate. By disk IO, I was mostly talking about two thing: - current bottleneck of etcdraft implementation is disk IO according to profiling - i observed "WAL sync takes too long (more than 1s)" in CI sometimes, which does not happen locally on my laptop  Current two factors contribute to test slowness: - use of {{gomega.Consistently}} in tests, which by default waits for 100ms - interval between ticks sent to raft (which is reduced to 10ms in https://gerrit.hyperledger.org/r/c/28341)  with this change, {{ginkgo}} takes ~8s, {{ginkgo -p}} (4 nodes) takes ~2.5s on my machine.  ></body> </Action>
<Action id="56096" issue="36014" author="guoger" type="comment" created="2019-01-23 13:14:45.0" updateauthor="guoger" updated="2019-01-23 13:14:45.0"> <body><! CDATA Docker container on Macbook Pro mid-2015 {code} Ran 71 of 73 Specs in 10.235 seconds SUCCESS! -- 71 Passed | 0 Failed | 0 Pending | 2 Skipped {code}  vs  CI {code} 15:10:44 ok  	github.com/hyperledger/fabric/orderer/consensus/etcdraft	22.465s	coverage: 82.0% of statements {code}  mostly due to slow disk on CI  ></body> </Action>
<Action id="56130" issue="36014" author="kchristidis" type="comment" created="2019-01-24 00:26:55.0" updateauthor="kchristidis" updated="2019-01-24 03:24:04.0"> <body><! CDATA What am I doing wrong? Mid-2015 maxed out MBP, with the latest master as of the time of this writing, and I swear I'm not mining Bitcoin in parallel: 48.446s to execute all tests. {code:java} $ go test ./... ok      github.com/hyperledger/fabric/orderer/consensus/etcdraft        48.446s ?       github.com/hyperledger/fabric/orderer/consensus/etcdraft/mocks   no test files  {code} At any rate,  ~sykesm  can you give us your take on whether the execution time is more manageable now, or whether this is still within the unacceptable range?  ></body> </Action>
<Action id="56131" issue="36014" author="guoger" type="comment" created="2019-01-24 02:10:25.0" updateauthor="guoger" updated="2019-01-24 02:10:25.0"> <body><! CDATA  ~kchristidis  it's because the syscall used by {{etcd/wal}} is different on OSX than Linux, and it is super slow (haven't figured out why...)  can you try in a container?   This is benchmark result from {{etcd/wall}} MBP {code} BenchmarkWrite1000EntryWithoutBatch-8   	     100	  14199460 ns/op	   0.07 MB/s {code}  Docker Container on MBP {code} BenchmarkWrite1000EntryWithoutBatch-4   	    5000	    361108 ns/op	   2.79 MB/s {code}  ></body> </Action>
<Action id="56138" issue="36014" author="kchristidis" type="comment" created="2019-01-24 03:23:50.0" updateauthor="kchristidis" updated="2019-01-24 03:23:50.0"> <body><! CDATA Thanks for that tip. My numbers are much closer to yours now: {code:java} vagrant@vagrant:~/go/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft$ go test ./... ok      github.com/hyperledger/fabric/orderer/consensus/etcdraft        11.748s ?       github.com/hyperledger/fabric/orderer/consensus/etcdraft/mocks   no test files  {code}  ></body> </Action>
<Action id="56303" issue="36014" author="guoger" type="comment" created="2019-01-29 03:04:22.0" updateauthor="guoger" updated="2019-01-29 03:04:22.0"> <body><! CDATA We don't observe long test highlighted by ginkgo in CI anymore. Even though the whole suite still takes fairly long: {code} 13:10:40 ok  	github.com/hyperledger/fabric/orderer/consensus/etcdraft	24.794s	coverage: 82.6% of statements {code} It's fairly quick on a Linux box with fast disk. (when ran in parallel, it takes ~2.5s to complete)  I personally think this story could be closed by now. But please feel free to reopen this if anyone thinks it still requires some investigation.  ></body> </Action>
