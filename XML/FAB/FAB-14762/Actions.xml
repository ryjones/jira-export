<Action id="58440" issue="38661" author="guoger" type="comment" created="2019-03-22 10:59:07.0" updateauthor="guoger" updated="2019-03-22 10:59:07.0"> <body><! CDATA Sorry my suggestion was incorrect yesterday. For this to work, currently you have to reboot the re-added orderer. Can you pls try the test again? thx  ~bharadwajambati1   cc  ~yacovm  pls correct me if i get this wrong.  ></body> </Action>
<Action id="58445" issue="38661" author="yacovm" type="comment" created="2019-03-22 12:35:08.0" updateauthor="yacovm" updated="2019-03-22 12:35:08.0"> <body><! CDATA Yes that's correct. When I implemented onboarding, I made it that if your node is evicted and then re-added, it will not detect it again until a restart.  This is because: * Dynamic onboarding is single threaded and i didn't want to complicate the code with concurrent operations. * The use cases of re-adding an orderer again in reality are very rare - usually when you remove a node, it is due to some business reason or you are going to remove the physical node itself (i.e - the server is down for a long time and you gave up on bringing it back).  The only use case I can think of that someone will remove a node and then add it back , is a human error.  Therefore I didn't implement it for v1.4.1, but we can discuss whether to implement it for v2.0 ( ~jyellick   ~guoger  ).      ~bharadwajambati1  - nice job on describing the problem and thanks for giving interesting logs. Even though I am not sure how these logs point at the problem you described, this process is what I expect to see (describing the problem well, and looking at the logs and taking interesting lines from it and putting it in the JIRA).     Can you please explain what you mean by: {quote}  The channel leader sends something to it, but then almost seems stuck forever processing the config update. {quote}  And give some logs that point at this leader being stuck?  {quote} Interestingly, orderer2nd was the leader of the orderersystemchannel, and continued happily in that role throughout. {quote} This is by design - the leader of a channel is independent of other channels, and so are config updates.   ></body> </Action>
<Action id="58478" issue="38661" author="scottz" type="comment" created="2019-03-22 21:15:45.0" updateauthor="scottz" updated="2019-03-22 21:39:53.0"> <body><! CDATA Reproduced the problem described in this bug.  Note: It passes for 4th orderer, but fails here when removing and adding 3rd orderer (when there are only 3 to start with). *Even* when restarting the 3rd orderer before adding it to the channels. *And* even after restarting again several minutes later. With traffic running throughout.  The key logs are attached. See the attached logs from orderer4th, `Success_orderer4.txt`, from a successful test using 4 orderers; and see the attached logs from orderer3rd, `Fail_orderer3.txt`, from the failure case when using 3 orderers. These are from the orderer that was removed and added, in each scenario.  Timestamp for key orderer4th logs in successful scenario: *14:46:44.401 UTC*  Timestamp for corresponding key orderer3rd logs in failure scenario: *15:10:30.683 UTC*  In failure case: # We started network with 3 orderers. # Removed orderer3rd from channel1 and orderersystemchannel. # Restarted orderer3rd. # Added orderer3rd to orderersystemchannel and channel1. # Later restarted orderer3rd again. # The first log seen that is _not_ seen in the success case is at 15:10:30.683 UTC :  "Successfully sent StepRequest to 2 after failed attempt(s) channel=orderersystemchannel node=3"  Compared logs to a successful test (see Success_orderer4.txt) which: # Started network fresh with 3 orderers # Added orderer4 to both channels # Removed orderer4 from both channels # Restarted orderer4 # Added orderer4 to both channels. # Logs indicate a few ConsensusRequest msgs and responses, and then we see some things that differentiate this scenario from the failure case. Here at 14:46:45.439 we see log that says "No need to register verifier for chanin testorgschannel1", and later it pulls blocks, etc.  ></body> </Action>
<Action id="58479" issue="38661" author="yacovm" type="comment" created="2019-03-22 21:23:39.0" updateauthor="yacovm" updated="2019-03-22 21:23:39.0"> <body><! CDATA {quote}started with 3, added orderer4, removed orderer4, added orderer4.{quote} what does "started with 3" mean?  ></body> </Action>
<Action id="58481" issue="38661" author="scottz" type="comment" body="&quot;Started with 3&quot; means we started the network with 3 orderers, in both the orderersystemchannel and application &quot;testorgschannel1&quot;." created="2019-03-22 21:27:13.0" updateauthor="scottz" updated="2019-03-22 21:27:13.0"/>
<Action id="58483" issue="38661" author="yacovm" type="comment" created="2019-03-22 21:31:57.0" updateauthor="yacovm" updated="2019-03-22 21:31:57.0"> <body><! CDATA how can you start the network again with 3 orderers in the middle of the scenario?  are statements 1 to 4 describing 1 scenario and statments 5-6 describing the next one?  i don't understand. Also please explain what you see when you say it doesn't work. did you restart the orderer after it was removed from the channel?  ></body> </Action>
<Action id="58484" issue="38661" author="scottz" type="comment" created="2019-03-22 21:32:50.0" updateauthor="scottz" updated="2019-03-22 21:32:50.0"> <body><! CDATA And please ignore my comment: {quote} The channel leader sends something to it, but then almost seems stuck forever processing the config update. {quote} There are things I do not understand yet. Even in the successful case, the orderer is doing things like checking policies and such, at least until the blocks are pulled (e.g. look in the orderer4th logs in successful scenario after 14:46:44.401 UTC).  ></body> </Action>
<Action id="58485" issue="38661" author="scottz" type="comment" body="Sorry for the confusion. I edited the comment again to fix it, and answer your questions to describe the test steps we did today." created="2019-03-22 21:40:53.0" updateauthor="scottz" updated="2019-03-22 21:40:53.0"/>
<Action id="58528" issue="38661" author="scottz" type="comment" created="2019-03-25 20:58:15.0" updateauthor="scottz" updated="2019-03-25 20:58:15.0"> <body><! CDATA Works ok.  We retested scenario 4 of FAB-14753: removing and adding 3rd orderer to both channel1 and orderersystemchannel, (using the same orderername and certs again, but without any persistent data). This time we were sure to fetch the very latest config block before booting up the new orderer, instead of using the original genesis block for ORDERER_GENERAL_GENESISFILE that was used to boot up the 3 orderers in the beginning.  ></body> </Action>
