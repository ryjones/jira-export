<Action id="28093" issue="17972" author="ratnakar" type="comment" created="2017-07-10 13:52:31.0" updateauthor="ratnakar" updated="2017-07-10 13:52:31.0"> <body><! CDATA copying some email data          {code:java} Machine details: Core: 8 CPU Speed: 2.8000 GHz CPU Type: Intel (R) Xeon (R) CPU E3-1505M v5 OS: Ubuntu 16.04{code}       Did the 400 client threads run on the same machine or different machines? All the client threads ran on the same machine  Why 400 threads? Was that to saturate the peer CPU, and what % of CPU during the run? the reason for using 400 threads is to stress the peer/endorser. I didn't capture the % of the CPU during these runs.  You said 40k invokes, why the data shows both 10k invokes and 10k queries? A ccchecker client was started on each channel, two chaincodes each. That is 4 x 10K invokes within ~43 secs.  The time doesn't capture queries duration - just the time to send the invokes into the orderer.  What exactly does each invoke (and query) do? Each invoke inserts a record with a unique key/value pair. Obviously only one endorsement is obtained, from the one peer. And the query validates whether each invoke is successful or not, as this app doesn't include block listener.  Why using 4 chaincodes instead of 1? The goal was not to get highest tps, but rather to stress the peer code using concurrent threads on the 2 channels each with 2 chaincodes.        *Results :* {code:java} Time for invokes(ms): 43183 Num successful invokes: 10000(10000) Num successful queries: 10000(10000) Time for invokes(ms): 43186 Num successful invokes: 10000(10000) Num successful queries: 10000(10000)  Time for invokes(ms): 43260 Num successful invokes: 10000(10000) Num successful queries: 10000(10000) Time for invokes(ms): 43262 Num successful invokes: 10000(10000) Num successful queries: 10000(10000){code}  ></body> </Action>
