<Issue id="17972" key="FAB-4690" number="4690" project="10002" reporter="clayton sims" creator="clayton sims" type="10003" summary="Drive concurrent end-to-end transactions using different chaincodes using ccchecker (also with  node/cli tool)" priority="3" resolution="10000" status="6" created="2017-06-14 20:05:54.0" updated="2018-07-20 14:13:22.0" resolutiondate="2018-07-09 18:23:40.0" votes="0" watches="1" workflowId="39051"> <description><! CDATA *Test Name*: Drive concurrent end-to-end transactions using different chaincode with ccchecker tool *Component*: Endorser/Peer *Description*:  Drive concurrent end-to-end transactions using different chaincode with ccchecker tool _+Steps to run the test:+_ 1. generate certs for two orgs and orderer org 2. Create orderer genesis block and channel configuration transaction 3. Launch the standard network with CLI container, by mounting ccchecker binary to the CLI container 4. create channel 'mychannel' using Admin certs from the CLI conatiner 5. Join all the peers to the channel 'mychannel' 6. Install chaincodes newKeyPerInvoke with name mycc1, mycc2 7. Instantiate chaincode newKeyPerInvoke  on channel mychannel 8. ./ccchecker -e env.json -c ccchecker.json ## Make sure you  update cchcecker.json with two chaincodes *Artifact Locations:* NA *Network Topology*:  Standard + CLI Conatiner *Client Driver*:  _ccchecker_ *Input*: {panel} ./ccchecker -e env.json -c ccchecker.json {panel} *Output:*   {code:java} Time for invokes(ms): 1375     Num successful invokes: 100(100)     Num successful queries: 100(100) Test complete Time for invokes(ms): 1367     Num successful invokes: 100(100)     Num successful queries: 100(100) Test complete{code}  ></description> </Issue>
