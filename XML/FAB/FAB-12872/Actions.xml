<Action id="54698" issue="35364" author="adnanchoudhury" type="comment" body="The test is running, the metrics are visible through Prometheus+Grafana, will add results as they become available." created="2018-12-11 23:13:54.0" updateauthor="adnanchoudhury" updated="2018-12-11 23:13:54.0"/>
<Action id="54727" issue="35364" author="adnanchoudhury" type="comment" created="2018-12-12 16:18:21.0" updateauthor="adnanchoudhury" updated="2018-12-12 18:30:17.0"> <body><! CDATA Tested at SHA: Commit SHA: fc2552930 Docker compose setup/Environment for Peer, Orderer, Prometheus, Grafana: Docker compose based on fabric-test/feature/docker-compose/ the additions were:  {code:java} diff --git a/feature/docker-compose/docker-compose-base.yml b/feature/docker-compose/docker-compose-base.yml index 5550c95..b82122b 100644 --- a/feature/docker-compose/docker-compose-base.yml +++ b/feature/docker-compose/docker-compose-base.yml @@ -41,6 +41,9 @@ services: orderer: image: hyperledger/fabric-ca-orderer environment: +            - ORDERER_OPERATIONS_TLS_ENABLED=false +            - ORDERER_OPERATIONS_LISTENADDRESS=:9443 +            - ORDERER_METRICS_PROVIDER=prometheus - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave - ORDERER_HOME=/var/hyperledger/orderer - ORDERER_GENERAL_LOGLEVEL=debug @@ -79,6 +82,9 @@ services: diff --git a/feature/docker-compose/docker-compose-base.yml b/feature/docker-compose/docker-compose-base.yml index 5550c95..b82122b 100644 --- a/feature/docker-compose/docker-compose-base.yml +++ b/feature/docker-compose/docker-compose-base.yml @@ -41,6 +41,9 @@ services: orderer: image: hyperledger/fabric-ca-orderer environment: +            - ORDERER_OPERATIONS_TLS_ENABLED=false +            - ORDERER_OPERATIONS_LISTENADDRESS=:9443 +            - ORDERER_METRICS_PROVIDER=prometheus - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave - ORDERER_HOME=/var/hyperledger/orderer - ORDERER_GENERAL_LOGLEVEL=debug @@ -79,6 +82,9 @@ services: peer: image: hyperledger/fabric-ca-peer environment: +            - CORE_OPERATIONS_TLS_ENABLED=false +            - CORE_OPERATIONS_LISTENADDRESS=:9443 +            - CORE_METRICS_PROVIDER=prometheus - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID} - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave diff --git a/feature/docker-compose/docker-compose-kafka.yml b/feature/docker-compose/docker-compose-kafka.yml index 84bee29..c184049 100644 --- a/feature/docker-compose/docker-compose-kafka.yml +++ b/feature/docker-compose/docker-compose-kafka.yml @@ -414,3 +414,25 @@ services: ports: - 10051:7051 - 10053:7053 + +    prometheus: +        image: prom/prometheus +        container_name: prometheus +        volumes: +          - ../prometheus/:/etc/prometheus/ +        command: +          - '--config.file=/etc/prometheus/prometheus.yml' +        networks: +          behave: +             aliases: +               - ${CORE_PEER_NETWORKID} +        ports: +          - 9090:9090 +    grafana: +        image: grafana/grafana:3.0.0-beta7 +        environment: +            - GF_SECURITY_ADMIN_PASSWORD=pass +        depends_on: +            - prometheus +        ports: +            - "3000:3000" {code}  List of metrics found:  {code:java} "blockcutter_block_fill_duration_bucket", "blockcutter_block_fill_duration_count", "blockcutter_block_fill_duration_sum", "broadcast_enqueue_duration_bucket", "broadcast_enqueue_duration_count", "broadcast_enqueue_duration_sum", "broadcast_processed_count", "broadcast_validate_duration_bucket", "broadcast_validate_duration_count", "broadcast_validate_duration_sum", "chaincode_launch_duration_bucket", "chaincode_launch_duration_count", "chaincode_launch_duration_sum", "chaincode_shim_request_duration_bucket", "chaincode_shim_request_duration_count", "chaincode_shim_request_duration_sum", "chaincode_shim_requests_completed", "chaincode_shim_requests_received", "consensus_kafka_batch_size", "consensus_kafka_compression_ratio", "consensus_kafka_incoming_byte_rate", "consensus_kafka_outgoing_byte_rate", "consensus_kafka_record_send_rate", "consensus_kafka_records_per_request", "consensus_kafka_request_latency", "consensus_kafka_request_rate", "consensus_kafka_request_size", "consensus_kafka_response_rate", "consensus_kafka_response_size", "couchdb_processing_time_bucket", "couchdb_processing_time_count", "couchdb_processing_time_sum", "deliver_blocks_sent", "deliver_requests_completed", "deliver_requests_received", "deliver_streams_closed", "deliver_streams_opened", "dockercontroller_chaincode_container_build_duration_bucket", "dockercontroller_chaincode_container_build_duration_count", "dockercontroller_chaincode_container_build_duration_sum", "etcd_debugging_snap_save_marshalling_duration_seconds_bucket", "etcd_debugging_snap_save_marshalling_duration_seconds_count", "etcd_debugging_snap_save_marshalling_duration_seconds_sum", "etcd_debugging_snap_save_total_duration_seconds_bucket", "etcd_debugging_snap_save_total_duration_seconds_count", "etcd_debugging_snap_save_total_duration_seconds_sum", "etcd_disk_wal_fsync_duration_seconds_bucket", "etcd_disk_wal_fsync_duration_seconds_count", "etcd_disk_wal_fsync_duration_seconds_sum", "go_gc_duration_seconds", "go_gc_duration_seconds_count", "go_gc_duration_seconds_sum", "go_goroutines", "go_info", "go_memstats_alloc_bytes", "go_memstats_alloc_bytes_total", "go_memstats_buck_hash_sys_bytes", "go_memstats_frees_total", "go_memstats_gc_cpu_fraction", "go_memstats_gc_sys_bytes", "go_memstats_heap_alloc_bytes", "go_memstats_heap_idle_bytes", "go_memstats_heap_inuse_bytes", "go_memstats_heap_objects", "go_memstats_heap_released_bytes", "go_memstats_heap_sys_bytes", "go_memstats_last_gc_time_seconds", "go_memstats_lookups_total", "go_memstats_mallocs_total", "go_memstats_mcache_inuse_bytes", "go_memstats_mcache_sys_bytes", "go_memstats_mspan_inuse_bytes", "go_memstats_mspan_sys_bytes", "go_memstats_next_gc_bytes", "go_memstats_other_sys_bytes", "go_memstats_stack_inuse_bytes", "go_memstats_stack_sys_bytes", "go_memstats_sys_bytes", "go_threads", "grpc_comm_conn_closed", "grpc_comm_conn_opened", "grpc_server_stream_messages_received", "grpc_server_stream_messages_sent", "grpc_server_stream_request_duration_bucket", "grpc_server_stream_request_duration_count", "grpc_server_stream_request_duration_sum", "grpc_server_stream_requests_completed", "grpc_server_stream_requests_received", "grpc_server_unary_request_duration_bucket", "grpc_server_unary_request_duration_count", "grpc_server_unary_request_duration_sum", "grpc_server_unary_requests_completed", "grpc_server_unary_requests_received", "http_request_duration_microseconds", "http_request_duration_microseconds_count", "http_request_duration_microseconds_sum", "http_request_size_bytes", "http_request_size_bytes_count", "http_request_size_bytes_sum", "http_requests_total", "http_response_size_bytes", "http_response_size_bytes_count", "http_response_size_bytes_sum", "ledger_block_processing_time_bucket", "ledger_block_processing_time_count", "ledger_block_processing_time_sum", "ledger_blockchain_height", "ledger_blockstorage_commit_time_bucket", "ledger_blockstorage_commit_time_count", "ledger_blockstorage_commit_time_sum", "ledger_statedb_commit_time_bucket", "ledger_statedb_commit_time_count", "ledger_statedb_commit_time_sum", "ledger_transaction_count", "process_cpu_seconds_total", "process_max_fds", "process_open_fds", "process_resident_memory_bytes", "process_start_time_seconds", "process_virtual_memory_bytes", "process_virtual_memory_max_bytes",  {code}   Sample graph from Grafana: !Screen Shot 2018-12-12 at 12.10.22 PM.png|thumbnail!    ></body> </Action>
<Action id="56369" issue="35364" author="nyet" type="comment" body="This no longer works due to https://github.com/prometheus/prometheus/issues/5043" created="2019-01-30 08:59:12.0" updateauthor="nyet" updated="2019-01-30 08:59:12.0"/>
