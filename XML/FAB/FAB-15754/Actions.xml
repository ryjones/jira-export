<Action id="65253" issue="40678" author="sykesm" type="comment" created="2019-11-04 15:25:26.0" updateauthor="sykesm" updated="2019-11-04 15:25:26.0"> <body><! CDATA Based on discussions with  ~jyellick , we'd like to deprecate in v2 but leave it in.  - Deprecate in the doc - Update all but one integration test to use single node raft - Evaluate fabric-samples and open issues to have the owners move away from solo - Evaluate SDK implementations and open issues to have the owners move away from solo   ></body> </Action>
<Action id="65298" issue="40678" author="denyeart" type="comment" created="2019-11-05 18:23:58.0" updateauthor="denyeart" updated="2019-11-05 18:23:58.0"> <body><! CDATA Discussed with  ~jyellick  today.Â  The only issue with single node raft is that TLS is required to be configured for raft orderers. This is a barrier for people who want to do some quick trials with fabric, without getting wrapped up in the complexity of setting up TLS for each of the components. Solo is meant for exactly these types of quick trials. Personally, when I'm testing something in Fabric I like to use binaries that I can quickly build, rather than rely on whatever magic may be in the docker images and sample compose and shell scripts. Jason and I concluded that it would be simpler to keep solo around for these types of use cases, than to have a single node Raft without TLS option, since there is only a tiny amount of code required to support solo regardless.  Given the TLS consideration, what do you think  ~mastersingh24   ~sykesm   ~jyellick  ?  Note that BYFN has shifted to raft already... agreed that sample networks should just use Raft with TLS configured, the consideration here is for people spinning up their own ad hoc test networks.  ></body> </Action>
<Action id="65303" issue="40678" author="jyellick" type="comment" created="2019-11-05 19:42:50.0" updateauthor="jyellick" updated="2019-11-05 19:42:50.0"> <body><! CDATA The problem with Solo, is that people start with it, and then later down the line want to migrate off of it.  Now we have a migration path from Solo to Raft, but the relative pain between generating a TLS cert before bootstrapping your single node Raft network is quite small when compared to migrating from Solo to Raft.  We could possibly extend the Raft configuration to allow a network with no TLS certs defined, and require that you first transition from a 0 node to a 1 node network (consisting of the existing node), though I worry about adding confusing edge cases to Raft configuration.  The balance would be simply leaving solo.  From a code perspective, it's a hair over 100 lines, and about 4 times that in test.  It's some burden, but small.  ></body> </Action>
<Action id="65440" issue="40678" author="sykesm" type="comment" created="2019-11-11 16:17:40.0" updateauthor="sykesm" updated="2019-11-11 16:17:40.0"> <body><! CDATA During our IPM today, we've decided on the following action plan: # Reiterate in the documentation that solo is not intended for any production use cases. (Obvious.) # Specifically deprecate the "solo ordering service" in favor of a single node RAFT ordering service so we are able to remove it if/when we decide to. This should reinforce the fact that solo really isn't what people want to use.  ></body> </Action>
