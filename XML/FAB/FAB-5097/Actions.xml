<Action id="71901" issue="18805" author="JIRAUSER20406" type="comment" body="FYI Picking up this item to work on, will review the designs and comments so far." created="2021-06-28 09:18:46.0" updateauthor="JIRAUSER20406" updated="2021-06-28 09:18:46.0"/>
<Action id="71910" issue="18805" author="JIRAUSER20406" type="comment" created="2021-07-01 10:55:05.0" updateauthor="JIRAUSER20406" updated="2021-07-01 10:55:05.0"> <body><! CDATA Current working idea is to follow the ideas in point 2 of the design document.  (https://docs.google.com/document/d/1O5UCzf8H_kN4iqMgHm8haDhqacsCBEWNY-dhDG7qgYc/edit#) {quote}DelPrivateData is implemented as it is now; i.e., the _private write set log_ and the _private history DB_ are left intact. A new operation PurgePrivateData is implemented that immediately purges the private data from the _private state db_, the _private write set log_, (and the _private history DB_ if ever implemented_)_. This requires a new message option in the RWSet for differentiating between DelPrivateData and PurgePrivateData in the committing peer, for instance, it could be an additional is_purge here|https://github.com/hyperledger/fabric/blob/d942308df6302d3510e835bad62f861ad854b4b3/protos/ledger/rwset/kvrwset/kv_rwset.proto#L61  or we could abuse the value_hash portion of the KVWriteHash.   {quote} Feedback from one team interested in this function indicates that the 'purge' of the private data is a business activity, and should therefore be under the control of the chaincode function - an audit trail of purging of data being important.  An administrative action is also a possibility to clean up a peer; I'd expect (or is that a hope?) that this would be an exposing of the same underlying function. Therefore I'd propose to move forward with this approach - of an additional CC function.              ></body> </Action>
