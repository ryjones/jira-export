<Action id="55147" issue="36287" author="sambhavdutt" type="comment" created="2018-12-27 03:36:18.0" updateauthor="sambhavdutt" updated="2018-12-27 03:36:18.0"> <body><! CDATA The following test cases are failing consistently in the daily behave tests for release-1.4,  *fabric-test commit: 45a15dd*  {color:#0747a6}*CouchDB_Index*{color}  *FAB-7264**: Test CouchDB indexing using CC upgrade with marbles chaincode using GOLANG with 3 channels and 1 upgrade – @1.1*  Snippet: {code:java} Then a user receives error response of {"error":"not_found","reason":"missing"} from the couchDB container ...  failed in 0.000s When a user requests to get the design doc "indexdoc_behave_test" for the chaincode named "mycc2" in the channel "mychannel2" and from the CouchDB instance "http://localhost:5984" ... skipped in 0.000s {code} *Error log*  https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/10/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/FAB_7264__Test_CouchDB_indexing_using_CC_upgrade_with_marbles_chaincode_using_GOLANG_with_3_channels_and_1_upgrade_____1_1_/         *FAB-7269: Test CouchDB indexing using CC upgrade with marbles chaincode using NODE with 3 channels and 1 upgrade – @1.2*  *Error Log*   https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/10/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/FAB_7269__Test_CouchDB_indexing_using_CC_upgrade_with_marbles_chaincode_using_NODE_with_3_channels_and_1_upgrade_____1_2_/    {color:#0747a6}*Orderer*{color}  *FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.2*   *Error log*   https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/10/testReport/orderer/Orderer%20Service/FAB_4808_FAB_3937_FAB_3938__Orderer_BatchTimeOut_is_honored__for_kafka_orderer_____1_2_/        ></body> </Action>
<Action id="55222" issue="36287" author="scottz" type="comment" body="A quick look at https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/12/console shows the stdout containing a very lengthy output from the &quot;ls -l&quot; command when the failure occurs. It shows the logs files for ALL the containers from all previous test scenarios, not just the failing scenario, so it looks like behave is no longer cleaning up the logfiles after a test is completed. This may be what is causing the resource exhaustion." created="2019-01-02 17:28:10.0" updateauthor="scottz" updated="2019-01-02 17:28:10.0"/>
<Action id="55246" issue="36287" author="latitiah" type="comment" created="2019-01-03 13:02:02.0" updateauthor="latitiah" updated="2019-01-03 13:46:25.0"> <body><! CDATA Yes, there are a good number of failures with the log files saved as a result of the failures. behave only generates log files when errors occur. We've had more failures than this before without the resource error due to the log files...  There is definitely *something* going on with the CI nodes. You can see from 1 job run to another where over 118 tests are executed with 19 failures to a behave crash due to resource errors after only 26 tests are executed with 9 failures. (see attached screenshot from last 7 Jenkins runs)  This had 9 failures at the point of the crash, so there are going to be a large number of files for each of the failed tests (1 file for each container for each failure > 56 files)  There are 2 items that need to be explored: - How much space is being allocated for each of these jobs? - What is causing these failures? Are there missing binaries (such as cryptogen or configtxgen)? Are there failures when starting any of the containers? etc...   ></body> </Action>
<Action id="55270" issue="36287" author="scottz" type="comment" body="Is there any correlation to the changes in loglevel that we merged? If all the tests after date X fail after N tests, whereas the dates before that time showed test suites that required more (or fewer) failures to use up all the system memory" created="2019-01-03 20:56:48.0" updateauthor="scottz" updated="2019-01-03 20:56:48.0"/>
<Action id="55342" issue="36287" author="sambhavdutt" type="comment" created="2019-01-05 16:33:05.0" updateauthor="sambhavdutt" updated="2019-01-05 16:33:05.0"> <body><! CDATA There are 2 failed test(recurring) cases in the *CouchDB_Index* test for +release-1.4+ branch *fabric-test commit: 99dadfb*  *CouchDB_index.Testing Fabric CouchDB indexing.FAB-7264: Test CouchDB indexing using CC upgrade with marbles chaincode using GOLANG with 3 channels and 1 upgrade -- @1.1*   ~There is no response from peer0.org1.example.com~  *Error Log* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/20/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/FAB_7264__Test_CouchDB_indexing_using_CC_upgrade_with_marbles_chaincode_using_GOLANG_with_3_channels_and_1_upgrade_____1_1_/   *CouchDB_index.Testing Fabric CouchDB indexing.FAB-7269: Test CouchDB indexing using CC upgrade with marbles chaincode using NODE with 3 channels and 1 upgrade -- @1.2 *  ~There is no response from peer0.org1.example.com~  *Error Log*  https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/20/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/FAB_7269__Test_CouchDB_indexing_using_CC_upgrade_with_marbles_chaincode_using_NODE_with_3_channels_and_1_upgrade_____1_2_/  *Chaincodes test Error Log*  https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-behave-release-1.4-x86_64/20/testReport/TESTS-chaincodes/xml/_failed_to_read_/  *Build Logs*  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-behave-release-1.4-x86_64/20/Behave_Test_Logs/  ></body> </Action>
<Action id="58113" issue="36287" author="scottz" type="comment" body="Is there any progress on this issue? Is it still being worked?" created="2019-03-13 14:15:56.0" updateauthor="scottz" updated="2019-03-13 14:15:56.0"/>
