<Action id="46516" issue="31359" author="yacovm" type="comment" created="2018-06-26 06:02:24.0" updateauthor="yacovm" updated="2018-06-26 06:04:06.0"> <body><! CDATA So... basically you're doing an endorsement query with a collection specified after you did an endorsement query without the collection specified, and since no principal set combination can both satisfy the endorsement policy and entirely be contained by the collection config - you're getting an error (which is by design), and you want the service to return a response that enables you to prioritize peers that are in the collection over those that are not in the collection so you could do blind writes, is that correct?  I think that this is best approached by the following way: * lets assume you did an endorsement query without a collection and you got back hashed read-write sets from the peers. * While you can do a collection query afterwards - there is a risk that you'll get the error you got since it can be that in the setup, no principal combination can be satisfied * Since the response might contain hashed read write sets for multiple collections, it's a bit hard to convey syntactically to the discovery service how to compute the prioritization and how to convey it in a consumable manner such that it caters to demands of all users. * Therefore, I think we should just add an option in the  PeerMembershipQuery|https://github.com/hyperledger/fabric/blob/release-1.2/protos/discovery/protocol.proto#L125-L128  that specifies collections, and it would return only peers that are authorized by (all the collections given in the query) in the response. * If the SDK wants to know about peers that are in either collection A or in collection B, they could just issue 2 queries in the request (a query with collection A and a query for collection B). * The SDK would get back the response and can then prioritize the combinations of peers derived from the endorsement query response based on the association of peers to collections.  How does that sound to you?  ~bstasyszyn   ~troyronda    ></body> </Action>
<Action id="46548" issue="31359" author="bstasyszyn" type="comment" body="Yes, I think this should be fine. An option can be added to the SDK to either exclude peers that don&apos;t have access to the collection (this will probably be the default) or to prioritize by those that do have access. It will be up to the SDK user to decide what behavior they want." created="2018-06-26 15:39:27.0" updateauthor="bstasyszyn" updated="2018-06-26 15:39:27.0"/>
