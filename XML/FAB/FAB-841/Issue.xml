<Issue id="13146" key="FAB-841" number="841" project="10002" reporter="scottz" creator="scottz" type="10001" summary="gRPC API for replica state information" priority="3" resolution="10000" status="6" created="2016-10-24 18:21:36.0" updated="2018-07-20 18:56:12.0" resolutiondate="2017-03-28 19:09:45.0" votes="0" watches="2" workflowId="36546"> <description><! CDATA This issue is created for v1.0, to provide an API as suggested (gRPC) for the peers to provide as many details as possible about their replica state. This should help a network manager determine whether the peer is participating in the network, or is byzantine or not.  Reference FAB-707 for more details. After VP3 restarted, it missed some sequence numbers for transactions that occurred while it was down, so it advanced its view requested a viewchange - but the network had not advanced its view. So VP3 ledger lags behind, and VP3 sends repeated viewchange requests, until the rest of the network decides on a viewchange. At this point, VP3 is a "spare" validating peer node, that could participate if other working nodes stop - but there is not a good way to tell if it is in this state or is intentionally byzantine.  > As a Network Operations Manager/Observer, how can I determine the health of the network? Can I tell how many peer nodes that can be counted on, at any given moment? That would be the sum of the number of valid nodes plus any such as VP3. Or it might the the sum of functional nodes minus the number of byzantines. Let me rephrase: a network management tool could ping all the peers in the network to see which are functioning. It could also query them all to see their chainheights or chaincode data values. It would observe VP3 is lagging. Is it considered byzantine? Or, could the tool determine whether VP3 is "giving an honest effort" and is in such a state that it could help the network (eventually) if it becomes necessary due to other node faults? How could it distinguish between an OK node like this and a truly faulty/byzantine node?  Under true byzantine conditions, you can always be assured the there are f+1 correct peers actively participating in the network. You may be able to identify replicas which are not actively participating by examining their chain heights, but this is not foolproof. It's essentially impossible to determine byzantine from best effort, the best you could hope for is for the replica to report that it knows it is out of sync. For future work, I think it would be a good idea to include a gRPC call to get replica state (whether its view is active, what view, what seqno, etc.), but in v0.5/0.6 there is nothing of this sort.   ></description> </Issue>
