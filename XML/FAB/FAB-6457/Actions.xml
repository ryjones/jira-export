<Action id="33170" issue="21316" author="harrisob@us.ibm.com" type="comment" body=" ~zhaochy  would you be able to have a look at this one, thanks" created="2017-10-25 15:26:40.0" updateauthor="harrisob@us.ibm.com" updated="2017-10-25 15:26:40.0"/>
<Action id="33351" issue="21316" author="zhaochy" type="comment" created="2017-10-30 01:24:19.0" updateauthor="zhaochy" updated="2017-10-30 05:45:28.0"> <body><! CDATA  ~harrisob@us.ibm.com  this problem should be fixed at the fabric module. The message sdk received through grpc is  _chaincode error (status: 500, message:  invoke/query --> getDocuments  json: cannot unmarshal object into Go value of type string)_  And I also tried java sdk, this problem happened again. If we want to fix this at the sdk module, we have to parse the *Error.message* string and get the *message* sub-string, I don't think this is the right way for this issue. As a result, it's best to fix this at Fabric module instead of the sdk module.  maybe we should change this? at  fabric/core/endorser/endorser.go line 44 {code:java} func (ce chaincodeError) Error() string { return fmt.Sprintf("chaincode error (status: %d, message: %s)", ce.status, ce.msg) } {code}      ></body> </Action>
<Action id="35426" issue="21316" author="denyeart" type="comment" body=" ~muralisr  What&apos;s your opinion on this one?" created="2017-11-27 02:37:42.0" updateauthor="denyeart" updated="2017-11-27 02:37:42.0"/>
<Action id="35757" issue="21316" author="mastersingh24" type="comment" body=" ~yedendra  Exactly what problem are you trying to solve here?  Are you trying to do something special with the error message which is returned?  " created="2017-12-03 15:00:15.0" updateauthor="mastersingh24" updated="2017-12-03 15:00:15.0"/>
<Action id="35775" issue="21316" author="mastersingh24" type="comment" body="I&apos;m removing fix version for now as it is unclear whether or not anything should actually be done here." created="2017-12-04 12:51:12.0" updateauthor="mastersingh24" updated="2017-12-04 12:51:12.0"/>
<Action id="35787" issue="21316" author="yedendra" type="comment" created="2017-12-04 17:00:55.0" updateauthor="yedendra" updated="2017-12-04 17:00:55.0"> <body><! CDATA  ~mastersingh24  The error message is a simple text. When we call shim.Error("this is a simple error msg") in the chain code, the sdk throws the error. However, this error message is wrapped with addition text and received as  "chaincode error (status: 500, message: this is a simple error msg)". Currently, we are extracting the error text from this wrapped text.  The work around currently we are using is same as the sdk level fix mentioned by  ~zhaochy  : https://jira.hyperledger.org/browse/FAB-6457?focusedCommentId=33351&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-33351  ></body> </Action>
<Action id="35812" issue="21316" author="nnao" type="comment" created="2017-12-04 22:00:59.0" updateauthor="nnao" updated="2017-12-04 22:00:59.0"> <body><! CDATA I think this error is related to FAB-6387 (https://jira.hyperledger.org/browse/FAB-6387). Peer doesn't return the correct response. To fix this problem, I sent patches.  However, there is a deadlock between fabric and sdk-node. To merge the patches for fabric, it needs to change the test in sdk-node. To get prepared for the change of test in sdk-node, it needs to change fabric. How can I fix this deadlock?  ></body> </Action>
<Action id="38267" issue="21316" author="denyeart" type="comment" body=" ~muralisr  Could you review FAB-6387 and FAB-6457 and provide your thoughts on next steps?" created="2018-01-08 02:57:12.0" updateauthor="denyeart" updated="2018-01-08 02:57:12.0"/>
<Action id="39224" issue="21316" author="muralisr" type="comment" created="2018-01-27 16:21:05.0" updateauthor="muralisr" updated="2018-01-27 17:34:09.0"> <body><! CDATA  ~denyeart , agree with  ~nnao  ...this should be fixed by FAB-6387 but lets just confirm that with the fix and not make it duplicate yet.   Also  ~nnao ,   CR https://gerrit.hyperledger.org/r/#/c/16057/ mentioned in FAB-6387 resolves the deadlock you mentioned above (and hence CRs in FAB-6387 got Verified+1). Can you confirm please ? Just wanted to close that loop.   Will post rest of comments in FAB-6387.  ></body> </Action>
<Action id="40061" issue="21316" author="clayton sims" type="comment" body="I think there was agreement that FAB-6387 needed to be moved to v1.2.    ~muralisr   did i understand that correctly.  What does it do to this one?" created="2018-02-13 13:27:44.0" updateauthor="clayton sims" updated="2018-02-13 13:27:44.0"/>
<Action id="40063" issue="21316" author="muralisr" type="comment" body=" ~Clayton Sims  this would also move to v1.2. The  fix for FAB-6387  from  ~nnao   provides ProposalResponse directly to users without introspection or unmarshalling." created="2018-02-13 14:39:28.0" updateauthor="muralisr" updated="2018-02-13 14:39:28.0"/>
<Action id="43839" issue="21316" author="jyellick" type="comment" body="It looks like FAB-6387 was merged, is this still an issue?" created="2018-05-04 15:04:49.0" updateauthor="jyellick" updated="2018-05-04 15:04:49.0"/>
<Action id="45836" issue="21316" author="harrisob@us.ibm.com" type="comment" body="I have tested this and the error message from the chaincode is available within the response object along with the status of 500." created="2018-06-12 15:21:25.0" updateauthor="harrisob@us.ibm.com" updated="2018-06-12 15:21:25.0"/>
