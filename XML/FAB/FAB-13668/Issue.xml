<Issue id="36745" key="FAB-13668" number="13668" project="10002" reporter="lehors" assignee="lehors" creator="lehors" type="10004" summary="BYFN&apos;s container volume mapping is bad" priority="3" resolution="10000" status="6" created="2019-01-14 14:16:30.0" updated="2019-01-29 21:38:02.0" resolutiondate="2019-01-29 21:38:02.0" votes="0" watches="2" workflowId="48298"> <description><! CDATA The current container volume specification maps github.com/hyperledger/fabric-samples/chaincode to github.com/chaincode via: {code:java} - ./../chaincode/:/opt/gopath/src/github.com/chaincode{code} Not only this is misleading and confusing, it also makes it impossible to use any chaincode that does an import of a fabric-samples go package because that path doesn't exist in the container: {code:java} peer chaincode install -n mycc -v 1.0 -l golang -p github.com/hyperledger/fabric-samples/chaincode/go/example02/cmd 2019-01-14 13:21:07.647 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 001 Using default escc 2019-01-14 13:21:07.647 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 002 Using default vscc Error: error getting chaincode code mycc: error getting chaincode package bytes: Error obtaining dependencies for github.com/hyperledger/fabric-samples/chaincode/go/example02: <go,  list -f {{ join .Deps "\n"}} github.com/hyperledger/fabric-samples/chaincode/go/example02 >: failed with error: "exit status 1" can't load package: package github.com/hyperledger/fabric-samples/chaincode/go/example02: cannot find package "github.com/hyperledger/fabric-samples/chaincode/go/example02" in any of: /opt/go/src/github.com/hyperledger/fabric-samples/chaincode/go/example02 (from $GOROOT) /opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/go/example02 (from $GOPATH){code} github.com/hyperledger/fabric-samples needs to be mapped to the same name: {code:java} - ./../chaincode/:/opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode{code} Â   ></description> </Issue>
