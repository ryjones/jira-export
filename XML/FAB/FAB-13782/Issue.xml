<Issue id="36971" key="FAB-13782" number="13782" project="10002" reporter="inatatsu" creator="inatatsu" type="10001" summary="Dynamic control of profiling" priority="3" resolution="10001" status="6" created="2019-01-21 06:52:55.0" updated="2019-01-22 04:06:32.0" resolutiondate="2019-01-21 14:04:49.0" votes="0" watches="3" workflowId="48538"> <description><! CDATA Pprof is useful to analyze performance issues inside of Fabric. To enable pprof, currently we need to restart a peer or an orderer since pprof is configured by a yaml file or an environment variable only at the start up time.  But inside of the Go language runtime library, pprof is always enabled. The flag profile.enabled just spawns a goroutine to handle REST API requests to control profiling and export results.  Dynamic control via a peer CLI command (like the logging control) allows us to collect profiles of the target peer without restarting it, and also minimizes exposure of the port 6060.  ></description> </Issue>
