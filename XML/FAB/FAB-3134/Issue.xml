<Issue id="15721" key="FAB-3134" number="3134" project="10002" reporter="troyronda" creator="troyronda" type="10001" summary="Restrict block events to clients and transaction committed event" priority="3" resolution="10001" status="6" created="2017-04-13 00:28:35.0" updated="2020-01-22 19:03:24.0" resolutiondate="2020-01-22 19:03:24.0" votes="0" watches="2" workflowId="35120"> <description><! CDATA There should be a way to restrict events being sent back to clients. i.e., so that they only find out whether submitted transactions have been validated or invalidated upon commit (e.g. by txid). SDKs shouldn't be depending on having blocks and RW sets sent in events. Confidentiality is important and the client MUST be considered less trusted.  This ticket contrasts with FAB-2679 which proposes to add RW set in block events. There needs to be a mechanism to restrict block events and block events with RW sets to a subset of clients and/or disable. This is required for fabric deployers that require confidentiality such that the ledger is restricted to the peers.  A side benefit is that a smaller volume of data is being sent over the network, since in many scenarios the submitting client only needs the transaction status sent back.  Of course, there can be a set of well-defined fabric confidentiality levels for block events that are enforced by ACL policy and can be requested by the client. In particular, some applications may define their CC events in a way that can be exposed to clients and will find it useful to receive in filtered events (as another well-defined confidentiality level in addition to txnÂ status).  ></description> </Issue>
