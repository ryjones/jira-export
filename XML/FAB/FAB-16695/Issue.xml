<Issue id="42482" key="FAB-16695" number="16695" project="10002" reporter="rhegde" assignee="jyellick" creator="rhegde" type="10004" summary="Orderer panics on enabling prometheus and having separate TLS certs for RAFT node  " priority="3" resolution="10000" status="6" created="2019-09-24 20:34:59.0" updated="2020-09-24 12:07:57.0" resolutiondate="2019-09-30 19:33:45.0" votes="0" watches="3" workflowId="55547" security="10000"> <description><! CDATA I am getting  orderer panic upon enabling promethus and having different client and  server TLS certificate for RAFT node.  Fabric Release - v1.4.2.  *Orderer log showing panic* {code:java} 2019-09-23 22:59:43.634 UTC  orderer.common.cluster  loadVerifier -> INFO 00c Loaded verifier for channel public from config block at index 5 2019-09-23 22:59:43.640 UTC  orderer.common.cluster  loadVerifier -> INFO 00d Loaded verifier for channel testchainid from config block at index 7 2019-09-23 22:59:43.640 UTC  orderer.common.server  initializeServerConfig -> INFO 00e Starting orderer with TLS enabled panic: duplicate metrics collector registration attempted goroutine 1  running : github.com/hyperledger/fabric/vendor/github.com/prometheus/client_golang/prometheus.(*Registry).MustRegister(0xc0000d5d10, 0xc00097d9b0, 0x1, 0x1) /go/src/github.com/hyperledger/fabric/vendor/github.com/prometheus/client_golang/prometheus/registry.go:387 +0xad github.com/hyperledger/fabric/vendor/github.com/prometheus/client_golang/prometheus.MustRegister(0xc00097d9b0, 0x1, 0x1) /go/src/github.com/hyperledger/fabric/vendor/github.com/prometheus/client_golang/prometheus/registry.go:172 +0x53 github.com/hyperledger/fabric/vendor/github.com/go-kit/kit/metrics/prometheus.NewCounterFrom(0x148371a, 0x4, 0x148363a, 0x4, 0x1489869, 0xb, 0x14c6470, 0x4f, 0x0, 0x0, ...) /go/src/github.com/hyperledger/fabric/vendor/github.com/go-kit/kit/metrics/prometheus/prometheus.go:24 +0xe3 github.com/hyperledger/fabric/common/metrics/prometheus.(*Provider).NewCounter(0x1de4b18, 0x148371a, 0x4, 0x148363a, 0x4, 0x1489869, 0xb, 0x14c6470, 0x4f, 0x0, ...) /go/src/github.com/hyperledger/fabric/common/metrics/prometheus/provider.go:20 +0x138 github.com/hyperledger/fabric/core/comm.NewServerStatsHandler(0x15bde60, 0x1de4b18, 0x2) /go/src/github.com/hyperledger/fabric/core/comm/metrics.go:29 +0x74 github.com/hyperledger/fabric/core/comm.NewGRPCServerFromListener(0x15c3820, 0xc0000b4958, 0x12a05f200, 0xc0001ca2d0, 0x1d86bc0, 0xc000521ca0, 0x2, 0x2, 0xc000521cb0, 0x2, ...) /go/src/github.com/hyperledger/fabric/core/comm/server.go:152 +0x87e github.com/hyperledger/fabric/core/comm.NewGRPCServer(0xc0006d1980, 0xc, 0x0, 0xc0001ca2d0, 0x1d86bc0, 0xc000521ca0, 0x2, 0x2, 0xc000521cb0, 0x2, ...) /go/src/github.com/hyperledger/fabric/core/comm/server.go:55 +0x14b github.com/hyperledger/fabric/orderer/common/server.configureClusterListener(0xc000203200, 0x0, 0xc0001ca240, 0x1d86bc0, 0xc000521ca0, 0x2, 0x2, 0xc000521cb0, 0x2, 0x2, ...) /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:376 +0x78c github.com/hyperledger/fabric/orderer/common/server.Start(0x148462a, 0x5, 0xc000203200) /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:141 +0xdf9 github.com/hyperledger/fabric/orderer/common/server.Main() /go/src/github.com/hyperledger/fabric/orderer/common/server/main.go:91 +0x1ce main.main() /go/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20 {code}    Relevant orderer configuration indicating prometheus + certificates definitions where orderer process panic.    {code:java} - ORDERER_OPERATIONS_LISTENADDRESS=:36001 - ORDERER_METRICS_PROVIDER=prometheus - ORDERER_OPERATIONS_TLS_ENABLED=false - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tlsclient/ord03.clsorder.cit.clsnet.pem - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tlsclient/ord03.clsorder.cit.clsnet.sk - ORDERER_GENERAL_CLUSTER_ROOTCAS= /var/hyperledger/orderer/tlsintermediatecerts/tls.ca01.cit.clsnet.pem  - ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE=/var/hyperledger/orderer/tlsserver/ord03.clsorder.cit.clsnet.pem - ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY=/var/hyperledger/orderer/tlsserver/ord03.clsorder.cit.clsnet.sk - ORDERER_GENERAL_CLUSTER_LISTENPORT=5555 - ORDERER_GENERAL_CLUSTER_LISTENADDRESS=0.0.0.0{code}    If I disable metrics provider, orderer stands up and passes all our tests.    {code:java} #- ORDERER_OPERATIONS_LISTENADDRESS=:36001 #- ORDERER_METRICS_PROVIDER=prometheus - ORDERER_OPERATIONS_TLS_ENABLED=false - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tlsclient/ord03.clsorder.cit.clsnet.pem - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tlsclient/ord03.clsorder.cit.clsnet.sk - ORDERER_GENERAL_CLUSTER_ROOTCAS= /var/hyperledger/orderer/tlsintermediatecerts/tls.ca01.cit.clsnet.pem  - ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE=/var/hyperledger/orderer/tlsserver/ord03.clsorder.cit.clsnet.pem - ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY=/var/hyperledger/orderer/tlsserver/ord03.clsorder.cit.clsnet.sk - ORDERER_GENERAL_CLUSTER_LISTENPORT=5555 - ORDERER_GENERAL_CLUSTER_LISTENADDRESS=0.0.0.0{code}  ></description> </Issue>
