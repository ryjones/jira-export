<Issue id="30291" key="FAB-10130" number="10130" project="10002" reporter="rlalgowdar" assignee="rlalgowdar" creator="rlalgowdar" type="10002" summary="SideDB - CouchDB Chaos Testing:" priority="2" resolution="10000" status="6" created="2018-05-16 15:56:01.0" updated="2018-11-27 22:03:44.0" resolutiondate="2018-07-02 19:14:09.0" votes="0" watches="2" workflowId="44581"> <description><! CDATA +*Setup:*+  Network Topology: 2 channels, 2 org, 4 peers per org, each peer with CouchDB container for stateDB, 4 kafka, 3 zookeepers, 3 orderers, 2 ca, TLS enabled, both org associate with all channels. Client Driver: PTE +*Test Steps:*+ 1) chaincode: each channel has one chancode, marbles02_private go chaincode, instantiated 2) 100000 transactions transactions: 4 threads, each thread sends 25000 queries concurrently with tx id from 1 to 25000           thread 1 sends to org1 peer1 on channel 1          thread 2 sends to org2 peer1 on channel 1          thread 3 sends to org1 peer1 on channel 2          thread 4 sends to org2 peer1 on channel 2 3) Concurrently, do    a. 100000 rich-queries of 4-field spread among 2 channels    b. Take peers down and up and ensure private data still gets disseminated (any peer that was not up at push time will have to pull the private data upon later block commit).-    c. Join a new peer to the channel and ensure it can catch up in block height, in the presence of both purged data and remaining data.        +*Result:*+ 1)hardware setup 2) RPS (request per second) achieved for queries 3) CPU and memory usage for the Peers and CouchDB containers    ></description> </Issue>
