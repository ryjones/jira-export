<Action id="20789" issue="14640" author="scottz" type="comment" created="2017-02-09 00:18:13.0" updateauthor="scottz" updated="2017-02-09 00:18:13.0"> <body><! CDATA Test failures found with commit 5d9e4ede298ab646ac918dc5b034c7d319dd1d9a commit date: Mon Jan 30 14:34:38 2017 +0000  ></body> </Action>
<Action id="21175" issue="14640" author="kchristidis" type="comment" body="Scott, can you confirm whether this issue persists? If so, I&apos;ll look into it." created="2017-02-25 23:14:11.0" updateauthor="kchristidis" updated="2017-02-25 23:14:11.0"/>
<Action id="21229" issue="14640" author="scottz" type="comment" created="2017-02-28 23:43:32.0" updateauthor="scottz" updated="2017-02-28 23:43:32.0"> <body><! CDATA Test still fails, using Feb 27 commit # 29d7fc035df697a68d271d628e693c556354486f . We see different results with each test invocation, but typically see 6 - 9 blocks delivered, each containing one or two transactions.  vagrant@hyperledger-devenv:v0.3.0-8d582eb:/opt/gopath/src/github.com/hyperledger/fabric/bddtests/regression/go/ote$ OTE_KAFKABROKERS=2 CONFIGTX_ORDERER_ORDERERTYPE=kafka OTE_TXS=11 CONFIGTX_ORDERER_BATCHTIMEOUT=20s ./ote ... TEST <commandline> OTE_TXS=11 CONFIGTX_ORDERER_ORDERERTYPE=kafka OTE_KAFKABROKERS=2 ote  RESULT=FAILED: TX Req=11 BrdcstACK=11 NACK=0 DelivBlk= 7  DelivTX= 11  numChannels=1 batchSize=10   ></body> </Action>
<Action id="23773" issue="14640" author="christopherferris" type="comment" body=" ~scottz  is this still an issue? Please reverify, thanks. Also, is this in the automated CI test suite?" created="2017-05-11 22:07:48.0" updateauthor="christopherferris" updated="2017-05-11 22:07:48.0"/>
<Action id="24978" issue="14640" author="suryalnvs" type="comment" created="2017-06-01 17:56:46.0" updateauthor="suryalnvs" updated="2017-06-01 18:00:03.0"> <body><! CDATA +*Pre-req:*+ * Generate certs using the cryptogen tool for the clients and orderer * Launch the network with following configuration: _2 Orderers (with BATCHTIMEOUT=20s)_ _3 Kafka brokers (3 zookeepers)_  *_Steps to run the test:_* 1. Create a channel 'mychannel'  2. Start the deliver clients for two orderers *Terminal 1:* {code:java} /deliver_stdout_msp -server localhost:7050 -tls -cafile ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/ca.crt -chainID mychannel -overridehostname orderer0.example.com -mspDir ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp -mspID Org1MSP -seek -2 {code} *Terminal 2:* {code:java} ./deliver_stdout_msp -server localhost:8050 -tls -cafile ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/ca.crt -chainID mychannel -overridehostname orderer1.example.com -mspDir ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp -mspID Org1MSP -seek -2 {code} 3. Start broadcast clients     Send 110 transactions to the Orderer0 and Orderer1  *Terminal 3:* {code:java} ./broadcast_timestamp_msp -server localhost:7050 -chainID mychannel -messages 110 -tls -cafile ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/ca.crt -chainID mychannel -overridehostname orderer0.example.com -mspDir ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp -mspID Org1MSP {code} *Terminal 4:* {code:java} ./broadcast_timestamp_msp -server localhost:8050 -chainID mychannel -messages 110 -tls -cafile ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/ca.crt -chainID mychannel -overridehostname orderer1.example.com -mspDir ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp -mspID Org1MSP {code} *OUTPUT:* As a result of the above execution here is the result (seen in Ternminal 1 & 2) {code:java} Date is 2017-06-01 17:48:04.866544776 +0000 UTC Transactions received in block : 1 Date is 2017-06-01 17:49:13.941226096 +0000 UTC Transactions received in block : 100 Date is 2017-06-01 17:49:14.750159895 +0000 UTC Transactions received in block : 100 Date is 2017-06-01 17:49:34.766522326 +0000 UTC Transactions received in block : 20 {code} {color:#14892c}*we see the blocks are getting batched up as per batchtimeout configuration and issue is no more reproducible, hence closing this issue.* {color}  *NOTE:* * Tested on alpha2 based code/commit level * Please refer more details here, https://jira.hyperledger.org/browse/FAB-3993,  https://gerrit.hyperledger.org/r/#/c/9625/ , source files are attached to FAB-2001  ></body> </Action>
