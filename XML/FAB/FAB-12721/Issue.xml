<Issue id="35102" key="FAB-12721" number="12721" project="10002" reporter="scottz" assignee="latitiah" creator="scottz" type="10101" summary="Upgrade Test Compatibility 1.3 vs 1.4, NodeJs SDK, fabric-ca, fabric peers and orderers" priority="2" resolution="10000" status="6" created="2018-11-05 16:27:16.0" updated="2018-12-19 21:41:59.0" resolutiondate="2018-12-19 21:41:59.0" votes="0" watches="5" workflowId="46537"> <description><! CDATA This description was written in v1.2.0 FAB-10161, which was then cloned to v1.3 FAB-12001 and to this v1.4 FAB-12721. Simply reinterpret the versions in the table below (1.1 ~ prev version 1.3.0; 1.2 ~ new version 1.4.0).    ||Integration Test Suite||Node.js SDK||Fabric (peer/orderer)||Fabric-CA|| Description of the testcase|| |1.2|1.2.2|1.2|*1.3*|Refer  #Case 1  below| |1.2|1.2.2|*1.3*|1.2|Refer Case 2 below| |1.2|1.2.2|*1.3*|*1.3*|Refer Case 3 below| |1.2|*1.3*|*1.3*|*1.3*|Refer Case 4 below|     _+Pre-requisite+_:  1. pull the the fabric-peer / fabric-orderer /fabric-ca docker images with tag *1.2.0*  2. Generate the latest images on master branch of *fabric* and *fabric-ca* repo  At the time of this test image versions are as following  fabric Image version      : *amd64-1.3.0-snapshot-e6bdd2321*  fabric-ca Image version : *amd64-1.3.0-snapshot-8ecada3*    ----  #Case 1  {code:java} Nodejs Integration Test Suite at 1.2 , Node.js SDK at 1.2.2, Fabric is at 1.2 & Fabric-CA is at 1.3 (snapshot)  Step 1 : Clone the repo  git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node git checkout release-1.2 (Default it points to release-1.1 branch)  Step 2: Install the node modules npm install  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:1.2.0 export DOCKER_IMG_CA_TAG=:amd64-1.3.0-snapshot-8ecada3 export THIRDPARTY_IMG_TAG=:0.4.10  Step 6: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 7: Execute the following command and make sure all the tests are passing now   "gulp test"{code} ---- Case 2 {code:java} Nodejs Integration Test Suite at 1.2 , Node.js SDK at 1.2.2, Fabric is at 1.3 & Fabric-CA is at 1.2  Step 1 : Clone the repo git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node git checkout release-1.2 (Default it points to release-1.1 branch)  Step 2: Install the node modules npm install  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.3.0-snapshot-e6bdd2321 export DOCKER_IMG_CA_TAG=:1.2.0 export THIRDPARTY_IMG_TAG=:0.4.12  Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.2 network needs all the required crypto/channel artifacts that are available in master branch)   Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code} ---- Case 3 {code:java} Nodejs Integration Test Suite at 1.2 , Node.js SDK at 1.2.2, Fabric is at 1.3 & Fabric-CA is at 1.3   Step 1 : Clone the repo git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node git checkout release-1.2 (Default it points to release-1.1 branch)  Step 2: Install the node modules npm install  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.3.0-snapshot-e6bdd2321 export DOCKER_IMG_CA_TAG=:amd64-1.3.0-snapshot-8ecada3 export THIRDPARTY_IMG_TAG=:0.4.12  Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.3 network needs all the required crypto/channel artifacts that are available in master branch. check if this step is really required ?)  Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code} ---- Case 4: {code:java} Nodejs Integration Test Suite at 1.1 , Node.js SDK at 1.3, Fabric is at 1.3 & Fabric-CA is at 1.3  Step 1 : Clone the repo git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  git checkout release-1.2 (Default it points to release-1.1 branch)  Step 2: Install the node modules npm install make sure to use latest 1.3 node modules for the clients fabric-client and fabric-ca-client (As of this testing used the version: 1.3.0-snapshot.58) rm -rf node_modules/fabric-c* npm install fabric-client@1.3.0-snapshot.58 npm install fabric-ca-client@1.3.0-snapshot.59  Step 3: Commentout the following lines from build/tasks/test.js  //process.env.DOCKER_IMG_TAG = dockerImageTag; //process.env.THIRDPARTY_IMG_TAG = thirdpartyImageTag;  please refer https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L64-L65  Step 4: As part of this compatibility tests we wouldn't want to run the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/build/tasks/test.js#L121-L125  Step 5: Export the following environment varibles to let your docker-compose use the docker tags. (Make sure replace with the right TAG ) export DOCKER_IMG_TAG=:amd64-1.3.0-snapshot-e6bdd2321  export DOCKER_IMG_CA_TAG=:amd64-1.3.0-snapshot-8ecada3  export THIRDPARTY_IMG_TAG=:0.4.12   Step 6: replace the test/fixtures folder with test/fixtures folder of fabric-sdk-node master branch (Fabric 1.3 network needs all the required crypto/channel artifacts that are available in master branch. check if this step is really required ?)  Step 7: There needs a tweaking on the test/fixtures/docker-compose.yaml  change the lines hyperledger/fabric-ca${DOCKER_IMG_TAG} to hyperledger/fabric-ca${DOCKER_IMG_CA_TAG}  Step 8: Execute the following command and make sure all the tests are passing now   "gulp test" {code}  ></description> </Issue>
