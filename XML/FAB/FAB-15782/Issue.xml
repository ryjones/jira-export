<Issue id="40744" key="FAB-15782" number="15782" project="10002" reporter="btl5037" creator="btl5037" type="10001" summary="Fabric Samples Builds Chaincode Inside Fabric Tools Image" priority="3" resolution="10000" status="6" created="2019-06-21 16:11:52.0" updated="2019-08-02 15:41:51.0" resolutiondate="2019-08-02 15:41:51.0" votes="0" watches="3" workflowId="53698"> <description><! CDATA Currently Fabric Samples creates a CLI container from the Fabric-Tools image. It mounts the chaincode inside the container and calls `peer lifecycle chaincode package`.  Fabric recently merged a change that removes the shim and protos package from the ccenv image. This means that the shim, peer protos and their dependencies must either be vendored in the chaincodes package, or exist in the GOPATH. We also removed the filter that excluded the Shim and Protos package from the `chaincode package` "autovendoring" process.  The issue in Fabric Samples is that the Chaincode is mounted into the CLI container where there is no hope of Fabric existing. Fabric cant be cloned locally inside the container before calling the package process because the directory is already populated by the cryptographic material. And Fabric can't be mounted into the container because the GOPATH could potentially contain multiple paths, i.e., `/usr/go:/usr/local/go:/Users/user/go` unless you first discern where Fabric exists on the GOPATH before mounting the volume.  The Fabric Samples team needs to come up with a solution that will allow for the existence of Fabric, whether that be inside the container on the GOPATH, or, packaging the chaincode outside of the CLI and then mounting the chaincode package into the container, which requires Fabric to be on the local GOPATH. We already require the users to have the binaries on their system PATH as part of the Fabric Samples prerequisites, so building it outside the container is not an unreasonable things to ask.  Fabric's new chaincode packaging model will require the dependencies to be prevendored, or exist on the GOPATH, so having developers who are running Fabric Samples have to do the same process is reasonable, given it will be expected of them when developing.  We will also need to update Fabric Samples doc to inform developers they need to clone Fabric into their GOPATH locally, if samples doesn't provide another means for packaging the chaincode.  You can test this issue by simply running ./byfn.sh up. However we have backed out the changes which cause this to break. We will reintroduce the changes, but gate them with a environment variable `CHAINCODE_VENDORSHIM` which if set to true will take the path that breaks the packaging process. You will be able to test your changes by setting this flag in your environment, whether that be locally outside of Fabric Tools, or in side of the Fabric Tools container.  ></description> </Issue>
