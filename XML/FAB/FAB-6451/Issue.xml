<Issue id="21302" key="FAB-6451" number="6451" project="10002" reporter="scottz" assignee="ratnakar" creator="scottz" type="10001" summary="systest FAB-6911 channel service for events" priority="2" resolution="10001" status="6" created="2017-10-04 15:26:22.0" updated="2019-07-30 02:42:07.0" resolutiondate="2019-07-30 02:42:07.0" votes="0" watches="3" workflowId="35343"> <description><! CDATA Refer to  https://wiki.hyperledger.org/projects/fabric/proposedv1_1  and the New Feature JIRA blocking this.  Ability to trigger events on a per channel basis rather than global peer basis. The (current) eventhub was designed to be an integration point for outside systems to receive data from a fabric peer, regardless of channel. The intent of the (new) channel service is to address this usage while also providing the ability to set access control. The eventhub refactor would be for the future (to combine the services to use single improved infrastructure).    ---- Interface tests utilize the sample deliver client to connect to a Peer Deliver API and receive block events on a channel level.  Peers are referred to by PO<org#><peer#>. eg. PO11  Network Topology: * e2e_cli example with TLS disabled: 2 org, 2 peers per org joined to channel1 * modification: additional channel2 with PO11 joined, cc installed and instantiated  Execution: # Deploy e2e_cli network, execute cli script and pause prior to invoking. # Using sample deliver client  https://github.com/hyperledger/fabric/blob/master/orderer/sample_clients/deliver_stdout/client.go   connect multiple sample deliver clients and retrieve all blocks and listen forever. Note that each of these clients should receive the genesis block for the channels they are connected to: ## PO11 on channel1 (DC1-1-1) ## PO11 on channel2 (DC1-1-2) ## PO21 on channel1 (DC2-1-1) # Execute normal cli scripts with modifications for *channel2*. # Connect new deliver client to PO11 channel1 and retrieve all blocks for channel1 and listen forever. ## compare results with DC1-1-1 in step 2 # Invoke a new transaction on channel1. # After a few minutes, connect new deliver client to PO12 channel1 and retrieve latest block for channel1 and listen forever. ## compare results with DC1-1-1 in step 2 # connect new deliver client to PO21 channel1 and retrieve block 2 and disconnect. ## compare results with DC1-1-1 in step 2 # Invoke new transaction on channel2. ## check output of DC1-1-2 and confirm that new block is received. # connect sample deliver client to PO12 *channel2* and confirm that *no blocks can be retrieved*. # Join PO12 to *channel2*, rerun step 9 and confirm that all historic blocks are retrieved.   Test passes if: * All block events received by the deliver clients are as anticipated. * All block events on channel1 are printed by DC1-1-1 DC2-1-1. * All block events on channel2 are printed by DC1-1-2. * All block events on channel1 are retrievable by all peers. * All block events on channel2 are retrievable only by PO11 and PO12 (after PO12 has joined channel2).  ></description> </Issue>
