<Issue id="28824" key="FAB-9102" number="9102" project="10002" reporter="sykesm" assignee="sykesm" creator="sykesm" type="10001" summary="As a developer, I want to be able to easily run ledger tests on my workstation outside of any container or VM processes" priority="4" resolution="10000" status="6" created="2018-03-24 19:09:58.0" updated="2018-07-20 18:49:21.0" resolutiondate="2018-04-21 12:20:14.0" votes="0" watches="1" workflowId="41621"> <description><! CDATA A handful of our tests require CouchDB. The current approach is to hard codeÂ the tests with assumptions about our vagrant or docker environment that makes the database available at "couchdb:5984". While this works, it gets in the way of a pure local development environment.  Instead of assuming the database is available at that host and port, a mechanism should be created to point the tests to an active instance. When the tests are not explicated pointed to an active instance, the tests should be able to start a containerized instance on demand.  Acceptance: # Tests continue to run in a docker-compose environment when {{make unit-tests}} is used. # When running tests locally with {{go test ./...}}, the local docker engine will be used to start and stop an instance of hyperledger/fabric-couchdb:latest. This assumes that the latest image has already bee pulled and tagged for local execution (which is also true of {{make unit-tests}}. We are not improving this.)  ></description> </Issue>
