<Issue id="26298" key="FAB-7568" number="7568" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10001" summary="Remove duplicate code from certificate sanitization" priority="3" resolution="10000" status="6" created="2017-12-28 16:02:15.0" updated="2018-07-20 18:51:00.0" resolutiondate="2017-12-28 23:26:14.0" votes="0" watches="1" workflowId="40857"> <description><! CDATA There are code duplication at the certificates sanitization code, e.g.:  {code} func (msp *bccspmsp) sanitizeCert(cert *x509.Certificate) (*x509.Certificate, error) { 	if isECDSASignedCert(cert) { 		// Lookup for a parent certificate to perform the sanitization 		var parentCert *x509.Certificate 		if cert.IsCA { 			// at this point, cert might be a root CA certificate 			// or an intermediate CA certificate 			chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert)) 			if err != nil { 				return nil, err 			} 			if len(chain) == 1 { 				// cert is a root CA certificate 				parentCert = cert 			} else { 				// cert is an intermediate CA certificate 				parentCert = chain 1  			} 		} else { 			chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert)) 			if err != nil { 				return nil, err 			} 			parentCert = chain 1  		}  		// Sanitize 		var err error 		cert, err = sanitizeECDSASignedCert(cert, parentCert) 		if err != nil { 			return nil, err 		} 	} 	return cert, nil } {code}  following peace   {code} 			chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert)) 			if err != nil { 				return nil, err 			} {code}  is repeated regardless of the if state condition. The sanitation check could be improved by simple refactoring to the following code:  {code} func (msp *bccspmsp) sanitizeCert(cert *x509.Certificate) (*x509.Certificate, error) { 	if isECDSASignedCert(cert) { 		// Lookup for a parent certificate to perform the sanitization 		var parentCert *x509.Certificate 		chain, err := msp.getUniqueValidationChain(cert, msp.getValidityOptsForCert(cert)) 		if err != nil { 			return nil, err 		}  		// at this point, cert might be a root CA certificate 		// or an intermediate CA certificate 		if cert.IsCA && len(chain) == 1 { 			// cert is a root CA certificate 			parentCert = cert 		} else { 			parentCert = chain 1  		}  		// Sanitize 		cert, err = sanitizeECDSASignedCert(cert, parentCert) 		if err != nil { 			return nil, err 		} 	} 	return cert, nil } {code}  which preserves former logic, while avoids duplication.  ></description> </Issue>
