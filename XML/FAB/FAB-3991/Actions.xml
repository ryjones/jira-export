<Action id="24337" issue="16832" author="jyellick" type="comment" created="2017-05-25 14:48:01.0" updateauthor="jyellick" updated="2017-05-25 14:49:57.0"> <body><! CDATA  config.rst|https://github.com/hyperledger/fabric/blob/master/docs/source/configtx.rst   Please especially see the section at the bottom: "Creating channels" for a low level detail on how channel creation transactions are authenticated  ></body> </Action>
<Action id="24340" issue="16832" author="smithbk" type="comment" created="2017-05-25 14:59:47.0" updateauthor="smithbk" updated="2017-05-25 14:59:47.0"> <body><! CDATA Make that fabric/docs/source/configrx.rst and name of the section at the bottom is "Channel creation".     Also, here is something I started to write which may help ...  {color:#444444}The following describes what authorization checks are made for channel operations:{color}  {color:#444444}1) Channel creation is a transaction on the orderer's system channel. The invoker of a channel creation request to the orderer must satisfy the ChannelCreationPolicy for the consortium in the orderer's system channel. The default ChannelCreationPolicy as created by configtxgen in genesis block creation is "any admin of any MSP in the consortium as defined in the system channel". There is no way to override this policy in a yaml file. The following code around line 179 of fabric/common/configtx/tool/provisional/provisional.go is where the policy is set.{color} {code:java} config.TemplateConsortiumChannelCreationPolicy(consortiumName, policies.ImplicitMetaPolicyWithSubPolicy( configvaluesmsp.AdminsPolicyKey, cb.ImplicitMetaPolicy_ANY,{code} {color:#444444}This policy can be updated dynamically as a config update on the orderer's system channel.{color}     {color:#444444}2) For channel config update, the invoker must satisfy the channelAdmin policy.{color}  ></body> </Action>
<Action id="24358" issue="16832" author="jyellick" type="comment" created="2017-05-25 17:21:34.0" updateauthor="jyellick" updated="2017-05-25 17:21:34.0"> <body><! CDATA With respect to (2)  For channel config update, the set of config modifications determines the policies which must be satisfied.  So, for example, if peerOrg0 wishes to update their anchor peers, then the ModPolicy for peerOrg0's anchor peers (by default, with is peerOrg0's "Admins" policy) will be evaluated to authorize the request.  On the other hand, if peerOrg0 wishes to add another peer org, then the ModPolicy of the ApplicationGroup (by default, this is the ApplicationGroup's "Admins" policy) must be satisfied.  By default, the ApplicationGroup's Admins policy requires that the majority of the Application org's Admins policies be satisfied.  There is another document which details policies as well:  policies.rst|https://github.com/hyperledger/fabric/blob/master/docs/source/policies.rst    ></body> </Action>
<Action id="26027" issue="16832" author="timpii" type="comment" created="2017-06-12 14:57:41.0" updateauthor="timpii" updated="2017-06-12 14:57:41.0"> <body><! CDATA We intend to set all our organisations up with the same root CA but distinguish them based on the OU field. Our CA has indicated that the CRL list is provided at the root CA level and there is no easy programmable  interface to identify certificates to owners, as such we may need to add the entire  CRL list to each MSP. We are not expecting large numbers of items on the list given that we will have a closed community.   The guidance that we had previously received was that this was not desirable. Was the guidance purely based on performance and the length of the CRL list or is there any other reason, such as a limitation on the size of the config transaction ?    If performance is the concern memory or CPU time ?   ></body> </Action>
<Action id="67031" issue="16832" author="sykesm" type="comment" body="Stale" created="2020-01-22 19:10:48.0" updateauthor="sykesm" updated="2020-01-22 19:10:48.0"/>
