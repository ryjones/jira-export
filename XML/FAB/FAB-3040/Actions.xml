<Action id="23577" issue="15621" author="christopherferris" type="comment" body=" ~JonathanLevi  thanks for setting this up!" created="2017-05-08 22:10:07.0" updateauthor="christopherferris" updated="2017-05-08 22:10:07.0"/>
<Action id="23660" issue="15621" author="christopherferris" type="comment" created="2017-05-10 16:22:31.0" updateauthor="christopherferris" updated="2017-05-10 16:26:46.0"> <body><! CDATA so,  ~JonathanLevi   ~mastersingh24   ~binhn   ~muralisr   ~kchristidis   ~yacovm   ~C0rWin   ~greg.haskins   ~jyellick   ~smithbk   ~jimthematrix   ~sheehan   ~tamasblummer   ~hgabre   I think we need to nail down which components are to be released as v1.0.0-alpha2. As I see it, only the following are ready.   fabric  fabric-sdk-node  fabric-ca  fabric-chaintool   I also believe that while some of the Java Chaincode code has been merged, it isn't ready. Hence we should look at backing that out to a feature branch.  The other SDKs can certainly catch up and release something that is suitable for use with v1.0.0-alpha2, but I don't think we should wait on their readiness.  Please comment here if you agree. We are close!  Thanks,  Chris  ></body> </Action>
<Action id="23661" issue="15621" author="christopherferris" type="comment" body="oh, apologies, should include fabric-chaintool in the release, too.  ~greg.haskins " created="2017-05-10 16:26:11.0" updateauthor="christopherferris" updated="2017-05-10 16:26:11.0"/>
<Action id="23662" issue="15621" author="yacovm" type="comment" created="2017-05-10 16:30:12.0" updateauthor="yacovm" updated="2017-05-10 16:30:12.0"> <body><! CDATA {quote}I also believe that while some of the Java Chaincode code has been merged, it isn't ready. Hence we should look at backing that out to a feature branch.  The other SDKs can certainly catch up and release something that is suitable for use with v1.0.0-alpha2, but I don't think we should wait on their readiness. {quote}    +1  I agree here. We have the needed functionality for an end-to-end flow with fabric go chaincode and nodeSDK     ></body> </Action>
<Action id="23663" issue="15621" author="jonathanlevi" type="comment" body="+2. Specifically: 3 components: *fabric*, *fabric-sdk-node*, *fabric-ca* (and we can cherry-picking what we want to take from the Java Chaincode). ** And, no, I do *not* think we should hold off tagging just in order to wait to the other SDKs. If they catch up for the 1.0-RCs, we can re-consider. IMO." created="2017-05-10 16:31:11.0" updateauthor="jonathanlevi" updated="2017-05-10 16:31:11.0"/>
<Action id="23668" issue="15621" author="muralisr" type="comment" created="2017-05-10 17:33:29.0" updateauthor="muralisr" updated="2017-05-10 19:30:21.0"> <body><! CDATA  ~ChristopherFerris   ~yacovm  Re java chaincode.. Agree it hasn't been exercised much and is not ready yet but it's there and doesn't break anything (even has UT running). It *is* somewhat usable though (but  ~sanchezl  will keep me honest here... ).   I'm just worried cost of backing out would be more than letting it be.  How would "backing out the feature branch work" ? Java chaincode framework is part of the `fabric` just like go, SCC and chaintool are. It wouldn't be easy to back out and we would have to work to put it back too (unless I'm missing something).  Perhaps we could doc it as not-supported, or even add a check in code to disable to prevent users from using it in alpha.   My suggestion would be to accept the last one https://jira.hyperledger.org/browse/FAB-3235 and stop any more work on Java CC till we get the green. (BTW, FAB-3235 will complete https://jira.hyperledger.org/browse/FAB-3218 that's currently in the "blocked" list.)  ></body> </Action>
<Action id="23671" issue="15621" author="christopherferris" type="comment" body=" ~mastersingh24  removing https://jira.hyperledger.org/browse/FAB-3310 from blockers since it isn&apos;t likely that this will be done by Friday. LMK if you disagree." created="2017-05-10 17:57:01.0" updateauthor="christopherferris" updated="2017-05-10 17:57:01.0"/>
<Action id="23673" issue="15621" author="christopherferris" type="comment" body="removing https://jira.hyperledger.org/browse/FAB-3555 from blockers per  ~denyeart " created="2017-05-10 18:00:38.0" updateauthor="christopherferris" updated="2017-05-10 18:00:38.0"/>
<Action id="23691" issue="15621" author="christopherferris" type="comment" body=" ~muralisr  will 3235 leave us with complete function?  ~mastersingh24  your thoughts? I know we discussed previously and the thinking was omit for now until we can get it solid. IMO, we could omit it and work a feature branch and people could pull from that if they want to experiment. I&apos;d favor putting out something known to be solid than taking risk that it isn&apos;t." created="2017-05-10 19:27:01.0" updateauthor="christopherferris" updated="2017-05-10 19:27:40.0"/>
<Action id="23693" issue="15621" author="jimthematrix" type="comment" body="just added FAB-3806 to list of blockers. it&apos;s for updating node SDK packages&apos; readmes for NPM publishing purposes, to reflect the new location of the developer&apos;s documentation: https://fabric-sdk-node.github.io/" created="2017-05-10 19:39:44.0" updateauthor="jimthematrix" updated="2017-05-10 19:39:44.0"/>
<Action id="23694" issue="15621" author="binhn" type="comment" body=" ~ChristopherFerris  3235 won&apos;t complete the java chaincode feature; still missing some shim APIs.  I agreed to move java chaincode out into a feature, but that would require some planning, especially in the build process ( ~greg.haskins ) that I think we should discuss in a separate Jira." created="2017-05-10 19:51:16.0" updateauthor="binhn" updated="2017-05-10 19:51:16.0"/>
<Action id="23695" issue="15621" author="jimthematrix" type="comment" created="2017-05-10 19:51:22.0" updateauthor="jimthematrix" updated="2017-05-10 19:51:22.0"> <body><! CDATA also I'd like to add java SDK to the list of alpha2 components. feature-wise it's caught up. main problem is  - still can't publish to maven due to CI configurations (having problems authenticating to nexus) - zero developers documentation (there's the readme but it's mainly for those chasing the master)  A lot of interest in the community and I bet many are holding off because there hasn't been a somewhat stable release yet.  So what do others think?  ></body> </Action>
<Action id="23696" issue="15621" author="christopherferris" type="comment" created="2017-05-10 19:58:42.0" updateauthor="christopherferris" updated="2017-05-10 19:58:42.0"> <body><! CDATA  ~jimthematrix  it could follow shortly after, once the maven CI kinks are worked out. Thoughts? Specifically, that is one blocker holding up the release.     ></body> </Action>
<Action id="23700" issue="15621" author="muralisr" type="comment" body=" ~binhn   ~ChristopherFerris  right...3235 won&apos;t complete Java CC but *will* complete the &apos;blocked&apos;  FAB-3218 item. FAB-3218 lists all the shim APIs that are completed." created="2017-05-10 20:47:50.0" updateauthor="muralisr" updated="2017-05-10 20:47:50.0"/>
<Action id="23710" issue="15621" author="jimthematrix" type="comment" body=" ~ChristopherFerris  sure, we could let the maven CI work run its due course and cut a Java SDK alpha2 at that point. no need to hold off the rest on that. I was thinking to let Java SDK be part of the alpha2 without maven publish, but instead ask users to git clone the v1.0.0-alpha2 tag from fabric-sdk-java repo. But guess it&apos;s better to wait until it&apos;s published to nexus and registered with maven." created="2017-05-10 23:57:17.0" updateauthor="jimthematrix" updated="2017-05-10 23:57:17.0"/>
<Action id="23711" issue="15621" author="jimthematrix" type="comment" body="re: java CC I also think it&apos;s best to leave it in there with a disclaimer that it&apos;s AS-IS and main purpose is for prospect users to evaluate the shim APIs. I don&apos;t believe install/instantiate java CC is robust enough at this point. but also don&apos;t create work for ourselves to rip out what&apos;s in there already." created="2017-05-10 23:59:37.0" updateauthor="jimthematrix" updated="2017-05-10 23:59:37.0"/>
<Action id="23731" issue="15621" author="christopherferris" type="comment" body=" ~jimthematrix   ~rameshthoomu  I presume we can manually publish JAVA SDK and whatever else is needed to maven even if FAB-648 is not resolved? " created="2017-05-11 12:26:45.0" updateauthor="christopherferris" updated="2017-05-11 12:26:45.0"/>
<Action id="23732" issue="15621" author="muralisr" type="comment" created="2017-05-11 12:32:05.0" updateauthor="muralisr" updated="2017-05-11 12:32:05.0"> <body><! CDATA +1  ~jimthematrix   But if we feel its better to prevent usage than tell "not-supported" in Rocket, it would not be hard to add "WIP-not supported" if CC type is JAVA in the endorser before calling the chaincode. For good measure we could add it in the CLI too right upfront.  ></body> </Action>
<Action id="23733" issue="15621" author="christopherferris" type="comment" body="+1 to disabling in CLI" created="2017-05-11 12:41:28.0" updateauthor="christopherferris" updated="2017-05-11 12:41:28.0"/>
<Action id="23746" issue="15621" author="muralisr" type="comment" body=" ~ChristopherFerris  I&apos;ll get up a &quot;disable java CC&quot; CR ready to go based on decision. Created https://jira.hyperledger.org/browse/FAB-3850. We can associate it with this JIRA pending decision." created="2017-05-11 14:55:25.0" updateauthor="muralisr" updated="2017-05-11 15:04:22.0"/>
<Action id="23758" issue="15621" author="muralisr" type="comment" body="https://gerrit.hyperledger.org/r/#/c/9245 disables Java if we decide to go that route." created="2017-05-11 18:40:12.0" updateauthor="muralisr" updated="2017-05-11 18:40:12.0"/>
<Action id="23759" issue="15621" author="christopherferris" type="comment" body="thanks  ~muralisr  LGTM will wait for build to complete" created="2017-05-11 18:51:28.0" updateauthor="christopherferris" updated="2017-05-11 18:51:28.0"/>
<Action id="23778" issue="15621" author="christopherferris" type="comment" body="So, as of now, if we merge FAB-2982 and FAB-3850 and  ~rameshthoomu  can verify we have Maven working, we are GTG. I suggest that we remove FAB-3218 from blocking, and that it can be completed post alpha2." created="2017-05-12 00:46:38.0" updateauthor="christopherferris" updated="2017-05-12 00:46:38.0"/>
<Action id="23779" issue="15621" author="muralisr" type="comment" created="2017-05-12 01:33:49.0" updateauthor="muralisr" updated="2017-05-12 01:33:49.0"> <body><! CDATA  ~ChristopherFerris  https://gerrit.hyperledger.org/r/#/c/8529/ (FAB-3235)  has been reviewed and is good to go. Its the last one in a fairly big list of Java merges and will close FAB-3218.  Instead of removing FAB-3218 from blocking, can we merge https://gerrit.hyperledger.org/r/#/c/8529/ which would close FAB-3235 and its parent FAB-3218 ?  ></body> </Action>
<Action id="23792" issue="15621" author="christopherferris" type="comment" body="ok, I can go with that plan as long as we merge your patch to disable JavaCC,  ~muralisr   ~mastersingh24   ~JonathanLevi   ~binhn   ~greg.haskins  what do you think? If we merge these, and the CR for FAB-3737, then I think we can begin the process of tagging and bagging alpha2." created="2017-05-12 11:20:05.0" updateauthor="christopherferris" updated="2017-05-12 11:20:05.0"/>
<Action id="23930" issue="15621" author="yacovm" type="comment" created="2017-05-17 11:28:05.0" updateauthor="yacovm" updated="2017-05-17 13:10:25.0"> <body><! CDATA Can we add https://jira.hyperledger.org/browse/FAB-3715 and https://jira.hyperledger.org/browse/FAB-3359 to this list?   ~ChristopherFerris   ~mastersingh24   ~JonathanLevi   ></body> </Action>
<Action id="24012" issue="15621" author="christopherferris" type="comment" body=" ~yacovm  seems reasonable to me." created="2017-05-18 12:39:28.0" updateauthor="christopherferris" updated="2017-05-18 12:39:45.0"/>
<Action id="24014" issue="15621" author="c0rwin" type="comment" body="I think that both FAB-3715 and FAB-3359 are pretty important and should be in the list for v1.0." created="2017-05-18 13:01:33.0" updateauthor="c0rwin" updated="2017-05-18 13:01:33.0"/>
<Action id="24016" issue="15621" author="greg.haskins" type="comment" body="Propose FAB-3118 be considered" created="2017-05-18 13:25:36.0" updateauthor="greg.haskins" updated="2017-05-18 13:25:36.0"/>
<Action id="24018" issue="15621" author="jonathanlevi" type="comment" body="I concur with the above and will add both FAB-3715 and FAB-3359 as these have been proposed earlier and we have heard no objection to including these." created="2017-05-18 13:46:03.0" updateauthor="jonathanlevi" updated="2017-05-18 13:46:03.0"/>
<Action id="24019" issue="15621" author="jonathanlevi" type="comment" body=" ~greg.haskins  I, too, believe that FAB-3118 should be considered and added to, subject to others agreeing with it." created="2017-05-18 13:46:21.0" updateauthor="jonathanlevi" updated="2017-05-18 13:46:21.0"/>
<Action id="24042" issue="15621" author="vpaprots" type="comment" body="Propose FAB-3968 to be considered. Before I add more tests, I wanted to remove the code duplicates SW BCCSP that is already tested, so that I wont have to copy even more things from SW BCCSP" created="2017-05-18 18:19:44.0" updateauthor="vpaprots" updated="2017-05-18 19:21:47.0"/>
<Action id="24230" issue="15621" author="yacovm" type="comment" body="I think that both  FAB-4078|https://jira.hyperledger.org/browse/FAB-4078  and  FAB-4085|https://jira.hyperledger.org/browse/FAB-4085  have to get in, because they are critical bugs in gossip. " created="2017-05-24 12:09:09.0" updateauthor="yacovm" updated="2017-05-24 12:09:09.0"/>
