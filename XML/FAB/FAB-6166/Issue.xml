<Issue id="20832" key="FAB-6166" number="6166" project="10002" reporter="bur" assignee="bur" creator="bur" type="10004" summary=" MSP  identity serialization does not encode PEM type" priority="3" resolution="10000" status="6" created="2017-09-14 16:32:18.0" updated="2018-07-20 14:14:23.0" resolutiondate="2017-10-18 15:48:27.0" votes="0" watches="1" workflowId="40014"> <description><! CDATA Currently a serialzed identity includes the MSPID and the PEM encoded cert. However, the PEM type is missing.  This looks like the following example:    {code:java} peer-1�-----BEGIN ----- MIICKTCCAdCgAwIBAgIBAjAKBggqhkjOPQQDAjAvMQ8wDQYDVQQKDAZwZWVyLTEx DzANBgNVBAsMBnBlZXItMTELMAkGA1UEAwwCQ0EwHhcNMTcwOTA1MTE0NTExWhcN MzcwODMxMTE0NTExWjA8MQ8wDQYDVQQKDAZwZWVyLTExDzANBgNVBAsMBnBlZXIt MTELMAkGA1UECwwCZ3cxCzAJBgNVBAMMAmd3MFkwEwYHKoZIzj0CAQYIKoZIzj0D AQcDQgAEtUKUTDH2bUiL8iD6PmVHpMTghazjTI0YsCo+rbYTb3/xQX4CnMsedtlP ntb6viBhgefib7zxH7I8KZb9Y2Hll6OBzzCBzDAJBgNVHRMEAjAAMBEGCWCGSAGG +EIBAQQEAwIFoDAzBglghkgBhvhCAQ0EJhYkT3BlblNTTCBHZW5lcmF0ZWQgQ2xp ZW50IENlcnRpZmljYXRlMB0GA1UdDgQWBBSPcil0OSyq4vkJACDUMpIyvtKrWjAf BgNVHSMEGDAWgBS0CqebsJhPowEy+sQ9Uks5jocH4jAOBgNVHQ8BAf8EBAMCBeAw JwYDVR0lBCAwHgYIKwYBBQUHAwIGCCsGAQUFBwMEBggrBgEFBQcDATAKBggqhkjO PQQDAgNHADBEAiBQCD6vx4RflFdtZjPE9q5nUwe7lcWBKW3WSDMPjjsy2wIgdq3y 0C5XXDXvWz7y/lKdaAXvSwAYGuY61FdPwFTgThs= -----END -----{code}    Attached, you can find a block retrieved from QSCC which shows that some cert PEMs do not have a type.     Here is a fix:    {code:java} // Serialize returns a byte array representation of this identity func (id *identity) Serialize() (  byte, error) { // mspIdentityLogger.Infof("Serializing identity %s", id.id) pb := &pem.Block{Type: "CERTIFICATE", Bytes: id.cert.Raw} pemBytes := pem.EncodeToMemory(pb) if pemBytes == nil { return nil, fmt.Errorf("Encoding of identitiy failed") } // We serialize identities by prepending the MSPID and appending the ASN.1 DER content of the cert sId := &msp.SerializedIdentity{Mspid: id.id.Mspid, IdBytes: pemBytes} idBytes, err := proto.Marshal(sId) if err != nil { return nil, fmt.Errorf("Could not marshal a SerializedIdentity structure for identity %s, err %s", id.id, err) } return idBytes, nil } {code}       ></description> </Issue>
