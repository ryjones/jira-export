<Issue id="27992" key="FAB-8505" number="8505" project="10002" reporter="ratnakar" assignee="ratnakar" creator="ratnakar" type="10002" summary=" Interoperability test   multiple release test using Node.js SDK" priority="3" resolution="10000" status="6" created="2018-02-24 18:37:40.0" updated="2018-07-20 14:15:51.0" resolutiondate="2018-06-19 19:32:26.0" votes="0" watches="1" workflowId="41357"> <description><! CDATA ||Integration test suite||Node.js SDK||Fabric||Fabric-CA|| Failed|| |1.0|1.0|1.1|1.0|Refer  #Case 1  below| |1.0|1.0|1.0|1.1|Refer Case 2 below| |1.0|1.0|1.1|1.1|Refer Case 3 below| |1.0|1.1|1.1|1.1|Refer Case 4 below|     Pre-requisite:  1. You have pulled with TAG *x86_64-1.0.3*  2. and Generate the latest images on master branch of fabric repo    ----  #Case 1  {code:java} app/tests at 1.0 , SDK at 1.0 and Fabric-CA at 1.0. However Fabric is at 1.1  Step 1 : Clone the repo git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: There needs a tweaking on the docker-compose.yaml (To automate this we might need to provide 3 environment variables in future ? ex: Fabric  peer/orderer  , Fabric-CA and 3rd party docker-images  couchdb )  For now, hardcode the DOCKER_IMG_TAG with ":latest" on peer and orderer image section and couchdb with `uname -m`"-0.4.6"  Step4: As part of this compatibility tests we wouldn't want to test the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95  Step5: Execute the following command and make sure all the tests are passing now "gulp test" {code} ---- Case 2 {code:java} app/tests at 1.0 , SDK at 1.0 and Fabric at 1.0 However Fabric-CA is at 1.1  Step 1 : Clone the repo git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: There needs a tweaking on the docker-compose.yaml (To automate this we might need to provide 3 environment variables in future ? ex: Fabric  peer/orderer  , Fabric-CA and 3rd party docker-images  couchdb )  For now, hardcode the DOCKER_IMG_TAG with ":latest" on CA section  Step4: As part of this compatibility tests we wouldn't want to test the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95  Step5: Execute the following command and make sure all the tests are passing now "gulp test"  {code} ---- Case 3 {code:java} app/tests at 1.0 , SDK at 1.0 and Fabric at 1.0 However Fabric-CA is at 1.1  Step 1 : Clone the repo git clone https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: There needs a tweaking on the docker-compose.yaml (To automate this we might need to provide 3 environment variables in future ? ex: Fabric  peer/orderer  , Fabric-CA and 3rd party docker-images  couchdb )  For now, hardcode all DOCKER_IMG_TAG with ":latest" all images and "x86_64-0.4.6" for couchdb  Step4: As part of this compatibility tests we wouldn't want to test the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95  Step5: Execute the following command and make sure all the tests are passing now "gulp test" {code} ---- Case 4: {code:java} app/tests at 1.0 , SDK at 1.0 and Fabric at 1.0 However Fabric-CA is at 1.1  Step 1 : Clone the repo git clone -b master https://github.com/hyperledger/fabric-sdk-node cd fabric-sdk-node  Step 2: Install the node modules npm install  Step 3: remove the test folder and copy from fabric-sdk-node release branch rm -rf test cp -r <fabric-sdk-node release branch>/tests tests  Step 4: There needs a tweaking on the docker-compose.yaml (To automate this we might need to provide 3 environment variables in future ? ex: Fabric  peer/orderer  , Fabric-CA and 3rd party docker-images  couchdb )  For now, hardcode all DOCKER_IMG_TAG with ":latest" all images and "x86_64-0.4.6" for couchdb  Step 5: As part of this compatibility tests we wouldn't want to test the unit tests Remove the unit test section (see following) from gulp task i.e, from build/tasks/test.js https://github.com/hyperledger/fabric-sdk-node/blob/release/build/tasks/test.js#L92-L95  Step 6: Execute the following command and make sure all the tests are passing now "gulp test" {code}  ></description> </Issue>
