<Action id="60170" issue="39932" author="sykesm" type="comment" body="/cc  ~nirro " created="2019-05-20 18:20:10.0" updateauthor="sykesm" updated="2019-05-20 18:20:10.0"/>
<Action id="60171" issue="39932" author="sykesm" type="comment" body="https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/12246/console" created="2019-05-20 18:20:47.0" updateauthor="sykesm" updated="2019-05-20 18:20:47.0"/>
<Action id="60181" issue="39932" author="mhbauer" type="comment" body="This is the same core issue as described in FAB-13539." created="2019-05-20 23:17:00.0" updateauthor="mhbauer" updated="2019-05-20 23:17:00.0"/>
<Action id="60224" issue="39932" author="swetharepakula" type="comment" body="This issue might be slightly different.  FAB-13539 has the situation of communication going both directions so there is a race in receiving the message before the connection is dropped for the other direction. Here all the messages are sent in one direction so don&apos;t think they are exactly the same." created="2019-05-21 23:04:13.0" updateauthor="swetharepakula" updated="2019-05-21 23:04:13.0"/>
<Action id="60227" issue="39932" author="mhbauer" type="comment" body="Just when I thought I had a handle on it. Truly terrifying." created="2019-05-22 00:11:32.0" updateauthor="mhbauer" updated="2019-05-22 00:11:32.0"/>
<Action id="60378" issue="39932" author="swetharepakula" type="comment" body="The core issue here is that there is a race between the same client creating a connection (onConnected) and getting another message before the first connection has been serviced causing a race between the two and multiple messages being dropped. I think the first step should be differentiating between incoming and outgoing connections so we should not close a connection if the connection is going in the direction we want. /cc  ~MHBauer " created="2019-05-24 19:02:29.0" updateauthor="swetharepakula" updated="2019-05-24 19:54:51.0"/>
<Action id="60392" issue="39932" author="swetharepakula" type="comment" body="https://gerrit.hyperledger.org/r/c/fabric/+/31552" created="2019-05-24 23:18:11.0" updateauthor="swetharepakula" updated="2019-05-24 23:18:11.0"/>
<Action id="60393" issue="39932" author="swetharepakula" type="comment" body="added some hygiene changes found in the process of investigating the flake" created="2019-05-24 23:19:58.0" updateauthor="swetharepakula" updated="2019-05-24 23:19:58.0"/>
<Action id="60446" issue="39932" author="swetharepakula" type="comment" body="split out hygiene changes into its own cr: https://gerrit.hyperledger.org/r/c/fabric/+/31580" created="2019-05-28 19:23:59.0" updateauthor="swetharepakula" updated="2019-05-28 19:23:59.0"/>
<Action id="61423" issue="39932" author="mhbauer" type="comment" created="2019-07-02 19:09:27.0" updateauthor="mhbauer" updated="2019-07-02 19:11:07.0"> <body><! CDATA test refactored into something that can't fail this way   https://gerrit.hyperledger.org/r/#/c/fabric/+/31841/|https://gerrit.hyperledger.org/r/#/c/fabric/+/31841/10/gossip/comm/comm_test.go   ></body> </Action>
<Action id="61448" issue="39932" author="swetharepakula" type="comment" created="2019-07-03 12:56:23.0" updateauthor="swetharepakula" updated="2019-07-03 12:56:23.0"> <body><! CDATA though the test is refactored the race that was found is still there.     this patch is still open to fix that race:  https://gerrit.hyperledger.org/r/#/c/fabric/+/31552/   ></body> </Action>
<Action id="68420" issue="39932" author="denyeart" type="comment" created="2020-03-18 21:44:37.0" updateauthor="denyeart" updated="2020-03-18 21:44:37.0"> <body><! CDATA State is unclear on this one: https://gerrit.hyperledger.org/r/#/c/fabric/+/31841/ was merged. https://gerrit.hyperledger.org/r/#/c/fabric/+/31552/ was abandoned. Since no recurrence noted since July though, I'll go ahead and close, please re-open if there is evidence of recurrence.   ></body> </Action>
