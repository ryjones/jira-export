<Issue id="46152" key="FAB-18246" number="18246" project="10002" reporter="tock" assignee="wlahti" creator="tock" type="10001" summary="Expose an Admin endpoint for the channel participation API" priority="2" resolution="10000" status="6" created="2020-09-25 05:29:17.0" updated="2020-10-26 13:21:15.0" resolutiondate="2020-10-26 13:21:15.0" votes="0" watches="2" workflowId="60056" archived="N"> <description><! CDATA The channel participation API endpoint should adopts the style of the  "Operations" API (( https://hyperledger-fabric.readthedocs.io/en/release-2.0/operations_service.html#operations-security )) in the orderer.     We intend to provide an additional HTTP server that is hosted only the orderer, and expose the endpoint `/participation/v1`, which has a single resource `/channels`. the orderer configuration, as  expressed in the `orderer.yaml` file, will identify endpoint configuration parameters that are unique to the channel  participation API. The _local orderer channel participation admin_ is not identified by the MSP, but rather through mutual TLS. Like in the operations API that handles log-spec,     1. Add to the config of `ChannelParticipation:` in `orderer.yaml` the following parameters:   {code:yaml}   # host and port for the operations server   ListenAddress: 127.0.0.1:8443    # TLS configuration for the operations endpoint   TLS:    # TLS enabled     Enabled: false    # Certificate is the location of the PEM encoded TLS certificate     Certificate:    # PrivateKey points to the location of the PEM-encoded key     PrivateKey:    # ClientAuthRequired requires client certificate authentication  # at the TLS layer to access all resources.     ClientAuthRequired: false    # Paths to PEM encoded ca certificates to trust for client authentication     ClientRootCAs:    {code} 2. Define a separate (new) HTTP server in `server/main.go` and register the channel participation HTTP handler to it, rather than to the operations API.  ></description> </Issue>
