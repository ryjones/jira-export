<Issue id="34896" key="FAB-12614" number="12614" project="10002" reporter="yuki-kon" assignee="yuki-kon" creator="yuki-kon" type="10002" summary="Improve Chaincode’s MockStub: MockPeerChaincode receives channel name for CC2CC on other channel" priority="3" resolution="10000" status="6" created="2018-10-25 21:37:10.0" updated="2019-03-08 10:11:21.0" resolutiondate="2019-03-08 10:11:21.0" votes="0" watches="1" workflowId="46316"> <description><! CDATA In Chaincode’s MockStub, MockPeerChaincode should receive channel name as an additional parameter for CC2CC on other channel.  h2. Issue Chaincode’s MockStub has an API “InvokeChaincode”, which is used for unit tests invoking another chaincode. This function regards chaincodeName as a composite name internally: chaincodeName = chaincodeName + "/" + channel.  {noformat} func (stub *MockStub) InvokeChaincode(chaincodeName string, args     byte, channel string) pb.Response { // Internally we use chaincode name as a composite name if channel != "" { chaincodeName = chaincodeName + "/" + channel } otherStub := stub.Invokables chaincodeName  res := otherStub.MockInvoke(stub.TxID, args) return res } {noformat}  Before calling another chaincode from “InvokeChaincode”, it is required to register another MockStub by calling “MockPeerChaincode”. This function assumes to get invokableChaincodeName as a composite name according to the internal rule described above. {noformat} func (stub *MockStub) MockPeerChaincode(invokableChaincodeName string, otherStub *MockStub) { stub.Invokables invokableChaincodeName  = otherStub } {noformat}  When a chaincode invokes a chaincode on another channel, developers have to use a composite name following the rule manually. In addition, the rule is not described in API usage. {noformat} stub.MockPeerChaincode("othercc/mychan", stub2) {noformat}  h2. Proposal To improve usability, “MockPeerChaincode” should receive channel name as a parameter. In addition, we need to update chaincode samples invoking another chaincode to follow the change.   ></description> </Issue>
