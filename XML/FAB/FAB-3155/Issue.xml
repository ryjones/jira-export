<Issue id="15742" key="FAB-3155" number="3155" project="10002" reporter="elli-androulaki" assignee="ales" creator="elli-androulaki" type="10001" summary="LCCC tx for chaincode deploy/upgrade: vscc security checks" priority="3" resolution="10000" status="6" created="2017-04-14 10:17:32.0" updated="2018-07-20 18:56:23.0" resolutiondate="2017-05-02 19:25:03.0" votes="0" watches="3" workflowId="37988"> <description><! CDATA Special case of FAB-2091 and aims to address instantiation specific checks:  - ensure creator / creator signature are valid and satisfy the chaincode's instantiation policy - ensure a chaincode with the same name has not been added to the channel - ensure consistency of the item included in the write set, i.e., chaincode identifier, instantiation policy, chaincode name and hash of binary code. - does not overwrite existing chaincode entry  We need to do a check for upgrade.  Checks that need to be done at commit time: * Same checks as during endorsement time (FAB-2931) * Validation of the rw-set: instantiate can only create new entries, upgrade can only modify existing entries (read must be on the same key as the write and the key must match the invocation parameter) * The tx submitter needs to satisfy the channel's CC instantiation policy. This policy needs to be added to the genesis block (optional?). * The endorsements need to satisfy the channel's CC instantiation endorsement policy. This policy needs to be added to the genesis block (optional?).  Regarding CC instantiation endorsement policy: A potential channel CC instantiation endorsement policy would be that a member of each MSP is required to co-endorse the simulation result of a given instantiation request for the corresponding transaction to be accepted. However, in certain cases defined MSPs (and respective applications) do not own peers. If the submitter is trusted to choose endorsers that would not maliciously alter the LCCC state, no CC instantiation endorsement policy is needed.  ></description> </Issue>
