<Action id="30351" issue="20520" author="senthil1" type="comment" body=" ~denyeart " created="2017-08-30 04:12:14.0" updateauthor="senthil1" updated="2017-08-30 04:12:14.0"/>
<Action id="30353" issue="20520" author="yacovm" type="comment" created="2017-08-30 07:51:19.0" updateauthor="yacovm" updated="2017-08-30 07:51:19.0"> <body><! CDATA Yes, I added TLS mutual authentication for chaincode shim, but I don't see how it follows from here that I should be assigned to this JIRA item that re-introduces a test that has been disabled for ages? Also - why is this a HIGH priority bug? It doesn't affect production.   ></body> </Action>
<Action id="30359" issue="20520" author="senthil1" type="comment" body="exectransaction_test.go was disabled as it was taking significant time. We have been using this unit test internally to perform e2e test of Chaincode APIs. It was working fine till FAB-5406 got merged. " created="2017-08-30 12:13:49.0" updateauthor="senthil1" updated="2017-08-30 12:13:49.0"/>
<Action id="30361" issue="20520" author="yacovm" type="comment" created="2017-08-30 13:40:30.0" updateauthor="yacovm" updated="2017-08-30 13:40:30.0"> <body><! CDATA {quote}We have been using this unit test internally to perform e2e test of Chaincode APIs.{quote}  Who is we? I have no knowledge of this test being used anywhere.  ></body> </Action>
<Action id="30366" issue="20520" author="senthil1" type="comment" created="2017-08-30 13:52:49.0" updateauthor="senthil1" updated="2017-08-30 13:52:49.0"> <body><! CDATA 'We' refers to ledger team. We run this test manually by explicitly enabling TestQueries() in exectransaction_test.go and run the test from fabric/core/chaincode using `$ go test -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=1.1.0-snapshot-238e155 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.3.2 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger" -run Queries`  `make test-cmd` provides the above go test flags. CI does not run any unit test in exectransaction_test.go.  Anyway, we are enabling TestQueries() in CI mainly to avoid future problems.  https://gerrit.hyperledger.org/r/#/c/12257/  fails because of missing TLS certificate. Temporarily, I can fix this error by setting tls to false in initPeer() as it will not affect query API testing.   ></body> </Action>
<Action id="30626" issue="20520" author="muralisr" type="comment" body="Need to investigate what needs to be done to disable TLS for this UT that is needed for Side DB." created="2017-09-07 17:37:07.0" updateauthor="muralisr" updated="2017-09-07 17:37:07.0"/>
<Action id="30627" issue="20520" author="denyeart" type="comment" created="2017-09-07 17:37:55.0" updateauthor="denyeart" updated="2017-09-07 17:37:55.0"> <body><! CDATA exectransation is re-enabled in:  https://gerrit.hyperledger.org/r/#/c/12257/18/core/chaincode/exectransaction_test.go  , but with viper.Set("peer.tls.enabled", false).  This work item will make exectransation work with TLS.  ></body> </Action>
<Action id="33173" issue="20520" author="muralisr" type="comment" body=" ~denyeart  exectransaction_test.go was retired so was not kept up-to-date with other changes such as TLS. Is the work around to disable TLS you mention sufficient to close this bug ?" created="2017-10-25 16:00:08.0" updateauthor="muralisr" updated="2017-10-25 16:00:08.0"/>
<Action id="33176" issue="20520" author="denyeart" type="comment" body=" ~muralisr  exectransaction_test.go was brought out of retirement to help test queries.  As far as I am concerned, it is serving our purpose without TLS enabled.  If there is TLS coverage elsewhere, then I agree you can close this one." created="2017-10-25 16:26:56.0" updateauthor="denyeart" updated="2017-10-25 16:26:56.0"/>
<Action id="33180" issue="20520" author="muralisr" type="comment" created="2017-10-25 16:58:44.0" updateauthor="muralisr" updated="2017-10-25 16:58:44.0"> <body><! CDATA  ~denyeart  There is some ... in particular that touch various aspects of TLS support in the chaincode https://gerrit.hyperledger.org/r/#/c/13451/ https://gerrit.hyperledger.org/r/#/c/11913/  While there's nothing that actually tests peer-CC TLS communication, vote we open a separate JIRA to implement that on the new chaincode test framework (given exectransaction_test.go was retired) and close this JIRA ?  ></body> </Action>
<Action id="33183" issue="20520" author="denyeart" type="comment" body=" ~muralisr  Agreed - go ahead and close this defect and open a new feature/task for peer-CC TLS communication test on the new chaincode test framework.  (I&apos;d do it, but I&apos;m sure you&apos;ll word it better than me!)" created="2017-10-25 17:40:47.0" updateauthor="denyeart" updated="2017-10-25 17:40:47.0"/>
<Action id="33184" issue="20520" author="denyeart" type="comment" body=" ~muralisr  Yacov mentioned that TLS is tested during e2e CI already, so probably ok not to have a separate unit test." created="2017-10-25 17:52:12.0" updateauthor="denyeart" updated="2017-10-25 18:04:30.0"/>
<Action id="33185" issue="20520" author="muralisr" type="comment" body=" ~denyeart  Absolutely.  created/linked https://jira.hyperledger.org/browse/FAB-6761. I made it an improvement and not a bug as there were already tests... but if I can see it as a bug too. Feel free to change it bug if that&apos;s a better characterization." created="2017-10-25 18:01:35.0" updateauthor="muralisr" updated="2017-10-25 18:02:32.0"/>
<Action id="33186" issue="20520" author="muralisr" type="comment" body=" ~denyeart  Our comments crossed... as I opneed it as an improvement, perhaps let it be there. It will be a good one for someone to pick and contribute (and I can help)." created="2017-10-25 18:04:41.0" updateauthor="muralisr" updated="2017-10-25 18:04:41.0"/>
