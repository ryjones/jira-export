<Action id="19946" issue="13458" author="mastersingh24" type="comment" created="2016-12-04 12:49:39.0" updateauthor="mastersingh24" updated="2016-12-04 12:58:49.0"> <body><! CDATA This is not a "bug" as things are working as designed and actually vendoring is the preferred (and really only) method in Golang for ensuring that you always package proper versions of your dependencies.  That being said, in V1, there are a couple of changes in both the Fabric and the SDK(s):  1) Fabric now produces two base images for chaincode:   https://hub.docker.com/r/hyperledger/fabric-ccenv/  (for Golang) and  https://hub.docker.com/r/hyperledger/fabric-javaenv/  (for Java) which include all of the Fabric dependencies so for example will no longer need to vendor the Fabric src when deploying Go-based chaincode  2) The SDK(s) now provide an option to specify your own Dockerfile (which is wnat ends up in the tarball that actually is the payload of a deploy transaction).  For example, here's the property in the the Node SDK for V1:  https://github.com/hyperledger/fabric-sdk-node/blob/master/hfc/config/default.json#L11  I will say that you really do not want to be doing {{go get}} for production deployment unless you have used something like gopkg.in for versioning and have locked down dependencies across versions.  For development, this is likely OK.  But in V1, peers can now change after the fact and you would not want them to end up with different versions of chaincode due to {{go get}} always pulling from the master branch  ></body> </Action>
<Action id="19947" issue="13458" author="mastersingh24" type="comment" body="I&apos;m going to mark this done as we are not going to do anything about this for v0.6 but I believe that V1 addresses these concerns" created="2016-12-04 12:56:55.0" updateauthor="mastersingh24" updated="2016-12-04 12:56:55.0"/>
<Action id="19949" issue="13458" author="kletkeman" type="comment" body="Thanks for the explanation. I did convert our contracts to vendoring and it does work perfectly fine. One issue with vendoring is that builds are much slower when the vendor folder is present, so this is mildly annoying during development. But all in all, I am very pleased with how this all works out when deploying to external fabrics such as Bluemix. Looking forward to working with the v1 deployment mechanism." created="2016-12-04 18:15:25.0" updateauthor="kletkeman" updated="2016-12-04 18:15:25.0"/>
