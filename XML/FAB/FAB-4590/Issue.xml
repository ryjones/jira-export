<Issue id="17809" key="FAB-4590" number="4590" project="10002" reporter="rhegde" assignee="greg.haskins" creator="rhegde" type="10004" summary="Fabric Tool (or Peer) fails to instantiate chaincode containing external package" priority="1" resolution="10000" status="6" created="2017-06-13 00:01:19.0" updated="2018-07-20 14:13:18.0" resolutiondate="2017-06-14 19:15:45.0" votes="0" watches="4" workflowId="38982" security="10001"> <description><! CDATA # Our chaincode refers to the external package not part of the cc-env package. # Chaincode installation is success using the Peer CLI/fabric-tool approach however chaincode instantiation fails.  Note - this used to pass on the alpha-release (19th May Build) and fails on the Beta-Release.   Added logs indicating what is part of the installation (deployment payload).   Impact: Currently our fabric-network is bootstrapped using Peer CLI approach, this means even the Upgrade of Chaincode will fail.  This can be reproduced by modifying the chaincode02 example as below:    {quote}diff --git a/examples/chaincode/go/chaincode_example02/chaincode_example02.go b/examples/chaincode/go/chaincode_example02/chaincode_example02.go index 5343806..94bf24e 100644 — a/examples/chaincode/go/chaincode_example02/chaincode_example02.go +++ b/examples/chaincode/go/chaincode_example02/chaincode_example02.go @@ -26,6 +26,7 @@ import (         "fmt"         "strconv"   +        "github.com/shopspring/decimal"         "github.com/hyperledger/fabric/core/chaincode/shim"         pb "github.com/hyperledger/fabric/protos/peer"  ) @@ -68,6 +69,11 @@ func (t *SimpleChaincode) Init(stub shim.ChaincodeStubInterface) pb.Response \{         if err != nil \{                 return shim.Error(err.Error())         } +        +       n, err := decimal.NewFromString("1.2345678912345678e+100") +       if err == nil \{ +               fmt.Println("value:", n, " Exponent: ", n.Exponent(), " sign: ", n.Sign()) +       }           return shim.Success(nil)  } {quote}      {quote}— a/examples/e2e_cli/docker-compose-cli.yaml +++ b/examples/e2e_cli/docker-compose-cli.yaml @@ -57,6 +57,7 @@ services:      command: /bin/bash -c './scripts/script.sh $\{CHANNEL_NAME}; sleep $TIMEOUT'      volumes:          - /var/run/:/host/var/run/ +        - ../../../../shopspring/decimal/:/opt/gopath/src/github.com/shopspring/decimal/          - ../chaincode/go/:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go          - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/      Here is the proposed/potential fix for review:  {{developer@rahul-Inspiron-3442:~/workspace/playtime/go-workspace/src/github.com/hyperledger/fabric$ git diff core/chaincode/platforms/golang/platform.go}} {{diff --git a/core/chaincode/platforms/golang/platform.go b/core/chaincode/platforms/golang/platform.go}} {{index cbe905f..eb2107e 100644}} {{--- a/core/chaincode/platforms/golang/platform.go}} {{+++ b/core/chaincode/platforms/golang/platform.go}} {{@@ -244,6 +244,8 @@ func (goPlatform *Platform) GetDeploymentPayload(spec *pb.ChaincodeSpec) (  byte}} {{ deps := make(map string bool)}}  {{ for _, pkg := range imports \{}} {{+ deps pkg  = true}} {{+}} {{ _deps, err := listDeps(env, pkg)}} {{ if err != nil \{}} {{ return nil, fmt.Errorf("Error obtaining dependencies for %s: %s", pkg, err)}} {quote}  ></description> </Issue>
