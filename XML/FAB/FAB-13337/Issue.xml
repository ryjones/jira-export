<Issue id="36252" key="FAB-13337" number="13337" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10003" summary="Channels that aren&apos;t pulled during onboarding, report not found" priority="3" resolution="10000" status="6" created="2018-12-18 14:11:22.0" updated="2018-12-21 15:45:18.0" resolutiondate="2018-12-21 15:45:18.0" votes="0" watches="2" workflowId="47771"> <description><! CDATA However, when an orderer is onboarded, it skips pulling chains it is not part of. As a result, the genesis blocks aren't committed into the ledger, and when the orderer starts up (after onboarding) - it doesn't have the proper chain objects in the in-memory mapping, and thus it might classify transactions to channels that it doesn't have, as transactions of channel creation that are targeted to the system channel.  Therefore, we maybe should only commit the genesis block and nothing else.   Currently, when an orderer is restarted (one that didn't go through onboarding, but was in the cluster since the dawn of time) and sees that it is not part of a channel it has a config block for - it always returns an error to the clients, saying it is not part of the channel.  If we commit the genesis block (only) for channels that we're not part of (during onboarding) - we'll then present clients a uniform error ("we're not in the channel"), and not have heterogeneous responses that depend on whether the OSN was in the system channel since the beginning or not.  ></description> </Issue>
