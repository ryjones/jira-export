<Issue id="46214" key="FAB-18275" number="18275" project="10002" reporter="denyeart" assignee="JIRAUSER20852" creator="denyeart" type="10002" summary="Extend account-based token Go chaincode sample for full ERC-20 support" priority="3" resolution="10000" status="6" created="2020-10-16 17:02:15.0" updated="2020-12-02 13:28:08.0" resolutiondate="2020-12-02 13:28:08.0" votes="0" watches="1" workflowId="60124" archived="N"> <description><! CDATA  https://github.com/hyperledger/fabric-samples/tree/master/token-account-based   introduced an account-based token sample.  This token sample should be extended to include full ERC-20 support:   https://eips.ethereum.org/EIPS/eip-20   The existing sample has BalanceOf() and Transfer() support.  I'd suggest a series of 4 PRs:  1st PR * TotalSupply()  2nd PR * Approve() * Allowance() * TransferFrom()  3rd PR * Transfer chaincode event * Approve chaincode event  4th PR * Move from directory token-account-based/chaincode-go to token-erc20/chaincode-go, and update root fabric-samples readme to match.  5th PR * Add Burn() function.  (Similar to Mint function, Burn is not in the ERC20 spec but is often implemented).   For a similar sample in node.js chaincode, see  https://github.com/hyperledger/fabric-samples/pull/327 . We should get to functional parity between these samples.     ></description> </Issue>
