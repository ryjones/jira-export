<Action id="68272" issue="42055" author="jyellick" type="comment" body="One thing to be cognizant of here.   Historically, we&apos;ve always set &apos;use leader election&apos; to true, because without it, an org which was not a member of the channel at creation time would have problems pulling blocks and would not gossip because it did not detect its org in the channel.  I&apos;m not certain if that problem still exists in the codebase, but it&apos;s certainly worth testing." created="2020-03-10 18:19:40.0" updateauthor="jyellick" updated="2020-03-10 18:19:40.0"/>
<Action id="69434" issue="42055" author="denyeart" type="comment" body=" ~jyellick The proposal here is that each peer by default would be an org leader and pull blocks from orderer. So I&apos;m not understanding your concern about pulling blocks from your own org... Could you clarify the concern?" created="2020-06-10 14:20:01.0" updateauthor="denyeart" updated="2020-06-10 14:20:01.0"/>
<Action id="69450" issue="42055" author="jyellick" type="comment" created="2020-06-12 04:00:39.0" updateauthor="jyellick" updated="2020-06-12 04:00:39.0"> <body><! CDATA In Fabric v1.0/v1.1 if you attempted to join a peer to a channel, and that peer's org was not a member of the channel at genesis, then unless you set leader election to true, the peer would never sync blocks.  I _believe_ that this included setting leader to true, and not setting leader election to false and leader to false (which, obviously would result in the peer not trusting any of its own peers in the network, and never receiving blocks).  The details of why setting leader to true didn't work elude me, but it is my recollection that the defaults at this time were to disable leader election and have everyone as static leaders, so I _think_ this was a real problem.  For reference, leader election configuration defaults for v1.0 https://github.com/hyperledger/fabric/blob/v1.0.0/sampleconfig/core.yaml#L118-L128  later changed in v1.1 to https://github.com/hyperledger/fabric/blob/v1.1.0/sampleconfig/core.yaml#L144-L154  Regardless, of whether my recollection is correct, we should ensure that we have an integration test of some sort, that includes onboarding a peer, whose organization is not in the genesis block, since we saw this problem historically, and tweaked these defaults in response.  ></body> </Action>
<Action id="69454" issue="42055" author="yacovm" type="comment" created="2020-06-12 17:00:14.0" updateauthor="yacovm" updated="2020-06-12 17:00:14.0"> <body><! CDATA {quote} I _believe_ that this included setting leader to true {quote}    Why do you think that is the case?  ></body> </Action>
<Action id="69456" issue="42055" author="jyellick" type="comment" created="2020-06-12 18:49:53.0" updateauthor="jyellick" updated="2020-06-12 19:11:05.0"> <body><! CDATA Purely my recollection of the bug.  As I said, perhaps it only applied to the other case, it has been almost 3 years.  I'm not certain why the pushback on confirming that our new defaults work for late join via a test?  This is a normal scenario and one that we should have a test for, and we should change this test to use the new defaults.  If one does not already exist we should add it.  ></body> </Action>
<Action id="69461" issue="42055" author="yacovm" type="comment" body="I am not pushing back anything. we should have had these test cases years ago..." created="2020-06-13 12:37:15.0" updateauthor="yacovm" updated="2020-06-13 12:37:15.0"/>
<Action id="69577" issue="42055" author="denyeart" type="comment" body="First PR - change leader election defaults:  https://github.com/hyperledger/fabric/pull/1475" created="2020-06-26 22:05:59.0" updateauthor="denyeart" updated="2020-06-26 22:05:59.0"/>
<Action id="69581" issue="42055" author="denyeart" type="comment" body="Next PR - change buffer size defaults: https://github.com/hyperledger/fabric/pull/1477" created="2020-06-27 08:33:38.0" updateauthor="denyeart" updated="2020-06-27 08:33:38.0"/>
<Action id="69582" issue="42055" author="denyeart" type="comment" body="Next PR - disable state transfer by default: https://github.com/hyperledger/fabric/pull/1478" created="2020-06-27 10:01:35.0" updateauthor="denyeart" updated="2020-06-27 10:01:35.0"/>
