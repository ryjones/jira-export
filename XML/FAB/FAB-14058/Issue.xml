<Issue id="37426" key="FAB-14058" number="14058" project="10002" reporter="scottz" assignee="suryalnvs" creator="scottz" type="10101" summary="Dynamically Onboard an OSN to application channel, while crash existing OSNs" priority="3" resolution="10000" status="6" created="2019-02-04 17:50:28.0" updated="2019-02-25 14:01:48.0" resolutiondate="2019-02-25 14:01:37.0" votes="0" watches="2" workflowId="49029"> <description><! CDATA Repeat FAB-13861 with these differences:  Instead of just 10,000 transactions, generate 100,000 on the channel. This means it would take awhile (over 20 minutes) for the onboarding to complete, which gives us time to restart multiple orderers.  (In the specified IKS lab, it should take approx 2:20 minutes to pull 10,000.)  In the INPUTS section, after step 4, while the new orderer4 (O4) is onboarding, we must stop and start each of the other orderers, one at a time, and eventually stop multiple orderers. # A few seconds after start onboarding O4, look in the O4 logs to determine which orderer it is pulling from; observe INFO logs similar to this (which identifies orderer3 as the source) `Got block 16 of size 12KB from orderer3rd-ordererorg:7050` # Start traffic running again. # Stop the orderer3 container. Look at O4 logs to confirm if it is still pulling blocks - from a different orderer. # Restart orderer3. # Wait about 2 minutes, and then stop and start orderer2. # Wait about 2 minutes, and then stop and start orderer1. # Wait about 2 minutes, and then stop all three orderers, orderer1 and orderer2 and orderer3. This will ensure we stop (for at least the second time) the orderer from which O4 is pulling blocks. This leaves only O4 running, but unable to pull blocks because all other orderers are down at the moment. # Wait about 2 minutes, and restart all the orderers. # Wait about 2 minutes, and look at logs to see if O4 is pulling blocks from orderer1. # Wait a few more minutes; O4 should catch up and finish onboarding.     ></description> </Issue>
