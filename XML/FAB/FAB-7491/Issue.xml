<Issue id="26127" key="FAB-7491" number="7491" project="10002" reporter="gbolo" assignee="yacovm" creator="gbolo" type="10003" summary="client TLS cert support for gossip" priority="3" resolution="10000" status="6" created="2017-12-17 22:23:38.0" updated="2018-07-20 14:15:16.0" resolutiondate="2017-12-20 05:18:30.0" votes="0" watches="2" workflowId="40811"> <description><! CDATA When setting the following options on the peer: {quote}CLIENT TLS OPTIONS FOR PEER CORE_PEER_TLS_CLIENTAUTHREQUIRED=true CORE_PEER_TLS_CLIENTROOTCAS_FILES=/data/tls/ca_root.pem CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem {quote} Peer gossip seems to break: {quote}2017-12-17 18:21:46.965 UTC  gossip/comm  GossipStream -> ERRO 2ef Authentication failed: Expected  67 232 132 7 246 23 86 113 92 109 252 25 76 80 22 116 173 247 79 106 80 232 108 84 39 197 150 112 7 145 55 118  in remote hash of TLS cert, but got  132 27 132 114 21 44 231 194 132 181 199 159 196 218 104 76 83 58 38 69 244 237 58 49 33 56 82 187 180 177 110 100  {quote} Jugding by my cert hashes, the message is translated to: "expected * hash_of_client_cert * but got * hash_of_server_cert *"  These messages don't appear if you use the default server certs as client certs (which is not ideal - it would defy X509v3 Extended Key Usage) by commenting out: {quote} - CORE_PEER_TLS_CLIENTCERT_FILE=/data/tls/client_fabric-dev.pem  - CORE_PEER_TLS_CLIENTKEY_FILE=/data/tls/client_fabric-dev-key.pem{quote}  ></description> </Issue>
