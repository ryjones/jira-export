<Issue id="28897" key="FAB-9168" number="9168" project="10002" reporter="jyellick" assignee="manish-sethi" creator="jyellick" type="10001" summary="Add support for chaincode system namespace" priority="3" resolution="10001" status="6" created="2018-03-26 17:03:20.0" updated="2019-03-07 18:01:16.0" resolutiondate="2019-03-07 18:01:16.0" votes="0" watches="3" workflowId="35653"> <description><! CDATA Since initialization status cannot be managed in the LSCC table (because of the likely mismatch between the LSCC validation and chaincode validation requirements), the chaincode initialization status needs to be stored with the other chaincode data and validated according to the chaincode validation parameters.  However, because there is no namespacing within a chaincode keyspace, attempting to story the initialization status within the standard chaincode namespace could cause collisions with existing user chaincodes.  Therefore, we need a namespace tied to the existing chaincode namespace which can store whether a chaincode has been initialized or not.  This namespace could at some point be made available through the chaincode interface, but for the time being, the endorser code can manipulate it directly.  A suggested name for this namespace could be the "chaincode system namespace".   The implementation is intentionally left vague, but the `endorser.go` code will need to be able to read from this namespace, and add a write to it into the RW set of the transaction.  At commit time, the standard validation code should operate over this RW set to determine that it was generated correctly.  For standard endorser txes this should require no additional code, as the standard endorsement policy may verify the initialization writes as is.  ></description> </Issue>
