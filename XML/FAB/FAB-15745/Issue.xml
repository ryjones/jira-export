<Issue id="40657" key="FAB-15745" number="15745" project="10002" reporter="scottz" assignee="scottz" creator="scottz" type="10000" summary="Test improvements - Replace Behave Tests" priority="2" resolution="10000" status="6" created="2019-06-18 14:37:09.0" updated="2020-02-26 13:49:51.0" resolutiondate="2020-01-27 16:28:25.0" votes="0" watches="1" workflowId="53607"> <description><! CDATA Deprecate Behave test tool framework after providing equivalent IT coverage with other test tools and test suites.  Behave framework, in fabric-test repository, is used for numerous tests to test the innerworkings of fabric-test (smoke test suite) and the functionality and interworking of other repositories (interop and daily test suites). With minimal resources available that have the python knowledge and experience to maintain the tests, which are simple to read but difficult to quickly understand and fix, the intent is to eliminate the use of the Behave framework for any Fabric projects.  Work items herein are to evaluate the red and yellow highlighted testcases in the attached spreadsheet, which lists all the active (and some inactive) Behave testcases in the fabric-test/feature/*.feature files.  We can eliminate those which are duplicates of other tests being executed by PTE or other tools inside fabric-test repository or in other IT tests in other repositories such as fabric or fabric-sdk-java or fabric-sdk-node or others. Where there are gaps, and where the test coverage is deemed still necessary, new workitems should be created to implement them elsewhere.  The attached xls spreadsheet is a snapshot after first pass performed by Matt and Scott. Follow the ongoing design analysis work at the link provided in the "Design" section. For each testcase, confirm whether it is covered elsewhere or if it is a gap. If a gap, indicate if it is needed and if so then which test suite - i.e. when it should be executed in the pipeline, and the location where a replacement test will be developed - and create a jira issue for writing each single or group of tests.  A good goal is to replace these tests and deprecate the Behave test framework before the end of 2019, when python v2.7 will become unsupported (which means we would need to invest some effort to upgrade our tooling just to keep it going).  Procedural recommendations:  For end-to-end behavior testing, use fabric integration tests. We don't want to proliferate too many integration tests, so for negative testing on a specific component, use unit tests. Note - it is acceptable for a unit test to span more than one package of code to test a couple implementation layers at a time (you don't have to mock out every single layer). For tests that use SDK, work with Bret/Rick to extend SDK integration tests. Note - we do not expect full coverage of Fabric logic from the SDK integration tests. We expect full coverage of SDK code and integration with the important Fabric functions only.  Additional test efficiency suggestions:: Streamline existing lifecycle integration tests so that they run faster - For example, instead of having one network that you bring up and down per test, try to do more testing using fewer networks. e.g. start one network and then create a channel per unique test sequence. Or combine multiple test scenarios on a single network channel.  ></description> </Issue>
