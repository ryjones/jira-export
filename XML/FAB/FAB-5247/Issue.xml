<Issue id="19159" key="FAB-5247" number="5247" project="10002" reporter="ales" creator="ales" type="10001" summary="Detect forking attacks with gossip" priority="3" resolution="10001" status="6" created="2017-07-11 14:58:22.0" updated="2020-01-22 21:53:50.0" resolutiondate="2020-01-22 21:53:50.0" votes="1" watches="5" workflowId="35248"> <description><! CDATA Scenario: * an HLF installation uses orderers that are CFT only. This is either because BFT orderers are not yet available or because the admin of that HLF instance has decided that it is acceptable * the CFT assumption (which is a security assumption, it basically says "we assume that orderers are honest and will at worst crash") is violated - either because the ordering network is hacked in or because its administrators have become malicious and chosen to misbehave  We are in presence of a malicious ordering network What may happen? * tx forgery is not possible (because the ordering network alone does not possess signing identities of any application org) * *A1*: silently dropping txes is possible (e.g. the ordering network receives a tx in broadcast and it never returns it through a deliver) * *A2*: forking attacks are possible (e.g. peer1 receives txA then txB then txC; peer2 receives txA then txC then txB)  There seems to be an easy enough way in which cross-org gossip may be leveraged to at least detect *A2*. How? If orgs gossip about the pair _(blockheight, hash)_, they will detect inconsistencies (because the hash value will not match).  Is this detection valuable? If an attack has been successfully perpetrated, it may or may not be reversible. Though of course knowing that it took place (as opposed to not knowing) has value, org members may take legal actions... etc.  ></description> </Issue>
