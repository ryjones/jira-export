<Issue id="29408" key="FAB-9524" number="9524" project="10002" reporter="yacovm" assignee="nirro" creator="yacovm" type="10002" summary="e2e test - gradual discovery of the network as it changes" priority="3" resolution="10000" status="6" created="2018-04-15 14:49:27.0" updated="2018-07-20 14:16:19.0" resolutiondate="2018-07-02 13:36:20.0" votes="0" watches="3" workflowId="41846"> <description><! CDATA We need to have an e2e test that spin up a couple of peers and create a channel, install chaincodes, instantiate chaincodes and then see that the discovery service provides accurate information.  Â   Create a network with a single channel and 3 organizations - Org1, Org2, Org3 with 2 peers per organization \{p0, p1}, and a chaincode with endorsement policy of "3 choose 2" #  ## Use the discovery CLI (To be implemented in FAB-10110) *with credentials initialized for Org3* to query all discovery queries, and expect: ### Peers to be in the membership view, config query should also work, but endorsement queries would return that the chaincode cannot be found since it's not instantiated. ## Install the chaincode on p0.Org1 and instantiate it. ## Use the discovery CLI to query all discovery queries, and expect: ### The membership query would now have a chaincode installed on p0.Org1 ### The endorser query would return that the endorsement policy cannot be satisfied ## Install and instantiate the chaincode on every p0 but not on p1 for Org2 and Org3. ## Use the discovery CLI to query all discovery queries, and verify the results: ### The membership query should contain now that all peers p0's have the chaincode but not the p1's. ### The endorser query should convey 3 different layouts (A, B) , (A, C) and (B, C) and with 1 peer each. ## Install another chaincode and instantiate it on all peers. Its endorsement policy would be "3 choose 3" (1 signature from every org). ## Use the discovery CLI to query a chaincode to chaincode endorsement query and verify the results: ### There should be only 1 layout with all organizations in it. ## upgrade the first chaincode and add a collection definition with a collection policy of (A, C). ## Use the discovery CLI to query a collection query for the collection, in the context of the first chaincode, and verify the results: ### There should be only a single layout corresponding to (A, C). ## Issue a config update and change the channel writer policy to Org1 OR Org2 (in other words - remove Org3 from the channel writers) ### Use the discovery CLI to query a peer query and ensure that "access denied" is returned.  ></description> </Issue>
