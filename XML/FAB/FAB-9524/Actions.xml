<Action id="45178" issue="29408" author="yacovm" type="comment" created="2018-05-27 12:32:05.0" updateauthor="yacovm" updated="2018-05-27 12:37:22.0"> <body><! CDATA The discovery CLI is ready    ~C0rWin    ~nirro     :)   https://gerrit.hyperledger.org/r/#/c/22175/      Instructions:  *to build:*  change directory to *cmd/discover* {code:java} go build -o discover {code} It needs to be configured once, via: {code:java} ./discover saveConfig --peerTLSCA=tls/ca.crt --userCert=msp/signcerts/Admin\@org1.example.com-cert.pem --userKey=msp/keystore/e7804384393cf3f1f0dff22fd15aad3d3ad58d54297c59e99189bdd950e02a70_sk --MSP=Org1MSP{code} and this would cause it to deploy a config file in *~/.fabric/config.yaml*  It outputs queries in JSON format, which is very easy to process for programs.  The following 2 queries are peer queries:  !peers.PNG|thumbnail!  Below is an endorser query !endorsers.PNG|thumbnail!  I'd also put the config query output which is outputted via: {code:java} ./discover config --server peer0.org1.example.com:7051  --channel mychannel {code} But the config has way too many certificates to put in this JIRA ;)  To query for chaincode2chaincode just pass more *--chaincode=* flags. To query for collections *col1, col2* in *mycc*, just specify via *--collection=mycc:col1,col2*  ></body> </Action>
<Action id="45426" issue="29408" author="yacovm" type="comment" created="2018-06-01 22:22:08.0" updateauthor="yacovm" updated="2018-06-01 22:22:08.0"> <body><! CDATA I was requested to change the CLI so the new usage is as follows:  !Capture.PNG|thumbnail!   ></body> </Action>
<Action id="45598" issue="29408" author="latitiah" type="comment" body=" ~nirro : I see that this is still in the &quot;To Do&quot; state, do you need any assistance here so we can get this moving forward? " created="2018-06-06 14:30:50.0" updateauthor="latitiah" updated="2018-06-06 14:30:50.0"/>
<Action id="45624" issue="29408" author="nirro" type="comment" created="2018-06-07 06:38:46.0" updateauthor="nirro" updated="2018-06-07 06:38:46.0"> <body><! CDATA I was working this week on private data e2e issues and planning to start with this issue right after (in the next 1-2 days). thanks  ~latitiah !  ></body> </Action>
<Action id="45825" issue="29408" author="nirro" type="comment" body="WIP - https://gerrit.hyperledger.org/r/#/c/22973/" created="2018-06-12 11:27:26.0" updateauthor="nirro" updated="2018-06-12 11:27:26.0"/>
<Action id="46031" issue="29408" author="nirro" type="comment" created="2018-06-17 12:04:51.0" updateauthor="nirro" updated="2018-06-17 12:11:42.0"> <body><! CDATA there are minor issues found in the first steps: 1. in step (1), when I run discover endorsers for a chaincode that is not installed nor instantiated I expect to get that as an error. the error is written in the peer's log, but discover endorsers returns "failed constructing descriptor for chaincodes:<name:"mycc" I added an image.  2. in step (3), when running the same command discover endorsers, I expect to get an error that it is not installed on sufficient number of peers/orgs. again same issue, the problem is written in the peer's log but the result returned from discover endorsers command is the same as in the previous point.  3. another minor issue is that the error message is returned in the result value and not as an error (in the e2e tests returned inside runner.Buffer instead of runner.Err)  4. the membership query in step (3) doesn't show any data about installed chaincodes. according to the documention I don't think it should, but here in step (3) Yacov wrote it should.. maybe  ~yacovm  can respond if discover peers should show any data about installed chaincodes.  ></body> </Action>
<Action id="46033" issue="29408" author="yacovm" type="comment" created="2018-06-17 14:06:26.0" updateauthor="yacovm" updated="2018-06-17 14:25:54.0"> <body><! CDATA 1,2 and 3 are OK (just work with the error you uploaded). This is expected output. The instruction in (1) is a bit misleading because at the time of writing this plan I didn't take into account the actual error output to the client. w.r.t 3 - it's by design... application level errors are returned via responses in gRPC, while infrastructure errors are returned via the errors themselves.   w.r.t 4 - oops, I forgot to add the chaincodes to the output, sorry :)   implemented in https://gerrit.hyperledger.org/r/#/c/23223/ and also updated the documentation     ></body> </Action>
<Action id="46035" issue="29408" author="yacovm" type="comment" body="Merged." created="2018-06-17 15:19:50.0" updateauthor="yacovm" updated="2018-06-17 15:19:50.0"/>
<Action id="46212" issue="29408" author="nirro" type="comment" body="finished implementing the tests - https://gerrit.hyperledger.org/r/#/c/22973/" created="2018-06-19 15:14:15.0" updateauthor="nirro" updated="2018-06-19 15:14:15.0"/>
