<Issue id="37859" key="FAB-14281" number="14281" project="10002" reporter="angelo.decaro" assignee="angelo.decaro" creator="angelo.decaro" type="10001" summary="Support Arbitrary Precision for Token Quantity" priority="3" resolution="10000" status="6" created="2019-02-21 09:35:34.0" updated="2019-02-28 13:09:27.0" resolutiondate="2019-02-26 09:36:07.0" votes="0" watches="1" workflowId="49476"> <description><! CDATA Currently fabtoken supports uint64 type for quantity. In certain use-cases this poses a limit.   This story proposes to enhance fabtoken to be able to handle arbitrary precision numbers, precision that can be customised during initialisation of fabtoken (via lifyccile).  The quantity field will be converted from uint64 to string. Supported encodings will be all provided by  https://golang.org/pkg/math/big/#Int.SetString.  Therefore, a client invoking the prover peer to assemble a token transaction, can use any format supported by  https://golang.org/pkg/math/big/#Int.SetString.  The prover peer will use the hex representation to represent quantities in the token transaction. Though, quantities in token transactions can be represented by using any format supported by  https://golang.org/pkg/math/big/#Int.SetString.   This is also the approach used by Ethereum.     ></description> </Issue>
