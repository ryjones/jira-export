<Action id="43442" issue="29099" author="pandrejko" type="comment" created="2018-04-25 21:29:31.0" updateauthor="pandrejko" updated="2018-04-26 14:49:15.0"> <body><! CDATA h6. *{color:#454545}Private Data Tutorial:{color}*  {color:#454545} private_data_tutorial.rst{color}  consider including or linking to D. Enyeart's recording of SideDB demo.   h6. *{color:#454545}Strategy:{color}*  {color:#454545}Use BYFN network + updated marbles02 chaincode (which includes new getPrivateData () putPrivateData() APIs..){color} {color:#454545}Why collections? What problem does this solve?{color} {color:#454545}Build Collection definition in JSON files (define which peers are in the collection){color} {color:#454545}Peer Chaincode instantiate (new version of Marbles go Chaincode which contains new apis - getPrivateData()…) with collection (JSON file flag){color} Peer Chaincode invoke Add private data which calls putPrivateData() Peer Chaincode query as authorized peer - can see private data which calls getPrivateData() Peer Chaincode query as non-authorized peer - cannot see private data...  ------------------- v1.2 -------------------------  Add new member to collection (full access)  Peer Chaincode query as newly authorized peer - can see private data which calls getPrivateData()  Add new member to collection ({color:#454545}new-data-access{color})  Peer Chaincode query as newly authorized peer with new data access only - cannot see private data...  Peer Chaincode invoke Add  new private data  Peer Chaincode query as newly authorized peer with new data access only - can see new private data...   Collection.json:    \{         "name": "collectionMarbles",         "policy": "OR('Org1MSP.member', 'Org2MSP.member')",         "requiredPeerCount": 1,         "maxPeerCount": 2,         "blockToLive":1000000 }, \{          "name": "collectionMarblePrivateDetails",         "policy": "OR('Org1MSP.member')",          "requiredPeerCount": 1,          "maxPeerCount": 1,         "blockToLive":3 }             ></body> </Action>
<Action id="44573" issue="29099" author="pandrejko" type="comment" created="2018-05-17 15:02:24.0" updateauthor="pandrejko" updated="2018-05-22 13:24:39.0"> <body><! CDATA  ~dthibeau94   ~denyeart   ~joe-alewine   ~wjzheng   ~negupta   ~SjirNijssen   ~odowdaibm   ~bmos299   ~jacquie   I've worked with Joe and Dave Enyeart to begin to come up with terminology for our documentation of SideDB. For this JIRA I am writing a SideDB tutorial and plan to use the following text. I welcome your comments, feedback and suggestions on the terminology going foward.     Using Private Data in Fabric =====================  This tutorial will demonstrate the use of collections to provide storage of private data on the blockchain network for authorized organizations.  Private data is sensitive data that should not be shared with the entire blockchain network. It’s confidential data that two or more organizations on a channel want to keep private from other organizations on that channel.  A collection is a fabric concept used to manage these data privacy concerns for a set of data. The collection definition describes a subset of organizations on a channel entitled to store a set of private data, which by extension implies that only these organization can transact (endorse, commit, query) with the private data.  Why are Fabric Collections useful? ----------------------------------------------  Channels provide transaction privacy among organizations, but the channel data (i.e. the channel ledger) is still visible to the orderer and all the peers on the channel since transaction data is visible in the ledger.  A collection is useful when channel members need visibility to each transaction, but some or all of the transaction data is private to a subset of members, for example for bilateral or multilateral private relationships.  The non-members will only receive a hash of the private data, and therefore if they later receive the private data they can validate it is the correct private data for the transaction by hashing the private data and comparing it to the hashes on the blockchain. Additionally, since private data is disseminated peer-to-peer rather than through channel blocks, it is a useful option if you need to keep data private from the ordering service.  For example, consider a group of five organizations on a channel trading produce:  -    Wholesaler -    Distributor -    Farmer -    Shipper -    Retailer  But the Distributor may need to have private transactions with the Farmer and Shipper to keep the terms of the trades confidential from other organizations on the channel.  The Distributor may also want to have a separate private data relationship with the Wholesaler.  And the Wholesaler may want to have a private data relationship with the Retailer and the Shipper.  Rather than defining many small channels for each of these relationships, a collection can be defined to share private data between the Distributor, Farmer and Shipper. Another collection can be defined to share private data between the Distributor and Wholesaler, and a third between the Wholesaler, Retailer and Shipper.  //TODO Insert a diagram would be useful here  Hence on the channel, there could be many collection definitions for each set of private data relationships. Collections therefore provide privacy for designated sensitive data on a transaction.  When collections are used, private data is stored in a side database on each peer, logically separate from the channel ledger data, and having a separate key namespace from the channel ledger data.  Thus a channel provides transaction privacy among all organizations on a network, whereas collections provide data privacy among a subsets of organizations on the channel.  ></body> </Action>
<Action id="44592" issue="29099" author="negupta" type="comment" body="I would be more clear up top at the difference between private transactions and private data. Channels keep transactions private from the network/ collections keep data private between parties on channels. keeping that clear up top will keep things crisp but also answer the &quot;what about channels question&quot; that people are sure to have" created="2018-05-17 16:15:29.0" updateauthor="negupta" updated="2018-05-17 16:15:29.0"/>
<Action id="45056" issue="29099" author="pandrejko" type="comment" created="2018-05-24 13:29:59.0" updateauthor="pandrejko" updated="2018-05-24 13:29:59.0"> <body><! CDATA  ~denyeart  - I saw the updated instructions in FAB-10231. The SideDB tutorial that I am working on does not exactly mimic  your instructions. Is that ok?  Currently, the tutorial goes through the following steps: # **Build a Collection definition JSON file**  2. **Read and Write private data using chaincode APIs**  3. **Install and instantiate chaincode with a collection**  4. **Store private data**  5. **Query the private data as an authorized peer**  6. **Query the private data as an unauthorized peer**  7. **Purge Private Data**            8. **Using CouchDB indexes with private data**  ></body> </Action>
