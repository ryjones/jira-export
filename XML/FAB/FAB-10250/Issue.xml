<Issue id="30447" key="FAB-10250" number="10250" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10004" summary="Add log messages to indicat whenever peer is eligible or not for pvt data collection" priority="3" resolution="10000" status="6" created="2018-05-21 15:06:43.0" updated="2018-07-20 14:16:45.0" resolutiondate="2018-05-22 10:49:31.0" votes="0" watches="1" workflowId="42258"> <description><! CDATA And the moment while inspecting block with transaction, peer silently ignores and continue without printing a single line to the log file, making it hard to troubleshot misconfiguration.     {code} func (bi *transactionInspector) inspectTransaction(seqInBlock uint64, chdr *common.ChannelHeader, txRWSet *rwsetutil.TxRwSet, endorsers   *peer.Endorsement) { 	for _, ns := range txRWSet.NsRwSets { 		for _, hashedCollection := range ns.CollHashedRwSets { 			if !containsWrites(chdr.TxId, ns.NameSpace, hashedCollection) { 				continue 			} 			policy := bi.accessPolicyForCollection(chdr, ns.NameSpace, hashedCollection.CollectionName) 			if policy == nil { 				continue 			} 			if !bi.isEligible(policy, ns.NameSpace, hashedCollection.CollectionName) { 				continue 			} 			key := rwSetKey{ 				txID:       chdr.TxId, 				seqInBlock: seqInBlock, 				hash:       hex.EncodeToString(hashedCollection.PvtRwSetHash), 				namespace:  ns.NameSpace, 				collection: hashedCollection.CollectionName, 			} 			bi.privateRWsetsInBlock key  = struct{}{} 			if _, exists := bi.ownedRWsets key ; !exists { 				txAndSeq := txAndSeqInBlock{ 					txID:       chdr.TxId, 					seqInBlock: seqInBlock, 				} 				bi.missingKeys txAndSeq  = append(bi.missingKeys txAndSeq , key) 				bi.sources key  = endorsersFromOrgs(ns.NameSpace, hashedCollection.CollectionName, endorsers, policy.MemberOrgs()) 			} 		} // for all hashed RW sets 	} // for all RW sets } {code}  there is a need to add log message to make it easier for debug, namely  {code} 			policy := bi.accessPolicyForCollection(chdr, ns.NameSpace, hashedCollection.CollectionName) 			if policy == nil { 				logger.Errorf("Failed to retrieve collection config for collection %s, chaincode %s, txID %s, channel %s. Skipping.", 					ns.NameSpace, hashedCollection.CollectionName, chdr.TxId, chdr.ChannelId) 				continue 			} 			if !bi.isEligible(policy, ns.NameSpace, hashedCollection.CollectionName) { 				logger.Warningf("Peer is not eligible for collection %s, chaincode %s, txID %s, channel %s. Skipping.", 					ns.NameSpace, hashedCollection.CollectionName, chdr.TxId, chdr.ChannelId) 				continue 			} {code}  ></description> </Issue>
