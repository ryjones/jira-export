<Issue id="34409" key="FAB-12292" number="12292" project="10002" reporter="mariwade" creator="mariwade" type="10004" summary="Chaincode Policy - should be able to update the policy at other points of the Fabric Lifecycle (channel,install, etc)  then on chaincode instantiate/upgrade" priority="1" resolution="10002" status="6" created="2018-10-03 19:56:15.0" updated="2018-10-04 05:09:22.0" resolutiondate="2018-10-04 05:09:22.0" votes="0" watches="2" workflowId="45809"> <description><! CDATA We have a blockchain solution (Blockchain Document Store) that is constantly getting Endorsement Policy failures due to the inability to update endorsement policies when a new org joins the channel.  Org1 and Org2 have started a network, joined the channel,  installed chaincode_V1, and instantiated it taking the default endorsement policy.  That means "One of Org1 or Org2" signatures are needed when invoking chaincode.  Org3 joins the channel, installs the same chaincode src and version.  It will not be able to invoke because it is not in the channel at the time the endorsement policy was created during chaincode instantiate/upgrade.  Org 3 will get an Endorsement Policy failure.     The fix 'workaround' is to get all 3 orgs to reinstall the same chaincode src with a new version number, V2 and upgrade the chaincode.  At this time, the chaincode policy will be updated to be "One of Org1, Org2, or Org3".  In practice this process is not practical and is costing devOps , solutions, and our customers a lot of cycles. There should be a way to submit an update to an endorsement policy when a new org joins the channel and installs the same chaincode name/version.  For a solution working with a fabric sdk - the solution needs the ability to programmatically update the chaincode policy.  1) An org joins an existing channel (approved right), 2 )installs the same chaincode src with name/version,   3) NEEDED some process for the an update to the chaincode policy to include org3.     ></description> </Issue>
