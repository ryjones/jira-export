<Issue id="36551" key="FAB-13552" number="13552" project="10002" reporter="yacovm" assignee="guoger" creator="yacovm" type="10001" summary="Re-addition of a removed OSN in a channel" priority="3" resolution="10000" status="6" created="2019-01-08 10:47:54.0" updated="2019-11-14 13:12:29.0" resolutiondate="2019-11-14 13:12:29.0" votes="0" watches="5" workflowId="48093"> <description><! CDATA Currently, when an OSN starts up, for each chain it doesn't participate in - it registers into an object that periodically tracks whether it is added to the channel, and starts an inactive.Chain which returns service unavailable to every request.  If the OSN detects its own addition to the channel, it pulls the blocks, and then starts the etcdraft chain, after which it replaces the chain instance of the inactive.Chain.  However, if the OSN is removed from the channel afterwards - it simply halts its chain operation when it detects its eviction from the channel.   If it is re-added afterwards into the channel, it won't know that and won't re-activate the chain. The only way to make it re-activate the chain is restart the OSN.   In order to make this work without user intervention (i.e - restart), we need to pass the registration callback from the consenter into the etcdrart chain instance, which would make the chain register itself in the tracker object when the membership eviction is detected.    I personally don't think this is a very pressing matter to attend to in the short term, but we should keep it in the backlog for now and take care of it when we have the time.  opinions?  ~kchristidis   ~guoger   ~C0rWin   ~tock   ></description> </Issue>
