<Action id="18853" issue="12648" author="ryokawajp" type="comment" created="2016-09-12 08:16:15.0" updateauthor="ryokawajp" updated="2016-09-12 08:28:22.0"> <body><! CDATA  ~gauravgiri  I also observed similar problem in chaincode query. * I deployed chaincode_example02 ** CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true build/bin/peer chaincode deploy  -p chaincode_example02 -c '{"args": "init","a","100","b","50" }' -u test_user0 * I confirmed that a query works with CLI. ** CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true build/bin/peer chaincode query -n a1e74746efaec3a6521f3b27b5962651302199d9cc51bd517e81fd55bffab1b964e8a7cfa7a54d00317d51a3691033d7efe60dce8edac5ecb2fba7630e328000 -c '{"args": "query","a" }' -u test_user0 ** Query Result: 100 * I queried the chaincode from HFC program, but it returns the error message. (code snipped is as below.) **  Incorrect number of arguments. Expecting name of the person to query  Through printf debugging, it is found that the chaincode receives 0 arguments on query. The function name is correct. I also tried to put the function name into the beginning of args but the error message did not change. As indicated in hfc.ts, fcn and args fields are still used in query and invoke requests and concatenated into a single array inside HFC.. https://github.com/hyperledger/fabric/blob/master/sdk/node/src/hfc.ts#L1883  I use the following versions: * HFC 0.6.0, 0.5.1, 0.5.2 * Fabric : latest master (on Sep. 11, commit ID : 165c0ed147b805696b53208ba0068c5e9506c6bf) * "net" mode (chain.setDevMode(false)).  {code} var fcn = "query"; var args =  "a" ; var user = test_user_Member1; var chaincodeID = "a1e74746efaec3a6521f3b27b5962651302199d9cc51bd517e81fd55bffab1b964e8a7cfa7a54d00317d51a3691033d7efe60dce8edac5ecb2fba7630e328000";  var queryRequest = { chaincodeID: chaincodeID, fcn: fcn, args: args }; var tx = user.query(queryRequest); {code}  ></body> </Action>
<Action id="18854" issue="12648" author="ryokawajp" type="comment" created="2016-09-12 09:44:12.0" updateauthor="ryokawajp" updated="2016-09-12 09:44:12.0"> <body><! CDATA Hi, I have just peeked at version 0.5.2 of the hfc installation directory to see the source code (around L1429 of hfc.js) and found that it is using the old protocol for the chaincode argument (separate function and args), which differes from the latest master version of hfc.ts (linked in the above comment.). Does 0.5.2 correspond to the latest master? or does this release support Fabric 0.5 DP only? {code:hfc.js}  // Set chaincodeID chaincodeSpec.setChaincodeID(chaincodeID); // Set ctorMsg var chaincodeInput = new _chaincodeProto.ChaincodeInput(); chaincodeInput.setFunction(request.fcn); chaincodeInput.setArgs(request.args); chaincodeSpec.setCtorMsg(chaincodeInput); {code}    ></body> </Action>
<Action id="18856" issue="12648" author="hgabre" type="comment" body="Fabric master with the js code from sdk/node (from the same repo, the same version) seems to work. v0.6 with the js code from sdk/node (from the same repo, the same version) also seems to work." created="2016-09-12 11:15:29.0" updateauthor="hgabre" updated="2016-09-12 12:33:50.0"/>
<Action id="18868" issue="12648" author="ryokawajp" type="comment" created="2016-09-13 02:13:52.0" updateauthor="ryokawajp" updated="2016-09-13 02:13:52.0"> <body><! CDATA Thank you  ~hgabre . I also tried to build hfc in the source code repository by simply typing "make" at fabric/sdk/node directory, but it did not work. The following error message was printed. Is there any documentation for building hfc by myself?  {code} vagrant@hyperledger-devenv:v0.0.11-165c0ed:/opt/gopath/src/github.com/hyperledger/fabric/sdk/node$ make  INSTALL  node_modules/.bin/typings npm install typings hfc@0.0.2 /opt/gopath/src/github.com/hyperledger/fabric/sdk/node ├── any-promise@1.3.0  extraneous ├── archy@1.0.0  extraneous ├── bluebird@3.4.6  extraneous ├── columnify@1.5.4  extraneous ├── has-unicode@2.0.1  extraneous ├── listify@1.0.0  extraneous ├── update-notifier@1.0.2  extraneous ├── wordwrap@1.0.0  extraneous └── xtend@4.0.1  extraneous  npm WARN hfc@0.0.2 No repository field. npm WARN hfc@0.0.2 No license field. npm ERR! Linux 3.13.0-93-generic npm ERR! argv "node" "/usr/local/bin/npm" "install" "typings" npm ERR! node v0.12.7 npm ERR! npm  v3.10.7 npm ERR! path ../loose-envify/cli.js npm ERR! code EPROTO npm ERR! errno -71  npm ERR! EPROTO, symlink '../loose-envify/cli.js' npm ERR! npm ERR! If you need help, you may report this error at: npm ERR!     <https://github.com/npm/npm/issues>  npm ERR! Please include the following file with any support request: npm ERR!     /opt/gopath/src/github.com/hyperledger/fabric/sdk/node/npm-debug.log make: ***  node_modules/.bin/typings  Error 185 {code}   ></body> </Action>
<Action id="18900" issue="12648" author="ryokawajp" type="comment" created="2016-09-14 07:33:29.0" updateauthor="ryokawajp" updated="2016-09-14 07:33:29.0"> <body><! CDATA Sorry. The above problem was caused by the file sharing capability of Vagrant. I should have used directory which is not shared with the host OS, or have run Vagrant with Administrator authority, otherwise one cannot create a symbolic link. Now the error message was fixed. Thank you.   ></body> </Action>
<Action id="18901" issue="12648" author="hgabre" type="comment" body="Ryo, does it work for you? One has to try it with matching versions (hfc 0.5 from npm repo with fabric 0.5; hfc from Gerrit master with fabric from Gerrit master; hfc 0.6 - that will be uploaded soon - with fabric 0.6). If it works we could close this issue." created="2016-09-14 11:03:46.0" updateauthor="hgabre" updated="2016-09-14 11:03:46.0"/>
<Action id="18903" issue="12648" author="angrbrd" type="comment" created="2016-09-14 14:49:37.0" updateauthor="angrbrd" updated="2016-09-14 14:49:37.0"> <body><! CDATA  ~hgabre  I will be publishing an update to npm for version 0.6.x in the next day or two. That should address several issues. If this is still broken in the npm package, it will be fixed then too.  Thanks!  ></body> </Action>
<Action id="18907" issue="12648" author="ryokawajp" type="comment" created="2016-09-15 02:07:44.0" updateauthor="ryokawajp" updated="2016-09-15 02:07:44.0"> <body><! CDATA Thank you,  ~hgabre .  I successfully built hfc with make at fabric/sdk/node/ directory which was copied to a non-shared directory. I can now execute deploy and query transactions from a Node.js app. However, the returned value is different from the expected value. It returns the following message: {code} completed query: {"result":"323030"} results.result: 323030 {code} where the expected value is b=200. CLI returns the correct value: {code} CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true build/bin/peer chaincode query -n 508a2be58384aad8909bd2417a51f022c7966c877b7ee5fdc46be6a079ee40c0 -c '{"args": "query","b" }' -u test_user0 Query Result: 200 {code} The situation did not change when I deployed the chaincode with CLI and queried with Node.js app.  When I was reading asset_mgmt.js, I realized that one needs to put "confidential: true" to the request, otherwise the returned value is not readable. What does this mean? I suppose there is a change in the format of the returned value. The above results were obtained with "confidential: true". https://github.com/hyperledger/fabric/blob/master/sdk/node/test/unit/asset-mgmt.js#L290  Environment and sample program is as follows: - Vagrant env. - chaincode_example02 {code} var initA = "100"; var initB = "200"; function deploysample() { var deployRequest = { fcn: "init", args:  "a", initA, "b", initB , confidential: true, }; var deployTx = test_user_Member1.deploy(deployRequest); console.log("deployTx %j", deployTx); ... {code} {code} function querysample() { var fcn = "query"; var args =  "b" ; var user = test_user_Member1; var chaincodeID = "508a2be58384aad8909bd2417a51f022c7966c877b7ee5fdc46be6a079ee40c0";  var queryRequest = { chaincodeID: chaincodeID, fcn: fcn, args: args, confidential: true, }; var tx = user.query(queryRequest); tx.on('complete', function(results) { console.log("completed query: %j",results); data = results.result; console.log("results.result: %s",data); }); {code}   ></body> </Action>
<Action id="18908" issue="12648" author="ryokawajp" type="comment" created="2016-09-15 02:11:08.0" updateauthor="ryokawajp" updated="2016-09-15 02:11:08.0"> <body><! CDATA Hi  ~angrbrd , thank you. I am looking forward to see the new version.   ></body> </Action>
<Action id="18948" issue="12648" author="ryokawajp" type="comment" created="2016-09-20 13:51:38.0" updateauthor="ryokawajp" updated="2016-09-20 13:51:38.0"> <body><! CDATA Thank you for the release of HFC 0.6.1. I have tested HFC 0.6.1 with Fabric (master at Sep. 11, 165c0ed147b805696b53208ba0068c5e9506c6bf) and the above sample program showed the same result with the case of HFC in the Fabric source repository. {code} completed query: {"result":"323030"} results.result: 323030 {code} The expected output is "200". I have not yet tried HFC 0.6.1 with V0.6 branch of Fabric. I realized that the above output is equivalent to the output of CLI with -x option (hex). So, I implemented like: {code} data = results.result; 	buffer = new Buffer(data, 'hex'); console.log("buffer: %s", buffer.toString('utf8')); {code} and finally I obtained the expected result, "200". Is this the designed behavior of HFC?  Is it OK for us to assume that the returned value of query is a hex representation of utf8 string? Or is there any option to switch the returned value from a hex string to a utf8 string like -x option of CLI ?  ></body> </Action>
<Action id="18949" issue="12648" author="hgabre" type="comment" created="2016-09-20 15:00:36.0" updateauthor="hgabre" updated="2016-09-20 15:00:36.0"> <body><! CDATA As I know 0.6.1 should work with brach v0.6. On the other side, I will try to have a look at it and find why it returns a hex. I don't know about such an option.  Anna Derbakova|https://jira.hyperledger.org/secure/ViewProfile.jspa?name=angrbrd ?  ></body> </Action>
<Action id="19027" issue="12648" author="mastersingh24" type="comment" body=" ~angrbrd  I assume this is not an issue when using hfc 0.6.x with fabric v0.6 images?" created="2016-09-28 11:12:01.0" updateauthor="mastersingh24" updated="2016-09-28 11:12:01.0"/>
<Action id="19032" issue="12648" author="gauravgiri" type="comment" created="2016-09-28 13:29:47.0" updateauthor="gauravgiri" updated="2016-09-28 13:29:47.0"> <body><! CDATA It is working as per the last comment on this by Ryo Kawahara by using the confidential: true parameter in the invoke/query requests. Also, the result is a hex string which needs a conversion.  We have another issue. Because of dependency of HFC(0.6.*) npm library on node-gyp, we are unable to work with HFC npm client library on windows machine, as it fails to install because of issues related to python & Microsoft Visual studio c++ which needs to be present on windows.  Is there any recommended way to work with HFC(0.6.*) client libraries from windows?  Error stack trace while installing HFC: C:\Gaurav\IBM\workspace\BTMU\phase2\source\poc_hfc2\node_modules\hashtable>if no t defined npm_config_node_gyp (node "C:\sft\node\node6.5.0\node_modules\npm\bin\ node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js" configure build )  el se (node "" configure build ) gyp ERR! configure error gyp ERR! stack Error: Can't find Python executable "python", you can set the PYT HON env variable. gyp ERR! stack     at failNoPython (C:\sft\node\node6.5.0\node_modules\npm\node_ modules\node-gyp\lib\configure.js:401:14) gyp ERR! stack     at C:\sft\node\node6.5.0\node_modules\npm\node_modules\node-g yp\lib\configure.js:356:11 gyp ERR! stack     at FSReqWrap.oncomplete (fs.js:123:15) gyp ERR! System Windows_NT 6.1.7601 gyp ERR! command "C:\\sft\\node\\node6.5.0\\node.exe" "C:\\sft\\node\\node6.5.0\ \node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js" "configure" "build " gyp ERR! cwd C:\Gaurav\IBM\workspace\BTMU\phase2\source\poc_hfc2\node_modules\ha shtable gyp ERR! node -v v6.5.0 gyp ERR! node-gyp -v v3.3.1 gyp ERR! not ok   ></body> </Action>
<Action id="19041" issue="12648" author="ryokawajp" type="comment" created="2016-09-29 02:13:33.0" updateauthor="ryokawajp" updated="2016-09-29 02:13:33.0"> <body><! CDATA Thank you. Gaurav  ~gauravgiri .  Since Fabric v0.6.0 is released, I also tried HFC 0.6.1 and HFC 0.6.2 with Hyperledger Fabric tagged as v0.6.0-preview. The results are the same as in the comment by me on September 15th. https://jira.hyperledger.org/browse/FAB-347?focusedCommentId=18948&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-18948  - I removed the old chaincode container and deployed chaincode_example02 with CLI v0.6.0 preview. - Other options and arguments are the same with the previous comment. The returned value is hex.   ></body> </Action>
