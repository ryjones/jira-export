<Action id="19350" issue="13093" author="mastersingh24" type="comment" body="is it safe to assume that the #1 option for this right now is LevelDB?" created="2016-10-21 15:25:58.0" updateauthor="mastersingh24" updated="2016-10-21 15:25:58.0"/>
<Action id="19351" issue="13093" author="denyeart" type="comment" body=" ~mastersingh24  Yes, LevelDB is the leading contender, but Manish is going to do a deeper review next week as due diligence to ensure we don&apos;t overlook another good option." created="2016-10-21 15:33:17.0" updateauthor="denyeart" updated="2016-10-21 15:33:17.0"/>
<Action id="19379" issue="13093" author="donovanhide" type="comment" created="2016-10-22 10:10:15.0" updateauthor="donovanhide" updated="2016-10-22 10:10:15.0"> <body><! CDATA BoltDB might be an interesting option, as it is pure Go, and would allow fabric to be fully "go get-able".  https://github.com/boltdb/bolt  Also worth considering might be Go 1.8's plugin system:  https://tip.golang.org/pkg/plugin/  So that you don't need to have RocksDB, LevelDB, BoltDB, etc. all installed to build the main binary.  ></body> </Action>
<Action id="19380" issue="13093" author="mastersingh24" type="comment" created="2016-10-22 10:28:33.0" updateauthor="mastersingh24" updated="2016-10-22 10:28:33.0"> <body><! CDATA BoltDB does look interesting and does support the same types of "simple" queries as Level and Rocks.  It is also MIT licensed which is nice.    ></body> </Action>
<Action id="19467" issue="13093" author="jeffgarratt" type="comment" body="Can we add a why to this issue (Why is the developer doing this)?  BoltDB was my original recommendation in the beginning but was not chosen in lieu of RocksDB, I assume for a good reason." created="2016-10-25 15:22:54.0" updateauthor="jeffgarratt" updated="2016-10-25 15:22:54.0"/>
<Action id="19470" issue="13093" author="denyeart" type="comment" created="2016-10-25 17:24:27.0" updateauthor="denyeart" updated="2016-10-25 17:24:27.0"> <body><! CDATA There are license updates which makes RocksDB unfavorable going forward.  BoltDB did sound good since it is native go, but it does in fact look like LevelDB is more aligned with our use case requirements.  We will post detailed analysis to this work item in the coming days.  ></body> </Action>
<Action id="19508" issue="13093" author="denyeart" type="comment" created="2016-10-26 13:58:52.0" updateauthor="denyeart" updated="2016-10-26 13:58:52.0"> <body><! CDATA We are recommending to use LevelDB as the RocksDB replacement.  Of the key/value databases analyzed, LevelDB is most aligned with RocksDB and our specific use cases.  Now, there are still two options with LevelDB:  1) We can use LevelDB (https://github.com/google/leveldb C++ BSD-3-Clause license) with a LevelDB go wrapper (https://github.com/jmhodges/levigo MIT license) or 2) We can use a native golang port of LevelDB called goleveldb (https://github.com/syndtr/goleveldb BSD-2-Clause license).  #1 has broader use in the industry and is more aligned with our use of RocksDB, and therefore seems less risky. But Ethereum uses #2 in their golang implementation (https://github.com/ethereum/go-ethereum/blob/master/ethdb/database.go) so there is some precedent, and is go gettable/vendorable which simplifies things for us.  Thoughts?  ></body> </Action>
<Action id="19511" issue="13093" author="denyeart" type="comment" body="For more background - RocksDB has a patent infringement license in it from Facebook. The legal team is therefore not comfortable with using it.  For details read: https://github.com/facebook/rocksdb/blob/master/PATENTS" created="2016-10-26 14:24:23.0" updateauthor="denyeart" updated="2016-10-26 14:24:23.0"/>
<Action id="19701" issue="13093" author="manish-sethi" type="comment" created="2016-11-09 12:30:06.0" updateauthor="manish-sethi" updated="2016-11-09 12:30:06.0"> <body><! CDATA The alternatives include  1. LevelDB (https://github.com/google/leveldb) with a go wrapper (https://github.com/jmhodges/levigo),  2. goleveldb (https://github.com/syndtr/goleveldb) - a porting of leveldb in golang  3. BoltDB (https://github.com/boltdb/bolt)   BoltDB is suitable for read heavy workloads (e.g., LDAP) but has a relatively poor performance for read-write workloads.  Of the other two options, goleveldb is chosen because it is implemented in golang and hence easy to intergate and maintain.  In addition, as a precedent, ethereum go implementation also uses this package (https://github.com/ethereum/go-ethereum/blob/master/ethdb/database.go)  ></body> </Action>
<Action id="48662" issue="13093" author="troyronda" type="comment" created="2018-08-09 18:45:55.0" updateauthor="troyronda" updated="2018-08-09 18:45:55.0"> <body><! CDATA I guess RocksDB updated their license scheme last year to allow for Apache 2.0   https://github.com/facebook/rocksdb/blob/master/README.md#license   ></body> </Action>
