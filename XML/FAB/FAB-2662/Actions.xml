<Action id="21526" issue="15229" author="ibmamnt" type="comment" created="2017-03-15 08:49:53.0" updateauthor="ibmamnt" updated="2017-03-15 08:49:53.0"> <body><! CDATA When this is implemented, does peer connect via TLS ? So even if clouchdb image runs in separate VM for performance reason (and HA), all traffic are encrypted.  I see current image does not have TLS connection as of March/15th.   ></body> </Action>
<Action id="21560" issue="15229" author="denyeart" type="comment" body=" ~amnt Since peer and couchdb container reside on same host, and since the couchdb port is not exposed, there is no network traffic and therefore TLS is not required. TLS would degrade performance since peer would have to do TLS handshake for every transaction. We have requested CouchDB to support HTTP 2.0, which would enable a persistent secured connection. Once that is available, it would be feasible to put couchdb on a remote host and secure the connection with TLS." created="2017-03-17 20:01:29.0" updateauthor="denyeart" updated="2017-03-17 20:01:29.0"/>
<Action id="21571" issue="15229" author="mastersingh24" type="comment" created="2017-03-19 12:01:29.0" updateauthor="mastersingh24" updated="2017-03-19 12:01:29.0"> <body><! CDATA I think we need to have an option for TLS.  Even though couch is on the same host in our recommended configs, this might not always be the case and in cloud hosted scenarios TLS will be required on when on the same host.  (I basically have most of the work done, so I can add a JIRA item and assign it to myself if you like)  ></body> </Action>
<Action id="21579" issue="15229" author="denyeart" type="comment" created="2017-03-20 14:59:56.0" updateauthor="denyeart" updated="2017-03-20 15:00:44.0"> <body><! CDATA  ~mastersingh24  You mean to say that in some scenarios TLS is required between peer and couchdb, even when both are on the same host?  why is that?  Note that there will be a perf hit since the secure handshake would be required for every interaction.  If couchdb adds support for HTTP 2.0, then it would be much more efficient since the secure handshake would only be needed upon initial connection (if my understanding is correct).  What do you mean that you have the work almost done?  Which piece specifically?  You mean golang acting as a TLS client in general?  Or specific to couchdb? Note that couchdb already supports SSL on server side.  ></body> </Action>
<Action id="21582" issue="15229" author="ibmamnt" type="comment" created="2017-03-21 02:33:26.0" updateauthor="ibmamnt" updated="2017-03-21 02:33:26.0"> <body><! CDATA  ~denyeart  We need to have this option to certify requirement to run service in Financial markets. Otherwise, Hyperledger can not be used. The requirement is that all of communication must have security turn on.  There is no exceptions.  Also, running couchdb on the same host is not viable choice, since customer would like to have replication for disaster recovery (e.g. disk broken, etc).    ></body> </Action>
<Action id="21584" issue="15229" author="denyeart" type="comment" created="2017-03-21 14:22:27.0" updateauthor="denyeart" updated="2017-03-21 14:22:27.0"> <body><! CDATA  ~amnt  Option for TLS connection between peer and CouchDB containers will be added in subsequent work item FAB-2846.  It is mostly intended for when couchdb is remote from peer.  When peer and couchdb are on the same system (with no communication going out to the network), TLS doesn't make a lot of sense to me.  If an attacker gets access to the system then it seems like you have many more problems than the inter-process communication.  For inter-process communication on the same system it seems TLS communication would add overhead without a lot of value.  What's your opinion  ~mastersingh24 ?  Also  ~amnt  , I think you misunderstand the HA model in fabric v1.  There is always a 1:1 relationship between peer and state database.  We are not leveraging couchdb replication. To achieve HA you spin up additional peers, each with their own dedicated state database.  The state database can be LevelDB (local) or CouchDB (typically local, but could be remote).  ></body> </Action>
<Action id="21597" issue="15229" author="ibmamnt" type="comment" created="2017-03-21 23:43:27.0" updateauthor="ibmamnt" updated="2017-03-21 23:43:27.0"> <body><! CDATA As far as there is option to have TLS connection to remote couchdb, this is fine. And I now understood about HA model in fabric v1.0. Thanks !   ></body> </Action>
