<Issue id="42637" key="FAB-16770" number="16770" project="10002" reporter="scottz" creator="scottz" type="10000" summary="Use cc lifecycle APIs in test tools" priority="3" resolution="10001" status="6" created="2019-10-04 20:57:39.0" updated="2021-01-10 17:32:39.0" resolutiondate="2021-01-10 17:32:39.0" votes="0" watches="3" workflowId="55710"> <description><! CDATA Implement new code in our tools to use the new v2.0 cc lifecycle APIs (package/approve/commit chaincodes). * Add PTE functions and Operator functions to use new APIs in node-sdk APIs * Add/update functions in NL to use the CLI APIs * Add commands to testInput file and add functions in operator * Update all tests to use the new methods * And of course enable v2_0 application_capabilities in the networkSpec files used for any tests using new cc lifecycle     Below are some notes from FAB-16262 "Use new lifecycle APIs of node-sdk in Operator/PTE tools" (which was closed as dup).  v2.0.0 will have the old (i.e. install, instantiate) and new (i.e. approve, commit...) APIs. Tools currently use the old APIs, but should be updated to work with the newer flow (and most certainly before 2.1 when the old APIs may be deprecated).  Some of the newer lifecycle items in node-sdk will be delayed, though, and may not be available in v2.0. Discussions about node-sdk support in fabric v2.0 are ongoing; here are some points stated recently: * fabric-client (master) supports new fabric v2.0 lifecycle (just a few updates are required based on recent fabric changes). * The intent is to publish fabric-client as a v1.5 release in parallel with fabric v2.0 (target end of September). * fabric-client will be end-of-lifed at v1.5.x. * node.js SDK v2.0 will continue to have fabric-network high level API, but will use a new reworked fabric-base low level API. We'll encourage everybody to use the high level API. * node.js SDK v2.0 release will not be ready by end of September, but that's not a problem - it does not need to coincide with fabric v2.0 release, especially since the v1.5 SDK will have support for fabric v2.0 including new lifecycle. * node.js SDK v2.0 should eventually have support for fabric v2.0 lifecycle (this will largely be a copy of the fabric-client v1.5 lifecycle code). * node.js SDK v2.0 will not have backwards compatibility wrt node.js v1.x SDKs for applications using low level API...we will need to write guidance for users to shift their apps from using low level v1.x node.js SDK to high level v2.x node.js SDK     Confer with the node sdk dev team to get details. In 2.0, they will make some major changes, which we need to adapt to: * create a fabric-admin for APIs for the new cc lifecycle functions * eliminate fabric-client (no longer available, even in 2.0-beta) * must use cli commands for create-channel and join-channel functions * suggest using fabric-network or fabric-common for other functions  ></description> </Issue>
