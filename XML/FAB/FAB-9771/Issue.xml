<Issue id="29786" key="FAB-9771" number="9771" project="10002" reporter="sambhavdutt" assignee="latitiah" creator="sambhavdutt" type="10004" summary="Chaincodes test failing consistently in fabric-test-daily CI tests." priority="2" resolution="10000" status="6" created="2018-04-27 20:31:16.0" updated="2019-03-19 11:13:38.0" resolutiondate="2018-05-08 14:12:13.0" votes="0" watches="1" workflowId="42002"> <description><! CDATA The chaincodes test is not successful(Behave feature tests ?) in fabric-test-daily job from several builds. There is no report generated for the chaincodes test in this job.  *Build Fails*  https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/test_results_analyzer/   Instead, we see  TESTS-chaincodes  failure displayed.  After several chaincodes.feature tests seemed to complete successfully in the full console logs, then observe for this test:  05:39:07 Scenario Outline: FAB-6650: Test chaincode enccc_example.go negative scenario, passing in bad ENCRYPTION(ENC), IV, and SIGNATURE(SIG) KEYS -- @1.1 # chaincodes.feature:342  I see this error: *05:40:51*     And a user deploys chaincode at path "github.com/hyperledger/fabric/examples/chaincode/go/enccc_example" with args  "init", ""  with name "mycc"                                                                                                                                                                                                                                                                                                                                                                                # steps/endorser_impl.py:118*05:42:13*     When a user invokes on the chaincode named "mycc" with args  "ENCRYPT","Social-Security-Number","123-45-6789"  and transient args "\{\\"ENCKEY\\":\\"L6P9jLWR6d6E1KdGJBsUpzEm5QS6uVlS4onsteB+KaQ\\"}"                                                                                                                                                                                                                                                                                                                            # steps/endorser_impl.py:531*05:42:19*     Then a user receives an error response of Error: Error parsing transient string: illegal base64 data at input byte 40 - <nil>                                                                                                                                                                                                                                                                                                                                                                                                   # steps/endorser_impl.py:829*05:42:19*       Assertion Failed: Expected response was Error: Error parsing transient string: illegal base64 data at input byte 40 - <nil>; received Error occurred  u'docker exec peer0.org1.example.com /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/4dc38a3049dd11e8b1a0fa163ea2cc63/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode invoke --name mycc --ctor \'\{\\"Args\\":  \\"ENCRYPT\\",\\"Social-Security-Number\\",\\"123-45-6789\\" }\' --channelID behavesystest --transient \\"\{\\\\\\"ENCKEY\\\\\\":\\\\\\"L6P9jLWR6d6E1KdGJBsUpzEm5QS6uVlS4onsteB+KaQ\\\\\\"}\\" --orderer orderer0.example.com:7050 "' : 2018-04-27 05:42:13.547 UTC  grpc  Printf -> DEBU 001 dialing to target with scheme: ""      Also, the full console logs show some warnings throughout all the tests, but I don't think they are causing this bug:  04:38:41 2018-04-27 04:38:41.059 UTC  common/tools/configtxgen  main -> WARN 001 Omitting the channel ID for configtxgen is deprecated. Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'. 04:38:41 2018-04-27 04:38:41.100 UTC  common/tools/configtxgen/encoder  NewChannelGroup -> WARN 003 Default policy emission is deprecated, please include policy  ></description> </Issue>
