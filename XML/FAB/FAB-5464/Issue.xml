<Issue id="19482" key="FAB-5464" number="5464" project="10002" reporter="shimos" assignee="wlahti" creator="shimos" type="10004" summary="Heavy load on event hub might cause event stream disconnection" priority="2" resolution="10000" status="6" created="2017-07-26 00:54:57.0" updated="2018-07-20 14:13:53.0" resolutiondate="2018-05-04 11:35:25.0" votes="3" watches="17" workflowId="39542"> <environment><! CDATA fabric commit 2232d0ec348c81004e36ebbb1e1ab4d61f24b2cc fabric-sdk-node commit 34dd6496fb65b8eaaf10901dd88df3e67f1f2a71   ></environment> <description><! CDATA I tried concurrent invocation of a chaincode function based on the node-sdk's integration test, and the connection of the event stream is sometimes disconnected in the middle of execution.  The configuration are as follows: - One solo orderer - Two peers (two orgs, one peer for each org) - One sdk-node test program (based on test/integaration/invoke.js, see attached) -- Each invocation writes to a different key, so no conflicts occurs during the invocation. -- EventHub is shared by all the invocations, thus the number of event connection is just one. - Chaincode: test/fixture/src/github.com/examplecc modified to have 'put' function to write a value to an arbitrary key  After increasing the concurrency to over 300 (in my AWS environment), some of the invocations start to fail. In the peer side, all the transactions are successfully committed, showing solely one error as follows:  {noformat} 2017-07-25 22:56:38.554 UTC  eventhub_producer  SendProducerBlockEvent -> INFO 152baf Channel  mychannel : Sending event for block number  773  2017-07-25 22:56:38.554 UTC  eventhub_producer  Send -> DEBU 152bb0 Entry 2017-07-25 22:56:38.554 UTC  eventhub_producer  Send -> DEBU 152bb1 Event processor timeout > 0 2017-07-25 22:56:38.554 UTC  eventhub_producer  Send -> DEBU 152bb2 Event sent successfully 2017-07-25 22:56:38.554 UTC  eventhub_producer  Send -> DEBU 152bb3 Exit 2017-07-25 22:56:38.554 UTC  eventhub_producer  SendProducerBlockEvent -> DEBU 152bb4 Exit 2017-07-25 22:56:41.730 UTC  eventhub_producer  Chat -> ERRO 152bb5 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled 2017-07-25 22:56:41.731 UTC  eventhub_producer  deRegisterHandler -> DEBU 152bb6 deregistering event type: BLOCK 2017-07-25 22:56:41.974 UTC  blocksProvider  DeliverBlocks -> DEBU 152bb7  mychannel  Adding payload locally, buffer seqNum =  774 , peers number  0  2017-07-25 22:56:41.974 UTC  blocksProvider  DeliverBlocks -> DEBU 152bb8  mychannel  Gossiping block  774 , peers number  0  2017-07-25 22:56:41.974 UTC  committer  Commit -> DEBU 152bb9 Validating block 2017-07-25 22:56:41.974 UTC  txvalidator  Validate -> DEBU 152bba START Block Validation 2017-07-25 22:56:41.974 UTC  txvalidator  Validate -> DEBU 152bbb Validating transaction peer.ValidateTransaction() {noformat}  In the SDK side, EventHub gets some error, and closing the connection, failing all the callbacks registered. {noformat} ok 480  815  The balance transaction successfully committed debug:  EventHub.js : _processChainCodeOnEvents block=764 debug:  EventHub.js : _processChainCodeOnEvents - no registered chaincode event "listeners" debug:  EventHub.js : on.error - event stream:1 _current_stream:1 debug:  EventHub.js : on.error - grpc stream state :3 debug:  EventHub.js : _disconnect - start -- called due to:: Failed parsing HTTP/2 debug:  EventHub.js : _closeAllCallbacks - start debug:  EventHub.js : _closeAllCallbacks - blockOnErrors 0 debug:  EventHub.js : _closeAllCallbacks - transactionOnErrors 521 debug:  EventHub.js : _closeAllCallbacks - closing this callback d55fc6c1a39cb185001f9bf623640cd9350caf6ead0a333b1f977bf42b991d18 not ok 481  386  Event callback canceled --- operator: fail at: eh.registerTxEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/invoke-parallel-simplified.js:195:10) stack: |- Error:  386  Event callback canceled at Test.assert  as _assert  (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:212:54) at Test.bound  as _assert  (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:64:32) at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:277:10) at Test.bound  as fail  (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:64:32) at eh.registerTxEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/invoke-parallel-simplified.js:195:10) at closer (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:430:5) at EventHub._closeAllCallbacks (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:440:3) at EventHub._disconnect (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:383:8) at ClientDuplexStream.<anonymous> (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:354:10) at emitOne (events.js:96:13) ... debug:  EventHub.js : _closeAllCallbacks - closing this callback 9cf8d26e05d028025dd32722dcedffa848e9cd6aa6d92a00e83f2133172d377d {noformat}   ></description> </Issue>
