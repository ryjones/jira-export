<Issue id="15833" key="FAB-3241" number="3241" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Do not send redundant StateInfo messages in gossip" priority="3" resolution="10000" status="6" created="2017-04-19 09:56:42.0" updated="2018-07-20 14:12:16.0" resolutiondate="2017-04-21 07:21:59.0" votes="0" watches="1" workflowId="38043"> <description><! CDATA In gossip, whenever the channel related metadata is updated, a "dirty flag" is turned on, and periodically a goroutine disseminates to peers if the dirty flag is turned on. There is a bug that this dirty flag is never turned off.  This causes a redundant dissemination of StateInfo.   The stateInfo is periodically pulled from peers via a pull mechanism anyway- so there is no point in having periodical dissemination and thus the dirty flag should be turned off after dissemination.  https://github.com/hyperledger/fabric/blob/master/gossip/gossip/channel/channel.go#L230-L238  {code}  func (gc *gossipChannel) publishStateInfo() { 	if atomic.LoadInt32(&gc.shouldGossipStateInfo) == int32(0) { 		return 	} 	gc.RLock() 	stateInfoMsg := gc.stateInfoMsg 	gc.RUnlock() 	gc.Gossip(stateInfoMsg) } {code}  ></description> </Issue>
