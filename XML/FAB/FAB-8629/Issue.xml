<Issue id="28176" key="FAB-8629" number="8629" project="10002" reporter="christopherferris" assignee="christopherferris" creator="christopherferris" type="10001" summary="fabric doc and branch versioning strategy" priority="3" resolution="10000" status="6" created="2018-03-01 21:56:01.0" updated="2018-07-20 18:49:38.0" resolutiondate="2018-03-29 22:49:29.0" votes="1" watches="1" workflowId="41426"> <description><! CDATA Right now, we have quite a collection of RTD builds for Fabric:  latest|http://hyperledger-fabric.readthedocs.io/en/latest/   v1.1.0-rc1|http://hyperledger-fabric.readthedocs.io/en/v1.1.0-rc1/   v1.0.6|http://hyperledger-fabric.readthedocs.io/en/v1.0.6/   * release|http://hyperledger-fabric.readthedocs.io/en/release/   master|http://hyperledger-fabric.readthedocs.io/en/master/ *This actually is somewhat redundant, because 'latest' and 'master' are equivalent. 'v1.0.6' and 'release' are also equivalent.  Now, we have also talked about reworking the branch strategy for post 1.1 so that we have a release branch for every major.minor release. What I would propose is that so that we can avoid having to constantly change references, that we adopt a strategy of publishing two doc versions for master branch (current development):  latest == HEAD of masterstable == most recent preliminary release (preview, alpha, beta, rcx)   and that we publish one doc version for each major.minor release we have published:  release-1.0 == v1.0.xrelease-1.1 == v1.1.x  I would also propose that we adopt a similar naming convention for the release branches (e.g. release-1.0 and release-1.1) and that we then publish a series of tags against that for each patch release (e.g. v1.0.0...v1.0.6, etc).  ></description> </Issue>
