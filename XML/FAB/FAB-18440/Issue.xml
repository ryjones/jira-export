<Issue id="46644" key="FAB-18440" number="18440" project="10002" reporter="JIRAUSER21552" creator="JIRAUSER21552" type="10002" summary="A small bug in source code" priority="3" status="10100" created="2021-03-14 10:28:08.0" updated="2021-03-15 14:04:01.0" votes="0" watches="2" workflowId="60590" archived="N"> <description><! CDATA My submission is about the logic problem in the code. In bccsp/sw/fileks.go, there's a function called Init;  Init  initializes this KeyStore with a password, a path to a folder where the keys are stored and a read only flag. Each key is stored in a separated file whose name contains the key's SKI and flags to identity the key's type.  This function determines whether the variable “path” is valid, whether the path represented by “path” already exists, and If it does not exist, it will create the path. The variable "empty" is used to indicate whether the directory represented by the variable “path”is empty. If so, the variable "empty" is true; otherwise, it is false.  However, the last if statement in the function uses “empty” as the criterion. If “empty” is true, the code in the if statement  will be executed, and it will create the directory again based on “path”. There is no point in creating a same directory again if we know this directory is empty.. I think this if statement should be rewritten as,  If !empty{         Return error  }  if statement will be executed when “empty” is false and return an error that indicates the directory represented by “path”is not empty.  Finally, please forgive me for my poor English  ></description> </Issue>
