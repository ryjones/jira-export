<Issue id="46190" key="FAB-18259" number="18259" project="10002" reporter="btl5037" assignee="btl5037" creator="btl5037" type="10004" summary="Always Finalize FindObject Operations in PKCS11" priority="3" resolution="10000" status="6" created="2020-10-07 13:49:43.0" updated="2021-04-02 10:52:12.0" resolutiondate="2020-10-08 13:55:17.0" votes="0" watches="2" workflowId="60098" archived="N"> <description><! CDATA There are 6 pkcs11 operations that require the session handle to be finalized before a session can be reused. These operations are: Encrypt, Decrypt, Sign, Verify, Find, and Digest. The bccsp/pkcs11 package makes use of three of these operations: sign, verify, and find. Each of these operations has an init function, i.e., SignInit, VerifyInit and FindObjectInit, each are part of the cryptoki implementation. If the Init functions fail, the session handle is never initialized and the finalize function do not need to be called.  For SignInit and VerifyInit, the next operation we call are the Sign or Verify functions, which also atomically finalized the session. For the FindObjectInit operation however, we must explicitly call the FindObjectFinal function to release the lock on the session handle.  The current implementation makes a call to FindObject in between FindObjectInit and FindObjectFinal which has an error path. In the current implementation FindObjectFinal is not called on the error path, leaving the session in a state that it can't be used again.  We should always finalize regardless of the happy path or error path  ></description> </Issue>
