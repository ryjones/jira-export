<Action id="19033" issue="12717" author="yacovm" type="comment" created="2016-09-28 13:59:59.0" updateauthor="yacovm" updated="2016-09-28 13:59:59.0"> <body><! CDATA Is the channel membership supposed to be constant? monotonously increasing? Will a peer be able to be evicted from a channel?  I'm asking this because in the long term, the connection between the consensus and the peers would be via the gossip network, and while adding a peer to a channel is easy- removing it from a channel (and notifying *all peers in that channel*) is a much harder problem.   ></body> </Action>
<Action id="19372" issue="12717" author="kchristidis" type="comment" created="2016-10-22 03:31:06.0" updateauthor="kchristidis" updated="2016-10-22 03:31:06.0"> <body><! CDATA  ~yacovm : I believe we answered those questions in the #fabric-consensus-dev channel this past Thursday (answer: not monotonously increasing, and yes a peer will be able to be evicted from a channel), but if not, feel free to chime in again.   ~tuand : I will close this as we will create new channel-related stories (under Binh's related epic) that match the updated channel spec.  ></body> </Action>
<Action id="19394" issue="12717" author="yacovm" type="comment" created="2016-10-22 18:45:17.0" updateauthor="yacovm" updated="2016-10-22 18:54:02.0"> <body><! CDATA  ~kchristidis , I know, and yesterday I had a chat with  ~jyellick  in #fabric-gossip-dev.  I would like to know the status of the code of this whole multi-channel support. If to be more precise- we (gossip guys) will need in the future a way of determining for each block to what peers it can be sent (Or, given a block and a peer PKI-id, can we send the block to that peer?) From what I understood, what is written in the configuration is not the name/id/PKI-id of the peer but rather the *participant org CA membership* of the peer. Is there a way (or is there going to be a way) of determining from that, what peers should get the block and what peers shouldn't?   ></body> </Action>
<Action id="19400" issue="12717" author="kchristidis" type="comment" created="2016-10-23 18:50:36.0" updateauthor="kchristidis" updated="2016-10-23 18:50:36.0"> <body><! CDATA  ~yacovm : Not that I can think of.  The way we're approaching this is that it's the app's responsibility to pick the peers that will be participating on the channel. So, org A's application requests the creation of a channel by creating the appropriate config block, and after the channel has been created it passes on the channel's genesis block to a peer of its choosing (within the org) via the JoinChannel API (see step 5 in the "Creating a channel" section in the multi-channel document). So any peer within the org that gets a hold of that block can join the channel and broadcast/deliver from it.  So in gossip you're left with the problem of "do I relay this block to you or not?". I'm thinking aloud here but would it be unacceptable to relay it to all peers who belong in the same org and let them decide whether they will act on it or not? (They will act on it if they have been instructed by the org's app to do so.) An obvious drawback of this approach is that you'll be creating a lot of unnecessary traffic obviously.  ></body> </Action>
<Action id="19402" issue="12717" author="yacovm" type="comment" created="2016-10-24 09:40:42.0" updateauthor="yacovm" updated="2016-10-24 09:40:42.0"> <body><! CDATA # But, the ordering service somehow knows what peers can get updates of that channel when they connect to it, right? So- if the ordering service knows, why can't other entities like peers also know that? # You're saying that peers that connect to the ordering service and request blocks from a specific channel is only a subset of peers of that org that can potentially request these blocks. So you're worried about distributing blocks to peers that have no use of them, did I get that right? # Regardless of what is possible from the design as it is today- you have to understand that any-how, a peer should be able to know if a fellow peer that requests a block (of a channel) from that peer is allowed to obtain that block from him, or not. Otherwise- there is *no way* of doing state transfer between peers, and when a new peer joins it will have to obtain all blocks starting from the genesis from the consensus. I assume that is not something we'd like to happen.  ></body> </Action>
<Action id="19408" issue="12717" author="kchristidis" type="comment" created="2016-10-24 13:18:16.0" updateauthor="kchristidis" updated="2016-10-24 13:18:16.0"> <body><! CDATA RE: 1 --  "But, the ordering service somehow knows what peers can get updates of that channel when they connect to it, right?" Correct, via the message that these peers send along with their Deliver RPC. The current atomicbroadcast service definition doesn't support this, but it will have to be updated to include a channel ID of some sort.  "So- if the ordering service knows, why can't other entities like peers also know that?" Good point. I'm not sure what kind of calls are exchanged between gossiping peers, but perhaps an inclusion of that same channel ID as we do in the peer-to-orderer communication is the way to go. "If you're requesting blocks from a channel I'm a member of, and if you belong to the peer orgs that have access to this channel, I shall relay them to you." Do you see any problems with this logic?  RE: 2 --  Correct.  RE: 3 --  I see the point about state transfer.  "a peer should be able to know if a fellow peer that requests a block (of a channel) from that peer is allowed to obtain that block from him, or not"  So I think the last paragraph in point 1 response is probably the way to go here. A peer will comply with any requests to relay blocks from chain X, as long as these requests come from peers that belong to the peer orgs that participate in chain X. And these peers find out about this chain because their org's application informed them about it via the JoinChannel API.  Let me know if you think there's any problems with this approach.  ></body> </Action>
