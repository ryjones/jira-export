<Issue id="22955" key="FAB-6815" number="6815" project="10002" reporter="ratnakar" assignee="nnao" creator="ratnakar" type="10004" summary="peer channel fetch command is not working as expected when TLS is enabled" priority="3" resolution="10000" status="6" created="2017-10-30 21:58:09.0" updated="2020-06-04 16:58:39.0" resolutiondate="2017-11-05 20:59:53.0" votes="0" watches="3" workflowId="40399"> <description><! CDATA peer channel fetch command is not working as expected when TLS is enabled.  Unable to write the fetched block to an outputfile, as per the help messages . {code:java} peer channel fetch --help Fetch a specified block, writing it to a file.  Usage: peer channel fetch <newest|oldest|config|(number)>  outputfile   flags   Flags: -c, --channelID string   In case of a newChain command, the channel ID to create. {code} Fails with Error: *trailing args detected* {code:java} peer channel fetch 0 genesis_block.pb -o orderer.example.com:7050 -c "mychannel" --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA 2017-10-30 21:18:55.304 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2017-10-30 21:18:55.304 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2017-10-30 21:18:55.307 UTC  channelCmd  InitCmdFactory -> INFO 003 Endorser and orderer connections initialized Error: trailing args detected Usage: peer channel fetch <newest|oldest|config|(number)>  outputfile   flags   Flags: -c, --channelID string   In case of a newChain command, the channel ID to create.  Global Flags: --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint --logging-level string                Default logging level and overrides, see core.yaml for full syntax -o, --orderer string                      Ordering service endpoint --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer. --test.coverprofile string            Done (default "coverage.cov") --tls                                 Use TLS when communicating with the orderer endpoint -v, --version                             Display current version of fabric peer server {code} The workaround used here is to either ignore the output file and let it write to a file *true* for example one such instance  here|https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/scripts/script.sh#L75  {code:java} peer channel fetch 0 -o orderer.example.com:7050 -c "mychannel" --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA {code} Or to Ignore *--tls* option argument 'true' {code:java} peer channel fetch 0 genesis_block.pb -o orderer.example.com:7050 -c "mychannel" --tls --cafile $ORDERER_CA {code}  ></description> </Issue>
