<Issue id="18929" key="FAB-5157" number="5157" project="10002" reporter="jonathanlevi" assignee="c0rwin" creator="jonathanlevi" type="10004" summary="Being able to update the endpoints of ordering service" priority="3" resolution="10000" status="6" created="2017-07-04 08:20:41.0" updated="2018-07-20 14:13:42.0" resolutiondate="2017-11-16 14:46:51.0" votes="0" watches="9" workflowId="39373"> <description><! CDATA Let's use this JIRA ticket to report in detail the set of issues that  ~C0rWin  faced recently when attempting to update an endpoint. At best, one has to restart the peer in order for changes to   See an initial fix suggestion here:  https://gerrit.hyperledger.org/r/#/c/11339  **UPDATE** (adding details on how to reproduce the issue)  Used `configtx.yaml` from e2e example application.  1. Generate config transaction with `configtxgen` tool {code} configtxgen -profile TwoOrgsInChannel -channelID mychannel -outputCreateTx=mychannel.tx {code}  2. Create channel for peer {code} peer channel create -o localhost:7050 -c mychannel -f mychannel.tx {code}  3. Join channel {code} peer channel join -o localhost:7050 --blockpath mychannel.block {code}  4. Convert genesis block into json format  {code} curl -X POST --data-binary @mychannel.block http://localhost:7059/protolator/decode/common.Block -o mychannel.json {code}  5. Extract config part and update endpoint {code} jq ".data.data 0 .payload.data.config" mychannel.json > config.json jq '.channel_group.values.OrdererAddresses.value.addresses =  "orderer:7050" ' config.json > config_update.json {code}  6. Create config update {code} curl -X POST --data-binary @config.json http://localhost:7059/protolator/encode/common.Config -o config.block curl -X POST --data-binary @config_update.json http://localhost:7059/protolator/encode/common.Config -o config_update.block curl -X POST -F original=@config.block -F updated=@config_update.block http://localhost:7059/configtxlator/compute/update-from-configs -F channel=mychannel -o config_update.pb curl -X POST --data-binary @config_update.pb http://localhost:7059/protolator/decode/common.ConfigUpdate -o config_update.pb.json echo '{"payload":{"header":{"channel_header":{"channel_id":"mychannel", "type":2}},"data":{"config_update":'$(cat config_update.pb.json)'}}}' > config_update_as_envelope.json curl -X POST --data-binary @config_update_as_envelope.json http://127.0.0.1:7059/protolator/encode/common.Envelope -o config_update_as_envelope.pb {code}  7. Submit to the peer: {code} peer channel update -f config_update_as_envelope.pb -c mychannel -o localhost:7050 {code}  **Expected**  Peer to switch delivery clients to fetch blocks from the updated endpoints  **Results**  Delivery service continued to maintain connection with old endpoints  PS. Restart of the peer took effect and peers switched to fetch blocks from updated endpoints.  ></description> </Issue>
