<Action id="24891" issue="17283" author="angelo.decaro" type="comment" body="Hi  ~xixuejia , are you talking about the client-side or the server-side check?" created="2017-06-01 08:28:28.0" updateauthor="angelo.decaro" updated="2017-06-01 08:28:28.0"/>
<Action id="24996" issue="17283" author="muralisr" type="comment" body=" ~adc  can you take a look and follow through please ?" created="2017-06-01 19:07:15.0" updateauthor="muralisr" updated="2017-06-01 19:07:15.0"/>
<Action id="24997" issue="17283" author="xixuejia" type="comment" body="Hi  ~angelo.decaro , I&apos;m talking about the server-side check, when peer evaluates policies." created="2017-06-01 19:11:41.0" updateauthor="xixuejia" updated="2017-06-01 19:11:41.0"/>
<Action id="25066" issue="17283" author="angelo.decaro" type="comment" body="Hi All, this is again something for  ~jyellick  and  ~ales . What your take guys here?" created="2017-06-02 06:51:04.0" updateauthor="angelo.decaro" updated="2017-06-02 06:51:04.0"/>
<Action id="25284" issue="17283" author="muralisr" type="comment" body=" ~angelo.decaro  forgive my ignorance.. but would validation pass ? I&apos;d have expected identical principals to be removed." created="2017-06-04 20:25:42.0" updateauthor="muralisr" updated="2017-06-04 20:25:42.0"/>
<Action id="25285" issue="17283" author="xixuejia" type="comment" body="Hi  ~muralisr  Yes, validation will pass if user provides 2 identical identities. Please refer to the description. Apparently the identical principals are not removed for policy evaluation." created="2017-06-04 20:38:46.0" updateauthor="xixuejia" updated="2017-06-04 20:38:46.0"/>
<Action id="25465" issue="17283" author="xixuejia" type="comment" body="I would like to work on this if no one has time to look into it. The fix should be simple. I would add logic in VSCC to make sure each signature in Endorsements is unique so that the duplicated signatures will be eliminated. Any comment is welcome" created="2017-06-06 04:44:26.0" updateauthor="xixuejia" updated="2017-06-06 04:44:26.0"/>
<Action id="25508" issue="17283" author="angelo.decaro" type="comment" body=" ~ales , I thought we had addressed this already in the past. May you have your take on this, please?" created="2017-06-06 13:37:48.0" updateauthor="angelo.decaro" updated="2017-06-06 13:37:48.0"/>
<Action id="25509" issue="17283" author="ales" type="comment" body="This is indeed a known issue that  ~jyellick  and I discussed at length. I thought we had created a FAB to track the fact that we must deduplicate signatures in the set. Seems like we haven&apos;t, it needs to be fixed indeed." created="2017-06-06 14:18:21.0" updateauthor="ales" updated="2017-06-06 14:18:21.0"/>
<Action id="25510" issue="17283" author="angelo.decaro" type="comment" body=" ~ales , may you suggest a strategy given also what  ~xixuejia  has suggested?" created="2017-06-06 14:21:37.0" updateauthor="angelo.decaro" updated="2017-06-06 14:21:37.0"/>
<Action id="25513" issue="17283" author="ales" type="comment" created="2017-06-06 14:54:49.0" updateauthor="ales" updated="2017-06-06 14:54:49.0"> <body><! CDATA  ~jyellick  and I converged on two options, both of which required sorting and detecting duplicates: # identities # signatures  Deduplicating identities could be done in an MSP-specific way and it may be nicer to mask implementation-specific ways of comparing certificate representations. It has the downside that if rules out two endorsements from two peers who happen to have the same cert. Deduplicating signatures has the downside that the smartest way of doing it is to compare bytes - and if a signature has two byte-level representations, it can still be duplicated.  ></body> </Action>
<Action id="25609" issue="17283" author="angelo.decaro" type="comment" body=" ~xixuejia , would you think about  ~ales &apos;s proposal? Is it compatible with what you had in mind?" created="2017-06-07 08:29:10.0" updateauthor="angelo.decaro" updated="2017-06-07 08:29:10.0"/>
<Action id="25653" issue="17283" author="xixuejia" type="comment" body="Thanks  ~ales  and  ~angelo.decaro  for comments. I was thinking about deduplicating signatures because it would be easier and more efficient than comparing identities. I&apos;m not sure why it can still be duplicated if a signature has two byte-level representations. I may miss something on this.  ~ales  Would you please elaborate on this? Thanks" created="2017-06-07 15:03:24.0" updateauthor="xixuejia" updated="2017-06-07 15:03:24.0"/>
<Action id="25657" issue="17283" author="ales" type="comment" body="sure. Imagine you have an endorsement policy that requires two sigs from org1. You managed to get one but you can&apos;t get the second one. You are malicious and so you decide to exploit this by generating the second signature to be the other byte representation of the one that you have. This way you can present &quot;two&quot; signatures (which in reality they are just different representation of a single one) and pass the endorsement policy policy. Does this make sense?" created="2017-06-07 15:15:50.0" updateauthor="ales" updated="2017-06-07 15:15:50.0"/>
<Action id="25667" issue="17283" author="xixuejia" type="comment" body="Thanks  ~ales  for explanation. I could understand the basic workflow. I thought the user would sign on the hash of RWSet which is deterministic. Are you saying a malicious user could use different HASH algorithms or include some metadata to make &quot;two&quot; signatures? If so, as you mentioned, that would be more complicated to handle." created="2017-06-07 16:25:05.0" updateauthor="xixuejia" updated="2017-06-07 16:25:05.0"/>
<Action id="25687" issue="17283" author="ales" type="comment" body="not exactly - what I&apos;m saying is that a signature is usually an element of a large algebraic group. This element needs to be represented as an array of bytes. If there is more than one byte-level representation of the element, an attacker might use it to turn one signature into two different ones. Does that make sense?" created="2017-06-07 19:05:30.0" updateauthor="ales" updated="2017-06-07 19:05:30.0"/>
<Action id="25717" issue="17283" author="xixuejia" type="comment" body=" ~ales  Ah, yes. That makes sense. Then back to the 1st case, if two peers share the same certificate, can we take them as the same or duplicated member regarding to endorsement policy evaluation?" created="2017-06-08 02:36:21.0" updateauthor="xixuejia" updated="2017-06-08 02:36:21.0"/>
<Action id="25725" issue="17283" author="ales" type="comment" body="if we filter out duplicate identities, then if two peers share a cert, their signatures would be counted as one. How likely is it that peers share certs? I can&apos;t think of many good reasons why this is desirable." created="2017-06-08 09:28:29.0" updateauthor="ales" updated="2017-06-08 09:28:29.0"/>
<Action id="25727" issue="17283" author="xixuejia" type="comment" body="I also think it&apos;s not likely to share certs among peers for most cases. And even if peers did share the same cert, I think they still need to be regarded as one identity. Does that make sense to you? I asked the question because previously you mentioned the downside of deduplicating identities is _it rules out two endorsements from two peers who happen to have the same cert_. It seems like a concern to you? ~ales " created="2017-06-08 11:34:07.0" updateauthor="xixuejia" updated="2017-06-08 11:34:07.0"/>
<Action id="25730" issue="17283" author="ales" type="comment" created="2017-06-08 12:52:01.0" updateauthor="ales" updated="2017-06-08 12:52:01.0"> <body><! CDATA I agree with you - I was just recording this fact for the sake of completeness, but I agree that we should go with filtering duplicate identities. The way I would do it is as follows: unmarshal the identity from bytes, once you have the object you can call GetIdentifier() to retrieve  type IdentityIdentifier struct \{  // The identifier of the associated membership service provider Mspid string  // The identifier for an identity within a provider Id string }  and then one can sort lexicographically on those two strings. After sorting, it should be trivial to detect identities occurring more than once. Does this make sense? Do you want to take this?  ></body> </Action>
<Action id="25848" issue="17283" author="xixuejia" type="comment" body="Hi  ~ales  Yes, I could take it. " created="2017-06-09 12:47:36.0" updateauthor="xixuejia" updated="2017-06-09 12:47:36.0"/>
<Action id="25849" issue="17283" author="angelo.decaro" type="comment" body="Thank  ~xixuejia  :)" created="2017-06-09 12:52:41.0" updateauthor="angelo.decaro" updated="2017-06-09 12:52:41.0"/>
<Action id="25896" issue="17283" author="mastersingh24" type="comment" created="2017-06-09 17:55:45.0" updateauthor="mastersingh24" updated="2017-06-09 17:55:45.0"> <body><! CDATA You could just use a  {code}map string struct{}{code} and if the key exists you know it's a dup  ></body> </Action>
<Action id="25897" issue="17283" author="xixuejia" type="comment" body="Exactly. That&apos;s what I&apos;m using, another benefit is using map does not mess up the original order of identities. Thanks  ~mastersingh24 " created="2017-06-09 17:58:24.0" updateauthor="xixuejia" updated="2017-06-09 17:58:24.0"/>
<Action id="25927" issue="17283" author="xixuejia" type="comment" body="https://gerrit.hyperledger.org/r/#/c/10407/" created="2017-06-09 21:14:44.0" updateauthor="xixuejia" updated="2017-06-09 21:14:44.0"/>
<Action id="25949" issue="17283" author="muralisr" type="comment" body=" ~angelo.decaro   ~ales  can you review  https://gerrit.hyperledger.org/r/#/c/10407/  please ?" created="2017-06-10 11:01:53.0" updateauthor="muralisr" updated="2017-06-10 11:01:53.0"/>
<Action id="26251" issue="17283" author="ales" type="comment" created="2017-06-14 08:21:44.0" updateauthor="ales" updated="2017-06-14 08:21:44.0"> <body><! CDATA Sorry folks, I reviewed the change set but I didn't push on the reply button and so my comments got lost. My point was that the current fix addresses only endorsements, but we use the policy system in other parts of the code, e.g. in the configtx manager part of the peer. That part would still be affected by the bug. The bug could be triggered as follows: if there is a policy requiring 3 signatures from OrgA to change parts of the channel config, an attacker in possession of one signature could repeat it three times and get a malicious change approved.  A better fix would be to change the sources of the policy code directly, as opposed to fixing each individual usage.   ~mastersingh24 ,  ~jyellick ,  ~muralisr ,  ~angelo.decaro  please weigh in.  ></body> </Action>
<Action id="26261" issue="17283" author="muralisr" type="comment" body=" ~ales  I remember raising that question about fixing this at a policy level so it&apos;ll apply to other scenarios (I think in a conversation) as well. Now that the issue raised by this JIRA is fixed this way, perhaps we should revisit that for post 1.0 ?" created="2017-06-14 12:17:46.0" updateauthor="muralisr" updated="2017-06-14 12:17:46.0"/>
<Action id="26263" issue="17283" author="ales" type="comment" body="We need to decide how bad it is that the attack that we fixed against endorsement spoofing can still take place at the level of config updates. I would vote that it is just as bad if not worse, but I&apos;d be happy to hear what others think." created="2017-06-14 12:39:30.0" updateauthor="ales" updated="2017-06-14 12:39:30.0"/>
<Action id="26274" issue="17283" author="ales" type="comment" created="2017-06-14 15:00:18.0" updateauthor="ales" updated="2017-06-14 15:00:18.0"> <body><! CDATA Another option is to document the following limitation: "v1 does not properly handle policies that require >1 signatures with the same attribute (e.g. 2 signatures from Org1)". If this restriction is honored, the attack cannot be mounted in v1. In the meantime, we could fix it for after v1.   ~muralisr ,  ~ChristopherFerris , thoughts?  ></body> </Action>
<Action id="26278" issue="17283" author="binhn" type="comment" body=" ~ales  What would the cost be to restrict the policy to only allow 1 sig per org?  We can certainly live with this restriction in 1.0 and expanding it later." created="2017-06-14 15:17:11.0" updateauthor="binhn" updated="2017-06-14 15:17:11.0"/>
<Action id="26283" issue="17283" author="ales" type="comment" body="Enforcing the restriction of only 1 sig per org may be a non-trivial code change (at this stage), so imho the simplest way would be to just document the restriction" created="2017-06-14 15:31:19.0" updateauthor="ales" updated="2017-06-14 15:31:19.0"/>
<Action id="26317" issue="17283" author="muralisr" type="comment" body=" ~ales  if everyone agrees with that, perhaps open a doc JIRA and close this one out." created="2017-06-14 18:43:13.0" updateauthor="muralisr" updated="2017-06-14 18:43:13.0"/>
<Action id="26387" issue="17283" author="ales" type="comment" body="Done  ~muralisr  - https://jira.hyperledger.org/browse/FAB-4749" created="2017-06-15 13:17:46.0" updateauthor="ales" updated="2017-06-15 13:17:46.0"/>
