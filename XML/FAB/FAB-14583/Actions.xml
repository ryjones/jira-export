<Action id="58697" issue="38358" author="troyronda" type="comment" body="Is there a description of the rationale and scope of these internalization changes, along with an anticipated roadmap? Those, like us, who have created customized peers are being impacted; this is something we&apos;ve been doing since early in our usage of Fabric.  Do you plan to allow for a modular usage of the peer libraries, such that a developer could re-use the Fabric codebase to build customized peers?" created="2019-03-28 18:52:45.0" updateauthor="troyronda" updated="2019-03-28 18:54:18.0"/>
<Action id="58812" issue="38358" author="christopherferris" type="comment" body=" ~sykesm  ^^^" created="2019-04-01 21:15:28.0" updateauthor="christopherferris" updated="2019-04-01 21:15:28.0"/>
<Action id="58895" issue="38358" author="mastersingh24" type="comment" created="2019-04-03 14:52:28.0" updateauthor="mastersingh24" updated="2019-04-03 14:52:28.0"> <body><! CDATA The rationale is quite simple:  fabric is not a library or set of libraries.  It was never designed to be and certainly is not currently structured as such.   We should never even have allowed vendoring of bccsp by other projects.   The way we handle chaincode shim today is also very problematic (being addressed separately).  The peer does support a few plug points via Go plugins with defined interfaces and surface exposure.  We will likely need to improve these in 2.0.0 as well.  If there are other things that people desire to have as externally linkable packages, we can discuss but it needs to be done correctly.  ></body> </Action>
<Action id="65040" issue="38358" author="sykesm" type="comment" body="There&apos;s some disagreement about this intent, scope, and benefit of this work." created="2019-10-28 15:01:54.0" updateauthor="sykesm" updated="2019-10-28 15:01:54.0"/>
