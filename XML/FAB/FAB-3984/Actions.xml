<Action id="23950" issue="16819" author="kchristidis" type="comment" created="2017-05-17 16:20:38.0" updateauthor="kchristidis" updated="2017-05-17 16:20:38.0"> <body><! CDATA  ~wlahti  you're the domain expert here, so we'll need your help. Pointers (for sure), and maybe implementation.  Let's start with pointers. What do we need to do this to allow this? Any code snippets you can point us to (from the peer side)?  Thank you.  ></body> </Action>
<Action id="23951" issue="16819" author="kchristidis" type="comment" body="(Maintainers: added the &quot;review-needed&quot; label as this doesn&apos;t exactly fall into the &quot;bug fix&quot; category. Let us know what you think.)" created="2017-05-17 16:26:20.0" updateauthor="kchristidis" updated="2017-05-17 16:26:20.0"/>
<Action id="24196" issue="16819" author="christopherferris" type="comment" body="think that this could wait till post 1.0" created="2017-05-23 19:48:37.0" updateauthor="christopherferris" updated="2017-05-23 19:48:37.0"/>
<Action id="24198" issue="16819" author="yacovm" type="comment" body="From what I know to do that like it works in the peer we&apos;ll need to extend the gRPC API of the ordering service." created="2017-05-23 20:01:22.0" updateauthor="yacovm" updated="2017-05-23 20:01:22.0"/>
<Action id="24234" issue="16819" author="christopherferris" type="comment" body="that reinforces my position then... it should wait" created="2017-05-24 13:24:05.0" updateauthor="christopherferris" updated="2017-05-24 13:24:05.0"/>
<Action id="24242" issue="16819" author="wlahti" type="comment" created="2017-05-24 14:34:49.0" updateauthor="wlahti" updated="2017-05-24 14:50:10.0"> <body><! CDATA The primary code to view/update log levels dynamically for the peer resides in peer/clilogging ( https://github.com/hyperledger/fabric/tree/master/peer/clilogging ). We'll need that as well as a basic orderer CLI implementation and something similar to the ServerAdmin ( https://github.com/hyperledger/fabric/blob/master/core/admin.go ) to handle the gRPC interactions.  As to the effort to implement this, I'd think the majority of the code should be reusable with some simple changes from the peer to the orderer. My initial (very rough) guess would be a day or two to port the code and test things out.  ></body> </Action>
<Action id="24298" issue="16819" author="yacovm" type="comment" created="2017-05-25 07:06:44.0" updateauthor="yacovm" updated="2017-05-25 07:06:44.0"> <body><! CDATA I think we should wait with this also not only because we need to extend the gRPC interface but also because I think the approach we have in the peer CLI is wrong for the ordering service and might be also wrong with the peer - there is 0 access control in this admin server. It means *anyone*, even clients can control the logging level of a peer and the logging level of an ordering service.  I think that gRPC is the wrong protocol for such things, and we should adopt something else like https://github.com/davecheney/gmx    ></body> </Action>
<Action id="24341" issue="16819" author="kchristidis" type="comment" body="^^ Thanks for this, this is good feedback. If that&apos;s the case, and if Will agrees, let&apos;s defer till after 1.0 is cut and reconsider our approach." created="2017-05-25 15:22:56.0" updateauthor="kchristidis" updated="2017-05-25 15:22:56.0"/>
<Action id="24426" issue="16819" author="mastersingh24" type="comment" body="Defer" created="2017-05-26 09:56:20.0" updateauthor="mastersingh24" updated="2017-05-26 09:56:20.0"/>
<Action id="41304" issue="16819" author="kchristidis" type="comment" body="I&apos;ll close this. At one point in the not too distant future, we&apos;ll have to re-evaluate our logging approach in its entirety." created="2018-03-07 15:21:54.0" updateauthor="kchristidis" updated="2018-03-07 15:21:54.0"/>
