<Issue id="45946" key="FAB-18193" number="18193" project="10002" reporter="JIRAUSER20519" creator="JIRAUSER20519" type="10002" summary="Enhancement to configtxgen options restoring orthogonality with cryptogen" priority="3" status="10100" created="2020-08-28 02:48:01.0" updated="2020-08-28 02:48:01.0" votes="0" watches="1" workflowId="59856" archived="N"> <description><! CDATA cryptogen will let me use --config (input) and --output so I can do something more meaningful than call all the different tooling input files yamls. We end up with many yamls everywhere which is hard enough to track.  To avoid this I can currently do the following  $ cryptogen generate --config cryptogen.in --output cryptogen.outd     this means when I see a file under the /cryptogen.outd/ directory i know immediately  it was automatically generated from the cryptogen.in source from the (yep you guessed correctly) cryptogen tool.     I would really like to see the --config changed to --input or --input added as an alias  to preserve compatibility – which neither appears to be a priority for some strange  reason.     Furthermore, one would expect the same command option orthogonality to be preserved across the toolset allowing me to do      $configtxgen --input configtxgen.in (etc...)     instead configtxgen appears to have filename.yaml hardcoded into the Go sources.     I prefer my suggested style since calling something a yaml file is a bit too "meta" and presents a barrier to the self-documentation process.Ex I know by looking at my filespec that anything under /cryptogen.outd/ was automatically generated by cryptogen tool that was sourced from my cryptogen.in file. A *lot* more intuitive than what is currently happening. I'm dissapointed at the lack of thought that has gone into some of this.  By Comparison we dont call microsoft doc files "RTFs" same goes for old-school "SGML" files they were simply called "docs".  Likewise we dont talk about DWG files we talk about Autocad files – the tool being Autocad.    ></description> </Issue>
