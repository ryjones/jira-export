<Issue id="30928" key="FAB-10569" number="10569" project="10002" reporter="denyeart" assignee="senthil1" creator="denyeart" type="10004" summary="Should not be possible to create CouchDB indexes on non-existent collection" priority="3" resolution="10000" status="6" created="2018-06-06 21:04:46.0" updated="2018-08-01 04:34:11.0" resolutiondate="2018-08-01 04:34:11.0" votes="0" watches="2" workflowId="42811"> <description><! CDATA If you specify a collection index via META-INF/statedb/couchdb/collections/<collection_name>/indexes metadata directory, but the collection is not defined for the chaincode on the channel, currently the index gets created anyways in an unexpected CouchDB database.  Validation was added to ensure that chaincode operations cannot be taken against non-existent collections.  Similar validation is needed for the index operations. (----FAB-9997---- intended to add validations for both... some of the logic to retrieve the collection definitions from ----FAB-9997---- code can be re-used for this new check).  If caught at index creation time (once both install and instantiation/upgrade commit has happened on a peer), the index should not be created with a clear Error in the peer log (see FAB-10570 for more details about handling index creation errors).  Note that the instantiation cannot be invalidated, since some peers may not have the chaincode installed, and therefore the check for indexes within the chainocde installation package could not be done deterministically across all peers.  If caught at instantiation/upgrade simulation time, the endorsement should fail such that the client doing the instantiation/upgrade will get a notification and cannot proceed on to the instantiation/upgrade transaction submit step.  ></description> </Issue>
