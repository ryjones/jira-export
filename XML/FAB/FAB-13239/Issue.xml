<Issue id="36075" key="FAB-13239" number="13239" project="10002" reporter="sykesm" assignee="sykesm" creator="sykesm" type="10004" summary="DockerVM#streamOutput stays in an infinite loop" priority="2" resolution="10000" status="6" created="2018-12-11 18:06:43.0" updated="2018-12-12 16:36:43.0" resolutiondate="2018-12-12 16:36:43.0" votes="0" watches="1" workflowId="47590"> <description><! CDATA {code} 	go func() { 		// Block here until the attachment completes or we timeout 		select { 		case <-attached: // successful attach 			close(attached) // close indicates the streams can now be copied  		case <-time.After(10 * time.Second): 			dockerLogger.Errorf("Timeout while attaching to IO channel in container %s", containerName) 			return 		}  		// create a logger for the chaincode 		containerLogger := flogging.MustGetLogger("peer.chaincode." + containerName)  		is := bufio.NewReader(r) 		for { 			// Loop forever dumping lines of text into the containerLogger 			// until the pipe is closed 			line, err := is.ReadString('\n') 			switch err { 			case nil: 				containerLogger.Info(line) 			case io.EOF: 				dockerLogger.Infof("Container %s has closed its IO channel", containerName) 			default: 				dockerLogger.Errorf("Error reading container output: %s", err) 			} 		} 	}() {code}  When an error encountered, the loop should exit.  ></description> </Issue>
