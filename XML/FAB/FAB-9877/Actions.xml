<Action id="43832" issue="29940" author="denyeart" type="comment" created="2018-05-04 14:08:44.0" updateauthor="denyeart" updated="2018-05-04 14:09:35.0"> <body><! CDATA  ~muralisr   ~greg.haskins  Appreciate any help!  I think two things need to be looked at:  1) root cause of the immediate problem  2) how to get better error messages out of the chaincode docker image build... this isn't too helpful :) {code:java} Error returned from build: 137 ""{code}  ></body> </Action>
<Action id="43837" issue="29940" author="muralisr" type="comment" body=" ~latitiah  can you give me the setup and test instructions please ?" created="2018-05-04 14:38:00.0" updateauthor="muralisr" updated="2018-05-04 14:38:00.0"/>
<Action id="43840" issue="29940" author="latitiah" type="comment" created="2018-05-04 15:12:19.0" updateauthor="latitiah" updated="2018-05-04 15:12:19.0"> <body><! CDATA Sure, I have some ginkgo tests that I'm working on at: https://github.com/lhaskins/fabric/tree/FAB-9232/integration  Execute by going to "integration/e2e" and running "ginkgo -r".  What is there now, contains my workaround so others can see the layout, so it will pass, but only because it queries the 2nd peer and not the 1st.  To see the failure, change line at https://github.com/lhaskins/fabric/blob/FAB-9232/integration/e2e/e2e_test.go#L222 to: {code} FIt("executes a basic solo network with 2 orgs", func() { {code}  And change line at https://github.com/lhaskins/fabric/blob/FAB-9232/integration/e2e/e2e_test.go#L299 to: {code} It("tests ACL - Happy Path", func() { {code}  (Change the focus to the breaking test.)   ></body> </Action>
<Action id="43850" issue="29940" author="muralisr" type="comment" created="2018-05-04 15:49:25.0" updateauthor="muralisr" updated="2018-05-04 15:49:25.0"> <body><! CDATA  ~latitiah    ~denyeart  found this with some explanation on the "137" return code  https://github.com/moby/moby/issues/21083.   Though old (2016) it might be relevant. It also has some suggestions for fixing the problem.  If the above doesn't work (or doesn't apply to your scenario) I will try recreate/debug.  ></body> </Action>
<Action id="43918" issue="29940" author="latitiah" type="comment" body=" ~muralisr  This error is occurring in an Ubuntu env as well. The docker container does die, but not always. When it does occur, what should the recovery process look like? After seeing this error, the chaincode container still does not start when I attempt to query on the peer." created="2018-05-05 01:11:21.0" updateauthor="latitiah" updated="2018-05-05 01:11:21.0"/>
<Action id="43927" issue="29940" author="muralisr" type="comment" body=" ~latitiah  From what I gather, the error occurs during image creation which would explain why the chaincode container does not start on invoke or query. Did you try increasing the memory at all as suggested in the above link ?" created="2018-05-05 13:25:12.0" updateauthor="muralisr" updated="2018-05-05 13:25:12.0"/>
<Action id="43937" issue="29940" author="muralisr" type="comment" created="2018-05-06 00:22:51.0" updateauthor="muralisr" updated="2018-05-06 00:25:17.0"> <body><! CDATA  ~latitiah   ~denyeart  Took me a bit of digging to understand the BDD test.  *1. Why is there chaincode starting for the second peer when I've pass creds for the first peer?* The instantiation happens on a different peer during channel setup phase than the one you are invoking/querying (see peer "p" in  https://github.com/lhaskins/fabric/blob/FAB-9232/integration/world/config.go#L303 ... its the last peer in the config, assume its "org2" peer). So that peer starts up a chaincode container. When you attempt to invoke/query on an "org1" peer, that attempts to start up the  chaincode on the other peer. For some reason that second image creation fails for you with "137". The 2 chaincodes is expected in this scenario and both need to be successfully started for the scenario to succeed.  This also explains why the happy path worked - you are querying the same peer you are instantiating and had only one chaincode container to contend with.  *2. The first peer chaincode not consistently starting, but sometimes does and sometimes doesn't. (Mostly today, it doesn't.)* It always worked for me on my Ubuntu (put it in a loop for 20+ times..going to run more runs). So not able to recreate the issue on my machine.     Bottomline, this appears to be a Docker specific (or machine specifc) configuration issue that's causing the second image to fail sometimes. This is consistent with the suggestions for "137" error in google.  ></body> </Action>
<Action id="43938" issue="29940" author="muralisr" type="comment" created="2018-05-06 00:52:11.0" updateauthor="muralisr" updated="2018-05-06 00:52:11.0"> <body><! CDATA One thing... this could be as simple as too small timeout for creatinng the second image... try increasing timeout from 10 secs to something larger here https://github.com/lhaskins/fabric/blob/FAB-9232/integration/e2e/e2e_test.go#L381     ></body> </Action>
<Action id="44017" issue="29940" author="adnanchoudhury" type="comment" created="2018-05-07 19:42:46.0" updateauthor="adnanchoudhury" updated="2018-05-07 19:43:07.0"> <body><! CDATA This is breaking many verify jobs in `fabric-test` in the CI, and almost all manual tests I do via Behave, since late Friday.  Do we know which specific CR started this?    ~latitiah   ></body> </Action>
<Action id="44023" issue="29940" author="latitiah" type="comment" created="2018-05-07 22:31:36.0" updateauthor="latitiah" updated="2018-05-07 22:31:36.0"> <body><! CDATA The tests that are in my personal repo were written to allow for a "Pass" so that we could move forward with what was needed, but the "normal" execution still fails occasionally. Also note, this problem is being seen in other test cases including the bash e2e smoke tests in CI. (https://jenkins.hyperledger.org/job/fabric-smoke-tests-x86_64/932/console) This is what I received today {code}  e  peer  2018-05-07 22:21:56.642 UTC  chaincode-platform  func1 -> ERRO 031 Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found  e  peer  2018-05-07 22:21:56.643 UTC  dockercontroller  deployImage -> ERRO 032 Error building images: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found  e  peer  2018-05-07 22:21:56.643 UTC  dockercontroller  deployImage -> ERRO 033 Image Output:  e  peer  ********************  e  peer    e  peer  ********************  e  peer  2018-05-07 22:21:56.645 UTC  chaincode  Launch -> ERRO 034 startAndWiatForReady failed: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found  e  peer  error starting container  e  peer  error starting container  e  peer  2018-05-07 22:21:56.645 UTC  endorser  simulateProposal -> ERRO 035  testchannel  2b00272b  failed to invoke chaincode name:"lscc" , error: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found  e  peer  error starting container  e  peer  error starting container  e    Error: Could not assemble transaction, err Proposal response was not successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found {code}  Feel free to look and use the code in the gerrit CR: https://gerrit.hyperledger.org/r/#/c/21453/  ></body> </Action>
<Action id="44024" issue="29940" author="latitiah" type="comment" body=" ~AdnanChoudhury  no, I&apos;m not sure exactly which CR started this. I&apos;ve only done some prelim triaging so that I could open this issue and have someone else take a look :)" created="2018-05-07 22:32:40.0" updateauthor="latitiah" updated="2018-05-07 22:32:40.0"/>
<Action id="44026" issue="29940" author="muralisr" type="comment" created="2018-05-08 01:06:48.0" updateauthor="muralisr" updated="2018-05-08 01:06:48.0"> <body><! CDATA  ~latitiah   not sure if you saw my comments above ... especially  {code:java} One thing... this could be as simple as too small timeout for creatinng the second image... try increasing timeout from 10 secs to something larger here https://github.com/lhaskins/fabric/blob/FAB-9232/integration/e2e/e2e_test.go#L381{code}  ></body> </Action>
<Action id="44027" issue="29940" author="scottz" type="comment" created="2018-05-08 01:11:07.0" updateauthor="scottz" updated="2018-05-08 01:11:07.0"> <body><! CDATA  ~rameshthoomu  Did anything change recently with the creation and pushing of the fabric-ccenv images tagged as latest, per previous comment?   ~latitiah  What is the timeout being used in the tests, for the creation of the containers upon instantiation (due to query/invoke versus instantiation)?   ~muralisr  Were you able to identify any updates that might have caused the issue to surface? And, can you explain why we are seeing errors about ccenv, when we are trying to create a second chaincode container?  ></body> </Action>
<Action id="44028" issue="29940" author="muralisr" type="comment" created="2018-05-08 01:18:00.0" updateauthor="muralisr" updated="2018-05-08 01:18:12.0"> <body><! CDATA  ~scottz  I couldn't recreate in my env. As explained in my comments the "two container" issue is an expected one. In addition I also suggested (for the third time :) now) and have not heard back if this has been tried {code:java} One thing... this could be as simple as too small timeout for creatinng the second image... try increasing timeout from 10 secs to something larger here https://github.com/lhaskins/fabric/blob/FAB-9232/integration/e2e/e2e_test.go#L381{code}  ></body> </Action>
<Action id="44029" issue="29940" author="muralisr" type="comment" created="2018-05-08 01:21:50.0" updateauthor="muralisr" updated="2018-05-08 01:22:15.0"> <body><! CDATA  ~scottz  I did see   {code:java} Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found  {code}  once when I was trying various things. In the end - in my case - it turned out to be a confused docker env.  *hyperledger/fabric-ccenv:amd64-latest* was clearly there in docker but for some reason the docker env did not recognize it.  I reset docker and restarted fresh and the problem disappeared/  ></body> </Action>
<Action id="44030" issue="29940" author="muralisr" type="comment" created="2018-05-08 02:43:51.0" updateauthor="muralisr" updated="2018-05-08 02:43:51.0"> <body><! CDATA  ~scottz   ~latitiah   ~AdnanChoudhury   ~denyeart  Suggest we try this  # Reset the docker env by removing all data ( in Mac the "Remove All Data"  under Preferences->Reset) #  increase timeout from 10 secs to something larger here https://github.com/lhaskins/fabric/blob/FAB-9232/integration/e2e/e2e_test.go#L381  Run test.  ></body> </Action>
<Action id="44090" issue="29940" author="latitiah" type="comment" created="2018-05-08 18:27:01.0" updateauthor="latitiah" updated="2018-05-08 18:37:08.0"> <body><! CDATA I've increased the timeout in execute and cleared the docker memory - it didn't fix the instantiation problem.  This is the area where the bug lies:  The code is looking for the docker image ccenv for amd64_latest {code:java}  e  peer  2018-05-08 14:19:31.204 EDT  chaincode-platform  func1 -> ERRO 030 Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found   e  peer  2018-05-08 14:19:31.204 EDT  dockercontroller  deployImage -> ERRO 031 Error building images: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:amd64-latest: API error (404): manifest for hyperledger/fabric-ccenv:amd64-latest not found{code} What is on the system is tagged for x86_64 {code:java} hyperledger/fabric-ccenv       latest                            f1dfb5452a0c        3 hours ago         1.45GB  hyperledger/fabric-ccenv       x86_64-1.2.0-snapshot-c06a6ccfa   f1dfb5452a0c        3 hours ago         1.45GB  hyperledger/fabric-ccenv       x86_64-latest                     f1dfb5452a0c        3 hours ago         1.45GB{code} Note: I tagged the docker image to the requested image to see what difference this would make. The docker error goes away, but the chaincode is still not being instantiated.  ></body> </Action>
<Action id="44091" issue="29940" author="muralisr" type="comment" created="2018-05-08 19:06:23.0" updateauthor="muralisr" updated="2018-05-08 19:06:23.0"> <body><! CDATA  ~latitiah  I see this in my env  {code:java} hyperledger/fabric-ccenv                                                                               amd64-1.2.0-snapshot-e5c4f982   188ce64432e7        2 days ago          1.42GB hyperledger/fabric-ccenv                                                                               amd64-latest                    188ce64432e7        2 days ago          1.42GB hyperledger/fabric-ccenv                                                                               latest                          188ce64432e7        2 days ago          1.42GB registry.hub.docker.com/hyperledger/fabric-ccenv                                                       x86_64-1.1.0                    c8b4909d8d46        7 weeks ago         1.39GB {code}  Sounds like some kind of build env issue on your machine ?  ></body> </Action>
<Action id="44099" issue="29940" author="wlahti" type="comment" body="I was pairing with Latitia today and was seeing the same images created on my local machine (and thus the same error related to the docker build). I just ran &quot;make clean docker&quot; on my machine as well as our pairing machine and it&apos;s now past that error but the chaincode container is still having problems. I&apos;ll investigate further to see what&apos;s happening now and report back. " created="2018-05-08 19:45:13.0" updateauthor="wlahti" updated="2018-05-08 19:45:13.0"/>
<Action id="44100" issue="29940" author="adnanchoudhury" type="comment" body="Update: The CI issue was found to be a separate one, not this one, though it has the same error messages. CI_failure tag was removed." created="2018-05-08 20:22:05.0" updateauthor="adnanchoudhury" updated="2018-05-08 20:22:05.0"/>
<Action id="44140" issue="29940" author="latitiah" type="comment" created="2018-05-09 18:40:45.0" updateauthor="latitiah" updated="2018-05-09 18:43:29.0"> <body><! CDATA So it looks like this issue had multiple culprits. The missing image as stated earlier as well as in the core.yaml file, there is a new section (endorsers) in the peer handlers for escc that needs to be added. {code:java} peer: ... handlers: ... endorsers: escc: name: DefaultEndorsement {code} I am closing this issue as resolved.  ></body> </Action>
<Action id="44153" issue="29940" author="muralisr" type="comment" created="2018-05-10 02:38:44.0" updateauthor="muralisr" updated="2018-05-10 02:38:44.0"> <body><! CDATA So what happened with the original error ? That is still unexplained (my guess was the small timeout)  {code:java}  e  peer  2018-05-03 22:09:46.659 UTC  dockercontroller  deployImage -> ERRO 035 Error building images: Failed to generate platform-specific docker build: Error returned from build: 137 ""  e  peer  2018-05-03 22:09:46.659 UTC  dockercontroller  deployImage -> ERRO 036 Image Output:  e  peer  ********************  e  peer    e  peer  ********************  e  peer  2018-05-03 22:09:46.684 UTC  chaincode  Launch -> ERRO 037 startAndWiatForReady failed: Failed to generate platform-specific docker build: Error returned from build: 137 "" {code}  ></body> </Action>
