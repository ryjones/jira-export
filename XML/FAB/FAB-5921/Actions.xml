<Action id="30267" issue="20421" author="muralisr" type="comment" created="2017-08-28 15:53:56.0" updateauthor="muralisr" updated="2017-08-28 15:53:56.0"> <body><! CDATA This is an issue with the narrow case of a chaincode calling the SAME chaincode on another channel. Currently the code prevents loops in chaincode invocation by tracking transaction IDs in use. It does not disambiguate the case of the same chaincode being called on another channel (which is not really a "loop").  Two ways to handle this # add channel id to txid tracker to disambiguate - this is a clean solution but would need all chaincode platforms to pass back channelID on GET,PUT,... requests to the peer. This will break compatibility with 1.0 chaincode deployments as they will not be passing back channel ID.  # create a new transaction (txid+channel) to associate with the called chaincode (same chaincode on another channel). This is not a bad solution especially since the cross channel chaincode call is read-only. This will not break compatibility. The only negative is that if the chaincode calls GetTxID it will see "channel+txid".  But as this a read only call that does not affect state, this may be ok.  This is a bug and not really a feature we could introduce via compatibility work. So if we are doing (1) we better do so immediately.    ~binhn   ~mastersingh24   ~jeffgarratt   ></body> </Action>
<Action id="30321" issue="20421" author="jeffgarratt" type="comment" body="Spoke with  ~muralisr , asked that we try with the chaincode on channel 2 having a different name.  Gonna give that a go." created="2017-08-29 15:40:15.0" updateauthor="jeffgarratt" updated="2017-08-29 15:40:15.0"/>
<Action id="30646" issue="20421" author="muralisr" type="comment" body="option 1 would cause compatibility issues with deployed chaincode images...linking to JIRA-5999" created="2017-09-07 19:41:00.0" updateauthor="muralisr" updated="2017-09-07 19:41:00.0"/>
<Action id="33240" issue="20421" author="muralisr" type="comment" created="2017-10-26 17:38:05.0" updateauthor="muralisr" updated="2017-10-26 17:38:05.0"> <body><! CDATA  ~jimthematrix@gmail.com    ~sanchezl    ~denyeart   ~mastersingh24   fixing this properly per option 1 would need change to proto.ChaincodeMessage to have a channel field. On the plus side we can now have a GetChannelID query on the chaincode. On the minus side we would have to change java and node chaincode shims. My recommendation would be to bite the bullet and change now (I have the code ready for GO side and can coordinate to work on node and java chaincodes as well).   These changes won't affect SDKs or CLI.  ></body> </Action>
<Action id="33250" issue="20421" author="mastersingh24" type="comment" body=" ~muralisr   it seems that adding the channel field is the right call.  Should not be too hard to modify the NodeJS and Java shims for this." created="2017-10-26 19:13:23.0" updateauthor="mastersingh24" updated="2017-10-26 19:13:23.0"/>
<Action id="33255" issue="20421" author="denyeart" type="comment" body="There is already no compatibility between 1.1 peer and 1.0 chaincode image (due to TLS and private data collections that were added to proto).  Chaincode image will have to be removed and rebuilt upon peer upgrade to 1.1.  So I don&apos;t think we need to be concerned about yet another compatibility break, and I therefore agree with Gari that we can go ahead and add the channel field." created="2017-10-26 19:21:44.0" updateauthor="denyeart" updated="2017-10-26 19:21:44.0"/>
