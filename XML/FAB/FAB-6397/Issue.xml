<Issue id="21236" key="FAB-6397" number="6397" project="10002" reporter="scottz" assignee="latitiah" creator="scottz" type="10004" summary="fabric-test repo behave tests for env variables cause subsequent test failures" priority="3" resolution="10000" status="6" created="2017-10-02 18:18:38.0" updated="2018-07-20 14:14:33.0" resolutiondate="2017-10-17 20:44:45.0" votes="0" watches="1" workflowId="40157"> <description><! CDATA Behave Tests such as the following, which set config variables and verify their values by retrieving them from the peer/orderer/kafka nodes, seem to pass but must not clean up properly because all subsequent tests fail. I thnk the failures started happening when I added some more env variables to the testcase (which were already in the .env file but were not being verified). I added them so we could provide better coverage, to confirm we could set env variables that are defined in all of the yaml files (configtx, orderer, core).  For now, I inserted skip statements for these, but anyone can reproduce this problem when removing the skip statements and running `behave -t smoke` or `behave -t daily`  +bootstrap.feature+ : (let's insert this new FAB into this scenario title, which has no FAB yet): * Scenario: Setting of environment variables  +orderer.feature+ * FAB-4808: Orderer_BatchTimeOut is honored, for <type> orderer * Actually, this test sets, but does not verify, the new value for batchtimeout. Now I don't remember confirming if this caused subsequent failures, but I skipped it anyways to be safe. That was probably unnecessary, because I just noticed that others in ledger and gossip files set env variables (without checking them) and they work fine.     ></description> </Issue>
