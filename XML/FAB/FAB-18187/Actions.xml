<Action id="70072" issue="45933" author="btl5037" type="comment" created="2020-08-26 22:57:11.0" updateauthor="btl5037" updated="2020-08-26 22:58:19.0"> <body><! CDATA You can use modules in 1.4, you just have to end the process by vendoring, so it looks like this {code:java} export GO111MODULE=on #This will pin on the latest 1.4 commit go get github.com/hyperledger/fabric@f208ffeb4dfda3f520ae5e481ebe0b58230addab  go mod tidy go mod vendor {code} This will use modules to version and manage your dependencies, but provide them in the traditional vendor folder. The only difference between this and 2.0 Fabric is in 2.0 you don't have to explicitly have the vendor directory, as we will use modules to pull that in. So you get all the benefits of modules, minus the disk overhead of the vendor directory on your local machine.  ></body> </Action>
<Action id="70073" issue="45933" author="btl5037" type="comment" created="2020-08-26 23:01:55.0" updateauthor="btl5037" updated="2020-08-26 23:02:30.0"> <body><! CDATA The commit you chose would only enable using Go Mod to version the shim and protos in your Chaincode, which would still need to be vendored anyway, as we don't provide support for module based chaincode in 1.4. Essentially you picked the wrong commit to backport, you wanted one from sometime last year which has a much smaller surface area and enhances the chaincode launch process to use Go Modules, not Fabric itself.  That being said, this isn't something we would target for backporting. We don't backport features, only bug fixes and security fixes, especially into an LTS branch where we guarantee backwards compatibily and stability. There is too much danger in backporting unnecessary changes that would be applied against running production networks. This isn't something we would consider for backport even with the right commits chosen.  While we understand the desire for it, it's just out of place for backport, especially with approximately 6 months until 1.4 is end of life.  ></body> </Action>
<Action id="70076" issue="45933" author="JIRAUSER20507" type="comment" body="Thank you very much for the detailed explanation and the guide as well  ~btl5037  I understand completely." created="2020-08-26 23:17:51.0" updateauthor="JIRAUSER20507" updated="2020-08-26 23:17:51.0"/>
