<Issue id="41936" key="FAB-16369" number="16369" project="10002" reporter="abel23" creator="abel23" type="10004" summary="Unable to query data from a non anchor peer. Error endorsing query" priority="3" resolution="10002" status="6" created="2019-08-21 12:07:54.0" updated="2019-09-24 07:35:44.0" resolutiondate="2019-09-23 20:27:45.0" votes="0" watches="1" workflowId="54977"> <description><! CDATA output from cli of peer {code:java} root@bc9e9fc55e86:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C mychannel -n fabcarcc -c '{"Args": "queryAllCars","a" }' Error: endorsement failure during query. response: status:500 message:"GET_STATE_BY_RANGE failed: transaction ID: 92783ba2b60882a77eb6f7e1433c05ce25c9b10ea5f094e356e745a634abd22f: error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist."  {code} the logs from the peer that can't query the data {code:java} 2019-08-21 11:44:00.189 UTC  lockbasedtxmgr  NewTxSimulator -> DEBU 4cc5b constructing new tx simulator 2019-08-21 11:44:00.189 UTC  lockbasedtxmgr  newLockBasedTxSimulator -> DEBU 4cc5c constructing new tx simulator txid =  702ca90d821e57e0523e588b933363a0112ac8239ad615dac5f112fa16884809  2019-08-21 11:44:00.189 UTC  endorser  SimulateProposal -> DEBU 4cc5d  mychannel  702ca90d  Entry chaincode: name:"fabcarcc"  2019-08-21 11:44:00.189 UTC  statecouchdb  GetState -> DEBU 4cc5e GetState(). ns=lscc, key=fabcarcc 2019-08-21 11:44:00.189 UTC  statecouchdb  getState -> DEBU 4cc5f key: fabcarcc  found in the lsccStateCache 2019-08-21 11:44:00.189 UTC  ccprovider  GetChaincodeData -> DEBU 4cc60 Getting chaincode data for <fabcarcc, 1.0> from cache 2019-08-21 11:44:00.189 UTC  endorser  callChaincode -> INFO 4cc61  mychannel  702ca90d  Entry chaincode: name:"fabcarcc"  2019-08-21 11:44:00.189 UTC  chaincode  Execute -> DEBU 4cc62 Entry 2019-08-21 11:44:00.190 UTC  chaincode  handleMessage -> DEBU 4cc63  702ca90d  Fabric side handling ChaincodeMessage of type: GET_STATE_BY_RANGE in state ready 2019-08-21 11:44:00.190 UTC  chaincode  HandleTransaction -> DEBU 4cc64  702ca90d  handling GET_STATE_BY_RANGE from chaincode 2019-08-21 11:44:00.190 UTC  statecouchdb  GetStateRangeScanIteratorWithMetadata -> DEBU 4cc65 Entering GetStateRangeScanIteratorWithMetadata  namespace: fabcarcc  startKey: CAR0  endKey: CAR999  metadata: map   2019-08-21 11:44:00.190 UTC  couchdb  ReadDocRange -> DEBU 4cc66  mychannel_fabcarcc  Entering ReadDocRange()  startKey=CAR0, endKey=CAR999 2019-08-21 11:44:00.190 UTC  couchdb  handleRequest -> DEBU 4cc67 Entering handleRequest()  method=GET  url=http://couchdb1:5984  dbName=mychannel_fabcarcc 2019-08-21 11:44:00.190 UTC  couchdb  handleRequest -> DEBU 4cc68 Request URL: http://couchdb1:5984/mychannel_fabcarcc/_all_docs?attachments=true&endkey=%22CAR999%22&include_docs=true&inclusive_end=false&limit=1001&startkey=%22CAR0%22 2019-08-21 11:44:00.191 UTC  couchdb  handleRequest -> DEBU 4cc69 HTTP Request: GET /mychannel_fabcarcc/_all_docs?attachments=true&endkey=%22CAR999%22&include_docs=true&inclusive_end=false&limit=1001&startkey=%22CAR0%22 HTTP/1.1 | Host: couchdb1:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Authorization: Basic dXZpb25pY3M6dXZpb25pY3MxMjM= | Accept-Encoding: gzip |  |  2019-08-21 11:44:00.222 UTC  couchdb  handleRequest -> DEBU 4cc6a Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist. 2019-08-21 11:44:00.223 UTC  statecouchdb  rangeScanFilterCouchInternalDocs -> DEBU 4cc6b Error calling ReadDocRange(): error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist. 2019-08-21 11:44:00.224 UTC  chaincode  HandleTransaction -> ERRO 4cc6c  702ca90d  Failed to handle GET_STATE_BY_RANGE. error: error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist. github.com/hyperledger/fabric/core/ledger/util/couchdb.(*CouchInstance).handleRequest 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/util/couchdb/couchdb.go:1847 github.com/hyperledger/fabric/core/ledger/util/couchdb.(*CouchDatabase).handleRequest 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/util/couchdb/couchdb.go:1650 github.com/hyperledger/fabric/core/ledger/util/couchdb.(*CouchDatabase).ReadDocRange 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/util/couchdb/couchdb.go:919 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.rangeScanFilterCouchInternalDocs 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:392 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*queryScanner).getNextStateRangeScanResults 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:375 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.newQueryScanner 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:709 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*VersionedDB).GetStateRangeScanIteratorWithMetadata 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:364 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb.(*VersionedDB).GetStateRangeScanIterator 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb/statecouchdb.go:333 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/privacyenabledstate.(*CommonStorageDB).GetStateRangeScanIterator 	<autogenerated>:1 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.newResultsItr 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:344 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*queryHelper).getStateRangeScanIterator 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go:79 github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*lockBasedQueryExecutor).GetStateRangeScanIterator 	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_query_executer.go:46 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetStateByRange 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:771 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetStateByRange-fm 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:215 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:272 runtime.goexit 	/opt/go/src/runtime/asm_amd64.s:1333 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetStateByRange 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:774 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleGetStateByRange-fm 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:215 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:272 runtime.goexit 	/opt/go/src/runtime/asm_amd64.s:1333 GET_STATE_BY_RANGE failed: transaction ID: 702ca90d821e57e0523e588b933363a0112ac8239ad615dac5f112fa16884809 github.com/hyperledger/fabric/core/chaincode.(*Handler).HandleTransaction 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:276 runtime.goexit 	/opt/go/src/runtime/asm_amd64.s:1333 2019-08-21 11:44:00.224 UTC  chaincode  HandleTransaction -> DEBU 4cc6d  702ca90d  Completed GET_STATE_BY_RANGE. Sending ERROR 2019-08-21 11:44:00.227 UTC  chaincode  handleMessage -> DEBU 4cc6e  702ca90d  Fabric side handling ChaincodeMessage of type: COMPLETED in state ready 2019-08-21 11:44:00.227 UTC  chaincode  Notify -> DEBU 4cc6f  702ca90d  notifying Txid:702ca90d821e57e0523e588b933363a0112ac8239ad615dac5f112fa16884809, channelID:mychannel 2019-08-21 11:44:00.227 UTC  chaincode  Execute -> DEBU 4cc70 Exit 2019-08-21 11:44:00.227 UTC  gossip.gossip  handleMessage -> DEBU 4cc71 Entering, 10.0.0.11:40284 68991bb92b1699d8358468e7ec3c59ed2a6888c0c185faf89b6d783448130d64 sent us GossipMessage: tag:EMPTY hello:<nonce:4060876422085626696 msg_type:IDENTITY_MSG > , Envelope: 16 bytes, Signature: 0 bytes 2019-08-21 11:44:00.227 UTC  endorser  callChaincode -> INFO 4cc72  mychannel  702ca90d  Exit chaincode: name:"fabcarcc"  (38ms) 2019-08-21 11:44:00.227 UTC  lockbasedtxmgr  GetTxSimulationResults -> DEBU 4cc73 Simulation completed, getting simulation results 2019-08-21 11:44:00.227 UTC  lockbasedtxmgr  Done -> DEBU 4cc75 Done with transaction simulation / query execution  702ca90d821e57e0523e588b933363a0112ac8239ad615dac5f112fa16884809  2019-08-21 11:44:00.228 UTC  endorser  SimulateProposal -> DEBU 4cc76  mychannel  702ca90d  Exit 2019-08-21 11:44:00.227 UTC  gossip.pull  HandleMessage -> DEBU 4cc74 GossipMessage: tag:EMPTY hello:<nonce:4060876422085626696 msg_type:IDENTITY_MSG > , Envelope: 16 bytes, Signature: 0 bytes 2019-08-21 11:44:00.228 UTC  msp  DeserializeIdentity -> DEBU 4cc77 Obtaining identity 2019-08-21 11:44:00.229 UTC  msp  DeserializeIdentity -> DEBU 4cc78 Obtaining identity 2019-08-21 11:44:00.228 UTC  endorser  ProcessProposal -> ERRO 4cc79  mychannel  702ca90d  simulateProposal() resulted in chaincode name:"fabcarcc"  response status 500 for txid: 702ca90d821e57e0523e588b933363a0112ac8239ad615dac5f112fa16884809 2019-08-21 11:44:00.229 UTC  lockbasedtxmgr  Done -> DEBU 4cc7a Done with transaction simulation / query execution  702ca90d821e57e0523e588b933363a0112ac8239ad615dac5f112fa16884809  2019-08-21 11:44:00.229 UTC  endorser  func1 -> DEBU 4cc7b Exit: request from 10.0.0.14:52528 2019-08-21 11:44:00.230 UTC  comm.grpc.server  1 -> INFO 4cc7c unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=10.0.0.14:52528 grpc.code=OK grpc.call_duration=42.744787ms 2019-08-21 11:44:00.229 UTC  msp  DeserializeIdentity -> DEBU 4cc7d Obtaining identity 2019-08-21 11:44:00.230 UTC  msp  DeserializeIdentity -> DEBU 4cc7e Obtaining identity 2019-08-21 11:44:00.230 UTC  msp  DeserializeIdentity -> DEBU 4cc7f Obtaining identity 2019-08-21 11:44:00.231 UTC  msp  DeserializeIdentity -> DEBU 4cc80 Obtaining identity 2019-08-21 11:44:00.231 UTC  gossip.pull  SendDigest -> DEBU 4cc81 Sending IDENTITY_MSG digest:  d7924c098600121e2150e89b67fd3d51b0e6daf85476da053e09de1681ee103c 46540f179e02cf340eaae091ca92af6b698831e5b0d296f85820487b8d8bb3b9 df57ccabae7e8e5cf4de97ab737c7f748b02cdc4b8e0d6b00b37125e86d4cf5b 68991bb92b1699d8358468e7ec3c59ed2a6888c0c185faf89b6d783448130d64  to 10.0.0.11:40284 68991bb92b1699d8358468e7ec3c59ed2a6888c0c185faf89b6d783448130d64 2019-08-21 11:44:00.231 UTC  gossip.gossip  handleMessage -> DEBU 4cc82 Exiting 2019-08-21 11:44:00.236 UTC  grpc  warningf -> DEBU 4cc83 transport: http2Server.HandleStreams failed to read frame: read tcp 10.0.0.19:8051->10.0.0.14:52528: read: connection reset by peer 2019-08-21 11:44:00.236 UTC  grpc  infof -> DEBU 4cc84 transport: loopyWriter.run returning. connection error: desc = "transport is closing" 2019-08-21 11:44:00.236 UTC  grpc  infof -> DEBU 4cc85 transport: loopyWriter.run returning. connection error: desc = "transport is closing" {code} This error is prone to all peers of orgs that are not anchor peers.  If you try to query the data after a long time, you might get the data. But it  takes a really long time. like 15mins.  Anchor peers are not prone to this issue.  I also noticed that when when you're able to query from a non anchor peer of org1, the non anchor peer of org2 will have query error and vice-versa.  Is this an issue or is it meant to be like this?  My fabric network is similar to BYFN, but the network was created using docker swarm. Peers are distributed across 2 hosts in the same network.  PS: Now i'm able to query the data from all the 4 peers. But it took a really long time. like 30 mins. Is this normal?  ></description> </Issue>
