<Action id="24645" issue="17231" author="jyellick" type="comment" created="2017-05-30 14:07:50.0" updateauthor="jyellick" updated="2017-05-30 14:07:50.0"> <body><! CDATA > this is probably not a bug but instead a little improvement request to provide better error message.  Agreed that this error message may be a little cryptic.  In brief, the orderer identifies the ordering system channel, by looking for a channel with a "Consortiums" group defined in its configuration.  Because it is not finding one, and the orderer requires an ordering system channel to function properly, it is shutting down.  > But it's not clear to me if non consortium profile configuration are still planned to be supported or not.  It is supported to run in a configuration where there are no consortiums defined, but the configuration element, which contains an empty set of consortiums must be defined (in order to facilitate identifying the ordering system channel).  > If non consortium profile are not supported anymore, we should not be able to generate any ChannelTx through configtxgen and raise a configuration issue panic...  We could add a warning message to the configtxgen tool, if the command is invoked to generate a genesis block which is not appropriate for an ordering system channel (the standard use case).  I would be hesitant to make this a fatal error however, because configtxgen can also be used to produce block artifacts for testing which may not be intended to be used for ordering bootstrap.  ></body> </Action>
<Action id="24730" issue="17231" author="jyellick" type="comment" body="https://gerrit.hyperledger.org/r/#/c/9959/ adds a warning message to the configtxgen tool, and makes the missing system channel message more verbose." created="2017-05-31 05:31:30.0" updateauthor="jyellick" updated="2017-05-31 05:31:30.0"/>
<Action id="24773" issue="17231" author="kchristidis" type="comment" created="2017-05-31 14:32:29.0" updateauthor="kchristidis" updated="2017-05-31 14:32:29.0"> <body><! CDATA > I would be hesitant to make this a fatal error however, because configtxgen can also be used to produce block artifacts for testing which may not be intended to be used for ordering bootstrap.  I'll admit my initial reaction was that this should be a fatal error. Can you name an example artifact that triggers the `doOutputBlock` path in configtxgen but won't be used for ordering bootstrap?  ></body> </Action>
<Action id="24830" issue="17231" author="jyellick" type="comment" created="2017-05-31 18:11:07.0" updateauthor="jyellick" updated="2017-05-31 18:11:07.0"> <body><! CDATA > I'll admit my initial reaction was that this should be a fatal error. Can you name an example artifact that triggers the `doOutputBlock` path in configtxgen but won't be used for ordering bootstrap?  Rather than start an orderer, and send a channel create tx, to produce a new channel, then call deliver to receive a block (essentially, everything that {{peer channel create}} does.  Instead, {{configtxgen}} can simply create a block, with the desired parameters.  This seemed useful to me for doing things like chaincode tests, or other peer tests without standing up an ordering service.  Maybe this is not valuable enough, and we should simply make this a fatal error.  I'm open to doing this as well.  ></body> </Action>
<Action id="24832" issue="17231" author="kchristidis" type="comment" created="2017-05-31 18:20:29.0" updateauthor="kchristidis" updated="2017-05-31 18:20:46.0"> <body><! CDATA Gotcha, thanks.   ~mffrench : Your take?  ></body> </Action>
