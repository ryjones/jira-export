<Issue id="39102" key="FAB-15079" number="15079" project="10002" reporter="latitiah" creator="latitiah" type="10004" summary="JavaSDK fails in behave system tests when TLS is turned on " priority="2" resolution="10001" status="6" created="2019-04-05 15:12:12.0" updated="2019-07-28 17:50:23.0" resolutiondate="2019-07-28 17:50:23.0" votes="0" watches="3" workflowId="51977"> <description><! CDATA When using the JavaSDK interface with TL turned on, the following error is seen when using the wrapper that allows testing of the interface APIs.  {code} Exception in thread "main" org.hyperledger.fabric.sdk.exception.ProposalException: org.hyperledger.fabric.sdk.exception.TransactionException: org.hyperledger.fabric.sdk.exception.ProposalException: getConfigBlock for channel behavesystest failed with peer peer0.org1.example.com.  Status FAILURE, details: Channel Channel{id: 2, name: behavesystest} Sending proposal with transaction: 3a240e95d369e67ccc92b23a6c6aa9416de5757fdbb6b20a25f3fd0d2a28b3e5 to Peer{ id: 4, name: peer0.org1.example.com, channelName: behavesystest, url: grpcs://localhost:7051} failed because of: gRPC failure=Status{code=UNAVAILABLE, description=io exception, cause=javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem 	at io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier.verify(ReferenceCountedOpenSslContext.java:629) 	at io.netty.internal.tcnative.SSL.readFromSSL(Native Method) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:488) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1036) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1144) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1187) 	at io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:216) 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1297) 	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1199) 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1243) 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:646) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.security.cert.CertificateException: No subject alternative DNS name matching localhost found. 	at sun.security.util.HostnameChecker.matchDNS(HostnameChecker.java:214) 	at sun.security.util.HostnameChecker.match(HostnameChecker.java:96) 	at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455) 	at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436) 	at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:252) 	at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:136) 	at io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback.verify(ReferenceCountedOpenSslClientContext.java:237) 	at io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier.verify(ReferenceCountedOpenSslContext.java:625) 	... 27 more } 	at org.hyperledger.fabric.sdk.Channel.sendProposalToPeers(Channel.java:4059) 	at org.hyperledger.fabric.sdk.Channel.sendProposal(Channel.java:4030) 	at org.hyperledger.fabric.sdk.Channel.queryByChaincode(Channel.java:3940) 	at org.hyperledger.fabric.sdk.Channel.queryByChaincode(Channel.java:3926) 	at org.hyperledger.fabric_test.operations.PeerOperations.sendQuery(PeerOperations.java:343) 	at org.hyperledger.fabric_test.operations.PeerOperations.run(PeerOperations.java:179) 	at org.hyperledger.fabric_test.operations.PeerOperations.main(PeerOperations.java:112) Caused by: org.hyperledger.fabric.sdk.exception.TransactionException: org.hyperledger.fabric.sdk.exception.ProposalException: getConfigBlock for channel behavesystest failed with peer peer0.org1.example.com.  Status FAILURE, details: Channel Channel{id: 2, name: behavesystest} Sending proposal with transaction: 3a240e95d369e67ccc92b23a6c6aa9416de5757fdbb6b20a25f3fd0d2a28b3e5 to Peer{ id: 4, name: peer0.org1.example.com, channelName: behavesystest, url: grpcs://localhost:7051} failed because of: gRPC failure=Status{code=UNAVAILABLE, description=io exception, cause=javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem 	at io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier.verify(ReferenceCountedOpenSslContext.java:629) 	at io.netty.internal.tcnative.SSL.readFromSSL(Native Method) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:488) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1036) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1144) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1187) 	at io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:216) 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1297) 	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1199) 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1243) 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:646) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.security.cert.CertificateException: No subject alternative DNS name matching localhost found. 	at sun.security.util.HostnameChecker.matchDNS(HostnameChecker.java:214) 	at sun.security.util.HostnameChecker.match(HostnameChecker.java:96) 	at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455) 	at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436) 	at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:252) 	at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:136) 	at io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback.verify(ReferenceCountedOpenSslClientContext.java:237) 	at io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier.verify(ReferenceCountedOpenSslContext.java:625) 	... 27 more } 	at org.hyperledger.fabric.sdk.Channel.parseConfigBlock(Channel.java:1796) 	at org.hyperledger.fabric.sdk.Channel.loadCACertificates(Channel.java:1616) 	at org.hyperledger.fabric.sdk.Channel.sendProposalToPeers(Channel.java:4057) 	... 6 more Caused by: org.hyperledger.fabric.sdk.exception.ProposalException: getConfigBlock for channel behavesystest failed with peer peer0.org1.example.com.  Status FAILURE, details: Channel Channel{id: 2, name: behavesystest} Sending proposal with transaction: 3a240e95d369e67ccc92b23a6c6aa9416de5757fdbb6b20a25f3fd0d2a28b3e5 to Peer{ id: 4, name: peer0.org1.example.com, channelName: behavesystest, url: grpcs://localhost:7051} failed because of: gRPC failure=Status{code=UNAVAILABLE, description=io exception, cause=javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem 	at io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier.verify(ReferenceCountedOpenSslContext.java:629) 	at io.netty.internal.tcnative.SSL.readFromSSL(Native Method) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:488) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1036) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1144) 	at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1187) 	at io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:216) 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1297) 	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1199) 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1243) 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:646) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.security.cert.CertificateException: No subject alternative DNS name matching localhost found. 	at sun.security.util.HostnameChecker.matchDNS(HostnameChecker.java:214) 	at sun.security.util.HostnameChecker.match(HostnameChecker.java:96) 	at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455) 	at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436) 	at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:252) 	at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:136) 	at io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback.verify(ReferenceCountedOpenSslClientContext.java:237) 	at io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier.verify(ReferenceCountedOpenSslContext.java:625) 	... 27 more } {code}  As a hint, the JavaSDK wrapper needs to include a hostOverride that includes "localhost" to the host name to allow communication between the TLS-enabled nodes.   ></description> </Issue>
