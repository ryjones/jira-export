<Action id="24970" issue="17111" author="binhn" type="comment" created="2017-06-01 16:54:15.0" updateauthor="binhn" updated="2017-06-01 16:54:15.0"> <body><! CDATA This is actually more complex as some peers aren't directly connected to orderer and some are. For those connected directly, they don't know whether no transactions submitted or not responding orderer, so they would have to query other peers (which other peers?) to compare block height to know whether they're really behind...  Perhaps a more reasonable approach would be to have the orderer checks itself with a "nanny" thread, and if the nanny detects that the orderer not responding, restart the "worker" thread(s) or self terminate.    ~C0rWin   ~kchristidis   thoughts?  In any case, I would prefer to defer this to post 1.0,  ~ptippett ?  ></body> </Action>
<Action id="25026" issue="17111" author="c0rwin" type="comment" body=" ~binhn  At the gossip level we have an indication of current ledger height of other peers so there is no need to go and explicitly ask for ledger height of other peers. However I&apos;d agree that exposing such information to delivery service such that it could make decision of healthiness of ordering service pretty intrusive change and better to go after v1.0. " created="2017-06-01 22:28:07.0" updateauthor="c0rwin" updated="2017-06-01 22:28:07.0"/>
<Action id="25055" issue="17111" author="ptippett" type="comment" created="2017-06-02 01:31:13.0" updateauthor="ptippett" updated="2017-06-02 01:31:13.0"> <body><! CDATA I'd like to discuss this tomorrow with  ~kchristidis  as well.  We have been discussing the order being able to fail over to another kafka as well and at one point were discussing the orderer self terminating to allow a peer to switch.  Here's the issue: https://jira.hyperledger.org/browse/FAB-4121  I don't believe given the latest discussion in issue 4121 that the peer can detect a failed orderer given that it would return a 503.  If I'm wrong, then we're fine.  If not, I'm still concerned that we'll have peers failing and we'd be unable to determine this.  Our one option I guess would be to put automation in place to detect the proposed log message the orderer would spit out in this case and restart it ourselves to force the peer to try another orderer.  ></body> </Action>
<Action id="25121" issue="17111" author="kchristidis" type="comment" created="2017-06-02 14:55:06.0" updateauthor="kchristidis" updated="2017-06-02 14:55:06.0"> <body><! CDATA Paul: thanks for including the link to FAB-4121 which is relevant.  I was originally thinking that a 503 response code returned from the orderer (when the orderer-Kafka link is broken), that is then parsed by the peer and, say, makes it switch to another orderer after a number of retries would generally be the way to go.  Artem/Yacov suggested that instead of sending a 503 back, we (i.e. the orderer) can just close the gRPC stream, which will force the peer to switch to another orderer.  The benefit of this: no new logic needs to be added to the peer.  The drawback of this: semantically, I still think a 503 response is the way to go. But closing the stream is probably the most realistic approach for now. (From the orderer side, we still need to add the same code. As I wrote  here|https://jira.hyperledger.org/browse/FAB-4121?focusedCommentId=24824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-24824 , we'll still need to expand the `ConsenterSupport` interface to allow the `deliverServer` to tap into the chain and check its status.)  Would that satisfy you? Note that we'll still need approval from the other maintainers before we go ahead with this.  Binh, Artem, Yacov: feel free to correct me, or expand more on the above.  FYI  ~jyellick  as well     ></body> </Action>
<Action id="25124" issue="17111" author="yacovm" type="comment" body="I think we can make the peer side code logic make the client choose a different orderer upon receiving a 503." created="2017-06-02 15:10:58.0" updateauthor="yacovm" updated="2017-06-02 15:10:58.0"/>
<Action id="25128" issue="17111" author="jyellick" type="comment" created="2017-06-02 15:29:24.0" updateauthor="jyellick" updated="2017-06-02 16:46:41.0"> <body><! CDATA >  (From the orderer side, we still need to add the same code. As I wrote here, we'll still need to expand the `ConsenterSupport` interface to allow the `deliverServer` to tap into the chain and check its status.)  Agree with this assessment.  The difficulty in closing the stream vs returning 503 seems pretty equivalent from an orderer perspective.  >  But closing the stream is probably the most realistic approach for now.  Obviously all code diffs are problematic, but, do we really think adding 503 handling on the peer side (equivalent to closing the stream) would be invasive?  ></body> </Action>
<Action id="25130" issue="17111" author="ptippett" type="comment" body="I&apos;m OK as long as the peer can detect the failed state and knows to switch to another orderer.  Per 4121, the orderer would still stay up right since a failure to communicate on 1 channel doesn&apos;t necessarily mean it can&apos;t communicate on any.  " created="2017-06-02 15:37:26.0" updateauthor="ptippett" updated="2017-06-02 15:37:26.0"/>
<Action id="25143" issue="17111" author="binhn" type="comment" created="2017-06-02 16:58:13.0" updateauthor="binhn" updated="2017-06-02 18:19:20.0"> <body><! CDATA  ~yacovm  {quote}I think we can make the peer side code logic make the client choose a different orderer upon receiving a 503. {quote} +1  (and I think it's local check and call existing code)  Closing the connection would be a tactical solution since the peer already has logic to handle, so it would be no risk on the peer side.   It is still not clear with 503 on a channel that switching orderer would be best solution if there are other functional channels from the same orderer that the peer is on. If the failure was due to issues with kafka partition of the channel, then other orderers would have the same issue. And in such case, we would just report error rather than trying to switch.  I wonder if we should have more granularity in the status code to indicate that it's kafka's issue and don't bother switching orderer. We could use a different status like 502 Bad Gateway (The server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request.)  ></body> </Action>
<Action id="25145" issue="17111" author="kchristidis" type="comment" created="2017-06-02 17:18:53.0" updateauthor="kchristidis" updated="2017-06-02 17:18:53.0"> <body><! CDATA Alright, between all of us involved here we can get the necessary 5 votes to proceed with the 503 approach. However I'll post to the #maintainers channel to give folks the chance to raise objections. Please add your +/- 1 here.  +1 from me.  ></body> </Action>
<Action id="25162" issue="17111" author="binhn" type="comment" body="+1 but see my additional comment https://jira.hyperledger.org/browse/FAB-4155?focusedCommentId=25143&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-25143" created="2017-06-02 18:20:27.0" updateauthor="binhn" updated="2017-06-02 18:20:27.0"/>
<Action id="25177" issue="17111" author="kchristidis" type="comment" body="Binh: Agreed, but I suggest we encode the &quot;something&apos;s up&quot; functionality for now and tag it with a 503, and we can refine the codes post-1.0." created="2017-06-02 19:10:46.0" updateauthor="kchristidis" updated="2017-06-02 19:10:46.0"/>
<Action id="25319" issue="17111" author="mastersingh24" type="comment" created="2017-06-05 11:40:43.0" updateauthor="mastersingh24" updated="2017-06-05 11:40:43.0"> <body><! CDATA  ~binhn  - you are only going to get a 503 when you try to perform an action on a specific channel - for example when the deliver client starts up.  But in this way, when delivery client starts for a channel, if it gets a 503 it would know to try another orderer endpoint.  I don't think this would mean we need to close any existing connections to the orderer where the channel was not available if it is functioning correctly.  That's likely a different issue which would need to be addressed by periodically checking to see if there's an issue or if there just does not happen to be any traffic on a given channel.  I suppose we could technically combine the two in such a way that if the orderer shim detects an issue for a channel, in theory it could broadcast a 503 to any existing streams expecting data for that channel but we'd need to consider the scope of such a change (and whether or not what I just wrote even makes sense).     I do think we need to address this issue though  ></body> </Action>
<Action id="25390" issue="17111" author="christopherferris" type="comment" body="this has met the threshold of votes needed to be merged. It may be merged when ready." created="2017-06-05 16:44:08.0" updateauthor="christopherferris" updated="2017-06-05 16:44:08.0"/>
<Action id="25499" issue="17111" author="muralisr" type="comment" body=" ~kchristidis   ~yacovm   ~C0rWin  not clear who is going to create the CR for this ?  The JIRA is begging to be assigned/owned :-)" created="2017-06-06 12:31:41.0" updateauthor="muralisr" updated="2017-06-06 12:32:40.0"/>
<Action id="25504" issue="17111" author="c0rwin" type="comment" body=" ~muralisr  I believe this related to FAB-4136, will take care to sync up with  ~kchristidis  to decide who is going to provide CR for this." created="2017-06-06 13:12:59.0" updateauthor="c0rwin" updated="2017-06-06 13:12:59.0"/>
<Action id="25514" issue="17111" author="kchristidis" type="comment" body="Jason and I are working out the details for this. Will update when we have a resolution." created="2017-06-06 15:02:52.0" updateauthor="kchristidis" updated="2017-06-06 15:02:52.0"/>
<Action id="25655" issue="17111" author="muralisr" type="comment" body=" ~kchristidis  see this is assigned to  ~yacovm  ... should it be yours then ?" created="2017-06-07 15:12:41.0" updateauthor="muralisr" updated="2017-06-07 15:12:41.0"/>
<Action id="25656" issue="17111" author="yacovm" type="comment" body="we decided to split the work, I&apos;ll handle the peer side. " created="2017-06-07 15:15:25.0" updateauthor="yacovm" updated="2017-06-07 15:15:25.0"/>
<Action id="25712" issue="17111" author="yacovm" type="comment" body="https://gerrit.hyperledger.org/r/#/c/10317/ " created="2017-06-07 23:44:22.0" updateauthor="yacovm" updated="2017-06-07 23:44:22.0"/>
<Action id="25871" issue="17111" author="kchristidis" type="comment" created="2017-06-09 15:09:47.0" updateauthor="kchristidis" updated="2017-06-09 15:10:07.0"> <body><! CDATA I think technically this should be marked as done when FAB-4457 gets merged?  If you disagree feel free to close now.  ></body> </Action>
