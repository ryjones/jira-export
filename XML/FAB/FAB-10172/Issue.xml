<Issue id="30340" key="FAB-10172" number="10172" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10002" summary="implement an extended unit test that is an integration test" priority="3" resolution="10000" status="6" created="2018-05-17 10:20:48.0" updated="2018-07-20 14:16:42.0" resolutiondate="2018-06-08 14:19:15.0" votes="0" watches="1" workflowId="42217"> <description><! CDATA A unit test that spawns an instance of a discovery service, with partially mocked support: The endorsement policy analysis, and chaincode lifecycle object would be using production implementations.  The gossip layer would be mocked, as the functionality for that hasn't changed since v1.0  The ledger layer would be mocked, but the data returned from it would be production implementations (i.e, production representation of endorsement policies, collection configuration). The MSP would be the production implementation The config block retrieval would be mocked, but the data returned from it would be a production configuration block. The test would spawn a production implementation of a client, with TLS and it would: * Have the client query the discovery service for all possible queries, and the output of the endorser query (the most complex one) would be inspected. * Issue a config update that would revoke subsequent access of the client to the service. * The client is expected to try to query again, and it would be rejected.  ></description> </Issue>
