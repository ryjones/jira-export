<Issue id="29802" key="FAB-9779" number="9779" project="10002" reporter="muralisr" assignee="wlahti" creator="muralisr" type="10004" summary="clean up invoke error processing in CLI" priority="3" resolution="10000" status="6" created="2018-04-30 03:34:23.0" updated="2018-07-20 14:16:29.0" resolutiondate="2018-06-03 13:23:45.0" votes="0" watches="3" workflowId="42005"> <description><! CDATA This is a followup CR to FAB-6387, to clean up invoke's response error processing in CLI common.go. From the comments in the CR : {code:java} Will Lahti Apr 26 12:29 PM Only slightly related to this CR and I don't see any need to hold up merging this because of it...  I noticed that the logging messages on endorsement failure return for me as: 2018-04-26 16:08:44.936 UTC  chaincodeCmd  chaincodeInvokeOrQuery -> DEBU 014 ESCC invoke result: response:<status:400 message:"Transferring too much at once!!" >  2018-04-26 16:08:44.936 UTC  chaincodeCmd  chaincodeInvokeOrQuery -> WARN 015 Endorsement failure during invoke. chaincode result: <nil>  The chaincode result here (which is the chaincode action's response) is always nil with how I set up my chaincode. @Murali Do you think logging the chaincode action's response value is still the right thing to do or is there any other useful information that can be logged here? It doesn't seem ideal to log a field that may often be nil (though my scenario may not match real world scenarios).  (Also, other than the final log message, the logic here is identical and could be cleaned up.)  Draft 11:30 PM Agree, Will.   For most part this section is a carryover from previous CR.  I think this section has to be redone in another CR which should encode the following.  The real test of whether a response is successful or not is if it has been endorsed. This will take care of the case where a custom ESCC can endorse a (result >= shim.ERRORTHRESHOLD && result <= shim.ERROR).  So we should really ask the question - does this response have endorsement.  {code}  ></description> </Issue>
