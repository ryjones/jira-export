<Issue id="20912" key="FAB-6224" number="6224" project="10002" reporter="jyellick" assignee="yacovm" creator="jyellick" type="10003" summary="Define new gRPC interfaces for peer resource tree configuration manipulation" priority="3" resolution="10000" status="6" created="2017-09-19 20:07:02.0" updated="2018-07-20 14:14:26.0" resolutiondate="2018-01-03 18:12:49.0" votes="0" watches="3" workflowId="40051"> <description><! CDATA This task still needs some design, but, the API must minimally expose a way to retrieve the current configuration tree, ideally a merged configuration of both the channel and peer resources.  The API should return a message encapsulating a {{common.Config}} proto structure for the channel config, and one for the peer resources config.  For instance, this message might suffice:  {noformat} message PeerConfig { common.Config channel = 1; common.Config resources = 2; } {noformat}  This API call must be restricted to members of the channel to avoid leaking channel membership information.  This structure may be operated on via the {{configtxlator}} tool, and this might be the best way to minimize the API surface exposed.  Optionally, the API could also expose some of the {{configtxlator}} APIs, or, it could also contain special purpose helper calls for performing actions like defining a new chaincode.  I lean towards making the API surface smaller and pushing this work to the SDKs, but, it may be more expedient to perform this work in the peer.  ></description> </Issue>
