<Issue id="19284" key="FAB-5330" number="5330" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Prevent state transfer payload buffer overpopulation" priority="3" resolution="10000" status="6" created="2017-07-16 12:46:11.0" updated="2018-07-20 14:13:46.0" resolutiondate="2017-07-20 19:27:13.0" votes="0" watches="1" workflowId="39459"> <description><! CDATA The state transfer module receives blocks from either the orderer or from other peers and puts them into a payload buffer, where blocks are reordered in order to be sent into the ledger in-order.  In some cases, the payload buffer may fill up and over-populate: * If a peer is missing lots of blocks because it joined the channel late, it will receive blocks from other peers  but won't be able to commit them until it receives the missing blocks it needs from neighboring peers. In the meantime - the blocks from the ordering service would be kept in the payload buffer * If the ledger is stuck (i.e file system full) the peer would still end up filling the payload buffer  What we probably need to do is to skip putting blocks into the payload buffer, if the difference in the block sequence and the ledger height is bigger than some configurable size.  Â    ~C0rWin    ~gennadyl   ></description> </Issue>
