<Action id="43094" issue="28859" author="sykesm" type="comment" created="2018-04-18 11:23:34.0" updateauthor="sykesm" updated="2018-04-18 11:23:34.0"> <body><! CDATA This is directly related to changes made in  https://github.com/hyperledger/fabric/commit/5f9f6a982|https://github.com/hyperledger/fabric/commit/5f9f6a982.  that were dropped when vendored deps were updated.  Directly modifying a vendored dependency isn't a viable path given our use of dev to manage the dependencies and the maintainer of go-logging has decided not to accept pull requests that introduce any locking to the go-logging library making it unfit for our use.  Fixing this really means forking or changing the dependency.  ></body> </Action>
<Action id="43357" issue="28859" author="mastersingh24" type="comment" created="2018-04-24 15:13:44.0" updateauthor="mastersingh24" updated="2018-04-24 15:13:44.0"> <body><! CDATA I'd see we should find a better package which meets our needs.  I don't think forking is the right thing to do in general and in this case go-logging is not that great ... so I'd rather find a more suitable package.  The other option is to wrap go-logging, but as  ~sykesm  pointed out to me offline, this rarely works well  ></body> </Action>
<Action id="43370" issue="28859" author="mastersingh24" type="comment" created="2018-04-24 17:29:20.0" updateauthor="mastersingh24" updated="2018-04-24 17:29:20.0"> <body><! CDATA  ~sykesm  and I also discussed a couple of options:  https://github.com/sirupsen/logrus https://github.com/uber-go/zap  After looking at them again, I'd lean towards zap but either seems fine  ></body> </Action>
<Action id="43375" issue="28859" author="kchristidis" type="comment" body="I use zap and I&apos;m a big fan. But if we&apos;re to switch logging packages, this is the time to address the way we do logging in general. For instance: https://dave.cheney.net/2017/01/23/the-package-level-logger-anti-pattern" created="2018-04-24 19:39:58.0" updateauthor="kchristidis" updated="2018-04-24 19:39:58.0"/>
<Action id="46798" issue="28859" author="mastersingh24" type="comment" created="2018-07-01 11:18:53.0" updateauthor="mastersingh24" updated="2018-07-01 11:18:53.0"> <body><! CDATA  ~kchristidis  - just getting back to logging for v1.3 ... I agree with the comment about the anti-pattern .... not sure how we can fully address in v1.3 but I think we can get started on some of the core "shared packages"     ></body> </Action>
<Action id="47335" issue="28859" author="mastersingh24" type="comment" body="Bumping priority, moving to 1.3 and assigning to  ~sykesm " created="2018-07-14 13:33:32.0" updateauthor="mastersingh24" updated="2018-07-14 13:33:32.0"/>
<Action id="47738" issue="28859" author="sykesm" type="comment" created="2018-07-24 18:15:41.0" updateauthor="sykesm" updated="2018-07-24 18:16:48.0"> <body><! CDATA I'm officially starting this work this week. I'll be moving to zap with the intention of supporting our current notion of "logging modules." Log level configuration and dynamic updates will be supported by {{zap.AtomicLevel}}.  The logger returned by default will be the {{zap.SugaredLogger}} as it maintains the existing contract. At that point we can decide how far we want to go with this work.  ></body> </Action>
<Action id="47745" issue="28859" author="sykesm" type="comment" created="2018-07-24 19:38:49.0" updateauthor="sykesm" updated="2018-07-25 17:00:47.0"> <body><! CDATA Notes: - Zap doesn't have something analogous to {{CRITICAL}} so it will be mapped to error. - Zap doesn't have something analogous to {{NOTICE}} so it will be mapped to info. - For some reason, we felt we should provide logging implementations and functionality in our chaincode stub so we've surfaced a op/go-logging type as part of our definition of {{shim.LoggingLevel}}. While it's probably an edge case, this can impact the source compatibility if we change it. - Default output format for zap is quite a bit different from op/go-logging. Also, we surface log format strings in our configuration. This implies we'll likely need our own encoder.  ></body> </Action>
<Action id="47819" issue="28859" author="kchristidis" type="comment" body="I take it that in the first iteration, the log messages remain as-is, i.e. we won&apos;t be switching to k/v pairs?" created="2018-07-25 17:58:07.0" updateauthor="kchristidis" updated="2018-07-25 17:58:07.0"/>
<Action id="47824" issue="28859" author="sykesm" type="comment" created="2018-07-25 18:31:17.0" updateauthor="sykesm" updated="2018-07-25 18:31:17.0"> <body><! CDATA {quote}I take it that in the first iteration, the log messages remain as-is, i.e. we won't be switching to k/v pairs? {quote} This isn't a boil the ocean logging epic - this is simply moving away from a dependency that does not meet our needs to something that better aligns with where we want to go.  ></body> </Action>
<Action id="47826" issue="28859" author="kchristidis" type="comment" created="2018-07-25 19:08:48.0" updateauthor="kchristidis" updated="2018-07-25 19:08:48.0"> <body><! CDATA {quote}I take it that in the first iteration, the log messages remain as-is, i.e. we won't be switching to k/v pairs?{quote} We will not.  ></body> </Action>
