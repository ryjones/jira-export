<Action id="20032" issue="12444" author="elli-androulaki" type="comment" created="2016-12-09 08:47:27.0" updateauthor="elli-androulaki" updated="2016-12-09 08:48:35.0"> <body><! CDATA  ~keithsmith ,  ~JonathanLevi , shouldn't we tackle this with high priority? Or is it that we rest upon the assumption that renewal of certificate is done within a reasonable time frame before it expires? I would go for the combination of the two.   For now i will add this item on Sprint 10, such that we can revisit its priority.  ></body> </Action>
<Action id="20045" issue="12444" author="smithbk" type="comment" body="Yes, I actually thought this was complete for COP but just checked the code and it isn&apos;t.  I&apos;ll take care of it next week." created="2016-12-09 22:16:46.0" updateauthor="smithbk" updated="2016-12-09 22:18:43.0"/>
<Action id="20046" issue="12444" author="smithbk" type="comment" body="Elli, I assume the fabric code is (or will) check validity and CRL also." created="2016-12-09 22:18:13.0" updateauthor="smithbk" updated="2016-12-09 22:18:13.0"/>
<Action id="20074" issue="12444" author="smithbk" type="comment" body="See http://gerrit.hyperledger.org/r/3237" created="2016-12-12 23:55:39.0" updateauthor="smithbk" updated="2016-12-12 23:55:39.0"/>
<Action id="20392" issue="12444" author="elli-androulaki" type="comment" created="2017-01-18 10:02:20.0" updateauthor="elli-androulaki" updated="2017-01-18 10:02:20.0"> <body><! CDATA Ok, so we have concluded that we do this time-wise? Yes timestamp can easily be checked on the orderer side, but there was a discussion in the past over the use of a logical clock there for expiring certificates that would be inserted to the certificate.  While understanding how we would need this, I see two issues:  - inserting a logical clock value into our ECerts and TCerts is fine, but this need to be part of VerifierMSP configuration, and the COP server should be able to send around signed (reconfiguration) requests every time an MSP validity period expires. - this would differentiate our verifierMSP from the standard X.509 certificates, as our MSP would need to make certain assumptions on how the validity period logical clock value is inserted.  If we do not add this logical clock into the ledger, we need to emphasize to the users of fabric that need to renew their certificates early ahead of their expiration time,to ensure that no inconsistencies at committing phase occur. And notice that this would only need to be the case for the peer certificates, not the client ones. I think this was the decision we had taken a few months ago, but would like your confirmation on this.  Adding  ~vukolic  ~mastersingh24  ~ales  ~adc  in this discussion to confirm.    ></body> </Action>
<Action id="20393" issue="12444" author="vukolic" type="comment" created="2017-01-18 10:10:26.0" updateauthor="vukolic" updated="2017-01-18 10:14:52.0"> <body><! CDATA We can have endorsers work with "real" time (non-determinsim allowed in the endorsement phase).   We *must not* have orderers work with "real" time (non-determinism is disallowed in the ordering/committing phase).  Hope this helps, Marko  ></body> </Action>
<Action id="20432" issue="12444" author="elli-androulaki" type="comment" created="2017-01-19 15:14:50.0" updateauthor="elli-androulaki" updated="2017-01-19 15:14:50.0"> <body><! CDATA Correct, but given that logical clock is not necessarily supported in standard X.509 format, what do you think we should do?  Shall we assume that for endorser certificates renewal is done a-priori by a lot?  I have to note that, if the topic is still on the table, I am also for the logical clock approach as Marko, but this may take more time.  Adding also  ~smithbk  to the discussion.  ></body> </Action>
<Action id="20729" issue="12444" author="elli-androulaki" type="comment" created="2017-02-07 16:59:00.0" updateauthor="elli-androulaki" updated="2017-02-07 16:59:00.0"> <body><! CDATA Discussed this with  ~binhn ,  ~muralisr ,  ~jyellick , and concluded that for V1 we go with the use of real-time assuming that we document the dangers that this inhibits. FAB FAB-2094 covers this task.  ></body> </Action>
