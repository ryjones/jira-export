<Issue id="20118" key="FAB-5724" number="5724" project="10002" reporter="jyellick" assignee="jyellick" creator="jyellick" type="10001" summary="Audit code, particularly the channel config for unsafe pointer assignments." priority="3" resolution="10000" status="6" created="2017-08-11 03:21:04.0" updated="2018-07-20 18:48:29.0" resolutiondate="2017-09-05 13:41:24.0" votes="0" watches="1" workflowId="39708"> <description><! CDATA Golang pointers are word size, and therefore read/write operations across go routines are guaranteed to be consistent (ie, the previous, or the current value will be returned, not some mixture of the two).  However, there is still a risk due to out of order execution when a writer go routine writes a set of pointers, and a reader go routine reads that set of pointers, the reader go routine may not get what would be considered a consistent view of the system.  Although there have been no bug reports surrounding this sort of error, it is largely theoretical at the moment, an audit for these sorts of errors should be conducted, any instances of this potential fixed.  ></description> </Issue>
