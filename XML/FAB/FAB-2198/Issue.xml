<Issue id="14755" key="FAB-2198" number="2198" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10001" summary="Refactor Gossip message signing with envelopes" priority="3" resolution="10000" status="6" created="2017-02-12 10:55:51.0" updated="2018-07-20 18:57:16.0" resolutiondate="2017-02-28 15:56:37.0" votes="0" watches="1" workflowId="37408"> <description><! CDATA In gossip, every message sent is a GossipMessage. The gossipMessage contains an inner message and a signature: {code} message GossipMessage { bytes signature = .... oneof content { AliveMessage aliveMsg = ...; MembershipRequest memReq = ... MembershipResponse memRes = ... .... } {code}  The signing and verification is done in the following way: Signing: # Signature is nullified # proto.Marshall is called # the output bytes are hashed # the hash is signed by the peer # the signature is put into the signature field # the message is sent  Verification: # The signature is saved aside # the signature field is nullified # proto.Marshall is called on the message # the bytes are hashed # the signature is verified  This is a problem because protobuf's proto.Marshall doesn't guarantee equal output between different invocations on different hosts.  So the message that is sent over the wire needs to be an envelope message that will contain the bytes of the actual message, and the signature on the message.    ></description> </Issue>
