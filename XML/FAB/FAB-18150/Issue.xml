<Issue id="45805" key="FAB-18150" number="18150" project="10002" reporter="ptippett" creator="ptippett" type="10001" summary="Allow modifying orderer Tick Time setting without requiring a manual restart of orderers" priority="3" status="10100" created="2020-08-12 13:14:06.0" updated="2021-04-16 19:29:50.0" votes="0" watches="2" workflowId="59708" archived="N"> <description><! CDATA Today in Fabric, the default tick time setting for channels, which is the basis for controlling how often the orderers heartbeat on a channel and how long before they evict nodes, is defaulted to 500ms.     We've found that with multiple distributed orderers and many channels, this setting is way too low.  This is because RAFT treats each channel independently, so for example if you had 5 orderers and 200 channels, that would be 1000 heartbeats being sent every 500ms.  On slower or widely distributed networks, this can quickly overwhelm the network, which causes heartbeats to be missed, nodes to get evicted, causing more traffic, causing more evictions, etc.     To modify this, the user can modify tick time.  However, this isn't as straight forward as it should be.  To modify tick time, each orderer needs to tear down etcd.  Right now in fabric, the only way to do this is to restart the orderer.  So again in a cluster of 5 orderers for example, the user would have to modify tick time on a channel, wait for the transaction to be recorded on all 5 orderers, then manually restart each orderer so that it picks up the change.  This is problematic because you don't want the orderers to be using different tick time settings as this could make the problem I listed above worse.   So the request here is to better automate the setting of tick time on a channel.  One way to do this would be for each orderer to be able to tear down and restart etcd with the new tick time setting as soon as it gets the transaction vs relying on the customer to manually handle restarts.  ></description> </Issue>
