<Action id="70634" issue="46308" author="sykesm" type="comment" created="2020-11-09 16:20:38.0" updateauthor="sykesm" updated="2020-11-09 16:20:38.0"> <body><! CDATA {{go env}}  {code} $ go env GO111MODULE="" GOARCH="amd64" GOBIN="" GOCACHE="/Users/sykesm/Library/Caches/go-build" GOENV="/Users/sykesm/Library/Application Support/go/env" GOEXE="" GOFLAGS="" GOHOSTARCH="amd64" GOHOSTOS="darwin" GOINSECURE="" GONOPROXY="" GONOSUMDB="" GOOS="darwin" GOPATH="/Users/sykesm/workspace/fabric" GOPRIVATE="" GOPROXY="https://proxy.golang.org,direct" GOROOT="/usr/local/Cellar/go@1.14/1.14.11/libexec" GOSUMDB="sum.golang.org" GOTMPDIR="" GOTOOLDIR="/usr/local/Cellar/go@1.14/1.14.11/libexec/pkg/tool/darwin_amd64" GCCGO="gccgo" AR="ar" CC="clang" CXX="clang++" CGO_ENABLED="1" GOMOD="/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/go.mod" CGO_CFLAGS="-g -O2" CGO_CPPFLAGS="" CGO_CXXFLAGS="-g -O2" CGO_FFLAGS="-g -O2" CGO_LDFLAGS="-g -O2" PKG_CONFIG="pkg-config" GOGCCFLAGS="-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/go-build977319977=/tmp/go-build -gno-record-gcc-switches -fno-common" {code}  {{go version}}  {code} $ go version go version go1.14.11 darwin/amd64 {code}  {{uname -a}}  {code} $ uname -a Darwin trapped.home.lan 19.6.0 Darwin Kernel Version 19.6.0: Thu Oct 29 22:56:45 PDT 2020; root:xnu-6153.141.2.2~1/RELEASE_X86_64 x86_64 i386 MacBookPro14,3 Darwin {code}  Building the tests and attaching, the fault occurs here:  {code} Process 47702 stopped * thread #3, stop reason = EXC_BAD_ACCESS (code=1, address=0x0) frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock libsystem_pthread.dylib`pthread_rwlock_wrlock: ->  0x7fff728211ac <+0>:  cmpq   $0x52574c4b, (%rdi)       ; imm = 0x52574C4B 0x7fff728211b3 <+7>:  jne    0x7fff7282122d            ; <+129> 0x7fff728211b5 <+9>:  leaq   0x2f(%rdi), %r10 0x7fff728211b9 <+13>: andq   $-0x10, %r10 Target 0: (factory.test) stopped. {code}  ></body> </Action>
<Action id="70635" issue="46308" author="sykesm" type="comment" created="2020-11-09 16:25:52.0" updateauthor="sykesm" updated="2020-11-09 16:25:52.0"> <body><! CDATA Same issue appears to happen with the latest version of go.  {code} Process 48752 stopped * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x0) frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock libsystem_pthread.dylib`pthread_rwlock_wrlock: ->  0x7fff728211ac <+0>:  cmpq   $0x52574c4b, (%rdi)       ; imm = 0x52574C4B 0x7fff728211b3 <+7>:  jne    0x7fff7282122d            ; <+129> 0x7fff728211b5 <+9>:  leaq   0x2f(%rdi), %r10 0x7fff728211b9 <+13>: andq   $-0x10, %r10 Target 0: (factory.test) stopped. {code}  ></body> </Action>
<Action id="70637" issue="46308" author="sykesm" type="comment" created="2020-11-09 16:29:05.0" updateauthor="sykesm" updated="2020-11-09 16:29:05.0"> <body><! CDATA {code} Process 48752 stopped * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x0) frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock libsystem_pthread.dylib`pthread_rwlock_wrlock: ->  0x7fff728211ac <+0>:  cmpq   $0x52574c4b, (%rdi)       ; imm = 0x52574C4B 0x7fff728211b3 <+7>:  jne    0x7fff7282122d            ; <+129> 0x7fff728211b5 <+9>:  leaq   0x2f(%rdi), %r10 0x7fff728211b9 <+13>: andq   $-0x10, %r10 Target 0: (factory.test) stopped. (lldb) thread list Process 48752 stopped thread #1: tid = 0x127dcd, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10, queue = 'com.apple.main-thread' thread #2: tid = 0x127dec, 0x00007fff72763756 libsystem_kernel.dylib`__semwait_signal + 10 thread #3: tid = 0x127ded, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10 thread #4: tid = 0x127dee, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10 * thread #5: tid = 0x127def, 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock, stop reason = EXC_BAD_ACCESS (code=1, address=0x0) thread #6: tid = 0x127df0, 0x00007fff72763882 libsystem_kernel.dylib`__psynch_cvwait + 10 (lldb) thread backtrace * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x0) * frame #0: 0x00007fff728211ac libsystem_pthread.dylib`pthread_rwlock_wrlock frame #1: 0x000000002ed4fd4d libcrypto.1.1.dylib`CRYPTO_THREAD_write_lock + 9 frame #2: 0x000000002ecce275 libcrypto.1.1.dylib`ENGINE_finish + 30 frame #3: 0x000000002e4798f0 libsofthsm2.so`OSSLCryptoFactory::~OSSLCryptoFactory() + 28 frame #4: 0x000000002e479984 libsofthsm2.so`OSSLCryptoFactory::~OSSLCryptoFactory() + 14 frame #5: 0x00007fff726c913c libsystem_c.dylib`__cxa_finalize_ranges + 319 frame #6: 0x00007fff726c9412 libsystem_c.dylib`exit + 55 frame #7: 0x00000000044a8694 factory.test`__tsan_fini + 20 frame #8: 0x00000000040747e3 factory.test`racecall + 35 frame #9: 0x000000000406e365 factory.test`os.runtime_beforeExit + 37 frame #10: 0x00000000040c1f54 factory.test`os.Exit + 84 frame #11: 0x00000000044a1d9a factory.test`main.main + 922 frame #12: 0x000000000403c5a9 factory.test`runtime.main + 521 frame #13: 0x0000000004073021 factory.test`runtime.goexit + 1 frame #14: 0x00000000040c1f54 factory.test`os.Exit + 84 frame #15: 0x00000000044a1d9a factory.test`main.main + 922 frame #16: 0x000000000403c5a9 factory.test`runtime.main + 521 frame #17: 0x0000000004073021 factory.test`runtime.goexit + 1 frame #18: 0x00000000044a1d9a factory.test`main.main + 922 frame #19: 0x000000000403c5a9 factory.test`runtime.main + 521 frame #20: 0x0000000004073021 factory.test`runtime.goexit + 1 frame #21: 0x000000000403c5a9 factory.test`runtime.main + 521 frame #22: 0x0000000004073021 factory.test`runtime.goexit + 1 frame #23: 0x0000000004073021 factory.test`runtime.goexit + 1 {code}  ></body> </Action>
<Action id="70639" issue="46308" author="sykesm" type="comment" body="https://github.com/opendnssec/SoftHSMv2/issues/548 looks like a match. Appears a change was committed and then reverted." created="2020-11-09 16:50:57.0" updateauthor="sykesm" updated="2020-11-09 16:50:57.0"/>
<Action id="70640" issue="46308" author="sykesm" type="comment" body="https://github.com/opendnssec/SoftHSMv2/pull/551/ may resolve the issue but it is not part of any tagged release." created="2020-11-09 17:22:25.0" updateauthor="sykesm" updated="2020-11-09 17:22:25.0"/>
<Action id="70642" issue="46308" author="sykesm" type="comment" created="2020-11-09 19:43:46.0" updateauthor="sykesm" updated="2020-11-09 19:43:46.0"> <body><! CDATA Local modifications to use a build from source resolves the issue locally. Leaving it here since I expect others will hit this soon enough.  {code:none} diff --git a/Formula/softhsm.rb b/Formula/softhsm.rb index ac53d62499..efab496266 100644 --- a/Formula/softhsm.rb +++ b/Formula/softhsm.rb @@ -18,9 +18,20 @@ class Softhsm < Formula sha256 "cd17fa2e8538ca99b5963d60074578c91839740e7f87cc292b9b8f4f67dd99d8" => :high_sierra end  +  head do +    url "https://github.com/opendnssec/SoftHSMv2.git", :branch => "develop" + +    depends_on "autoconf" => :build +    depends_on "automake" => :build +    depends_on "libtool" => :build +    depends_on "pkg-config" => :build +  end + depends_on "openssl@1.1"  def install +    system "sh", "./autogen.sh" if build.head? + system "./configure", "--disable-dependency-tracking", "--disable-silent-rules", "--prefix=#{prefix}", {code}  ></body> </Action>
<Action id="70644" issue="46308" author="sykesm" type="comment" body="This appears to be related to a use-after-free bug from SoftHSM. Using a local build from the current HEAD of their development branch looks to resolve this issue." created="2020-11-09 19:59:24.0" updateauthor="sykesm" updated="2020-11-09 19:59:24.0"/>
<Action id="70650" issue="46308" author="sykesm" type="comment" created="2020-11-10 14:26:16.0" updateauthor="sykesm" updated="2020-11-10 14:26:16.0"> <body><! CDATA Homebrew formula was updated to allow for install from head of develop.  https://github.com/Homebrew/homebrew-core/commit/18b1692f94e7146f65b0f4bee35e26c8391aca86  After a {{brew install}} of softhsm with the {{--head}} flag, be sure to update {{PKCS11_LIB}} to reflect the appropriate version.  {code:sh} if   -d "/usr/local/Cellar/softhsm"  ; then PKCS11_LIB="$(find -L "/usr/local/Cellar/softhsm" -name libsofthsm2.so -print -quit)" if   -f "$PKCS11_LIB"  ; then export PKCS11_LIB export PKCS11_PIN=98765432 export PKCS11_LABEL="ForFabric" fi fi {code}  ></body> </Action>
