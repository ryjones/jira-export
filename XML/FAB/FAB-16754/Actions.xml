<Action id="64269" issue="42598" author="joe-alewine" type="comment" created="2019-10-02 19:01:50.0" updateauthor="joe-alewine" updated="2019-10-02 19:03:28.0"> <body><! CDATA  ~pandrejko   ~sykesm   ~jyellick   ~denyeart   ~wenjian   ~negupta   So my proposal for how to doc this: # Establish two "standard" docs. The first talks about how to upgrade the version of a node. The second talks about how to upgrade capabilities. These docs would have commands and scripts (leveraging BYFN) for people who want sample code and commands. We could use the current commands for how to upgrade to v1.4.x as the "example" in this case (having examples of how to upgrade all of the config groups would be particularly valuable). While these docs would serve as *examples* of how to upgrade, they wouldn't be the "upgrade" doc, per se, required for each release, as they would be largely release agnostic. After 1.x goes away, we could update these to a 2.0 context (leveraging what should be by then an update BYFN) and then only change these docs when we absolutely have to. # The new release-specific "upgrade" doc then, would be an entirely separate doc or docs that refer to the specific context and considerations that exist for *a particular release*. This is where, as Matt pointed out, we could talk about chaincode/application considerations, special processes specific to a particular release (state database cleanup requiring a 12 hour rebuild, potentially), the extra endorsement policy, etc. And then refer to the existing upgrade/update docs for guidance on how upgrades/updates work in a general way.  ></body> </Action>
<Action id="64270" issue="42598" author="denyeart" type="comment" body=" ~joe-alewine  I like the proposal in general, but how to handle that each release has different capabilities at different levels that need to be upgraded each release? Unfortunately its the capability updates that require the most text changes each release." created="2019-10-02 19:34:18.0" updateauthor="denyeart" updated="2019-10-02 19:34:18.0"/>
<Action id="64271" issue="42598" author="joe-alewine" type="comment" created="2019-10-02 20:02:22.0" updateauthor="joe-alewine" updated="2019-10-02 20:02:22.0"> <body><! CDATA  ~denyeart  So what I'm proposing is that if, say, the channel and application capabilities need to be updated to some level for a particular release that we point to the doc with the commands (that show how a channel update of capabilities is structured) and say that instead of the capability levels you see there, update these (ie, the channel and application capabilities) during your update for this release.  The doc with the commands becomes an example, not a tutorial that shows the commands for this particular update cycle. Of course, the processes and example commands would still have to be up to date with our current processes, but our sense of what "upgrade" means is less about running BYFN and arriving at a particular set end state and more about how to think about the impact of new features/capabilities on your existing network or components in terms of upgrading (which by now should be something that users are familiar with as a process).  ></body> </Action>
<Action id="64275" issue="42598" author="negupta" type="comment" body="Given how the versions are becoming more complicated, with 1.4.x and 2.x being released in tandem, I think this is a good direction to go in. We will need generic instructions on how do you upgrade that can be used from any version to version, or capability to capability, along with specifics on what need to be done between versions. This will become helpful as we begin to have more networks with channels at different capabilities." created="2019-10-02 21:50:55.0" updateauthor="negupta" updated="2019-10-02 21:50:55.0"/>
<Action id="64370" issue="42598" author="joe-alewine" type="comment" body="Barring additional comments I&apos;d like to start along the lines I&apos;ve discussed above, as it represents a refactoring of current documentation rather than the new stuff that we explicitly need to document for this release." created="2019-10-08 13:28:18.0" updateauthor="joe-alewine" updated="2019-10-08 13:28:18.0"/>
<Action id="65635" issue="42598" author="wenjian" type="comment" created="2019-11-19 20:17:37.0" updateauthor="wenjian" updated="2019-11-19 20:17:37.0"> <body><! CDATA I have added detail for how to upgrade endorsement policies to channel config. Also attached the following files: * upgradePolicies.md: document on how to upgrade channel config  * policies.json: contains sample endorsement policies * upgrade_to_20policies.sh: top level script to upgrade system channel and application channel with endorsement policies. * upgrade20.tar: complete scripts to upgrade capabilities and endorsement policies from V1.4.x to v2.0.  It is based on a system test network in fabric-test. You will not able to run it unless you have the network.   ></body> </Action>
<Action id="65671" issue="42598" author="joe-alewine" type="comment" created="2019-11-20 20:00:01.0" updateauthor="joe-alewine" updated="2019-11-20 20:00:01.0"> <body><! CDATA  ~denyeart   ~jyellick   So what should be the message around the Orderer endpoints, if any?  ></body> </Action>
<Action id="65672" issue="42598" author="jyellick" type="comment" body="Orderer endpoints should be moved from the global section to the org specific section.  It&apos;s not strictly required to do the update, we still honor the global ones, but we&apos;d like to deprecate and remove the global ones at some point." created="2019-11-20 20:09:50.0" updateauthor="jyellick" updated="2019-11-20 20:09:50.0"/>
<Action id="65684" issue="42598" author="denyeart" type="comment" body=" ~joe-alewine  We announced the deprecation in the v1.4.3 and v1.4.4 release notes already, and will include in v2.0.0 release notes as well. Would be nice to mention in the v2.0 upgrade doc since config has to be updated regardless... it would behoove people to do it at the same time as v2.0 config upgrade." created="2019-11-21 02:59:59.0" updateauthor="denyeart" updated="2019-11-21 03:00:08.0"/>
<Action id="65688" issue="42598" author="joe-alewine" type="comment" created="2019-11-21 13:31:23.0" updateauthor="joe-alewine" updated="2019-11-21 13:31:44.0"> <body><! CDATA  ~denyeart   ~jyellick   ~wenjian   ~suryalnvs   Sure, I'm happy to add this orderer endpoint stuff. I'd just need the relevant sample JSON file for jq to reference and then the jq command itself.  ></body> </Action>
<Action id="65753" issue="42598" author="wenjian" type="comment" created="2019-11-24 05:40:34.0" updateauthor="wenjian" updated="2019-11-24 05:40:34.0"> <body><! CDATA  ~joe-alewine   I have attached sample update_endpoints.sh and orglevelEndpoints.json to add the org level orderer endpoins.   ></body> </Action>
