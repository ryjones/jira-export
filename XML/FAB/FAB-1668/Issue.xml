<Issue id="14095" key="FAB-1668" number="1668" project="10002" reporter="denyeart" assignee="manish-sethi" creator="denyeart" type="10002" summary="Resolve phantom reads for range queries" priority="3" resolution="10000" status="6" created="2017-01-16 12:09:30.0" updated="2018-07-20 14:11:13.0" resolutiondate="2017-01-27 16:24:00.0" votes="0" watches="3" workflowId="37048"> <description><! CDATA Detect changes in result set between simulation time and commit time by re-querying during validation phase.  Phantom reads problem: ----------------------------- If a transaction executes a key range query (say key_1 - key_n) leveldb serves all the keys in the given range in sorted order of keys. Between simulation and validation of a transaction, some other transaction may insert one or more keys in this range. Now, this change cannot be detected by merely checking the versions of the keys present in the read-set of the transaction. (though, this check can detect updates and deletes).  A serializable isolation level does not permit phantom reads.  Situations where the phantom reads may not be acceptable: ----------------------------- - A chaincode may take a decision based on aggregates of the results of the range query such as min/max/avg/sum etc. This would be affected if a new entry gets added to the range query results.  - A chaincode may want to change all the marbles owned by a specific user to blue in a tran `t1`. The chaincode may do so by performing a range query to get all the marbles for the user and change their color to blue. Now, if a new white marble get added to the user's assets by an another transaction `t2`, `t1` should be marked as invalid.     ></description> </Issue>
