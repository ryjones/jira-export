<Issue id="26637" key="FAB-7630" number="7630" project="10002" reporter="vdods" assignee="mastersingh24" creator="vdods" type="10001" summary="`peer channel join` and `peer channel list` options regarding --tls and --cafile are misleading" priority="3" resolution="10001" status="6" created="2018-01-06 06:46:35.0" updated="2020-01-22 22:22:37.0" resolutiondate="2020-01-22 22:22:37.0" votes="0" watches="2" workflowId="35481"> <description><! CDATA The CLI command `peer channel create` honors the --tls and --cafile options as expected, and uses a TLS connection with the given CA file to the orderer for channel creation.  However, `peer channel join` and `peer channel list` do not honor the --tls and --cafile options, always attempting to make an insecure connection with the peer.  However, if one specifies the CORE_PEER_TLS_ENABLED=true and CORE_PEER_TLS_ROOTCERT_FILE=path/to/cert.pem environment variables, it does work.  Upon closer inspection, --tls and --cafile only specify the TLS settings for the orderer endpoint, not the peer endpoint.  This asymmetry (commandline options vs env vars) is confusing, probably stemming from the fact that the `peer channel join` and `peer channel list` don't even require an orderer endpoint, so the --tls and --cafile options are useless for those subcommands.  I'd suggest that at the very least, the --tls and --cafile options be moved to only the `peer channel create` and `peer channel update` commands.  Better yet, change --tls and --cafile to something that indicates they're for the orderer; --orderer-tls and --orderer-cafile.  Then also add commandline options for specifying the TLS settings for the peer connection; perhaps --peer-tls and --peer-cafile.  I think part of why this confusion occurred is because the line between the peer acting as a server (i.e. `peer node`) and the peer acting as a client (i.e. `peer channel`) is blurred and makes configuring and using the peer binary very confusing.  This is another argument for fully separating the peer binary into peer-client and peer-server, similar to the architecture of fabric-ca with its fabric-ca-client and fabric-ca-server.  I request that this fix, if made, be also added to the 1.0.x branch.     ></description> </Issue>
