<Action id="23106" issue="16063" author="nickgaski" type="comment" created="2017-04-27 19:37:00.0" updateauthor="nickgaski" updated="2017-04-27 19:41:51.0"> <body><! CDATA   Also, will you kindly try the following from e2e - ./network_setup.sh down and then  - ./network_setup.sh restart  Let's see if that works, and if not, where it fails...  ></body> </Action>
<Action id="23110" issue="16063" author="nickgaski" type="comment" created="2017-04-27 20:19:33.0" updateauthor="nickgaski" updated="2017-04-27 20:19:33.0"> <body><! CDATA A few additional thoughts.  Try upgrading your Go to 1.7  And make sure you didn't compile the configtxgen binary yourself.  The current tool looks for a more comprehensive configuration, which the  supplied configtx.yaml does not have.  ></body> </Action>
<Action id="23140" issue="16063" author="zupan" type="comment" created="2017-04-28 09:54:32.0" updateauthor="zupan" updated="2017-04-28 09:56:59.0"> <body><! CDATA I also experienced the same problem, but then I started from scratch including reinstalling all dependencies (go, docker-compose, ...). I also removed all old code previously downloaded from git master and curl.  Also from you logs it seems that you are installing go 1.8.1, but then from the error you can see: {code}/opt/go/go1.7.linux.amd64/src/runtime/panic.go:500 +0x1a1{code}  I installed GO following  docs|https://golang.org/doc/install#tarball  and only setting GOPATH (without GOROOT). After that, I was able to generate genesis block and start blockchain. I assume that wrong go paths were the reason for the problem.     ></body> </Action>
<Action id="23141" issue="16063" author="vjuge" type="comment" created="2017-04-28 10:29:11.0" updateauthor="vjuge" updated="2017-04-28 10:29:11.0"> <body><! CDATA {noformat}  $ sudo ./network_setup.sh down setting to default channel 'mychannel' WARNING: The ARCH_TAG variable is not set. Defaulting to a blank string. WARNING: The CHANNEL_NAME variable is not set. Defaulting to a blank string. Removing network e2e_default WARNING: Network e2e_default not found. b66a267a211e  85d7549a1b19 3e81939779c5 3e833bfd1f4b 4d5a9b89a30b ---- No images available for deletion ----  {noformat}  {noformat} $ sudo ./network_setup.sh restart setting to default channel 'mychannel' WARNING: The ARCH_TAG variable is not set. Defaulting to a blank string. WARNING: The CHANNEL_NAME variable is not set. Defaulting to a blank string. Removing network e2e_default WARNING: Network e2e_default not found. ---- No containers available for deletion ---- ---- No images available for deletion ---- OS_ARCH linux-amd64  ########################################################## ############## Generate certificates ##################### ########################################################## org1.example.com 2017-04-28 12:28:00.478 CEST  bccsp  GetDefault -> WARN 001 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.506 CEST  bccsp  GetDefault -> WARN 002 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.508 CEST  bccsp  GetDefault -> WARN 003 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.510 CEST  bccsp  GetDefault -> WARN 004 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.511 CEST  bccsp  GetDefault -> WARN 005 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. org2.example.com 2017-04-28 12:28:00.513 CEST  bccsp  GetDefault -> WARN 006 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.515 CEST  bccsp  GetDefault -> WARN 007 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.517 CEST  bccsp  GetDefault -> WARN 008 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.518 CEST  bccsp  GetDefault -> WARN 009 Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.520 CEST  bccsp  GetDefault -> WARN 00a Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.522 CEST  bccsp  GetDefault -> WARN 00b Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.523 CEST  bccsp  GetDefault -> WARN 00c Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP. 2017-04-28 12:28:00.524 CEST  bccsp  GetDefault -> WARN 00d Before using BCCSP, please call InitFactories(). Falling back to bootBCCSP.   ########################################################## #########  Generating Orderer Genesis block ############## ########################################################## 2017-04-28 12:28:00.555 CEST  common/configtx/tool  main -> INFO 001 Loading configuration 2017-04-28 12:28:00.556 CEST  configtx/tool/localconfig  Load -> CRIT 002 Error reading configuration: Unsupported Config Type "" panic: Error reading configuration: Unsupported Config Type ""  goroutine 1  running : panic(0x88ade0, 0xc4201853d0) 	/opt/go/go1.7.linux.amd64/src/runtime/panic.go:500 +0x1a1 github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc420165620, 0x95e309, 0x1f, 0xc4201852f0, 0x1, 0x1) 	/w/workspace/fabric-verify-x86_64_1/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127 github.com/hyperledger/fabric/common/configtx/tool/localconfig.Load(0x7ffdc2108867, 0x7, 0x0) 	/w/workspace/fabric-verify-x86_64_1/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/localconfig/config.go:195 +0x79c main.main() 	/w/workspace/fabric-verify-x86_64_1/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/configtxgen/main.go:204 +0x405   ################################################################# ### Generating channel configuration transaction 'channel.tx' ### ################################################################# 2017-04-28 12:28:00.569 CEST  common/configtx/tool  main -> INFO 001 Loading configuration 2017-04-28 12:28:00.569 CEST  configtx/tool/localconfig  Load -> CRIT 002 Error reading configuration: Unsupported Config Type "" panic: Error reading configuration: Unsupported Config Type ""  goroutine 1  running : panic(0x88ade0, 0xc4201853c0) 	/opt/go/go1.7.linux.amd64/src/runtime/panic.go:500 +0x1a1 github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc420167620, 0x95e309, 0x1f, 0xc4201852e0, 0x1, 0x1) 	/w/workspace/fabric-verify-x86_64_1/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127 github.com/hyperledger/fabric/common/configtx/tool/localconfig.Load(0x7ffeb3e0484b, 0x7, 0x0) 	/w/workspace/fabric-verify-x86_64_1/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/localconfig/config.go:195 +0x79c main.main() 	/w/workspace/fabric-verify-x86_64_1/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/configtxgen/main.go:204 +0x405   Creating network "e2e_default" with the default driver Creating orderer.example.com Creating peer0.org1.example.com Creating peer1.org1.example.com Creating peer0.org2.example.com Creating peer1.org2.example.com Creating cli Channel name : mychannel CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/cacerts/org1.example.com-cert.pem CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/keystore/9df67ce095430c2be22703aabc70916ffd3a97a8801008c6d92ee3138a4b430b_sk CORE_PEER_LOCALMSPID=OrdererMSP CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/signcerts/peer0.org1.example.com-cert.pem CORE_PEER_ADDRESSAUTODETECT=true CORE_PEER_TLS_ENABLED=true CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com CORE_PEER_ID=cli CORE_LOGGING_LEVEL=DEBUG CORE_PEER_ADDRESS=peer0:7051 CORE_PEER_ENDORSER_ENABLED=true CORE_NEXT=true 2017-04-28 10:28:06.039 UTC  logging  InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'channel' 2017-04-28 10:28:06.039 UTC  msp  GetLocalMSP -> DEBU 002 Returning existing local MSP 2017-04-28 10:28:06.040 UTC  msp  GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity Error connecting: rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure Error: rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure Usage: peer channel create  flags   Global Flags: -b, --blockpath string           Path to file containing genesis block --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint -c, --chain string               In case of a newChain command, the chain ID to create. -f, --file string                Configuration transaction file generated by a tool such as configtxgen for submitting to orderer --logging-level string       Default logging level and overrides, see core.yaml for full syntax -o, --orderer string             Ordering service endpoint --test.coverprofile string   Done (default "coverage.cov") --tls                        Use TLS when communicating with the orderer endpoint -v, --version                    Display current version of fabric peer server  !!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!! ================== ERROR !!! FAILED to execute End-2-End Scenario ================== {noformat}  I guess something goes wrong with my install....  I'll give a try to Nejc's advise.     ></body> </Action>
<Action id="23142" issue="16063" author="vjuge" type="comment" created="2017-04-28 10:31:32.0" updateauthor="vjuge" updated="2017-04-28 10:31:32.0"> <body><! CDATA @Nejc : did you installed GO from tarball or apt-like ?  personnaly i'm running on ubuntu, and apt install seems crap, so I downloaded the tarball...  ></body> </Action>
<Action id="23143" issue="16063" author="zupan" type="comment" body=" ~vjuge  I installed if from tar. Also to note, I took last stable version of 1.7." created="2017-04-28 10:40:06.0" updateauthor="zupan" updated="2017-04-28 10:40:06.0"/>
<Action id="23168" issue="16063" author="nickgaski" type="comment" created="2017-04-28 17:35:16.0" updateauthor="nickgaski" updated="2017-04-28 17:35:16.0"> <body><! CDATA This is solved.  Two fixes:  Do not pass ORDERER_CFG_PATH=$PWD instead, pass the following: FABRIC_CFG_PATH=$PWD  In the network_setup.sh script, make the same change. It should be: export FABRIC_CFG_PATH=$PWD  ></body> </Action>
<Action id="23263" issue="16063" author="vjuge" type="comment" created="2017-05-02 11:31:48.0" updateauthor="vjuge" updated="2017-05-02 11:31:48.0"> <body><! CDATA I've modified as requested :  first edited the network_setup.sh :  {noformat} 82         echo "##########################################################" 83         echo "#########  Generating Orderer Genesis block ##############" 84         echo "##########################################################" 85 #FAB-3467 86 export FABRIC_CFG_PATH=$PWD 87 #export ORDERER_CFG_PATH=$PWD 88         ./../../$os_arch/bin/configtxgen -profile TwoOrgs -outputBlock orderer.block 89         echo 90         echo {noformat}  then executed the actions :  {noformat} $ export FABRIC_CFG_PATH=$PWD  $ ./../../$os_arch/bin/configtxgen -profile TwoOrgs -outputBlock orderer.block 2017-05-02 13:29:00.891 CEST  common/configtx/tool  main -> INFO 001 Loading configuration 2017-05-02 13:29:00.934 CEST  common/configtx/tool  doOutputBlock -> INFO 002 Generating genesis block 2017-05-02 13:29:00.937 CEST  common/configtx/tool  doOutputBlock -> INFO 003 Writing genesis block  {noformat}  seems to work fine :)    ></body> </Action>
<Action id="24882" issue="16063" author="davidkhala" type="comment" created="2017-06-01 03:51:14.0" updateauthor="davidkhala" updated="2017-06-01 03:51:14.0"> <body><! CDATA  ~vjuge   I could not find code block you showed in network_setup.sh. Is it should be generateArtifacts.sh?  On my side, running generateArtifacts.sh is working. But manually run   {code:java} ./bin/configtxgen -profile TwoOrgs -outputBlock orderer.block {code} failed with text {code}panic: Error reading configuration: Unsupported Config Type ""{code} still even with {code}export FABRIC_CFG_PATH=$PWD{code} before.  ></body> </Action>
<Action id="24935" issue="16063" author="nickgaski" type="comment" created="2017-06-01 14:11:12.0" updateauthor="nickgaski" updated="2017-06-01 14:11:12.0"> <body><! CDATA  ~davidkhala  - please start fresh.  Kill your containers, Wipe your docker images, prune your docker networks, and delete your release directory.  Then follow the updated getting started instructions.  You are out of date with your configtx.yaml.  The correct profile to pass now is TwoOrgsOrdererGenesis.    So nuke that directory and start fresh.  - http://hyperledger-fabric.readthedocs.io/en/latest/getting_started.html  ></body> </Action>
