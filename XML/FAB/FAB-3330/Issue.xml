<Issue id="15922" key="FAB-3330" number="3330" project="10002" reporter="muralisr" assignee="jiangyaoguo" creator="muralisr" type="10004" summary="check version of chaincode against version in LSCC" priority="2" resolution="10000" status="6" created="2017-04-21 23:44:28.0" updated="2018-07-20 14:12:20.0" resolutiondate="2017-05-03 01:12:17.0" votes="0" watches="4" workflowId="38106"> <description><! CDATA this is the complement of fab-3329 where the version in the proposal response is checked against the version the LSCC.  So this guards against the following scenario  The following transactions are issued to the endorsers * TX1, ....TX15 on chaincode CC:v0/mychannel * TXUpgrade to CC:v1/mychannel  The following blocks are validated on the committers * TX1-TX8 and TXUpgrade in Block-11 , TX1-TX8 get rejected and TXUpgrade gets committed  * TX9-TX15 in Block-12 get validated ** TX9-TX12 use the KV pairs that were touched by the Init method of TXUpgrade and will get invalidated by ledger validation ** TX13-TX15 do not use KV pairs touched by TXUpgrade and would pass ledger validation  By checking for Chaincode Version set by the endorser in the Proposal response (FAB-3329) , TX13-TX15 will be invalidated. Note that TX9-TX12 will also get invalidated by this same method which is a good thing (consistency and early weed-out of invalid TXs).    ></description> </Issue>
