<Action id="62217" issue="36207" author="denyeart" type="comment" body=" ~awjh-ibm  Are you suggesting to allow for any open-ended usage of META-INF?  Or for specific prescribed use cases with specific reserved subdirectories?" created="2019-07-29 13:02:35.0" updateauthor="denyeart" updated="2019-07-29 13:02:35.0"/>
<Action id="62219" issue="36207" author="jyellick" type="comment" body="I&apos;d say rather than extend the META-INF blindly, we should take a more holistic view on packaging, and where we&apos;d like it to go.  IMO we need to aim for a strict boundary between artifacts meant to be consumed by Fabric and artifacts to be consumed by the chaincode." created="2019-07-29 13:38:46.0" updateauthor="jyellick" updated="2019-07-29 13:38:46.0"/>
<Action id="62220" issue="36207" author="awjh-ibm" type="comment" body="The reason this came to light for me recently was that in a Java chaincode I was writing my own annotation and wanted to add annotation processing which requires adding a folder called services inside META-INF. It threw me a bit that Fabric was blocking me being able to use a fairly core component of Java when it was nothing to do with fabric." created="2019-07-29 13:50:04.0" updateauthor="awjh-ibm" updated="2019-07-29 14:16:43.0"/>
<Action id="62222" issue="36207" author="jyellick" type="comment" body="Agreed -- it was a poor choice to use an already reserved name for the db indices.  Though I&apos;m still in favor of re-examining packaging overall, if this target is for v2.0." created="2019-07-29 14:05:48.0" updateauthor="jyellick" updated="2019-07-29 14:05:48.0"/>
