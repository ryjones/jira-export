<Issue id="36773" key="FAB-13691" number="13691" project="10002" reporter="jyellick" assignee="guoger" creator="jyellick" type="10003" summary="Test flake in TestDispatchSubmit" priority="3" resolution="10001" status="6" created="2019-01-15 06:22:26.0" updated="2019-03-19 10:57:46.0" resolutiondate="2019-03-10 14:50:54.0" votes="0" watches="3" workflowId="48798"> <description><! CDATA https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/7974/console  {noformat} 23:07:31 ?   	github.com/hyperledger/fabric/orderer/consensus	 no test files  23:07:31 2019-01-15 04:06:15.767 UTC  test  OnStep -> WARN 001 An attempt to send a StepRequest to a non existing channel (notmychannel) was made by 1 23:07:31 2019-01-15 04:06:15.769 UTC  test  OnSubmit -> WARN 002 An attempt to submit a transaction to a non existing channel (notmychannel) was made by 1 23:07:31 2019-01-15 04:06:15.771 UTC  test  OnSubmit -> ERRO 003 Failed handling transaction on channel mychannel from 1: backend error 23:07:31 github.com/hyperledger/fabric/orderer/consensus/etcdraft_test.TestDispatchSubmit 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/dispatcher_test.go:67 23:07:31 testing.tRunner 23:07:31 	/opt/go/go1.11.1.linux.amd64/src/testing/testing.go:827 23:07:31 runtime.goexit 23:07:31 	/opt/go/go1.11.1.linux.amd64/src/runtime/asm_amd64.s:1333 23:07:31 Running Suite: Etcdraft Suite 23:07:31 ============================= 23:07:31 Random Seed: 1547525169 23:07:31 Will run 69 of 69 specs 23:07:31  23:07:31 •••••2019-01-15 04:06:15.790 UTC  test  ReceiverByChain -> WARN 004 Chain notraftchain is of type *multichannel.ChainSupport and not etcdraft.Chain 23:07:31 •2019-01-15 04:06:15.793 UTC  test  ReceiverByChain -> PANI 005 Programming error - Chain badChainObject is nil although it exists in the mapping 23:07:31 •2019-01-15 04:06:17.463 UTC  test  createWAL -> INFO 006 No WAL data found, creating new WAL at path '/tmp/snap-715153057/wal-' {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:17.516 UTC  test  Start -> INFO 007 Starting Raft node {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:17.517 UTC  test  Start -> INFO 008 Starting raft node as part of a new channel {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:17.518 UTC  test  becomeFollower -> INFO 009 1 became follower at term 0 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:17.518 UTC  test  newRaft -> INFO 00a newRaft 1  peers:   , term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0  {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:17.518 UTC  test  becomeFollower -> INFO 00b 1 became follower at term 1 {"channel": "", "node": 1} 23:07:31 •2019-01-15 04:06:17.522 UTC  test  detectSelfID -> ERRO 00c Could not find cert.orderer0.org0 among  cert.orderer1.org1  23:07:31 ••••••••••••2019-01-15 04:06:18.919 UTC  test  Step -> INFO 00d 1 is starting a new election at term 1 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.919 UTC  test  becomePreCandidate -> INFO 00e 1 became pre-candidate at term 1 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.919 UTC  test  poll -> INFO 00f 1 received MsgPreVoteResp from 1 at term 1 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.919 UTC  test  becomeCandidate -> INFO 010 1 became candidate at term 2 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.920 UTC  test  poll -> INFO 011 1 received MsgVoteResp from 1 at term 2 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.920 UTC  test  becomeLeader -> INFO 012 1 became leader at term 2 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.920 UTC  test  run -> INFO 013 raft.node: 1 elected leader 1 at term 2 {"channel": "", "node": 1} 23:07:31 2019-01-15 04:06:18.922 UTC  test  serveRaft -> INFO 014 Raft leader changed: 0 -> 1 {"channel": "", "node": 1} 23:07:31 •••••••••••••••••••••••••••••panic:  23:07:31 Your test failed. 23:07:31 Ginkgo panics to prevent subsequent assertions from running. 23:07:31 Normally Ginkgo rescues this panic so you shouldn't see it. 23:07:31  23:07:31 But, if you make an assertion in a goroutine, Ginkgo can't capture the panic. 23:07:31 To circumvent this, you should call 23:07:31  23:07:31 	defer GinkgoRecover() 23:07:31  23:07:31 at the top of the goroutine that caused this panic. 23:07:31  23:07:31  23:07:31 goroutine 692  running : 23:07:31 github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo.Fail(0xc0000382d0, 0x49, 0xc00027c488, 0x1, 0x1) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:257 +0x12f 23:07:31 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match.func1(0x170544e, 0x9) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:130 +0x518 23:07:31 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc0000c1600, 0x1865ca0, 0xc000173b00, 0x1, 0x0, 0x0, 0x0, 0x1646c20) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:152 +0x4d9 23:07:31 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc0000c1600, 0x1865ca0, 0xc000173b00, 0x0, 0x0, 0x0, 0xc0000c1600) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:49 +0xc2 23:07:31 github.com/hyperledger/fabric/orderer/consensus/etcdraft_test.(*network).elect(0xc000172b70, 0x2, 0x13b2) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain_test.go:2659 +0xca9 23:07:31 github.com/hyperledger/fabric/orderer/consensus/etcdraft_test.glob..func1.3.4.5.4.1(0xc000390040, 0xc00051e000, 0x13b2, 0x13b2) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain_test.go:1524 +0xc2 23:07:31 github.com/hyperledger/fabric/orderer/consensus/mocks.(*FakeConsenterSupport).WriteConfigBlock(0xc000409700, 0xc000390040, 0xc00051e000, 0x13b2, 0x13b2) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/mocks/mock_consenter_support.go:773 +0x37f 23:07:31 github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeConfigBlock(0xc000120480, 0xc000390040, 0x6, 0xc0000c0d08, 0x8f8d8c) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:924 +0x18f 23:07:31 github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).writeBlock(0xc000120480, 0xc000390040, 0x6, 0x1) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:507 +0xf9 23:07:31 github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).serveRequest(0xc000120480) 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:468 +0xb85 23:07:31 created by github.com/hyperledger/fabric/orderer/consensus/etcdraft.(*Chain).Start 23:07:31 	/w/workspace/fabric-verify-unit-tests-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/consensus/etcdraft/chain.go:252 +0x679 23:07:31 FAIL	github.com/hyperledger/fabric/orderer/consensus/etcdraft	15.347s 23:07:31 ?   	github.com/hyperledger/fabric/orderer/consensus/etcdraft/mocks	 no test files  {noformat}  ></description> </Issue>
