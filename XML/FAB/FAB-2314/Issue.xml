<Issue id="14876" key="FAB-2314" number="2314" project="10002" reporter="joshhus" assignee="markparz" creator="joshhus" type="10004" summary="General doc input" priority="2" resolution="10000" status="6" created="2017-02-16 21:12:56.0" updated="2018-07-20 14:11:42.0" resolutiondate="2017-04-25 15:36:59.0" votes="0" watches="4" workflowId="37501"> <description><! CDATA Couple of points:  1) More iterative updates  2) We need to have the major headings in a different color to pop out on the index board on left  3) The transaction model topic, security model, multichannel, smart contracts, consensus topics need a overall heading- it's too messy for the overview section otherwise.  4) The overview section needs to be more about "why" than just technology overview.  This is missing from a lot of the sections.  this is the feedback I got in Hyperledger hackfest in December So as an example- Yes, what is multichannel- great, but why do we need it?    In some cases, they will only need one channel- everyone will be able to see, say images.  These images allow people to determine if the details they want. So it makes sense that any company can be on the blockchain to see the data. Others have clearly stated they need Channels- they need 3 people on a channel to do bilateral communications.  They do not even trust encryption to keep the data private and fear that because these transactions may even occur over a 10 year period, that if encryption is broken, everyone being on blockchain is not enough. As a result, multichannel helps with data partitioning.. data only goes to those who need to know.  d) With my comments in above, we need to ensure we cover  the following beyond multichain (which can exist in current sections). Many of these or competitive advantages that we have and are ahead of the curve on. I've added a few words here to help  §Plug-ability to enable flexibility in development and deployment  –Identity (MSP) – bring your own identity, support for multiple providers  –Consensus – no one size fits all algorithm   –Data Store – support various data store models (KV, NoSQL, RDBMS; Complex query / transaction history on an asset)--- (Clearly the importance the level db implementation makes it very difficult to perform complex queries and transaction history)  §Native SDKs: SDK specification for developers implemented in any language (Node.js, Java initial support--- people need different support given the skills they have on board   §Access control on who can query or submit transactions  §HSM (Hardware Security Module) support: Modified and unmodified PKCS11 for t-cert generation ->HSM allows for an added layer of security protection that is needed with solutions    ></description> </Issue>
