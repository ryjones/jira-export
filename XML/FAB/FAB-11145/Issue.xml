<Issue id="31862" key="FAB-11145" number="11145" project="10002" reporter="elli-androulaki" creator="elli-androulaki" type="10000" summary="(CLOSED) As a Fabric core developer I would like to provide a Token Management System (TMS) Component that does not offer any privacy" priority="3" resolution="10001" status="6" created="2018-07-13 16:13:37.0" updated="2019-01-08 15:22:32.0" resolutiondate="2018-08-22 07:29:19.0" votes="0" watches="3" workflowId="35946"> <description><! CDATA  This is one epic from many to follow to allow for token management enablement of Fabric. Current proposal for the higher level design is TBA soon.     A Token Management System is an abstraction that aims to generalise the set of operations associated to the issuing, transfer and listing of tokens at a relatively lower level. It is essentially a library that can be used by FabToken entities (client, prover peer) to construct the FabToken issue and transfer transactions, to list the tokens owned by a specific user, etc, and to validate/commit FabToken transactions (committing peer side).     At the completion of this epic work a Token Management System (TMS) component is defined and implemented as follows:  * the Token Management System accommodates requests to construct _transfer requests_ * the TMS accommodates requests to verify _issue_ and _transfer_ requests __ assuming a mockup of ledger (KVS) as follows: ** *malformed* _issue_ or _transfer_ _requests_ or_requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created, double- ** the TMS accommodates requests to construct _issue requests_ ** the TMS accommodates requests to verify _issue requests_ assuming a mockup of ledger (KVS) as follows: *** *malformed* _issue requests_ or _issue requests_ that do *not* conform with the TMS rules (e.g., correctness of the tokens created) are *rejected* and have *no* impact to the mockup ledger *** *wellformed* _issue requests_ or _issue requests_ that conform with the TMS rules (e.g., correctness of the tokens created) are *accepted* and modify the state of mockup ledger  ** spending attacjs) are *rejected* and have *no* impact to the mockup ledger ** *wellformed* _issue or_ _transfer_ _requests_ or _requests_ that conform with the TMS rules (e.g., correctness of the tokens created w.r.t. the ones consumed/imported) are *accepted* and modify the state of mockup ledger  * the TMS accommodates requests to _list tokens_ assuming a mockup ledger      Potential break down of the work involved in this epic into pieces: # Design  # As a Fabric core developer I would like to provide a Token Management System (TMS) with the logic to accommodate issue token related requests ## As a TMS developer I would like to design an interface for a _TMS issuer_ that would generate token issue requests and of a _TMS Verifier_ interface that would verify token issue requests upon demand ## As a TMS developer I would like to implement the part of _TMS Issuer_ interface that refers to the generation of TMS issue requests ## As a TMS developer I would like to implement the _TMS Verifier_ interface that refers to the verification of TMS issue requests  # As a Fabric core developer I would like to enhance the TMS with token transfer abilities ## As a TMS developer I would like to design the interface of a _TMS transactor_ that would generate TMS token transfer requests and extend the _TMS Verifier_ interface to allow for verification of TMS token transfer requests ## As a TMS developer I would like to implement the part of the _TMS Transactor_ interface that refers to the generation of TMS transfer requests ## As a TMS developer I would like to implement the part of the _TMS Verifier_ interface that refers to the verification of TMS transfer requests # As a Fabric core developer I would like to enhance the _TMS Transactor_ functionalities with token listing abilities ## As a TMS developer I would like to extend the _TMS Transactor_ interface with the capability to accommodate list token requests ## As a TMS developer I would like to Implement the _TMSTransactor_ interfaces for processing TMS list token requests # As a Fabric core developer I would like to enhance the TMS with the ability to configure itself ## As an infrastructure developer I would like to be able to build a _TMS factory_ to allow for the setup of a configurable TMS and respective Transactors, Issuers and Verifiers # Documentation # System Test     Adding  ~sykesm ,  ~angelo.decaro ,  ~mathiasb303 ,  ~jyellick ,  ~denyeart .     ></description> </Issue>
