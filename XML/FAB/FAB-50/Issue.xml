<Issue id="12349" key="FAB-50" number="50" project="10002" reporter="lehors" assignee="sanchezl" creator="lehors" type="10001" summary="Viper lets user specify options that don&apos;t make sense without warnings" priority="3" resolution="10000" status="6" created="2016-08-12 18:07:39.0" updated="2018-07-20 18:58:17.0" resolutiondate="2017-04-11 18:40:25.0" votes="0" watches="4" workflowId="36026"> <description><! CDATA This issue is a transfer from GitHub https://github.com/hyperledger/fabric/issues/1309 I'm broadening the description because although the original issue was raised against the peer command specifically the discussion that followed brought to light the fact that the issue is more general.  Indeed, Fabric's configuration is currently handled via yaml files and Viper which provides no validation mechanism.  Several people have expressed interest in ditching Viper for that reason. Several possibilities were mentioned:  corecode commented on May 24:  Relevant SO post: http://stackoverflow.com/questions/16465705/how-to-handle-configuration-in-go  I think we should not limit ourselves to yaml if other packages provide obvious benefits. Transitioning config file structure is painful, but only once. Generally, people on go-nuts seem to dislike yaml, because it is a very complex format.  Options I can see:  https://github.com/BurntSushi/toml ini-like, uses reflection, can express complex data (arrays, time) https://godoc.org/gopkg.in/gcfg.v1 ini, uses reflection, can express multi-section and multi-values https://golang.org/pkg/encoding/json/ json, standard go package, uses reflection, complex data, no comments https://github.com/vharitonsky/iniflags ini, ties into standard go flags package, allows overrides via command line     ></description> </Issue>
