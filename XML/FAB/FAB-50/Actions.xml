<Action id="18716" issue="12349" author="jyellick" type="comment" created="2016-08-30 14:36:06.0" updateauthor="jyellick" updated="2016-08-30 14:36:06.0"> <body><! CDATA It looks like the latest incarnation of Viper includes an `UnmarshalExact` function which addresses the concerns above  To my understanding, to utilize this new function, we would declare a structure with an instance `ref` with names corresponding to our config fields, then call the `viper.UnmarshalExact(&ref)` which will produce an error if any config values are specified in the config file which do not have corresponding entries in the structure.  This would allow us to keep the current config format, so no pain of transition, and address the lack of validation complaints.  This avoid the pitfalls of using non-standard config formats like ini, and allows us to retain comments unlike json.  I know  ~jeffgarratt  is also a fan of sticking with yaml if he'd like to chime in.  ></body> </Action>
<Action id="18723" issue="12349" author="jeffgarratt" type="comment" body="I am in favor of yaml as I yet to see a compelling option wrt to pragmatism.  It support comments and is simple to understand.  It also can be very powerful, and the addition mentioned by  ~jyellick  seems to address some prior concerns.  I would not disregard the capacity for yaml to support our as of yet undetermined need for complexity." created="2016-08-30 23:36:22.0" updateauthor="jeffgarratt" updated="2016-08-30 23:36:22.0"/>
<Action id="18734" issue="12349" author="jyellick" type="comment" created="2016-08-31 15:23:07.0" updateauthor="jyellick" updated="2016-08-31 15:23:07.0"> <body><! CDATA This I think might be a good first golang oriented issue to target.  Although you may need to deviate, the rough steps as I see it:  1. Try the newest version of Viper locally, see if you can get the behavior of identifying extra parameters in the config file as expected. 2. Pull the new viper code into hyperledger fabric and add or remove any associated dependencies.  Submit this as a changeset.  Be sure to highlight the included and removed packages as something in need of review. 3. Convert the existing config code everywhere viper is used, and convert it to use the newer mechanism, I imagine this would be one changeset per config.  ></body> </Action>
<Action id="18813" issue="12349" author="lehors" type="comment" created="2016-09-08 13:06:00.0" updateauthor="lehors" updated="2016-09-08 13:06:00.0"> <body><! CDATA Hi guys, This sounds promising. I agree that if we can find a way to validate the yaml files than sticking to yaml isn't a bad thing.    ></body> </Action>
<Action id="21792" issue="12349" author="mastersingh24" type="comment" body="this is not a defect" created="2017-04-02 12:19:55.0" updateauthor="mastersingh24" updated="2017-04-02 12:19:55.0"/>
