<Action id="33108" issue="22807" author="denyeart" type="comment" created="2017-10-24 10:38:51.0" updateauthor="denyeart" updated="2017-10-24 10:38:51.0"> <body><! CDATA Strange that the problem is intermittent. %2F is a forward slash, which is one of the special characters that is handled explicitly:  https://gerrit.hyperledger.org/r/#/c/13993/1/core/ledger/util/couchdb/couchdb.go  .   ~davidkel  we may need to add some additional trace to understand what is going on. Are you able to cherry pick changes from gerrit and build your own peer?  ></body> </Action>
<Action id="33109" issue="22807" author="davidkel" type="comment" body="It&apos;s not intermittent. Pretty sure it only happens to our keys that have colon in them. I&apos;ve just added some debug code to the peer to see what might be the cause. It could be a problem with a Go Library. Just to confirm I am building with Go 1.9.1 as I see that is the level of Go the builds are using, but I could be wrong." created="2017-10-24 10:47:47.0" updateauthor="davidkel" updated="2017-10-24 10:47:47.0"/>
<Action id="33111" issue="22807" author="davidkel" type="comment" created="2017-10-24 10:57:00.0" updateauthor="davidkel" updated="2017-10-24 10:57:00.0"> <body><! CDATA So it looks like it's how the go library has generated the initial url. code mods are {code} func encodePathElement(str string) string { 	logger.Debugf("Entering encodePathElement()  string= %s ", str) 	u := &url.URL{} 	u.Path = str 	encodedStr := u.String() // url encode using golang url path encoding rules 	logger.Debugf("go url encoded response encodedStr= %s ", encodedStr) 	encodedStr = strings.Replace(encodedStr, "/", "%2F", -1) 	encodedStr = strings.Replace(encodedStr, "+", "%2B", -1) 	logger.Debugf("Exiting encodePathElement()  encodedStr= %s ", encodedStr) 	return encodedStr } {code}  gave this output {code} 2017-10-24 11:51:34.122 UTC  couchdb  encodePathElement -> DEBU f1a Entering encodePathElement()  string= systest-accesscontrols$syscollectionsAsset:org.hyperledger.composer.system.AssetRegistry  2017-10-24 11:51:34.122 UTC  couchdb  encodePathElement -> DEBU f1b go url encoded response encodedStr= ./systest-accesscontrols%00%00$syscollections%00Asset:org.hyperledger.composer.system.AssetRegistry%00  2017-10-24 11:51:34.122 UTC  couchdb  encodePathElement -> DEBU f1c Exiting encodePathElement()  encodedStr= .%2Fsystest-accesscontrols%00%00$syscollections%00Asset:org.hyperledger.composer.system.AssetRegistry%00  {code} So as you can see the go library has added './' to the front of the string then the encodePathElement encodes it. I can confirm that if you don't encode it to %2F the query would work.  ></body> </Action>
<Action id="33125" issue="22807" author="denyeart" type="comment" created="2017-10-24 16:38:49.0" updateauthor="denyeart" updated="2017-10-24 16:38:49.0"> <body><! CDATA  ~davidkel  Can you try the fix and let us know results?   https://gerrit.hyperledger.org/r/#/c/14811/      ></body> </Action>
<Action id="33129" issue="22807" author="davidkel" type="comment" body=" ~denyeart  I will give it a go tomorrow. Could you remind me again how to apply the change set as it isn&apos;t something I have done before, otherwise it&apos;s just as easy for me to copy the change into my code and rebuild." created="2017-10-24 18:24:47.0" updateauthor="davidkel" updated="2017-10-24 18:24:47.0"/>
<Action id="33130" issue="22807" author="denyeart" type="comment" created="2017-10-24 18:47:45.0" updateauthor="denyeart" updated="2017-10-24 18:47:45.0"> <body><! CDATA  ~davidkel  In Gerrit top-right of page, there is a Download pulldown.  There are two options there that will work:  Click on the 'Cherry Pick' to pull these changes into your local branch.  Click on the 'Checkout' to switch to a branch equivalent to the changesets.  In either case, paste the command syntax to your git command line to get the new code, and then rebuild.  Of course, when the change is small like this, it is simple to copy/paste the code itself, but I'd recommend to get familiar with Cherry Pick and Checkout, as they will be helpful for more complex changes in the future.  ></body> </Action>
<Action id="33154" issue="22807" author="davidkel" type="comment" body=" ~denyeart  I have tested the change and it has fixed the problem for us. Many thanks" created="2017-10-25 09:59:54.0" updateauthor="davidkel" updated="2017-10-25 09:59:54.0"/>
<Action id="33155" issue="22807" author="mastersingh24" type="comment" body=" ~denyeart  - is this actually needed for 1.0.4?" created="2017-10-25 11:24:37.0" updateauthor="mastersingh24" updated="2017-10-25 11:24:37.0"/>
<Action id="33289" issue="22807" author="mastersingh24" type="comment" created="2017-10-27 11:04:42.0" updateauthor="mastersingh24" updated="2017-10-27 11:04:42.0"> <body><! CDATA  ~chris.elder  Looks like we need to backport this to the release branch but a simply cherry pick won't work due to a merge conflict.  Can you backport this fix to the release branch?  ></body> </Action>
<Action id="33293" issue="22807" author="denyeart" type="comment" body=" ~mastersingh24  Yes we&apos;ll want this for 1.0.4, Chris indicated he could backport today." created="2017-10-27 12:15:43.0" updateauthor="denyeart" updated="2017-10-27 12:15:43.0"/>
<Action id="33299" issue="22807" author="chris.elder" type="comment" body="Backport is complete.  I have pushed this change for the release branch." created="2017-10-27 13:07:21.0" updateauthor="chris.elder" updated="2017-10-27 13:07:21.0"/>
