<Action id="70925" issue="46299" author="wenjian" type="comment" created="2020-12-07 19:41:18.0" updateauthor="wenjian" updated="2020-12-07 19:41:18.0"> <body><! CDATA FAB-15519 replaced the viperutil.EnhancedExactUnmarshalKey(...) call with viper.Get("peer.BCCSP") in peer/common/common.go. However, viper.Get("peer.BCCSP") only returns values from the config file (core.yaml), but not from env vars. This caused the reported problem where CORE_PEER_BCCSP_SW_FILEKEYSTORE_KEYSTORE env var was not picked up.  Note that this behavior only happens for non-leaf nodes. If you call viper.Get() for a leaf node (eg "peer.BCCSP.SW.FileKeyStore.KeyStore"), it will correctly return the env var value instead of the value in the config file.  If I change viper.Get("peer.BCCSP") back to viperutil.EnhancedExactUnmarshalKey("peer.BCCSP"...), the problem is fixed.  ></body> </Action>
<Action id="70926" issue="46299" author="wenjian" type="comment" body="EnhancedExactUnmarshalKey is expensive to the tune of several minutes during test cases. Therefore, it is not a good option to change back. " created="2020-12-07 21:06:50.0" updateauthor="wenjian" updated="2020-12-07 21:06:50.0"/>
<Action id="71329" issue="46299" author="denyeart" type="comment" body=" ~sykesm  A few developers have looked into this one without success. Could you add your thoughts? If it is not possible to fix, is there any additional guidance we need to document beyond using core.yaml to set peer properties rather than environment variables?" created="2021-02-01 15:48:52.0" updateauthor="denyeart" updated="2021-02-01 15:48:52.0"/>
<Action id="71344" issue="46299" author="sykesm" type="comment" created="2021-02-03 17:45:22.0" updateauthor="sykesm" updated="2021-02-03 17:45:22.0"> <body><! CDATA There are no good, easy solutions to this problem. The solution I proposed more than a year ago was to change how the Fabric configuration model works.  The workaround is to configure BCCSP in core.yaml.  ></body> </Action>
