<Issue id="45672" key="FAB-18086" number="18086" project="10002" reporter="tock" assignee="tock" creator="tock" type="10003" summary="Wiring between multichannel.Registrar, follower.Chain &amp; BlockPuller" priority="3" resolution="10000" status="6" created="2020-07-22 12:22:38.0" updated="2020-08-17 19:39:58.0" resolutiondate="2020-08-17 19:39:58.0" votes="0" watches="1" workflowId="59580" archived="N"> <description><! CDATA Currently several opaque function pointers are used to decouple the multichannel.Registrar and the follower.Chain.  Convert opaque function pointers to well defined interfaces that are easy to follow and mock for tests.  The BlockPuller creation mechanisms should be converted to a factory struct that receives all the prerequisites except the config-block / join-block, and exposes a method that builds a new BlockPuller given a config block. This allows us to use the same mechanisms for on-boarding, until the join block, and for following past the join-block.  In the block puller, implement a mechanism that updates the block verification policy with every incoming config block. Implement a separate mechanism for updating the endpoints used by the block puller (possibly by creating a new instance).   The follower's function pointer that is used to create a consensus.Chain is replaced by an interface that defines this method. This interface is implemented by the registrar and and is set into the new follower instance at construction time.     ></description> </Issue>
