<Action id="53378" issue="35195" author="tock" type="comment" created="2018-11-13 11:34:01.0" updateauthor="tock" updated="2018-11-15 08:57:20.0"> <body><! CDATA  ~kchristidis   ~jyellick    ~guoger    ~adarshsaraf123   I attached a high level design that outlines how we plan to go about this. Please review and comment on this before we start implementing this feature.  ></body> </Action>
<Action id="53451" issue="35195" author="kchristidis" type="comment" body=" ~tock : Thanks for putting this together. I&apos;ve gone through it, and I have a few questions. Can we get a Google Sheets version of this so that I can comment on specific bullet points?" created="2018-11-14 19:03:58.0" updateauthor="kchristidis" updated="2018-11-14 19:03:58.0"/>
<Action id="53452" issue="35195" author="kchristidis" type="comment" body="Also, /cc  ~adarshsaraf123  for review." created="2018-11-14 19:04:30.0" updateauthor="kchristidis" updated="2018-11-14 19:04:30.0"/>
<Action id="53478" issue="35195" author="tock" type="comment" body="Per  ~kchristidis &apos;s request, I added a link (above) to a Google doc with comments enabled." created="2018-11-15 10:30:23.0" updateauthor="tock" updated="2018-11-15 10:30:23.0"/>
<Action id="53513" issue="35195" author="kchristidis" type="comment" body="I left a few comments on the Google Doc. I was leaning towards Option 2 yesterday, but yeah, the point about needing access to the OSN storage is a good one. I think I&apos;m good with Option 1. Let&apos;s hold off for another day or two to see if there are any objections. Thanks for putting this together." created="2018-11-15 19:12:07.0" updateauthor="kchristidis" updated="2018-11-15 19:12:07.0"/>
<Action id="53528" issue="35195" author="adarshsaraf123" type="comment" created="2018-11-16 11:48:47.0" updateauthor="adarshsaraf123" updated="2018-11-16 11:48:47.0"> <body><! CDATA I do not see any description on how we are going to handle block metadata (kafka and raft related) during the migration. Are the details on that to follow later?  Apart from that I too agree with the point about needing access to the OSN storage and therefore option 1 looks good.  Another question that I have been having is whether we enforce the raft migration across all the channels on a consortium (the way it is planned in the doc) or do we allow each channel to decide it's own orderer type (kafka vs raft)? Essentially I am wondering, once created, can we allow the application channels to decide upon their ordering service per their need and not be reliant on what the whole consortium decides. (Not sure if this does not have any practical value but I do believe giving each channel autonomy is a good idea.) Also, if we allow each channel to decide on its own orderer type then does it simplify the design in any way (I do believe it should) and if so does it make sense to take this approach just for the simplicity it brings?  ></body> </Action>
<Action id="53548" issue="35195" author="kchristidis" type="comment" created="2018-11-16 23:16:19.0" updateauthor="kchristidis" updated="2018-11-16 23:16:19.0"> <body><! CDATA  ~adarshsaraf123 : Good points, and thanks for giving this a look!  # Do you see any issue with a Raft network having Kafka-related metadata in its earlier blocks? (I don't, but I may be missing something.) # I hadn't considered allowing each channel to decide on their orderer type _at this stage_, particularly because I want to move as many networks off of Kafka as possible. (This is admittedly not a good enough reason.) I'm  good with each channel deciding their orderer type (and I believe  ~guoger  had echoed similar thoughts in the past), but I would ask that we don't list it as a requirement. What we must absolutely have is a tool for mass (i.e. all the channels) migration. If we can get something going for individual channels w/o wasting too many cycles, then I guess that could work. But I'll note again that we're better off moving to a consensus mechanism where we rely solely on our own (i.e. Fabric) binaries as soon as possible.  ></body> </Action>
<Action id="53551" issue="35195" author="adarshsaraf123" type="comment" created="2018-11-17 12:27:49.0" updateauthor="adarshsaraf123" updated="2018-11-17 12:27:49.0"> <body><! CDATA  ~kchristidis  # I do not see an issue with Kafka-related metadata being present in the earlier blocks. However, I _think_ that not having the Raft-related metadata could cause us problems. It will be good if the proposal considers this. Either there are problems and then we need means to handle them, or there are no problems and we just describe why it will not be a problem. # I in fact do agree that moving the networks off Kafka is a good reason. However, I was thinking of the case when admins from different channels do not consent on the migration and then we need the autonomy for each channel. I think if we provide a solution for migrating individual channels then it can be easily extended to migrate all of them at once. However, in case we do not, and we do need this feature in the future, then it might get difficult to support the same. I believe the design is quite amenable to support individual channel migration and considering a few more details should get us going.   ></body> </Action>
<Action id="53558" issue="35195" author="tock" type="comment" created="2018-11-18 07:54:38.0" updateauthor="tock" updated="2018-11-18 07:54:38.0"> <body><! CDATA * Supporting a "mixed" ordering service with both kafka and raft:  ** I think that it is technically possible to engineer a system that would do that.  ~adarshsaraf123  ** *However*, I do think this will complicate the system to a level that is way beyond what we need. Part of the reason for the raft move is to reduce the dependency on a third party service (kafka) that has to be managed and hosted - as this adds to the complexity and cost of a system that is already quite complex. I would not consider going that way (mixed) unless there is a clear customer (user) demand for that.  ~kchristidis  * W.r.t. channel admins not consenting and blocking a migration - that is a good point  ~adarshsaraf123 . ** I think that the choice of consensus type should be left to the decision of orderer-org admins (a majority, or any other modification policy they agree upon when they set up the ordering service), not channel admins.  ** Channel admins should be able to choose the consenter set, but not the consensus type. If they cannot agree, they will be left with a default set - all orderers. * The details of how we represent kafka & raft config metadata will be addressed once we elaborate the design further. In that context we'll also address the restart flow - when an OSN restarts after migration - and all failure scenarios that branch off from there. One of these failure scenarios is that the node cannot find (or fails to process) the raft config metadata.   ></body> </Action>
<Action id="59492" issue="35195" author="guoger" type="comment" body=" ~tock  is there a design doc/write-up for approach v2? thx!" created="2019-04-25 10:37:58.0" updateauthor="guoger" updated="2019-04-25 10:37:58.0"/>
<Action id="59572" issue="35195" author="tock" type="comment" created="2019-04-29 14:17:39.0" updateauthor="tock" updated="2019-04-29 14:18:46.0"> <body><! CDATA The approach described in this task is discontinued. The work on the new approach (v2) to migration will be continued here https://jira.hyperledger.org/browse/FAB-15041  ></body> </Action>
