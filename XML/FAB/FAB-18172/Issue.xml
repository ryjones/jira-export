<Issue id="45842" key="FAB-18172" number="18172" project="10002" reporter="jyellick" creator="jyellick" type="10001" summary="Allow looser matching on orderer TLS consenter certs" priority="3" resolution="10002" status="6" created="2020-08-18 14:15:59.0" updated="2020-08-18 14:26:23.0" resolutiondate="2020-08-18 14:26:13.0" votes="0" watches="2" workflowId="59756" archived="N"> <description><! CDATA The orderer's cluster service identifies other consenters in the cluster by X.509 TLS certificate.Â  It performs a byte for byte comparison of the certificate presented to the TLS connection compared to the TLS certificate it is aware of from the channel configuration.  Unfortunately, this makes rotating certificates quite challenging, especially when dealing with benign expiration, rather than key compromise. Because an orderer may be a member of many channels, in order to rotate an orderer's TLS certificate, it must usually be stopped, have the TLS certificate changed, change all channels to recognize the new TLS certificate, and then be restarted. For an orderer which is a member of dozens or hundreds of channels, the channel config updates could take quite a while, and be quite complex to perform (requiring gathering signatures from multiple parties etc.).  In the case where the private key of the TLS certificate is still secure, but only the issued certificate is expiring, it should be possible to issue a new TLS certificate based on the same public/private keypair, but with a new valid expiration date. In this case, we can avoid the channel configuration updates and associated complexity by relaxing the connection validation to inspect only the public key of the certificate, and not the entire set of certificate bytes. This should still be safe as only the owner of the identity can create (and use) a new certificate with the corresponding public key bytes, and it will allow the orderer to simply be restarted with the new certificate, rather than requiring channel config updates across all channels.  Acceptance criteria: We should be able to start a Raft based network (system channel only is fine), stop one node, renew its certificate with the same private key, and restart that node. The node should resume consenting as part of the consenter set without channel reconfiguration.  ></description> </Issue>
