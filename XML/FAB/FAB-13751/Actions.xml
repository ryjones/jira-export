<Action id="55792" issue="36929" author="pandrejko" type="comment" body=" ~dubovitskaya  - Not sure if you are the right person to contact about this?  Is there a better link we could point them to for using the cid library?" created="2019-01-18 12:49:05.0" updateauthor="pandrejko" updated="2019-01-18 12:49:05.0"/>
<Action id="56971" issue="36929" author="pandrejko" type="comment" body=" ~denyeart  Who might be able to help us with this link besides Maria?" created="2019-02-13 15:06:29.0" updateauthor="pandrejko" updated="2019-02-13 15:09:46.0"/>
<Action id="56998" issue="36929" author="denyeart" type="comment" body=" ~skarim   ~angelo.decaro   ~rickr  Is there an example of using Idemix attributes in a Java SDK test that we can point to from docs?" created="2019-02-13 18:18:01.0" updateauthor="denyeart" updated="2019-02-13 18:25:27.0"/>
<Action id="57000" issue="36929" author="rickr" type="comment" created="2019-02-13 19:29:38.0" updateauthor="rickr" updated="2019-02-13 19:29:38.0"> <body><! CDATA https://github.com/hyperledger/fabric-sdk-java/blob/8044bac1bfe9baf9d6360b067e0d6b5445cc953d/src/test/java/org/hyperledger/fabric/sdkintegration/End2endIdemixIT.java#L121?  and for chaincode : https://github.com/hyperledger/fabric-sdk-java/blob/8044bac1bfe9baf9d6360b067e0d6b5445cc953d/src/test/fixture/sdkintegration/gocc/sampleIdemix/src/github.com/example_cc/example_cc.go#L88   ></body> </Action>
<Action id="57002" issue="36929" author="denyeart" type="comment" created="2019-02-13 19:52:51.0" updateauthor="denyeart" updated="2019-02-13 20:47:42.0"> <body><! CDATA Adding release-1.4 links...     For an example of setting an affiliation in the Java SDK see:   https://github.com/hyperledger/fabric-sdk-java/blob/release-1.4/src/test/java/org/hyperledger/fabric/sdkintegration/End2endIdemixIT.java#L121   For an example of using the CID library in go chaincode to retrieve attributes, see:   https://github.com/hyperledger/fabric-sdk-java/blob/release-1.4/src/test/fixture/sdkintegration/gocc/sampleIdemix/src/github.com/example_cc/example_cc.go#L88      ></body> </Action>
<Action id="57044" issue="36929" author="pandrejko" type="comment" created="2019-02-14 14:55:34.0" updateauthor="pandrejko" updated="2019-02-14 16:32:36.0"> <body><! CDATA 1.3 CR:  https://gerrit.hyperledger.org/r/29301   1.4 CR  https://gerrit.hyperledger.org/r/#/c/29303/   Master CR:  https://gerrit.hyperledger.org/r/29306   ></body> </Action>
<Action id="57066" issue="36929" author="angelo.decaro" type="comment" body="Hi  ~denyeart , no, there is no support for that." created="2019-02-15 09:29:47.0" updateauthor="angelo.decaro" updated="2019-02-15 09:29:47.0"/>
<Action id="57291" issue="36929" author="denyeart" type="comment" body=" ~angelo.decaro  The sample shows how to retrieve an out of the box attribute (in this case &quot;ou&quot;). I assume you mean custom attributes are not supported, which is already documented." created="2019-02-19 13:34:28.0" updateauthor="denyeart" updated="2019-02-19 13:34:28.0"/>
<Action id="57292" issue="36929" author="angelo.decaro" type="comment" body=" ~denyeart , correct. Anyway, the OU cannot be retrieved at the current stage. It is not offered by the java-sdk API." created="2019-02-19 13:36:10.0" updateauthor="angelo.decaro" updated="2019-02-19 13:38:23.0"/>
<Action id="57294" issue="36929" author="denyeart" type="comment" created="2019-02-19 14:02:50.0" updateauthor="denyeart" updated="2019-02-19 14:02:50.0"> <body><! CDATA  ~angelo.decaro  I don't understand what you mean by no OU support... the example shows setting in java sdk: {code:java} new RegistrationRequest(idemixUser.getName(), "org1.department1"){code} And retrieving in chaincode: {code:java} 	ou, found, err := cid.GetAttributeValue(stub, "ou"); 	if err != nil { 		return shim.Error("Failed to get attribute 'ou'") 	} 	if !found { 		return shim.Error("attribute 'ou' not found") 	} 	if !strings.HasSuffix(ou, "department1") { 		return shim.Error(fmt.Sprintf("Incorrect 'ou' returned, got '%s' expecting to end with 'department1'", ou)) 	}{code} Maybe I don't understand the connection between affiliation and OU.  The CA docs say:    {code:java} All enrollment certificates issued by the fabric-ca-server have organizational units (or “OUs” for short) as follows:  The root of the OU hierarchy equals the identity type An OU is added for each component of the identity’s affiliation For example, if an identity is of type peer and its affiliation is department1.team1, the identity’s OU hierarchy (from leaf to root) is OU=team1, OU=department1, OU=peer. {code}    So the example and docs do not seem to align.  Can you or  ~skarim  help to explain this?  Do we need a fix or a doc update?     ></body> </Action>
