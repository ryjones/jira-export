<Action id="22362" issue="15419" author="wyanglau" type="comment" created="2017-04-13 16:08:21.0" updateauthor="wyanglau" updated="2017-04-13 16:08:21.0"> <body><! CDATA My thought is straightforward.   (1) In the ledger section of core.yaml file, introducing a tag to enable TLS, as well as the path to the cert  {quote}ledger:  blockchain:  state: # stateDatabase - options are "goleveldb", "CouchDB" # goleveldb - default state database stored in goleveldb. # CouchDB - store state database in CouchDB stateDatabase: goleveldb couchDBConfig: couchDBAddress: https://0.0.0.0:6984 username: ryan password: whatsoever {color:red} tlsEnabled: true{color} {color:red}serverCertPath: /opt/couchdb/etc/opensslcerts/server.crt{color} {quote}  (2) Then, in core/ledger/util/couchdb/couchdb.go, introduce a parameter to establish  URL starting with http/https.  {quote}func CreateConnectionDefinition(couchDBAddress, username, password string, isTLSEnabled bool) (*CouchConnectionDef, error) {   {color:red}scheme:= "http" if(isTLSEnabled){ 	scheme= "https" }{color}  	connectURL := &url.URL{ 		Host:   couchDBAddress, 		{color:red}Scheme: scheme,{color} 	}{quote} (3) Introduce a parameter in *handleRequest* method to indicate the path to cert. Then, create the new certPool and set it in the tlsConfig {quote}func (couchInstance *CouchInstance) handleRequest(method, connectURL string, data io.Reader, rev string, multipartBoundary string, {color:red}certPath string{color}) 	 	capool := x509.NewCertPool(); 	pemData, err := ioutil.ReadFile(certPath) 					if err != nil { 							panic(err) 					} 	capool.AppendCertsFromPEM(pemData) tlsConfig := &tls.Config{RootCAs: capool } 		// Load our trusted certificate path  	ok := tlsConfig.RootCAs.AppendCertsFromPEM(pemData) 			    if !ok { 			            panic("Couldn't load PEM data") 			    } {quote}     ></body> </Action>
<Action id="22364" issue="15419" author="wyanglau" type="comment" body="I haven&apos;t done something to modify the e2e example. The tlsEabled and serverCertPath tag could be added to the docker-compose.yaml file as environment variables. Let me know about Gary&apos;s design. Thanks. " created="2017-04-13 16:12:26.0" updateauthor="wyanglau" updated="2017-04-13 16:12:26.0"/>
<Action id="22601" issue="15419" author="denyeart" type="comment" created="2017-04-17 18:48:50.0" updateauthor="denyeart" updated="2017-04-17 18:48:50.0"> <body><! CDATA Thanks  ~wyanglau .  My question to  ~mastersingh24  was more around CouchDB server side. Which certificates to use for CouchDB?  Were you thinking of re-using certificates that the peer will already have? Also, could OpenSSL be used for CouchDB TLS regardless of platform? See SSL enablement info here: https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=48203146  ></body> </Action>
<Action id="22607" issue="15419" author="wyanglau" type="comment" created="2017-04-17 21:23:40.0" updateauthor="wyanglau" updated="2017-04-17 21:23:40.0"> <body><! CDATA Hi,  ~denyeart  I have followed the wiki to test OpenSSL, by generating a self-signed cert in UNIX and it worked. Same thing should work on a Mac OS. I will test it later.   Besides, I assume which CA should be used needs a decision. When the couchDB is installed remotely, a new certificate for a specific db makes sense to some extend. However, since the communication between couchDB and peers seems to be internal, the existing certificates could be reused. Do you want me to try this out?   ></body> </Action>
<Action id="23843" issue="15419" author="denyeart" type="comment" created="2017-05-13 15:54:41.0" updateauthor="denyeart" updated="2017-05-13 15:54:41.0"> <body><! CDATA  ~mastersingh24   ~elli-androulaki  What are your thoughts on which certificates should be used for the peer's CouchDB server for TLS purpose? Should there be new certificates generated or re-use some existing certificates? Does the answer change depending on whether CouchDB is local to peer (the default) or remote?  Gari, I know you had mentioned you had started working on CouchDB TLS.  Which pieces specifically can you share with  ~wyanglau  (assuming he could still work on this).  ></body> </Action>
<Action id="23866" issue="15419" author="wyanglau" type="comment" created="2017-05-15 14:40:31.0" updateauthor="wyanglau" updated="2017-05-15 14:40:31.0"> <body><! CDATA Hi  ~denyeart ,  Yes I could still work on this. Please share the thoughts with me that I could implement; or in any case  ~mastersingh24  or  ~elli-androulaki  has finished this one, I could transfer this ticket back to you.  Thanks.   ></body> </Action>
<Action id="23873" issue="15419" author="elli-androulaki" type="comment" created="2017-05-15 17:25:28.0" updateauthor="elli-androulaki" updated="2017-05-15 17:25:48.0"> <body><! CDATA Hi  ~denyeart ,  Ok, so it seems to me that the connection between peer and couchdb server needs to be mutually authenticated..  That means peer needs to authenticate the couchdb server to ensure it is asking/sending data to the right entity, and the server needs to authenticate the peer to ensure that the data are given access to properly authorised entities (i.e., the peer).  Now the server could authenticate to the peer using a tls cert that is generated for this purpose by peer's infrastructure (e.g., at setup time). After the tls connection is established, the peer could authenticate to the server using the password that was agreed between the two upfront (again at setup time).  Important thing is that the peer already knows the certificate of the couchdb server, i.e., stores it persistently in its local storage, to avoid any man-in-the-middle attacks.  ></body> </Action>
<Action id="24078" issue="15419" author="smithbk" type="comment" created="2017-05-19 14:48:29.0" updateauthor="smithbk" updated="2017-05-19 14:48:29.0"> <body><! CDATA fabric-ca supports a mutual client TLS config as seen at  https://github.com/hyperledger/fabric-ca/blob/master/lib/tls/tls.go#L46   We could push some of this code to fabric and share the same impl and config model.  Thoughts?  ></body> </Action>
<Action id="24082" issue="15419" author="wyanglau" type="comment" body="I didn&apos;t find any mutual authentication features in terms of couchDB. Could anyone point me to the direction for how to do this? Thanks. " created="2017-05-19 15:07:52.0" updateauthor="wyanglau" updated="2017-05-19 15:08:07.0"/>
<Action id="24083" issue="15419" author="mastersingh24" type="comment" created="2017-05-19 15:08:57.0" updateauthor="mastersingh24" updated="2017-05-19 15:08:57.0"> <body><! CDATA As far as I know, CouchDB does not support mutual TLS - but I think we are fine without given the Couch does support username/password.  I'd say that there should be a "fresh" certificate for CouchDB and agree with Elli that the peer should explicitly trust the CouchDB certificate rather than just trusting the issuer  ></body> </Action>
<Action id="24090" issue="15419" author="mastersingh24" type="comment" created="2017-05-19 15:45:40.0" updateauthor="mastersingh24" updated="2017-05-19 15:45:40.0"> <body><! CDATA We have config for TLS within fabric already - we can copy the same properties and use them for communication with CouchDB.   ~wyanglau  - CouchDB does not support mutual TLS  ></body> </Action>
<Action id="24091" issue="15419" author="wyanglau" type="comment" created="2017-05-19 16:24:50.0" updateauthor="wyanglau" updated="2017-05-19 16:24:50.0"> <body><! CDATA  ~mastersingh24  Thanks for clarifying. When you said `we should use a fresh certificate for couchDB`, do you mean a self-signed certificate rather than one signed by the CA of the peer?        ></body> </Action>
<Action id="28759" issue="15419" author="leokotschenreuther" type="comment" body="Is there any progress or at least a timeline for this?" created="2017-07-21 00:55:18.0" updateauthor="leokotschenreuther" updated="2017-07-21 00:55:18.0"/>
<Action id="28794" issue="15419" author="wyanglau" type="comment" created="2017-07-21 13:54:05.0" updateauthor="wyanglau" updated="2017-07-21 13:54:05.0"> <body><! CDATA  ~LeoKotschenreuther   https://gerrit.hyperledger.org/r/#/c/10983/1 Hi,  the code was finished. I was waiting for the `-2` tag to be removed, or I would just submit another review request soon.   ></body> </Action>
<Action id="29810" issue="15419" author="wyanglau" type="comment" created="2017-08-14 15:10:22.0" updateauthor="wyanglau" updated="2017-08-14 15:10:22.0"> <body><! CDATA I've post a new review here.  https://gerrit.hyperledger.org/r/#/c/12397/ The code has been merged with latest master.   ></body> </Action>
<Action id="30075" issue="15419" author="timpii" type="comment" body="If the code has been done and merged into master, why is the label Release-Planning-1.2 set on this Jira item?" created="2017-08-22 15:50:47.0" updateauthor="timpii" updated="2017-08-22 15:50:47.0"/>
<Action id="30076" issue="15419" author="wyanglau" type="comment" body="Hi  ~timpii  Not merged into master yet; need someone to review the changes first. Is anyone available to review the code? Thanks. " created="2017-08-22 15:54:16.0" updateauthor="wyanglau" updated="2017-08-22 15:54:16.0"/>
<Action id="31682" issue="15419" author="wyanglau" type="comment" created="2017-10-06 16:51:23.0" updateauthor="wyanglau" updated="2017-10-06 16:51:23.0"> <body><! CDATA  ~rhegde  Hi, I submitted a new review request which merged with all other conflict, can you take a look or anyone available could review the code? Thanks.  https://gerrit.hyperledger.org/r/#/c/14175/  ></body> </Action>
<Action id="36080" issue="15419" author="yacovm" type="comment" created="2017-12-10 15:38:52.0" updateauthor="yacovm" updated="2017-12-10 15:39:04.0"> <body><! CDATA  ~mastersingh24    ~denyeart  what is the status of this? Is this going to v1.1 ?     With regarding to mutual TLS - it seems couchDB has:  cacert_file|http://docs.couchdb.org/en/2.0.0/config/http.html#ssl/cacert_file  config parameter. {quote}The path to a file containing PEM encoded CA certificates. The CA certificates are used to build the server certificate chain, and for client authentication. Also the CAs are used in the list of acceptable client CAs passed to the client when a certificate is requested. May be omitted if there is no need to verify the client and if there are not any intermediate CAs for the server certificate: {quote} Doesn't this sound like it has mutual TLS?  ></body> </Action>
<Action id="47440" issue="15419" author="ashutosh_kumar" type="comment" body="After talking to  ~manish-sethi  , I came to know that Couch DB and Peer are colocated on the same host. Why do you need TLS support in that case ? Just trying to understand." created="2018-07-17 20:34:36.0" updateauthor="ashutosh_kumar" updated="2018-07-17 20:34:36.0"/>
<Action id="47475" issue="15419" author="rhegde" type="comment" body="Hello  ~ashutosh_kumar , Fabric does not restrict or mandates couch database instance to be running on same VM where its&apos; peer is deployed." created="2018-07-18 13:12:25.0" updateauthor="rhegde" updated="2018-07-18 13:12:25.0"/>
<Action id="47494" issue="15419" author="denyeart" type="comment" created="2018-07-18 15:01:26.0" updateauthor="denyeart" updated="2018-07-18 15:01:26.0"> <body><! CDATA  ~ashutosh_kumar   ~rhegde  I agree this would be good to do - just hasn't been prioritized because in the typical deployment scenario couchdb sits on peer host and the couchdb port is not exposed to the wider network.   ~mastersingh24  Could you provide your thoughts on the last question from  ~wyanglau  - "When you said `we should use a fresh certificate for couchDB`, do you mean a self-signed certificate rather than one signed by the CA of the peer?"  I think getting clarity on the typical certificate flow was the last piece holding this out.  After that is resolved we can re-raise the CR from  ~wyanglau  (assuming he's still available to help).  ></body> </Action>
<Action id="47495" issue="15419" author="denyeart" type="comment" body=" ~wyanglau  are you still available to re-raise the CR?   ~ashutosh_kumar  has offered to help with the certificate config flow, so that we can finally get this progressing." created="2018-07-18 15:31:47.0" updateauthor="denyeart" updated="2018-07-18 15:31:47.0"/>
<Action id="47496" issue="15419" author="ashutosh_kumar" type="comment" created="2018-07-18 15:40:22.0" updateauthor="ashutosh_kumar" updated="2018-07-18 15:40:22.0"> <body><! CDATA Couple of clarifications : # There is no need for mutual TLS. User of couch db should have White listing in place so that couch can accept connection only from Peers it trust. # The Certificate used should be Self Signed Certificate as TLS is going to secure internal communication.  ></body> </Action>
<Action id="67612" issue="15419" author="sykesm" type="comment" body="Stale" created="2020-01-22 22:40:19.0" updateauthor="sykesm" updated="2020-01-22 22:40:19.0"/>
