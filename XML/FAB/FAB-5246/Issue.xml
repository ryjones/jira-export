<Issue id="19158" key="FAB-5246" number="5246" project="10002" reporter="yacovm" creator="yacovm" type="10004" summary="Gossip rejects join channel unless used with leader election" priority="3" status="10000" created="2017-07-11 14:18:45.0" updated="2020-11-23 14:45:26.0" votes="0" watches="6" workflowId="42920"> <description><! CDATA    Background: # To Join a channel you need to give a peer a genesis block, even if the org has been added after channel creation (in a later block than the genesis block) # Gossip performs sanity checks on the configuration blocks and if the peer's organization isn't within the members of the channel (which is the case for the genesis block) - it rejects the join channel. # If the peer is used with leader election activated, it will consider itself a leader in that channel (since it doesn't see other peers) and would connect to the ordering service and fetch blocks for that channel. # When the peer got the latest configuration block that adds its organization to the channel, gossip is activated for the channel. # If the peer isn't configured to use leader election and is configured not to connect to the ordering service (but instead - to receive blocks from fellow peers) - it would not receive blocks from peers of its own org because it would consider them as not in the channel.     To reproduce:  Run  https://github.com/sandp125/FabricNodeAPI_V1  , it uses leader election by default. in that test there are 2 orgs - org1, org2 and later org3 is added to the channel.  It can be seen in the logs of the peers from org3 the error:  "Tried joining channel <channel name>, "but our org (orgName), isn't among the orgs of the channel:", orgListFromConfig(config), ", aborting.")"   from the peer logs, the peers declare themselves leaders, connect to the ordering service, and then get the blocks up to the last one. After a while (5 seconds) it can be seen in peer1.org3: {quote}"Renounced leadership, stopping delivery service for channel mychannel1"  deliveryClient  StopDeliverForChannel -> DEBU 3fe This peer will stop pass blocks from orderer service to other peers {quote} So it seems like it sensed peer0.org3 after the last config update.  When leader election isn't used - and peer0.org3 is configured to be a leader statically, and peer1.org3 is configured statically to not be a leader, **peer1.org3 doesn't get any blocks.**  ></description> </Issue>
