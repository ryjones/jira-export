<Issue id="15597" key="FAB-3017" number="3017" project="10002" reporter="denyeart" assignee="JIRAUSER21337" creator="denyeart" type="10101" summary="Finalize ledger backup/restore guidance and test" priority="2" status="3" created="2017-04-06 13:43:56.0" updated="2021-06-24 23:44:42.0" votes="3" watches="14" workflowId="54373"> <description><! CDATA There is no need to backup/recover a peer's ledger - peers can be brought up with no ledger, re-join channels, and automatically receive ledger blocks via state transfer. That being said, some organizations will want to be more self-reliant or will want to expedite peer introduction or recovery, and this can be achieved by backing up and restoring the ledger.  The procedure for taking the ledger backup is provided inÂ https://docs.google.com/document/d/1dEhUpMcqOYfOngDvSlyXL6NIBuTKmhP5s0fr_--U_OA/edit  This item will - finalize peer backup/restore guidance - add some operations documentation - make any tweaks that are needed to simplify the peer introduction/restore/recovery procedures - review automated test scenarios and extend if any gaps are found - highlight any system tests that are required  Sub-tasks can be added for any individual changes to fabric.  Questions: - Should /chains and /ledgerProvider always be backed up as a unit? If so, these should be located in a common directory (apart from statedb/historydb) to simplify the procedure. - Or could /ledgerProvider be backed up and recovered individually? Would this be sufficient to automatically 're-join' channels and start getting blocks via state tranfer? - State db and history db and block index can optionally be backed up as well. If they are missing or not at the expected height (savepoint), peer will catch them up automatically from block storage before becoming available for transaction simulation. Question - what happens if state db is recovered from a higher height than block storage?  ></description> </Issue>
