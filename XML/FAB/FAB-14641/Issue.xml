<Issue id="38454" key="FAB-14641" number="14641" project="10002" reporter="chrisf" creator="chrisf" type="10004" summary="Chaincode Attribute-based Access Control failing with OpenSSL user certificate" priority="3" resolution="10001" status="6" created="2019-03-14 12:49:13.0" updated="2019-03-20 06:51:30.0" resolutiondate="2019-03-20 06:51:30.0" votes="0" watches="1" workflowId="50097"> <description><! CDATA We have a chaincode that uses the cid package (  https://github.com/hyperledger/fabric/tree/release-1.4/core/chaincode/lib/cid  ) to get the custom attributes from the caller certificate.  When using certs created with OpenSSL we get the following error:  {code:java} failed to get attributes from the transaction invoker's certificate: Failed to unmarshal attributes from certificate: invalid character '\\f' looking for beginning of value {code}  The error is thrown in the attrmgr component   https://github.com/hyperledger/fabric/blob/eca1b14b7e3453a5d32296af79cc7bad10c7673b/core/chaincode/shim/ext/attrmgr/attrmgr.go#L129     When comparing openssl output of a fabric ca and an openssl cert I can see the following difference:     ||Fabric CA certificate||OpenSSL certificate|| |{code:java} X509v3 extensions:  ..     1.2.3.4.5.6.7.8.1:        {"attrs":{}} {code}|{code:java} X509v3 extensions:   ..    1.2.3.4.5.6.7.8.1:        .d{"attrs":{}} {code}|   The custom extension of the openSSL cert seems to be prefixed with some characters which is causing the json.Unmarshal to fail. The custom attributes are generated like shown in the OpenSSL docs for Arbitrary Extensions  https://www.openssl.org/docs/man1.0.2/man5/x509v3_config.html#ARBITRARY-EXTENSIONS       Quick fix:  If I change the attrmgr code to remove the first to bytes of the value input byte array the unmarshal works as expected. However, the fabric ca certs will not work with this fix anymore... {code:java} err := json.Unmarshal(buf 2: , attrs){code}    Please also add support for certificates created with OpenSSL.        ></description> </Issue>
