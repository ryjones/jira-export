<Issue id="27030" key="FAB-7871" number="7871" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10004" summary="Fix delivery client envelope header type" priority="3" resolution="10000" status="6" created="2018-01-23 20:47:17.0" updated="2018-07-20 14:15:31.0" resolutiondate="2018-01-25 12:23:23.0" votes="0" watches="1" workflowId="41035"> <description><! CDATA blocksRequester in requester.go takes care to send request to the ordering service in order to fetch blocks, where following function is in use:  {code} func (b *blocksRequester) seekLatestFromCommitter(height uint64) error { 	seekInfo := &orderer.SeekInfo{ 		Start:    &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: height}}}, 		Stop:     &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: math.MaxUint64}}}, 		Behavior: orderer.SeekInfo_BLOCK_UNTIL_READY, 	}  	//TODO- epoch and msgVersion may need to be obtained for nowfollowing usage in orderer/configupdate/configupdate.go 	msgVersion := int32(0) 	epoch := uint64(0) 	tlsCertHash := b.getTLSCertHash() 	env, err := utils.CreateSignedEnvelopeWithTLSBinding(common.HeaderType_CONFIG_UPDATE, b.chainID, localmsp.NewSigner(), seekInfo, msgVersion, epoch, tlsCertHash) 	if err != nil { 		return err 	} 	return b.client.Send(env) } {code}  The header type of the envelope is set to {{common.HeaderType_CONFIG_UPDATE}}, while correct value should be {{HeaderType_DELIVER_SEEK_INFO}} instead, e.g.  {code} func (b *blocksRequester) seekLatestFromCommitter(height uint64) error { 	seekInfo := &orderer.SeekInfo{ 		Start:    &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: height}}}, 		Stop:     &orderer.SeekPosition{Type: &orderer.SeekPosition_Specified{Specified: &orderer.SeekSpecified{Number: math.MaxUint64}}}, 		Behavior: orderer.SeekInfo_BLOCK_UNTIL_READY, 	}  	//TODO- epoch and msgVersion may need to be obtained for nowfollowing usage in orderer/configupdate/configupdate.go 	msgVersion := int32(0) 	epoch := uint64(0) 	tlsCertHash := b.getTLSCertHash() 	env, err := utils.CreateSignedEnvelopeWithTLSBinding(HeaderType_DELIVER_SEEK_INFO, b.chainID, localmsp.NewSigner(), seekInfo, msgVersion, epoch, tlsCertHash) 	if err != nil { 		return err 	} 	return b.client.Send(env) } {code}  ></description> </Issue>
