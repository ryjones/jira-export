<Action id="46789" issue="31436" author="mastersingh24" type="comment" body=" ~pankajcheema   - not quite sure what you are asking for here?  " created="2018-06-30 04:38:09.0" updateauthor="mastersingh24" updated="2018-06-30 04:38:09.0"/>
<Action id="46797" issue="31436" author="pankajcheema" type="comment" body="Gari Singh - Actually I am trying to use invoke command. But invoke command takes 5-6 seconds everytime. If I restart the system, clear everything,it works fine then. This issue occurs randomly. I can not clear everything on a live system. I am trying to figure out what is wrong. I have attached the logs. Did you read that!? You can see a process is taking almost 5 seconds. " created="2018-07-01 04:18:16.0" updateauthor="pankajcheema" updated="2018-07-01 04:18:16.0"/>
<Action id="46820" issue="31436" author="jyellick" type="comment" body="The actual invocation is completing in a timely fashion.  Most likely, this is batch timeout related.  Can you please post orderer logs for the same time at debug?" created="2018-07-02 13:53:55.0" updateauthor="jyellick" updated="2018-07-02 13:53:55.0"/>
<Action id="46844" issue="31436" author="pankajcheema" type="comment" body="The batch timeout is 1s. It should not take 7 seconds." created="2018-07-03 04:39:34.0" updateauthor="pankajcheema" updated="2018-07-03 04:40:24.0"/>
<Action id="46876" issue="31436" author="jyellick" type="comment" created="2018-07-03 14:18:32.0" updateauthor="jyellick" updated="2018-07-03 14:18:32.0"> <body><! CDATA  ~pankajcheema  You've opened this issue as a bug, which would imply that you believe the system is not working like it should.  If that's the case, then perhaps the batch timeout is not being respected.  If you believe that the system is working as it should, and you are simply looking for help configuring your application, then a JIRA bug is the wrong venue.  Regardless, the log from the peer CLI, and a screenshot is insufficient data to determine the root cause of your problem.  To determine where in the system the transaction is spending the 7 seconds, please provide the orderer logs at debug (as previously requested).  Additionally, the peer logs at debug would also be helpful.  ></body> </Action>
<Action id="47067" issue="31436" author="pankajcheema" type="comment" body=" ~jyellick  You can find the peer logs @ https://pastebin.com/JxEh6pn1. This issue occurs when we set up the network on physical nodes. I didn&apos;t know that you require orderer logs for it. I will try to up the physical nodes as soon as possible and will post the orderer logs here." created="2018-07-08 15:00:54.0" updateauthor="pankajcheema" updated="2018-07-08 15:00:54.0"/>
<Action id="47079" issue="31436" author="pankajcheema" type="comment" created="2018-07-09 05:12:28.0" updateauthor="pankajcheema" updated="2018-07-09 05:12:28.0"> <body><! CDATA  ~jyellick  This does not happens when using docker. This happens only when you setup each node on a separate machine using peer, orderer binaries that can be found in /github.com/hyperledger/fabric/build/docker/bin and kafka, zookeepers from apache kafka.   I can see we have two bin dirs. One can be found in /github.com/hyperledger/fabric/build/docker/bin & other can be found in /github.com/hyperledger/fabric/build/bin.  We are using docker/bin.  And for the orderer logs, right now we are woking on docker but we will post the orderer logs as soon as we start working with physical nodes i.e network of 13 systems.    ></body> </Action>
<Action id="47703" issue="31436" author="pankajcheema" type="comment" body=" ~jyellick  Description updated. Logs attached" created="2018-07-24 10:38:14.0" updateauthor="pankajcheema" updated="2018-07-24 10:38:14.0"/>
<Action id="47723" issue="31436" author="jyellick" type="comment" created="2018-07-24 14:35:02.0" updateauthor="jyellick" updated="2018-07-24 14:35:02.0"> <body><! CDATA Based on the logs you provided:  {noformat} 2018-07-24 15:29:51.946 IST  couchdb  handleRequest -> DEBU 2c2a HTTP Request: GET /assetchain_lscc/assetchaincode?attachments=true HTTP/1.1 | Host: couchdb:5984 | User-Agent: Go-http-client/1.1 | Accept: multipart/related | Authorization: Basic YWRtaW46YWRtaW4= | Accept-Encoding: gzip |  |  2018-07-24 15:29:56.955 IST  couchdb  handleRequest -> DEBU 2c2b Exiting handleRequest() {noformat}  The bulk of the time for your request (5 seconds worth) is being spent in this couchdb query.  This query is to lookup the chaincode definition for your chaincode as defined in the lifecycle table.  Note, this same request is done again later:  {noformat} 2018-07-24 15:30:04.213 IST  couchdb  handleRequest -> DEBU 2d2b HTTP Request: POST /assetchain_lscc/_all_docs?include_docs=true HTTP/1.1 | Host: couchdb:5984 | User-Agent: Go-http-client/1.1 | Content-Length: 27 | Accept: application/json | Authorization: Basic YWRtaW46YWRtaW4= | Content-Type: application/json | Accept-Encoding: gzip |  |  2018-07-24 15:30:04.215 IST  couchdb  handleRequest -> DEBU 2d2c Exiting handleRequest() {noformat}  but this time with much less time spent.  Based on this, it seems to me like the source of your slowness has something to do with your couchdb configuration.  Because the first request is very slow, but subsequent requests are fast, perhaps this is related to the process being paged out, some IO storage which must spin up, or similar.  You might try directly querying couchdb to perform your own profiling of the process without Fabric involved.  ></body> </Action>
<Action id="47768" issue="31436" author="pankajcheema" type="comment" created="2018-07-25 06:33:44.0" updateauthor="pankajcheema" updated="2018-07-25 06:33:44.0"> <body><! CDATA  ~jyellick  as per our conversation, I have changed the couchdb system. The new configuration is i5 Processor, 8GB ram Ubuntu 64bit 16.04 LTS. But still same delay. Couchdb is slow with fabric why? Why couchdb is not working properly with Hyperledger Fabric.   New Logs: new peer logs https://hastebin.com/ezihededuq.md new orderer logs: https://hastebin.com/enebuxuval.coffeescript  ></body> </Action>
<Action id="47828" issue="31436" author="jyellick" type="comment" body="Discussed offline, but I do not believe this is a Fabric issue.  The HTTP request is logged in the peer, and the response is quite slow.  I suggest debugging with curl from the peer machine to the couchdb machine." created="2018-07-25 19:46:44.0" updateauthor="jyellick" updated="2018-07-25 19:46:44.0"/>
<Action id="49140" issue="31436" author="denyeart" type="comment" created="2018-08-21 11:48:39.0" updateauthor="denyeart" updated="2018-08-21 11:48:39.0"> <body><! CDATA The slow query is a simple keyed lookup in couchdb.  There is nothing Fabric specific about a slow couchdb keyed lookup - the same problem would happen when using any client against this environment. I suggest to troubleshoot the query using a curl client instead of Fabric client, and open an issue in CouchDB jira if you believe the problem is related to CouchDB rather than your environment.  Since there is nothing Fabric can do about a slow CouchDB query, I will close the Bug from Fabric jira perspective.  ></body> </Action>
