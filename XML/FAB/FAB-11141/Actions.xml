<Action id="47293" issue="31848" author="yacovm" type="comment" body="I believe this is by design....  ~denyeart  ?" created="2018-07-13 07:15:25.0" updateauthor="yacovm" updated="2018-07-13 07:15:25.0"/>
<Action id="47340" issue="31848" author="mastersingh24" type="comment" body=" ~yacovm  is correct .... there is no tie between collections and endorsement policy.  Endorsement policy is still scoped to the combination of channel / chaincode ... not to collections.  See FAB-8812 for finer-grained endorsement policies.   In v1.2, you can of course create pluggable endorsement and validation logic but FAB-8812 will provide some nice capabilities out of the box as well." created="2018-07-15 16:45:28.0" updateauthor="mastersingh24" updated="2018-07-15 16:45:28.0"/>
<Action id="47362" issue="31848" author="yuki-kon" type="comment" created="2018-07-16 14:40:23.0" updateauthor="yuki-kon" updated="2018-07-16 14:40:23.0"> <body><! CDATA  ~mastersingh24  Thank you for your comments. I will check the doc about finer-grained endorsement policy. My initial question was simple. When unauthorized organizations call stub.GetPrivateData, ChaincodeShim returns an error `GET_STATE failed`. I think it may be user friendly if ChaincodeShim returns an error (e.g. collection policy validation error) when unauthorized organizations call stub.PutPrivateData.  ></body> </Action>
<Action id="48776" issue="31848" author="zjubfd" type="comment" body="@ ~mastersingh24   Can you give more detail about how  FAB-8812 can resolve the problem. In my option  FAB-8812 just provide a finer grained endorsement policies." created="2018-08-13 06:07:35.0" updateauthor="zjubfd" updated="2018-08-13 06:07:35.0"/>
<Action id="52517" issue="31848" author="sheetal-hlf" type="comment" created="2018-10-22 10:45:25.0" updateauthor="sheetal-hlf" updated="2018-10-22 10:45:25.0"> <body><! CDATA I tried the same process and expected error while unauthorized org writes to private data.  Though the unauthorized peers do not persist the private data, I too agree that this activity should not be allowed so that unauthorized peers don't mess up the private data.   E.g. editing the price details stored in private data; even though the unauthorized peers do not have the data they are permitted to change the value.      ~denyeart  could you please share your thoughts?  ></body> </Action>
<Action id="52529" issue="31848" author="denyeart" type="comment" created="2018-10-22 17:25:46.0" updateauthor="denyeart" updated="2018-11-15 17:43:05.0"> <body><! CDATA For Updates, you can protect from non-member writes by first doing a read in the chaincode, which would require the peer to have the private data. This is anyways typical for updates in order to protect against write collisions (since Fabric does readset version validation at commit time).  For Creates, the initial design allowed non-members to endorse write-only transactions without persisting the private data, as in the initial use cases there were scenarios where peers would be allowed to see the private but not provide it to others later (not persist it).  I agree it would make sense to have an option to completely restrict non-member peers from endorsing any transaction.  Let's use this work item to add another config option to the collection config that would enforce the check at validation time (the same check could be made at chaincode execution time, to avoid submitting invalid transactions in the first place).  I've updated the title accordingly.  ></body> </Action>
<Action id="52563" issue="31848" author="sheetal-hlf" type="comment" created="2018-10-24 04:02:36.0" updateauthor="sheetal-hlf" updated="2018-10-24 04:02:36.0"> <body><! CDATA Could you please share some of the scenarios where orgs would be involved in write-only transactions and not in update?  As the initial design allowed non-members to endorse write-only transactions without persisting the private data, there would be some thought behind it.  ></body> </Action>
<Action id="52581" issue="31848" author="denyeart" type="comment" created="2018-10-24 10:22:29.0" updateauthor="denyeart" updated="2018-10-24 10:22:29.0"> <body><! CDATA  ~sheetal-hlf  Two examples where an org/peer may be authorized to create private data but not update it later:  1) For personal information, an org/peer may be authorized to do a transaction that creates private data but not persist/retain it.  2) A org/peer like a central authority may be able to 'issue' (create) tokens but is not able see tokens/ownership after issuance.  ></body> </Action>
<Action id="52629" issue="31848" author="sheetal-hlf" type="comment" created="2018-10-25 11:10:38.0" updateauthor="sheetal-hlf" updated="2018-10-25 11:10:38.0"> <body><! CDATA Thank you for the response, David  if the peer is not able to verify the token it generated then why would the peer be allowed to generate it?  Also I am not able to relate this case with any real-life scenario i.e. we are allowing a non-authorized peer to endorse write-only transactions to private data.  Could you please elaborate or give me some pointers?  ></body> </Action>
<Action id="52662" issue="31848" author="denyeart" type="comment" body=" ~sheetal-hlf  There are indeed real-life regulations that allow organizations to transact on private personal data but not retain the personal data long term, in fact it was a real-life requirement for one of the private data project sponsors. In other scenarios it is up to the client to determine who should transact on the private data, and it is the client responsibility not to divulge the private data to any unauthorized peers. Fabric itself will not share the private data with non-collection members. I completely agree that depending on the scenario you may or may not want endorsements from organizations that have seen the private data from a client, but are non-members of the collection, to count towards the endorsement policy, and as such the intent is to add such a config option. Contribution of such code would in fact be very welcomed." created="2018-10-25 22:00:41.0" updateauthor="denyeart" updated="2018-10-25 22:00:41.0"/>
<Action id="55764" issue="31848" author="denyeart" type="comment" body="Current thinking is that this will be implemented as an endorsement policy at the collection level in FAB-15066." created="2019-01-17 15:42:07.0" updateauthor="denyeart" updated="2019-11-06 14:45:28.0"/>
<Action id="65917" issue="31848" author="denyeart" type="comment" created="2019-12-02 17:55:19.0" updateauthor="denyeart" updated="2019-12-02 17:55:19.0"> <body><! CDATA  ~sheetal-hlf  To close the loop on this one... collection level endorsement policies have been implemented for Fabric v2.0. Also, see the patterns that have been documented regarding sharing private data:  https://hyperledger-fabric.readthedocs.io/en/latest/private-data/private-data.html#sharing-private-data  ></body> </Action>
