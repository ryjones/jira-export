<Action id="23827" issue="16132" author="denyeart" type="comment" body=" ~elli-androulaki  In peer core.yaml there is a username/password for CouchDB state database.  Is there a precedent/recommendation for encrypting passwords in our config files?" created="2017-05-12 19:40:21.0" updateauthor="denyeart" updated="2017-05-12 19:40:21.0"/>
<Action id="23960" issue="16132" author="smithbk" type="comment" body="Does the password have to be in config.yaml?  Can it be passed via environment variable at start time?  If so, would this be sufficient?  It would then allow someone to start with the env variable on the command line." created="2017-05-17 19:05:41.0" updateauthor="smithbk" updated="2017-05-17 19:05:41.0"/>
<Action id="23962" issue="16132" author="denyeart" type="comment" body=" ~smithbk  The password can indeed be passed via environment variable, and therefore wouldn&apos;t need to be exposed in config.yaml.   ~timpii  would that meet the need, at least for initial version?" created="2017-05-17 19:45:12.0" updateauthor="denyeart" updated="2017-05-17 19:45:12.0"/>
<Action id="23963" issue="16132" author="mastersingh24" type="comment" created="2017-05-17 19:55:26.0" updateauthor="mastersingh24" updated="2017-05-17 19:55:26.0"> <body><! CDATA I'm also looking at using Docker (and Kubernetes) secrets as an option as well.  That way we can avoid having to make any changes (for now) in the core fabric code.     ></body> </Action>
<Action id="24021" issue="16132" author="timpii" type="comment" created="2017-05-18 13:56:21.0" updateauthor="timpii" updated="2017-05-18 13:56:21.0"> <body><! CDATA I talked with our security team. The passing in as an environmental variable could only be a short term solution. The issue is people script things, so whether the password is in a script file or in a yaml file is kind of immaterial. If possible the Docker or Kubernetes secrets would be a better option.  If a commitment can be made that by the V1.1 release (2017), the password will be encrypted, we can live with the environment variable for the short term.  ></body> </Action>
<Action id="25125" issue="16132" author="mne" type="comment" created="2017-06-02 15:14:24.0" updateauthor="mne" updated="2017-06-02 15:14:24.0"> <body><! CDATA So what's actually the threat model here? As I understand it, in a deployment the peer would be running in one docker container and the couchdb in another one. Correct? So what capabilities does the attacker have? If it's just an "ordinary" user on the host, regular filesystem ACL can prevent it from reading the pw file on the disk. If it's an admin (root user), it's anyway game over because he can access the data in the couchdb container directly.  ></body> </Action>
<Action id="25227" issue="16132" author="timpii" type="comment" created="2017-06-03 11:11:08.0" updateauthor="timpii" updated="2017-06-03 11:11:08.0"> <body><! CDATA In regards to Matthias's questions on the security threat model I relayed the questions to our security guy Glen Cater. His response is that he somewhat agrees with Matthias's comments - but the requirement is about defense in depth, what we consider best practice, and our member perception. Quoting his response:  "I agree if the file ACLs are set correctly it will prevent some local users from accessing the file, and I agree that if someone has root the game is over. But for regular users if the ACLs are a loose it’s an issue, who will check them? Some regular user accounts will have access to the file I assume so that CouchDB can read it. If it’s encrypted, even root users will not easily gain access to the password (but for root users I’m not sure it matters given their level of access to the CouchDB container/files)."  ></body> </Action>
<Action id="25548" issue="16132" author="mne" type="comment" created="2017-06-06 16:32:17.0" updateauthor="mne" updated="2017-06-06 16:32:17.0"> <body><! CDATA * An admin can just access the data directly and doesn't need to bother with reading a password. * An ordinary user must not see the password to begin with. This can be simply done using OS-level access control. * If you want to encrypt the password on top of that, you need a secret to encrypt it with. Where do you want to store that secret?  ></body> </Action>
<Action id="28679" issue="16132" author="timpii" type="comment" body="Gari&apos;s recommendation of using Docker or Kubernetes secrets is a good solution." created="2017-07-19 15:46:56.0" updateauthor="timpii" updated="2017-07-19 15:46:56.0"/>
<Action id="29168" issue="16132" author="denyeart" type="comment" body=" ~timpii  I see you changed the priority.  Assuming Docker secrets are used, do you need any changes on fabric side?" created="2017-07-29 14:35:53.0" updateauthor="denyeart" updated="2017-07-29 14:35:53.0"/>
<Action id="29200" issue="16132" author="timpii" type="comment" body="Assuming Docker Secrets is used, then the only issue would be what property/environment attributes would be accessible within the Fabric from the Docker Secrets. Documentation on how to use and what variables (key/values) are available for use would be necessary. I am assuming (without any basis) that the docker secrets file could replace config properties files and docker environment variables, but do not understand any limitations on the Fabric being able to digest the contents. " created="2017-07-29 20:40:06.0" updateauthor="timpii" updated="2017-07-29 20:40:06.0"/>
<Action id="30156" issue="16132" author="denyeart" type="comment" body=" ~mastersingh24  Were you intending to take a deeper look at Docker Secrets?  We could re-assign, perhaps  ~AdnanChoudhury  would be interested..." created="2017-08-24 13:57:24.0" updateauthor="denyeart" updated="2017-08-24 13:57:24.0"/>
<Action id="30435" issue="16132" author="elli-androulaki" type="comment" body="Hi, would you think that given the discussion above this is still of highest priority / needs to be addressed for v1.1?" created="2017-09-01 07:26:25.0" updateauthor="elli-androulaki" updated="2017-09-01 07:26:25.0"/>
<Action id="32947" issue="16132" author="denyeart" type="comment" body=" ~elli-androulaki  Based on assessment from Fabric security experts, I agree this can be lowered from highest." created="2017-10-20 19:11:31.0" updateauthor="denyeart" updated="2017-10-20 19:11:31.0"/>
<Action id="67020" issue="16132" author="sykesm" type="comment" body="Stale" created="2020-01-22 19:07:55.0" updateauthor="sykesm" updated="2020-01-22 19:07:55.0"/>
