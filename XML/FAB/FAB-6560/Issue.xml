<Issue id="21746" key="FAB-6560" number="6560" project="10002" reporter="ales" creator="ales" type="10001" summary="Proper enforcement of txid uniqueness on the validator" priority="3" resolution="10000" status="6" created="2017-10-10 08:15:24.0" updated="2018-07-20 18:49:50.0" resolutiondate="2017-11-29 13:03:22.0" votes="0" watches="2" workflowId="40241"> <description><! CDATA Fabric promises to enforce txid uniqueness, but the control put in place to honor that is broken:    {noformat} 	for tIdx, d := range block.Data.Data { 		if d != nil { 			if env, err := utils.GetEnvelopeFromBlock(d); err != nil { 				logger.Warningf("Error getting tx from block(%s)", err) 				txsfltr.SetFlag(tIdx, peer.TxValidationCode_INVALID_OTHER_REASON) 			} else if env != nil { .... 					// Check duplicate transactions 					txID := chdr.TxId 					if _, err := v.support.Ledger().GetTransactionByID(txID); err == nil { 						logger.Error("Duplicate transaction found, ", txID, ", skipping") 						txsfltr.SetFlag(tIdx, peer.TxValidationCode_DUPLICATE_TXID) 						continue 					} .... {noformat}     The validator code only checks for duplicate txids with respect to those already committed in the ledger and not those that are in the same block, so a block may contain >1 tx with the same id, and they would all be accepted as valid.     The validator code should be changed to also take into consideration txid duplicates within the tx.  ></description> </Issue>
