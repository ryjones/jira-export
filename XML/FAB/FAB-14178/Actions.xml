<Action id="57035" issue="37670" author="denyeart" type="comment" created="2019-02-14 13:09:33.0" updateauthor="denyeart" updated="2019-02-14 13:09:33.0"> <body><! CDATA Let's say key1 got updated in block100 in transaction t1.  At about the same time another transaction t2 requests key1 in chaincode.  Let's say peer1 and peer2 are at block100 and peer3 is at block99 (still processing block100). When t2 gets executed in chaincode, peer3 will return a different read-write set.  Your client will need to be intelligent enough to retry the invoke in order to resolve this issue.  ></body> </Action>
<Action id="57043" issue="37670" author="denyeart" type="comment" body="Note that MVCC errors are a little different.Â  In the example from prior comment, if all 3 peers endorsed while at block99, and t2 gets included in block101, the endorsements would match but you would get a MVCC invalidation upon commit of block101 due to the conflict with the transaction in block100." created="2019-02-14 14:46:40.0" updateauthor="denyeart" updated="2019-02-14 14:46:40.0"/>
