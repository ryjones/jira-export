<Issue id="12634" key="FAB-333" number="333" project="10002" reporter="scottz" creator="scottz" type="10004" summary="transactions queued while only one peer running are lost when restarting all three other peers" priority="3" resolution="10000" status="6" created="2016-09-09 19:01:43.0" updated="2018-07-20 14:10:09.0" resolutiondate="2017-04-07 20:06:20.0" votes="0" watches="2" workflowId="36191"> <description><! CDATA Problem Summary  The network loses any Invoke requests sent to the single running peer node, after stopping the other 3 peers of a 4 node network. The problem is observed in both testcase variations whether the VP0 is the only running node, or when VP3 is the only running node.  The problem is observed ONLY when we restart the other 3 nodes ALL AT THE SAME TIME. In contrast, running a similar testcase, if we stop 3, send invokes, and restart only 2 (so there are exactly 3 peers running now), then the transactions are processed ok (as expected).  This issue is a port to Jira from GitHub hyperledger fabric issue #2308 https://github.com/hyperledger-archives/fabric/issues/2308  How To Reproduce  Set up a 4 peer network, pbft batch (batchsize 2) with security using docker containers in vagrant environment, running chaincode-example02. For reference, I can reproduce using my GO SDK testcase called CAT_305_S1S2S3_IQ_R1R2R3_IQ.go, attached.   # Start 4 peers running # invokes # query # stop 3 peers # invokes 50 to the only running peer # restart 3 peers, so all 4 are running again # invokes, queries, sleeps # confirm the 50 invokes are never processed by examining chainheight and query results from all 4 peers   ></description> </Issue>
