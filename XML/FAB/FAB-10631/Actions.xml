<Action id="46082" issue="31052" author="denyeart" type="comment" body=" ~jyellick  Could you assess?" created="2018-06-18 11:52:25.0" updateauthor="denyeart" updated="2018-06-18 11:52:25.0"/>
<Action id="46204" issue="31052" author="jyellick" type="comment" created="2018-06-19 14:41:11.0" updateauthor="jyellick" updated="2018-06-19 14:41:11.0"> <body><! CDATA The exact reason for the failure is logged by the orderer:   {noformat} Principal deserialization failure (the supplied identity is not valid: x509: certificate signed by unknown authority) for identity  {noformat}  Inspecting your certificate as logged by the orderer, I see the following:   {noformat} Certificate: Data: Version: 3 (0x2) Serial Number: ff:fd:2f:cf:f8:00:82:78:1b:37:a2:9c:4a:62:37:6b Signature Algorithm: ecdsa-with-SHA256 Issuer: C = US, ST = California, L = San Francisco, O = org1.example.com, CN = ca.org1.example.com Validity Not Before: Jun 13 19:47:58 2018 GMT Not After : Jun 10 19:47:58 2028 GMT Subject: C = US, ST = California, L = San Francisco, OU = client, CN = Admin@org1.example.com Subject Public Key Info: Public Key Algorithm: id-ecPublicKey Public-Key: (256 bit) pub: 04:08:aa:05:7f:11:9a:04:5b:bb:3e:0b:c2:d3:86: e6:33:9e:00:7c:5c:45:65:e5:47:b8:d6:ff:93:0c: 45:f2:22:78:82:d6:ea:ab:53:6a:67:e4:3d:2f:6f: 39:c5:b6:40:a0:eb:01:38:07:07:e7:4b:a7:3f:59: 8d:a5:e4:80:7c ASN1 OID: prime256v1 NIST CURVE: P-256 X509v3 extensions: X509v3 Key Usage: critical Digital Signature X509v3 Basic Constraints: critical CA:FALSE X509v3 Authority Key Identifier:  keyid:AC:9D:A9:C0:D9:A3:76:DB:E7:02:26:37:85:35:33:FB:2C:23:04:02:10:E0:0F:7B:7E:B3:6D:17:13:08:A8:04  Signature Algorithm: ecdsa-with-SHA256 30:45:02:21:00:e8:f3:0e:65:a3:cc:d2:0f:11:c9:e8:38:75: 3f:dc:7c:db:af:1c:d4:cb:5e:17:52:f8:01:88:d2:3c:10:05: b5:02:20:18:50:d7:7b:d7:19:91:cf:31:d0:2e:b4:f1:ff:30: 20:a7:2d:51:6c:83:77:2b:c8:f3:6d:f8:49:80:93:44:bc {noformat}  Notice particularly:  {noformat} CN = Admin@org1.example.com {noformat}  But from your screenshot, the user you are attempting to submit as is actually the Org2.Admin.  The orderer is looking up the CAs for Org2, and finding that Org1.admin's certificate is not validly issued by Org2, and rejecting it.  If later this succeeds, I can only assume that the certificate presented is different.  Is it possible somehow the bytes on the filesystem are changing in your failure scenario?  ></body> </Action>
<Action id="52228" issue="31052" author="denyeart" type="comment" body="No update for months, closing." created="2018-10-15 03:27:56.0" updateauthor="denyeart" updated="2018-10-15 03:27:56.0"/>
