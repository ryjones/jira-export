<Issue id="16039" key="FAB-3444" number="3444" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Channel pull mediator doesn&apos;t evict old blocks" priority="3" resolution="10000" status="6" created="2017-04-27 10:03:30.0" updated="2018-07-20 14:12:25.0" resolutiondate="2017-04-30 17:56:50.0" votes="0" watches="1" workflowId="38177"> <description><! CDATA In Gossip, the component that handles pulling messages of blocks is the  pullMediator | https://github.com/hyperledger/fabric/blob/master/gossip/gossip/pull/pullstore.go .  When it gets a set of block from a pull response, it invokes a  #consumer callback | https://github.com/hyperledger/fabric/blob/master/gossip/gossip/channel/channel.go#L285-L298  that in constructed in channel.go:  {code} 	blockConsumer := func(msg *proto.SignedGossipMessage) { 		dataMsg := msg.GetDataMsg() 		if dataMsg == nil || dataMsg.Payload == nil { 			gc.logger.Warning("Invalid DataMessage:", dataMsg) 			return 		} 		added := gc.blockMsgStore.Add(msg) 		// if we can't add the message to the msgStore, 		// no point in disseminating it to others... 		if !added { 			return 		} 		gc.DeMultiplex(msg) 	} 	adapter := pull.PullAdapter{ 		Sndr:        gc, 		MemSvc:      gc.memFilter, 		IdExtractor: seqNumFromMsg, 		MsgCons:     blockConsumer, 	} 	return pull.NewPullMediator(conf, adapter) {code} if the message wasn't added to the *blockMsgStore* - it means the message is too old, and shouldn't be added to the blocks puller. However, when this code is executed, the message has already been added to the internal map, even though it hasn't been added to the store  ></description> </Issue>
