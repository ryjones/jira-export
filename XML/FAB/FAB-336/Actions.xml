<Action id="18840" issue="12637" author="mastersingh24" type="comment" body="I am not sure what you are really asking for here?" created="2016-09-10 13:39:24.0" updateauthor="mastersingh24" updated="2016-09-10 13:39:24.0"/>
<Action id="18842" issue="12637" author="scottz" type="comment" created="2016-09-10 14:56:55.0" updateauthor="scottz" updated="2016-09-10 14:56:55.0"> <body><! CDATA Tuan and Luis had started investigations, but I am not sure how far they got.   My theory: when I docker pause two of the four peers, and send invokes to the "good" peers, it seems the good peers get stuck waiting for responses from the paused peers to reach consensus (which, as far as they know, are not stopped but rather still operational - basically we have simply cut off communications link between them) and they get stuck somehow and never respond to the chaincode client.  After further consideration, I am not sure if that is the exact situation. The only thing the client code is waiting for is a transaction ID acknowledgement of the invoke request. It is not waiting for an event or any other confirmation that the Tx has been committed to the ledger. Nevertheless, the lack of any response from the peer might indicate that it has somehow reached a state of confusion and is stuck; this must be a direct effect of docker pausing f+1 peers, since that is the key differentiator between this and other tests that do things like stop 2 peers instead of pause, or pause only one peer.  ></body> </Action>
<Action id="18888" issue="12637" author="corecode" type="comment" body="why is this consensus?" created="2016-09-13 14:29:11.0" updateauthor="corecode" updated="2016-09-13 14:29:11.0"/>
