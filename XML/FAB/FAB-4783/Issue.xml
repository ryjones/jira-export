<Issue id="18093" key="FAB-4783" number="4783" project="10002" reporter="scottz" creator="scottz" type="10003" summary="stopping the leader kafka-broker while sending transactions to the orderers" priority="3" resolution="10000" status="6" created="2017-06-15 19:47:39.0" updated="2018-07-20 14:13:28.0" resolutiondate="2018-07-09 18:23:36.0" votes="0" watches="1" workflowId="39135"> <description><! CDATA * *Test Name*: FAB_4783-ORD76-stopping a kafka broker * *Component*: Orderer * *Description*: send Txs stream in one thread, while another thread (or from command line 'docker stop') stops kafka-broker1 (to which Ord1 is connected).Â  traffic get rerouted to other KB, and does an in-flight Tx sent from Ord1 to kafka-broker1 get resent by orderer and eventually delivered (1) The test case is to restart the leader kafka broker while sending in the traffic using broadcast client and receiving through deliver client with OTE. (2) This will launch the network with the configuration mentioned below, starts the deliver clients first and each client will be connected to each orderer, starts broadcast clients for each orderer and starts sending the traffic to the orderers. Then a separate thread will be used to restart the leader kafka broker * *Artifact Locations*: fabric/test/tools/OTE * *Network Topology*: 3 orderers, 4 kafka brokers, 3 zookeepers, 2 orgs with 2 peers in each * *Client Driver*: OTE * *Input*: go test -run ORD76 -timeout 30m * *Output*: if the test ran successfully, should be able to see pass as the output  ></description> </Issue>
