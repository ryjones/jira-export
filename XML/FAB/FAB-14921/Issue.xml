<Issue id="38905" key="FAB-14921" number="14921" project="10002" reporter="scottz" assignee="suryalnvs" creator="scottz" type="10101" summary="Raft: validate cert expiry" priority="3" resolution="10000" status="6" created="2019-04-01 14:09:36.0" updated="2019-07-23 20:50:48.0" resolutiondate="2019-07-23 20:50:48.0" votes="0" watches="2" workflowId="51762"> <description><! CDATA Test raft network operation with expiring certs. h3. Setup:  Create a raft network with an orderersystemchannel and at least one application channel, similar to the setup described in FAB-13641. However, while doing so, generate certs for one or more of the orderers _(or peers?)_ which expire within a week.  _Here is the git diff for creating a certificate that expires tomorrow in cryptogen. Rebuild cryptogen, and use it to generate certs for the network test._ {quote}diff --git a/internal/cryptogen/ca/generator.go b/internal/cryptogen/ca/generator.go index 755c36925..4f8d67546 100644 — a/internal/cryptogen/ca/generator.go +++ b/internal/cryptogen/ca/generator.go @@ -172,8 +172,8 @@ func x509Template() x509.Certificate { serialNumberLimit := new(big.Int).Lsh(big.NewInt(1), 128) serialNumber, _ := rand.Int(rand.Reader, serialNumberLimit) - // set expiry to around 10 years - expiry := 3650 * 24 * time.Hour + // set expiry to around 1 day + expiry := 24 * time.Hour // round minute and backdate 5 minutes notBefore := time.Now().Round(time.Minute).Add(-5 * time.Minute).UTC(){quote}   h3. Input:  Optional:  Send transactions. h3. Expectations:  Every orderer should produce a warning log every 5 minutes for each orderer with a soon-to-expire cert.     ></description> </Issue>
