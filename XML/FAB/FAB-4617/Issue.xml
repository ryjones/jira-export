<Issue id="17858" key="FAB-4617" number="4617" project="10002" reporter="yacovm" assignee="angelo.decaro" creator="yacovm" type="10004" summary="As a fabric developer I would want to ignore certificate expiration taking in account validation chains" priority="3" resolution="10000" status="6" created="2017-06-13 23:19:38.0" updated="2019-01-28 20:13:22.0" resolutiondate="2017-08-11 09:52:00.0" votes="0" watches="5" workflowId="38997" security="10001"> <description><! CDATA When the msp  computes|https://github.com/hyperledger/fabric/blob/master/msp/mspimpl.go#L997-L1010  the x509 verify options in order to ignore expiration of certificates, it adds 1 second to the time of the certificate:  {code} 	var tempOpts x509.VerifyOptions 	tempOpts.Roots = msp.opts.Roots 	tempOpts.DNSName = msp.opts.DNSName 	tempOpts.Intermediates = msp.opts.Intermediates 	tempOpts.KeyUsages = msp.opts.KeyUsages 	tempOpts.CurrentTime = cert.NotBefore.Add(time.Second) {code}  But alas - this is sometimes not enough as the x509.Verify not only verifies the validity of the certificate itself but also of its  chain|https://golang.org/src/crypto/x509/verify.go  in line 309.  This in turn calls: {code} err = root.isValid(rootCertificate, currentChain, opts) {code}  which then does: {code} 	if now.Before(c.NotBefore) || now.After(c.NotAfter) {  		return CertificateInvalidError{c, Expired}  	} {code}  So in case of a signing identity that has expiration time of: {code} Not Before: Jun 13 18:51:00 2017 GMT Not After : Jun 13 18:51:00 2018 GMT {code}  but a root CA cert that has expiration of: {code} Not Before: Jun 13 18:54:19 2017 GMT Not After : Jun 11 18:54:19 2027 GMT {code}  1 second just isn't enough, but however - 5 minutes (I checked) are enough.  Attached below a msp.tar.gz for testing. When the peer starts up it crashes with: {code} panic: Error when setting up MSP from directory /var/hyperledger/peer/config/msp: err The supplied identity is not valid, Verify() returned x509:  certificate has expired or is not yet valid {code}   I think the code needs to be changed to something like:  {code} 	var tempOpts x509.VerifyOptions 	tempOpts.Roots = msp.opts.Roots 	tempOpts.DNSName = msp.opts.DNSName 	tempOpts.Intermediates = msp.opts.Intermediates 	tempOpts.KeyUsages = msp.opts.KeyUsages  	latestNotBefore := cert.NotBefore 	for _, cert := range rootCertsAndIntermediateCerts { 		if cert.NotBefore.After(latestNotBefore) { 			latestNotBefore = cert.NotBefore 		} 	} 	tempOpts.CurrentTime = latestNotBefore.Add(time.Minute) 	return tempOpts {code}  where the rootCertsAndIntermediateCerts  is a slice of all the x509.Certificates of the intermediate and root certs.    ~angelo.decaro   ~elli-androulaki   ~ales    ></description> </Issue>
