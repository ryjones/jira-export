<Issue id="41930" key="FAB-16365" number="16365" project="10002" reporter="abel23" creator="abel23" type="10004" summary="Data is not consistent on all peers" priority="3" resolution="10203" status="6" created="2019-08-21 06:27:31.0" updated="2019-09-25 19:00:48.0" resolutiondate="2019-09-24 18:30:29.0" votes="0" watches="7" workflowId="54971"> <description><! CDATA I created a fabric network using solo ordering consisting of 2 orgs. The containers are distributed across 2 hosts using docker swarm.  orderer, org1ca, {color:#4c9aff}peer0org1{color}, peer1org1, corresponding cli  in host 1 and  org2ca, {color:#4c9aff}peer0org2{color}, peer1org2, corresponding cli in host 2. The peers highlighted in "blue" are the anchor peers. I used the fabcar chaincode from fabric-samples to test.  I executed the "initLedger" function to add the set of hardcoded data. This data was same across all the peers. But i noted that peers other than anchor peers are prone to the following error during query. i used "queryAllCars" function. {code:java} root@6203436d81fd:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C mychannel -n fabcarcc -c '{"Args": "queryAllCars" }' Error: endorsement failure during query. response: status:500 message:"GET_STATE_BY_RANGE failed: transaction ID: f0eeb7bacb2b316fee84ce5c5d14583458c63018205f7c3f190adef9fafd5ce9: error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:Database does not exist. {code} I executed the query after some time, the query was a success but the error repeats again, but this often happens to the peer that is not an anchor peer in both the orgs. I don't think this is normal since querying from the anchor peers never results in such an error.  Now i added new data using "createCar " function from {color:#4c9aff}{color:#ff0000}peer0org1 {color}{color}which is an anchor peer. The chaincode invoke was success. The data was updated in the anchor peer of both orgs, but the other peers (not anchor) were showing the above error during query. Like i said sometimes the query is a success. The new data was {code:java} {"Key":"CAR10", "Record":{"colour":"stradale","make":"red","model":"ferrari","owner":"Abel"} {code} After this, i added new data from {color:#0747a6}peer1org1 {color}which is not an anchor peer. While i executed this, the above error was there during querying. The chaincode invoke was a success. The new data was {code:java} {"Key":"CAR12", "Record":{"colour":"heavy","make":"blue","model":"chevy","owner":"bumbum"} {code} Now anchor peers have data with owner "Abel" and the other peers have data with owner "bumbum". The error during query happens usually on peers that are not anchor.  After a long time, the anchor peers got updated with both the data, but the remaining peers were still in the same state. {color:#0747a6}peer1org1 {color}had data with owner "bumbum", "Abel" is not there. {color:#0747a6}peer1org2 {color}has error during query. Even {color:#0747a6}peer1org1Â {color}ends up having query issues.  After some time, the anchor peers removes the data with owner "bumbum", the other peers have data with owner "bumbum" but "abel" is not there.  i noted that the data in anchor peers are the same. both of them will be in the same state while querying. Same with non anchor peers. but the non anchor peers aren't consistent with the anchor peers. They never end up in sync. The data just bounces around. but exists in some peer.  I think this is bad if data across all peers are not consistent. The query error is also an issue. We cannot get data from that peer.  !peer0org1datainc_withmarking.png!  !peer1org1datainc_withmarking.png!  !peer1org2_withmarking.png!  !peer0org2_withmarking.png!  *Note*: I restarted the peers after the network connection was lost. All peers crashed due to this issue jira.hyperledger.org/browse/FAB-16292 . Is it related to these?  ></description> </Issue>
