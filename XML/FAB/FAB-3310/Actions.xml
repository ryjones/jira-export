<Action id="22834" issue="15902" author="yacovm" type="comment" created="2017-04-21 17:58:59.0" updateauthor="yacovm" updated="2017-04-21 19:56:13.0"> <body><! CDATA You mean, on the delivery service - not the committer. right? Jim, are you still capable of debugging with that client? Have you tried using tcpdump port 7050 to see if something does pass?   My guess is that the client has some LB that drops connections after a while and the peer simply waits silently and indefinitely.   ></body> </Action>
<Action id="22837" issue="15902" author="mastersingh24" type="comment" created="2017-04-21 19:19:40.0" updateauthor="mastersingh24" updated="2017-04-21 19:19:40.0"> <body><! CDATA We are down level on the most current Go GRPC package - the one which has the client keepalive. I believe that this is at least partially a duplicate and/or tied to https://jira.hyperledger.org/browse/FAB-1261 which I am happy to implement this weekend.  @yacov - I can take this off your plate  ></body> </Action>
<Action id="22838" issue="15902" author="yacovm" type="comment" created="2017-04-21 19:20:12.0" updateauthor="yacovm" updated="2017-04-21 19:20:12.0"> <body><! CDATA {quote}Would it be the right thing to do to expose the grpc keepalive setting on the committer in order to get around this issue?{quote} I am not aware that grpc-go has a keepalive extension. from what I know there is some health check that needs application-level support both in the server and client side.  However - is it possible to make an experiment and try to reproduce the problem in the client's environment with the following change? in https://github.com/hyperledger/fabric/blob/master/core/deliverservice/deliveryclient.go#L201-L211 : {code} func DefaultConnectionFactory(endpoint string) (*grpc.ClientConn, error) { 	keepAlive := grpc.WithDialer(func(addr string, timeout time.Duration) (net.Conn, error) { 		return (&net.Dialer{ 			Timeout: timeout, 			KeepAlive: time.Minute, 		}).Dial("tcp", addr) 	})  	dialOpts :=   grpc.DialOption{grpc.WithTimeout(connTimeout), grpc.WithBlock(), keepAlive}  	if comm.TLSEnabled() { 		dialOpts = append(dialOpts, grpc.WithTransportCredentials(comm.GetCASupport().GetDeliverServiceCredentials())) 	} else { 		dialOpts = append(dialOpts, grpc.WithInsecure()) 	} 	grpc.EnableTracing = true 	return grpc.Dial(endpoint, dialOpts...) } {code}  ></body> </Action>
<Action id="22927" issue="15902" author="mastersingh24" type="comment" created="2017-04-24 09:26:00.0" updateauthor="mastersingh24" updated="2017-04-24 09:26:00.0"> <body><! CDATA I'm working on this - trying to figure out what the real issue is before implementing any type of fix. I actually have not yet been able to reproduce - but will try adding something in between the orderer and the peer in order to see if we can reproduce the error.  Don't want to assume that keepalive is the only problem  ></body> </Action>
<Action id="22941" issue="15902" author="mastersingh24" type="comment" body="Ideally, part of the long term solution will be to update the grpc-go package.  Unfortunately, we can&apos;t move to it at this point." created="2017-04-24 15:19:12.0" updateauthor="mastersingh24" updated="2017-04-24 15:19:12.0"/>
<Action id="23803" issue="15902" author="binhn" type="comment" body="Next week we will attempt to upgrade grpc and see where it might break and address that." created="2017-05-12 13:38:54.0" updateauthor="binhn" updated="2017-05-12 13:38:54.0"/>
<Action id="23804" issue="15902" author="denyeart" type="comment" body=" ~mastersingh24  Could you clarify &apos;long term&apos; and why we can&apos;t move up &apos;at this point&apos;?" created="2017-05-12 13:38:58.0" updateauthor="denyeart" updated="2017-05-12 13:38:58.0"/>
<Action id="23814" issue="15902" author="jimthematrix" type="comment" created="2017-05-12 15:42:50.0" updateauthor="jimthematrix" updated="2017-05-12 15:42:50.0"> <body><! CDATA I just moved FAB-3320 into this one as a sub-task. So it takes two fixes to make the whole thing work again: - timeout b/w the orderer and committer. from the log that  ~rhegde  sent it's pretty clear that the orderer successfully cut a block but the committer never received it. - SDK needs to manage the grpc stream better. for Java SDK this has been done in https://gerrit.hyperledger.org/r/#/c/9067/. for node SDK a CR is pending https://gerrit.hyperledger.org/r/#/c/9165/ and we'd like to wait until after alpha2 to merge it  ></body> </Action>
<Action id="23816" issue="15902" author="jimthematrix" type="comment" body="also moved FAB-2843 into this one as sub-task, to track the work on the node SDK side" created="2017-05-12 15:47:50.0" updateauthor="jimthematrix" updated="2017-05-12 15:47:50.0"/>
<Action id="24068" issue="15902" author="mastersingh24" type="comment" created="2017-05-19 12:25:02.0" updateauthor="mastersingh24" updated="2017-05-19 12:25:02.0"> <body><! CDATA  ~denyeart  - there were some interface changes and I think it might involve more changes than we'd like in terms of risk at this point.  I'm going to give it a run and see what happens  ></body> </Action>
<Action id="24074" issue="15902" author="mastersingh24" type="comment" body="After assessing a number of options and looking at one with the least risk, I think that  ~yacovm  was onto the right idea for what&apos;s needed for this specific case.  Passing in dialer *should* do the trick and seem like the least invasive option" created="2017-05-19 13:06:45.0" updateauthor="mastersingh24" updated="2017-05-19 13:06:45.0"/>
<Action id="24898" issue="15902" author="mastersingh24" type="comment" body="Now that we&apos;ve upgraded grpc-go, I&apos;m going to go with the keepalive option" created="2017-06-01 09:38:08.0" updateauthor="mastersingh24" updated="2017-06-01 09:38:08.0"/>
<Action id="24977" issue="15902" author="muralisr" type="comment" body="the bug has two tasks ..the grpc upgrade for fabric-peer is done. fabric-sdk-node task is left. Moving  it to fabric-sdk-node for visibility there." created="2017-06-01 17:50:53.0" updateauthor="muralisr" updated="2017-06-01 17:50:53.0"/>
<Action id="25091" issue="15902" author="jimthematrix" type="comment" created="2017-06-02 13:18:25.0" updateauthor="jimthematrix" updated="2017-06-02 13:19:13.0"> <body><! CDATA  ~muralisr  we are using FAB-2787 to track the work on the node SDK side. java SDK has recently upgraded to grpc latest which integrated the keepalive capability controlled by a system property: https://gerrit.hyperledger.org/r/#/c/9955/  the work with node SDK has been on implementing the keepalive ping ourselves which would require an update to the proto definition (peer/events.proto).  ~harrisob@us.ibm.com . in the past couple of days I've been poking around the option to use built-in keepalive support. it seems for the current gprc level (1.2.4) we could use "grpc.http2.keepalive_time", or upgrade to 1.3.7 and use "grpc.keepalive_time_ms". Bret is investigating. Ideally 1.2.4 has the support so we don't have to upgrade at this point (upgrading to 1.3.7 introduce some issues that would need time to resolve).  ></body> </Action>
<Action id="25122" issue="15902" author="mastersingh24" type="comment" created="2017-06-02 14:55:36.0" updateauthor="mastersingh24" updated="2017-06-02 14:59:24.0"> <body><! CDATA FAB-4305  seems to have done the trick.  I'm not sure exactly how we can add a real test for this (perhaps we can add it to BDD) but I've verified this manually by doing the following:  1) Locally modified e2e_cli to place an haproxy in front of the orderer and have the peers connect to the haproxy endpoint  2) Set client and server idle timeouts on haproxy to be less than the 300 sec keepalive set in the peer and verified that the connection was indeed terminated (on the good news front since this sends on EOF that the peer can handle it actually does reconnect)  3) Set the client and server idle timeouts to be larger than the 300 sec keepalive and left things running idle for an hour and did not see any connections timeout and terminate on the proxy  ></body> </Action>
<Action id="25210" issue="15902" author="mastersingh24" type="comment" created="2017-06-03 08:48:19.0" updateauthor="mastersingh24" updated="2017-06-03 08:49:07.0"> <body><! CDATA  ~timpii    ~rhegde  - this should solve the timeout issue between the peer and the orderer.  I'll leave this open until you verify that this solves the problem in your environment     ></body> </Action>
<Action id="25342" issue="15902" author="rhegde" type="comment" body=" ~mastersingh24  Could you confirm the Docker Environment Variable to be set for the Orderer Container." created="2017-06-05 14:27:10.0" updateauthor="rhegde" updated="2017-06-05 14:27:10.0"/>
<Action id="25360" issue="15902" author="jimthematrix" type="comment" created="2017-06-05 15:08:36.0" updateauthor="jimthematrix" updated="2017-06-05 15:08:36.0"> <body><! CDATA  ~timpii   ~rhegde  all changes needed in the fabric and SDKs are merged. can you please give it a try and let us know if all the timeout issues have been taken care of?   ~mastersingh24  I just saw your comment above about leaving it open until verified by CLS. will revert the status to in review.  ></body> </Action>
<Action id="25594" issue="15902" author="rhegde" type="comment" body=" Update - 6 June  We have picked up  https://chat.hyperledger.org/channel/fabric-ci?msg=KZrRzaZqzwYExt3WT  fabric images and transferring to our internal network. This JIRA should be verified by ET tomorrow EOD." created="2017-06-07 01:08:03.0" updateauthor="rhegde" updated="2017-06-07 01:08:24.0"/>
<Action id="25599" issue="15902" author="weeds" type="comment" body="Thanks Rahul- I really appreciate it." created="2017-06-07 04:08:58.0" updateauthor="weeds" updated="2017-06-07 04:08:58.0"/>
<Action id="25823" issue="15902" author="weeds" type="comment" body="any input on this?" created="2017-06-09 08:18:53.0" updateauthor="weeds" updated="2017-06-09 08:18:53.0"/>
<Action id="25828" issue="15902" author="rhegde" type="comment" body="Apologies for no update. There is some issue in getting the images (2nd set) to our network, Vikas should be position to update you on the status." created="2017-06-09 11:42:57.0" updateauthor="rhegde" updated="2017-06-09 11:42:57.0"/>
<Action id="25831" issue="15902" author="muralisr" type="comment" body="thanks  ~rhegde " created="2017-06-09 11:48:29.0" updateauthor="muralisr" updated="2017-06-09 11:48:29.0"/>
<Action id="25916" issue="15902" author="weeds" type="comment" body="Vikhas indicated they have build downloaded- but they have specific processes they need to get done.  He is trying to do it on weekend and will have updated status on Monday." created="2017-06-09 20:19:22.0" updateauthor="weeds" updated="2017-06-09 20:19:22.0"/>
<Action id="26057" issue="15902" author="clayton sims" type="comment" body=" ~VikasJakhar    ~rhegde   ~timpii   how is this looking?   Did you get this validated?" created="2017-06-12 19:03:40.0" updateauthor="clayton sims" updated="2017-06-12 19:03:40.0"/>
<Action id="26510" issue="15902" author="clayton sims" type="comment" created="2017-06-16 11:32:58.0" updateauthor="clayton sims" updated="2017-06-16 11:32:58.0"> <body><! CDATA Did this get validated?  I know Jason was helping you with an issue yesterday, but unclear if that was blocking the validation of this defect     ></body> </Action>
<Action id="26559" issue="15902" author="rhegde" type="comment" body="Sorry Clayton, we are getting blockers for testing this item on beta-release, first https://jira.hyperledger.org/browse/FAB-4590 and now https://jira.hyperledger.org/browse/FAB-4827" created="2017-06-16 14:41:00.0" updateauthor="rhegde" updated="2017-06-16 14:41:00.0"/>
<Action id="26744" issue="15902" author="rhegde" type="comment" created="2017-06-19 14:22:39.0" updateauthor="rhegde" updated="2017-06-19 14:22:39.0"> <body><! CDATA We used the Fabric Beta Images and we are not able to reproduce this issue on our environment.   Thanks all for the assistance.  ></body> </Action>
<Action id="26747" issue="15902" author="weeds" type="comment" body="i am putting this to done given the comment from Rahul- thank you!" created="2017-06-19 14:38:27.0" updateauthor="weeds" updated="2017-06-19 14:38:27.0"/>
<Action id="27280" issue="15902" author="mastersingh24" type="comment" body="Woo hoo" created="2017-06-23 15:20:47.0" updateauthor="mastersingh24" updated="2017-06-23 15:20:47.0"/>
