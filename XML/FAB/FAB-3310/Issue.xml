<Issue id="15902" key="FAB-3310" number="3310" project="10002" reporter="rhegde" assignee="mastersingh24" creator="jimthematrix" type="10004" summary="gRPC timeout b/w committer and orderer and SDK event listeners" priority="1" resolution="10000" status="6" created="2017-04-21 17:50:21.0" updated="2018-07-20 14:12:19.0" resolutiondate="2017-06-19 14:38:51.0" votes="1" watches="11" workflowId="38089"> <description><! CDATA based on a client's exhaustive testing, we are concluding that the grpc stream connection b/w the committer and orderer are broken due to inactivity. so this is what the client did and observed: - start the whole system (one orderer, two peer orgs, two peers in each org, the client app) - send 20 or so transactions in succession, all succeeded - wait for 10min, submit another transaction - at this point, the endorsement proposal request used to error out due to timeout - but after setting CORE_CHAINCODE_KEEPALIVE to 10 (default was 0 which is off), this timeout doesn't happen any longer and the endorsement request happily returns to the app, and the app is able to send the transaction to the orderer. the orderer successfully processed it and proposed a block - however the committer never received that block. so the logical conclusion is that the stream connection b/w the committer and the orderer is broken at that point  Would it be the right thing to do to expose the grpc keepalive setting on the committer in order to get around this issue?  ></description> </Issue>
