<Action id="28639" issue="19338" author="chenxuan" type="comment" body="i meet the same question." created="2017-07-19 08:13:44.0" updateauthor="chenxuan" updated="2017-07-19 08:13:44.0"/>
<Action id="28660" issue="19338" author="ssaddem" type="comment" created="2017-07-19 14:00:12.0" updateauthor="ssaddem" updated="2017-07-19 14:09:26.0"> <body><! CDATA I suggest to replace in  core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go|https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go#L101   //Add limit jsonQueryMap jsonQueryLimit  = queryLimit  //Add skip jsonQueryMap jsonQuerySkip  = querySkip     with      if _, ok := jsonQueryMap jsonQueryLimit ; !ok \{ jsonQueryMap jsonQueryLimit  = queryLimit } if _, ok := jsonQueryMap jsonQueryLimit ; !ok \{ jsonQueryMap jsonQuerySkip  = querySkip }  and in method signature wil be: func ApplyQueryWrapper(namespace, queryString string, *defaultLimit int*) (string, error)     P.S : Must verify that jsonQueryMap jsonQueryLimit  and  jsonQueryMap jsonQueryLimit  contains int Regards     ></body> </Action>
<Action id="28668" issue="19338" author="denyeart" type="comment" created="2017-07-19 15:03:54.0" updateauthor="denyeart" updated="2017-07-19 15:03:54.0"> <body><! CDATA W{color:#444444}e did intend to revisit how 'paging' works, balancing function, performance, and mitigation of malicious user requests. FAB-2809 is part of that. We'll also consider FAB-5369 during the assessment.  {color}  ></body> </Action>
<Action id="29401" issue="19338" author="davidkel" type="comment" body="We are getting lots of people asking about this issue and when it will be fixed so I have changed it to highest." created="2017-08-03 13:47:50.0" updateauthor="davidkel" updated="2017-08-03 13:47:50.0"/>
<Action id="30492" issue="19338" author="mastersingh24" type="comment" body=" ~denyeart  I&apos;m changing this to improvement as this is working as designed I believe?" created="2017-09-04 13:00:27.0" updateauthor="mastersingh24" updated="2017-09-04 13:00:27.0"/>
<Action id="30500" issue="19338" author="denyeart" type="comment" created="2017-09-05 11:59:03.0" updateauthor="denyeart" updated="2017-09-05 11:59:03.0"> <body><! CDATA  ~mastersingh24  I agree this is an improvement rather than bug.  I have added more description to FAB-2809 where CouchDB pagination support will be added, to include more context of the limitation and proposed solution.  In fact, I will mark this item as a duplicate of FAB-2809.  I'd encourage all the watchers of this item to review FAB-2809 description and provide their comments there.  ~sstone1   ~davidkel   ~chenxuan .     ></body> </Action>
<Action id="31581" issue="19338" author="sstone1" type="comment" created="2017-10-03 19:16:31.0" updateauthor="sstone1" updated="2017-10-03 19:16:31.0"> <body><! CDATA Just to back up what Dave said - this is a real pain for Composer users. It comes up without fail at least once a week, if not more. Composer users want to be able to build apps that page through large result sets (perhaps lists of assets matching a given query), and they can't do that at the moment. Their only option is to mirror the Blockchain data into an external database and build an app which queries that instead.  Will leave the same comment in FAB-2809.  ></body> </Action>
<Action id="41437" issue="19338" author="denyeart" type="comment" body="Closing this one - will track under FAB-2809 as High Priority." created="2018-03-11 14:13:53.0" updateauthor="denyeart" updated="2018-03-11 14:13:53.0"/>
