<Issue id="42910" key="FAB-16884" number="16884" project="10002" reporter="arman19940326" creator="arman19940326" type="10100" summary="Adding new peers to org results in constant stream of errors in peer&apos;s log" priority="1" status="10100" created="2019-10-21 14:21:13.0" updated="2020-05-19 13:15:46.0" votes="0" watches="3" workflowId="56011"> <description><! CDATA I deployed a Fabric network with one organization that initially has two peers: peer0-org1-example-com and peer1-org1-example-com with service discovery enabled on peers. After setting up the network and creating a channel, I successfully added a new peer (peer2-org1-example-com) to the org with the help of Fabric Node SDK but the thing is when I checked peer1-org1-example-com and peer2-org1-example-com logs they were both full of errors like this:    {code:java} 2019-10-21 14:17:09.710 UTC  gossip.comm  sendToEndpoint -> WARN 2ce Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:09.710 UTC  gossip.discovery  expireDeadMembers -> WARN 2cf Entering  0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed  2019-10-21 14:17:09.710 UTC  gossip.discovery  expireDeadMembers -> WARN 2d0 Closing connection to Endpoint: peer2-org1-example-com:7051, InternalEndpoint: 10.1.0.200:7051, PKI-ID: 0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed, Metadata:  2019-10-21 14:17:09.710 UTC  gossip.discovery  expireDeadMembers -> WARN 2d1 Exiting 2019-10-21 14:17:10.393 UTC  gossip.comm  sendToEndpoint -> WARN 2d2 Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:10.707 UTC  core.comm  ServerHandshake -> ERRO 2d3 TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52756 2019-10-21 14:17:11.221 UTC  core.comm  ServerHandshake -> ERRO 2d4 TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52762 2019-10-21 14:17:11.390 UTC  gossip.comm  sendToEndpoint -> WARN 2d5 Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:11.708 UTC  core.comm  ServerHandshake -> ERRO 2d6 TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52770 2019-10-21 14:17:11.866 UTC  gossip.comm  sendToEndpoint -> WARN 2d7 Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:11.866 UTC  gossip.discovery  expireDeadMembers -> WARN 2d8 Entering  0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed  2019-10-21 14:17:11.866 UTC  gossip.discovery  expireDeadMembers -> WARN 2d9 Closing connection to Endpoint: peer2-org1-example-com:7051, InternalEndpoint: 10.1.0.200:7051, PKI-ID: 0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed, Metadata:  2019-10-21 14:17:11.866 UTC  gossip.discovery  expireDeadMembers -> WARN 2da Exiting 2019-10-21 14:17:12.385 UTC  gossip.channel  reportMembershipChanges -> INFO 2db Membership view has changed. peers went offline:    peer2-org1-example-com:7051 10.1.0.200:7051   , current view:    peer0-org1-example-com:7051 10.1.1.92:7051   2019-10-21 14:17:13.205 UTC  core.comm  ServerHandshake -> ERRO 2dc TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52788 2019-10-21 14:17:13.711 UTC  core.comm  ServerHandshake -> ERRO 2dd TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52792 2019-10-21 14:17:14.393 UTC  gossip.comm  sendToEndpoint -> WARN 2de Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:14.707 UTC  gossip.comm  sendToEndpoint -> WARN 2df Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:14.710 UTC  core.comm  ServerHandshake -> ERRO 2e0 TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52804 2019-10-21 14:17:14.731 UTC  core.comm  ServerHandshake -> ERRO 2e1 TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52806 2019-10-21 14:17:14.869 UTC  gossip.comm  sendToEndpoint -> WARN 2e2 Failed obtaining connection for 10.1.0.200:7051, PKIid:0a4d9d32c338733f2e834439eb2c9e2ce5b9f5a3083ded3c587937430db456ed reason: context deadline exceeded 2019-10-21 14:17:15.732 UTC  core.comm  ServerHandshake -> ERRO 2e3 TLS handshake failed with error remote error: tls: bad certificate server=PeerServer remoteaddress=10.1.0.200:52820{code}    After googling around I suspected that this might somehow be related to the settings of Gossip protocol in peers especially the CORE_PEER_GOSSIP_BOOTSTRAP environment variable.   I set this env to peer1-org1-example-com in peer0-org1-example-com and in peer1-org1-example-com to peer0-org1-example-com. In the new added peer (peer2-org1-example-com) I set this env to peer0-org1-example-com and got the above errors. Then I set :    {code:java} CORE_PEER_GOSSIP_BOOTSTRAP = peer0-org1-example-com peer1-org1-example-com{code}    in the new peer and the issue kinda resolved. Then I added another new peer (peer3-org1-example-com) with the above CORE_PEER_GOSSIP_BOOTSTRAP value and this time the aforementioned errors appeared in the logs of peer2-org1-example-com and peer3-org1-example-com.  Somehow I need to set this env to all the current peers that are present in the network to make the errors go away.  What should I do to resolve this problem? Is this related to service discovery too?  I use a template Kubernetes deployment yaml file to deploy new peers and I'm kinda reluctant to change the variable CORE_PEER_GOSSIP_BOOTSTRAP value to all the current peers every time I want to add a new peer.  ></description> </Issue>
