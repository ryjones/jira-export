<Action id="56620" issue="36732" author="denyeart" type="comment" created="2019-02-03 18:10:08.0" updateauthor="denyeart" updated="2019-02-03 18:10:08.0"> <body><! CDATA  ~gstylianou  I'm not understanding the scenario or the problem. Please update the Description to answer these questions:  Is this a chaincode calling chaincode scenario?  In chaincode calling chaincode scenarios, the call is made on the local peer, so I'm not seeing where service discovery comes into play here. What is the relation between peerB in the scenario and peerX in the results? Is there an actual error message in peer or returned to client?  ></body> </Action>
<Action id="56638" issue="36732" author="gstylianou" type="comment" created="2019-02-04 12:01:18.0" updateauthor="gstylianou" updated="2019-02-04 12:01:18.0"> <body><! CDATA  ~denyeart    *Is this a chaincode calling chaincode scenario?*    No, it is the backend (client) calling chaincode. Service Discovery is used for endorsing the transaction proposal. Currently I am using OR policy which doesn't require Service Discovery. However, when I activate Service Discovery (I want to switch to AND policy) everything works fine except the calls to private chaincode. The effect of this is that a call from one backend (client), of a peer, to a private Chaincode's function is multiplied, i.e. sent to all peers. This is observed via backend and chaincode logs.     *What is the relation between peerB in the scenario and peerX in the results? Is there an actual error message in peer or returned to client?*  Of course there is failure because the other peers must not receive the call.  I get errors in the logs. However, everything works just fine, as programmed, without Service Discovery enabled.  One last thing. I have a lot of code running, several peers, several chaincodes, etc. This issue, with Service Discovery enabled, occurs only with private chaincode  private collections . The rest of the code runs perfectly fine.        ></body> </Action>
<Action id="56653" issue="36732" author="denyeart" type="comment" created="2019-02-04 17:26:31.0" updateauthor="denyeart" updated="2019-02-04 17:40:07.0"> <body><! CDATA  ~gstylianou  Ok, the lack of mention of 'client' in the Description is what was confusing to me.  I understand now that when you say 'backend for peer' you mean 'client for peer'.  So the question is, why is the client making three endorsement requests when only one is needed. That is, is it a problem in the client/SDK, or is the client/SDK simply making three endorsement requests based on the service discovery response.  Which SDK is being used by the application client?  I assume the investigation should start with that SDK.  Alternatively, try the 'discover' CLI and provide the results of the endorser query, see doc at https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html#endorsers-query  ></body> </Action>
<Action id="67601" issue="36732" author="sykesm" type="comment" body="Stale" created="2020-01-22 22:34:13.0" updateauthor="sykesm" updated="2020-01-22 22:34:13.0"/>
