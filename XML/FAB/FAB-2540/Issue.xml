<Issue id="15107" key="FAB-2540" number="2540" project="10002" reporter="adnanchoudhury" creator="adnanchoudhury" type="10002" summary="Chaincode installation on a remote peer fails" priority="3" resolution="10000" status="6" created="2017-02-28 16:34:09.0" updated="2018-07-20 14:11:50.0" resolutiondate="2017-10-03 20:38:46.0" votes="0" watches="3" workflowId="37633"> <description><! CDATA *Scenario*: I have two organizations, each with two peer (peer0 and peer1 belogs to org0, peer2 and peer3 belongs to org1), 3 of the peers reside in the same vagrant, the fourth peer (peer3) resides in another vagrant (so its a remote peer). Both vagrants belong to same network and can ping each other.   (This is based on 4 peer example from https://github.com/ratnakar-asara/e2e)  The docker-compose in vagrant1 is:  {code:java} version: '2' services:  orderer: container_name: orderer image: hyperledger/fabric-orderer environment: - ORDERER_GENERAL_LOGLEVEL=debug - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 - ORDERER_GENERAL_GENESISMETHOD=file - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.block - ORDERER_GENERAL_LOCALMSPID=OrdererMSP - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/localMspConfig working_dir: /opt/gopath/src/github.com/hyperledger/fabric command: orderer volumes: - ./crypto/orderer:/var/hyperledger/orderer ports: - 7050:7050  peer0: container_name: peer0 extends: file: peer-base/peer-base.yaml service: peer-base environment: - CORE_PEER_ID=peer0 - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050 - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp/peer0/localMspConfig - CORE_PEER_LOCALMSPID=Org0MSP - CORE_PEER_GOSSIP_ENDPOINT=9.42.137.243:7051 volumes: - /var/run/:/host/var/run/ - ./crypto/peer/:/var/hyperledger/msp/ - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/ ports: - 7051:7051 - 7053:7053 depends_on: - orderer  peer1: container_name: peer1 extends: file: peer-base/peer-base.yaml service: peer-base environment: - CORE_PEER_ID=peer1 - CORE_PEER_GOSSIP_BOOTSTRAP=peer0:7051 - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050 - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp/peer1/localMspConfig - CORE_PEER_LOCALMSPID=Org0MSP - CORE_PEER_GOSSIP_ENDPOINT=9.42.137.243:8051 volumes: - /var/run/:/host/var/run/ - ./crypto/peer/:/var/hyperledger/msp/ - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/ ports: - 8051:7051 - 8053:7053 depends_on: - orderer - peer0  peer2: container_name: peer2 extends: file: peer-base/peer-base.yaml service: peer-base environment: - CORE_PEER_ID=peer2 - CORE_PEER_GOSSIP_BOOTSTRAP=peer0:7051 - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050 - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp/peer2/localMspConfig - CORE_PEER_LOCALMSPID=Org1MSP - CORE_PEER_GOSSIP_ENDPOINT=9.42.137.243:9051 volumes: - /var/run/:/host/var/run/ - ./crypto/peer/:/var/hyperledger/msp/ - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/ ports: - 9051:7051 - 9053:7053 depends_on: - orderer - peer0 - peer1  cli: container_name: cli image: hyperledger/fabric-peer tty: true environment: - GOPATH=/opt/gopath - CORE_PEER_ADDRESSAUTODETECT=true - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock - CORE_LOGGING_LEVEL=DEBUG - CORE_NEXT=true - CORE_PEER_ID=cli - CORE_PEER_ENDORSER_ENABLED=true - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050 - CORE_PEER_ADDRESS=peer0:7051 - CORE_PEER_GOSSIP_IGNORESECURITY=true - CORE_PEER_LOCALMSPID=Org0MSP - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/msp/sampleconfig working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer command: sh -c './script.sh | tee  results.log 2>&1; sleep 100000' #command: /bin/bash volumes: - /var/run/:/host/var/run/ - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/ - ./crypto/orderer/channel.tx:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel.tx - ./crypto/peer/peer0/localMspConfig:/opt/gopath/src/github.com/hyperledger/fabric/msp/sampleconfig - ./crypto:/opt/gopath/src/github.com/hyperledger/fabric/examples/e2e/crypto/ - ./script.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/script.sh - ./results.log:/opt/gopath/src/github.com/hyperledger/fabric/peer/results.log depends_on: - orderer - peer0 - peer1 - peer2  {code}  docker-compose in vagrant2:  {code:java} version: '2'  services:  peer3: container_name: peer3 extends: file: peer-base/peer-base.yaml service: peer-base environment: - CORE_PEER_ID=peer3 - CORE_PEER_GOSSIP_BOOTSTRAP=9.42.137.243:7051 - CORE_PEER_COMMITTER_LEDGER_ORDERER=9.42.137.243:7050 - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp/peer3/localMspConfig - CORE_PEER_LOCALMSPID=Org1MSP - CORE_PEER_GOSSIP_ENDPOINT=9.42.137.242:9051 volumes: - /var/run/:/host/var/run/ - ./crypto/peer/:/var/hyperledger/msp/ - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/ - ./myc1.block:/opt/gopath/src/github.com/hyperledger/fabric/peer/myc1.block ports: - 7051:7051 - 7053:7053  {code}  Steps to reproduce: In vagrant1,  1) up the docker-compose-file ( creates cli, orderer, peer0, peer1, peer2 container)  2) Create the channel from cli 3) add peer0,1,2 to the channel  4) install chaincode in peer0, peer2  in vagrant2: 1) up the docker-compse (creates peer3) 2) join peer3 to the channel (with the myc21.block file generated) 3) install chaincode fails with the following error:  {code:java} root@ed3f605d80bc:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 2017-02-28 16:31:50.673 UTC  logging  InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode' 2017-02-28 16:31:50.674 UTC  msp  GetLocalMSP -> DEBU 002 Returning existing local MSP 2017-02-28 16:31:50.674 UTC  msp  GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity panic: runtime error: index out of range  goroutine 1  running : panic(0xc0b000, 0xc4200140b0) 	/opt/go/src/runtime/panic.go:500 +0x1a1 github.com/hyperledger/fabric/core/chaincode/platforms/golang.(*Platform).ValidateSpec(0x130e338, 0xc420312060, 0x130e338, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/platforms/golang/platform.go:87 +0x36d github.com/hyperledger/fabric/peer/chaincode.checkSpec(0xc420312060, 0x6, 0xc42019c29c) 	/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/common.go:51 +0xf1 github.com/hyperledger/fabric/peer/chaincode.getChaincodeBytes(0xc420312060, 0xc420312001, 0x0, 0x0, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/common.go:59 +0x147 github.com/hyperledger/fabric/peer/chaincode.chaincodeInstall(0xc4201df440, 0xc420214780, 0x0, 0x6, 0xc4203061e0, 0x9, 0x9) 	/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/install.go:105 +0x2b1 github.com/hyperledger/fabric/peer/chaincode.installCmd.func1(0xc4201df440, 0xc420214780, 0x0, 0x6, 0x0, 0x0) 	/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/install.go:44 +0x52 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4201df440, 0xc4202145a0, 0x6, 0x6, 0xc4201df440, 0xc4202145a0) 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x12b8ce0, 0xf, 0xc420012075, 0x7) 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x12b8ce0, 0x29, 0xc420012075) 	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b main.main() 	/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:111 +0x52d  {code}   ></description> </Issue>
