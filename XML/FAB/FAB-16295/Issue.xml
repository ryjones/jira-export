<Issue id="41764" key="FAB-16295" number="16295" project="10002" reporter="sykesm" assignee="dereckluo" creator="sykesm" type="10004" summary="investigate why Handler#deregister and Handler#registerTxID need to deal with empty chaincodeID and handle error" priority="5" resolution="10000" status="6" created="2019-08-13 13:08:43.0" updated="2019-09-07 13:00:46.0" resolutiondate="2019-09-07 13:00:40.0" votes="0" watches="2" workflowId="54801"> <description><! CDATA The code in question: {code} func (h *Handler) deregister() { 	if h.chaincodeID != "" { 		h.Registry.Deregister(h.chaincodeID) 	} } {code}  afaict, that should never happen in production and, if it does, we need to understand why. Also, there should be an error check there because if we didn't find a handler in the registry, we get back an error.  So, task is to remove the check and simply drive deregister, run all tests, and see what breaks. If nothing seems to break, remove the check since it seems to be redundant. Regardless, add error handling and address fallout as necessary.  Also, the following code lives in {{registerTxID}}. Again, the check really shouldn't be needed:  {code} 	chaincodeID := "unknown" 	if h.chaincodeID != "" { 		chaincodeID = h.chaincodeID 	} {code}  Note: This may be related to "dev mode." If so, let's discuss options.  ></description> </Issue>
