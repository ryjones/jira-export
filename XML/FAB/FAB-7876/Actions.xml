<Action id="39204" issue="27038" author="sanchezl" type="comment" body=" ~nakyo7 , Did you vendor the dependency ? See https://www.youtube.com/watch?v=-mlUaJbFHcM" created="2018-01-26 20:23:02.0" updateauthor="sanchezl" updated="2018-01-26 20:23:02.0"/>
<Action id="39234" issue="27038" author="nakyo7" type="comment" created="2018-01-29 07:00:04.0" updateauthor="nakyo7" updated="2018-01-29 07:19:14.0"> <body><! CDATA  ~sanchezl , Yes. I saw that, and did it.  But the go vendor do not include c++ files in subdirectories.  Skipped all files in go-ethereum/crypto/secp256k1/libsecp256k1.  ></body> </Action>
<Action id="39720" issue="27038" author="clayton sims" type="comment" body=" ~sanchezl what is the next step here?   Assigning to you Luis if you aren&apos;t the right (or a good person) let me know. " created="2018-02-06 15:14:35.0" updateauthor="clayton sims" updated="2018-02-06 15:15:16.0"/>
<Action id="39750" issue="27038" author="sanchezl" type="comment" created="2018-02-06 23:21:15.0" updateauthor="sanchezl" updated="2018-02-06 23:21:15.0"> <body><! CDATA This is not a Fabric issue. This appears to be a known problem with go vendoring in general and go-ethereum specifically.   https://github.com/ethereum/go-ethereum/issues/2738   Personally, I wasn't even able to get this working (e.g. {{go build}} the chaincode locally) when using a vendored go-ethereum dependency locally.  I'm closing this issue.  ~nakyo7 , please feel free to reopen if you have more information.  ></body> </Action>
<Action id="64009" issue="27038" author="ycarmel" type="comment" created="2019-09-24 06:39:45.0" updateauthor="ycarmel" updated="2019-09-24 06:39:45.0"> <body><! CDATA I experience similar issue.  The packager only collect files from the go package root folder, a package that contains c dependencies as an embedded directory is skipped, causing the build step to fail due to missing files.        ></body> </Action>
<Action id="64036" issue="27038" author="jyellick" type="comment" body="This has been addressed the new lifecycle epic in v2.0 via FAB-11237.  Packaging may now be performed by commodity tar utilities, no longer requiring specific fabric tools." created="2019-09-24 14:22:47.0" updateauthor="jyellick" updated="2019-09-24 14:22:47.0"/>
