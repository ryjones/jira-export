<Issue id="19504" key="FAB-5481" number="5481" project="10002" reporter="muralisr" assignee="wlahti" creator="muralisr" type="10001" summary="filtered block event with minimal information" priority="3" resolution="10000" status="6" created="2017-07-26 17:51:36.0" updated="2018-07-20 18:49:01.0" resolutiondate="2018-02-28 05:50:14.0" votes="1" watches="7" workflowId="39556"> <description><! CDATA Block events deliver entire block with all the transactions and information in them. Currently only RW/sets are removed before sending out the block event. This proposal is to create another event type (FilteredBlockEvents ?) to contain only information such as  \{transactionID, chaincode event name}  as part of the minimal set. This allows clients to register and obtain the filtered information for the minimal set which they can use to do further queries to the fabric with.  Rough sketch of FilteredBlockEvent proto for protos/peer/events.proto {code:java} FilteredBlock -> uint64 number -> string channel_id -> repeated FilteredTransaction filtered_transaction -> string txid -> TxValidationCode tx_validation_code -> FilteredAction filtered_action -> ChaincodeEvent ccevent -> string txid -> string ccid -> string ccEventName -> bytes payload - nilled out in this filtered transaction{code} This can then be added to a SignedEvent (defined in protos/peer/events.proto) if user registers and wants signed events. We should also do the same for regular block events, which are currently sent unsigned.  ChaincodeEvent may be nil, hence the need for the txid field in the FilteredTransaction. ChaincodeEvent is reused to avoid inventing a new structure without the txid field. Â   ></description> </Issue>
