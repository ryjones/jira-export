<Action id="59947" issue="39784" author="guoger" type="comment" created="2019-05-13 09:58:39.0" updateauthor="guoger" updated="2019-05-13 09:59:09.0"> <body><! CDATA Did some preliminary investigation and I think it's a problem with Fabric logging instead of Zap logger:  https://gerrit.hyperledger.org/r/c/27273 makes {{LevelEnabler}} *always* return {{true}}, which leads to {{time.Now}} in  check|https://github.com/uber-go/zap/blob/8a2ee5670ced5d94154bf385dc6a362722945daf/logger.go#L265  being invoked for disabled log levels as well, see  this|https://github.com/uber-go/zap/blob/8a2ee5670ced5d94154bf385dc6a362722945daf/sugar.go#L221 .  thoughts?  ~wlahti   ~sykesm   ></body> </Action>
<Action id="59948" issue="39784" author="sykesm" type="comment" created="2019-05-13 11:03:58.0" updateauthor="sykesm" updated="2019-05-13 11:03:58.0"> <body><! CDATA It's an issue with both. Fabric logging is a veneer on zap, the zap core will always collect the time stamp, and the zap maintainers have said they're not fixing that.  The level enabler change impacts the sugared logger (which is one path through) but it won't change the behavior of the standard zap logger.  I'll look at the level enabler some time in the next couple of weeks.  ></body> </Action>
<Action id="60776" issue="39784" author="sykesm" type="comment" body="https://gerrit.hyperledger.org/r/c/fabric/+/31774" created="2019-06-07 20:53:14.0" updateauthor="sykesm" updated="2019-06-07 20:53:14.0"/>
<Action id="60824" issue="39784" author="denyeart" type="comment" body="and cherry picked to release-1.4: https://gerrit.hyperledger.org/r/#/c/fabric/+/31805/" created="2019-06-10 11:40:05.0" updateauthor="denyeart" updated="2019-06-10 11:40:05.0"/>
<Action id="60892" issue="39784" author="sykesm" type="comment" created="2019-06-11 19:03:17.0" updateauthor="sykesm" updated="2019-06-11 19:03:17.0"> <body><! CDATA Discovered a side-effect of this change today but I'm not sure it's worth addressing.  We have a metrics that count the number of log events that are checked and emitted. Before this change, we would count all level checks. With this change, we will not count level checks that occur below the minimum logging threshold.  In concrete terms, we may have seen a gazillion debug level logs counted as checked before this change and now see 0.  I think we should wait and see if this is an issue or not.  ></body> </Action>
