<Issue id="46872" key="FAB-18473" number="18473" project="10002" reporter="JIRAUSER21893" creator="JIRAUSER21893" type="10001" summary="chaincode unit testing explanation/ tutorial" priority="2" status="10100" created="2021-05-19 10:24:47.0" updated="2022-12-31 10:16:02.0" votes="2" watches="4" workflowId="60773" archived="N"> <description><! CDATA using hyperledger fabric 2.3 (latest) and coding the chaincode in Go. I want to unit test this chaincode but there is limited resources on the internet on how to do this. And the one that do show how it's done use deprecated methods. As far as my understanding goes, is that the 'old' way uses shim, shimtest and the golang testing imports to unit test the code. But the newer way of writing chaincode is with the contractapi. And shimtest no longer exists. I did take a look at the hyperledger fabric samples. They do use the new contractapi and have working unit tests. Here I can see that they generate mock files (This is the github example project that im refering to:  https://github.com/hyperledger/fabric-samples/tree/main/asset-transfer-basic/chaincode-go/chaincode ) but i cant figure out how they generate them and which ones i need to generate for my own chaincode (each fabric example has different amount of mock files).  From a developer perspective, a guide on how to unit test your chaincode is much appreciated as there is a lack of resources on the topic.Â   ></description> </Issue>
