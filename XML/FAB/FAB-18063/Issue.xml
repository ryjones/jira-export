<Issue id="45589" key="FAB-18063" number="18063" project="10002" reporter="caod" assignee="tsharris" creator="caod" type="10001" summary="Support individual MSP value updates" priority="3" resolution="10000" status="6" created="2020-07-10 21:28:11.0" updated="2020-07-28 21:29:14.0" resolutiondate="2020-07-28 21:29:14.0" votes="1" watches="4" workflowId="59492" archived="N"> <description><! CDATA As a consumer of the fabric-config library, I would like to update individual fields in and organizations MSP configuration without having to go through the existing process of cloning the MSP configuration via `GetMSP()` and then modifying the specific fields I want to update. Currently if you wanted to add a single admin cert  to  an orderer org's MSP config, you would do something like: {code:java} ordererOrg := c.Orderer().Organization("ordererorg") mspConfig := ordererOrg.GetMSP() mspConfig.AdminCerts = append(mspConfig.AdminCerts, newCert) ordererOrg.SetMSP(mspConfig){code} While the existing `GetMSP` -> `SetMSP` model has it's own use cases, the above could have simply been supported as  {code:java} ordererOrg := c.Orderer().Organization("ordererorg") ordererOrg.AddAdminCert(newCert){code} which is both more in line with how the rest of the API operates and less confusing for having to follow a different process than for say `ordererOrg.AddOrdererEndpoint`.     For now, lets keep the existence of `SetMSP` and `GetMSP` and just add the other functions to support a separate path for making individual field updates.     *Acceptance*  There are new api functions for `OrdererOrgGroup`, `ApplicationOrgGroup`, and `ConsortiumOrgGroup` that implement each of the supported values we add via `SetMSP`:  https://github.com/hyperledger/fabric-config/blob/7beda2c830d8d474eda0b187ef9cd8ecb3195724/configtx/orderer.go#L471  * Perform any certificate validation if necessary * AddRootCert/RemoveRootCert * AddIntermediateCert/RemoveIntermediateCert * AddAdminCert/RemoveAdminCert * AddCRL/RemoveCRL (using or replacing the already supported CreateMSPCRL, this function never actually modified the ConfigGroup type it was associated with and was instead used in conjunction with the SetMSP flow) * AddOUIdentifier/RemoveOUIdentifier * SetCryptoConfig * AddTLSRootCert/RemoveTLSRootCert * AddTLSIntermediateCert/RemoveTLSIntermediateCert * SetClientOUIdentifier/SetPeerOUIdentifier/SetAdminOUIdentifier/SetOrdererOUIdentifier * EnableNodeOUs/DisableNodeOUs  The examples are also updated to either show both methods of updating an MSP.     ></description> </Issue>
