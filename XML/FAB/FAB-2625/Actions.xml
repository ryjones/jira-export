<Action id="21599" issue="15192" author="ruslankryukov" type="comment" body="+1 we also need this feature for our customers" created="2017-03-22 07:20:26.0" updateauthor="ruslankryukov" updated="2017-03-22 07:20:26.0"/>
<Action id="21634" issue="15192" author="kletkeman" type="comment" created="2017-03-24 19:51:35.0" updateauthor="kletkeman" updated="2017-03-24 19:54:11.0"> <body><! CDATA I noticed something in the newest code (it may have been there prior to recent updates of course). There was either a comment or a var name that implied that we could call set event multiple times and it would keep them in an array. If this is the intent, then it solves the problem very well (even better than updating a large payload). If, on the other hand, I am misinterpreting something or what was written is incorrect (i.e. that in fact every call to "setEvent" overwrites the previously set payload) then may I suggest that we consider this option as a solution to the problem?  Here is the ideal way in which we could use this feature:  1) Call "setEvent" as often as we need to , each one storing a new event that will be emitted upon closing commit as happens today. (Multiples of same name are ok.) 2) Define a parameter to the call that allows us to "replace" named event, with such that any event by that name is removed and the current payload added against that name  Also, we should ensure that setEvent with null payload will remove all events by that name. Calling with null name will remove all set events by any name.  Note, I realize that this is a tricky interface, so adding extra API would be useful instead. But if we want to avoid namespace pollution, this behaviour would be intuitive once learned.  ></body> </Action>
