<Action id="28044" issue="19091" author="binhn" type="comment" created="2017-07-08 15:43:15.0" updateauthor="binhn" updated="2017-07-08 15:43:15.0"> <body><! CDATA  ~yuki-kon   This is work-as-designed: since peer0.org3 is under the control of org3.admin, the admin can instruct peer0 to join the channel (in reality, org3.admin would not have access to the channel artifact to do this anyway; only collusion would get here). At this point, the peer doesn't have the channel and so can't initialize the channel access control, so the access control requirement at this point is that the requester must be the local admin (org3.admin), which is the case here. Therefore the peer is successfully set up to join the channel <<== this is important point: since joining a channel is an async request, it requires a request to the orderer for org3, so the peer returns successful on preparation, but eventually fails on joining the channel due to membership enforcement.  ></body> </Action>
<Action id="28045" issue="19091" author="yuki-kon" type="comment" body=" ~binhn  Thanks for your comment. I checked the log messages of peer0.org3 and understood that joining channel request fails eventually. I&apos;m afraid this might be an usability problem. How does admin.org3 know that joining peer fails after all? Does Fabric have a command to know the list of channels which a peer joins?" created="2017-07-08 17:39:49.0" updateauthor="yuki-kon" updated="2017-07-08 17:39:49.0"/>
<Action id="28047" issue="19091" author="c0rwin" type="comment" created="2017-07-09 10:06:01.0" updateauthor="c0rwin" updated="2017-07-09 10:06:01.0"> <body><! CDATA There is an API for CSCC to list all channels peer has joined **GetChannels**, you can see how it works with {{peer cli}}   {code} peer channel list {code}  ></body> </Action>
<Action id="28051" issue="19091" author="binhn" type="comment" created="2017-07-09 14:15:31.0" updateauthor="binhn" updated="2017-07-09 14:15:31.0"> <body><! CDATA  ~yuki-kon   admin.org3 is a malicious attacker trying to get into a channel that his org3 doesn't belong, would we care about usability for attackers?  Look, the channel was created without org3, so org3 would not have access to the channel artifact to begin with. But somehow (collusion) org3 got a hold of this channel artifact, and the admin didn't bother to check to see whether his org belong to the channel, so he maliciously instructed his peers to join the channel and obviously failed.   An honest admin would verify the channel.block for correctness of policies, which orgs in it, etc before instructing the peers to join.   That is the design, and I think it is sound as-is: protecting channels from attackers and providing no advantage to such attackers.  ></body> </Action>
<Action id="28052" issue="19091" author="muralisr" type="comment" created="2017-07-09 14:40:59.0" updateauthor="muralisr" updated="2017-07-09 14:40:59.0"> <body><! CDATA  ~binhn  _>so the peer returns successful on preparation, but eventually fails on joining the channel due to membership enforcement_  Right.. the peer only sets up the environment so it can complete join the successfully if permitted. The CLI message should have been something like "Peer has initiated join" instead of "Peer joined the channel!".   ~yuki-kon  Currently peer3 cannot participate in the channel till the join loop is completed. Note that the peer continues to try to join and  continues to get the error    {code:java} ^  36m2017-07-08 22:40:56.135 UTC  deliveryClient  RequestBlocks -> DEBU 672 Starting deliver with block  1  for channel mychannel ^  31m2017-07-08 22:40:56.138 UTC  blocksProvider  DeliverBlocks -> ERRO 673  mychannel  Got error &{FORBIDDEN}   {code} In future we might be able to send a config update that could add Org3 to the channel and thus let the peer complete the loop.  As  ~C0rWin  points out,  {code:java} peer chaincode list.. {code} will get you the list of channels the peer has joined... although in this case this is not particularly useful as it will show "mychannel" in the (pending) list. It would have been  useful to indicated the state of the channel (e.g., "awaiting join", "joined").  Suggest we use this JIRA post 1.0 to tighten up join response * clean up the CLI "Peer joined the channel!" message (easy) * return more accurate state of channel in query command (moderate)  We could also investigate doing some deeper checks before preparing for the channel.  What do you think ?  ></body> </Action>
<Action id="28059" issue="19091" author="yuki-kon" type="comment" created="2017-07-09 21:29:21.0" updateauthor="yuki-kon" updated="2017-07-09 21:29:21.0"> <body><! CDATA  ~C0rWin  ~binhn  ~muralisr   Thanks for your reply. I could understand deeply the design of joining peer. I agree to the Srinivasan's proposal. It will be nice improvements for admin users to know the "join" status accurately.  ></body> </Action>
<Action id="28062" issue="19091" author="muralisr" type="comment" body=" ~yuki-kon  thanks. Created two sub tasks. If OK with you, will move this to post 1.0." created="2017-07-10 00:53:31.0" updateauthor="muralisr" updated="2017-07-10 00:53:31.0"/>
<Action id="28063" issue="19091" author="yuki-kon" type="comment" body=" ~muralisr  Thank you for creating sub tasks. I agree to move this to post 1.0. I changed Fix Version/s to v1.0.1. " created="2017-07-10 02:01:11.0" updateauthor="yuki-kon" updated="2017-07-10 02:01:11.0"/>
<Action id="28078" issue="19091" author="weeds" type="comment" body="Given the various comments- and that Yuki Kondo (the originator of defect)  agreed to move to post 1.0, I&apos;m moving this to medium level defect. Thanks Yuki- I do think this is something we do absolutely need to consider- very good thoughts here. Really appreciate your diligence on all the evaluation and testing you are doing. It&apos;s very helpful ." created="2017-07-10 11:34:00.0" updateauthor="weeds" updated="2017-07-10 11:34:00.0"/>
<Action id="30636" issue="19091" author="muralisr" type="comment" body=" ~yuki-kon  Given the above discussion going to rephrase it as follows &quot;CLI peer does not correctly report status of a join request&quot;" created="2017-09-07 18:32:25.0" updateauthor="muralisr" updated="2017-09-07 18:32:25.0"/>
<Action id="33256" issue="19091" author="jeffgarratt" type="comment" body=" ~muralisr  do you have cycles for this one?" created="2017-10-26 19:22:31.0" updateauthor="jeffgarratt" updated="2017-10-26 19:22:31.0"/>
<Action id="33271" issue="19091" author="muralisr" type="comment" body=" ~jeffgarratt  After FAB-5921, I&apos;d like to knock of chaincode FSM cleanup ... long overdue and better done for 1.1. But assign to me if there&apos;s no one else to pick this up. I can defintely get the message clean up part which from a usability point of view is a good thing. " created="2017-10-26 20:43:35.0" updateauthor="muralisr" updated="2017-10-26 20:43:35.0"/>
<Action id="33274" issue="19091" author="c0rwin" type="comment" body="I think we need to be careful here, since we need to keep in mind that we might be adding a new peer of new organization which was just added into the channel and hence doesn&apos;t present in the `genesis.block`. " created="2017-10-26 20:46:09.0" updateauthor="c0rwin" updated="2017-10-26 20:46:09.0"/>
<Action id="33275" issue="19091" author="muralisr" type="comment" body=" ~C0rWin  can you expand on that a bit please ? Which aspect of the fix do we need to be careful about ?" created="2017-10-26 20:50:18.0" updateauthor="muralisr" updated="2017-10-26 20:50:18.0"/>
<Action id="33276" issue="19091" author="c0rwin" type="comment" created="2017-10-26 20:57:20.0" updateauthor="c0rwin" updated="2017-10-26 20:57:20.0"> <body><! CDATA  ~muralisr  as far as I understand the problem, or at least my interpretation of it. Peer from org3 gets genesis block while org3 is not part of the channel, however genesis.block is accepted and parsed, delivery service initiated to connect to the ordering service to pull the blocks, while eventually fails as org3 not channel readers. Therefore I'd assume that possible fix would to explore block before accepting it and initializing delivery service, providing correct error message.  My concerns is related to the scenario where you will be joining a new peer of org3, which wasn't channel reader when channel was created, but added at later stages.  ></body> </Action>
<Action id="34208" issue="19091" author="muralisr" type="comment" created="2017-11-01 20:05:01.0" updateauthor="muralisr" updated="2017-11-01 20:05:01.0"> <body><! CDATA From CLI's point of view, the "join" request is asynchronous. So the CLI side cannot predict the outcome of the join. The tasks outlined do NOT suggest we modify the CLI to do such checks to find out the outcome of the join.   Task - *post join processing to reflect accurate status of the join command* this was opened to track status of join on the peer side when the join command was completed to make sure the right reasons for the failure are reported. ie, basically a usability issue. On second thoughts though, suggest we don't pursue this  * existing logs between peer and orderer would already cover some ground * it could cause more confusion than provide clarity (e.g., a delayed inflight config update tx might have made it work)  Task - *Peer should check whether belongs to a channel before creating ledger*  there's a chicken and egg problem here. The ledger is needed for the channel env to be brought up (some of which is needed for receiving the channel delivery to complete the join). One thing we should do is to make sure the ledger is cleaned up if the join fails. Propose we do it as a separate JIRA item and not link it to this one.  (Anything to add  ~C0rWin  ?)  What do you think  ~yuki-kon  ? Does that sound reasonable ?  If the above two are agreed to, the only thing we need to do for this JIRA is the task *correct misleading CLI output on join* task.  ></body> </Action>
<Action id="34210" issue="19091" author="yuki-kon" type="comment" body="Thank you for thinking of this JIRA,  ~muralisr . I agree with your proposal. It&apos;s reasonable to correct misleading CLI output on join." created="2017-11-01 20:18:17.0" updateauthor="yuki-kon" updated="2017-11-01 20:18:17.0"/>
<Action id="34214" issue="19091" author="muralisr" type="comment" body="Thank you for the prompt response  ~yuki-kon . I&apos;ll unlink *Peer should check whether belongs to a channel before creating ledger* from this JIRA and mark *post join processing to reflect accurate status of the join command* as &quot;won&apos;t do&quot;" created="2017-11-01 20:59:50.0" updateauthor="muralisr" updated="2017-11-01 20:59:50.0"/>
