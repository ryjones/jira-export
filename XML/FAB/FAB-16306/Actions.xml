<Action id="63073" issue="41787" author="pandrejko" type="comment" created="2019-08-19 22:09:27.0" updateauthor="pandrejko" updated="2019-08-19 22:14:27.0"> <body><! CDATA Problem as reported:  These are the steps I followed: * Created a new orderer org * Updated the system channel, added new org to Orderer groups with its certificates * Updated the system channel again, added new orderer endpoint * This went well, I can see from logs it fetched system channel blocks from other orderers * Then followed the same procedure for a regular channel called *common* * At this point, another orderer started to try sending stuff to new orderer, but new orderer complains channel *common* does not exist, logs are below. Continuing all the time. Also I can see relevant chain folder does not exist in new orderer.  Say we have a standard set of Raft orderers serving for all channels and at some point, some channel wants to use a new and separate orderer.  We can create a new orderer organization and add its node(s) to that channel. This new node(s) will catch up and receive all the blocks from other orderer nodes and after that we can remove old orderer nodes from that channel. Right?  Gari: {{For Solo and Kafka orderers, you will actually need to use separate ordering services if you want to have channels managed by different orderers.  You can't map channels to a subset of orderer nodes that belong to a single Kafka-based ordering service.}}  {{With Raft, it is possible to have each channel managed by a subset of the Raft consenter nodes.  I noticed that this is not currently clearly documented.  I'd suggest posting in the #fabric-order channel for now and it would be great if you could open a JIRA ticket to add this info to the documentation.}}   {{{{I’m still unclear for how to configure this.}} {{ }} {{Orderer address(es) is encoded in the genesis block which is inherited by all the channels. Shell we use separate genesis blocks for each orderer? Or maybe perform a config update in  the channel and change the orderer address after the channel is created? Not sure if this will work, maybe possible with Solo orderers.}} {{ }} {{What about Raft orderers? Say we have R Raft orderer nodes, can we configure channels to use N < R consenters for a specific channel?}}}}     You need to bootstrap the orderers in the new orderer org with the latest config block, did you do it?     For system channel, it automatically receives the config block as joined to channel. For regular channel, how should I do it?     I mean when you boot your new orderers that were not part of the system channel since its genesis - you give them the last config block of the system channel instead of the genesis block of the system channel     But why? I can see it already has all the blocks in the system channel.      orderers that were added to the network after its creation and were not there since its genesis, need to boot with the configuration block that is after the transaction that added them.  Are you saying that the orderer was booted with a config block that is the genesis block? That should be impossible because it means it can't find itself in the Raft configuration....      What does booting an orderer with a configuration block mean exactly?  I'm providing genesis block to the new orderer (same like other orderers) and it receives all the later blocks from system channel.     This is not what you're supposed to do. See these instructions:   {color:#0000FF}https://hyperledger-fabric.readthedocs.io/en/release-1.4/raft_configuration.html{color}|https://urldefense.proofpoint.com/v2/url?u=https-3A__hyperledger-2Dfabric.readthedocs.io_en_release-2D1.4_raft-5Fconfiguration.html&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=g2TmmAGPlDZEnJj18lhpjA&m=IBMHp_np3dc9fEWbx6n4z3oBBnC0IV2upOYv-u6WuPc&s=GX4L4VvAv14gvKTLyDm-2RgZqSvBzAI5Oiek_vIcYVo&e=   {color:#0000FF}you don't put in  {color:#0000FF}https://github.com/hyperledger/fabric/blob/release-1.4/sampleconfig/orderer.yaml#L96{color}|https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_hyperledger_fabric_blob_release-2D1.4_sampleconfig_orderer.yaml-23L96&d=DwMFaQ&c=jf_iaSHvJObTbx-siA1ZOg&r=g2TmmAGPlDZEnJj18lhpjA&m=IBMHp_np3dc9fEWbx6n4z3oBBnC0IV2upOYv-u6WuPc&s=-1jSFIm7K9gextILlF5hTihPvThfQv7wd2tf5m4g-AU&e= the genesis block. you put the latest config block of the system channel.{color}       Ah, now it makes sense and it works! I overlooked the documentation, sorry! And thanks! :)  A final question, is it okay not adding this new orderer to consenter set of system channel? Looks like adding it to consenter set of desired channel is enough. I dont want to add it to consenter set of system channel because in that case, it will be a consenter by default at every new channel created afterwards.  ></body> </Action>
