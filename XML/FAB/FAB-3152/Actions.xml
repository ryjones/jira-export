<Action id="24369" issue="15739" author="muralisr" type="comment" body=" ~pschnap  I have seen this (and a few variations of this) early on but should be fixed in latest master. Moving this to Done. Please reopen if the problem persists." created="2017-05-25 21:19:39.0" updateauthor="muralisr" updated="2017-05-25 21:19:39.0"/>
<Action id="24384" issue="15739" author="pdespot" type="comment" created="2017-05-26 01:27:13.0" updateauthor="pdespot" updated="2017-05-26 01:27:13.0"> <body><! CDATA May I ask what the solution was? I'm not clear on the comment in the post about the "hostname 'ordered'".     Thanks in advance.  ></body> </Action>
<Action id="24387" issue="15739" author="muralisr" type="comment" created="2017-05-26 01:46:11.0" updateauthor="muralisr" updated="2017-05-26 01:46:11.0"> <body><! CDATA  ~pdespot  Absolutely. The orderer's hostname is needed by the peer to submit transactions, receive blocks etc. This orderer name is provided to at configuration time.  I'm not sure exactly what  ~pschnap  was running into but here is my experience with previous levels of code * the orderer host was only in configtx.yaml and could not be provided to CLI in the peer commands * once - by mistake - restarted the peer after storing a unresolvable orderer host name in the peer config and didn't realize that was being used even when I had changed the orderer name elsewhere (I should have cleared the database and started over). * in some cases the docker wasn't able to resolve orderer instances. The solution was to add a "dns_search: ." entry in docker-compose.yaml  With the latest, we have the "-o <orderer>" option in all CLI commands that talk to orderer.   Given the above, there's a good chance that the original problem is gone.   ></body> </Action>
<Action id="24457" issue="15739" author="pschnap" type="comment" created="2017-05-26 14:50:54.0" updateauthor="pschnap" updated="2017-05-26 14:50:54.0"> <body><! CDATA  ~muralisr  it does not appear to have been fixed :/  I did some more testing and it appears to error not only in production mode but also in development mode.  Here's a better explanation of how I produced the error: * Download the latest master (the commit I just used is 9683d72e0033d5f3224b4bee7e1fc3f67a81eda0) * `cd` into devenv and run `vagrant up` (after destroying the previous machine, if it existed) * `vagrant ssh` into the VM * Run `make` (which will fail on linting) * Run `orderer` * Open another terminal * `cd devenv` (if needed) * `vagrant ssh` * `peer node start -o localhost:7050` (or use "orderer:7050" or "0.0.0.0:7050" or "127.0.0.1:7050", it doesn't matter) * Observe the "Failed connecting to orderer:7050..." error in the output after a few seconds – this will always say "orderer:7050" regardless of what you provided for the `-o` argument  *It seems the `-o` flag is not being _used_ when it tries to connect to the orderer,* at least not when using the default chain. I can give it bad input for `-o` and it errors on parsing it (in peer/node/start.go) but it doesn't seem to be using it by the time it gets around to throwing the error (in core/comm/producer.go).  If you add "127.0.0.1   orderer" to the /etc/hosts file of the VM then the error won't appear, but it seems there's bad logic in using the `-o` flag in the peer. Or maybe my setup is just wonky, but it's been pretty consistent for me.     ></body> </Action>
<Action id="24471" issue="15739" author="muralisr" type="comment" created="2017-05-26 15:54:25.0" updateauthor="muralisr" updated="2017-05-26 15:54:37.0"> <body><! CDATA  ~pschnap  can you try removing /var/hyperledger/* please ?  * ... * ... * Run `make` (which will fail on linting) * rm -rf /var/hyperledger/* * Run `orderer` * ... *   ></body> </Action>
<Action id="24503" issue="15739" author="pschnap" type="comment" body=" ~muralisr  Doing what you suggest on a fresh install doesn&apos;t seem to work, but sometimes when doing it after attempting to run a couple of times it does work. I don&apos;t know what the deal is and haven&apos;t been able to figure out under which circumstances it is successful." created="2017-05-26 19:04:05.0" updateauthor="pschnap" updated="2017-05-26 19:04:05.0"/>
<Action id="24508" issue="15739" author="pschnap" type="comment" created="2017-05-26 19:34:39.0" updateauthor="pschnap" updated="2017-05-26 19:34:39.0"> <body><! CDATA  ~muralisr  ok, I think I figured it out. If I specify the `-o` flag the first time I run it after a build – i.e. with a fresh /var/hyperledger – then it runs fine _regardless of whether I specify the flag in subsequent runs (or even provide the correct value)_. If I run it and _don't_ specify the `-o` flag the first time, then it _doesn't_ work in subsequent runs, regardless of whether I specify the `-o` flag in the other runs.  So, the peer seems to be ignoring the `-o` flag after the first run and the default of "orderer:7050" that's used when no flag is specified is broken on the first run w.r.t. the vagrant environment since it's not in the hosts file.  ></body> </Action>
<Action id="24513" issue="15739" author="muralisr" type="comment" created="2017-05-26 20:05:22.0" updateauthor="muralisr" updated="2017-05-26 20:05:22.0"> <body><! CDATA  ~pschnap  Right. That was the reasoning behind the cryptic remark in earlier comment  {code:java} once - by mistake - restarted the peer after storing a unresolvable orderer host name in the peer config and didn't realize that was being used even when I had changed the orderer name elsewhere (I should have cleared the database and started over). {code}  If you restart the peer with previous config, it'll use that config after restart. The config holds the orderer address too. If you had started without the "-o" the first time, by default it stores "orderer" and will continue to use that.  ></body> </Action>
<Action id="24518" issue="15739" author="pschnap" type="comment" created="2017-05-26 20:18:54.0" updateauthor="pschnap" updated="2017-05-26 20:21:03.0"> <body><! CDATA  ~muralisr  Ah, that was not clear to me from that comment.  This still seems broken to me, shouldn't the command-line argument override (and possibly overwrite) what was saved in the configuration? It also seems to me that the default value (no `-o`) should work in the development/testing vagrant environment.  ></body> </Action>
<Action id="24805" issue="15739" author="muralisr" type="comment" created="2017-05-31 17:11:10.0" updateauthor="muralisr" updated="2017-05-31 17:12:08.0"> <body><! CDATA  ~pschnap  Long story short, with latest master the peer accepts the "-o"  option but does not use it.  Details:  It was needed in older commit levels when the default "testchainid" was still around for use. In that mode peer created the configuration internally and needed the orderer ip supplied via "-o". "testchainid" has been removed in the latest master and so the only way a peer can join a channel is by supplying it with a block (containing orderer IP besides other information). The "-o" option is not used any longer but left behind so it won't break other tools that depend upon it. It will removed soon.  ></body> </Action>
<Action id="24813" issue="15739" author="pschnap" type="comment" body=" ~muralisr  Ok, I guess I&apos;ll put it back to resolved since it&apos;s till a WIP. Thanks for your feedback" created="2017-05-31 17:25:43.0" updateauthor="pschnap" updated="2017-05-31 17:25:43.0"/>
<Action id="24831" issue="15739" author="muralisr" type="comment" created="2017-05-31 18:11:35.0" updateauthor="muralisr" updated="2017-05-31 18:11:35.0"> <body><! CDATA  ~pschnap  Just to be clear, the WIP part is just the removal of the unused "-o" option.  Your original issue was real where that orderer ip address was saved on to the block configuration when "testchainid" was in use (and if you didn't supply the right one the first time the default "orderer" would be  stored).   Now since we are no longer using "testchainid" the peer no longer has a path that saves provided orderer IP... all that remains is removing the unused "-o" option.  This CR https://gerrit.hyperledger.org/r/#/c/6821/ provides the background for the original "-o" option where you saw the problem. Comparing that with master might provide more background.  ></body> </Action>
