<Action id="30785" issue="20789" author="kchristidis" type="comment" body="etcd/raft seems to be the implementation to use:  https://news.ycombinator.com/item?id=13081407  (I know it&apos;s a comment on a forum, but I&apos;m sold on the arguments presented therein)" created="2017-09-13 03:02:27.0" updateauthor="kchristidis" updated="2017-09-13 03:02:27.0"/>
<Action id="31400" issue="20789" author="mastersingh24" type="comment" body="Agree that we should start with etcd/raft" created="2017-10-01 17:15:29.0" updateauthor="mastersingh24" updated="2017-10-01 17:15:29.0"/>
<Action id="33354" issue="20789" author="grapebaba" type="comment" body=" ~kchristidis any design for this task or already in progress in private repo?" created="2017-10-30 07:07:48.0" updateauthor="grapebaba" updated="2017-10-30 07:07:48.0"/>
<Action id="33355" issue="20789" author="kchristidis" type="comment" created="2017-10-30 09:17:09.0" updateauthor="kchristidis" updated="2017-10-30 09:17:09.0"> <body><! CDATA Testing things out in a private repo; still in the early stages.  Once it's a bit more stable, I'll make it public along with a design doc and CRs.  Working on this in-between tasks though (it's lower-priority given the 1.2 target), so it may be a while before we get there.  ></body> </Action>
<Action id="39145" issue="20789" author="kchristidis" type="comment" body="FWIW, I&apos;ve been at this full-time for a bit more than a week now. It is an uneventful trip so far, spent studying the internals of  etcd/raft|https://github.com/coreos/etcd/tree/master/raft  and  raftexample|https://github.com/coreos/etcd/tree/master/contrib/raftexample  --  Delve|https://github.com/derekparker/delve  in hand. According to my investigations, Docker&apos;s {{swarmkit}} Raft implementation seems quite close to what I think we should be aiming for; that&apos;ll come next. Will post here again with an update, but the TL;DR is that I&apos;m in study/osmosis mode." created="2018-01-26 00:22:53.0" updateauthor="kchristidis" updated="2018-01-26 00:22:53.0"/>
<Action id="39740" issue="20789" author="kchristidis" type="comment" body="Removing the {{review-needed}} tag. Will be posting this as a proposal to the mailing list to invite reviews." created="2018-02-06 20:08:52.0" updateauthor="kchristidis" updated="2018-02-06 20:08:52.0"/>
<Action id="40042" issue="20789" author="baohua" type="comment" created="2018-02-13 01:40:56.0" updateauthor="baohua" updated="2018-02-13 01:40:56.0"> <body><! CDATA By bringing etcd/raft, will the entire consensus workflow still be execute-orderer-commit?  Will it be a separate etcd cluster from the orderer nodes? Or etcd inside orderer nodes?  Look forward to seeing more information.  Thanks!  ></body> </Action>
<Action id="40105" issue="20789" author="kchristidis" type="comment" created="2018-02-14 05:00:16.0" updateauthor="kchristidis" updated="2018-02-14 05:00:16.0"> <body><! CDATA {quote}By bringing etcd/raft, will the entire consensus workflow still be execute-orderer-commit? {quote} Yes. {quote}Will it be a separate etcd cluster from the orderer nodes? Or etcd inside orderer nodes? {quote} The latter.  Feel free to ask more questions as they come up.  ></body> </Action>
<Action id="40478" issue="20789" author="inatatsu" type="comment" body="How about the plan for BFT? Will it integrate the BFT-SMaRt as an ordering service or newly embed BFT into the orderer node?" created="2018-02-21 03:23:18.0" updateauthor="inatatsu" updated="2018-02-21 03:23:18.0"/>
<Action id="40534" issue="20789" author="kchristidis" type="comment" created="2018-02-21 19:32:11.0" updateauthor="kchristidis" updated="2018-02-21 19:32:11.0"> <body><! CDATA {quote}How about the plan for BFT? {quote} This is already answered in the JIRA description (emphasis mine): "...it is still not the optimal solution (*BFT is, and that's also coming*)..." {quote}Will it integrate the BFT-SMaRt as an ordering service or newly embed BFT into the orderer node? {quote} It will not use BFT-SMaRt. Its basis will be our own sbft code.  ></body> </Action>
<Action id="40574" issue="20789" author="grapebaba" type="comment" body="does it mean it&apos;s a raft consensus support bft?" created="2018-02-22 15:44:15.0" updateauthor="grapebaba" updated="2018-02-22 15:44:15.0"/>
<Action id="40575" issue="20789" author="kchristidis" type="comment" created="2018-02-22 15:47:30.0" updateauthor="kchristidis" updated="2018-02-22 15:47:43.0"> <body><! CDATA {quote}does it mean it's a raft consensus support bft?{quote}  Raft is CFT. When this JIRA is done, we'll have a Raft-based ordering service.  ></body> </Action>
<Action id="42599" issue="20789" author="kchristidis" type="comment" created="2018-04-05 18:43:01.0" updateauthor="kchristidis" updated="2018-04-05 22:02:37.0"> <body><! CDATA Becoming increasingly skeptical of the idea of a Raft cluster per channel. (This sounds a bit silly in the CFT domain, but could be of use in BFT land, since each channel would be assigned with a potentially different leader OSN.)  Back to raft, if the cluster per channel concept is implemented naively, you're looking at a non-negligible amount of overhead per channel.  This was the motivation|https://www.cockroachlabs.com/blog/scaling-raft/  behind CockroachDB's {{multiraft}}.  Unfortunately, {{multiraft}}  was dismantled a few months after its introduction|https://github.com/cockroachdb/cockroach/blob/098a7292a69292be01558457464079f87657393b/docs/RFCS/20151213_dismantle_multiraft.md  due to tight coupling with the project's storage engine.  I see two options going forward:  # Have all channels managed by one cluster (i.e. one raft leader) to begin with, and _then_ move on to a cluster per channel using {{multiraft}}-like improvements. # Do a cluster per channel in a non-optimized way (goroutines galore!), then move on with {{multiraft}}-like improvements.  Cluster isolation will be provided by the transport package (in our case: gRPC). This is also how {{etcdserver}} handles it, with their own {{transport}} package. Remember to tag the WAL metadata accordingly as well.  (This is a mostly note to self. This will be captured in the design doc.)  ></body> </Action>
<Action id="42730" issue="20789" author="kchristidis" type="comment" created="2018-04-09 15:51:45.0" updateauthor="kchristidis" updated="2018-08-06 23:35:29.0"> <body><! CDATA As things stand today, a consensus plugin author does not have access to the replica set node information via the provided interfaces, and as a result, the Raft cluster cannot be bootstrapped.  FAB-9428 describes a way to achieve that in an extensible manner. FAB-9429 is the sub-task that's related to our work here.  ></body> </Action>
<Action id="47603" issue="20789" author="denyeart" type="comment" body=" ~kchristidis  Although work is underway, I believe the expectation is that this will get delivered in v1.4 rather than v1.3.  I&apos;ve updated the Fix Version, let me know if you disagree." created="2018-07-20 16:02:18.0" updateauthor="denyeart" updated="2018-07-20 16:02:18.0"/>
<Action id="54017" issue="20789" author="kchristidis" type="comment" created="2018-11-29 16:44:55.0" updateauthor="kchristidis" updated="2018-11-29 16:45:07.0"> <body><! CDATA Just a note to not add any more child _stories_ (or tasks) under this Epic.  Anything related to this Epic should be added as a sub-task of an existing story.  ></body> </Action>
<Action id="54452" issue="20789" author="kchristidis" type="comment" created="2018-12-06 16:29:18.0" updateauthor="kchristidis" updated="2018-12-06 16:29:47.0"> <body><! CDATA Other than: # The tasks that are currently in progress or in review # The Kafka migration work (FAB-12777)  I've captured the set of items that we'll need to complete before the end of month under the {{raft-must}} label:  https://jira.hyperledger.org/issues/?jql=labels%20%3D%20raft-must   Post in #fabric-orderer-dev in RocketChat if you feel something is missing from that list.  /cc  ~simsc   ></body> </Action>
<Action id="57679" issue="20789" author="alexvicegrab" type="comment" created="2019-02-27 22:32:22.0" updateauthor="alexvicegrab" updated="2019-02-27 22:32:22.0"> <body><! CDATA Speaking of BFT, any plans of using/adapting/collaborating with the work of BFT SMaRt?  https://github.com/bft-smart  ></body> </Action>
<Action id="57692" issue="20789" author="kchristidis" type="comment" body="There is already a BFT-SMaRt plugin for Fabric, linked in the same repo. Whether that becomes the &quot;adopted&quot; BFT solution or not (in the sense that it&apos;s the one merged into the Fabric project), is something that the community will settle on when we tackle FAB-33." created="2019-02-28 02:14:04.0" updateauthor="kchristidis" updated="2019-02-28 02:14:04.0"/>
<Action id="67808" issue="20789" author="christopherferris" type="comment" body="Shouldn&apos;t this be closed as &apos;Done&apos;?" created="2020-02-04 14:21:37.0" updateauthor="christopherferris" updated="2020-02-04 14:21:37.0"/>
