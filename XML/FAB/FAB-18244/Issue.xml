<Issue id="46150" key="FAB-18244" number="18244" project="10002" reporter="ptippett" assignee="guoger" creator="ptippett" type="10004" summary="Prevent intermittent WAL snapshot corruption preventing an orderer from starting." priority="2" resolution="10000" status="6" created="2020-09-24 15:39:20.0" updated="2020-11-11 15:17:04.0" resolutiondate="2020-11-11 15:17:04.0" votes="0" watches="4" workflowId="60054" archived="N"> <description><! CDATA We had a user  with a single node ordering service and the orderer crashed and would not come back up.  After debugging the issue, Yellick root caused to: {color:#172b4d} {color}The issue is, I think, that the the commit process looks like this:  1. Raft tells us "this is the set of stuff that's been consented on" 2. We persist that stuff to disk 3. If our WAL is getting too big, we also persist a snapshot to disk 4. We apply the stuff to our blockchain.  What is happening is that we are thrashing between 3 and 4, and, then at startup, we read "there's a snapshot for block n+1", but our blockchain is only at n! Let's go replicate before we try to start consenting.  But, we actually already have that entry, we just haven't committed it to the blockchain yet.  This Jira is to correct this problem by, we believe, flipping 3 and 4 in the process above.  ></description> </Issue>
