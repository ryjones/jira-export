<Issue id="16731" key="FAB-3923" number="3923" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10004" summary="CSCC remove unused code" priority="3" resolution="10000" status="6" created="2017-05-15 10:52:05.0" updated="2018-07-20 14:12:46.0" resolutiondate="2017-05-23 20:24:15.0" votes="0" watches="1" workflowId="38524"> <description><! CDATA There is a peace of unused code in {{cscc}} package:  Â   {code} func getChannelFromConfigBlock(blockBytes   byte) (string, error) { 	if blockBytes == nil { 		return "", errors.New("Configuration block must not be nil.") 	} 	block, err := utils.GetBlockFromBlockBytes(blockBytes) 	if err != nil { 		return "", fmt.Errorf("Failed to reconstruct the configuration block, %s", err) 	} 	chainID, err := utils.GetChainIDFromBlock(block) 	if err != nil { 		return "", fmt.Errorf("Failed to get the chain ID from the configuration block, %s", err) 	} 	return chainID, nil } {code}  which is need to be removed, moreover inside {{configure_test.go}}, there is a duplicate code:  {code} func getChainID(blockBytes   byte) (string, error) { 	block := &common.Block{} 	if err := proto.Unmarshal(blockBytes, block); err != nil { 		return "", err 	} 	envelope := &common.Envelope{} 	if err := proto.Unmarshal(block.Data.Data 0 , envelope); err != nil { 		return "", err 	} 	payload := &common.Payload{} 	if err := proto.Unmarshal(envelope.Payload, payload); err != nil { 		return "", err 	} 	chdr, err := utils.UnmarshalChannelHeader(payload.Header.ChannelHeader) 	if err != nil { 		return "", err 	} 	fmt.Printf("Channel id: %v\n", chdr.ChannelId) 	return chdr.ChannelId, nil } {code}  instead we can simply use utility of   {code} utils.GetChainIDFromBlockBytes(blockBytes) {code}  ></description> </Issue>
