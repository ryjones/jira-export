<Action id="38501" issue="26768" author="kchristidis" type="comment" created="2018-01-12 13:29:19.0" updateauthor="kchristidis" updated="2018-01-12 13:29:19.0"> <body><! CDATA Thanks for writing this up Jay.  I would note that: {quote}By default, {{log.retention.(time}} is 168 hours (7 days). Sometimes users do have channels being idle for such long time, and orderer may reboot during that period. {quote} Until we roll out pruning, we need to correct this misconception. The only accepted {{log.retention.(time)}} value is {{-1}}, see:  https://github.com/hyperledger/fabric/blob/release/bddtests/dc-orderer-kafka-base.yml#L57   However --  When we do enable pruning, this issue _will_ bite us for the reasons you explain. (So you're right.)  What is the fix that you have in mind? Is it  https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=7sxjDTDccd64ayL6p  or something else?  ></body> </Action>
<Action id="38661" issue="26768" author="guoger" type="comment" created="2018-01-16 01:31:38.0" updateauthor="guoger" updated="2018-01-16 01:31:38.0"> <body><! CDATA  ~kchristidis  ah, I didn't realize this config value before. But shouldn't it be set by default in our Kafka image?  In terms of fix, the one you posted seems viable to me. But it may also depends on pruning design I guess.  ></body> </Action>
<Action id="38662" issue="26768" author="guoger" type="comment" created="2018-01-16 03:13:32.0" updateauthor="guoger" updated="2018-01-16 03:13:32.0"> <body><! CDATA With following kafka config: {code} log.retention.hours = -1 log.retention.bytes > segment.bytes = 1G (it takes ~30M connect msg to fill a segment) {code} I think this problem can be reasonably mitigated (not solved), as it would take ~60M orderer reboots without any TX for this problem to occur (connect msg fill up 2 log files). Am I missing anything? cc  ~kchristidis   ~sanchezl   ></body> </Action>
<Action id="38673" issue="26768" author="kchristidis" type="comment" created="2018-01-16 11:07:32.0" updateauthor="kchristidis" updated="2018-01-16 11:07:32.0"> <body><! CDATA {quote}But shouldn't it be set by default in our Kafka image? {quote} It should. I'm sure there was a reason for not setting it back then, but whatever it was, it is wrong now. If you submit a CR fixing this bug, we'll get it in.  {quote}With following kafka config: {quote} I believe so. I also want to hear Luis's take.  ></body> </Action>
<Action id="38815" issue="26768" author="sanchezl" type="comment" created="2018-01-17 23:23:47.0" updateauthor="sanchezl" updated="2018-01-17 23:24:06.0"> <body><! CDATA {quote}Until we roll out pruning, we need to correct this misconception. The only accepted {{log.retention.(time)}} value is {{-1}}, see:  https://github.com/hyperledger/fabric/blob/release/bddtests/dc-orderer-kafka-base.yml#L57  {quote} While this is what we officially  document|http://hyperledger-fabric.readthedocs.io/en/latest/kafka.html , we have users who insist on enabling pruning in Kafka. Maybe it's time to add the considerations for these customers to the documentation? or should we add it to the FAQ?  ></body> </Action>
<Action id="38843" issue="26768" author="kchristidis" type="comment" created="2018-01-18 14:02:47.0" updateauthor="kchristidis" updated="2018-01-18 14:02:47.0"> <body><! CDATA My take is that: # The hacky, pruning-enabled mode should be covered just in the FAQ, and # We fix {{log.retention.(time)}} to {{-1}}  Ultimately it's up to you guys though.  ></body> </Action>
<Action id="39067" issue="26768" author="kchristidis" type="comment" body=" ~guoger ,  ~sanchezl  how do we proceed here and who wants to take this over?" created="2018-01-24 16:03:30.0" updateauthor="kchristidis" updated="2018-01-24 16:03:30.0"/>
<Action id="39148" issue="26768" author="guoger" type="comment" body="https://gerrit.hyperledger.org/r/#/c/17233/" created="2018-01-26 02:16:09.0" updateauthor="guoger" updated="2018-01-26 02:16:09.0"/>
<Action id="41132" issue="26768" author="coosummer" type="comment" created="2018-03-02 11:07:17.0" updateauthor="coosummer" updated="2018-03-02 11:07:17.0"> <body><! CDATA how can i solve this problem.I have changed the log.retention.hours = -1,but the lastOffsetPersisted in orderer is still outside the range of offsets of the kafka . but if i reinstall all the fabric system, the history data will be lost. how can i do to solve the problem and retain the history data. thanks very much!  ></body> </Action>
<Action id="41154" issue="26768" author="kchristidis" type="comment" body=" ~coosummer : This cannot be fixed retroactively. The original misconfiguration means that you&apos;ll have to find a way to migrate the data to a new ordering service that is correctly configured this time." created="2018-03-02 18:41:02.0" updateauthor="kchristidis" updated="2018-03-02 18:41:02.0"/>
<Action id="41283" issue="26768" author="coosummer" type="comment" created="2018-03-07 07:11:10.0" updateauthor="coosummer" updated="2018-03-07 07:12:16.0"> <body><! CDATA @Kostas Christidis,Is there some advise or tool to migrate the data to a new orderering service, The only way i can see is  to use a client to read the old data and write to the new service, but the timestamp of tx is changed . thanks very much!  ></body> </Action>
<Action id="41293" issue="26768" author="kchristidis" type="comment" body="Only way to migrate right now is with a client as you suggest." created="2018-03-07 14:38:50.0" updateauthor="kchristidis" updated="2018-03-07 14:38:50.0"/>
