<Issue id="42187" key="FAB-16514" number="16514" project="10002" reporter="sykesm" assignee="sykesm" creator="sykesm" type="10001" summary="As a fabric developer, I would like the creation of docker images to take far less time than it does" priority="3" resolution="10000" status="6" created="2019-09-04 17:34:10.0" updated="2020-01-13 13:59:16.0" resolutiondate="2020-01-13 13:58:23.0" votes="0" watches="2" workflowId="55238"> <description><! CDATA Building docker images seems to take an extremely long time. Without digging in too deeply, it looks like much of that time is related to repeatedly sending build contexts to the daemon. In most cases that seems to be the fabric build.  I _believe_ we can greatly reduce the time it takes to build by creating an image with all assets and that using that as a base for each of the targeted peer, orderer, tools, etc. images.  {code} $ rm -rf .build/images/ && make native docker && cp ./.build/bin/* ~/go/bin/ .build/bin/peer CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=2.0.0 -X github.com/hyperledger/fabric/common/metadata.CommitSHA=d9b0ac2 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.15 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger" github.com/hyperledger/fabric/cmd/peer Binary available as .build/bin/peer .build/bin/orderer CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=2.0.0 -X github.com/hyperledger/fabric/common/metadata.CommitSHA=d9b0ac2 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.15 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger" github.com/hyperledger/fabric/orderer Binary available as .build/bin/orderer .build/bin/configtxgen CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/configtxgen/metadata.CommitSHA=d9b0ac2" github.com/hyperledger/fabric/cmd/configtxgen Binary available as .build/bin/configtxgen .build/bin/cryptogen CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/cryptogen/metadata.CommitSHA=d9b0ac2" github.com/hyperledger/fabric/cmd/cryptogen Binary available as .build/bin/cryptogen .build/bin/idemixgen CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/tools/idemixgen/metadata.CommitSHA=d9b0ac2" github.com/hyperledger/fabric/common/tools/idemixgen Binary available as .build/bin/idemixgen .build/bin/configtxlator CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/configtxlator/metadata.CommitSHA=d9b0ac2" github.com/hyperledger/fabric/cmd/configtxlator Binary available as .build/bin/configtxlator .build/bin/discover CGO_CFLAGS=" " GOBIN=/home/vagrant/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/discover/metadata.Version=2.0.0-snapshot-d9b0ac2" github.com/hyperledger/fabric/cmd/discover Binary available as .build/bin/discover Docker:  building peer image docker build --force-rm  -f images/peer/Dockerfile \ 	--build-arg GO_VER=1.12.7 \ 	--build-arg ALPINE_VER=3.10 \ 	--build-arg GO_TAGS= \ 	-t hyperledger/fabric-peer . Sending build context to Docker daemon  201.5MB Step 1/25 : ARG GO_VER Step 2/25 : ARG ALPINE_VER Step 3/25 : FROM alpine:${ALPINE_VER} as base ---> 961769676411 Step 4/25 : RUN apk add --no-cache tzdata ---> Using cache ---> 0709844ebdc3 Step 5/25 : RUN addgroup chaincode && adduser -D -h /chaincode -G chaincode chaincode ---> Using cache ---> 591dcb2ab4cd Step 6/25 : USER chaincode ---> Using cache ---> 318a55bd4309 Step 7/25 : FROM alpine:${ALPINE_VER} as peer-base ---> 961769676411 Step 8/25 : RUN apk add --no-cache tzdata ---> Using cache ---> 0709844ebdc3 Step 9/25 : FROM golang:${GO_VER}-alpine${ALPINE_VER} as golang ---> 6b21b4c6e7a3 Step 10/25 : RUN apk add --no-cache 	gcc 	musl-dev 	git 	bash 	make; ---> Using cache ---> ec959b41d2c5 Step 11/25 : ADD . $GOPATH/src/github.com/hyperledger/fabric ---> c52c960a6718 Step 12/25 : WORKDIR $GOPATH/src/github.com/hyperledger/fabric ---> Running in 90249d7b8480 Removing intermediate container 90249d7b8480 ---> fb27fb2b312f Step 13/25 : ENV EXECUTABLES go git ---> Running in f20c64ac5025 Removing intermediate container f20c64ac5025 ---> bad6be7234bd Step 14/25 : FROM golang as peer ---> bad6be7234bd Step 15/25 : ARG GO_TAGS ---> Running in da89ac151ae9 Removing intermediate container da89ac151ae9 ---> 2989da30cd00 Step 16/25 : RUN make peer GO_TAGS=${GO_TAGS} ---> Running in b47f54fbb689 .build/bin/peer CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=2.0.0 -X github.com/hyperledger/fabric/common/metadata.CommitSHA=d9b0ac2c3 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.15 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger" github.com/hyperledger/fabric/cmd/peer Binary available as .build/bin/peer Removing intermediate container b47f54fbb689 ---> 7ad60d260416 Step 17/25 : FROM peer-base ---> 0709844ebdc3 Step 18/25 : ENV FABRIC_CFG_PATH /etc/hyperledger/fabric ---> Using cache ---> d178958f12eb Step 19/25 : VOLUME /etc/hyperledger/fabric ---> Using cache ---> 2226ab92bc5d Step 20/25 : VOLUME /var/hyperledger ---> Using cache ---> e3330f1f72a6 Step 21/25 : COPY --from=peer /go/src/github.com/hyperledger/fabric/.build/bin /usr/local/bin ---> a5c331f85b7f Step 22/25 : COPY --from=peer /go/src/github.com/hyperledger/fabric/sampleconfig/msp ${FABRIC_CFG_PATH}/msp ---> fa5474052b18 Step 23/25 : COPY --from=peer /go/src/github.com/hyperledger/fabric/sampleconfig/core.yaml ${FABRIC_CFG_PATH} ---> 66972c52f819 Step 24/25 : EXPOSE 7051 ---> Running in 86ffc2fe8c0f Removing intermediate container 86ffc2fe8c0f ---> 28e2795c5728 Step 25/25 : CMD  "peer","node","start"  ---> Running in 990f885fdf2b Removing intermediate container 990f885fdf2b ---> 88289732440d Successfully built 88289732440d Successfully tagged hyperledger/fabric-peer:latest docker tag hyperledger/fabric-peer hyperledger/fabric-peer:2.0.0 docker tag hyperledger/fabric-peer hyperledger/fabric-peer:amd64-2.0.0-snapshot-d9b0ac2 Docker:  building orderer image docker build --force-rm  -f images/orderer/Dockerfile \ 	--build-arg GO_VER=1.12.7 \ 	--build-arg ALPINE_VER=3.10 \ 	--build-arg GO_TAGS= \ 	-t hyperledger/fabric-orderer . Sending build context to Docker daemon  201.5MB Step 1/22 : ARG GO_VER Step 2/22 : ARG ALPINE_VER Step 3/22 : FROM alpine:${ALPINE_VER} as base ---> 961769676411 Step 4/22 : RUN apk add --no-cache tzdata ---> Using cache ---> 0709844ebdc3 Step 5/22 : FROM golang:${GO_VER}-alpine${ALPINE_VER} as golang ---> 6b21b4c6e7a3 Step 6/22 : RUN apk add --no-cache 	gcc 	musl-dev 	git 	bash 	make; ---> Using cache ---> ec959b41d2c5 Step 7/22 : ADD . $GOPATH/src/github.com/hyperledger/fabric ---> Using cache ---> c52c960a6718 Step 8/22 : WORKDIR $GOPATH/src/github.com/hyperledger/fabric ---> Using cache ---> fb27fb2b312f Step 9/22 : ENV EXECUTABLES go git ---> Using cache ---> bad6be7234bd Step 10/22 : FROM golang as orderer ---> bad6be7234bd Step 11/22 : ARG GO_TAGS ---> Using cache ---> 2989da30cd00 Step 12/22 : RUN make orderer GO_TAGS=${GO_TAGS} ---> Running in 16ab9a75f836 .build/bin/orderer CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=2.0.0 -X github.com/hyperledger/fabric/common/metadata.CommitSHA=d9b0ac2c3 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.15 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger" github.com/hyperledger/fabric/orderer Binary available as .build/bin/orderer Removing intermediate container 16ab9a75f836 ---> ed08f25de036 Step 13/22 : FROM base ---> 0709844ebdc3 Step 14/22 : ENV FABRIC_CFG_PATH /etc/hyperledger/fabric ---> Using cache ---> d178958f12eb Step 15/22 : VOLUME /etc/hyperledger/fabric ---> Using cache ---> 2226ab92bc5d Step 16/22 : VOLUME /var/hyperledger ---> Using cache ---> e3330f1f72a6 Step 17/22 : COPY --from=orderer /go/src/github.com/hyperledger/fabric/.build/bin /usr/local/bin ---> Using cache ---> 994e97b54f3f Step 18/22 : COPY --from=orderer /go/src/github.com/hyperledger/fabric/sampleconfig/msp ${FABRIC_CFG_PATH}/msp ---> Using cache ---> 4e74ee5bcd24 Step 19/22 : COPY --from=orderer /go/src/github.com/hyperledger/fabric/sampleconfig/orderer.yaml ${FABRIC_CFG_PATH} ---> Using cache ---> 483cff75c358 Step 20/22 : COPY --from=orderer /go/src/github.com/hyperledger/fabric/sampleconfig/configtx.yaml ${FABRIC_CFG_PATH} ---> Using cache ---> 79573018a29a Step 21/22 : EXPOSE 7050 ---> Using cache ---> 10eb3a24cc1b Step 22/22 : CMD  "orderer"  ---> Using cache ---> e4255807a299 Successfully built e4255807a299 Successfully tagged hyperledger/fabric-orderer:latest docker tag hyperledger/fabric-orderer hyperledger/fabric-orderer:2.0.0 docker tag hyperledger/fabric-orderer hyperledger/fabric-orderer:amd64-2.0.0-snapshot-d9b0ac2 Docker:  building baseos image docker build --force-rm  -f images/peer/Dockerfile \ 	--target base \ 	--build-arg GO_VER=1.12.7 \ 	--build-arg ALPINE_VER=3.10 \ 	-t hyperledger/fabric-baseos images/peer Sending build context to Docker daemon  3.072kB Step 1/6 : ARG GO_VER Step 2/6 : ARG ALPINE_VER Step 3/6 : FROM alpine:${ALPINE_VER} as base ---> 961769676411 Step 4/6 : RUN apk add --no-cache tzdata ---> Using cache ---> 0709844ebdc3 Step 5/6 : RUN addgroup chaincode && adduser -D -h /chaincode -G chaincode chaincode ---> Using cache ---> 591dcb2ab4cd Step 6/6 : USER chaincode ---> Using cache ---> 318a55bd4309 Successfully built 318a55bd4309 Successfully tagged hyperledger/fabric-baseos:latest docker tag hyperledger/fabric-baseos hyperledger/fabric-baseos:2.0.0 docker tag hyperledger/fabric-baseos hyperledger/fabric-baseos:amd64-2.0.0-snapshot-d9b0ac2 Docker:  building ccenv image docker build --force-rm  -f images/ccenv/Dockerfile \ 	--build-arg GO_VER=1.12.7 \ 	--build-arg ALPINE_VER=3.10 \ 	 \ 	-t hyperledger/fabric-ccenv . Sending build context to Docker daemon  201.5MB Step 1/8 : ARG GO_VER Step 2/8 : ARG ALPINE_VER Step 3/8 : FROM golang:${GO_VER}-alpine${ALPINE_VER} ---> 6b21b4c6e7a3 Step 4/8 : RUN apk add --no-cache 	g++ 	gcc 	musl-dev 	git; ---> Using cache ---> 750786734c23 Step 5/8 : RUN mkdir -p /chaincode/output /chaincode/input ---> Using cache ---> 816d9821cf4c Step 6/8 : RUN addgroup -g 500 chaincode && adduser -u 500 -D -h /home/chaincode -G chaincode chaincode ---> Using cache ---> 312ae08886af Step 7/8 : RUN chown -R chaincode:chaincode /chaincode ---> Using cache ---> 5bed6c88225b Step 8/8 : USER chaincode ---> Using cache ---> 8402f0e9069b Successfully built 8402f0e9069b Successfully tagged hyperledger/fabric-ccenv:latest docker tag hyperledger/fabric-ccenv hyperledger/fabric-ccenv:2.0.0 docker tag hyperledger/fabric-ccenv hyperledger/fabric-ccenv:amd64-2.0.0-snapshot-d9b0ac2 Docker:  building buildenv image docker build --force-rm  -f images/buildenv/Dockerfile \ 	--build-arg GO_VER=1.12.7 \ 	--build-arg ALPINE_VER=3.10 \ 	 \ 	-t hyperledger/fabric-buildenv . Sending build context to Docker daemon  201.5MB Step 1/12 : ARG GO_VER Step 2/12 : ARG ALPINE_VER Step 3/12 : FROM golang:${GO_VER}-alpine${ALPINE_VER} as golang ---> 6b21b4c6e7a3 Step 4/12 : RUN apk add --no-cache 	gcc 	musl-dev 	git 	bash 	curl 	make; ---> Using cache ---> ef1981b52a00 Step 5/12 : ADD . $GOPATH/src/github.com/hyperledger/fabric ---> 1579b8a109ef Step 6/12 : WORKDIR $GOPATH/src/github.com/hyperledger/fabric ---> Running in 70061dff446b Removing intermediate container 70061dff446b ---> d76b171bb72e Step 7/12 : ENV EXECUTABLES go git curl ---> Running in 0ad751b40cbe Removing intermediate container 0ad751b40cbe ---> cd88836335f2 Step 8/12 : RUN make gotools ---> Running in 1e1a56f68d77 make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/maxbrunsfeld/counterfeiter -> counterfeiter make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/golang/dep v0.5.3 -> dep make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building golang.org/x/lint/golint -> golint GOBIN=/go/bin go install ./vendor/golang.org/x/lint/golint make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building golang.org/x/tools/cmd/goimports -> goimports GOBIN=/go/bin go install ./vendor/golang.org/x/tools/cmd/goimports make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/golang/protobuf/protoc-gen-go -> protoc-gen-go GOBIN=/go/bin go install ./vendor/github.com/golang/protobuf/protoc-gen-go make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/onsi/ginkgo/ginkgo -> ginkgo GOBIN=/go/bin go install ./vendor/github.com/onsi/ginkgo/ginkgo make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/axw/gocov/gocov -> gocov make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/AlekSi/gocov-xml -> gocov-xml make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/client9/misspell/cmd/misspell -> misspell make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/vektra/mockery/cmd/mockery -> mockery make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' make 1 : Entering directory '/go/src/github.com/hyperledger/fabric' Building github.com/estesp/manifest-tool -> manifest-tool make 1 : Leaving directory '/go/src/github.com/hyperledger/fabric' Removing intermediate container 1e1a56f68d77 ---> 6ff2b999a848 Step 9/12 : FROM golang:${GO_VER}-alpine ---> 6b21b4c6e7a3 Step 10/12 : RUN apk add --no-cache 	gcc 	musl-dev 	git 	bash 	protobuf-dev 	make; ---> Using cache ---> fdc82bd67728 Step 11/12 : COPY --from=golang /go/bin /usr/local/bin ---> Using cache ---> 132a4a21a781 Step 12/12 : ENV GOCACHE "/tmp" ---> Using cache ---> 87561e3861f7 Successfully built 87561e3861f7 Successfully tagged hyperledger/fabric-buildenv:latest docker tag hyperledger/fabric-buildenv hyperledger/fabric-buildenv:2.0.0 docker tag hyperledger/fabric-buildenv hyperledger/fabric-buildenv:amd64-2.0.0-snapshot-d9b0ac2 Docker:  building tools image docker build --force-rm  -f images/tools/Dockerfile \ 	--build-arg GO_VER=1.12.7 \ 	--build-arg ALPINE_VER=3.10 \ 	 \ 	-t hyperledger/fabric-tools . Sending build context to Docker daemon  201.5MB Step 1/15 : ARG GO_VER Step 2/15 : ARG ALPINE_VER Step 3/15 : FROM golang:${GO_VER}-alpine as golang ---> 6b21b4c6e7a3 Step 4/15 : RUN apk add --no-cache 	gcc 	musl-dev 	git 	bash 	make; ---> Using cache ---> ec959b41d2c5 Step 5/15 : ADD . $GOPATH/src/github.com/hyperledger/fabric ---> Using cache ---> c52c960a6718 Step 6/15 : WORKDIR $GOPATH/src/github.com/hyperledger/fabric ---> Using cache ---> fb27fb2b312f Step 7/15 : ENV EXECUTABLES go git ---> Using cache ---> bad6be7234bd Step 8/15 : FROM golang as tools ---> bad6be7234bd Step 9/15 : RUN make configtxgen configtxlator cryptogen peer discover idemixgen ---> Running in 42a3fa5a17da .build/bin/configtxgen CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/configtxgen/metadata.CommitSHA=d9b0ac2c3" github.com/hyperledger/fabric/cmd/configtxgen Binary available as .build/bin/configtxgen .build/bin/configtxlator CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/configtxlator/metadata.CommitSHA=d9b0ac2c3" github.com/hyperledger/fabric/cmd/configtxlator Binary available as .build/bin/configtxlator .build/bin/cryptogen CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/cryptogen/metadata.CommitSHA=d9b0ac2c3" github.com/hyperledger/fabric/cmd/cryptogen Binary available as .build/bin/cryptogen .build/bin/peer CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=2.0.0 -X github.com/hyperledger/fabric/common/metadata.CommitSHA=d9b0ac2c3 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.15 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger" github.com/hyperledger/fabric/cmd/peer Binary available as .build/bin/peer .build/bin/discover CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/discover/metadata.Version=2.0.0-snapshot-d9b0ac2c3" github.com/hyperledger/fabric/cmd/discover Binary available as .build/bin/discover .build/bin/idemixgen CGO_CFLAGS=" " GOBIN=/go/src/github.com/hyperledger/fabric/.build/bin go install -tags "" -ldflags "-X github.com/hyperledger/fabric/common/tools/idemixgen/metadata.CommitSHA=d9b0ac2c3" github.com/hyperledger/fabric/common/tools/idemixgen Binary available as .build/bin/idemixgen Removing intermediate container 42a3fa5a17da ---> b3a60cd74ed6 Step 10/15 : FROM golang:${GO_VER}-alpine ---> 6b21b4c6e7a3 Step 11/15 : RUN apk add --no-cache 	tzdata 	jq 	bash; ---> Using cache ---> 59811de6544b Step 12/15 : ENV FABRIC_CFG_PATH /etc/hyperledger/fabric ---> Using cache ---> 3bde90eaacea Step 13/15 : VOLUME /etc/hyperledger/fabric ---> Using cache ---> 6f902819f9f7 Step 14/15 : COPY --from=tools /go/src/github.com/hyperledger/fabric/.build/bin /usr/local/bin ---> 6d32b79bc93f Step 15/15 : COPY --from=tools /go/src/github.com/hyperledger/fabric/sampleconfig ${FABRIC_CFG_PATH} ---> abec1d6e9ff7 Successfully built abec1d6e9ff7 Successfully tagged hyperledger/fabric-tools:latest docker tag hyperledger/fabric-tools hyperledger/fabric-tools:2.0.0 docker tag hyperledger/fabric-tools hyperledger/fabric-tools:amd64-2.0.0-snapshot-d9b0ac2 {code}  ></description> </Issue>
