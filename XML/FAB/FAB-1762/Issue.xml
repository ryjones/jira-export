<Issue id="14191" key="FAB-1762" number="1762" project="10002" reporter="denyeart" assignee="denyeart" creator="denyeart" type="10003" summary="Add leveldb history database to store index of historical key updates" priority="3" resolution="10000" status="6" created="2017-01-19 20:02:47.0" updated="2018-07-20 14:11:17.0" resolutiondate="2017-01-27 20:00:24.0" votes="0" watches="3" workflowId="37113"> <description><! CDATA  FAB-1762  Refactor couchdb history db to leveldb.  - Utilize leveldb for history of keys instead of couchdb  - Single leveldb database serves all chains to optimize footprint (same structure as leveldb block index database and leveldb state database)  - Block commit writes a history key for each key/value that is updated in a tran, in the form: ns~key~blocknum~trannum  - History database is an index for history of key writes over time.  The key values are not included to reduce size of database.  - GetHistoryForKey() finds all records starting with ~ns~key and returns the transactions that updated the key.  - Subsequent changeset will lookup and return the txid and historic value from the block storage.  Client can  then GetTransactionById to see the historic transactions.  - Since history db size is much reduced, it is now enabled by default in core.yaml.  - Upon crash recovery, ledger initialization will ensure that both state db and history db in sync with block storage  Reused existing test logic, therefore the changeset is relatively large to ensure tests still pass.    ></description> </Issue>
