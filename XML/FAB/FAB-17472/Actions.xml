<Action id="67879" issue="44261" author="angelo.decaro" type="comment" created="2020-02-10 08:48:29.0" updateauthor="angelo.decaro" updated="2020-02-10 15:59:54.0"> <body><! CDATA  ~denyeart , would setting *Certificate* to empty be a viable workaround? I say this because you are pointing to a case where both CAs can produce, let's say, *client* certificates. If this is the case then *not* setting *Certificate* is just fine.  Instead, if you consider the following example then making *Certificate* ** a slice seems necessary: There is an MSP with threes CAs *but* **only two of them can issue *client* certificate.   What do you think?  ></body> </Action>
<Action id="67890" issue="44261" author="denyeart" type="comment" created="2020-02-10 18:25:39.0" updateauthor="denyeart" updated="2020-02-10 18:31:30.0"> <body><! CDATA I think the proposal to leave Certificate blank for multi- ca cert support of Node OUs is not ideal.  It would leave a somewhat awkward story, for example look at the doc at: https://hyperledger-fabric.readthedocs.io/en/latest/msp.html#organizational-units  It would mean that if configuring OrganizationalUnitIdentifiers, when adding a 2nd CA cert you MUST specify both Certificates (certificate can't be blank). And if configuring NodeOUs, when adding a 2nd CA cert, you MUST NOT specify a Certificate (certificate can be blank or single entry only).  That being said, I also expect forcing the support for arrays of ca certs in the Node OU section will require a capability change and require ALL users to re-visit their configs when the capability is enabled.  So the pain of a change for all may be reason enough not to add the multi- ca cert support at this time.  But I'll defer to  ~ales  and  ~angelo.decaro , in case you have another suggestion that I'm missing.  ></body> </Action>
<Action id="67952" issue="44261" author="angelo.decaro" type="comment" body="I agree, this change will require a new capability. We can just make sure to add support for both configuration types." created="2020-02-14 13:58:34.0" updateauthor="angelo.decaro" updated="2020-02-14 13:58:34.0"/>
<Action id="67959" issue="44261" author="denyeart" type="comment" created="2020-02-14 17:53:54.0" updateauthor="denyeart" updated="2020-02-14 18:03:20.0"> <body><! CDATA Discussed further with Angelo and Alessandro. Decision is to improve the documentation and samples to indicate that Certificate can be left blank in scenarios where any of the org's CAs can issue the NodeOU classification.  PR: https://github.com/hyperledger/fabric/pull/672  ></body> </Action>
<Action id="71302" issue="44261" author="denyeart" type="comment" created="2021-01-23 01:16:51.0" updateauthor="denyeart" updated="2021-01-23 01:17:03.0"> <body><! CDATA Documentation was updated to indicate that you can leave nodeou Certificate unset in order to allow OUs issued from any of the org's CAs: {code:java} Certificate: (Optional) Set this to the path of the CA or intermediate CA certificate under which client (peer, admin or orderer) identities should be validated. The field is relative to the MSP root folder. Only a single Certificate can be specified. If you do not set this field, then the identities are validated under any CA defined in the organization’s MSP configuration, which could be desirable in the future if you need to add other CA or intermediate certificates.{code}  ></body> </Action>
