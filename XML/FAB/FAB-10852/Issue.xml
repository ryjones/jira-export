<Issue id="31354" key="FAB-10852" number="10852" project="10002" reporter="g-dazwilkin" creator="g-dazwilkin" type="10001" summary="Optimized Docker Images" priority="3" resolution="10002" status="6" created="2018-06-25 19:19:45.0" updated="2019-09-22 08:25:24.0" resolutiondate="2019-09-20 11:01:01.0" votes="0" watches="2" workflowId="35892"> <description><! CDATA Docker images associated with Fabric are VERY large >1GB.  In a scenario where these images aren't cached|cacheable pulling the set is a substantial volume of bandwidth. In environments where Fabric is deployed to ephemeral machines or a dynamically scaling environment, moving these images around is impeded by their size. The broader surface of functionality additionally broadens the attack|vulnerability surface.  The base is Ubuntu and image have a JVM added. IIUC not all the images require this broad set of OS|application functionality; the pure Golang components could be statically built, combined with a minimal init and delivered as 2 process images. h3. Propose * Consider reducing the base image – ideally to scratch or perhaps Google's distroless * Add minimal additional runtimes e.g. JVM only to images that require it * Consider busybox as a self-contained and minimal toolset for debugging variants  ></description> </Issue>
