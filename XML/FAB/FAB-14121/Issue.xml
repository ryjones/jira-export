<Issue id="37546" key="FAB-14121" number="14121" project="10002" reporter="sykesm" creator="sykesm" type="10004" summary="Intermittent test failure in integration tests - panic in cft_test" priority="3" resolution="10002" status="6" created="2019-02-08 16:16:58.0" updated="2019-04-01 14:07:53.0" resolutiondate="2019-04-01 14:07:53.0" votes="0" watches="3" workflowId="49157"> <description><! CDATA Encountered in CR build for https://gerrit.hyperledger.org/r/c/29176/2  {code} 15:43:50 EndToEnd Crash Fault Tolerance when an orderer is behind the latest snapshot on leader catches up using the block stored in snapshot  15:43:50 /w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/cft_test.go:151 15:43:50 ------------------------------ 15:44:59 panic:  15:44:59 Your test failed. 15:44:59 Ginkgo panics to prevent subsequent assertions from running. 15:44:59 Normally Ginkgo rescues this panic so you shouldn't see it. 15:44:59  15:44:59 But, if you make an assertion in a goroutine, Ginkgo can't capture the panic. 15:44:59 To circumvent this, you should call 15:44:59  15:44:59 	defer GinkgoRecover() 15:44:59  15:44:59 at the top of the goroutine that caused this panic. 15:44:59  15:44:59  15:44:59 goroutine 5024  running : 15:44:59 github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo.Fail(0xc00091b500, 0x3274, 0xc0018c50c8, 0x1, 0x1) 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/ginkgo/ginkgo_dsl.go:257 +0xc8 15:44:59 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match.func1(0x10efb32, 0x9) 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:130 +0x3ad 15:44:59 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc001b57e40, 0x11e31c0, 0xc0015f3d00, 0xc000475f01, 0x0, 0x0, 0x0, 0xc000562140) 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:152 +0x43d 15:44:59 github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc001b57e40, 0x11e31c0, 0xc0015f3d00, 0x0, 0x0, 0x0, 0xc001b57e40) 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:49 +0x81 15:44:59 github.com/hyperledger/fabric/integration/e2e.findLeader.func1(0xc0010d7ce0, 0x1126a98) 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/cft_test.go:385 +0x12e 15:44:59 github.com/hyperledger/fabric/integration/e2e.findLeader.func2(0xc0013f02d0, 0x1126a90, 0xc001496000, 0xc0010d7ce0) 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/cft_test.go:404 +0x5a 15:44:59 created by github.com/hyperledger/fabric/integration/e2e.findLeader 15:44:59 	/w/workspace/fabric-verify-integration-tests-x86_64/gopath/src/github.com/hyperledger/fabric/integration/e2e/cft_test.go:398 +0xd3 {code}  Logs are attached.  ></description> </Issue>
