<Action id="22950" issue="15968" author="nishi" type="comment" created="2017-04-24 18:20:07.0" updateauthor="nishi" updated="2017-04-24 18:31:45.0"> <body><! CDATA f) Possible calls to system chaincodes:  Say we have mycc1 = from where we are calling system chaincodes qscc=system chaincode we are interested to call from mycc1 channel1 = channel on which mycc1 is instantiated fromc channel2 = channel2 which has other chaincodes instantiated  To my knowledge system chaincode do not live on any channel, they are instantiated during some boot time, and they might be queried as  1. on the same chain as mycc1  {code} peer chaincode query -C "" -n qscc -c ' {"Args": "GetChainInfo","channel1" } {code} 2. on a separate chain from mycc1 {code} peer chaincode query -C channel1 -n mycc1 -c " {"Args": "query","qscc", "GetChainInfo", "channel2" } {code}  3. chainless functions of theirs (??)  g) One system chaincode calling another system chaincode (??)  h. Installing chaincodes with same name but different metadata on different peers, and attempting to instantiate and invoke afterwards these chaincodes on each of the peer.  How to pass different metadata on each peer from CLI? Is this the first call before installing chaincode?  Do rest of the calls (install, instantiate, join, invoke/query) remain the same?  i) Configuration updates of multiple components on a chain  what configuration updates? How can they be done?  ></body> </Action>
<Action id="72109" issue="15968" author="vramaiitkgp" type="comment" created="2021-10-20 09:56:15.0" updateauthor="vramaiitkgp" updated="2021-10-20 09:56:15.0"> <body><! CDATA Can I request this issue to be reopened? We are facing the need for such a feature (to be precise, invoking the CSCC from another chaincode to fetch the latest channel configuration). From what we can see in the CSCC code, it disallows such a cross-chaincode invocation ( https://github.com/hyperledger/fabric/blob/main/core/scc/cscc/configure.go#L119...L124).  I understand there are safety issues involved in invoking the CSCC or any other system chaincode if write sets are created in these chaincodes' namespaces, but is it possible to remove the filter for invocations that only produce read sets?  Â   In the absence of this feature, any chaincode that needs the channel configuration must depend on Layer-2 agents, which presents safety and synchronization issues.  ></body> </Action>
