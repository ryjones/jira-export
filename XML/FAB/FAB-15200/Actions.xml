<Action id="59276" issue="39340" author="mastersingh24" type="comment" body="You actually need to start the new orderer with the same genesis block used for the other orderer nodes.  So you&apos;ll need to get block 0 for the system channel (testchainid) from one of the existing orderers and then use that as the genesis block for the new orderer." created="2019-04-16 09:42:29.0" updateauthor="mastersingh24" updated="2019-04-16 09:42:29.0"/>
<Action id="59278" issue="39340" author="xwu" type="comment" created="2019-04-16 11:40:37.0" updateauthor="xwu" updated="2019-04-16 11:40:37.0"> <body><! CDATA  ~mastersingh24  Thank you very much.  The new orderer's genesis block in the network is the same with the other two old orderer nodes, which does not include the information about the new orderer info(Orderer3MSP ).  ></body> </Action>
<Action id="59354" issue="39340" author="xwu" type="comment" created="2019-04-20 10:40:05.0" updateauthor="xwu" updated="2019-04-20 10:40:05.0"> <body><! CDATA When I set the log spec to debug, we can see the following log:  orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  policies  func1 -> DEBU 285 Evaluation Failed: Only 0 policies were satisfied, but needed 1 of  {color:#FF0000} OrdererOrg1.Writers OrdererOrg2.Writers{color}   orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  policies  Evaluate -> DEBU 286 Signature set did not satisfy policy /Channel/Orderer/Writers orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  policies  Evaluate -> DEBU 287 == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Orderer/Writers orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  policies  func1 -> DEBU 288 Evaluation Failed: Only 0 policies were satisfied, but needed 1 of   {color:#FF0000}Orderer.Writers Consortiums.Writers{color}   orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  policies  Evaluate -> DEBU 289 Signature set did not satisfy policy /Channel/Writers orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  policies  Evaluate -> DEBU 28a == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Writers orderer0.ord3.example.com | 2019-04-20 18:09:01.040 CST  orderer.consensus.kafka  processMessagesToBlocks -> WARN 28b  channel: testchainid  Error when processing incoming message of type REGULAR = discarding bad config message because = Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied     In the orderer.yaml file, we can see this sentence:  {color:#FF0000}IMPORTANT:{color} The local MSP ID of an orderer needs to match the MSP ID of one of the organizations defined in the orderer system channel's  /Channel/Orderer configuration.  But the Orderer3MSP is not in the configuration, which is added later. So the orderer node has no policy to write the config update block, Then it doesn't know the created channel's information and doesn't consume the msgs from kafka.  You can see the ProcessConfigUpdateMsg function in orderer/common/msgprocessor/systemchannel.go, which filters the config msg.  {color:#FF0000}err = s.StandardChannel.filters.Apply(wrappedOrdererTransaction){color} {color:#FF0000}if err != nil {{color} {color:#FF0000} return nil, 0, err{color} {color:#FF0000}}{color}     {color:#ff0000}Therefor I think this problem is a bug, which should be fixed, otherwise no new orderer's org can be added to the network which was upgraded from v1.0 to v1.1/v1.2/v1.3/v1.4!{color}  ></body> </Action>
<Action id="60630" issue="39340" author="guoger" type="comment" body="This looks like a duplicate of FAB-10639" created="2019-06-04 03:20:41.0" updateauthor="guoger" updated="2019-06-04 03:20:41.0"/>
<Action id="60631" issue="39340" author="guoger" type="comment" created="2019-06-04 03:38:44.0" updateauthor="guoger" updated="2019-06-04 03:38:44.0"> <body><! CDATA  ~xwu  you'll need to copy ledger data to new orderer to avoid bootstrapping from genesis block.  Please close the jira if you find it working, or comment further. thx!  ></body> </Action>
<Action id="60632" issue="39340" author="xwu" type="comment" created="2019-06-04 06:02:41.0" updateauthor="xwu" updated="2019-06-04 06:02:41.0"> <body><! CDATA  ~guoger  Thank you very much!  In fact, the problem is the same with FAB-10639.  If the new orderer starts with old ledger, it works fine.  ></body> </Action>
