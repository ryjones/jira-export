<Issue id="39340" key="FAB-15200" number="15200" project="10002" reporter="xwu" creator="xwu" type="10004" summary="orderer discards the config message" priority="2" resolution="10002" status="6" created="2019-04-16 03:29:56.0" updated="2019-06-09 08:33:36.0" resolutiondate="2019-06-09 08:33:23.0" votes="0" watches="4" workflowId="52219"> <description><! CDATA I have a fabric network running in kafka model which is based on 1.0.4 version and inclueds two orderers belonging to two organizations. The network has a system channel named testchainid and a custom channel named mychannel, and a smart contract is installed in the cutom channel. After some data was put to the network, I want to upgrage to fabric 1.1. Acccord to the tutorial( https://hyperledger-fabric.readthedocs.io/en/release-1.1/upgrading_your_network_tutorial.html ), the network was runnint with fabric 1.1, and the smart contract works fine.  Then I add a new orderer(Orderer3MSP ) belongs to a new organization in the fabric network and start the orderer as a new docker, which throws some errors when it consues some old messages from kafka. The log info is as follows:  {code} 2019-04-14 12:39:36.186 CST  orderer.common.server  Start -> INFO 006 Beginning to serve requests 2019-04-14 12:39:36.186 CST  orderer.consensus.kafka  setupProducerForChannel -> INFO 007  channel: testchainid  Setting up the producer for this channel... 2019-04-14 12:39:36.189 CST  orderer.consensus.kafka  startThread -> INFO 008  channel: testchainid  Producer set up successfully 2019-04-14 12:39:36.189 CST  orderer.consensus.kafka  sendConnectMessage -> INFO 009  channel: testchainid About to post the CONNECT message... 2019-04-14 12:39:36.199 CST  orderer.consensus.kafka  startThread -> INFO 00a  channel: testchainid  CONNECT message posted successfully 2019-04-14 12:39:36.199 CST  orderer.consensus.kafka  setupParentConsumerForChannel -> INFO 00b  channel: testchainid  Setting up the parent consumer for this channel... 2019-04-14 12:39:36.204 CST  orderer.consensus.kafka  startThread -> INFO 00c  channel: testchainid  Parent consumer set up successfully 2019-04-14 12:39:36.204 CST  orderer.consensus.kafka  setupChannelConsumerForChannel -> INFO 00d  channel: testchainid  Setting up the channel consumer for this channel (start offset: -2)... 2019-04-14 12:39:36.206 CST  orderer.consensus.kafka  startThread -> INFO 00e  channel: testchainid  Channel consumer set up successfully 2019-04-14 12:39:36.206 CST  orderer.consensus.kafka  startThread -> INFO 00f  channel: testchainid  Start phase completed successfully 2019-04-14 12:39:36.208 CST  orderer.consensus.kafka  processRegular -> WARN 010  channel: testchainid  This orderer is running in compatibility mode 2019-04-14 12:39:36.221 CST  cauthdsl  deduplicate -> {color:#FF0000}ERRO 011 Principal deserialization failure (MSP Orderer3MSP is unknown) for identity 0{color} 2019-04-14 12:39:36.221 CST  cauthdsl  deduplicate -> {color:#FF0000}ERRO 012 Principal deserialization failure (MSP Orderer3MSP is unknown) for identity 0{color} 2019-04-14 12:39:36.221 CST  orderer.consensus.kafka  processMessagesToBlocks ->{color:#FF0000} WARN 013  channel: testchainid  Error when processing incoming message of type REGULAR = discarding bad config message because = Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied{color} 2019-04-14 12:39:36.221 CST  orderer.consensus.kafka  processRegular -> WARN 014  channel: testchainid  This orderer is running in compatibility mode 2019-04-14 12:39:36.230 CST  cauthdsl  deduplicate -> {color:#FF0000}ERRO 015 Principal deserialization failure (MSP Orderer3MSP is unknown) for identity 0{color} 2019-04-14 12:39:36.231 CST  cauthdsl  deduplicate -> {color:#FF0000}ERRO 016 Principal deserialization failure (MSP Orderer3MSP is unknown) for identity 0{color} 2019-04-14 12:39:36.231 CST  orderer.consensus.kafka  processMessagesToBlocks -> {color:#FF0000}WARN 017  channel: testchainid  Error when processing incoming message of type REGULAR = discarding bad config message because = Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied{color} 2019-04-14 12:39:36.231 CST  orderer.consensus.kafka  processRegular -> WARN 018  channel: testchainid  This orderer is running in compatibility mode 2019-04-14 12:39:36.231 CST  orderer.consensus.kafka  processMessagesToBlocks -> WARN 019  channel: testchainid  {color:#FF0000}Error when processing incoming message of type REGULAR = discarding bad config message because = error authorizing update: error validating ReadSet: readset expected key  Group  /Channel/Orderer at version 1, but got version 0{color} 2019-04-14 12:39:36.231 CST  orderer.consensus.kafka  processRegular -> WARN 01a  channel: testchainid  This orderer is running in compatibility mode 2019-04-14 12:39:36.232 CST  orderer.consensus.kafka  processMessagesToBlocks -> WARN 01b  channel: testchainid  {color:#FF0000}Error when processing incoming message of type REGULAR = discarding bad config message because = error authorizing update: error validating ReadSet: readset expected key  Group  /Channel at version 1, but got version 0{color} {code}    {color:#172b4d}And while I upgrade the network to fabric 1.4, the added orderer does not work properly and the error info is consistent with the above information.{color}  ></description> </Issue>
