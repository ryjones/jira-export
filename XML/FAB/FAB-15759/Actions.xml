<Action id="61589" issue="40684" author="yacovm" type="comment" body="This is interesting. Can you be a bit more specific? What kind of query do you invoke with the discover CLI? do you pass a channel name or not?" created="2019-07-10 20:52:24.0" updateauthor="yacovm" updated="2019-07-10 20:52:24.0"/>
<Action id="61590" issue="40684" author="yacovm" type="comment" created="2019-07-10 21:01:27.0" updateauthor="yacovm" updated="2019-07-10 21:01:27.0"> <body><! CDATA {quote}So I am wondering why the results are different between gossip_membership_total_peers_known status and the discover cli tool. {quote}    Can you post some more info, like what exactly is the command you're using, the flags, and do you see all the peers in the response or only a subset, etc. ?  I'm asking because you can ask the discovery service for a channel scoped view or a non channel scoped view, and the gossip membership tracking is per channel.  ></body> </Action>
<Action id="61846" issue="40684" author="jooskim1" type="comment" created="2019-07-16 09:46:01.0" updateauthor="jooskim1" updated="2019-07-17 04:14:36.0"> <body><! CDATA  ~yacovm   Hi,   Below is a config yaml file for using discover cli. {code:java} version: 0 tlsconfig:   certpath: ""   keypath: ""   peercacertpath: ""   timeout: 0s signerconfig:   mspid: PRODMSPID   identitypath: /etc/hyperledger/fabric/admin/msp/signcerts/cert.pem   keypath: /etc/hyperledger/fabric/admin/msp/keystore/secret_key{code} Below is the command that I used for getting the isolated peer's discovery information. {code:java} discover peers --configFile conf.yaml --server ISOLOATED.PEER.ADDRESS:PORT discover peers --configFile conf.yaml --server ISOLOATED.PEER.ADDRESS:PORT --channel=PRODCHANNEL discover peers -configFile conf.yaml --server  ISOLOATED.PEER.ADDRESS:PORT -MSP=PRODCHANNELMSP {code} Thanks.  ></body> </Action>
<Action id="61847" issue="40684" author="yacovm" type="comment" created="2019-07-16 09:53:53.0" updateauthor="yacovm" updated="2019-07-16 09:54:19.0"> <body><! CDATA you know, you can use "\{code}" tags to make the above commands not be strike-through-ed.   so in both *discover peers* commands with channel and without channel specification you see the peers, correct?  ></body> </Action>
<Action id="61850" issue="40684" author="jooskim1" type="comment" created="2019-07-16 10:04:04.0" updateauthor="jooskim1" updated="2019-07-16 10:04:04.0"> <body><! CDATA  ~yacovm   Yes.  I used all three commands mentioned in above comment, and I was able to see the peers on the gossip, when I put the isolated peer address as a value for *--server* flag.   ></body> </Action>
<Action id="61851" issue="40684" author="yacovm" type="comment" created="2019-07-16 10:13:08.0" updateauthor="yacovm" updated="2019-07-16 10:13:08.0"> <body><! CDATA This is interesting... can you invoke the commands in a loop many times and see if there is a difference in the number of peers shown?     Do you see connections (with *netstat* ) to the peers? If so, then it seems that the peers aren't really isolated, as they are seen in the membership view and connections are still established.  ></body> </Action>
<Action id="61889" issue="40684" author="jooskim1" type="comment" body="My team is doing a real service using hyperledger fabric. When the isolating situation occurs, the service has a serious problem, thus my team check the gossip state using *discover command* every 5 seconds. If any peer is out from the discovery member, we restart the isolated peer right after detecting. So it&apos;s hard to checkout the *netstat* at the isolated time. The problem is that there is a time gap between the gossip state information from using discover command and from prometheus metric. For example, once we find out the isolated situation by using discover command, but at the same time, the prometheus metric has no changes and after a while prometheus metric shows changed number in gossip membership." created="2019-07-17 05:17:27.0" updateauthor="jooskim1" updated="2019-07-17 05:17:27.0"/>
<Action id="61892" issue="40684" author="yacovm" type="comment" created="2019-07-17 07:22:06.0" updateauthor="yacovm" updated="2019-07-17 07:22:06.0"> <body><! CDATA {quote}For example, once we find out the isolated situation by using discover command {quote}    I don't understand, I thought you said that in the discover output they are always online? {quote}   the prometheus metrics from the isolated peer showed the value of gossip_membership_total_peers_known is 0. However, at the same time, from discover cli from the isolated peer showed this peer had all other peers on the network. {quote}  ></body> </Action>
<Action id="61908" issue="40684" author="jooskim1" type="comment" created="2019-07-17 12:42:39.0" updateauthor="jooskim1" updated="2019-07-17 12:42:39.0"> <body><! CDATA What my team is curious about is that why there is a time gap ( seconds to minutes ) between gossip state information from prometheus metric and the information from the discover command, not which information changed first. My team need to detect the beginning of the isolating in the organization what we are managing, so we judge the beginning of the isolating based on the discovery information from the discover command.  The reason why we use discover command is that the value of gossip state in prometheus is the sum of gossip members from multiple organizations.     ></body> </Action>
<Action id="62138" issue="40684" author="jooskim1" type="comment" created="2019-07-26 03:29:43.0" updateauthor="jooskim1" updated="2019-07-26 03:29:43.0"> <body><! CDATA  ~yacovm   I think when the blockchain network has a problems, the discover command leaves the peer from the membership, but the peer is under the problem, therefore the prometheus does not work correctly.  So I think there is no problem closing this issue.  ></body> </Action>
<Action id="62139" issue="40684" author="yacovm" type="comment" body="Are you saying that the peer has problems and therefore it doesn&apos;t report to prometheus? I don&apos;t understand" created="2019-07-26 05:10:14.0" updateauthor="yacovm" updated="2019-07-26 05:10:14.0"/>
<Action id="62147" issue="40684" author="jooskim1" type="comment" body="I parsed values from prometheus, but when a peer container stopped the peer container does not offer prometheus values anymore, thus there is a gap between parsed prometheus values and values from discover command. Thus there is no problem closing this issue. It seems like I have no rights for closing the issue. Also I will monitor the value differences when the peer loses its gossip network and recreate an issue." created="2019-07-26 07:02:06.0" updateauthor="jooskim1" updated="2019-07-26 07:02:06.0"/>
