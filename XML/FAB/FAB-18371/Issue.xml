<Issue id="46412" key="FAB-18371" number="18371" project="10002" reporter="JIRAUSER20661" creator="JIRAUSER20661" type="10004" summary="Peers misaligned when uploading data and never gets realigned due to missing blocks" priority="1" resolution="10201" status="6" created="2020-12-10 10:25:37.0" updated="2020-12-11 20:48:40.0" resolutiondate="2020-12-10 15:34:22.0" votes="0" watches="2" workflowId="60349" archived="N"> <description><! CDATA My setup: cluster of 3 machines with HLF 2.3.0 (but tested also with 2.2.0), on each machine 1 orderer, 1 peer, 1 ca. Peer belongs to the same organization.  Both orderers and peers have a leader and peer's leader sends blocks to others via gossip protocol.  This same cluster was correctly working in 1.4.3 and never reported such kind of issues.  Â   I have a data uploader which constantly sends data to the blockchain.  It seems that when the operation number is high and a lot of performances are needed, the follower peers are not able to receive new blocks from the leader and they get misaligned.  Â   On peer2, which is follower, I read on the log: * *19:10:16:367 UTC  gossip.state  func1 -> WARN 543f3 0m Block  765420  received from gossip wasn't added to payload buffer: Ledger height is at _{color:#FF0000}765398{color}_, cannot enqueue block with sequence of 765420* * Suddenly after, block *{color:#FF0000}_765398_{color}* is received and the peer re-start aligning himself, but he already collected a lot of blocks, so he start validating them, until: * Block *{color:#4c9aff}765415{color}* is correctly added:  * 34m2020-12-09 19:10:22.086 UTC  kvledger  commit -> INFO 54a1e 0m  cbichannel  Committed block  {color:#4c9aff}765415{color}  with 9 transaction(s) in 25ms (state_validation=1ms block_and_pvtdata_commit=18ms state_commit=3ms) commitHash= 7f27a8efafa07825bbef57b94d17bff9d45c9675746749802c2d38d7679acfe4 * * But suddenly after, I start receiving this error again:  * 33m2020-12-09 19:10:22.169 UTC  gossip.state  func1 -> WARN 54a1f 0m Block  765440  received from gossip wasn't added to payload buffer: Ledger height is at {color:#ff8b00}765416{color}, cannot enqueue block with sequence of 765440* * From now on, the ledger heigth isÂ *{color:#ff8b00}765416{color}* (last block received is {color:#4c9aff}765415{color}) and the peer is not able to enqueue more blocks, even if it is receiving them. * For example, 20 minutes after, I am more than 400 blocks higher on the peer leader:  * 33m2020-12-09 19:39:30.803 UTC  gossip.state  func1 -> WARN 5d1f3 0m Block  770947  received from gossip wasn't added to payload buffer: Ledger height is at {color:#ff8b00}765416{color}, cannot enqueue block with sequence of 770947* * If I look for blockÂ {color:#ff8b00}*765416*{color} on the logs, of course I cannot find the point where it does receive the block, while 417-418 are correctly received but cannot be added due to ledger height (because 765416 is missing). It is clear that a block is missing somehow and the peer is not able to recover it. * In this case I just miss 1 block, but I also experienced casistics where more than 1 block was missing  The only manual fix I found was to stop all the peers and restart as first the one misaligned. In this way it gets aligned by orderers. After that, if I have another peer misaligned, I turn down the one just aligned and I do the same thing with the other. Once they are all aligned, I can bring up all the peers again. Of course this is a manual fix and cannot be a production operation.Â   Â   I had this same cluster and data throughput in 1.4.3 and never had this kind of issues. It seems like a performance issue due to recent versions of HLF. Did anyone notice this bug or is it planned to be fixed?  ></description> </Issue>
