<Issue id="17376" key="FAB-4302" number="4302" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Prevent connection to misconfigured bootstrap peers in gossip" priority="2" resolution="10000" status="6" created="2017-06-01 19:41:28.0" updated="2018-07-20 14:13:04.0" resolutiondate="2017-06-05 22:45:21.0" votes="5" watches="6" workflowId="38774" security="10001"> <description><! CDATA In gossip, a peer may have a  bootstrap set|https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L79  defined at configuration. {code} # Gossip related configuration gossip: # Bootstrap set to initialize gossip with. # This is a list of peers that the peer reaches out to at startup. # Important: The endpoints here have to be endpoints of peers in the same # organization, because the connection establishment process to these peers # exposes the internal endpoint of this peer. bootstrap: 127.0.0.1:7051  # NOTE: orgLeader and useLeaderElection parameters are mutual exclusive # setting both to true would result in the termination of the peer, since this is undefined # state.  # Defines whenever peer will initialize dynamic algorithm for # "leader" selection, where leader is the peer to establish # connection with ordering service and use delivery protocol # to pull ledger blocks from ordering service useLeaderElection: false # Statically defines peer to be an organization "leader", # where this means that current peer will maintain connection # with ordering service and disseminate block across peers in # its own organization orgLeader: true {code}  The role of the bootstrap set is to serve as synchronization point for peer membership convergence. Even though the presence of anchor peers may make it look like there is no need of bootstrap peers, there are cases in which we want to have a bootstrap set: * Currently, a channel creation would most likely not contain any anchor peers at all, and they are to be configured at subsequent config updates. However, in a production environment with real different organizations, the config updates may not occur with temporal proximity, for example - if we have 3 orgs in a channel and the first org creates the first channel, it might take time until the other orgs actually update their anchor peers.  Until that time, we may want the peers in the orgs to still connect to one another, and they could use the bootstrap peers for this. * If peers are configured not to use leader election but instead configured statically to connect (or not to connect) to the ordering service, in the case where the org doesn't have an anchor peer or the anchor peer hasn't been updated via a channel config update - the peers that are configured not to connect to the ordering service, can't find the "leader" peer without bootstrap peers.  In short- the bootstrap peer is still needed at this point, and we can't (and shouldn't) take it out at this point.  However, there is a small problem related to confidentiality with the bootstrap peers - when a peer connects to a bootstrap peer, the code currently assumes that the endpoint given by the network operator is an endpoint of a bootstrap peer of the peer's org. The peer, sends a MembershipRequest message to that bootstrap peer's endpoint and in that message, the internal endpoint of the peer is written. I created FAB-4296 to document that the endpoint(s) should never contain peers of different organizations, otherwise - internal IP addresses of the org may leak to outside organizations.  I think that the gossip should be protect against mis-configurations that have a security implication, and therefore I suggest to make the bootstrap peer connection to use the same mechanism as the anchor peer connection - when a peer connects to an anchor peer, it first performs a handshake (which is authenticated), and learns about the organization of the peer behind the endpoint and only then decides whether to send its internal endpoint or not. Therefore, the fix would be to simply: # Delete the existing code that deals with bootstrap peer connections # Write code similar to the code that deals with anchor peer connection that already exists, that uses the same mechanism for connecting to bootstrap peers, which is secure.  I created https://gerrit.hyperledger.org/r/#/c/10033/ and it's pretty straight forward...     ></description> </Issue>
