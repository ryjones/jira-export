<Action id="44302" issue="30145" author="sambhavdutt" type="comment" created="2018-05-13 21:07:46.0" updateauthor="sambhavdutt" updated="2018-05-13 21:07:46.0"> <body><! CDATA Behave tests are failing in the fabric-test-daily from 11th May due to chaincode error in multiple tests,  *fabric-test Commit: 3de165e*   {code:java} 4:59:07     When a user sets up a channel                                                                                           # steps/endorser_impl.py:49 04:59:07 2018-05-12 04:59:07.876 UTC  common/tools/configtxgen  main -> WARN 001 Omitting the channel ID for configtxgen is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'. 04:59:07 2018-05-12 04:59:07.876 UTC  common/tools/configtxgen  main -> INFO 002 Loading configuration 04:59:07 2018-05-12 04:59:07.914 UTC  common/tools/configtxgen  doOutputChannelCreateTx -> INFO 003 Generating new channel configtx 04:59:07 2018-05-12 04:59:07.914 UTC  common/tools/configtxgen/encoder  NewApplicationGroup -> WARN 004 Default policy emission is deprecated, please include policy specificiations for the application group in configtx.yaml 04:59:07 2018-05-12 04:59:07.915 UTC  common/tools/configtxgen/encoder  NewApplicationOrgGroup -> WARN 005 Default policy emission is deprecated, please include policy specificiations for the application org group Org1ExampleCom in configtx.yaml 04:59:07 2018-05-12 04:59:07.915 UTC  common/tools/configtxgen/encoder  NewApplicationOrgGroup -> WARN 006 Default policy emission is deprecated, please include policy specificiations for the application org group Org2ExampleCom in configtx.yaml 04:59:07 2018-05-12 04:59:07.916 UTC  common/tools/configtxgen  doOutputChannelCreateTx -> INFO 007 Writing new channel tx 04:59:41     And a user deploys chaincode                                                                                            # steps/endorser_impl.py:239 05:05:04       Assertion Failed: The expected chaincode container 27d4f89455a111e889c8fa163ede8983-peer0.org1.example.com-mycc-0 is not running 05:05:04       Captured stdout: 05:05:04       testConfigs: configs/27d4f89455a111e889c8fa163ede8983 05:05:04        /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/27d4f89455a111e889c8fa163ede8983/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/27d4f89455a111e889c8fa163ede8983/behavesystest.tx --channelID behavesystest --timeout 300 --orderer orderer0.example.com:7050 " : {'cli': ''} {code}   *Build Log for Bootstrap* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/349/testReport/bootstrap/Bootstrapping%20Hyperledger%20Fabric/FAB_4776_FAB_4777__Bring_up_a_kafka_based_network_and_check_peers_____1_1_/    ></body> </Action>
<Action id="44433" issue="30145" author="sambhavdutt" type="comment" created="2018-05-15 15:19:04.0" updateauthor="sambhavdutt" updated="2018-05-15 15:19:42.0"> <body><! CDATA The chaincode container fail is blocking the following tests, in daily and smoke tests  *fabric-test-daily-x86_64*  *1. Bootstrap* *2. Chaincode-testing* {code:java} Failing step: And a user deploys chaincode ... failed in 329.698s Location: bootstrap.feature:95 Assertion Failed: The expected chaincode container ccc7af2e580511e8a471fa163e03c637-peer0.org1.example.com-mycc-0 is not running Captured stdout: testConfigs: configs/ccc7af2e580511e8a471fa163e03c637  /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/ccc7af2e580511e8a471fa163e03c637/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/ccc7af2e580511e8a471fa163e03c637/behavesystest.tx --channelID behavesystest --timeout 300 --orderer orderer0.example.com:7050 " : {'cli': ''}  /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/ccc7af2e580511e8a471fa163e03c637/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer channel fetch config /var/hyperledger/configs/ccc7af2e580511e8a471fa163e03c637/behavesystest.block --channelID behavesystest --orderer orderer0.example.com:7050 " : {'peer1.org2.example.com': ''} {code}  *3. Gossip* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/352/testReport/gossip/Gossip%20Service/_FAB_4663___FAB_4664___FAB_4665__A_non_leader_peer_goes_down_by_disconnect__comes_back_up_and_catches_up_eventually______1_3_/  *fabric smoke tests(daily, verify, merge)*  *fabric-test Commit: d556210*  *Bootstrap*  {code:java} Failing step: And a user deploys chaincode ... failed in 326.282s Location: bootstrap.feature:74 Assertion Failed: The expected chaincode container c2b58f3057c211e881f2fa163ef71549-peer0.org1.example.com-mycc-0 is not running Captured stdout: testConfigs: configs/c2b58f3057c211e881f2fa163ef71549  /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/c2b58f3057c211e881f2fa163ef71549/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/c2b58f3057c211e881f2fa163ef71549/behavesystest.tx --channelID behavesystest --timeout 300 --orderer orderer0.example.com:7050 " : {'cli': ''}  /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/c2b58f3057c211e881f2fa163ef71549/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp peer channel fetch config /var/hyperledger/configs/c2b58f3057c211e881f2fa163ef71549/behavesystest.block --channelID behavesystest --orderer orderer0.example.com:7050 " : {'peer1.org2.example.com': ''}  /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/c2b58f3057c211e881f2fa163ef71549/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer1.org2.example.com {code}  *Build Logs* https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/281/testReport/bootstrap/Bootstrapping%20Hyperledger%20Fabric/Basic_operations_to_create_a_useful_blockchain_network/  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-merge-x86_64/281/  ></body> </Action>
<Action id="44434" issue="30145" author="nnao" type="comment" created="2018-05-15 16:44:55.0" updateauthor="nnao" updated="2018-05-15 16:44:55.0"> <body><! CDATA Do we need to add 'cmd' path to chaincode path? Because chaincode.go doesn't have main().  {code:java} -  And a user deploys chaincode at path "github.com/hyperledger/fabric/examples/chaincode/go/example05" with args  "init","sum","0"  with name "myex05" +  And a user deploys chaincode at path "github.com/hyperledger/fabric/examples/chaincode/go/example05/cmd" with args  "init","sum","0"  with name "myex05" {code}  I added 'cmd' at path then test. I got a success at "Scenario: FAB-4720", but I got an error at "Scenario: FAB-4703" in chaincodes.feature  ></body> </Action>
<Action id="44764" issue="30145" author="adnanchoudhury" type="comment" body="Thanks  ~nnao , I will go ahead and change the directory for the feature files." created="2018-05-21 17:57:49.0" updateauthor="adnanchoudhury" updated="2018-05-21 17:57:49.0"/>
<Action id="44779" issue="30145" author="adnanchoudhury" type="comment" body="https://gerrit.hyperledger.org/r/#/c/22071/" created="2018-05-21 18:48:06.0" updateauthor="adnanchoudhury" updated="2018-05-21 18:48:06.0"/>
<Action id="56608" issue="30145" author="jarvis26" type="comment" created="2019-02-03 06:04:55.0" updateauthor="jarvis26" updated="2019-02-03 06:15:26.0"> <body><! CDATA I am still facing the same issue when trying to configure a network with fabric version 1.4. Commands to install and instantiate the chaincode are as follows:    {code:java} peer chaincode install -n testchanicode -v 3.0 -p github.com/hyperledger/fabric/examples/chaincode/go/example02/cmd -c '{"Args": "init","a","100","b","200" }' peer chaincode instantiate -o <orderer-ip->:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /var/hyperledger/<tls cert file>.pem -C testchannel1 -n testchanicode -v 3.0 -c '{"Args": "init","a","100","b","200" }' {code}    ></body> </Action>
<Action id="56610" issue="30145" author="nitishbhardwaj19" type="comment" created="2019-02-03 06:21:09.0" updateauthor="nitishbhardwaj19" updated="2019-02-03 06:22:34.0"> <body><! CDATA I am facing this too. I am using Fabric 1.4. I have already set $PATH variable till {noformat} /opt/go/src/github.com/hyperledger/fabric/examples/chaincode/go/example02/cmd{noformat} in bashrc as well as in cli container.       {noformat} Commands used: peer chaincode install -n samplechaincode -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/example02/cmd -c '{"Args": "init","a","100","b","200" }' peer chaincode instantiate -o <orderer-ip->:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /var/hyperledger/<tls cert file>.pem -C mychannel -n samplechaincode -v 1.0 -c '{"Args": "init","a","100","b","200" }' {noformat}   {noformat} Error: OCI runtime create failed: container_linux.go:344: starting container process caused "exec: \"chaincode\": executable file not found in $PATH": unknown {noformat}    FYI -  ~AdnanChoudhury ,  ~jarvis26   ></body> </Action>
<Action id="56612" issue="30145" author="jarvis26" type="comment" created="2019-02-03 09:25:07.0" updateauthor="jarvis26" updated="2019-02-03 09:28:32.0"> <body><! CDATA Hi.. just figured out a way for this to work - I set the {code:java} CC_SRC_PATH=github.com/hyperledger/fabric/examples/chaincode/go/example02/cmd{code} and referenced this while installing the chaincode as {code:java} peer chaincode install -n test1 -v 1.0 -l golang -p ${CC_SRC_PATH} -c '{"Args": "init","a","100","b","200" }'{code} and then doing an instantiate  {code:java} peer chaincode instantiate o <orderer-ip>:7050 --tls $CORE_PEER_TLS_ENABLED --cafile /var/hyperledger/<tls-cert.pem file> -C testchannel1 -n test1 -v 1.0 -l golang -c '{"Args": "init","a","100","b","200" }' -P "OR('Org1MSP.member')"{code}     ~AdnanChoudhury  Could you please verify if this is a bug with the existing code because as mentioned in my previous comment, the only change here is that I gave the exact same relative path against CC_SRC_PATH. In my opinion, it should take it even if the path is directly against the -p flag.   ~nitishbhardwaj19  Could you please replicate and verify, if this works for you as well.  ></body> </Action>
<Action id="58398" issue="30145" author="nitishbhardwaj19" type="comment" body=" ~jarvis26  Yes, it worked with the steps you mentioned. Thanks." created="2019-03-21 15:51:21.0" updateauthor="nitishbhardwaj19" updated="2019-03-21 15:51:21.0"/>
