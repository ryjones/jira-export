<Action id="45316" issue="30576" author="mastersingh24" type="comment" body="Chaincode requires Docker and Docker officially only supports 64bit architectures.  I know that there is version of Docker available via Ubuntu for ARM7, but this is not officially supported by Docker." created="2018-05-30 23:10:44.0" updateauthor="mastersingh24" updated="2018-05-30 23:10:44.0"/>
<Action id="45332" issue="30576" author="sashapesic" type="comment" created="2018-05-31 07:43:29.0" updateauthor="sashapesic" updated="2018-05-31 07:43:29.0"> <body><! CDATA  ~mastersingh24  Yes, Gari, I absolutely agree there with you. However, that is not an imperative saying that it cannot work - I have a working Fabric 1.0.6 (peer, orderer, ca, couch, the whole package) up and running on a RPi3. Now, I am more interested here in what exactly changed between the versions and it does not work anymore with v1.1.0.  Greets!  ></body> </Action>
<Action id="45778" issue="30576" author="sashapesic" type="comment" body=" ~mastersingh24  i installed a 64-bit OS on my RP, and it works out of the box. I still cannot figure out why it does not work with 32-bit OS, since the version 1.0.6 worked like a charm. I am ready to close the issues. " created="2018-06-11 10:27:16.0" updateauthor="sashapesic" updated="2018-06-11 10:27:16.0"/>
<Action id="46657" issue="30576" author="dloghin" type="comment" body=" ~SashaPESIC  - I have recently encountered the same issue on v1.2.0-rc1. It seems that AMCL has a 32-bit flavour that can be enabled with `python config32.py` (see  https://github.com/milagro-crypto/amcl/tree/master/version3/go).  So one solution is to perform this configuration dynamically, when fabric is built. Another option would be to include both versions of AMCL go files for 32- and 64-bit architectures in fabric.   " created="2018-06-28 10:17:03.0" updateauthor="dloghin" updated="2018-06-28 10:17:03.0"/>
