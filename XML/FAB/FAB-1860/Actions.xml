<Action id="20662" issue="14361" author="muralisr" type="comment" body=" ~rameshthoomu  core.yaml has the default setting and meant to be replaced with actual values..." created="2017-02-02 17:06:08.0" updateauthor="muralisr" updated="2017-02-02 17:06:08.0"/>
<Action id="20667" issue="14361" author="muralisr" type="comment" created="2017-02-03 01:03:30.0" updateauthor="muralisr" updated="2017-02-03 15:35:17.0"> <body><! CDATA  ~rameshthoomu   ~ghaskins  Replacing CORE_CHAINCODE_DOCKERFILE via an environnment variable is hard (perhaps impossible) given the multiline format for Dockerfile.  Propose we introduce a new {{chaincode.dockertag}} property.  {code:java} ############################################################################### # #    Chaincode section # ############################################################################### chaincode:  # docker tag default. Can be replaced via environment variable CORE_CHAINCODE_DOCKERTAG #This value in turn will replace $(DOCKERTAG) in the Dockerfile property dockertag: $(ARCH)-$(PROJECT_VERSION)  # The id is used by the Chaincode stub to register the executing Chaincode # ID with the Peerand is generally supplied through ENV variables # the Path form of ID is provided when deploying the chaincode. The name is # used for all other requests. The name is really a hashcode # returned by the system in response to the deploy transaction. In # development mode where user runs the chaincode, the name can be any string id: path: name:  golang:  # This is the basis for the Golang Dockerfile.  Additional commands will # be appended depedendent upon the chaincode specification. Dockerfile:  | FROM hyperledger/fabric-ccenv:$(DOCKERTAG) COPY src $GOPATH/src WORKDIR $GOPATH  car:  # This is the basis for the CAR Dockerfile.  Additional commands will # be appended depedendent upon the chaincode specification. Dockerfile:  | FROM hyperledger/fabric-ccenv:$(DOCKERTAG)  java: # This is an image based on java:openjdk-8 with addition compiler # tools added for java shim layer packaging. # This image is packed with shim layer libraries that are necessary # for Java chaincode runtime. Dockerfile:  | from hyperledger/fabric-javaenv:$(DOCKERTAG) {code}  Where user can specify any tag to replace {{chaincode.dockertag}} property.  For example {code} CORE_CHAINCODE_DOCKERTAG=x86_64-0.7.0-snapshot-f7a9f37 peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{"Args": "init","a","100","b","200" }'  CORE_CHAINCODE_DOCKERTAG=latest peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{"Args": "init","a","100","b","200" }'   CORE_CHAINCODE_DOCKERTAG=badtag peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{"Args": "init","a","100","b","200" }'  {code}  The first two will work and the last is an example of a tag that won't work.  ></body> </Action>
<Action id="20681" issue="14361" author="rameshthoomu" type="comment" created="2017-02-05 00:04:05.0" updateauthor="rameshthoomu" updated="2017-02-05 00:04:05.0"> <body><! CDATA Below are the observations while deploying chaincode keeping ccenv image in system:  (hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$ docker images | grep hyperledger/fabric-ccenv *hyperledger/fabric-ccenv         x86_64-0.7.0-snapshot-64bfdff   a8b9d7e615b2        27 hours ago        1.29 GB *(hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$  CORE_CHAINCODE_DOCKERTAG=x86_64-0.7.0-snapshot-64bfdff peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{"Args": "init","a","100","b","200" }'* (Deploy Working)* CORE_CHAINCODE_DOCKERTAG=latest peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{"Args": "init","a","100","b","200" }'* (Deploy Not working)*  (hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$ docker images | grep hyperledger/fabric-ccenv *hyperledger/fabric-ccenv         latest   a8b9d7e615b2        27 hours ago        1.29 GB* (hyp) vagrant@hyperledger-devenv:v0.3.0-c34b164:/opt/gopath/src/github.com/hyperledger$  CORE_CHAINCODE_DOCKERTAG=x86_64-0.7.0-snapshot-64bfdff peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{"Args": "init","a","100","b","200" }*' (Deploy Not Working)* CORE_CHAINCODE_DOCKERTAG=latest peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples -c '{"Args": "init","a","100","b","200" }' *(Deploy working)*   ></body> </Action>
<Action id="20691" issue="14361" author="muralisr" type="comment" body=" ~rameshthoomu  so basically using CORE_CHAINCODE_DOCKERTAG to override default core.yaml to match the docker image tag in the user workspace works with this fix, correct ?" created="2017-02-05 13:56:15.0" updateauthor="muralisr" updated="2017-02-05 13:56:15.0"/>
<Action id="20693" issue="14361" author="rameshthoomu" type="comment" body="yes  ~muralisr . I see it is working when I have ccenv image with &quot;latest&quot; tag and try to deploy with &quot;latest&quot; tag. But shouldn&apos;t be a issue if user pulls &quot;ccenv snapshot tag&quot; and try to deploy with &quot;latest &quot;tag? I am seeing deploy failure if the overriding tag is not available in the system. refer above scenarios for the possible cases..  " created="2017-02-05 17:44:08.0" updateauthor="rameshthoomu" updated="2017-02-05 17:44:08.0"/>
<Action id="20697" issue="14361" author="muralisr" type="comment" created="2017-02-05 21:03:43.0" updateauthor="muralisr" updated="2017-02-05 21:03:43.0"> <body><! CDATA  ~rameshthoomu  If user pulls "ccenv snapshot tag", then  "CORE_CHAINCODE_DOCKERTAG" should point to that. Basically " "CORE_CHAINCODE_DOCKERTAG" should point to whatever's there on the system. If its not specified core.yaml will be used.  Why would one download  "ccenv snapshot tag" and then set "CORE_CHAINCODE_DOCKERTAG=latest" ?   ></body> </Action>
<Action id="20723" issue="14361" author="rameshthoomu" type="comment" created="2017-02-06 20:34:41.0" updateauthor="rameshthoomu" updated="2017-02-06 20:34:41.0"> <body><! CDATA  {panel}  ~muralisr : Agree. We should stick to any one tag either "snapshot" or "latest" but as mentioned we may not push "latest" tag to hyperledger dockerhub. In this case, user has to depend on "snapshot" tag. I see  ~ghaskins  removed ccenv:latest tag dependency from fabric-sdk-node repository  With Greg's change, ccenv:latest is more required for deployment  from sdk so this clears patch to use snapshot tag for CLI deployment. {panel}   ></body> </Action>
<Action id="22710" issue="14361" author="kchristidis" type="comment" created="2017-04-19 13:39:03.0" updateauthor="kchristidis" updated="2017-04-19 13:39:03.0"> <body><! CDATA  ~rameshthoomu ,  ~muralisr : Where do we stand on this?  I've also removed the "fabric-orderer" component as it's not related.  ></body> </Action>
<Action id="22730" issue="14361" author="muralisr" type="comment" created="2017-04-20 00:03:28.0" updateauthor="muralisr" updated="2017-04-20 00:03:28.0"> <body><! CDATA This has been fixed by  ~greg.haskins  properly with his work https://jira.hyperledger.org/browse/FAB-2826 (https://gerrit.hyperledger.org/r/#/c/7163/) which generalizes 3 key tags for even fine-grained control than what was originally intended in this CR and abandoned (see https://gerrit.hyperledger.org/r/#/c/5497/) * docker namespace (default "hyperledger") * arch * project version  Given that I think this can be closed.   Can you please close if you agree  ~rameshthoomu  ?  ></body> </Action>
<Action id="23005" issue="14361" author="rameshthoomu" type="comment" body="It&apos;s working as expected with  ~greg.haskins  fixes.. Closing this issue." created="2017-04-26 02:38:13.0" updateauthor="rameshthoomu" updated="2017-04-26 02:38:13.0"/>
