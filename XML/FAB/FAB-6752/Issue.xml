<Issue id="22830" key="FAB-6752" number="6752" project="10002" reporter="jeroiraz" assignee="jeroiraz" creator="jeroiraz" type="10001" summary="netcomposer: Utility to bootstrap Fabric networks" priority="4" resolution="10001" status="6" created="2017-10-25 13:23:02.0" updated="2020-01-22 22:14:04.0" resolutiondate="2020-01-22 22:14:04.0" votes="0" watches="2" timeoriginalestimate="288000" timeestimate="144000" workflowId="35384"> <description><! CDATA Bootstrapping a HF network involves a considerable effort and the task is prone to error, people asking for collaboration regarding this task are frequently seen in the HF chat.  While the e2e sample is a great starting point, it relies on a fixed network configuration i.e. fixed amount of organizations, peers, etc. Changing the configuration might be hard to accomplish for a developer who is not yet familiar with HF.  On the other hand, we already count with a tool that simplifies the creation of required credentials just by providing a simple configuration file. But it does not provide support for the configuration of docker files.  We’ve implemented this utility to simplify our daily work in a research project where we test the changes introduced to the Fabric against different HF networks (different organizations and peers, ordering service implementations and db providers). As we found this tool really useful we would like to share with the open community.  This utility is useful when getting started with HF and for bootstrapping development/testing HF networks based on customized HF images. A simple configuration file looks like the following one:     DOCKER_NS: hyperledger     ARCH: x86_64     VERSION: 1.0.2      network:                "samplenet"     domain:                 "samplenet.com"      ordererType:            "solo"      db:         provider:   "goleveldb"      ordererNodes:           1     peerOrganizations:      1     peersPerOrganization:   2     usersPerOrganization:   1      logLevel:               "debug"     tlsEnabled:             true     chaincodesPath:    "./sample-chaincodes"     *Build configuration files (credentials also generated)*:    netcomposer -config samplenet.yaml *Start the network*:    docker-compose -f ./samplenet/docker-compose.yaml up -d  All containers are up and running, no need to deal with certificates nor docker configuration files. CLI peer is also ready to install, instantiate and invoke chaincodes.  Note: Required crypto material is generated by cryptogen tool.     Current source code:  https://github.com/ibm-silvergate/netcomposer      ></description> </Issue>
