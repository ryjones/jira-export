<Action id="52729" issue="34262" author="rlalgowdar" type="comment" body="https://gerrit.hyperledger.org/r/#/c/27251/" created="2018-10-29 12:12:43.0" updateauthor="rlalgowdar" updated="2018-10-29 12:12:43.0"/>
<Action id="52866" issue="34262" author="scottz" type="comment" created="2018-11-01 01:44:26.0" updateauthor="scottz" updated="2018-11-01 01:44:26.0"> <body><! CDATA The invokes tps dropped from 41 to 14 (marbles02 vs marbles02private with sidedb).  The queries tps dropped from 221 to 95. _This drop is more surprising to me._  Are you saying the measurements show a more-severe drop because of the hardware limitations? Yes I believe we discussed that likelihood. Then we should definitely run these in the IKS cluster (and report results here) which should not have the CPU limitations.  Per another comment you made in slack: `There are some concerns... marbles02 and marbles02_private comparison by itself may not be exact.. marbles02_private does 2 calls to putstate in one transaction.` Â What can we do to make a better comparison? Do we need to modify one or both of the chaincodes? or node sdk APIs? or pte client? Contact designers if we could use their help with any of that.  ></body> </Action>
<Action id="53875" issue="34262" author="scottz" type="comment" created="2018-11-27 23:43:07.0" updateauthor="scottz" updated="2018-11-27 23:44:47.0"> <body><! CDATA Although this may still be useful to run in v1.4 just to compare with v1.3 results on vlaunch machine, or simply run it in IKS cluster (without vlaunch resource limitations) and use as another datapoint with the other new v1.4 sidedb performance testcases, we have the option to deprecate this.  In v1.4, we are writing 8 separate testcases for comparisons, using a chaincode better designed for the comparisons.  ></body> </Action>
<Action id="54461" issue="34262" author="scottz" type="comment" body="Per earlier comments, this was completed and executed in 1.3, but we are withdrawing now with Resolution=&quot;Won&apos;t Do&quot; to deprecate this as it is being replaced in 1.4 by a set of 8 testcases: 4 using leveldb and 4 using couchdb, with and without sidedb in various configurations." created="2018-12-06 20:31:00.0" updateauthor="scottz" updated="2018-12-06 20:31:00.0"/>
