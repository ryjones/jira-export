<Action id="21244" issue="14584" author="angelo.decaro" type="comment" body=" ~muralisr  may you put more details in to better understand under which condition that should happen? For example, a reader of the channel should be allowed to do that or it needs to be an admin? What about chainless scenarios?" created="2017-03-01 15:07:16.0" updateauthor="angelo.decaro" updated="2017-03-01 15:07:16.0"/>
<Action id="21284" issue="14584" author="muralisr" type="comment" created="2017-03-02 18:27:55.0" updateauthor="muralisr" updated="2017-03-02 18:27:55.0"> <body><! CDATA  ~angelo.decaro  I'm not sure one size will fit all. Would it be better If we divide access into two parts # At the system chaincode level - "can this SCC be called from Chaincode at all"  and "can this SCC called by an external user at all (say from SDK)" ? # Within the Invoke - ACL using based on proposal  With that, we can use (1) to completely eliminate cases where a SCC should not be called all except by the fabric (escc, vscc, etc). That will leaver user written SCCs that are written specifically for such accesses. Then we can leave (2) to the user.  Now, (1) is not currently there in the system chaincode framework. But we can easily add support for that as attributes to the SCC.  For now I'll create two tasks for this (1)  to get the mechanics of the bug fixed so CC-SCC call can be done (2) to implement the security aspects.   ~binhn    ></body> </Action>
<Action id="22154" issue="14584" author="denyeart" type="comment" created="2017-04-11 21:53:18.0" updateauthor="denyeart" updated="2017-04-11 21:53:18.0"> <body><! CDATA  ~muralisr   ~binhn   ~adc  Is this needed for 1.0.0? Is it a defect or new feature?  ></body> </Action>
<Action id="22735" issue="14584" author="muralisr" type="comment" created="2017-04-20 00:36:58.0" updateauthor="muralisr" updated="2017-04-20 00:36:58.0"> <body><! CDATA per my 02/Mar/17 comment above this is being handled in two parts. This is a dup of the following * https://jira.hyperledger.org/browse/FAB-2997 - takes care of "don't invoke some scc thru proposals" and "don't invoke some scc thru cc2cc" * ACL checks done for various SCCs - https://jira.hyperledger.org/browse/FAB-2969 https://jira.hyperledger.org/browse/FAB-2103 https://jira.hyperledger.org/browse/FAB-2969 https://jira.hyperledger.org/browse/FAB-2969  Given all the attention above to SCC calls this is clearly a dup. Closing this out.   ></body> </Action>
