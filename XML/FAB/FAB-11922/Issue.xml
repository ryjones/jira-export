<Issue id="33603" key="FAB-11922" number="11922" project="10002" reporter="diizuka" assignee="diizuka" creator="diizuka" type="10004" summary="Invalidate quote/nested policy string" priority="4" resolution="10001" status="6" created="2018-09-10 07:12:19.0" updated="2020-01-22 22:34:11.0" resolutiondate="2020-01-22 22:34:11.0" votes="0" watches="3" workflowId="44897"> <description><! CDATA Change endorsement policy string disallow quote(‘) and escape(\), except for principal definition quotes (e.g. ‘A.member’).  In current endorsement policy manual: https://hyperledger-fabric.readthedocs.io/en/release-1.3/endorsement-policies.html , there are no quotes nor escapes to define policy string, except for principal definition.  But current implementation permits quotes/escapes. e.g. the following 3 policies are same meaning: outof(1, outof(1, 'A.member', 'B.member')) outof(1, 'outof(1, \'A.member\', \'B.member\')') outof(1, 'outof(1, \\\'A.member\\\', \\\'B.member\\\')')  Current implementation permits complex policy definition, which is hard to understand for human. Also, administrator may write policy definition which contains quotes/escapes intentionally, current implementation does not check them, this results unexpected policy checking.  This is because calling govaluate’s Evaluate() method 3 times. Each time Evaluate() is called, quote/escape is removed, so (nested) quoted/escaped policy string may be valid,  Calling Evaluate() only 1 time solve this problem, because quoted and/or escaped policy string become invalid.   ></description> </Issue>
