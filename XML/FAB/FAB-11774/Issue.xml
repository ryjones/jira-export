<Issue id="33288" key="FAB-11774" number="11774" project="10002" reporter="rlalgowdar" assignee="dongming" creator="rlalgowdar" type="10101" summary="SIdeDB - Reconciliation - MisConfigure and Reconfigure Gossip" priority="3" resolution="10000" status="6" created="2018-08-28 13:19:08.0" updated="2019-07-30 21:01:00.0" resolutiondate="2019-07-30 21:01:00.0" votes="0" watches="2" workflowId="44558"> <description><! CDATA +*Setup:*+  Network Topology: 1 channel, 2 orgs, 2 peers per org, each peer with CouchDB container for stateDB, 3 kafka, 1 zookeepers, 3 orderers, 2 ca, TLS enabled, put all peers in both orgs in the private collection from the start, require only any 1 peer endorsement, BTL=0,  *push/required=1*. When start network, join all peers in all orgs to the channel. However, *DO NOT submit any anchor peer updates* yet; we want the orgs to be isolated at first. Client Driver: PTE  +*Test Steps:*+  1) chaincode: install only one chaincode on all peers, https://github.com/hyperledger/fabric/blob/master/examples/chaincode/go/map/map.go Join all peers in both orgs to the channel1, include all peers in the privatedb collection, and instantiate on channel1 on any peer.  2) Using 1 thread per peer, send 1000 invokes getPutPrivate transactions with private data:  *  thread 1 invokes 1000 TXs to org1 peer0 *  thread 2 invokes 1000 TXs to org2 peer0 *  thread 3 invokes 1000 TXs to org1 peer1 *  thread 4 invokes 1000 TXs to org2 peer1  3) Fix the configuration by submitting both channel config anchor peer updates.  4) Ensure all peers can reconcile old private data efficiently: simultaneously send new invokes TXs and query all the old TXs:  *  thread 5 invokes 1000 TXs to org1 peer0, then query/validates the last <n> of these same TXs on ALL peers *  thread 6 invokes 1000 TXs to org2 peer0, then query/validates the last <n> of these same TXs on ALL peers *  thread 7 invokes 1000 TXs to org1 peer1, then query/validates the last <n> of these same TXs on ALL peers *  thread 8 invokes 1000 TXs to org2 peer1, then query/validates the last <n> of these same TXs on ALL peers *  thread 9 queries the first 4000 TXs on org1 peer0 from threads 1,2,3,4 to verify data is reconciled *  thread 10 queries the first 4000 TXs on org2 peer0 from threads 1,2,3,4 to verify data is reconciled *  thread 11 queries the first 4000 TXs on org1 peer1 from threads 1,2,3,4 to verify data is reconciled *  thread 12 queries the first 4000 TXs on org2 peer1 from threads 1,2,3,4 to verify data is reconciled  Analyze TPS on all peers, and ensure all queries work. Note: we may need to use longer pte query timeout values. And/or to configure a reduced timeout value in the peer from 60 secs to 1 or 2 secs to hurry things along (refer to FAB-10599 for details).  +*Report Results in fields TestResult and TestDetails:*+ 1) hardware setup 2) Observe if TPS achieved for queries is too slow, or any other problems 3) CPU and memory usage for the Peers and CouchDB containers  ></description> </Issue>
