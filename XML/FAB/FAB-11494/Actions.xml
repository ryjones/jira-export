<Action id="48531" issue="32610" author="chandergovindarajan" type="comment" created="2018-08-08 06:48:15.0" updateauthor="chandergovindarajan" updated="2018-08-08 06:48:15.0"> <body><! CDATA Appending a new block to the chain and updating the state database happens at the peers belonging to the channel. The Node SDK code is purely on the application/client side and has no direct visibility into this.  You can look into the Fabric code to understand how this works. As such the block and state data can be found in "/var/hyperledger/production/ledgersData". https://github.com/hyperledger/blockchain-explorer may also help.  However, what you can do at the client level is listen for events (https://fabric-sdk-node.github.io/tutorial-channel-events.html) from a peer (for a channel) to know when a block has been added or when a Transaction has been completed. This is used in `balance-transfer` for example.  ></body> </Action>
<Action id="48548" issue="32610" author="aspring" type="comment" body=" ~ChanderGovindarajan  thank you.  I&apos;ll revisit this issue once I solve the basic network setup problem with Fabric first." created="2018-08-08 09:58:11.0" updateauthor="aspring" updated="2018-08-08 09:58:11.0"/>
<Action id="48591" issue="32610" author="aspring" type="comment" created="2018-08-09 01:35:17.0" updateauthor="aspring" updated="2018-08-09 01:35:17.0"> <body><! CDATA  ~ChanderGovindarajan  I'm less interested in using a third party tool like blockchain explorer at this point but rather at low level, fabric network topology, directory structure, data workflow such as a new block proposed, endorsed/validated, appended to the ledger and replicated across the chain (the entire process, which involved with state index and ledger data etc.).  Any resource recommendation along this line of thought?  Thanks in advance.  ></body> </Action>
