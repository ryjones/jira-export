<Issue id="36728" key="FAB-13663" number="13663" project="10002" reporter="kutenglaoshu" assignee="kutenglaoshu" creator="kutenglaoshu" type="10002" summary="refactor getChaincodeDeploymentSpec" priority="3" resolution="10000" status="6" created="2019-01-14 03:52:56.0" updated="2019-01-17 21:05:16.0" resolutiondate="2019-01-17 21:05:10.0" votes="0" watches="1" workflowId="48281"> <description><! CDATA The purpose is to support dev mode.  In dev mode, when we run:     peer chaincode install -n mycc -v 1.0 -l golang -p github.com/example02 It will return:     Error: Bad response: 500 - nil code package  Because "chaincode.IsDevMode() == false", see below code:  func getChaincodeDeploymentSpec(spec *pb.ChaincodeSpec, crtPkg bool) (*pb.ChaincodeDeploymentSpec, error) {     var codePackageBytes   byte     if chaincode.IsDevMode() == false && crtPkg  {     ...         codePackageBytes, err = container.GetChaincodePackageBytes(platformRegistry, spec)     ...     }      chaincodeDeploymentSpec := &pb.ChaincodeDeploymentSpec\{ChaincodeSpec: spec, CodePackage: codePackageBytes}     return chaincodeDeploymentSpec, nil }  That is in dev mode, getChaincodeDeploymentSpec did not get chaincode packageBytes, also we can find the reason from the code flow:  lscc Invoke()>executeInstall()>ExtractStatedbArtifactsForChaincode->ExtractStatedbArtifactsFromCCPackage->GetMetadataAsTarEntries()->getCode()  func (tgzProv *TargzMetadataProvider) getCode() (  byte, error) {     if tgzProv.Code == nil  {         return nil, errors.New("nil code package")     }      return tgzProv.Code, nil }  So, if we remove "chaincode.IsDevMode() == false &&", all will ok.  ></description> </Issue>
