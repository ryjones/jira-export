<Issue id="42786" key="FAB-16853" number="16853" project="10002" reporter="sykesm" creator="sykesm" type="10001" summary="Add support to the configuration package to honor &quot;defaultValue&quot; tags" priority="3" status="10100" created="2019-10-17 13:19:35.0" updated="2019-10-24 11:32:10.0" votes="0" watches="1" workflowId="55866"> <description><! CDATA As part of the drive to make configuration more centralized and explicit, configuration structures will be defined with {{yaml}} tags and, optionally, {{defaultValue}} tags.  The configuration package support for the {{default}} tag needs to be extended to support a {{defaultValue}} tag.  The {{defaultValue}} tag should reference an exported var that holds a literal containing the complex default value to use in configuration.  The difference is that the {{default}} tag is used to provide simple values to leaf nodes while {{defaultValue}} is used to provide complex literal defaults like structures or maps. Where possible, {{default}} should be preferred but there are a handful of places where {{defaultValue}} is required.  For example, decoding {code:yaml} --- stringOne: one string {code}  into a reference to a zero value of this structure: {code:go} type Config struct { 	StringOne string `yaml:"stringOne" default:"one"` 	Plugins   Plugin `yaml:"plugins" defaultValue:"DefaultPlugins"` } {code}  where {{Plugins}} is defined as: {code:go} type Plugins struct { 	Name string `yaml:"name"` 	Path string `yaml:"path"` } {code}  and {{DefaultPlugins}} is: {code:go} var DefaultPlugins =   Plugins{ 	{Name: "pluginOne", Path: "/path/to/one"}, 	{Name: "pluginTwo", Path: "/path/to/two"}, } {code}  should result in a value that is equivalent to one that is decoded from this yaml: {code:yaml} --- stringOne: one string plugins:  - name: pluginOne path: /path/to/one - name: pluginTwo path: /path/to/two {code}  Notice the default values from the {{DefaultPlugins}} var are populated.  ></description> </Issue>
