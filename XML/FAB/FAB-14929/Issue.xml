<Issue id="38915" key="FAB-14929" number="14929" project="10002" reporter="sykesm" assignee="btl5037" creator="sykesm" type="10004" summary="Stop explicit use of common/crypto from protoutil code" priority="3" resolution="10000" status="6" created="2019-04-01 17:30:22.0" updated="2019-05-10 20:21:27.0" resolutiondate="2019-05-10 20:21:21.0" votes="0" watches="2" workflowId="51772"> <description><! CDATA As of current master, crypto.GetRandomNonce() is the only common/crypto function directly used by production code in the protoutil package. This can be replaced with direct use of rand.Read with an appropriate receiving slice.  {code} $ ag -w crypto protoutil/ protoutil/proputils_test.go 11:	"crypto/sha256"  protoutil/proputils.go 16:	"github.com/hyperledger/fabric/common/crypto" 243:	nonce, err := crypto.GetRandomNonce() 262:	nonce, err := crypto.GetRandomNonce() 455:	nonce, err := crypto.GetRandomNonce()  protoutil/commonutils.go 15:	"github.com/hyperledger/fabric/common/crypto" 37:// CreateNonceOrPanic generates a nonce using the common/crypto package 47:// CreateNonce generates a nonce using the common/crypto package. 49:	nonce, err := crypto.GetRandomNonce()  protoutil/commonutils_test.go 15:	"github.com/hyperledger/fabric/common/crypto" 49:	expected := crypto.NonceSize {code}  In fact, the only production users of GetRandomNonce are in {{protoutil}} and {{token/client}} packages. In the case of the token client, it's used on a call to {{ComputeTxID}}.  ></description> </Issue>
