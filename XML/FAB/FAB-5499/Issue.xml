<Issue id="19525" key="FAB-5499" number="5499" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10001" summary="Simplify logic of gossip Peers() implementation." priority="5" resolution="10000" status="6" created="2017-07-27 12:27:01.0" updated="2018-07-20 18:49:53.0" resolutiondate="2017-07-30 10:45:57.0" votes="0" watches="1" workflowId="39563"> <description><! CDATA Currently logic which implements {{Peers}} API of gossip implemented as following:  {code} // GetPeers returns a mapping of endpoint -->   discovery.NetworkMember func (g *gossipServiceImpl) Peers()   discovery.NetworkMember { 	s :=   discovery.NetworkMember{} 	for _, member := range g.disc.GetMembership() { 		s = append(s, member) 	} 	return s } {code}  While there is no real need to iterate and build new slice, since function could simply delegate call to the discovery instance namely to {{Getmembership}}, therefore function will become   {code} // GetPeers returns a mapping of endpoint -->   discovery.NetworkMember func (g *gossipServiceImpl) Peers()   discovery.NetworkMember { 	return g.disc.GetMembership() } {code}  ></description> </Issue>
