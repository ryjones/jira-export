<Issue id="14373" key="FAB-1872" number="1872" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10004" summary="Genesis block is not committed to the ledger while creating a chain for the first time." priority="3" resolution="10000" status="6" created="2017-01-26 18:35:17.0" updated="2018-07-20 14:11:21.0" resolutiondate="2017-01-26 23:17:12.0" votes="0" watches="3" workflowId="37182"> <description><! CDATA Currently, while join channel get call for very first time, it contains the genesis block, however this block is not get committed to the ledger. As a consequence whenever delivery client queries the committer for the current ledger height it's getting zero, therefore asking from the ordering service blocks starting from the 0 sequence number.  Since block with sequence number 0 gets to the peer it fails validation of configuration transaction, since it expect to get configuration blocks in the increasing order, while getting *again* same configuration blocks (genesis). Eventually the flow results with following errors in the log:  {code} ND -----\n" nonce:"O\233\373}.w\207M\221\245\317\030\276u\235\226#C\250\207+\213\245\370" > 2017-01-26 17:00:31.866 UTC  protoutils  ValidateTransaction -> INFO 099 ValidateTransactionEnvelope returns err %!s(<nil>) 2017-01-26 17:00:31.867 UTC  txvalidator  Validate -> CRIT 09a Error validating configuration which passed initial validity checks:Config sequence number jumped from 0 to 0 2017-01-26 17:00:31.867 UTC  peer  createChain -> INFO 09b XXXXXXX: Currently ledger is at height =  0 2017-01-26 17:00:31.867 UTC  peer  createChain -> INFO 09c Calling gossip to initialize the channel {code}  The solution should be to make genesis block get committed to the ledger for the first time it called for create chain.  ></description> </Issue>
