<Issue id="44756" key="FAB-17724" number="17724" project="10002" reporter="lehors" assignee="dereckluo" creator="lehors" type="10004" summary="configtxgen cannot find etcdraft default config" priority="2" resolution="10000" status="6" created="2020-04-08 19:51:29.0" updated="2020-04-13 18:44:53.0" resolutiondate="2020-04-13 18:31:56.0" votes="0" watches="3" workflowId="58675" archived="N"> <description><! CDATA   {code:java} $ ../bin-master/configtxgen -configPath . -profile SampleMultiNodeEtcdRaft -channelID byfn-sys-channel -outputBlock ./channel-artifacts/genesis.block 2020-04-08 21:42:38.407 CEST  common.tools.configtxgen  main -> INFO 001 Loading configuration 2020-04-08 21:42:38.437 CEST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 002 Orderer.Addresses unset, setting to  127.0.0.1:7050  2020-04-08 21:42:38.437 CEST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 003 orderer type: etcdraft 2020-04-08 21:42:38.437 CEST  common.tools.configtxgen.localconfig  completeInitialization -> PANI 004 etcdraft configuration missing 2020-04-08 21:42:38.437 CEST  common.tools.configtxgen  func1 -> PANI 005 etcdraft configuration missing panic: etcdraft configuration missing  recovered  	panic: etcdraft configuration missinggoroutine 1  running : github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc0000dfce0, 0x0, 0x0, 0x0) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:230 +0x546 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).log(0xc0000ce2f8, 0x4, 0xc0000f2c40, 0x1e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0x100 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).Panicf(...) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159 github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panic(0xc0000ce300, 0xc0002e95f0, 0x1, 0x1) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/common/flogging/zap.go:73 +0x99 main.main.func1() 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/cmd/configtxgen/main.go:253 +0x176 panic(0x46d6500, 0xc0003c4100) 	/usr/local/go/src/runtime/panic.go:679 +0x1b2 github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc0000dfce0, 0x0, 0x0, 0x0) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:230 +0x546 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).log(0xc0000ce2d8, 0x4, 0x47fba91, 0x18, 0xc0002e9a90, 0x1, 0x1, 0x0, 0x0, 0x0) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0x100 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).Panicf(...) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159 github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(...) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/common/flogging/zap.go:74 github.com/hyperledger/fabric/internal/configtxgen/genesisconfig.(*Orderer).completeInitialization(0xc000032750, 0xc0000407e0, 0x51) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/internal/configtxgen/genesisconfig/config.go:373 +0xe86 github.com/hyperledger/fabric/internal/configtxgen/genesisconfig.(*TopLevel).completeInitialization(0xc0000d7770, 0xc0000407e0, 0x51) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/internal/configtxgen/genesisconfig/config.go:279 +0xaf github.com/hyperledger/fabric/internal/configtxgen/genesisconfig.(*configCache).load(0x4dbbf40, 0xc0002e9cf8, 0xc0000407e0, 0x5f, 0x0, 0x0, 0x0) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/internal/configtxgen/genesisconfig/config.go:486 +0x1b6 github.com/hyperledger/fabric/internal/configtxgen/genesisconfig.Load(0x7ffeefbffa51, 0x17, 0xc000213f30, 0x1, 0x1, 0x0) 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/internal/configtxgen/genesisconfig/config.go:256 +0x313 main.main() 	/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric/cmd/configtxgen/main.go:266 +0x848  {code} This works fine with the 2.0.1 version: {code:java} $ ../bin-2.0.1/configtxgen -configPath . -profile SampleMultiNodeEtcdRaft -channelID byfn-sys-channel -outputBlock ./channel-artifacts/genesis.block 2020-04-08 21:25:33.115 CEST  common.tools.configtxgen  main -> INFO 001 Loading configuration 2020-04-08 21:25:33.140 CEST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 002 orderer type: etcdraft 2020-04-08 21:25:33.140 CEST  common.tools.configtxgen.localconfig  completeInitialization -> INFO 003 Orderer.EtcdRaft.Options unset, setting to tick_interval:"500ms" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216  2020-04-08 21:25:33.140 CEST  common.tools.configtxgen.localconfig  Load -> INFO 004 Loaded configuration: /Users/lehors/Projects/Go/src/github.com/hyperledger/fabric-samples/first-network/configtx.yaml 2020-04-08 21:25:33.144 CEST  common.tools.configtxgen  doOutputBlock -> INFO 005 Generating genesis block 2020-04-08 21:25:33.144 CEST  common.tools.configtxgen  doOutputBlock -> INFO 006 Writing genesis block  {code} I did find one workaround: specify the EtcdRaft Consenters directly in the Profile definition in configtx.yaml rather than through &OrdererDefaults        ></description> </Issue>
