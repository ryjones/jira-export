<Action id="46007" issue="31062" author="sykesm" type="comment" created="2018-06-15 19:36:07.0" updateauthor="sykesm" updated="2018-06-15 19:36:07.0"> <body><! CDATA Just executed a qscc query on master to ensure that things work as expected on the peer and I don't see any issues. The current and previous hashes are different and match what the block file manager has returned.  If it's a problem, looks like it's the app or the sdk.  ></body> </Action>
<Action id="46077" issue="31062" author="mastersingh24" type="comment" body=" ~Ryan_P   - which version of Fabric are you using?" created="2018-06-18 11:39:25.0" updateauthor="mastersingh24" updated="2018-06-18 11:39:25.0"/>
<Action id="46084" issue="31062" author="denyeart" type="comment" body=" ~harrisob@us.ibm.com   ~zhaochy  Could you take a look?" created="2018-06-18 11:54:06.0" updateauthor="denyeart" updated="2018-06-18 11:55:00.0"/>
<Action id="46106" issue="31062" author="ryan_p" type="comment" body=" ~mastersingh24  This was a v1.0 fabric network" created="2018-06-18 12:28:18.0" updateauthor="ryan_p" updated="2018-06-18 12:28:18.0"/>
<Action id="46143" issue="31062" author="ryan_p" type="comment" created="2018-06-18 19:06:15.0" updateauthor="ryan_p" updated="2018-06-18 19:06:15.0"> <body><! CDATA  ~mastersingh24  This issue also exists for a  v1.1 network -      info: New block detected! 10 low=10, high=0, unsigned=true, currentBlockHash=801220850118853920502834728747804819011300000008707302577020855092005900030200000000000983400110530730, previousBlockHash=801220850118853920502834728747804819011300000008707302577020855092005900030200000000000983400110530730   info: New block detected! 12 low=12, high=0, unsigned=true, currentBlockHash=80122000390001000000005300022027045005200407900204300002270430000003769883095000310405900650, previousBlockHash=80122000390001000000005300022027045005200407900204300002270430000003769883095000310405900650  ></body> </Action>
<Action id="46628" issue="31062" author="harrisob@us.ibm.com" type="comment" body="I have tested with the 1.2RC1 and I see this issue. The  NodeSDK only decodes the payload and presents those to the caller, the issue must be on the fabric side." created="2018-06-27 20:30:43.0" updateauthor="harrisob@us.ibm.com" updated="2018-06-27 20:30:43.0"/>
<Action id="47054" issue="31062" author="sykesm" type="comment" created="2018-07-06 20:41:27.0" updateauthor="sykesm" updated="2018-07-06 20:41:27.0"> <body><! CDATA So, I've already verified that this is not a problem with the peer and indicated it was either the sdk or the app. Since I've very little experience with node, I had hoped that others would have jumped it. That didn't happen so...  The issue appears to be in the application. In particular, the part of the "fc wrangler" util package that modifies the BlockchainInfo message  1 . If the message were left alone, higher up in the stack the data would have arrived unmodified. At that point  2  the height and hash could have been reported using the buffers or, as I think was intended, hex strings.  This code is also reaching into the generated proto objects to get fields that are actually used for marshaling; things like the {{low}} attribute on {{height}}. I don't believe (since, again, I have very little experience with node) that this is how they should be used. So, to validate my assumptions, I commented out the two lines from  1  and updated the block in  2 : {code:java} -                                                       logger.info('New block detected!', resp.height.low, resp); -                                                       known_height = resp.height.low; +                                                       logger.info('New block detected! ', { +                                                               height: resp.height.toNumber(), +                                                               currentBlockHash: resp.currentBlockHash.toString('hex'), +                                                               previousBlockHash: resp.previousBlockHash.toString('hex'), +                                                       }); +                                                       known_height = resp.height; {code}  with those changes, the logs now look like this:  {code} info:  fcw  The chaincode transaction event has happened! success?: VALID 2106ms debug:  fcw  transaction event is disconnected debug:  fcw  Querying Channel Stats  info: New block detected!  height=15, currentBlockHash=27601c7b6484b9cb13e77ef68168c0236e64dc462a67972a0e748509829dd62e, previousBlockHash=53f9e542dd98cdb7fb36f7ab2ce6cd768369175c7bbcb26425de552efd284d6b debug:  checking  there are new things, sending to all clients debug:  ws  broadcasting to clients.  1 block ... info: New block detected!  height=16, currentBlockHash=ac857ee4853d09719e1f374e39b8eb40a92855d827e797918192b32bf8fbf4be, previousBlockHash=27601c7b6484b9cb13e77ef68168c0236e64dc462a67972a0e748509829dd62e debug:  checking  there are new things, sending to all clients debug:  ws  broadcasting to clients.  1 block {code}  The hashes appear to match the the data returned by qscc so I think all is working as expected. At this point, I think the GHE issue that was originally opened  3  should be reopened for a proper fix.  1:  https://github.com/IBM-Blockchain/marbles/blob/544748d8d3d58dd82d5dc5d75f81089e944f6261/utils/fc_wrangler/parts/query_peer.js#L53-L54  2:  https://github.com/IBM-Blockchain/marbles/blob/544748d8d3d58dd82d5dc5d75f81089e944f6261/utils/websocket_server_side.js#L219  3:  https://github.com/IBM-Blockchain/marbles/issues/234   ></body> </Action>
<Action id="67598" issue="31062" author="sykesm" type="comment" body="Stale" created="2020-01-22 22:34:12.0" updateauthor="sykesm" updated="2020-01-22 22:34:12.0"/>
