<Issue id="28913" key="FAB-9182" number="9182" project="10002" reporter="elli-androulaki" assignee="ales" creator="elli-androulaki" type="10002" summary="Update policy evaluation interfaces to account for this more intuitive identity interface" priority="3" resolution="10001" status="6" created="2018-03-27 08:59:40.0" updated="2020-06-11 15:30:38.0" resolutiondate="2020-01-22 22:32:30.0" votes="0" watches="1" workflowId="35656"> <description><! CDATA Policy evaluation is performed using Evaluate function as follows:    {code:java} // Policy is used to determine if a signature is valid type Policy interface {  // Evaluate takes a set of SignedData and evaluates whether this set of signatures   // satisfies the policy  Evaluate(signatureSet   *cb.SignedData) error   } {code}       Given the restructuring of Identity interfaces, Policy evaluation mechanism could be extended with the following functions:    {code:java} // Policy is used to determine if a signature is valid type Policy interface {  Evaluate( identities   *ValidatedIdentity, aux   byte, opts   PolicyEvalOptions) error } {code}    That is, it should be possible, having only access to the validated identitty itself, and to some auxiliary input (aux) to evaluate the policy. Options opts are added here for the future to be able to specify other parameters for policy evaluation, e.g., a specific timestamp.  ></description> </Issue>
