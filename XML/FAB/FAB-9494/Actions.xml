<Action id="43002" issue="29367" author="sykesm" type="comment" created="2018-04-16 13:06:44.0" updateauthor="sykesm" updated="2018-04-16 13:21:45.0"> <body><! CDATA This is due to the confluence of several issues.  First, the container we're running unit tests in is setup with a working fabric configuration in two ways. We explicitly add the sample configuration to /etc/hyperledger/fabric and we set FABRIC_CFG_PATH as one of the environment variables in the container. This _hides_ dependencies on global configuration, sets up a hybrid production/test environment, and, IMO, is a problem that needs to be resolved separately.  https://github.com/hyperledger/fabric/blob/a8cc2c46d8cec1ad199741c0630a46ccb24084ac/images/testenv/Dockerfile.in#L8   https://github.com/hyperledger/fabric/blob/a8cc2c46d8cec1ad199741c0630a46ccb24084ac/Makefile#L263-L266   Second, our CI runs containers while developers want to be able to run tests natively, outside of a container. We should choose which we want and stick with it.  Finally, the configuration, in general, is inconsistent. In some cases (like localconfig), a separate instance of the viper configuration object is instantiated while in most other cases we use the global singleton config object. In either scenario, we use process level state (env vars, default paths) to load the configuration. We don't seem to have adopted a pattern when we use explicit configuration files next to our tests and load them directly for execution. Much of this (again IMO) is because our configuration system isn't well structure.  After this immediate issue is resolved, I think a larger discussion is needed about how we want configuration to be managed in tests and by users. We've had a number of issues with the configuration while attempting to write integration tests as well...  ></body> </Action>
<Action id="43029" issue="29367" author="sykesm" type="comment" body="Â https://gerrit.hyperledger.org/r/20651" created="2018-04-16 21:52:16.0" updateauthor="sykesm" updated="2018-04-16 21:52:16.0"/>
