<Action id="40292" issue="27796" author="denyeart" type="comment" created="2018-02-16 15:41:02.0" updateauthor="denyeart" updated="2018-02-20 16:01:17.0"> <body><! CDATA Ability to dump stack trace is critical for troubleshooting hung peers in production environments.Â  I am in favor of the admin gRPC approach over chaincode approach.  I suggest we look at pprof first though... Given that pprof collects the same information and more, and that peer already has a config option to enable pprof (https://github.com/hyperledger/fabric/blob/master/peer/node/start.go#L320), and that the configuration can either be a network port or localhost port (restricted to peer server admin), it does seem that we have our bases covered already without introducing our own code that does something that go does natively.  ></body> </Action>
<Action id="40297" issue="27796" author="yacovm" type="comment" body="https://gerrit.hyperledger.org/r/#/c/17981/" created="2018-02-16 16:43:03.0" updateauthor="yacovm" updated="2018-02-16 16:43:03.0"/>
<Action id="40331" issue="27796" author="smithbk" type="comment" body="I agree with the admin gRPC approach with authentication/authorization added" created="2018-02-17 20:17:36.0" updateauthor="smithbk" updated="2018-02-17 20:17:36.0"/>
<Action id="40431" issue="27796" author="yacovm" type="comment" created="2018-02-20 17:47:35.0" updateauthor="yacovm" updated="2018-02-20 17:47:35.0"> <body><! CDATA {quote}it does seem that we have our bases covered already without introducing our own code that does something that go does natively.{quote}  All right  ~denyeart .   If we're covered then there is no need for this :)   ></body> </Action>
