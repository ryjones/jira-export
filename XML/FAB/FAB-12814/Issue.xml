<Issue id="35267" key="FAB-12814" number="12814" project="10002" reporter="c0rwin" assignee="c0rwin" creator="c0rwin" type="10004" summary="Remove misleading log error messages in validation path" priority="3" resolution="10000" status="6" created="2018-11-11 00:03:54.0" updated="2018-11-11 16:05:55.0" resolutiondate="2018-11-11 16:05:55.0" votes="0" watches="1" workflowId="46710"> <description><! CDATA There are misleading log error messages has been added since FAB-11940 corresponding CR.  {code} func markTXIdDuplicates(txids   string, txsfltr ledgerUtil.TxValidationFlags) { 	txidMap := make(map string struct{})  	for id, txid := range txids { 		logger.Error(" txid", txid, "found") 		if txid == "" { 			continue 		}  		_, in := txidMap txid  		if in { 			logger.Error("Duplicate txid", txid, "found, skipping") 			txsfltr.SetFlag(id, peer.TxValidationCode_DUPLICATE_TXID) 		} else { 			txidMap txid  = struct{}{} 		} 	} } {code}  and {{committer/txvalidator/validator.go:197}}  {code} 			// if there was no error, we set the txsfltr and we set the 			// txsChaincodeNames and txsUpgradedChaincodes maps 			logger.Debugf("got result for idx %d, code %d", res.tIdx, res.validationCode)  			txsfltr.SetFlag(res.tIdx, res.validationCode)  			if res.validationCode == peer.TxValidationCode_VALID { 				if res.txsChaincodeName != nil { 					txsChaincodeNames res.tIdx  = res.txsChaincodeName 				} 				if res.txsUpgradedChaincode != nil { 					txsUpgradedChaincodes res.tIdx  = res.txsUpgradedChaincode 				} 				logger.Error("res.txid", res.txid, "") 				txidArray res.tIdx  = res.txid 			} {code}  while no error has happened.  ></description> </Issue>
