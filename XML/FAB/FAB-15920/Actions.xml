<Action id="61586" issue="40987" author="jyellick" type="comment" body=" ~denyeart   ~manish-sethi  I assume this behavior is not intentional, but can you confirm?" created="2019-07-10 19:01:05.0" updateauthor="jyellick" updated="2019-07-10 19:01:05.0"/>
<Action id="61587" issue="40987" author="manish-sethi" type="comment" created="2019-07-10 19:15:58.0" updateauthor="manish-sethi" updated="2019-07-10 19:15:58.0"> <body><! CDATA No  ~jyellick  - Ledger statedb (re)building only blocks instantiation of ledger object. In normal circumstances, this should not have any relation to port listening.   Though, the above is not directly related... however, if you recall, only intentional delay that was added was a recent change with "peer node reset" where the endorsement requests were deferred till ledger has caught up to its original height.  ></body> </Action>
<Action id="63999" issue="40987" author="jyellick" type="comment" body=" ~manish-sethi  regardless of intent, the behavior seems to be being observed in production, can you look at the logs and investigate why this might be happening?" created="2019-09-23 20:46:58.0" updateauthor="jyellick" updated="2019-09-23 20:46:58.0"/>
<Action id="67630" issue="40987" author="dereckluo" type="comment" created="2020-01-23 16:12:37.0" updateauthor="dereckluo" updated="2020-01-23 16:12:37.0"> <body><! CDATA https://github.com/hyperledger/fabric/pull/527   ></body> </Action>
<Action id="69540" issue="40987" author="narendranathreddy" type="comment" created="2020-06-24 07:53:58.0" updateauthor="narendranathreddy" updated="2020-06-28 12:53:24.0"> <body><! CDATA Hi @ ~dereckluo  , Thanks for fixing the issue in 2.x version,  However, we are facing this issue in 1.4.4 and even checked in 1.4.6   Scenario:  I have 4,50,000 blocks in our production setup and peers went offline due to some VM storage issues Note: peers ledger data is persisted to volumes when peers come online,  peers are listening on the webserver  designated address which is `peerlisten address`, but does not respond to any requests.  Nearly, after one week peers back online and back to functional   ></body> </Action>
<Action id="69541" issue="40987" author="narendranathreddy" type="comment" created="2020-06-24 07:55:31.0" updateauthor="narendranathreddy" updated="2020-06-24 08:24:01.0"> <body><! CDATA  ~dereckluo  During peer not responding to any requests, it emits the following logs      2020-06-24 07:40:54.299 UTC  kvledger  CommitWithPvtData -> INFO 190  netchannel  Committed block  20283  with 1 transaction(s) in 1938ms (state_validation=11ms block_and_pvtdata_commit=128ms state_commit=1786ms) commitHash= 1d8636430e50291a1c02c9cbc6a8fcf8461e6b62b640bdc03910d148be158e26  2020-06-24 07:40:55.058 UTC  gossip.privdata  StoreBlock -> INFO 191  netchannel  Received block  20284  from buffer 2020-06-24 07:40:55.061 UTC  committer.txvalidator  Validate -> INFO 192  netchannel  Validated block  20284  in 2ms 2020-06-24 07:40:55.299 UTC  kvledger  CommitWithPvtData -> INFO 193  netchannel  Committed block  20284  with 1 transaction(s) in 237ms (state_validation=21ms block_and_pvtdata_commit=49ms state_commit=164ms) commitHash= 21feb934fded4425e39781812b17d0d223eacf81fb5ac078dbbb28fb8a81fdf1  2020-06-24 07:43:38.288 UTC  lockbasedtxmgr  CommitLostBlock -> INFO 194 Recommitting block  351000  to state database 2020-06-24 07:47:06.696 UTC  lockbasedtxmgr  CommitLostBlock -> INFO 195 Recommitting block  352000  to state database  ></body> </Action>
<Action id="69542" issue="40987" author="narendranathreddy" type="comment" body=" ~dereckluo   ~jyellick   ~manish-sethi  We have got impacted on our production projects, please fix this in 1.4.4, 1.4.6 version as many of projects are in production and do not force us to use 2.x version just for this fix and our clients are not interested in 2.x features and functionalities, at the moment. " created="2020-06-24 08:22:17.0" updateauthor="narendranathreddy" updated="2020-06-25 08:00:34.0"/>
<Action id="69544" issue="40987" author="manish-sethi" type="comment" body="Tagging  ~denyeart  for his opinion on back porting this to 1.4." created="2020-06-24 21:39:40.0" updateauthor="manish-sethi" updated="2020-06-24 21:39:40.0"/>
<Action id="69548" issue="40987" author="denyeart" type="comment" created="2020-06-25 10:02:42.0" updateauthor="denyeart" updated="2020-06-25 10:02:42.0"> <body><! CDATA Yes, since v1.4.x is LTS release, and the fix is low risk, makes sense to backport. I've tagged for v1.4.8.   ~dereckluo  could you take a look?  ></body> </Action>
<Action id="69595" issue="40987" author="denyeart" type="comment" body="Upon further investigation, the code is not the same between v1.4 and v2.0, it is not possible to cherry-pick the fix to v1.4. Users will have to move to v2.x in order to get the new behavior." created="2020-06-30 13:44:33.0" updateauthor="denyeart" updated="2020-06-30 13:44:33.0"/>
