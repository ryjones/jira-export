<Issue id="16094" key="FAB-3497" number="3497" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Consider removing the hash field from the Payload of the gossip DataMessage" priority="3" resolution="10000" status="6" created="2017-04-28 16:24:43.0" updated="2018-07-20 14:12:27.0" resolutiondate="2017-05-02 00:21:35.0" votes="0" watches="1" workflowId="38211"> <description><! CDATA The hash field isn't used anywhere but: {code} func (mc *msgComparator) dataInvalidationPolicy(thisDataMsg *DataMessage, thatDataMsg *DataMessage) common.InvalidationResult { 	if thisDataMsg.Payload.SeqNum == thatDataMsg.Payload.SeqNum { 		if thisDataMsg.Payload.Hash == thatDataMsg.Payload.Hash { 			return common.MessageInvalidated 		} 		return common.MessageNoAction 	} {code} and isn't validated that it matches the real hash inside the serialized block.  Since we have the logic above, a malicious peer can send the same block wrapped in a DataMessage that has a different hash, and this would cause the message to be stored twice (or more...) in other peer's memory.  I say that since we don't use the hash for anything, we get rid of that field.   ></description> </Issue>
