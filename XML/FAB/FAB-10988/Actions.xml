<Action id="46891" issue="31557" author="scottz" type="comment" created="2018-07-03 21:14:58.0" updateauthor="scottz" updated="2018-07-03 21:14:58.0"> <body><! CDATA Failing scenarios: |13:44:29 peer.feature:251 FAB-8381: Test MSP Identity - Malicious Peer (Clients set as writers in policy)| |13:44:29 peer.feature:292 FAB-8759: Test querying a peer with two different versions of chaincode - values change| |13:44:29 peer.feature:314 FAB-8759: Test querying a peer that has two different versions of chaincode - no change in data| |13:44:29 peer.feature:336 FAB-7407: Update the channel policies - add an organization|  ></body> </Action>
<Action id="46976" issue="31557" author="nnao" type="comment" body="https://gerrit.hyperledger.org/r/c/24139/" created="2018-07-06 05:06:37.0" updateauthor="nnao" updated="2018-07-06 05:06:37.0"/>
<Action id="47060" issue="31557" author="nnao" type="comment" created="2018-07-07 08:48:24.0" updateauthor="nnao" updated="2018-07-07 08:48:24.0"> <body><! CDATA Is there any document which written how to remove an organization. Deletion of the organization of org 2 has failed in the test of FAB-7407.  ></body> </Action>
<Action id="47061" issue="31557" author="scottz" type="comment" created="2018-07-07 14:37:51.0" updateauthor="scottz" updated="2018-07-07 14:37:51.0"> <body><! CDATA Try:   https://www.ibm.com/developerworks/cloud/library/cl-add-an-organization-to-your-hyperledger-fabric-blockchain/index.html   or   https://hyperledger-fabric.readthedocs.io/en/release-1.2/channel_update_tutorial.html   After we fetch and edit to remove the third org from the config, make sure the system channel config update (to remove the org) is signed by all the necessary org admins. Check the policy: if it is "ALL" then all three must sign it. Otherwise, the removal transaction would fail, and the 3rd org would remain in the channel and continue to receive new blocks.  ></body> </Action>
<Action id="47064" issue="31557" author="nnao" type="comment" body=" ~scottz  Thanks. I will try it." created="2018-07-07 23:51:44.0" updateauthor="nnao" updated="2018-07-07 23:51:44.0"/>
<Action id="47191" issue="31557" author="nnao" type="comment" created="2018-07-11 01:19:39.0" updateauthor="nnao" updated="2018-07-11 01:19:39.0"> <body><! CDATA I tried to remove an org2 manually. Channel update was a success. But an invoke was failed from org3(the response is a success but not change the value). Of course, an invoke was failed from org2(Error: error sending transaction for invoke: got unexpected status: FORBIDDEN). Do I need something else? Do I need to update the chaincode?   ></body> </Action>
<Action id="47206" issue="31557" author="scottz" type="comment" created="2018-07-11 12:04:37.0" updateauthor="scottz" updated="2018-07-11 12:04:37.0"> <body><! CDATA I am sure this worked previously. Maybe you could try it using a load from a week or two earlier to compare behavior.  Did you check the policy we are using ( ~latitiah  could help too) for the channel update transactions, and the policy for the invoke transactions? Did you check the peer logs? (Use @doNotDecompose for the individual test, to leave all the artifacts when failure occurs.)  The expected behavior is:Â  if you successfully remove an org, then queries on a peer in that removed org should continue to give the last known value from before the removal. Invokes on the peers of the removed org would fail. Invokes and queries on the remaining member peers should work fine, assuming they do not require approvals from the revoked org.  ></body> </Action>
