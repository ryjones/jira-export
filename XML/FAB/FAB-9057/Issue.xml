<Issue id="28772" key="FAB-9057" number="9057" project="10002" reporter="kchristidis" creator="kchristidis" type="10002" summary="Make it easier to spawn an orderer process programmatically" priority="4" resolution="10001" status="6" created="2018-03-22 18:28:53.0" updated="2019-07-30 02:33:00.0" resolutiondate="2019-07-30 02:33:00.0" votes="0" watches="1" workflowId="35636"> <description><! CDATA As an integration test author, I want to be able easily spawn an ordering service, by creating a configuration struct and feeding it to properly exposed (i.e. externally consumable) methods.  Note that:  # A few items needed to make this work fall outside the orderer scope (and will hopefully be covered by FAB-8418 *), and # It may well be possible to spawn an orderer process with the code as-is today  ...but this requires a lot of tip-toeing to make it work. (See: https://github.com/hyperledger/fabric/blob/release-1.1/orderer/common/server/main.go#L78..L113)  We should address this. The solution involves refactoring, exposing of the appropriate functions/methods, and simplification of the instantiation process to make the whole flow consumable.   *  For example: * Loading of configuration via the viper singleton, and * Instantiation of the local signer via the MSP singleton for example.  ></description> </Issue>
