<Action id="57697" issue="38051" author="jyellick" type="comment" created="2019-02-28 05:04:00.0" updateauthor="jyellick" updated="2019-02-28 05:04:57.0"> <body><! CDATA {noformat} 19:12:26  34m2019-02-27 00:11:56.123 UTC  channelCmd  InitCmdFactory -> INFO 001 0m Endorser and orderer connections initialized 19:12:26 Error: proposal failed (err: bad proposal response 500: failed to execute transaction cffc6245a1866632e4fb86d911f6bf97e496df35be89968805f27738fe29da2a: error sending: timeout expired while executing transaction) 19:12:26 peer0.org1 failed to join the channel, Retry after 3 seconds 19:12:29 + peer channel join -b mychannel.block 19:12:36 + res=1 19:12:36 + set +x 19:12:36  34m2019-02-27 00:12:29.216 UTC  channelCmd  InitCmdFactory -> INFO 001 0m Endorser and orderer connections initialized 19:12:36 Error: proposal failed (err: bad proposal response 500: cannot create ledger from genesis block: LedgerID already exists) 19:12:36 peer0.org1 failed to join the channel, Retry after 3 seconds 19:12:39 + peer channel join -b mychannel.block {noformat}  This looks transient to me.  It took the peer longer than the timeout to reply that the channel was created successfully, then he tried to join a second time, but the peer was already joined.  I'd be surprised if this can be recreated consistently (or at all)?  If this is consistent, then we'll need to investigate why the peer is suddenly taking so long to join channels.  I don't think this is a configtxgen related error, but is rather something merged into the peer startup or joinchannel code.  ></body> </Action>
<Action id="57701" issue="38051" author="sambhavdutt" type="comment" created="2019-02-28 05:40:11.0" updateauthor="sambhavdutt" updated="2019-02-28 05:43:11.0"> <body><! CDATA  ~jyellick   I see that this is consistent, the peer is still taking long to join the channel, retrying after the default timeout and exiting after the retries. This is the log for the last failed build  https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-x86_64/44/console  ></body> </Action>
<Action id="57702" issue="38051" author="jyellick" type="comment" created="2019-02-28 05:55:22.0" updateauthor="jyellick" updated="2019-02-28 05:55:22.0"> <body><! CDATA I'm unable to reproduce this locally.    You can see in the second log you sent that the first peer join is successful, and the second one fails.  Has anything changed with the CI or machine it is on?  ></body> </Action>
<Action id="57745" issue="38051" author="sambhavdutt" type="comment" created="2019-02-28 16:00:27.0" updateauthor="sambhavdutt" updated="2019-02-28 16:00:27.0"> <body><! CDATA  ~jyellick   The jobs start on a new node which is available at the time, in this case, for the x platform. There have been no changes on the nodes recently.  ></body> </Action>
<Action id="57842" issue="38051" author="rameshthoomu" type="comment" body="Re-opening this issue again. This has been failing in x build nodes consistently from past 1 week. Have to check the logs  ~sambhavdutt  Could you please check the time on console logs." created="2019-03-04 17:14:39.0" updateauthor="rameshthoomu" updated="2019-03-04 17:14:39.0"/>
<Action id="57908" issue="38051" author="jyellick" type="comment" body="If we can get this reproduced with peer debug logs on, it will be very helpful." created="2019-03-06 02:39:43.0" updateauthor="jyellick" updated="2019-03-06 02:39:43.0"/>
<Action id="57912" issue="38051" author="sambhavdutt" type="comment" created="2019-03-06 03:34:47.0" updateauthor="sambhavdutt" updated="2019-03-06 03:34:47.0"> <body><! CDATA  ~jyellick  My Patchset was merged today for this, these are the container logs from today's build  https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-x86_64/lastSuccessfulBuild/artifact/Docker_Container_Logs/  ></body> </Action>
<Action id="57914" issue="38051" author="jyellick" type="comment" created="2019-03-06 06:03:59.0" updateauthor="jyellick" updated="2019-03-06 06:03:59.0"> <body><! CDATA Took a look at the peer logs:  peer1.org2 https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/53/Docker_Container_Logs/peer1.org2-default-channel.log.gz {noformat}  34m2019-03-05 23:50:43.266 UTC  ledgermgmt  CreateLedger -> INFO 320 0m Creating ledger  mychannel  with genesis block  34m2019-03-05 23:51:17.863 UTC  kvledger  CommitWithPvtData -> INFO 66e 0m  mychannel  Committed block  0  with 1 transaction(s) in 7806ms (state_validation=1ms block_commit=7795ms state_commit=4ms)  34m2019-03-05 23:51:17.868 UTC  ledgermgmt  CreateLedger -> INFO 66f 0m Created ledger  mychannel  with genesis block {noformat}  peer1.org1 https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/53/Docker_Container_Logs/peer1.org1-default-channel.log.gz {noformat}  34m2019-03-05 23:50:30.183 UTC  ledgermgmt  CreateLedger -> INFO 1f7 0m Creating ledger  mychannel  with genesis block  34m2019-03-05 23:50:30.222 UTC  kvledger  CommitWithPvtData -> INFO 266 0m  mychannel  Committed block  0  with 1 transaction(s) in 24ms (state_validation=2ms block_commit=12ms state_commit=4ms)  34m2019-03-05 23:50:30.225 UTC  ledgermgmt  CreateLedger -> INFO 267 0m Created ledger  mychannel  with genesis block {noformat}  Looking at the two logs, it's apparent that although perhaps slower in some cases, the time taken to validate signatures, construct configuration, etc. is comparable across peers and relatively negligible to the whole timeout.  Instead, creating the ledger takes much much longer in the one container than the other.  This points to some sort of IO resource constraint problem in CI to me.  ></body> </Action>
<Action id="58644" issue="38051" author="rameshthoomu" type="comment" created="2019-03-27 21:12:25.0" updateauthor="rameshthoomu" updated="2019-03-27 21:12:25.0"> <body><! CDATA Thanks for the detailed explanation  ~jyellick . We are still seeing this in fabric-samples master branch. I have enabled debug mode on peer and below is the log file https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-verify-x86_64/157/artifact/Docker_Container_Logs/peer1.org1-default-channel.log/*view*/  {color:red}16:47:44{color} + peer channel join -b mychannel.block {color:red}16:48:16{color} + res=1 16:48:16 + set +x 16:48:16 2019-03-27 20:47:43.595 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized 16:48:16 Error: proposal failed (err: bad proposal response 500: failed to execute transaction 793a11f75455ec4179653320642661907bdc9fba1d9199774713f2fd4dfccca8: error sending: timeout expired while executing transaction) 16:48:16 peer1.org1 failed to join the channel, Retry after 3 seconds  Not sure why it's taking 30 secs to join the channel.   ~denyeart  FYI  ></body> </Action>
<Action id="58651" issue="38051" author="jyellick" type="comment" created="2019-03-28 02:34:06.0" updateauthor="jyellick" updated="2019-03-28 02:34:06.0"> <body><! CDATA This one has exactly the sameÂ symptom:  {noformat}  34m2019-03-27 20:48:26.571 UTC  kvledger  CommitWithPvtData -> INFO 5aa 0m  mychannel  Committed block  0  with 1 transaction(s) in 19264ms (state_validation=2ms block_commit=19253ms state_commit=4ms) {noformat}  The validation takes no time at all, and then committing the block to the filesystem takes _19 seconds_.  We can obviously tune timeouts up.... but 19 seconds is at least 3, if not 4 or 5 orders of magnitude slower than I would expect the operation to take, it seems like we should be looking to address the underlying problem?  CI overall has been exceptionally flaky lately, it's like there are new resource caps or something?  What about adding some sort of small perf test at the beginning of the CI job? Write a few hundred KB to a file and run fsync, and see how long it takes?  ></body> </Action>
<Action id="58668" issue="38051" author="denyeart" type="comment" created="2019-03-28 12:03:28.0" updateauthor="denyeart" updated="2019-03-28 12:03:28.0"> <body><! CDATA I asked Ramesh to turn on peer debug, here it is: https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/157/artifact/Docker_Container_Logs/peer1.org1-default-channel.log  It hangs at this step when trying to create the chain in ledger:  2019-03-27 20:47:43.610 UTC  ledgermgmt  CreateLedger -> INFO 202 0m Creating ledger  mychannel  with genesis block  So either hit a lock in ledger (I don't see why this could happen yet...) or there is a fundamental problem with IO in this environment.  ></body> </Action>
<Action id="58694" issue="38051" author="denyeart" type="comment" body="After taking a deeper look at the debug, there are no locks or other problems in Fabric code. Even the most trivial IO operations are taking about 8 seconds each, when normally these operations take less than a millisecond.  This leads to the timeout during the peer join.  This is definitely a problem in the CI infrastructure rather than a Fabric problem.  Re-assigning back to Sambhav to investigate with Linux Foundation CI infrastructure." created="2019-03-28 15:54:37.0" updateauthor="denyeart" updated="2019-03-28 15:55:17.0"/>
<Action id="58695" issue="38051" author="rameshthoomu" type="comment" created="2019-03-28 16:09:00.0" updateauthor="rameshthoomu" updated="2019-03-28 18:59:36.0"> <body><! CDATA  ~tijohnson  Please read the last comment posted by  ~denyeart  We are facing this kind of issues in all of our builds and this is a known issue to LF. We have raised concerns many times... We see build failures with these timeouts and sometimes builds fail to download the binaries from Nexus repository or curl failures..   If possible, could you please involve LF infra team to debug and resolve this issue.  ></body> </Action>
<Action id="58892" issue="38051" author="sambhavdutt" type="comment" created="2019-04-03 13:59:57.0" updateauthor="sambhavdutt" updated="2019-04-03 13:59:57.0"> <body><! CDATA The BYFN tests are still failing consistently in the daily-end-2-end with peer(peer1.org2) failing to join channel due to timeout. The same tests are passing on the z machines.  *Branch:* master *Platform:* x86_64 *Error Snippet*  {code:java} 19:51:33 Error: proposal failed (err: bad proposal response 500: failed to execute transaction 7f831dc1b5de0b8a78738da3ec417ca4e5a0a086f5672e8a8342e3a75a02b5ec: error sending: timeout expired while executing transaction) 19:51:33 peer1.org2 failed to join the channel, Retry after 3 seconds . . . 19:52:01 !!!!!!!!!!!!!!! After 10 attempts, peer1.org2 has failed to join channel 'mychannel'  !!!!!!!!!!!!!!!! 19:52:01 ========= ERROR !!! FAILED to execute End-2-End Scenario =========== {code}  *Error Log* https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/82/Docker_Container_Logs/peer1.org2-default-channel.log.gz  ></body> </Action>
<Action id="59304" issue="38051" author="sambhavdutt" type="comment" created="2019-04-17 18:12:59.0" updateauthor="sambhavdutt" updated="2019-04-17 18:12:59.0"> <body><! CDATA The peer has been timing out on prod. x nodes after the default delay time was increased to 15 seconds, this works fine on Sandbox x-nodes *Build Log* https://jenkins.hyperledger.org/sandbox/view/All/job/fabric-end-2-end-daily-master-x86_64/6/consoleFull  but this is still failing in the production x86_64 nodes for the Default Channel BYFN tests in e2e-daily, master branch. *Build Log* https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/96/Docker_Container_Logs/    ></body> </Action>
<Action id="59393" issue="38051" author="sambhavdutt" type="comment" created="2019-04-22 19:59:08.0" updateauthor="sambhavdutt" updated="2019-04-23 15:07:18.0"> <body><! CDATA RELENG ticket has been created for this issue as requested https://jira.linuxfoundation.org/browse/RELENG-1988  ></body> </Action>
<Action id="59437" issue="38051" author="sambhavdutt" type="comment" created="2019-04-24 03:37:18.0" updateauthor="sambhavdutt" updated="2019-04-24 03:43:14.0"> <body><! CDATA The end-2-end BYFN tests have passed successfully for master in the last run Build #99, on production Jenkins x86_64 node.  *Build Log*  https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-master-x86_64/99/  ></body> </Action>
