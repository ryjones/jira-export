<Action id="41838" issue="28683" author="zamrokk" type="comment" created="2018-03-20 17:00:26.0" updateauthor="zamrokk" updated="2018-03-20 17:00:26.0"> <body><! CDATA output of commands gives :  /opt/kafka/bin/kafka-con --zookeeper zookeeper1:2181 {quote}testchainid {quote}    /opt/kafka/bin/kafka-console-consumer.sh --zookeeper zookeeper0:2181 --topic testchainid --from-beginning    {quote} 2018-03-20 16:57:15,265  WARN  console-consumer-18129_aa5d7f63504d-1521565033953-3fb20755-leader-finder-thread , Failed to add leader for partitions testchainid-0; will retry (kafka.consumer.ConsumerFetcherManager$LeaderFinderThread)  java.nio.channels.ClosedChannelException  at kafka.network.BlockingChannel.send(BlockingChannel.scala:110)  at kafka.consumer.SimpleConsumer.liftedTree1$1(SimpleConsumer.scala:98)  at kafka.consumer.SimpleConsumer.kafka$consumer$SimpleConsumer$$sendRequest(SimpleConsumer.scala:83)  at kafka.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:149)  at kafka.consumer.SimpleConsumer.earliestOrLatestOffset(SimpleConsumer.scala:188)  at kafka.consumer.ConsumerFetcherThread.handleOffsetOutOfRange(ConsumerFetcherThread.scala:87)  at kafka.server.AbstractFetcherThread$$anonfun$6.apply(AbstractFetcherThread.scala:210)  at kafka.server.AbstractFetcherThread$$anonfun$6.apply(AbstractFetcherThread.scala:208)  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)  at scala.collection.immutable.Map$Map1.foreach(Map.scala:116)  at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)  at scala.collection.AbstractTraversable.map(Traversable.scala:104)  at kafka.server.AbstractFetcherThread.addPartitions(AbstractFetcherThread.scala:208)  at kafka.server.AbstractFetcherManager$$anonfun$addFetcherForPartitions$2.apply(AbstractFetcherManager.scala:88)  at kafka.server.AbstractFetcherManager$$anonfun$addFetcherForPartitions$2.apply(AbstractFetcherManager.scala:78)  at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)  at scala.collection.immutable.Map$Map1.foreach(Map.scala:116)  at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)  at kafka.server.AbstractFetcherManager.addFetcherForPartitions(AbstractFetcherManager.scala:78)  at kafka.consumer.ConsumerFetcherManager$LeaderFinderThread.doWork(ConsumerFetcherManager.scala:97)  at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63) {quote}  ></body> </Action>
<Action id="41839" issue="28683" author="zamrokk" type="comment" created="2018-03-20 17:06:45.0" updateauthor="zamrokk" updated="2018-03-20 17:06:45.0"> <body><! CDATA /opt/kafka/bin/kafka-topics.sh --describe --zookeeper zookeeper0:2181 --topic testchainid    {quote}Topic:testchainid PartitionCount:1 ReplicationFactor:3 Configs:  Topic: testchainid Partition: 0 Leader: 2 Replicas: 2,0,1 Isr: 2,0,1 {quote}  ></body> </Action>
<Action id="41870" issue="28683" author="zamrokk" type="comment" body="it sounds like a hostname / IP issue working with Kafka ..." created="2018-03-21 08:46:46.0" updateauthor="zamrokk" updated="2018-03-21 08:46:46.0"/>
<Action id="42128" issue="28683" author="zamrokk" type="comment" created="2018-03-26 09:28:44.0" updateauthor="zamrokk" updated="2018-03-26 09:28:44.0"> <body><! CDATA I have configured static IP on the kafka configuration      +Example of configuration for the orderer on first host pointing to second host IP:+  orderer1.byomc.com:  - CONFIGTX_ORDERER_KAFKA_BROKERS= kafka0:9092,kafka1:9092,*92.103.147.67*:9092,*92.103.147.67*:9093      +Resolution of kafka3 IP that is on second host from orderer1 logs :+  *orderer1.byomc.com_1  |* 2018-03-26 08:36:03.572 UTC  orderer/consensus/kafka/sarama  func1 -> DEBU 119 Failed to connect to broker kafka3:9192: dial tcp: *{color:#ff0000}lookup kafka3 on 127.0.0.11:53: no such host{color}*     {color:#d04437}*It seems the loop up is searching for a local address but my 2 hosts are on 2 different networks and machines.*{color}     {color:#333333}on the second host, orderer2 is still looping{color}  *orderer2.byomc.com_1*  | 2018-03-26 08:47:01.718 UTC  orderer/consensus/kafka/sarama  tryRefreshMetadata -> DEBU 1c8 client/metadata found some partitions to be *{color:#d04437}leaderless{color}*  {color:#333333} {color}     ></body> </Action>
<Action id="42295" issue="28683" author="zamrokk" type="comment" body="maybe it should on same network. I will have a look at overlay on 2 hosts ..." created="2018-03-29 08:04:47.0" updateauthor="zamrokk" updated="2018-03-29 08:04:47.0"/>
<Action id="42464" issue="28683" author="zamrokk" type="comment" body="resolved : playing with fixed IP + &quot;extra_hosts&quot; feature + opening all ports on the NAT " created="2018-04-03 13:40:38.0" updateauthor="zamrokk" updated="2018-04-03 13:40:38.0"/>
<Action id="47278" issue="28683" author="prashantsawant12" type="comment" body="@bejnjamin - will you be able to share the multi host kafka setup? I am facing the exact sam e issue." created="2018-07-12 14:20:05.0" updateauthor="prashantsawant12" updated="2018-07-12 14:20:05.0"/>
<Action id="47280" issue="28683" author="prashantsawant12" type="comment" body="will you be able to share the config files. I am facing exact same issue" created="2018-07-12 14:23:29.0" updateauthor="prashantsawant12" updated="2018-07-12 14:23:29.0"/>
<Action id="51155" issue="28683" author="guolidong" type="comment" created="2018-09-25 13:06:02.0" updateauthor="guolidong" updated="2018-09-25 13:06:02.0"> <body><! CDATA Is it resolved?     ></body> </Action>
<Action id="54612" issue="28683" author="mikeemery" type="comment" created="2018-12-10 17:46:04.0" updateauthor="mikeemery" updated="2018-12-10 17:50:08.0"> <body><! CDATA Commenting here for anyone else following behind. ran into this (or a very similar issue) this weekend. Orderers were having connection timeout issues with a single kafka container (other orderers were talking to other kafka containers just fine). After restarting the kafka container, functionality was restored.     This setup was working fine one day, then suddenly not the next. Zero indication what the problem was with the kafka container - other non-orderer applications were still able to communicate with it.  ></body> </Action>
