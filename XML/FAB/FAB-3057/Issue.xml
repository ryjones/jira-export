<Issue id="15638" key="FAB-3057" number="3057" project="10002" reporter="ales" creator="ales" type="10001" summary="Chaincode-level access control" priority="3" resolution="10001" status="6" created="2017-04-10 11:03:51.0" updated="2020-01-22 19:02:45.0" resolutiondate="2020-01-22 19:02:45.0" votes="1" watches="8" workflowId="35118"> <description><! CDATA Fabric needs to provide the chaincode developer appropriate tools to perform chaincode-level access control. Currently, the cc dev can access the binary blob of the creator; however this is insufficient because the cc dev doesn't have access to the chain msp infrastructure and can't therefore reason in terms of the organizations that make the channel.  We propose to add a system chaincode for access control, exposing two functions * *SatisfiesPrincipal* * *EvaluatePolicy*  *SatisfiesPrincipal* takes two arguments * a serialized identity * a serialized MSPPrincipal The function returns a success code if the identity has the requested attributes (e.g. membership to an MSP or a specific OU) as described in the MSPPrincipal (and an error code otherwise).  *EvaluatePolicy* takes three arguments * a serialized policy object (to be specific a SignaturePolicyEnvelope) * a message * an array of serialized identities * an array of signatures The function returns a success code if the array of signatures from the serialized identities properly sign the supplied message and if they match the description in the serialized policy (for instance the SignaturePolicyEnvelope requires signatures from 3 principals out of 5 described in the SignaturePolicyEnvelope object, EvaluatePolicy will return true if there are 3 signatures from 3 of the 5 principals).  ></description> </Issue>
