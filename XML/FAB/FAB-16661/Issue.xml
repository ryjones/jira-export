<Issue id="42426" key="FAB-16661" number="16661" project="10002" reporter="sykesm" assignee="btl5037" creator="sykesm" type="10001" summary="Consistently provide PEM encoded keys and certificates to chaincode platform implementations" priority="3" resolution="10000" status="6" created="2019-09-19 18:16:58.0" updated="2019-10-22 14:07:59.0" resolutiondate="2019-10-22 14:07:59.0" votes="0" watches="1" workflowId="55621"> <description><! CDATA  ~jyellick  highlighted something about the launch contract that we should try to address moving forward.  The client key and client cert that we provide to the chaincode are base64 encoded PEM blocks while the root certificate is simply the PEM block.  The base64 encoding of the PEM blocked (already encoded) certificate is really weird... Unfortunately, we can't just change it as existing chaincode will be decoding so we need to add mitigation/migration.   https://github.com/hyperledger/fabric-chaincode-go/blob/8f8a45e6039e7bc0e03a042591b010317481f21d/shim/internal/config.go#L48-L67   The thought is that we can create two new files that contain the pem blocks (instead of base 64 encoded pem blocks) and use new keys to reference them. The old config and format would be deprecated and ultimately removed.  This will impact the run step of the launcher as well (in a different story)...  The go shim should be updated to prefer the non-double-encoded certificates. Node and java should not.  Acceptance: I can run chaincode build with the old and new go chaincode shim.  ></description> </Issue>
