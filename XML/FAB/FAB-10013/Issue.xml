<Issue id="30130" key="FAB-10013" number="10013" project="10002" reporter="thinkingincrowd" creator="thinkingincrowd" type="10004" summary="&quot;network e2ecli_default not found&quot; causing Chaincode instantiation on PEER2 on channel &apos;xx&apos; failed" priority="4" resolution="10000" status="6" created="2018-05-11 06:14:17.0" updated="2018-07-20 14:16:37.0" resolutiondate="2018-05-22 21:08:45.0" votes="0" watches="2" workflowId="42143"> <description><! CDATA After executing the command "CHANNEL_NAME=kc TIMEOUT=1000 docker-compose -f docker-compose-cli.yaml up -d" in examples/e2e_cli folder, all the containers are started up.  Â   I checked logs from the cli container and found below error. {code:java} 2018-05-11 03:46:56.764 UTC  chaincodeCmd  install -> DEBU 010 Installed remotely response:<status:200 payload:"OK" >  2018-05-11 03:46:56.764 UTC  main  main -> INFO 011 Exiting..... ===================== Chaincode is installed on remote peer PEER2 =====================   Instantiating chaincode on org2/peer2... CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key CORE_PEER_LOCALMSPID=Org2MSP CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt CORE_PEER_TLS_ENABLED=true CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ID=cli CORE_LOGGING_LEVEL=DEBUG CORE_PEER_ADDRESS=peer0.org2.example.com:7051 2018-05-11 03:46:56.987 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-05-11 03:46:56.987 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-05-11 03:46:56.995 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 003 Using default escc 2018-05-11 03:46:56.995 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default vscc 2018-05-11 03:46:56.996 UTC  chaincodeCmd  getChaincodeSpec -> DEBU 005 java chaincode disabled 2018-05-11 03:46:56.996 UTC  msp/identity  Sign -> DEBU 006 Sign: plaintext: 0ABC070A6008031A0C08B0A4D4D70510...535010030A04657363630A0476736363  2018-05-11 03:46:56.996 UTC  msp/identity  Sign -> DEBU 007 Sign: digest: 3C97BAC52BBCC5D2D877EE91E67CE8BBC8C907E7AAE0118F15F0F66E027E93D9  Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: API error (404): {"message":"network e2ecli_default not found"}  Usage: peer chaincode instantiate  flags   Flags: -C, --channelID string The channel on which this command should be executed --collections-config string The file containing the configuration for the chaincode's collection -c, --ctor string Constructor message for the chaincode in JSON format (default "{}") -E, --escc string The name of the endorsement system chaincode to be used for this chaincode -l, --lang string Language the chaincode is written in (default "golang") -n, --name string Name of the chaincode -P, --policy string The endorsement policy associated to this chaincode -v, --version string Version of the chaincode specified in install/instantiate/upgrade commands -V, --vscc string The name of the verification system chaincode to be used for this chaincode  Global Flags: --cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint --certfile string Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint --clientauth Use mutual TLS when communicating with the orderer endpoint --keyfile string Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint --logging-level string Default logging level and overrides, see core.yaml for full syntax -o, --orderer string Ordering service endpoint --ordererTLSHostnameOverride string The hostname override to use when validating the TLS connection to the orderer. --tls Use TLS when communicating with the orderer endpoint --transient string Transient map of arguments in JSON encoding  !!!!!!!!!!!!!!! Chaincode instantiation on PEER2 on channel 'kc' failed !!!!!!!!!!!!!!!! ================== ERROR !!! FAILED to execute End-2-End Scenario ================== {code} After I changed the peer-base.xml in e2e_cli/base: {code:java} // From - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2ecli_default  // To - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2e_cli_default{code} The script can be run through successfully to the end printed with message "All GOOD, End-2-End execution completed"  ></description> </Issue>
