<Issue id="28469" key="FAB-8836" number="8836" project="10002" reporter="elli-androulaki" creator="elli-androulaki" type="10002" summary="Extend the MSPPrincipal definition to account for attribute-based principals" priority="3" resolution="10001" status="6" created="2018-03-13 11:54:33.0" updated="2020-01-22 22:32:53.0" resolutiondate="2020-01-22 22:32:53.0" votes="0" watches="1" workflowId="35610"> <description><! CDATA Attestation of ownership of certain attributes can be performed within an MSP. That is, there are cases where the authorised attribute issuer is the same as the identity issuer, in which case attributes can be included in the identities issued for users.     To verify that a certain identity (and, thus, its owner) is in possession of a certain attribute in this case, MSP interface can be leveraged. In particular one can leverage the following function of MSP, and an enhanced version of MSPPrincipal.  ``` {code:java} SatisfiesPrincipal(id msp.Identity, principal *msp.MSPPrincipal) error{code} ```  More specifically, MSPPrincipal can be extended to cover for attribute definition and attribute combinations.     MSPPrincipal is currently defined as indicated in  MSPRefactoring|https://docs.google.com/document/d/1FyvjMlBFasdFlOpjcaurNG8jYipHE8ENXfdbY122mdA/edit?usp=sharing  document:  ``` {code:java} message MSPPrincipal {     enum Classification {       ROLE = 0;  // Represents the one of the dedicated MSP roles, the       // one of a member of MSP network, and the one of an       // administrator of an MSP network       PROPERTY = 1; // Denotes a finer grained (property-based)       // groupping of entities, per MSP affiliation       // E.g., this can well be represented by an MSP's       // Organization unit       IDENTITY  = 2;    // Denotes a principal that consists of a single       // identity       COMBINED  = 3;    // Denotes a combination of principals   }     // Classification describes the way that one should process   // Principal. An Classification value of "ByOrganizationUnit" reflects   // that "Principal" contains the name of an organization this MSP   // handles. A Classification value "ByIdentity" means that   // "Principal" contains a specific identity. Default value   // denotes that Principal contains one of the groups by   // default supported by all MSPs ("admin" or "member").   Classification principal_classification = 1;     // Principal completes the policy principal definition. For the default   // principal types, Principal can be either "Admin" or "Member".   // For the ByOrganizationUnit/ByIdentity values of Classification,   // PolicyPrincipal acquires its value from an organization unit or   // identity, respectively.   bytes principal = 2; } {code}       MSPPrincipal can be enhanced to accommodate attribute ownership as follows:       {code:java} message AppMSPPrincipal {     enum Classification {       ROLE = 0;  // Represents the one of the dedicated MSP roles, the       // one of a member of MSP network, and the one of an       // administrator of an MSP network       PROPERTY = 1; // Denotes a finer grained (property-based)       // groupping of entities, per MSP affiliation       // E.g., this can well be represented by an MSP's       // Organization unit       ATTRIBUTE = 2; // Denotes an attribute       IDENTITY  = 3;    // Denotes a principal that consists of a single       // identity       COMBINED  = 4;    // Denotes a combination of principals   }     // Classification describes the way that one should process   // Principal. An Classification value of "ByProperty" reflects   // that "Principal" contains the name of a property this MSP   // handles. A Classification value "ByIdentity" means that   // "Principal" contains a specific identity. Default value   // denotes that Principal contains one of the groups by   // default supported by all MSPs ("admin" or "member").   Classification principal_classification = 1;     // Principal completes the policy principal definition. For the default   // principal types, Principal can be either "Admin" or "Member".   // For the ByOrganizationUnit/ByIdentity values of Classification,   // PolicyPrincipal acquires its value from an organization unit or   // identity, respectively.   bytes principal = 2; } {code}       Clearly existing MSP implementations would need to be modified to be able to process SatisfiesPrincipal calls with the extended MSPPrincipal definition.   ></description> </Issue>
