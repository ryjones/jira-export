<Issue id="35096" key="FAB-12715" number="12715" project="10002" reporter="sykesm" assignee="wlahti" creator="sykesm" type="10003" summary="Extract GetLogSpec and SetLogSpec from the Admin server" priority="3" resolution="10001" status="6" created="2018-11-05 16:04:25.0" updated="2018-12-10 13:39:06.0" resolutiondate="2018-12-10 13:39:06.0" votes="0" watches="2" workflowId="46531"> <description><! CDATA We want to distance ourselves a bit from the existing admin server that's exposed in the peer as the majority of what is there is either deprecated or does nothing.  These methods should remain on the existing admin service and the admin service should be deprecated for removal in the next major version. {code} rpc GetStatus(common.Envelope) returns (ServerStatus) {} rpc StartServer(common.Envelope) returns (ServerStatus) {} rpc GetModuleLogLevel(common.Envelope) returns (LogLevelResponse) {} rpc SetModuleLogLevel(common.Envelope) returns (LogLevelResponse) {} rpc RevertLogLevels(common.Envelope) returns (google.protobuf.Empty) {} {code}  With the legacy admin service deprecated, we can create a new {{LoggingAdmin}} service. This new service should be sharable between the orderer and the peer. It will include the following operations:  {code} rpc GetLogSpec(common.Envelope) returns (LogSpecResponse) {} rpc SetLogSpec(common.Envelope) returns (LogSpecResponse) {} {code}  As part of this work - the grpc service implementations for {Get,Set}LogSpec will be moved to common - the corresponding code will be refactored out of the existing admin service - the new service will be registered with the existing admin service server in the peer (new service, same server)  The dynamic orderer work should build on this by using the same service implementation in the orderer.  ></description> </Issue>
