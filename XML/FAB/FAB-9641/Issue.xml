<Issue id="29584" key="FAB-9641" number="9641" project="10002" reporter="christopherferris" assignee="rameshthoomu" creator="christopherferris" type="10000" summary="Stable image strategy" priority="3" resolution="10000" status="6" created="2018-04-21 23:38:02.0" updated="2018-07-20 19:08:48.0" resolutiondate="2018-06-15 13:38:23.0" votes="0" watches="3" workflowId="41917"> <description><! CDATA We've had some discussion on this in the past. Our process for cutting a release is cumbersome and can still yield errors.   I'd like to move to a model where we have:   1- daily (nightly), choose a commit and build, smoke, unit-test, integration-test, if all pass, we tag as 'stable' in Nexus (binaries and images) 2- (optional) stable binaries and images are subjected to continued system, performance, end-user, etc testing 3- (optional) when it's soup, we tag the repos at the commit corresponding to the stable images and binaries build, publish the stable images to dockerhub and tag as release and latest, and we rename the stable binary tarballs accordingly. 4- lather, rinse and repeat Â  I think that this also makes cutting a "release" smoother than it has been because we don't have a dependency on a previously published _release_, we can build everything with a dependency on the most recent stable images.   As for the version metadata, i would think that the way to finesse that is to have the version we report always be <version>-<commit sha>. If any development images find their way into the wild, they'll be easily recognized because the commit-sha will be incorrect.  ></description> </Issue>
