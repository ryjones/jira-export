<Issue id="20571" key="FAB-6007" number="6007" project="10002" reporter="hangyu_fjh" assignee="hangyu_fjh" creator="hangyu_fjh" type="10001" summary="Enable peer to connect to more than one different ordering services " priority="3" resolution="10000" status="6" created="2017-09-01 09:12:27.0" updated="2018-07-20 18:49:02.0" resolutiondate="2017-09-06 11:28:15.0" votes="1" watches="1" workflowId="39902"> <description><! CDATA It didn't go well when I tried the following use case.  There are two organization(A and B) which have already been running their own channels seperately(channelA and channelB) meaning that they have their own ordering system (ordererA and ordererB) and peers(peerA and PeerB). Now one day organization A wants to create a new channel C using its own orderering system with peerA and PeerB. PeerA joins the channel successully and starts to receive blocks from ordererA. the log shows that peerB joins successully, but actually peerB tries to send deliver request to ordererB instead of ordererA. The genesis block of channel C contains the info of ordererA but ignored by peerB.     After studying the code, I found out that when peer is asked to join a new channel, if it already belongs to a channel, despite of the orderer's information written in the genesis block it received, it still tries to connect to the orderer it first established connection with.　Since there is no information of channel C in ordererB, the error message of not being able to get block from ordererB keeps coming up. I think this situation should be improved.  ></description> </Issue>
