<Issue id="45089" key="FAB-17909" number="17909" project="10002" reporter="JIRAUSER19857" creator="JIRAUSER19857" type="10004" summary="Adding a peer node when no genesis block orderer exist in the channel" priority="3" resolution="10002" status="6" created="2020-05-17 06:49:42.0" updated="2020-06-30 16:05:56.0" resolutiondate="2020-06-30 16:03:17.0" votes="0" watches="4" workflowId="58999" archived="N"> <description><! CDATA The peer fails to join the channel in the following scenario: # A channel was created by the Orderer Organization (running 3 orderers in RAFT mode). # A peer organization was added (let's say with 3 peers). Chaincodes were installed, instantiated and invoked several times. # Over channel lifetime, the orderer nodes in channel were modified to the extent that *no channel genesis block orderers* existed in the channel any longer. # A requirement occurred to add a *new peer node* in the channel. On giving, channel genesis block, it kept trying to fetch next blocks (starting from 1) by reaching out to orderer defined in the block 0 of the channel.  As expected, the new peer could not fetch any block after block 0! Because all the orderers defined in the channel at the time of its creation were swapped over by different orderers over channel lifetime.  I tried looking online if this issue was officially addressed by the community. But could not find any proposed solution for this. Is this a bug and taken into consideration for development? Or is this addressed already?  ----------------------------------------------------------------------------------------------------------------------  UPDATE: *THIS SOLUTION DOES NOT WORK AS WELL!*  I found the solution to this problem:  We must pass the Orderer endpoint of one of the orderers that already exists in the channel! The modified command would be:  {{peer channel join -b mychannel.block -o orderer4.example.com --tls --cafile <pathToOrdererTLSCACert>}}  Where, {{orderer4.example.com}} *currently* belongs to the application channel.   ---------------------------------------------------------------------------------------------------------------------  UPDATE 2:  What if instead of swapping the nodes, I need to rotate the TLS certificates of the different consenters in the application channel, such that in  channel lifetime, at some point every consenter has a TLS certificate different from the one present in the channel genesis block. This would again stop the newly added peer nodes to join the channel by blocking them to sync any blocks after the block 0 of the application channel!  ></description> </Issue>
