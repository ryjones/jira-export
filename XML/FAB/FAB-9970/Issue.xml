<Issue id="30059" key="FAB-9970" number="9970" project="10002" reporter="pd93" creator="pd93" type="10001" summary="When a chaincode uses multiple PutState() calls, they should be bundled into a single request" priority="3" status="10100" created="2018-05-09 11:22:19.0" updated="2021-10-25 15:33:13.0" votes="1" watches="12" workflowId="35746"> <description><! CDATA *Scenario:*  I have large sets of data that I need to import into an instance of Hyperledger Fabric in the fastest way possible.     *Current Options:*  *1.* Send a single invocation for each record. This has major overhead issues as each invocation must be signed and validated. (very slow)  *2.* Group records into a bulk string (of say 1000 records), import all 1000 records in a single invocation with multiple calls to `stub.PutState()` in a loop. This option is far better. However, many separate calls to the ledger can still be slow. (In my tests each bulk of 1000 records can take around 5-10 seconds).     *Proposed Solution:*  Calls to `stub.PutState()` should be queued up and called together when the invocation is complete. OR A new API method should be added that does the above while leaving the original `PutState()` alone     You can also see the brief original discussion on RC with  ~yacovm :  https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=Qg6JNQN59H6iDxZNe   ></description> </Issue>
