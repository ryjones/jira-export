<Issue id="34077" key="FAB-12161" number="12161" project="10002" reporter="mudiverm" creator="mudiverm" type="10000" summary="Deferred Transactions in Fabric" priority="3" resolution="10001" status="6" created="2018-09-25 15:01:59.0" updated="2020-01-22 22:33:37.0" resolutiondate="2020-01-22 22:33:37.0" votes="0" watches="2" workflowId="45400"> <description><! CDATA *Fabric currently does not have support for submitting transactions with deferred execution subject to some conditions.* Many real-world scenarios and use-cases exist where transaction execution needs to be deferred: # Payment to be made after a specified time (e.g., start of every month) (can be handled with a trusted time oracle if there is one, but not otherwise) # Trading to close if asset is found to be too volatile in a market or too many transactions being made in a short time frame # Auction to close after a specified time duration for which no bids are received (e.g., no bids received for one day) # Interest/tax rate to be determined based on volume of transactions performed by one participant across multiple smart contracts (can be handled with a parent-smart contract that tracks transactions made in all other smart contract, but would be highly inefficient and wouldn't allow the multiple smart contracts to operate in parallel)  All deferred transactions are triggered when a logical condition becomes true - *a conditional deferred transaction* - not supported in today's blockchain platforms. The logic could involve information available to the platform and not to any one smart contract.        *Design Document:   https://docs.google.com/document/d/1FuyjsXUxeopMiHrKQGH69BR6mtfwP8a_jmjYkven3iE/edit?usp=sharing  ></description> </Issue>
