<Action id="55239" issue="33688" author="praveen.j" type="comment" created="2019-01-03 06:23:48.0" updateauthor="praveen.j" updated="2019-01-03 06:24:51.0"> <body><! CDATA  ~angelo.decaro  This is very useful. Just got around to looking at this.. thanks for incorporating. Some questions: # Slide 10, wanted to confirm my understanding that the first version will only support one token transfer from A to B in the expectation set by the chaincode. In future, you will permit more. Is that correct? # Is it possible to have the client invoking the chaincode transaction that generates the expectationDesc to be different from the client that needs to create the TokenTransaction? In that case, who should create the TX that includes both the endorsements and the TokenTransaction? As an example, lets say B delivers goods to A and generates an invoice in chaincode (B invokes the chaincode). The chaincode creates and expectationDesc that says A now needs to transfer tokens to B. Now, I presume A needs to create the TokenTransaction. Can these two be submitted together in your design? # I see FAB-12267 for supporting approve and transferFrom similar to ERC-20 for direct transfers. Do you have a notion of how this would work for indirect transfers through chaincode? Specifically, it would be nice if a chaincode can be approved for transfer of tokens similar to Ethereum. This would permit chaincodes to act as escrows and transfer funds it is approved to intended recepients based on exchange logic. This would require chaincodes to have identities and the ability to verify that a particular invocation was made by a chaincode rather than a client.  ></body> </Action>
<Action id="55240" issue="33688" author="angelo.decaro" type="comment" created="2019-01-03 07:07:35.0" updateauthor="angelo.decaro" updated="2019-01-03 07:07:35.0"> <body><! CDATA HiÂ  ~praveen.j , thanks a lot for feedback. Let me answer your questions: # Yes, correct. We decided to go that way for simplicity, at the least at the beginning. Then, we will incorporate the feedbacks :) # It is a very interesting scenario. I would say that that is doable as long as A and B have some sort of coordinations. For example, B can send to A, off-band, the endorsement B got. Then, A assembles the final transaction including the payment. What do you think of this setting? # Very good point. Let me say the following: we can argue that a chaincode identity is given by it is endorsement policy (at the end of the day, the endorsement policy controls the evolution of the chaincode's state). We might enhance the token system to recognise this forms of ownership. Meaning that, the owner is the chaincode's endorsement policy and a valid signature from that owner is an endorsement. What do you think?  Thanks again for your feedback :)  ></body> </Action>
