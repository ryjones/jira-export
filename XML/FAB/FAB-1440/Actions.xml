<Action id="20210" issue="13849" author="ratnakar" type="comment" created="2016-12-27 17:30:53.0" updateauthor="ratnakar" updated="2016-12-27 17:30:53.0"> <body><! CDATA FAB-181: Deploy a chaincode to a Peer and make it an Endorser for the chaincode   1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? ) 2. Register an authorized user binhn with CA supplying the user credentials 3. user binhn creates a chaincode spec of type "GOLANG" for chaincode "github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" with name "mycc1" with args  "init", "a", "100" , "b", "200"  ( Command : "peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{"Args": "init","1000" }' ") 4. user "binhn" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize()) 5. user "binhn" creates a deployment proposal from chaincode deployment spec created above 6. user "binhn" sends proposal to endorsers 7. Then user "binhn" expects valid proposal responses with status "200" from endorser vp0   (FAB-23: As an application developer, I want to provide friendly name to identify a chain code, so I can more easily manage and debug chain code.  This can be part of FAB-181) --------------------------------------------------------   FAB-182: Deploy a chaincode to a Peer along with name of the custom ESCC and VSCC and make it an Endorser for the chaincode  There is already sub task relevant to BDD exits item FAB-314 (In progress)  --------------------------------------------------------  FAB-183 : As an authorized user, I want to upgrade chaincode.  1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? ) 2. Register an authorized user binhn with CA supplying the user credentials 3. user binhn creates a chaincode spec of type "GOLANG" for chaincode "github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01"  with name "mycc1" with args  "init", "a", "100" , "b", "200"  ( Command : "peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{"Args": "init", "a", "100" , "b", "200" }' ") 4. user "binhn" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize()) 5. user "binhn" creates a deployment proposal from chaincode deployment spec created above 6. user "binhn" sends proposal to endorsers 7. Then user "binhn" expects valid proposal responses with status "200" from endorser vp0  8. user binhn sends an query (invoke ?) request with args  "query","a","b","10"  9  received an invalid response or an error (Invalid invoke function name) 10. user binhn Updates chaincode with examploe02 peer chaincode update -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{"Args": "init", "a", "100" , "b", "200" }' 11. Then user "binhn" received a valid deploy proposal responses with status "200" from endorser vp0  12. user binhn sends an query (invoke ?) request with args  "query","a"  and receives the response with expected value "100"  These covers the above FAB-1237: new "upgrade" command to CLI FAB-1238: implement "upgrade" command in Life Cycle System Chaincode (lccc.go)  --------------------------------------------------------  FAB-434: As a Committer I want to get a batch and turn it into a Block 1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? ) 2. Register an authorized user binhn with CA supplying the user credentials 3. user binhn creates a chaincode spec of type "GOLANG" for chaincode "github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" with name "mycc1" with args  "init", "a", "100" , "b", "200"  ( Command : "peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{"Args": "init","1000" }' ") 4. user "binhn" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize()) 5. user "binhn" creates a deployment proposal from chaincode deployment spec created above 6. user "binhn" sends proposal to endorsers 7. Then user "binhn" expects valid proposal responses with status "200" from endorser vp0 8. user "binhn" sends multiple (Howmany ?) invokes simultaneously and check if the Block is created successfully for all the transactions  (How to check the block height ?) TODO: Need to discuss with Murali. -------------------------------------------------------- FAB-497: Create system chaincode at the peer to handle configuration changes  Should this be split in to three usecases ? Need to discuss with Murali and Bin on the following 1. How to send the configuration changes to the peer (Is there a list of congiguration changes defined) 2. I could see this JIRA item is in completed state , but dependent JIRA items (FAB-914, 915 & 916) are not in completed state. -------------------------------------------------------- FAB-799 : Concurrent chaincode execution  (few scenarios  a. Deploy multiple chaincodes and send transactions concurrent to each chaincode  b. Invoke concurrent transactions on a single chaincode - This won't work as expected)  (a) 1. Given a network with a solo (can we use kafka too ?) orderer and peer vp0 (configure to make this peer endorser? ) 2. Register an authorized user binhn with CA supplying the user credentials 3. user binhn creates a chaincode spec of type "GOLANG" for chaincode "github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" with name "mycc1" with args  "init", "a", "100" , "b", "200"  ( Command : "peer chaincode deploy -n mycc1 -p github.com/hyperledger/fabric/examples/chaincode/go/mychain -c '{"Args": "init","1000" }' ") 4. user "binhn" creates a deployment spec using chaincode spec received in previous step, chainID , uuid and creator (obtained from msp.SigningIdentity.Serialize()) 5. user "binhn" creates a deployment proposal from chaincode deployment spec created above 6. user "binhn" sends proposal to endorsers 7. Then user "binhn" expects valid proposal responses with status "200" from endorser vp0  8. repeat steps 3 - 7 few more times with different chaincode names mycc2, mycc3 etc., 9. user binhn sends invoke request with args  "invoke","a", "b", "10"  simultaneously on all the chaincodes 10. user binhn sends query (invoke ?) request with args  "query","a"  on all chaincodes and receives the response with expected value "100"  (b) Need to have custom chaincode to achieve this ? -------------------------------------------------------- *TODO*: Need to disucuss with Murali/Binhn to understand on how to call CSCC with parameters etc., (need to discuss below)  FAB-1022: Call gossip when a peer join channel  FAB-1025 : Query configuration block of a chain  FAB-756:  Endorser GRPC API ( allow submitting a Proposal on a edorser peer and for app to tell a peer to join a channel) --------------------------------------------------------  ></body> </Action>
<Action id="23093" issue="13849" author="ratnakar" type="comment" body="Added the required feature files, closing this task" created="2017-04-27 18:27:47.0" updateauthor="ratnakar" updated="2017-04-27 18:27:47.0"/>
