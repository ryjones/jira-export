<Issue id="16093" key="FAB-3496" number="3496" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Nil check missing after proto deserialization" priority="3" resolution="10000" status="6" created="2017-04-28 16:19:48.0" updated="2018-07-20 14:12:26.0" resolutiondate="2017-05-03 10:16:57.0" votes="0" watches="1" workflowId="38210"> <description><! CDATA Since proto.Unmarshal may return nil and at the same time, inner structs might have a nil reference, the following case is possible: {code} 			for payload := s.payloads.Pop(); payload != nil; payload = s.payloads.Pop() { 				rawblock := &common.Block{} 				if err := pb.Unmarshal(payload.Data, rawblock); err != nil { 					logger.Errorf("Error getting block with seqNum = %d due to (%s)...dropping block", payload.SeqNum, err) 					continue 				} 				logger.Debug("New block with sequence number ", payload.SeqNum, " transactions num ", len(rawblock.Data.Data)) 				s.commitBlock(rawblock) 			} {code} the block that is received, has a nil Data, and then Data.Data would result in a null pointer panic.  ></description> </Issue>
