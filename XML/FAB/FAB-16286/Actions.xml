<Action id="65443" issue="41746" author="sykesm" type="comment" created="2019-11-11 16:49:10.0" updateauthor="sykesm" updated="2019-11-11 16:49:10.0"> <body><! CDATA Context Notes:  - The legacy lifecycle does validation through post-order execution by re-simulating the chaincode instantiation that was executed by lscc (but without the context and data that was available at simulation time). - At instantiation time, lscc has access to the chaincode bytes - but not all peers have the chaincode so they don't have access to the bytes at validation time - that means they trust the RWSet at validation time. - When you instantiate,  you include an instantiation policy that is validated... - Once a chaincode has been instantiated, the goal is to prevent updates that would do things like modify the endorsement policy.  ---- The test could exploit a "weird" (but expected) behavior: if you do not specify an instantiation policy, an implicit instantiation policy is created based on the current membership of the channel. After expanding the membership of the channel, if the new organization attempts to upgrade, the upgrade should fail.  Q: Does the upgrade fail at invoke time? If yes, we need to revisit with a custom RW set.  ></body> </Action>
