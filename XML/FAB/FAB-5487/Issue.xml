<Issue id="19510" key="FAB-5487" number="5487" project="10002" reporter="baha-sk" assignee="baha-sk" creator="baha-sk" type="10001" summary="Ability to call one SCC from another without providing the channel" priority="2" resolution="10000" status="6" created="2017-07-26 23:21:14.0" updated="2018-07-20 18:48:03.0" resolutiondate="2017-11-18 20:59:55.0" votes="0" watches="3" workflowId="39560"> <description><! CDATA Failing scenario: * client calls SCC1 without channel * SCC1 calls SCC2 without channel - this call fails  Currently when a client calls a SCC that invokes another SCC, the peer return the following error:   chaincode  isValidTxSim -> ERRO 297  3e126b84 No ledger context for INVOKE_CHAINCODE. Sending ERROR     But when the client calls a UCC that invokes a SCC, no error is thrown.        By digging for the root cause of the SCC to SCC invoke error, it was found that in the handler, the isValidTxSim function throws an error due to txsimulator = nil in the txContext. Obviously it is nil as SCC don't need a simulated transaction because of their nature of not writing info to the ledger.     the fix to all inter SCC invoking is to verify if ChainID is not being empty along with txsimulator != nil condition. Please comment if this fix is feasible or if it will impact current invoking.  ></description> </Issue>
