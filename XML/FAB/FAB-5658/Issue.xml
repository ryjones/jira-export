<Issue id="20025" key="FAB-5658" number="5658" project="10002" reporter="shanlusun" assignee="mastersingh24" creator="shanlusun" type="10001" summary="Make gRPC keepalive options configurable" priority="3" resolution="10000" status="6" created="2017-08-08 11:34:58.0" updated="2018-07-20 18:49:57.0" duedate="2017-08-14 00:00:00.0" resolutiondate="2017-11-24 22:48:53.0" votes="0" watches="1" workflowId="39664" security="10001"> <description><! CDATA Currently in the fabric v1.0 version the keepalive options of grpc is hardcoded and not exposed to configuration: {code:java} // hyperledger\fabric\core\comm\config.go  var ( // Is the configuration cached? configurationCached = false // Is TLS enabled tlsEnabled bool // Max send and receive bytes for grpc clients and servers maxRecvMsgSize = 100 * 1024 * 1024 maxSendMsgSize = 100 * 1024 * 1024 // Default keepalive options keepaliveOptions = KeepaliveOptions{ ClientKeepaliveTime:    300,  // 5 min ClientKeepaliveTimeout: 20,   // 20 sec - gRPC default ServerKeepaliveTime:    7200, // 2 hours - gRPC default ServerKeepaliveTimeout: 20,   // 20 sec - gRPC default } ) {code} In our fabric network each peers and orderer needs to go through a LVS proxy which has a strategy to close long time idle connections(around 5 minutes). Actually this is a common strategy in some partner company(which has intent to join our fabric network), their LVS want to release resource for more new connections.  The 'idle' here means there is no any data transferring through this connection. So peer might lose connection to orderer with the keepalive options above, that's why we want to overwrite keepalive options.   Also seems there is no reconnecting strategy currently, once the peers lose connection to orderer they can't get block broadcast from orderer anymore.  Talked with  ~yacovm , even through we have gossips always transmits data between peers once in a while, but we might still have problem between peers and orderer.                 ></description> </Issue>
