<Issue id="31131" key="FAB-10686" number="10686" project="10002" reporter="manish-sethi" assignee="sykesm" creator="manish-sethi" type="10004" summary="Fix equality check in test util" priority="3" resolution="10000" status="6" created="2018-06-18 07:03:48.0" updated="2019-03-20 06:46:38.0" resolutiondate="2018-11-30 18:03:56.0" votes="0" watches="2" workflowId="35867"> <description><! CDATA The equality check in the test util, internally tries to convert the value to a JSON before evaluating for the equality -  https://github.com/hyperledger/fabric/blob/master/common/ledger/testutil/test_util.go#L63 |https://github.com/hyperledger/fabric/blob/master/common/ledger/testutil/test_util.go#L63.   This has unintended consequences. As far as I recall, the intention was to compare the equivalence of JSON objects in couch related tests. However, if someone passes two byte arrays for equal comparison with the intention of exact match, the check may pass for a wrong reason - if the byte arrays happens to be a valid JSON string.  For instance, this CR -  https://gerrit.hyperledger.org/r/#/c/22931/  fixes a bug that makes sure that if a string `null` or `  null  ` is passed in the `PutState`, the `GetState` returns the same by treating the passed in string as a non-json and hence storing it as attachment in couch. Though, the fix is correct as intended but the above mentioned equality check will wrongly match `null` same as `  null  `.  To fix this equality:  1) conversion to JSON should be removed from the function `AssertEquals`  2) There should be a separate explicit function say `AssertEqaulJsons` for checking json objects equivalence.  Change in the test code to invoke explicitly based on the need of the equivalence check.     ></description> </Issue>
