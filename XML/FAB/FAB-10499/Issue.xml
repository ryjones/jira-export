<Issue id="30793" key="FAB-10499" number="10499" project="10002" reporter="denyeart" assignee="c0rwin" creator="denyeart" type="10004" summary="With two transactions in a block, private data pulling is inefficient" priority="3" resolution="10000" status="6" created="2018-05-31 18:55:23.0" updated="2018-07-20 14:16:52.0" resolutiondate="2018-06-18 13:20:27.0" votes="0" watches="2" workflowId="42382"> <description><! CDATA With two transactions in a block, it pulls for each tx. And for each pull it pulls both tx private data. And the pulls are separated by 1s. If different peers have different private data, that would kind of make sense. But if the first pull gives everything you need for both transactions, no need for 2nd pull. And no reason to wait one second between pulls.  These issues may be split into separate Jiras/CRs as needed.  Attaching the debug log for block12 (puller side), which has two marble transactions, one for marble12a and one for marble12b.  Here are a few of the interesting debug statements to investigate:  Request goes out for first transaction, response comes back with payload of both transactions: {code:java} 2018-05-31 18:22:10.057 UTC  gossip/comm  sendToEndpoint -> DEBU 6adc Entering, Sending to peer0.org1.example.com:7051 , msg: GossipMessage: nonce:657187042751090023 channel:"mychannel" tag:CHAN_ONLY privateReq:<digests:<tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12 > digests:<tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12 > > , Envelope: 225 bytes, Signature: 0 bytes 2018-05-31 18:22:10.059 UTC  gossip/comm  func1 -> DEBU 6ade Got message: GossipMessage: Channel: mychannel, nonce: 657187042751090023, tag: CHAN_ONLY  tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12  with 2 elements tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12  with 2 elements , Envelope: 747 bytes, Signature: 0 bytes 2018-05-31 18:22:10.060 UTC  gossip/privdata  handleResponse -> DEBU 6adf Got elements:<digest:<tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12 > payload:"\032 \n\033\000color~name\000blue\000marble12a\000\032\001\000\032 \n\tmarble12a\032N{\"docType\":\"marble\",\"name\":\"marble12a\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" payload:"\032 \n\033\000color~name\000blue\000marble12b\000\032\001\000\032 \n\tmarble12b\032N{\"docType\":\"marble\",\"name\":\"marble12b\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" > elements:<digest:<tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12 > payload:"\032 \n\033\000color~name\000blue\000marble12a\000\032\001\000\032 \n\tmarble12a\032N{\"docType\":\"marble\",\"name\":\"marble12a\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" payload:"\032 \n\033\000color~name\000blue\000marble12b\000\032\001\000\032 \n\tmarble12b\032N{\"docType\":\"marble\",\"name\":\"marble12b\",\"color\":\"blue\",\"size\":35,\"owner\":\"tom\"}" >  from 172.18.0.6:7051{code} but even though we got the two payloads, I see messages like "Got empty response": {code:java} 2018-05-31 18:22:10.060 UTC  gossip/privdata  fetch -> DEBU 6ae0 Got empty response for tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12  2018-05-31 18:22:10.060 UTC  gossip/privdata  fetch -> DEBU 6ae1 Got empty response for tx_id:"b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f" namespace:"marblesp" collection:"collectionMarbles" block_seq:12 {code} and fetchFromPeers debug looks strange, with multiple messages of "Ignoring ... because it wasn't found in the block": {code:java} 2018-05-31 18:22:10.061 UTC  gossip/privdata  fetchFromPeers -> DEBU 6ae3 Fetched {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles c0b54111733aaa14658114a990f1109c146057dd4887217eab8a936924d1789e} 2018-05-31 18:22:10.062 UTC  gossip/privdata  fetchFromPeers -> DEBU 6ae4 Ignoring {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles 50d64174c9c3f603a10dfe80d0cf0b3cead19f94b4971874a6ac901bcd6b92c3} because it wasn't found in the block 2018-05-31 18:22:10.062 UTC  gossip/privdata  fetchFromPeers -> DEBU 6ae5 Ignoring {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles c0b54111733aaa14658114a990f1109c146057dd4887217eab8a936924d1789e} because it wasn't found in the block 2018-05-31 18:22:10.062 UTC  gossip/privdata  fetchFromPeers -> DEBU 6ae6 Ignoring {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarbles 50d64174c9c3f603a10dfe80d0cf0b3cead19f94b4971874a6ac901bcd6b92c3} because it wasn't found in the block 2018-05-31 18:22:10.062 UTC  gossip/privdata  fetchFromPeers -> DEBU 6ae7 {b19efd29b14094a71f7a15046ce74f166ed57f75634940f51e795d582302ea26 1 marblesp collectionMarblePrivateDetails 08a426286ef45fdcb9df90796226f329a2254ead3a8780655f4111e48d1f6e85} was purged or will soon be purged, skipping fetch 2018-05-31 18:22:10.062 UTC  gossip/privdata  fetchFromPeers -> DEBU 6ae8 {b044c66886da4c63570158e2acfb6598105faf69f597af4ec3df948125b4029f 0 marblesp collectionMarblePrivateDetails 81fa13332b4253b5eae1608dacffdc258d02b42afc38c505c30234a0e11af693} was purged or will soon be purged, skipping fetch{code} And then it waits 1s before pulling the second transaction: {code:java} 2018-05-31 18:22:11.063 UTC  gossip/privdata  func1 -> DEBU 6b08 Fetching {b19efd29b14094a71f7a15046ce74f166ed57f75634940f51e795d582302ea26 1 marblesp collectionMarbles 50d64174c9c3f603a10dfe80d0cf0b3cead19f94b4971874a6ac901bcd6b92c3} from peers{code}  ></description> </Issue>
