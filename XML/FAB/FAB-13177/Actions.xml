<Action id="54398" issue="35904" author="kchristidis" type="comment" body="H/T to  ~guoger  for bringing this up." created="2018-12-06 01:30:01.0" updateauthor="kchristidis" updated="2018-12-06 01:30:01.0"/>
<Action id="54442" issue="35904" author="kchristidis" type="comment" body=" ~mastersingh24 : This can wait until after we&apos;ve cut 1.4, but LMK if (a) this makes sense, and (b) how tricky you think the implementation of it might be." created="2018-12-06 13:36:46.0" updateauthor="kchristidis" updated="2018-12-06 13:36:46.0"/>
<Action id="54745" issue="35904" author="yacovm" type="comment" created="2018-12-13 00:20:38.0" updateauthor="yacovm" updated="2018-12-13 00:20:38.0"> <body><! CDATA I don't think we should do this.  * We don't need two sets of TLS certificates - this is not a must, this is an option.  By default|https://gerrit.hyperledger.org/r/#/c/28107/5/sampleconfig/orderer.yaml  we don't need, and we use the "general" TLS certificate and the same TLS listener is used for both client facing gRPC calls and intra-cluster calls. * Even if we want to exercise a separate listener - we don't need more than a single cert-key pair. We can just add it twice - once to the general TLS config and once to the cluster TLS config. It doesn't matter to the code, that we cheated and used the same certificate twice. * Cryptogen is ignorant of consensus type, and there is currently no way to specify it.  I believe we should strive to keep it that way unless there is no other way.  * If someone really wants to give a different TLS certificate to the cluster and to the general TLS server, it can just specify twice the OSN nodes, and use the even ones as one and the odd ones as the other.   ></body> </Action>
<Action id="54746" issue="35904" author="yacovm" type="comment" created="2018-12-13 00:34:12.0" updateauthor="yacovm" updated="2018-12-13 00:34:12.0"> <body><! CDATA Another thing would be, that - the only reason you'd want to use 2 different listeners in the first place is - if you either need to rotate TLS certificates in the client facing server on a frequent basis, or want clients to not need to use fabric TLS CAs, and want them to use the operating system's root CA cert pool and use "internet-CAs" issued TLS certificates for client facing.   In any case - neither of these 2 (rotation + different issuer) are related to testing, but are related to production deployments with specific needs.   ></body> </Action>
<Action id="54764" issue="35904" author="kchristidis" type="comment" created="2018-12-13 13:15:46.0" updateauthor="kchristidis" updated="2018-12-13 13:15:46.0"> <body><! CDATA I'm not sure if it's the "must" in the {{raft-must}} label that's throwing us off here? If that's it, let me say that WAL pruning is in the {{raft-must}} list and that's not needed for us to run tests either. {{raft-must}} is just a list of items that we should try to finish within the next two weeks.  Back to the comment in this thread — most of the argument boils down to "we can run this just fine with the same cert" and "we don't need this for testing"; but the thing is, neither of those statements are in dispute. (In fact, I'm acknowledging the first statement in the Jira description.)  If the proper way to do it in production is by using two different certs, then we should look into having our tooling support that option — this is what this Jira is about.  If we say, "look this messes up the configuration in cryptogen significantly" (which is also why I asked Gari above, but it's an open question), or if we still say, "this doesn't make sense because of reason X", I'm absolutely fine with dropping this thread. (Less work!)  But if we do suggest rolling with different certs in production, the fact that we don't need this functionality for testing, or the fact that we can run just fine with the same cert is not relevant.  ></body> </Action>
<Action id="54765" issue="35904" author="kchristidis" type="comment" created="2018-12-13 13:24:42.0" updateauthor="kchristidis" updated="2018-12-13 13:24:42.0"> <body><! CDATA That said, I am thinking about this:  {quote}They can just specify twice the OSN nodes, and use the even ones as one and the odd ones as the other.{quote}  And I think it's a neat idea.  ~guoger ,  ~adarshsaraf123  your thoughts?  ></body> </Action>
<Action id="54766" issue="35904" author="yacovm" type="comment" created="2018-12-13 13:29:40.0" updateauthor="yacovm" updated="2018-12-13 13:29:40.0"> <body><! CDATA {quote}If the proper way to do it in production is by using two different certs, then we should look into having our tooling support that option — this is what this Jira is about.{quote}  But it doesn't matter if we use 2 different certs or the same cert twice. It's the same thing because 2 different TLS listeners don't care about each other.   ></body> </Action>
<Action id="54777" issue="35904" author="kchristidis" type="comment" body="We discussed this during today&apos;s scrum. Since cryptogen is not meant for cert generation during production, there&apos;s no point in littering it with additional options. We won&apos;t pursue this thread then. Closing it." created="2018-12-13 15:00:05.0" updateauthor="kchristidis" updated="2018-12-13 15:00:05.0"/>
