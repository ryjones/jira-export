<Issue id="30330" key="FAB-10164" number="10164" project="10002" reporter="latitiah" assignee="skarim" creator="latitiah" type="10001" summary="TEST PLAN: Fabric-CA Certificate Management" priority="3" resolution="10000" status="6" created="2018-05-17 03:38:37.0" updated="2018-12-11 16:33:08.0" resolutiondate="2018-12-11 16:33:08.0" votes="0" watches="1" workflowId="42800"> <description><! CDATA Before closing this testplan task, coverage must be reviewed and approved (via upvote or comment) by the epic feature owner and the test leads identified below.  +*Location / Description of*+ docs, APIs, config vars, system configuration (fabric, SDKs, fabric-samples) :  Doc:  https://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#listing-certificates-information   API:  https://github.com/hyperledger/fabric-ca/blob/master/swagger/swagger-fabric-ca.json   CLI:  https://hyperledger-fabric-ca.readthedocs.io/en/latest/clientcli.html   +*Unit Test (UT) leader*+:  ~skarim   Test coverage maintained above 85% for all packages {noformat} ok      github.com/hyperledger/fabric-ca/cmd/fabric-ca-client/command    53.059s    coverage: 89.7% of statements ok      github.com/hyperledger/fabric-ca/cmd/fabric-ca-server    3.253s    coverage: 91.3% of statements ok      github.com/hyperledger/fabric-ca/lib    117.582s    coverage: 85.5% of statements ok      github.com/hyperledger/fabric-ca/lib/attr    0.023s    coverage: 97.9% of statements ok      github.com/hyperledger/fabric-ca/lib/metadata    0.020s    coverage: 92.5% of statements ok      github.com/hyperledger/fabric-ca/lib/server    0.023s    coverage: 96.3% of statements ok      github.com/hyperledger/fabric-ca/lib/spi    0.018s    coverage: 100.0% of statements ok      github.com/hyperledger/fabric-ca/lib/streamer    0.017s    coverage: 86.4% of statements ok      github.com/hyperledger/fabric-ca/lib/tcert    0.047s    coverage: 90.7% of statements ok      github.com/hyperledger/fabric-ca/lib/tls    0.254s    coverage: 87.9% of statements ok      github.com/hyperledger/fabric-ca/util    2.850s    coverage: 85.8% of statements{noformat} +*Function Test (FVT) leader*+:  ~skarim  In v1.2 the peer is not well structured for integration tests, therefore we will compensate with expanded Unit tests and E2E tests. Describe function test coverage approach here:  A.  Expand unit testcases beyond traditional UT coverage, for the following integration scenarios that otherwise might be doneusing the ginko framework): Unit tests are considering real (non-mockup) components         Covered via integration/acceptance tests below  B.  Integration/Acceptance testcases scenarios (Add one individual jira TASK within this feature Epic for each of these) # Testing new Certificates REST API with Postgres FAB-10224 # Testing new Certificates REST API with MySQL FAB-10321  C.  Other functional testing required: N/A  +*System Verification Test (SVT) leader*+: ???? V1.2 System Test Plan (Epic) FAB-???? Covers stress, load, performance, full system integration, resiliency, recover, etc.  Considering this feature, what scenarios are of particular interest and concern: # Performance on both server and client when a request is made to get a large (>500) number of certificates. Neither client nor server should experience OOM.  ></description> </Issue>
