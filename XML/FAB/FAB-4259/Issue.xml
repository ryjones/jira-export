<Issue id="17309" key="FAB-4259" number="4259" project="10002" reporter="denyeart" creator="denyeart" type="10001" summary="Need instructions for starting fabric binaries in trial environment (outside of docker)" priority="2" resolution="10001" status="6" created="2017-05-31 12:24:51.0" updated="2020-01-22 19:13:34.0" resolutiondate="2020-01-22 19:13:34.0" votes="0" watches="6" workflowId="35195" security="10001"> <description><! CDATA For developers wanting to test end-to-end, or for consumers wanting to do a trial with a minimal config outside docker, we need instructions for starting and running the fabric network end-to-end.  Here is what I do, although I don't know if this is the 'best' approach.  +make binaries (if in dev environment):+ make configtxgen make orderer make peer  +In /sampleconfig/orderer.yaml, change:+ GenesisProfile: SampleSingleMSPSolo  +start orderer:+ orderer  +start peer:+ CORE_LOGGING_LEVEL=DEBUG peer node start -o 127.0.0.1:7050 --peer-defaultchain=false --peer-chaincodedev=false +or start peer with CouchDB:+ CORE_LOGGING_LEVEL=DEBUG CORE_LEDGER_STATE_STATEDATABASE=CouchDB peer node start --peer-defaultchain=false  +Create and join channel:+ configtxgen -channelID myc -outputCreateChannelTx myc.tx -profile SampleSingleMSPChannel peer channel create -c myc -o 127.0.0.1:7050 -f myc.tx peer channel join -c myc -b myc.block  +Install and Instantiate chaincode, e.g. marbles02:+ peer chaincode install -n marbles -p github.com/hyperledger/fabric/examples/chaincode/go/marbles02 -v 1  peer chaincode instantiate -C myc -n marbles -p github.com/hyperledger/fabric/examples/chaincode/go/marbles02 -c '\{"Args": "init" }' -v 1 -o 127.0.0.1:7050  +Sample invokes for marbles02:+ peer chaincode invoke -o 127.0.0.1:7050 -C myc -n marbles -c '\{"Args": "initMarble","marble1","blue","35","tom" }' peer chaincode invoke -o 127.0.0.1:7050 -C myc -n marbles -c '\{"Args": "transferMarble","marble1","jerry" }' peer chaincode invoke -o 127.0.0.1:7050 -C myc -n marbles -c '\{"Args": "transferMarblesBasedOnColor","blue","jerry" }' peer chaincode invoke -o 127.0.0.1:7050 -C myc -n marbles -c '\{"Args": "delete","marble1" }'  +Sample queries for marbles02:+ peer chaincode query -C myc -n marbles -c '\{"Args": "readMarble","marble1" }' peer chaincode query -C myc -n marbles -c '\{"Args": "getMarblesByRange","marble1","marble8" }' peer chaincode query -C myc -n marbles -c '\{"Args": "getHistoryForMarble","marble1" }'  +Sample Rich Query (Only works if CouchDB is used as state database):+ peer chaincode query -C myc -n marbles -c '\{"Args": "queryMarblesByOwner","tom" }' peer chaincode query -C myc -n marbles -c '\{"Args": "queryMarbles","\\{\"selector\":\\{\"owner\":\"tom\"}}" }'  ></description> </Issue>
