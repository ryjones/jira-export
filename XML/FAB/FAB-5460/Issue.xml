<Issue id="19478" key="FAB-5460" number="5460" project="10002" reporter="sudeshrshetty" assignee="sudeshrshetty" creator="sudeshrshetty" type="10000" summary="Ability to distribute precompiled (BINARY) user chaincode" priority="2" resolution="10000" status="6" created="2017-07-25 19:47:15.0" updated="2018-07-20 19:09:12.0" resolutiondate="2017-11-08 14:34:40.0" votes="0" watches="7" workflowId="39540"> <description><! CDATA As noted in the comments below:  With the move to Go 1.9 as well as --FAB-6613--, it possible to do this by specifying your own chaincode.golang.runtime image in which you would include your compile plugins.  Then you can write standard chaincode which loads the plugin(s).     *Old Description (abandoned)*  As a fabric application developer, I want the ability to deploy user chaincode in pre-built form so that each member organizations' peers do not need to build the UCC (nor need to have the source code on the peer).  Note: the controls on allowing organizations to examine the source code or build their own images is separate from the deployment issue. i.e., each channel and member organization can still make a decision on whether to deploy the UCC without requiring the source code to be built and available to the fabric peer itself.  Currently, installing a user chaincode on a peer requires the chaincode source code to be provided in a chaincode deployment package.  This new feature introduces an option that a chaincode deployment package contains pre-compiled executable binary instead of the chaincode source code. This introduces a new BINARY chaincode type. During the chaincode instantiation, Fabric skips the chaincode compilation step and deploys the executable binary prepared by the client into a CC docker container.  Design:   https://docs.google.com/document/d/1kTkZEEaIB6tQJTQtWzx1YH2zR1O2PwrRhIVpTSUpLiQ/edit#|https://docs.google.com/document/d/1kTkZEEaIB6tQJTQtWzx1YH2zR1O2PwrRhIVpTSUpLiQ/edit   ></description> </Issue>
