<Action id="62603" issue="41638" author="sykesm" type="comment" created="2019-08-05 22:15:52.0" updateauthor="sykesm" updated="2019-08-05 22:15:52.0"> <body><! CDATA fabric test: https://gerrit.hyperledger.org/r/c/fabric-test/+/32726 FAB-16213 remove encc_example code and test fabric: https://gerrit.hyperledger.org/r/c/fabric/+/32727 FAB-16213 remove shim/ext/entities  ></body> </Action>
<Action id="62604" issue="41638" author="sykesm" type="comment" created="2019-08-05 22:21:17.0" updateauthor="sykesm" updated="2019-08-05 22:21:17.0"> <body><! CDATA System test impact: we no longer have the {{github.com/hyperledger/fabric/core/chaincode/shim/ext/entities}} package. If there are system tests that exploit this functionality, we need to discuss.  /cc  ~scottz   ></body> </Action>
<Action id="62608" issue="41638" author="scottz" type="comment" created="2019-08-05 23:29:00.0" updateauthor="scottz" updated="2019-08-05 23:29:00.0"> <body><! CDATA The only impacted tests we have are those two Behave daily test scenarios in fabric-test/feature/chaincodes.feature. To replace them with equivalents in fabric IT, I had created two testtasks FAB-16016 and FAB-16017. If we are removing the code, then we could abandon/close those two issues, as well as disable those two tests now.  ></body> </Action>
<Action id="67876" issue="41638" author="davidkhala" type="comment" created="2020-02-09 06:44:56.0" updateauthor="davidkhala" updated="2020-02-09 06:45:09.0"> <body><! CDATA Is there a recent plan to recover the removed  {code:go} github.com/hyperledger/fabric/core/chaincode/shim/ext/entities {code} back in somewhere else?    ></body> </Action>
<Action id="67877" issue="41638" author="sykesm" type="comment" created="2020-02-09 14:04:15.0" updateauthor="sykesm" updated="2020-02-09 14:04:15.0"> <body><! CDATA No. If you wish you use that package, youâ€™ll need to vendor it (and its dependency tree) from the 1.4 tree using the tools of your choice. The package was removed as it required bccsp - a package that is not intended for consumption by applications or chaincode.  We are, however, open to contributions that provide a data-compatible implementation which does not add additional dependencies to fabric-chaincode-go.  ></body> </Action>
