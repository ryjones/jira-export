<Action id="52155" issue="34626" author="mastersingh24" type="comment" body=" ~angelo.decaro " created="2018-10-12 12:00:22.0" updateauthor="mastersingh24" updated="2018-10-12 12:00:22.0"/>
<Action id="52252" issue="34626" author="jonathanlevi" type="comment" created="2018-10-15 11:49:42.0" updateauthor="jonathanlevi" updated="2018-10-15 11:49:42.0"> <body><! CDATA That's an important question. That is, "where should the 'error handling' logic actually live".        ></body> </Action>
<Action id="52253" issue="34626" author="jonathanlevi" type="comment" body="Specifically about this (specific) issue:  ~angelo.decaro  is it easy to also attach a stack trace?" created="2018-10-15 11:50:22.0" updateauthor="jonathanlevi" updated="2018-10-15 11:50:22.0"/>
<Action id="52254" issue="34626" author="angelo.decaro" type="comment" created="2018-10-15 12:02:26.0" updateauthor="angelo.decaro" updated="2018-10-15 12:19:47.0"> <body><! CDATA One can say that fabric/idemix should not panic, in the first place, when receiving a malformed object. This is also the golang's cryoto packages do. For instance, I was trying to find a way to make the golang x509 package to panic with a malformed certificate but I haven't found any.  For the stack-trace,  ~JonathanLevi , you can just copy past the code I have posted in *msp_test.go* and execute it. So you can also interact with your preferred IDE.     ></body> </Action>
<Action id="52257" issue="34626" author="jonathanlevi" type="comment" body="Thanks. Will get back to this very shortly." created="2018-10-15 12:53:14.0" updateauthor="jonathanlevi" updated="2018-10-15 12:53:14.0"/>
<Action id="52260" issue="34626" author="jonathanlevi" type="comment" created="2018-10-15 13:22:35.0" updateauthor="jonathanlevi" updated="2018-10-15 13:22:35.0"> <body><! CDATA OK.  1. I found the issue + I have a fix. We actually reproduced a similar issue last week, but triggered differently.   2. We still need to figure out where we should put the error handling logic, going forward/separately as per Angelo's suggestions.  The (triggering) issue is in AMCL I believe, but I want to play with this a bit more. Will keep you posted.  ></body> </Action>
<Action id="52261" issue="34626" author="angelo.decaro" type="comment" body="Actually, I have found the issue by testing idemix. The test I have reported here is just to show how the peer can crash." created="2018-10-15 13:26:44.0" updateauthor="angelo.decaro" updated="2018-10-15 13:26:44.0"/>
<Action id="52577" issue="34626" author="angelo.decaro" type="comment" created="2018-10-24 09:19:18.0" updateauthor="angelo.decaro" updated="2018-10-24 09:19:18.0"> <body><! CDATA Hi All,  Here is my plan to solve the issue once and for all: # Hide idemix behind BCCSP and catch all panics there (stack starting at  https://gerrit.hyperledger.org/r/#/c/20529/)  # Refactor fabric and fabric-ca to not use anymore fabric/idemix but route everything to BCCSP # Refactor idemix   If you have comments, please don't hesitate :)  ></body> </Action>
<Action id="52614" issue="34626" author="dhuseby" type="comment" body="I saw the email about a CVE, are we at a point now where we need to issue one?" created="2018-10-25 02:17:57.0" updateauthor="dhuseby" updated="2018-10-25 02:17:57.0"/>
<Action id="52617" issue="34626" author="angelo.decaro" type="comment" body="So, if we follow the strategy that I have highlighted in my previous comment, maybe not. Cause, I will make bccsp handling the panic. The connection will not be so evident. Wdyt?" created="2018-10-25 07:40:26.0" updateauthor="angelo.decaro" updated="2018-10-25 07:40:26.0"/>
<Action id="52818" issue="34626" author="angelo.decaro" type="comment" body="This is the first CR in the stack that bridges idemix and BCCSP: https://gerrit.hyperledger.org/r/#/c/20529/" created="2018-10-31 15:17:11.0" updateauthor="angelo.decaro" updated="2018-10-31 15:17:11.0"/>
<Action id="52819" issue="34626" author="jyellick" type="comment" created="2018-10-31 15:23:47.0" updateauthor="jyellick" updated="2018-10-31 15:23:47.0"> <body><! CDATA {quote} Now, the ordering service is supposed to have panic handlers to avoid the process crashing. Look at orderer/common/server/server.go functions Broadcast and Deliver. Don't know if this leave the ordered in a non-consisting state though. {quote}  Just to clarify, by design, these panic handlers do _not_ affect the determinism of the orderer, and will not leave the orderer in a bad state.  The orderer is split into effectively two halves: the client processing half, and the consenting half.  On the consenter side, we must be deterministic, and any panics in general may not be ignored.  On the client side, any panics are harmless, and at worst, result in data not making it to the consenter half (in the broadcast case), or have zero effect on the consenter side (in the deliver case).  ></body> </Action>
<Action id="53665" issue="34626" author="dhuseby" type="comment" body=" ~angelo.decaro  and  ~jyellick  so this is a remote DoS by sending messages with bad idemix signatures?  Does this affect deployed versions of Fabric?  I need to double check that this is *not* a CVE level issue.  If deployed Fabric networks are vulnerable, I need to get the CVE process going." created="2018-11-20 19:49:31.0" updateauthor="dhuseby" updated="2018-11-20 19:49:31.0"/>
<Action id="53675" issue="34626" author="angelo.decaro" type="comment" created="2018-11-21 07:40:35.0" updateauthor="angelo.decaro" updated="2018-11-21 07:40:35.0"> <body><! CDATA So, the ordering service should not be affected by the issue cause a panic catcher is in place in Broadcast API. If there is a channel with an Idemix-based MSP then a malicious request to a peer can crash it.  I haven't checked yet if also the CA is affected by this issue.  With FAB-8930, the idemix-based BCCSP will be able to catch the panics, therefore we should not have this issue anymore.  ></body> </Action>
<Action id="53825" issue="34626" author="angelo.decaro" type="comment" created="2018-11-27 07:15:11.0" updateauthor="angelo.decaro" updated="2018-11-27 08:26:01.0"> <body><! CDATA  ~denyeart ,  ~mastersingh24 ,  FAB-8930 has been completed. Now, the Idemix-based MSP does not panic anymore (at least with very high probability). Let's analyse now fabric behaviour with the new Idemix-based MSP. # *A malicious transaction, containing a malformed idemix identity as creator, is sent to the ordering service.* Previous MSP panic, new MSP returns an error. In both cases, the ordering service does not crash. (Remember the the orderer catches unexpected panics). *(NO FORK)* # *A config update is sent with a malformed idemix msp configuration*. This scenario needs to be tested to understand if there is a difference in behaviour.  ~jyellick , any gut feeling here? *(FORK?)* # *A malformed proposal or gossip message or any other message that requires to validate an idemix identity, is sent to a peer.* Previous MSP panic, peer crash. New MSP returns an error, the peer does not crash. *(FORK?)*   Anything missing?  ~ales ,  ~JonathanLevi ,  ~yacovm    ~smithbk , at some point we have to modify Fabric-CA to use BCCSP also for idemix-related operation. I suspect that also CA is at risk.  ></body> </Action>
<Action id="54447" issue="34626" author="angelo.decaro" type="comment" body=" ~denyeart , with  https://gerrit.hyperledger.org/r/#/c/27952/  merged, fabric is now protected against the panics.  ~skarim  will update soon fabric-ca as well." created="2018-12-06 15:13:38.0" updateauthor="angelo.decaro" updated="2018-12-06 15:13:38.0"/>
<Action id="54519" issue="34626" author="denyeart" type="comment" body=" ~skarim  Can you confirm so fabric-ca update is made so that this can be closed?" created="2018-12-08 16:38:45.0" updateauthor="denyeart" updated="2018-12-08 16:38:45.0"/>
<Action id="54520" issue="34626" author="jonathanlevi" type="comment" body="Errors definitely propagate up. I cant confirm that every error does though.  ~skarim  is definitely the guy to confirm ;-)" created="2018-12-08 16:41:29.0" updateauthor="jonathanlevi" updated="2018-12-08 16:41:29.0"/>
<Action id="54528" issue="34626" author="angelo.decaro" type="comment" body=" ~denyeart ,  https://gerrit.hyperledger.org/r/#/c/27989/  got merged. It contains the fix for fabric-ca.  ~skarim , do you have also tests to checks that panics are caught? " created="2018-12-09 12:40:35.0" updateauthor="angelo.decaro" updated="2018-12-09 12:40:35.0"/>
<Action id="54605" issue="34626" author="angelo.decaro" type="comment" body="Good,  https://gerrit.hyperledger.org/r/#/c/28041/  tests also that a panic is caught. Improving test coverage there, would be a plus but at least we know that fabric-ca should be safe as well. Thanks,  ~skarim  :)" created="2018-12-10 16:40:43.0" updateauthor="angelo.decaro" updated="2018-12-10 16:40:43.0"/>
<Action id="54615" issue="34626" author="denyeart" type="comment" body=" ~angelo.decaro I believe this Jira can now be closed?" created="2018-12-10 18:53:36.0" updateauthor="denyeart" updated="2018-12-10 18:53:36.0"/>
<Action id="54861" issue="34626" author="angelo.decaro" type="comment" body=" ~denyeart  for v1.4, yes. I haven&apos;t submitted yet the change-set for v1.3.1 though. How shall we proceed there?" created="2018-12-17 09:44:09.0" updateauthor="angelo.decaro" updated="2018-12-17 09:44:09.0"/>
<Action id="54865" issue="34626" author="denyeart" type="comment" body=" ~angelo.decaro  One thing that we could do, is put it in the v1.4.0 release notes as a resolved vulnerability and suggest people using Idemix move to v1.4.0.  Regardless, we are suggesting utilize v1.4.0 for production scenarios." created="2018-12-17 13:28:42.0" updateauthor="denyeart" updated="2018-12-17 13:28:42.0"/>
<Action id="55400" issue="34626" author="angelo.decaro" type="comment" body=" ~denyeart  I was actually thinking that maybe it is better not to say to avoid to attract attention. There might be still other issues over there :(" created="2019-01-08 12:07:31.0" updateauthor="angelo.decaro" updated="2019-01-08 12:42:37.0"/>
<Action id="55401" issue="34626" author="jonathanlevi" type="comment" created="2019-01-08 12:36:43.0" updateauthor="jonathanlevi" updated="2019-01-08 12:36:43.0"> <body><! CDATA I completely agree with  ~angelo.decaro  !     Happy 2019 ;-)  ></body> </Action>
<Action id="55583" issue="34626" author="denyeart" type="comment" body="Ok, since we have told the community that v1.4.0 is the recommended release for production that will be supported, I think we can skip the backport to v1.3.x.  I&apos;m closing since we have a fix in v1.4.0." created="2019-01-13 18:52:58.0" updateauthor="denyeart" updated="2019-01-13 18:52:58.0"/>
