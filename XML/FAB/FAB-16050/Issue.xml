<Issue id="41372" key="FAB-16050" number="16050" project="10002" reporter="scottz" creator="scottz" type="10101" summary="Replacement for Behave peer.feature test using old cc version after upgrade" priority="3" resolution="10200" status="6" created="2019-07-23 18:16:16.0" updated="2019-08-09 20:13:37.0" resolutiondate="2019-08-09 15:36:59.0" votes="0" watches="1" workflowId="54379"> <description><! CDATA This task is to ensure coverage of item 90 of the "Behave Testcases" tab of https://docs.google.com/spreadsheets/d/1MIz_E0iFC3lCJGCmXCmRvSYt5yvMhzhSK6Bop0QJOAY/edit#gid=663331741.  The relevant behave test at https://github.com/hyperledger/fabric-test/blob/master/feature/peer.feature, which is being deprecated, does the following:  peer.feature:Scenario: FAB-8759: Test querying a peer with two different versions of chaincode - values change  Values changed during upgrade when the "init" function was applied. Thus, querying with old cc version (as well as querying with newer cc version) succeeds returning newer init value. (Note: do not change cc APIs (just the version), so client test code can use same query function). HOWEVER, I think the testcase is flawed, as we cannot specify an older chaincode version when doing a query. A similar but accurate testcase might be to verify that a query fails on a peer that has not yet installed the newer version of the chaincode which was upgraded. The error will be something like  * Error: endorsement failure during query. response: status:500 message:"cannot retrieve package for chaincode mychaincode/3, error open /var/hyperledger/production/chaincodes/mychaincode.3: no such file or directory"   There are cc upgrades performed in fabric/integration/discovery/ and fabric/integration/pvtdata/ and integration/e2e/lifecycle, but no attempt was made to use the old version of cc afterwards. We suggest adding to chaincode tests in fabric/integration/e2e/lifecycle.  ></description> </Issue>
