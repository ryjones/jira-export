<Issue id="39520" key="FAB-15283" number="15283" project="10002" reporter="nyet" creator="nyet" type="10002" summary="orderer/common/msgprocessor/systemchannel.go NewChannelConfig() needs more debug info" priority="4" resolution="10000" status="6" created="2019-04-25 18:03:37.0" updated="2021-04-16 15:20:15.0" resolutiondate="2021-04-16 15:20:15.0" votes="0" watches="1" workflowId="52400"> <description><! CDATA {code} Rejecting broadcast of config message from xx.xx.xx.xx:41982 because of error: Attempted to include a member which is not in the consortium {code} maybe something like {code:go} diff --git a/orderer/common/msgprocessor/systemchannel.go b/orderer/common/msgprocessor/systemchannel.go index bae5c60a7..8e8248e7a 100644 --- a/orderer/common/msgprocessor/systemchannel.go +++ b/orderer/common/msgprocessor/systemchannel.go @@ -284,16 +284,20 @@ func (dt *DefaultTemplator) NewChannelConfig(envConfigUpdate *cb.Envelope) (chan // if the consortium group has any members, there must be at least one member in the source request if len(systemChannelGroup.Groups channelconfig.ConsortiumsGroupKey .Groups consortium.Name .Groups) > 0 && len(configUpdate.WriteSet.Groups channelconfig.ApplicationGroupKey .Groups) == 0 { -               return nil, fmt.Errorf("Proposed configuration has no application group members, but consortium contains members") +               return nil, fmt.Errorf("Proposed configuration has no application group members, but consortium '%s' contains members", consortium.Name) }  // If the consortium has no members, allow the source request to contain arbitrary members // Otherwise, require that the supplied members are a subset of the consortium members if len(systemChannelGroup.Groups channelconfig.ConsortiumsGroupKey .Groups consortium.Name .Groups) > 0 { for orgName := range configUpdate.WriteSet.Groups channelconfig.ApplicationGroupKey .Groups { -                       consortiumGroup, ok := systemChannelGroup.Groups channelconfig.ConsortiumsGroupKey .Groups consortium.Name .Groups orgName  +                       groups, ok := systemChannelGroup.Groups channelconfig.ConsortiumsGroupKey .Groups consortium.Name  if !ok { -                               return nil, fmt.Errorf("Attempted to include a member which is not in the consortium") +                               return nil, fmt.Errorf("Consortium '%s' has no '%s'", channelconfig.ConsortiumsGroupKey, consortium.Name) +                       } +                       consortiumGroup, ok := groups.Groups orgName  +                       if !ok { +                               return nil, fmt.Errorf("Attempted to include member '%s' which is not in consortium '%s'\n", orgName, consortium.Name) } applicationGroup.Groups orgName  = proto.Clone(consortiumGroup).(*cb.ConfigGroup) } {code}   ></description> </Issue>
