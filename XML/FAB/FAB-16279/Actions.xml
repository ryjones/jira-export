<Action id="65397" issue="41738" author="jyellick" type="comment" body=" ~sykesm  I seem to recall you mentioning that you had done this, is this item still relevant?" created="2019-11-08 18:44:19.0" updateauthor="jyellick" updated="2019-11-08 18:44:19.0"/>
<Action id="65403" issue="41738" author="sykesm" type="comment" body="I looked a while ago but I&apos;ll look again really quickly." created="2019-11-08 20:30:20.0" updateauthor="sykesm" updated="2019-11-08 20:30:20.0"/>
<Action id="65433" issue="41738" author="sykesm" type="comment" created="2019-11-11 14:44:35.0" updateauthor="sykesm" updated="2019-11-11 14:44:35.0"> <body><! CDATA I've honestly forgotten what the intent of this task was to be. Here are the places I found us joining name and version by a colon literal: {code} core/ledger/kvledger/metrics_test.go:119: "chaincode", "mycc:1.0",core/ledger/kvledger/metrics_test.go:119: "chaincode", "mycc:1.0", core/ledger/kvledger/metrics.go:65:			chaincodeName = txstat.ChaincodeID.Name + ":" + txstat.ChaincodeID.Version core/chaincode/container_runtime_test.go:29: err := cr.Start("chaincode-name:chaincode-version")core/chaincode/container_runtime_test.go:29: err := cr.Start("chaincode-name:chaincode-version")core/chaincode/container_runtime_test.go:34: assert.Equal(t, "chaincode-name:chaincode-version", packageID)core/chaincode/container_runtime_test.go:38: assert.Equal(t, "chaincode-name:chaincode-version", ccid)core/chaincode/container_runtime_test.go:44: err = cr.Start("chaincode-name:chaincode-version")core/chaincode/container_runtime_test.go:84: err := cr.Stop("chaincode-id-name:chaincode-version")core/chaincode/container_runtime_test.go:89: assert.Equal(t, "chaincode-id-name:chaincode-version", ccid)core/chaincode/container_runtime_test.go:119: exitCode, err := cr.Wait("chaincode-id-name:chaincode-version")core/chaincode/container_runtime_test.go:123: assert.Equal(t, "chaincode-id-name:chaincode-version", fakeRouter.WaitArgsForCall(0))core/chaincode/container_runtime_test.go:126: code, err := cr.Wait("chaincode-id-name:chaincode-version") core/chaincode/exectransaction_test.go:162:				ChaincodeID: name + ":0", core/chaincode/exectransaction_test.go:585:	cName := ccContext.Name + ":" + ccContext.Version core/chaincode/exectransaction_test.go:654:				ChaincodeID: name + ":0", core/chaincode/exectransaction_test.go:767:	chaincodeSupport.Runtime.Stop(chaincodeCtx.Name + ":" + chaincodeCtx.Version) core/chaincode/exectransaction_test.go:790:				ChaincodeID: name + ":0", core/chaincode/exectransaction_test.go:808:	defer chaincodeSupport.Runtime.Stop(cID1.Name + ":" + cID1.Version) core/chaincode/exectransaction_test.go:833:	defer chaincodeSupport.Runtime.Stop(cID2.Name + ":" + cID2.Version) core/chaincode/exectransaction_test.go:890:	defer chaincodeSupport.Runtime.Stop(cID.Name + ":" + cID.Version) core/chaincode/exectransaction_test.go:944:	defer chaincodeSupport.Runtime.Stop(cID.Name + ":" + cID.Version) core/chaincode/chaincode_support.go:139:	ccid := ccName + ":" + ccVersion core/chaincode/lifecycle/deployedcc_infoprovider.go:97:		Hash:                        util.ComputeSHA256(  byte(chaincodeName + ":" + definedChaincode.EndorsementInfo.Version)), core/chaincode/chaincode_support_test.go:222:				ChaincodeID: name + ":0", core/container/dockercontroller/dockercontroller.go:482:	// pre-2.0 used "-" as the separator in the ccid, so replace ":" with core/container/dockercontroller/dockercontroller.go:484:	name = strings.ReplaceAll(name, ":", "-") core/common/ccprovider/ccprovider.go:218:		ccName := f.Name() :i       // Everything before the separator core/common/ccprovider/ccprovider.go:219:		ccVersion := f.Name() i+1:  // Everything after the separator core/common/ccprovider/ccprovider.go:221:		ccPackage, err := ccFromPath(ccName+":"+ccVersion, dir, cifs.GetHasher) core/common/ccprovider/ccprovider.go:223:			ccproviderLogger.Warning("Failed obtaining chaincode information about", ccName, ccVersion, ":", err) core/common/ccprovider/ccprovider.go:320:			ccpack, err := GetChaincodeFromFS(ccname + ":" + ccversion) core/common/ccprovider/ccprovider.go:389:	return cd.Name + ":" + cd.Version core/scc/lscc/lscc.go:275:		ChaincodeID:       chaincodeData.Name + ":" + chaincodeData.Version, core/scc/lscc/lscc.go:438:		return errors.Errorf("invalid collection configuration supplied for chaincode %s:%s", cd.Name, cd.Version) core/scc/lscc/lscc.go:456:		return errors.WithMessagef(err, "error putting collection for chaincode %s:%s", cd.Name, cd.Version) core/scc/lscc/lscc.go:689:	ccid := ccpack.GetChaincodeData().Name + ":" + ccpack.GetChaincodeData().Version core/scc/lscc/lscc.go:760:	chaincodeNameVersion := chaincodeName + ":" + chaincodeVersion {code}   ></body> </Action>
<Action id="65450" issue="41738" author="sykesm" type="comment" created="2019-11-11 19:21:36.0" updateauthor="sykesm" updated="2019-11-11 19:21:36.0"> <body><! CDATA Excluding tests, we're down to these (?):  {code} core/ledger/kvledger/metrics.go:65:			chaincodeName = txstat.ChaincodeID.Name + ":" + txstat.ChaincodeID.Version core/chaincode/chaincode_support.go:139:	ccid := ccName + ":" + ccVersion core/chaincode/lifecycle/deployedcc_infoprovider.go:97:		Hash:                        util.ComputeSHA256(  byte(chaincodeName + ":" + definedChaincode.EndorsementInfo.Version)), core/common/ccprovider/ccprovider.go:218:		ccName := f.Name() :i       // Everything before the separator core/common/ccprovider/ccprovider.go:219:		ccVersion := f.Name() i+1:  // Everything after the separator core/common/ccprovider/ccprovider.go:221:		ccPackage, err := ccFromPath(ccName+":"+ccVersion, dir, cifs.GetHasher) core/common/ccprovider/ccprovider.go:223:			ccproviderLogger.Warning("Failed obtaining chaincode information about", ccName, ccVersion, ":", err) core/common/ccprovider/ccprovider.go:320:			ccpack, err := GetChaincodeFromFS(ccname + ":" + ccversion) core/common/ccprovider/ccprovider.go:389:	return cd.Name + ":" + cd.Version core/scc/lscc/lscc.go:275:		ChaincodeID:       chaincodeData.Name + ":" + chaincodeData.Version, core/scc/lscc/lscc.go:438:		return errors.Errorf("invalid collection configuration supplied for chaincode %s:%s", cd.Name, cd.Version) core/scc/lscc/lscc.go:456:		return errors.WithMessagef(err, "error putting collection for chaincode %s:%s", cd.Name, cd.Version) core/scc/lscc/lscc.go:689:	ccid := ccpack.GetChaincodeData().Name + ":" + ccpack.GetChaincodeData().Version core/scc/lscc/lscc.go:760:	chaincodeNameVersion := chaincodeName + ":" + chaincodeVersion {code}  ></body> </Action>
<Action id="65522" issue="41738" author="sykesm" type="comment" created="2019-11-13 17:58:14.0" updateauthor="sykesm" updated="2019-11-13 17:58:14.0"> <body><! CDATA There are several places where we are still joining by a colon but it's probably not worth the time to go back and change them all to use some sort of join function.  So, if ever we decide we need to, we can use the list in this issue as a starting point.  ></body> </Action>
