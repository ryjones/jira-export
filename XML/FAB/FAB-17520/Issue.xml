<Issue id="44387" key="FAB-17520" number="17520" project="10002" reporter="ptippett" creator="ptippett" type="10001" summary="Provide a way to rollback ledgers on Ordering Nodes." priority="3" resolution="10001" status="6" created="2020-02-21 14:10:14.0" updated="2022-01-19 22:54:28.0" resolutiondate="2020-06-05 17:18:12.0" votes="0" watches="10" workflowId="58295" archived="N"> <description><! CDATA Despite the fact that the ledger is immutable and that you can spread nodes around to different Geos to reduce risk of disaster.  Users are still asking for backup/restore capability for a few reasons: 1 - Human Error.  Accidental Deletion for example. 2 - Code issues where it's easier to revert the ledger vs undo damage. 3 - Corporate requirements that anything in prod must have a tested backup/restore plan.     This is easy when not using Private Data collections.  Keep the peers behind the ordering nodes and everything works fine.  If you ever need to restore the ordering service for example, you can either stand up new peers and let them catch up, or restore the peers to an earlier backup to speed up the process and avoid having to redo chaincode/channel operations.      The issue is when using PDCs, there's no good way to orchestrate a backup because the orderer being behind the peers of course still doesn't work, and the peers being behind the orderer doesn't really work either.    To fix this, I believe you have 3 options:  1 - Stop all peers and orderers to ensure consistency, back everything up, start it up again.  This of course causes an outage with every backup, which is bad and is hard to orchestrate given that different organizations own the peers.  2 - Restore the peers to a point earlier than the orderers.  This doesn't work without work on the user because the orderer will have hashes for private data that the peers no longer have and the peers will keep trying to fetch the data.  My understanding is to fix this the user would have to do blind writes to the PDC in their application.  3 - Roll back the ledgers on the orderering nodes  to a height that matches that of the "highest" peer.  This is preferred to rolling back peers because it matches the restore flow for non PDC of always keeping the orderers ahead of peers, and because there will normally be less ordering nodes owned by less organizations than the peers.  So the rollback process would be easier.  The point of this story is to provide the ability to perform option 3 above in Fabric.  In addition to the ability to be able to roll back the orderer to a specific block height on a ledger, some additional code/doc would be needed to help users figure out how far to roll back each channel.  Alternatively, if it can be proven that option 2 above is an easier/better way to get back to a consistent state and code/instructions can be provided to do that, that could also suffice.   To be very clear.  No one is expecting the PDC or any other data that was lost in the restore process to be recovered.  It's a restore from backup.  Everyone understands that anything done after the backup is gone forever and this would only be done/recommended as a last resort.  The goal of this issue is to be able to restore fabric to a consistent state such that operation can continue cleanly going forward.        ></description> </Issue>
