<Issue id="21401" key="FAB-6516" number="6516" project="10002" reporter="rennman" assignee="rennman" creator="rennman" type="10004" summary="fabric-ca golang 1.9 update breaks certification path validation in CI" priority="3" resolution="10000" status="6" created="2017-10-07 01:52:14.0" updated="2018-07-20 14:14:36.0" resolutiondate="2017-10-17 21:04:26.0" votes="0" watches="2" workflowId="40208"> <description><! CDATA Whether it is 'broken' or 'fixed' depends on whether the EE cert should be considered as a trust anchor, but we pass it in to the verification algorithm as one of the certs in the root pool, so in theory, it is 'fixed' by 1.9. However, the CI relies on the 'broken' behavior, so the UT needs to be updated to account for it.     In 1.9, the EE cert is unilaterally accepted as a root: if opts.Roots.contains(c) \{      candidateChains = append(candidateChains,   *Certificate\{c}) } else \{  ... while it 1.7, it is not:     candidateChains, err := c.buildChains(make(map int     *Certificate),   *Certificate\{c}, &opts)  The ca_test.go is updated to include a certificate chain which does not contain the EE certificate:   -       ca.Config.CA.Chainfile = noCACert +       ca.Config.CA.Chainfile = noUsageCert     ></description> </Issue>
