<Issue id="44361" key="FAB-17507" number="17507" project="10002" reporter="kevinxiong1977" creator="kevinxiong1977" type="10004" summary="checkcommitreadiness error approval status problem" priority="2" resolution="10203" status="6" created="2020-02-17 11:57:15.0" updated="2021-02-16 16:06:04.0" resolutiondate="2020-03-24 14:02:19.0" votes="2" watches="3" workflowId="58268" archived="N"> <description><! CDATA Sometimes, when we encounter the peer lifecycle chaincode checkcommitreadiness operation, we cannot get the correct approval status. The result is shown below:  docker exec -it cli sh  #Environment variables for +PEER0 in Org1+ CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 CORE_PEER_LOCALMSPID="Org1MSP" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt  *export ORDERER_CA*=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem *export ORG1_CA*=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt *export ORG2_CA*=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt     cd /root/go/src/github.com/hyperledger/fabric-samples/chaincode/marbles02_private/go  *GO111MODULE=on go mod vendor*  peer lifecycle chaincode package marblesp.tar.gz --path github.com/hyperledger/fabric-samples/chaincode/marbles02_private/go/ --lang golang --label marblespv1     peer lifecycle chaincode queryinstalled --output json { "installed_chaincodes":   { "package_id": "marblespv1:727cc9951bd288d6c6b1a2797e2234fb3f5ced4f58bbcf1e6364a932a083a998", "label": "marblespv1" }}  peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name marblesp --version 1.0 --init-required --sequence 1 --tls true --cafile $ORDERER_CA --output json { "approvals": { "Org1MSP": false, "Org2MSP": false } }     peer lifecycle chaincode commit -o orderer.example.com:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --sequence 1 --collections-config /opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/marbles02_private/collections_config.json --signature-policy "OR('Org1MSP.member','Org2MSP.member')" --init-required --tls true --cafile $ORDERER_CA --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles $ORG1_CA --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles $ORG2_CA Error: proposal failed with status: 500 - failed to invoke backing implementation of 'CommitChaincodeDefinition': {color:#FF0000}chaincode definition not agreed to by this org (Org1MSP){color}  peer lifecycle chaincode approveformyorg -o orderer.example.com:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --collections-config /opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/marbles02_private/collections_config.json --signature-policy "OR('Org1MSP.member','Org2MSP.member')" --init-required --package-id $CC_PACKAGE_ID --sequence 1 --tls true --cafile $ORDERER_CA 2020-02-17 11:17:47.244 UTC  chaincodeCmd  ClientWait -> INFO 001 txid  e6d7c62112a60202881b4be509c68fdfc1278057aab7ecbadb7abefe44161466  committed with status (VALID) at  {color:#FF0000}+*The peer lifecycle chaincode approveformyorg still shows that the approval status is Org1MSP: false, in fact it should be Org1MSP: true*+ {color}  peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name marblesp --version 1.0 --init-required --sequence 1 --tls true --cafile $ORDERER_CA --output json { "approvals": { *{color:#FF0000}"Org1MSP": false,{color}* "Org2MSP": false } }  {color:#0747a6}+*From the following peer lifecycle chaincode commit error prompt detection information, we can also correctly understand that Org1MSP has successfully performed the approveformyorg operation.*+{color}  peer lifecycle chaincode commit -o orderer.example.com:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --sequence 1 --collections-config /opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/marbles02_private/collections_config.json --signature-policy "OR('Org1MSP.member','Org2MSP.member')" --init-required --tls true --cafile $ORDERER_CA --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles $ORG1_CA --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles $ORG2_CA Error: failed to create signed transaction: proposal response was not successful, error code 500, msg failed to invoke backing implementation of 'CommitChaincodeDefinition': *{color:#FF0000}chaincode definition not agreed to by this org (Org2MSP){color}*           ></description> </Issue>
