<Issue id="14503" key="FAB-2001" number="2001" project="10002" reporter="scottz" assignee="ratnakar" creator="scottz" type="10004" summary="orderer service batching broken for non-default channel ID, 1 channel, mult orderers" environment="Lenovo laptop running Linux, vagrant, docker containers for each orderer and kafka-broker" priority="3" resolution="10000" status="6" created="2017-02-01 23:21:26.0" updated="2018-07-20 14:11:27.0" resolutiondate="2017-06-01 16:17:16.0" votes="0" watches="5" workflowId="37272"> <description><! CDATA TXs recvd on multiple orderers (using same channel) are batched and delivered separately only by the recipient orderer  Tested on Feb 01 2017 using: commit 5d9e4ede298ab646ac918dc5b034c7d319dd1d9a commit date:   Mon Jan 30 14:34:38 2017 +0000  1. Using 1 new "testchannel00000" with 3 kafka orderers: 2. cd $GOPATH/src/github.com/hyperledger/fabric 3. CORE_PEER_COMMITTER_LEDGER_ORDERER=127.0.0.1:7050 peer channel create -c testchannel00000 4. Send a TX to each orderer at same time, on "testchannel00000". EXPECTED RESULT: Transactions should be put into single batch, and after 10 secs the batch should be delivered (duplicated by each orderer). ACTUAL RESULT (FAILURE): Orderer service fails to batch them together. And after batchTimeout (10 secs) each orderer delivers a unique batch with only the transaction that was sent to it.   ====================================================================== Below are similar tests for comparison (which pass):  =============== RESULT: PASS: 1. Using 1 default channel "testchainid" with 3 orderers: 2. Send a TX to each orderer at same time, on "testchainid". - Orderer service works fine. It puts them all in one batch after  batchtimeout(10secs), and all orderers deliver it.  =============== RESULT: PASS: 1. Using 3 new channels with 1 orderer: 2. cd $GOPATH/src/github.com/hyperledger/fabric 3. export CORE_PEER_COMMITTER_LEDGER_ORDERER=127.0.0.1:7050 3. peer channel create -c "testchannel00000" 4. peer channel create -c "testchannel00001" 5. peer channel create -c "testchannel00002" 6. Send a TX on each channel at same time to the orderer. - Orderer service works fine. Since each TX is in separate channel, each is put in its own batch, and after batchtimeout(10secs), each batch is delivered by the orderer on its own channel.   ></description> </Issue>
