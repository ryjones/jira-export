<Issue id="35287" key="FAB-12824" number="12824" project="10002" reporter="sykesm" assignee="kchristidis" creator="sykesm" type="10004" summary="Write WAL and snapshots in temp dir when testing" priority="2" resolution="10000" status="6" created="2018-11-12 15:05:35.0" updated="2018-11-12 22:43:55.0" resolutiondate="2018-11-12 22:43:55.0" votes="0" watches="2" timeestimate="0" timespent="300" workflowId="46733"> <description><! CDATA /var is not an unprivileged user writable directory on almost any platform. The unit tests should explicitly target temporary directories. Not only does it prevent this kind of issue, it keeps test stuff isolated from the rest of the world.  {color:#DE350B}{{panic:  channel: system  Error creating consenter: failed to restore persited raft data: failed to initialize WAL: mkdir /var/hyperledger: permission denied}}{color}  Also, note the typo: persited instead of persisted.  {code} --- FAIL: TestSpawnEtcdRaft (12.92s) <autogenerated>:1:  No future change is possible.  Bailing out early after 0.132s. Got stuck at: 2018-11-12 09:36:29.753 EST  localconfig  completeInitialization -> INFO 001 Kafka.Version unset, setting to 0.10.2.0 2018-11-12 09:36:29.768 EST  orderer.common.server  prettyPrintStruct -> INFO 002 Orderer config values: 	General.LedgerType = "file" 	General.ListenAddress = "127.0.0.1" 	General.ListenPort = 5611 	General.TLS.Enabled = true 	General.TLS.PrivateKey = "/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/testdata/tls/server.key" 	General.TLS.Certificate = "/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/testdata/tls/server.crt" 	General.TLS.RootCAs =  /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/testdata/tls/ca.crt  	General.TLS.ClientAuthRequired = true 	General.TLS.ClientRootCAs =    	General.Cluster.RootCAs =  /Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/testdata/tls/ca.crt  	General.Cluster.ClientCertificate = "/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/testdata/tls/server.crt" 	General.Cluster.ClientPrivateKey = "/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/testdata/tls/server.key" 	General.Cluster.DialTimeout = 5s 	General.Cluster.RPCTimeout = 7s 	General.Cluster.ReplicationBufferSize = 20971520 	General.Cluster.ReplicationPullTimeout = 5s 	General.Cluster.ReplicationRetryTimeout = 5s 	General.Keepalive.ServerMinInterval = 1m0s 	General.Keepalive.ServerInterval = 2h0m0s 	General.Keepalive.ServerTimeout = 20s 	General.GenesisMethod = "file" 	General.GenesisProfile = "SampleDevModeEtcdRaft" 	General.SystemChannel = "test-system-channel-name" 	General.GenesisFile = "/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/etcdraft-orderer-launch880499694/genesis.block" 	General.Profile.Enabled = false 	General.Profile.Address = "0.0.0.0:6060" 	General.LocalMSPDir = "/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/sampleconfig/msp" 	General.LocalMSPID = "SampleOrg" 	General.BCCSP.ProviderName = "SW" 	General.BCCSP.SwOpts.SecLevel = 256 	General.BCCSP.SwOpts.HashFamily = "SHA2" 	General.BCCSP.SwOpts.Ephemeral = false 	General.BCCSP.SwOpts.FileKeystore.KeyStorePath = "/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/sampleconfig/msp/keystore" 	General.BCCSP.SwOpts.DummyKeystore = 	General.BCCSP.PluginOpts = 	General.Authentication.TimeWindow = 15m0s 	FileLedger.Location = "/var/folders/tw/dsbwtnf50w7dhvhh0tkg7fwr0000gn/T/etcdraft-orderer-launch880499694/ledger" 	FileLedger.Prefix = "hyperledger-fabric-ordererledger" 	RAMLedger.HistorySize = 1000 	Kafka.Retry.ShortInterval = 5s 	Kafka.Retry.ShortTotal = 10m0s 	Kafka.Retry.LongInterval = 5m0s 	Kafka.Retry.LongTotal = 12h0m0s 	Kafka.Retry.NetworkTimeouts.DialTimeout = 10s 	Kafka.Retry.NetworkTimeouts.ReadTimeout = 10s 	Kafka.Retry.NetworkTimeouts.WriteTimeout = 10s 	Kafka.Retry.Metadata.RetryMax = 3 	Kafka.Retry.Metadata.RetryBackoff = 250ms 	Kafka.Retry.Producer.RetryMax = 3 	Kafka.Retry.Producer.RetryBackoff = 100ms 	Kafka.Retry.Consumer.RetryBackoff = 2s 	Kafka.Verbose = false 	Kafka.Version = 0.10.2.0 	Kafka.TLS.Enabled = false 	Kafka.TLS.PrivateKey = "" 	Kafka.TLS.Certificate = "" 	Kafka.TLS.RootCAs =    	Kafka.TLS.ClientAuthRequired = false 	Kafka.TLS.ClientRootCAs =    	Kafka.SASLPlain.Enabled = false 	Kafka.SASLPlain.User = "" 	Kafka.SASLPlain.Password = "" 	Kafka.Topic.ReplicationFactor = 3 	Debug.BroadcastTraceDir = "" 	Debug.DeliverTraceDir = "" 	Consensus = map SnapDir:/var/hyperledger/production/orderer/etcdraft/snapshot WALDir:/var/hyperledger/production/orderer/etcdraft/wal  2018-11-12 09:36:29.775 EST  orderer.common.server  initializeServerConfig -> INFO 003 Starting orderer with mutual TLS enabled 2018-11-12 09:36:29.783 EST  fsblkstorage  newBlockfileMgr -> INFO 004 Getting block information from block storage 2018-11-12 09:36:29.792 EST  orderer.consensus.etcdraft  Restore -> INFO 005 No WAL data found, creating new WAL at path '/var/hyperledger/production/orderer/etcdraft/wal/system' {"channel": "system", "node": 1} 2018-11-12 09:36:29.792 EST  orderer.commmon.multichannel  newChainSupport -> PANI 006  channel: system  Error creating consenter: failed to restore persited raft data: failed to initialize WAL: mkdir /var/hyperledger: permission denied panic:  channel: system  Error creating consenter: failed to restore persited raft data: failed to initialize WAL: mkdir /var/hyperledger: permission denied  goroutine 1  running : github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore.(*CheckedEntry).Write(0xc000103080, 0x0, 0x0, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/zapcore/entry.go:229 +0x515 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).log(0xc0000da210, 0x4, 0x4a874df, 0x2a, 0xc0004b98f0, 0x2, 0x2, 0x0, 0x0, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:234 +0xf6 github.com/hyperledger/fabric/vendor/go.uber.org/zap.(*SugaredLogger).Panicf(0xc0000da210, 0x4a874df, 0x2a, 0xc0004b98f0, 0x2, 0x2) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/vendor/go.uber.org/zap/sugar.go:159 +0x79 github.com/hyperledger/fabric/common/flogging.(*FabricLogger).Panicf(0xc0000da218, 0x4a874df, 0x2a, 0xc0004b98f0, 0x2, 0x2) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/common/flogging/zap.go:74 +0x60 github.com/hyperledger/fabric/orderer/common/multichannel.newChainSupport(0xc0002303f0, 0xc00053b500, 0xc00026a5d0, 0x4b70ee0, 0x52d1f28, 0x0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/multichannel/chainsupport.go:70 +0x4da github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).Initialize(0xc0002303f0, 0xc00026a5d0) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:150 +0x301 github.com/hyperledger/fabric/orderer/common/server.initializeMultichannelRegistrar(0x48ed801, 0xc000031aa0, 0x0, 0xc0002307e0, 0x5261340, 0x0, 0x0, 0x0, 0x0, 0x0, ...) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/main.go:353 +0x2f5 github.com/hyperledger/fabric/orderer/common/server.Start(0x4a634e2, 0x5, 0xc000194900) 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/main.go:110 +0x35f github.com/hyperledger/fabric/orderer/common/server.Main() 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/common/server/main.go:79 +0x1ce main.main() 	/Users/sykesm/workspace/fabric/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20  Waiting for: Beginning to serve requests FAIL coverage: 80.8% of statements FAIL	github.com/hyperledger/fabric/orderer/common/server	38.798s {code}  ></description> </Issue>
