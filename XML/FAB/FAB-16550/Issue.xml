<Issue id="42283" key="FAB-16550" number="16550" project="10002" reporter="scottz" creator="scottz" type="10002" summary="Key metrics to monitor for fabric raft network in k8s" priority="3" resolution="10001" status="6" created="2019-09-10 13:42:57.0" updated="2021-01-10 17:33:23.0" resolutiondate="2021-01-10 17:33:23.0" votes="0" watches="3" workflowId="55337"> <description><! CDATA Provide a list in fabric-test repository such as a Readme file to monitor during system test traffic runs. Include examples of recommended sort and display criteria on prometheus servers, of useful metrics from fabric, raft, and a few relevant ones from k8s cluster.  For example, we might suggest to look for metrics with these substrings in their names: * raft * cluster * kubernetes  or suggestions based on target area k8s cluster communication metrics * - EgressQueueSize          metrics.Gauge * - EgressWorkerCount        metrics.Gauge * - IngressStreamsCount      metrics.Gauge * - EgressStreamsCount       metrics.Gauge * - EgressTLSConnectionCount metrics.Gauge * - MessageSendTime          metrics.Histogram * - MessagesDroppedCount     metrics.Counter  or fabric metrics sent out by the raft orderers (filter per channel per orderer): * cluster_size * is_leader * committed_block_number * snapshot_block_number * # of leader_changes * # of proposal_failures *  data_persist_duration * # of normal_proposals_received * # of config_proposals_received     To start with, here are some samples of groups of recommendations used on prometheus server during previous testing efforts:  (1) general usage, counts  <your_prometheus_server>/graph?g0.range_input=1d&g0.expr=endorser_successful_proposals&g0.tab=0&g1.range_input=2w&g1.expr=consensus_etcdraft_committed_block_number&g1.tab=0&g2.range_input=1d&g2.expr=broadcast_processed_count%7Bexported_type%3D%22ENDORSER_TRANSACTION%22%7D&g2.tab=0&g3.range_input=2h&g3.expr=container_memory_usage_bytes%7Bcontainer_name%3D~%22peer.*%7Corderer.*%22%7D&g3.tab=0&g4.range_input=1d&g4.stacked=0&g4.expr=consensus_etcdraft_normal_proposals_received&g4.tab=0&g5.range_input=1d&g5.expr=consensus_etcdraft_is_leader&g5.tab=0     (2) consensus_etcdraft  https://<your-prometheus-server>/graph?g0.range_input=1d&g0.expr=consensus_etcdraft_cluster_size%7Bchannel%3D%22testorgschannel1%22%7D&g0.tab=0&g1.range_input=1d&g1.expr=consensus_etcdraft_committed_block_number%7Bchannel%3D%22testorgschannel1%22%7D&g1.tab=0&g2.range_input=1d&g2.expr=consensus_etcdraft_config_proposals_received&g2.tab=0&g3.range_input=1d&g3.expr=consensus_etcdraft_data_persist_duration_bucket%7Bchannel%3D%22testorgschannel1%22%7D&g3.tab=0&g4.range_input=1d&g4.expr=consensus_etcdraft_data_persist_duration_count%7Bchannel%3D%22testorgschannel1%22%7D&g4.tab=0&g5.range_input=1d&g5.expr=consensus_etcdraft_data_persist_duration_sum%7Bchannel%3D%22testorgschannel1%22%7D&g5.tab=0&g6.range_input=1d&g6.expr=consensus_etcdraft_is_leader%7Bchannel%3D%22testorgschannel1%22%7D&g6.tab=0&g7.range_input=1d&g7.expr=consensus_etcdraft_leader_changes%7Bchannel%3D%22testorgschannel1%22%7D&g7.tab=0&g8.range_input=1d&g8.expr=consensus_etcdraft_normal_proposals_received%7Bchannel%3D%22testorgschannel1%22%7D&g8.tab=0&g9.range_input=1d&g9.expr=consensus_etcdraft_snapshot_block_number%7Bchannel%3D%22testorgschannel1%22%7D&g9.tab=0     (3) etcd_disk_wal  https://<your-prometheus-server>/graph?g0.range_input=1d&g0.expr=etcd_disk_wal_fsync_duration_seconds_bucket%7Bk8s_app%3D~%22orderer1st.*%22%7D&g0.tab=0&g1.range_input=1d&g1.expr=consensus_etcdraft_data_persist_duration_count%7Bk8s_app%3D~%22orderer1st.*%22%7D&g1.tab=0&g2.range_input=1d&g2.expr=consensus_etcdraft_data_persist_duration_sum%7Bk8s_app%3D~%22orderer1st.*%22%7D&g2.tab=0     (4) cluster_comm  https://<your-prometheus-server>/graph?g0.range_input=1d&g0.expr=cluster_comm_egress_queue_capacity%7Bchannel%3D%22testorgschannel1%22%7D&g0.tab=0&g1.range_input=1d&g1.expr=cluster_comm_egress_queue_length%7Bchannel%3D%22testorgschannel1%22%7D&g1.tab=0&g2.range_input=1d&g2.expr=cluster_comm_egress_queue_workers%7Bchannel%3D%22testorgschannel1%22%7D&g2.tab=0&g3.range_input=1d&g3.expr=cluster_comm_ingress_stream_count&g3.tab=0&g4.range_input=1d&g4.expr=cluster_comm_egress_tls_connection_count&g4.tab=0&g5.range_input=1d&g5.expr=cluster_comm_msg_send_time_bucket%7Bchannel%3D%22testorgschannel1%22%7D&g5.tab=0&g6.range_input=1d&g6.expr=cluster_comm_msg_send_time_count%7Bchannel%3D%22testorgschannel1%22%7D&g6.tab=0&g7.range_input=1d&g7.expr=cluster_comm_msg_send_time_count%7Bchannel%3D%22testorgschannel1%22%7D&g7.tab=0     ></description> </Issue>
