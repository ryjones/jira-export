<Issue id="27321" key="FAB-8017" number="8017" project="10002" reporter="wlahti" assignee="wlahti" creator="wlahti" type="10004" summary="Peer CLI fetch command error assignment issue" priority="3" resolution="10000" status="6" created="2018-02-01 17:01:57.0" updated="2018-07-20 14:15:36.0" resolutiondate="2018-02-01 19:19:54.0" votes="0" watches="1" workflowId="41110"> <description><! CDATA I found this bug while attempting to fetch the genesis block for a channel with an identity from an organization that is not part of the channel.   The fetchconfig code creates an initial err variable before the switch statement but accidentally creates another err variable as it creates new variables in some of the case statements. This new err variable is assigned the error value but the initial err variable remains nil. Upon exiting the switch statement, the error has been lost and the proto marshal call proceeds with a nil block.   Before the fix, the user can see the log message state that the action was forbidden but receives an error message related to marshaling a nil block: {code:java} 2018-01-31 00:41:47.571 UTC  channelCmd  readBlock -> DEBU 00a Got status: &{FORBIDDEN}  Error: proto: Marshal called with nil{code} After this fix, the user receives the expected error message:  {code:java} 2018-01-31 00:50:32.524 UTC  channelCmd  readBlock -> DEBU 00a Got status: &{FORBIDDEN}  Error: can't read the block: &{FORBIDDEN}{code}  ></description> </Issue>
