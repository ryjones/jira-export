<Issue id="27526" key="FAB-8131" number="8131" project="10002" reporter="yacovm" creator="yacovm" type="10001" summary="Make TLS binding verification mechanisms support reverse proxies" priority="3" status="10100" created="2018-02-08 11:09:00.0" updated="2021-04-14 22:27:59.0" votes="0" watches="6" workflowId="42732"> <description><! CDATA When mutual TLS is used, the client includes in the channel header the hash of its TLS certificate, and the server (orderer or peer) checks whether the hash of the TLS certificate the client sent, matches the hash it claimed in the channel header.  This is to create a binding between the enrollment certificate the request was signed with and the TLS certificate that the connection uses.  However, in may cases - servers such as orderers and peers are behind an application layer reverse proxy, and in these cases - the TLS certificate that the server sees is the TLS certificate of the proxy and not of the client.  Some proxies support including the TLS certificate of the client as an HTTP header, and to support the deployment scenario described above, we could make the server (peer or orderer) first check the TLS certificate hash from the connection, and if it doesn't match the TLS binding in the channel header, it will attempt to check a specific HTTP header (if defined in the configuration) and will compare that TLS certificate hash to the one in the channel header instead.  * A similar problem exists between p2p communication between peers.  ></description> </Issue>
