<Issue id="44741" key="FAB-17716" number="17716" project="10002" reporter="sykesm" assignee="wenjian" creator="sykesm" type="10004" summary="Intermittent IT failure in lifecycle/interop_test - too many requests for /protos.Deliver" priority="3" resolution="10000" status="6" created="2020-04-06 20:50:45.0" updated="2020-04-10 02:11:42.0" resolutiondate="2020-04-09 19:52:20.0" votes="0" watches="3" workflowId="58660" archived="N"> <description><! CDATA This is related to recent endorser and deliver concurrency limits that were introduced in PR #647 / FAB-14761 and an "artificial limit of 1 deliver stream" as suggested in one of the comments.  {code} 2020-04-06T20:15:37.3537056Z ------------------------------ 2020-04-06T20:15:37.3537561Z • Failure  52.840 seconds  2020-04-06T20:15:37.3538437Z Release interoperability Interoperability scenarios Chaincode-to-chaincode interoperability when the network starts with legacy definitions and then upgrades to 2.0  It  performs a cc2cc invocation which fails because in the meantime, the caller is upgraded with the new lifecycle  2020-04-06T20:15:37.3540072Z /home/vsts/work/1/go/src/github.com/hyperledger/fabric/integration/lifecycle/interop_test.go:723 2020-04-06T20:15:37.3540330Z  2020-04-06T20:15:37.3540607Z   Expected 2020-04-06T20:15:37.3540814Z       <*errors.withMessage | 0xc0017defe0>: { 2020-04-06T20:15:37.3541077Z           cause: { 2020-04-06T20:15:37.3541261Z               Code: 2, 2020-04-06T20:15:37.3541540Z               Message: "too many requests for /protos.Deliver, exceeding concurrency limit (1)", 2020-04-06T20:15:37.3542000Z               Details: nil, 2020-04-06T20:15:37.3542221Z               XXX_NoUnkeyedLiteral: {}, 2020-04-06T20:15:37.3542440Z               XXX_unrecognized: nil, 2020-04-06T20:15:37.3542645Z               XXX_sizecache: 0, 2020-04-06T20:15:37.3543299Z           }, 2020-04-06T20:15:37.3543555Z           msg: "error receiving from deliver filtered at 127.0.0.1:23004", 2020-04-06T20:15:37.3543771Z       } 2020-04-06T20:15:37.3544004Z   to match error 2020-04-06T20:15:37.3544237Z       <*matchers.ContainSubstringMatcher | 0xc0018adb00>: { 2020-04-06T20:15:37.3544530Z           Substr: "transaction invalidated with status (MVCC_READ_CONFLICT)", 2020-04-06T20:15:37.3544756Z           Args: nil, 2020-04-06T20:15:37.3545216Z       } 2020-04-06T20:15:37.3545310Z  2020-04-06T20:15:37.3545537Z   /home/vsts/work/1/go/src/github.com/hyperledger/fabric/integration/lifecycle/interop_test.go:746 2020-04-06T20:15:37.3545943Z ------------------------------ 2020-04-06T20:16:51.7224980Z •••• 2020-04-06T20:16:51.7225332Z  2020-04-06T20:16:51.7225670Z Summarizing 1 Failure: 2020-04-06T20:16:51.7225818Z  2020-04-06T20:16:51.7226745Z  Fail  Release interoperability Interoperability scenarios Chaincode-to-chaincode interoperability when the network starts with legacy definitions and then upgrades to 2.0  It  performs a cc2cc invocation which fails because in the meantime, the caller is upgraded with the new lifecycle  2020-04-06T20:16:51.7228018Z /home/vsts/work/1/go/src/github.com/hyperledger/fabric/integration/lifecycle/interop_test.go:746 2020-04-06T20:16:51.7228467Z  2020-04-06T20:16:51.7228979Z Ran 15 of 15 Specs in 420.849 seconds 2020-04-06T20:16:51.7229584Z FAIL! -- 14 Passed | 1 Failed | 0 Pending | 0 Skipped 2020-04-06T20:16:51.7230060Z --- FAIL: TestLifecycle (420.85s) {code} Logs attached from https://dev.azure.com/Hyperledger/0227bd2c-c4f6-478f-be00-ee519f115180/_apis/build/builds/11465/logs/70  /fyi  ~wenjian   ~yacovm   ></description> </Issue>
