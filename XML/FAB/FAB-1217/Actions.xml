<Action id="19884" issue="13551" author="alburt" type="comment" created="2016-11-29 10:37:46.0" updateauthor="alburt" updated="2016-11-29 10:37:46.0"> <body><! CDATA As I know that logging in gossip is just a wrapper of logging used in peer, so  is the integration means that just use the logging the same in peer?    ></body> </Action>
<Action id="19885" issue="13551" author="yacovm" type="comment" created="2016-11-29 10:47:15.0" updateauthor="yacovm" updated="2016-11-29 10:48:07.0"> <body><! CDATA It's not really as you said. We both use go-logging, but the peer configures its logging in multiple ways, i.e- via viper and it can also change during runtime from what I know, and our logging is configured statically at compilation time, because we never had the time to integrate it with the logging framework  ~wlahti  wrote. We also use different logging formatters.   ></body> </Action>
<Action id="19888" issue="13551" author="alburt" type="comment" created="2016-11-29 13:11:46.0" updateauthor="alburt" updated="2016-11-29 13:11:46.0"> <body><! CDATA I think I got your idea, you want more flexible configuration of logging like the log level, but keep the format you defined?  I have two more questions: 1). still keep the module name constructed by(module = module + "-" + peerId) , or I can just use the module name itself? 2). logger, _ := logging.GetLogger("GossipStateProvider"), leave this kind of logging as it was in gossip component?  thanks.  ></body> </Action>
<Action id="19890" issue="13551" author="yacovm" type="comment" created="2016-11-29 13:52:38.0" updateauthor="yacovm" updated="2016-11-29 13:55:59.0"> <body><! CDATA I would like to be able to know from which peer instance a log entry is emitted.  Notice that when I initialize the logger inside gossip/comm/comm_impl and gossip/gossip/gossip_impl.go I pass some identifier.  This is very useful for debugging gossip unit tests, since I have multiple gossip instances running inside them.   {quote}I think I got your idea, you want more flexible configuration of logging like the log level, but keep the format you defined?{quote} I don't care much about the format, I just want to somehow preserve the identifier of the gossip instance that emits the log entry.  {quote} 1). still keep the module name constructed by(module = module + "-" + peerId) , or I can just use the module name itself?{quote} I would say that constructing a module name with something like:  moduleName := < gossip module name > + < gossip instance identifier > would be good.  For example- in gossip/comm_impl, for instance with endpoint *localhost:8000* when you have {code:java} logger.Debug("bla bla bla") {code} The logger would output: DEBUG  gossip/comm  localhost:8000  bla bla bla The question is- will something like that even work? I guess it would be worthwhile to check. {quote}  2). logger, _ := logging.GetLogger("GossipStateProvider"), leave this kind of logging as it was in gossip component?{quote} If you're talking about only the state provider, in  {code:java} gossip/state/state.go {code} then yes. But I think maybe we can make it to something like gossip/state instead  ></body> </Action>
<Action id="19921" issue="13551" author="yacovm" type="comment" created="2016-12-01 08:00:55.0" updateauthor="yacovm" updated="2016-12-01 08:00:55.0"> <body><! CDATA 1) Is the format in the picture you uploaded the same format as in the peer? ( ~wlahti  maybe you can answer too?)  2) What about millis and nanoseconds?   ></body> </Action>
<Action id="19928" issue="13551" author="wlahti" type="comment" body="The formatting looks the same as the peer with the exception of the IP address in the brackets with the module name. I do have a pending changeset that will add the date and timezone to the formatter that will hopefully be merged into master soon." created="2016-12-01 19:27:37.0" updateauthor="wlahti" updated="2016-12-01 19:27:37.0"/>
<Action id="19933" issue="13551" author="alburt" type="comment" created="2016-12-02 05:45:34.0" updateauthor="alburt" updated="2016-12-02 10:28:38.0"> <body><! CDATA Because the flogging just can define the logging level by module not instance level, My solution now can specify the module logging level in core.yaml, and the instance with different ip or port will share the logging level within same module at initial time.  And at run time, you can send  peer node logging setlevel "module_instance_name" level  to change the individual instance logging level.  By the way, the previous picture still have something with the logging message,  which cased by   {color:#707070}func (l *Logger) Info(args ...interface{}) { 	lock.Lock() 	defer lock.Unlock() 	l.logger.Info(args) }{color}  Now I changed it into   {color:#8eb021}func (l *Logger) Info(args ...interface{}) { 	lock.Lock() 	defer lock.Unlock() 	l.logger.Info(args...) }{color}   ></body> </Action>
<Action id="19948" issue="13551" author="yacovm" type="comment" created="2016-12-04 14:52:37.0" updateauthor="yacovm" updated="2016-12-04 14:52:37.0"> <body><! CDATA Thanks for the work so far. I commented in gerrit on the locks thing. I also would like  ~gennadyl  and  ~C0rWin  to express their opinion about the PR (2865).   ></body> </Action>
