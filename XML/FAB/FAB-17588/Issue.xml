<Issue id="44515" key="FAB-17588" number="17588" project="10002" reporter="JIRAUSER19857" assignee="JIRAUSER19857" creator="JIRAUSER19857" type="10004" summary="Adding an Orderer to existing RAFT ordering service" priority="2" resolution="10000" status="6" created="2020-03-06 13:48:19.0" updated="2020-03-09 06:04:24.0" resolutiondate="2020-03-09 06:01:33.0" votes="0" watches="1" workflowId="58428" archived="N"> <description><! CDATA I am following steps given  here|https://hyperledger-fabric.readthedocs.io/en/release-2.0/raft_configuration.html#reconfiguration  to add a new Orderer node to the existing RAFT ordering service. # I am using *first-network* from the fabric-samples (version: master/latest) github repository. # I modified the files in the *first-network* folder to start initially a RAFT service with 3 ORDERERS. # After successful end-to-end execution of the *byfn.sh* script, I *docker exec* into the CLI container. In the CLI, I do the following:  Set following environment variables:   {code:java} export CORE_PEER_ADDRESS=orderer.example.com:7050 export CORE_PEER_LOCALMSPID=OrdererMSP export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/users/Admin@example.com/msp export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt export CHANNEL_NAME=byfn-sys-channel {code}  Followed by which I fetch config block, decode it, and the following JSON segment in the {{consenters}} section in the decoded JSON file.  {code:java} {  "client_tls_cert": "xxx",  "host": "orderer4.example.com",  "port": 10050,  "server_tls_cert": "xxx"  } {code}  Have hidden the certificate values for now. NOTE: I have not modified the *OrdererAddresses* section still.  The modified JSON is used to update the *SYSTEM CHANNEL* configuration. Then I fetch the latest channel configuration block for the updated *byfn-sys-channel*. I exit the CLI and do *docker cp* to fetch the latest config block from the CLI container into the *channel-artifacts* directory.  I start the orderer named, _orderer4.example.com_ with the bootstrap file path corresponding to the latest fetched config block. But the container crashes and gives me following logs in DEBUG mode:   {code:java} 2020-03-06 10:48:58.535 UTC  orderer.common.cluster.replication  fetchLastBlockSeq -> INFO 5b6 orderer2.example.com:8050 is at block sequence of 2 channel=byfn-sys-channel        2020-03-06 10:48:58.536 UTC  orderer.common.cluster.replication  fetchLastBlockSeq -> INFO 5b7 orderer3.example.com:9050 is at block sequence of 2 channel=byfn-sys-channel        2020-03-06 10:48:58.539 UTC  orderer.common.cluster.replication  fetchLastBlockSeq -> INFO 5b8 orderer.example.com:7050 is at block sequence of 2 channel=byfn-sys-channel         2020-03-06 10:48:58.539 UTC  orderer.common.cluster.replication  connectToSomeEndpoint -> INFO 5b9 Connected to orderer.example.com:7050 with last block seq of 2 channel=byfn-sys-channel 2020-03-06 10:48:58.539 UTC  msp.identity  Sign -> DEBU 5ba Sign: plaintext: 0AF5060A3E08051A06089AD588F30522...0D1A0B08FFFFFFFFFFFFFFFFFF012001 2020-03-06 10:48:58.539 UTC  msp.identity  Sign -> DEBU 5bb Sign: digest: DFBDC201427E47056FA06F3E39B61750C8E874F6E09FE30BBFB38380F5F0A96D 2020-03-06 10:48:58.540 UTC  orderer.common.cluster.replication  obtainStream -> INFO 5bc Sending request for block  1  to orderer.example.com:7050 channel=byfn-sys-channel       2020-03-06 10:48:58.540 UTC  grpc  infof -> DEBU 5bd transport: loopyWriter.run returning. connection error: desc = "transport is closing" 2020-03-06 10:48:58.540 UTC  grpc  infof -> DEBU 5be transport: loopyWriter.run returning. connection error: desc = "transport is closing" 2020-03-06 10:48:58.546 UTC  orderer.common.cluster.replication  pullBlocks -> INFO 5bf Got block  1  of size 25 KB from orderer.example.com:7050 channel=byfn-sys-channel         2020-03-06 10:48:58.548 UTC  orderer.common.cluster.replication  pullBlocks -> INFO 5c0 Got block  2  of size 35 KB from orderer.example.com:7050 channel=byfn-sys-channel         2020-03-06 10:48:58.551 UTC  orderer.common.cluster  BlockCommitted -> DEBU 5c1 Committed block  1  for channel byfn-sys-channel that is not a config block 2020-03-06 10:48:58.551 UTC  orderer.common.cluster  appendBlock -> PANI 5c2 Failed to write block  1 : unexpected Previous block hash. Expected PreviousHash =  v1 , PreviousHash referred in the latest block=  v2  panic: Failed to write block  1 : unexpected Previous block hash. Expected PreviousHash =  v1 , PreviousHash referred in the latest block=  v2  {code}  I am following the steps given in the latest Hyperledger Documentation and still it is throwing this error.   So I found the solution to this problem in chat.hyperledger.org where it was suggested to boot up the new orderer using the old *genesis.block* file which was used by other 3 orderers to start up initially. This actually worked but completely contradicts to what the official documentation says! Please correct me if I am wrong!  Link to StackOverflow thread: https://stackoverflow.com/questions/60562674/adding-a-new-orderer-node-to-the-raft-ordering-service-in-hyperledger-fabric/60563430  ></description> </Issue>
