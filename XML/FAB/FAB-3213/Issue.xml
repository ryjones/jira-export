<Issue id="15802" key="FAB-3213" number="3213" project="10002" reporter="yacovm" assignee="yacovm" creator="yacovm" type="10004" summary="Add revocation support to gossip" priority="3" resolution="10000" status="6" created="2017-04-18 10:05:12.0" updated="2018-07-20 14:12:15.0" resolutiondate="2017-04-20 11:39:43.0" votes="0" watches="1" workflowId="38026"> <description><! CDATA When a peer gets a new config block and it contains CRLs, the gossip layer needs to be notified in order to close existing connections to peers that their certificates have been expired.   If this is not done, then these peers are still forwarded data like peer membership and channel membership, because the connection is already open.  What can be done, is to simply expand the  config | https://github.com/hyperledger/fabric/blob/master/gossip/service/eventer.go#L27-L37  interface: {code} // Config enumerates the configuration methods required by gossip type Config interface { 	// ChainID returns the chainID for this channel 	ChainID() string  	// Organizations returns a map of org ID to ApplicationOrgConfig 	Organizations() map string config.ApplicationOrg  	// Sequence should return the sequence number of the current configuration 	Sequence() uint64 } {code} To have an object/function that given a serialized identity, it returns true or false whether it is revoked. Then, this object would be passed further down to the  gossip package | https://github.com/hyperledger/fabric/blob/master/gossip/gossip/ , where we'd iterate over the certificates known to us, and obtain the PKI-IDs that their corresponding connections should be closed (we can detect if a certificate is revoked by simply asking the MSP to  validate | https://github.com/hyperledger/fabric/blob/master/gossip/api/crypto.go#L55  that certificate) , and then the code would make the gossip's code layer to  close | https://github.com/hyperledger/fabric/blob/master/gossip/comm/comm.go#L53  the connection   ~C0rWin   ~mastersingh24   ~binhn   ~elli-androulaki   ></description> </Issue>
