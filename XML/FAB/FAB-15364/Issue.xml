<Issue id="39649" key="FAB-15364" number="15364" project="10002" reporter="manish-sethi" assignee="manish-sethi" creator="manish-sethi" type="10003" summary="Allow system chaincode (at least _lifecycle) to have access to txsimulator/txcontext" priority="3" resolution="10000" status="6" created="2019-05-06 18:54:12.0" updated="2019-05-30 13:09:42.0" resolutiondate="2019-05-30 13:09:42.0" votes="0" watches="1" workflowId="52627"> <description><! CDATA System chaincodes are limited by the shim interface and do not have access to some of the resources that may be required in the downstream code.  FAB-15363 requires the _lifecycle system chaincode to query lscc system chaincode in order to fetch existing collection configs (if defined).  One possible way would be to use chaicode calling chaincode mechanism. However, that would be extending the uses of system chaincodes in the peer code even further.   The other way (which would be preferred) is to use https://github.com/hyperledger/fabric/blob/master/core/scc/lscc/deployedcc_infoprovider.go to query directly lscc without going via lscc system chaincode interface (as is used at many places in peer code). However, this requires _lifecycle system chaincode to have access to query executor that can be used directly.  Discussed potential solution with  ~sykesm  and he suggests that the _lifecycle system chaincode can be passed with the txcontext map during construction of the chaincode instance (https://github.com/hyperledger/fabric/blob/master/internal/peer/node/start.go#L327) and the chaincode can look this up by txid (which is accessible via shim). This appears a reasonable workaround to me till we have to manage a part of the peer code as system chaincodes.  ></description> </Issue>
