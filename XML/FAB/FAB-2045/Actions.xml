<Action id="20707" issue="14548" author="mastersingh24" type="comment" created="2017-02-06 13:19:11.0" updateauthor="mastersingh24" updated="2017-02-06 13:19:11.0"> <body><! CDATA we don't currently support "read your own writes" in v1.0   ~denyeart   ~manish-sethi  any other comments?  ></body> </Action>
<Action id="20708" issue="14548" author="manish-sethi" type="comment" body="I think that I forgot to correct the documentation while remove the RYW support in V1.0. Will fix it in the ReadWriteSet.md against this Jira item." created="2017-02-06 13:43:21.0" updateauthor="manish-sethi" updated="2017-02-06 13:43:21.0"/>
<Action id="20710" issue="14548" author="denyeart" type="comment" created="2017-02-06 14:10:21.0" updateauthor="denyeart" updated="2017-02-06 14:10:21.0"> <body><! CDATA That's right, v1 has a different model where the transaction execution is a proposal to apply something to state, rather than applying it to state.  Therefore there is not a good option for reading your writes on complex state queries. Other consensus driven databases behave in a similar way.   ~manish-sethi  could you use this work item to make the update to ReadWriteSet.md that you referenced. And then we'll also need to explain the behavior in the external chaincode authoring documentation.    ></body> </Action>
<Action id="20829" issue="14548" author="sstone1" type="comment" created="2017-02-10 19:50:04.0" updateauthor="sstone1" updated="2017-02-10 19:50:04.0"> <body><! CDATA As per my comments in CR https://gerrit.hyperledger.org/r/#/c/5707/, updating the design documentation to reflect the changes is not sufficient:  I think the chaincode documentation needs to be updated to reference the transaction behaviour. One, because it's more likely chaincode developers will read it then a design document, and two because it's misleading:  https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#ChaincodeStubInterface  // PutState writes the specified `value` and `key` into the ledger. PutState(key string, value   byte) error  With the current behaviour, that's wrong. PutState does not write anything into the ledger. It puts it into the write set for the current transaction simulation.   ></body> </Action>
<Action id="20838" issue="14548" author="manish-sethi" type="comment" created="2017-02-11 12:18:15.0" updateauthor="manish-sethi" updated="2017-02-11 12:18:15.0"> <body><! CDATA As Simon pointed out in the comments for https://gerrit.hyperledger.org/r/#/c/5707, fixing the doc - ReadWriteSet.md should not be resolution of this Jira item. This Jira item is about fixing the chaincode documentation.  Created a separate Jira (https://jira.hyperledger.org/browse/FAB-2192) for fixing ReadWriteSet.md and unassigned myself for now. Does anyone know who is working on chaincode docs?  ></body> </Action>
<Action id="24924" issue="14548" author="binhn" type="comment" created="2017-06-01 13:20:37.0" updateauthor="binhn" updated="2017-06-01 13:20:37.0"> <body><! CDATA  ~manish-sethi   ~muralisr   I've been working on the chaincode doc  https://gerrit.hyperledger.org/r/#/c/9263/   so let me take this one then  ></body> </Action>
<Action id="24958" issue="14548" author="denyeart" type="comment" created="2017-06-01 15:48:17.0" updateauthor="denyeart" updated="2017-06-01 15:48:17.0"> <body><! CDATA  ~binhn  Thanks for updating the chaincode readthedocs.  Actually I am planning to do a final pass to finalize all function comments in:   https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#ChaincodeStubInterface   and was going to use this defect to do that.  But I can create a separate defect to do that.  Either way is fine, just let me know which route you'd like to take.  ></body> </Action>
<Action id="24962" issue="14548" author="binhn" type="comment" created="2017-06-01 16:12:23.0" updateauthor="binhn" updated="2017-06-01 16:12:23.0"> <body><! CDATA  ~denyeart   In Review  https://gerrit.hyperledger.org/r/#/c/10023/      ></body> </Action>
<Action id="25406" issue="14548" author="clayton sims" type="comment" body="CR merged so marking done" created="2017-06-05 17:53:10.0" updateauthor="clayton sims" updated="2017-06-05 17:53:10.0"/>
