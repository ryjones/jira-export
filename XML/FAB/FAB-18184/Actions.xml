<Action id="70036" issue="45924" author="yacovm" type="comment" created="2020-08-24 11:34:13.0" updateauthor="yacovm" updated="2020-08-24 11:34:13.0"> <body><! CDATA Looks like peers across different organizations do not see each other. # Do you have anchor peers  defined in the chan|https://hyperledger-fabric.readthedocs.io/en/latest/gossip.html#anchor-peers nel configuration? # Do the peers have their  external endpoints|https://hyperledger-fabric.readthedocs.io/en/latest/gossip.html#external-and-internal-endpoints  configured?   ></body> </Action>
<Action id="70041" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-24 16:03:01.0" updateauthor="JIRAUSER20631" updated="2020-08-24 16:18:15.0"> <body><! CDATA Yes I have anchor peers defined by name like this: peer1.org1 for org1 and peer1.org2 for peer 2. Do I need to define them by url like "peer1.yyyyyyyyyyyyyyyy.eastus.aksapp.io:443"? or by name its ok? this is the way they are defined in their ccp files.  I also have the environment variable CORE_PEER_GOSSIP_EXTERNALENDPOINT defined like this: peer1.yyyyyyyyyyyyyyyy.eastus.aksapp.io:443.     ></body> </Action>
<Action id="70042" issue="45924" author="yacovm" type="comment" created="2020-08-24 19:45:54.0" updateauthor="yacovm" updated="2020-08-24 19:45:54.0"> <body><! CDATA {quote}Do I need to define them by url like "peer1.yyyyyyyyyyyyyyyy.eastus.aksapp.io:443"? or by name its ok? {quote} by url, like the external endpoints  ></body> </Action>
<Action id="70043" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-25 03:31:07.0" updateauthor="JIRAUSER20631" updated="2020-08-25 03:31:32.0"> <body><! CDATA ??by url, like the external endpoints??  Changed them but I'm still getting the same error. Setting the endorsement policy to both org1 and org2 results in a discovery error and the endorsement policy for the contract gets lost.  ></body> </Action>
<Action id="70045" issue="45924" author="yacovm" type="comment" body="OK when you get the error can you please use the  discovery CLI |https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html and do a  membership query|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html#peer-membership-query  on the peer you are using for discovery (which per is it?) and post the output here?" created="2020-08-25 08:20:04.0" updateauthor="yacovm" updated="2020-08-25 08:20:37.0"/>
<Action id="70053" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-25 17:30:40.0" updateauthor="JIRAUSER20631" updated="2020-08-25 17:31:33.0"> <body><! CDATA ??OK when you get the error can you please use the  discovery CLI |https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html and do a  membership query|https://hyperledger-fabric.readthedocs.io/en/latest/discovery-cli.html#peer-membership-query  on the peer you are using for discovery (which per is it?) and post the output here???  Thank you Yacov, I went inside the peer and tried the discover function but I'm getting a "discover: command not found" error, I don't see in the documentation a way to install it, is it in a specific folder? I am attaching the peer logs as query-logs.txt when I do a query, I can execute other commands like "peer chaincode list" but not the discover one.     ></body> </Action>
<Action id="70054" issue="45924" author="yacovm" type="comment" body="download the  amd64 tar.gz|https://github.com/hyperledger/fabric/releases/tag/v1.4.8  according to the platform you&apos;re using, then go to the *bin* folder and you&apos;ll see a *discover* binary." created="2020-08-25 19:22:25.0" updateauthor="yacovm" updated="2020-08-25 19:22:25.0"/>
<Action id="70055" issue="45924" author="JIRAUSER20631" type="comment" body="Thanks, It worked, this is the result:  ^discovery-results.tst.txt " created="2020-08-26 00:24:23.0" updateauthor="JIRAUSER20631" updated="2020-08-26 00:30:35.0"/>
<Action id="70056" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-26 00:28:57.0" updateauthor="JIRAUSER20631" updated="2020-08-26 00:30:07.0"> <body><! CDATA Also tried this one: discover -configFile conf.yaml endorsers channel mychannel  --server peer1.yyyyyyyyyy.eastus.aksapp.io:443 -chaincode contract1   And I get this error:  server returned: failed constructing descriptor for chaincodes:<name:"contract1" >  ></body> </Action>
<Action id="70057" issue="45924" author="JIRAUSER20631" type="comment" body="There is something weird in the discovery results I get using the nodejs channel.getDiscoveryResults() function, I can see org1 duplicated, once like org1 and a second one capitalized like this ORG1, all the same information, can that be the problem? I updated the files to reflect that" created="2020-08-26 00:34:44.0" updateauthor="JIRAUSER20631" updated="2020-08-26 00:40:26.0"/>
<Action id="70059" issue="45924" author="yacovm" type="comment" created="2020-08-26 09:22:00.0" updateauthor="yacovm" updated="2020-08-26 09:22:00.0"> <body><! CDATA OK so the problem is certainly that the peer does not see peers in other organizations. If it was seeing other peers you'd have them in the discovery results.  You need to check if you have anchor peers defined properly and if you have external endpoints defined for the peers. - For anchor peers - can you upload here the latest configuration block of the channel? ( peer channel fetch config|https://hyperledger-fabric.readthedocs.io/en/release-1.4/commands/peerchannel.html#peer-channel-fetch  command). Note - the configuration block contains x509 certificates which carry identifying information about your deployment so if you don't want it be uploaded to the internet you can use  configtxlator proto_decode|https://hyperledger-fabric.readthedocs.io/en/release-1.4/commands/configtxlator.html#configtxlator-proto-decode  to turn it into a JSON and then censor the sensitive information before you upload here the JSON file.  - For external endpoints - in case you use docker or Kubernetes you can upload here the environment variables that the peers have when you they run, specifically the ones that have *GOSSIP_EXTERNALENDPOINT* in them.  ></body> </Action>
<Action id="70062" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-26 14:45:12.0" updateauthor="JIRAUSER20631" updated="2020-08-26 14:45:32.0"> <body><! CDATA Hi, I tried the *peer channel fetch* *config* from inside the pod and I'm getting this error:  2020-08-26 12:35:27.547 UTC  channelCmd  InitCmdFactory -> INFO 001 Endorser and orderer connections initialized 2020-08-26 12:35:27.549 UTC  cli.common  readBlock -> INFO 002 Got status: &\{NOT_FOUND} Error: can't read the block: &\{NOT_FOUND}  I don't understand how my blockchain worked with this error, but I'm searching the web to see what it is.  this is the log when I ask for the *GOSSIP_EXTERNALENDPOINT*   echo $CORE_PEER_GOSSIP_EXTERNALENDPOINT peer1.yyyyyyyyyyyyyy.eastus.aksapp.io:443  Here is a list of all the environment variables from inside the pod using printenv:  ^printenv.txt         ></body> </Action>
<Action id="70063" issue="45924" author="yacovm" type="comment" body="what do the logs of the peer show when you get this NOT_FOUND error? And what is the exact command you used?" created="2020-08-26 15:23:05.0" updateauthor="yacovm" updated="2020-08-26 15:23:05.0"/>
<Action id="70064" issue="45924" author="yacovm" type="comment" body="Also if you can put all logs on debug  and upload them her|https://hyperledger-fabric.readthedocs.io/en/release-2.0/logging-control.html e it can help." created="2020-08-26 15:30:27.0" updateauthor="yacovm" updated="2020-08-26 15:30:27.0"/>
<Action id="70066" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-26 16:36:50.0" updateauthor="JIRAUSER20631" updated="2020-08-26 16:36:50.0"> <body><! CDATA I was looking on the web and found that some people recreate the channel, I can't do that because this I already have data there and its in use, so looking for a solution I updated the docker image to peer:1.4.8 and tried again with *peer channel fetch* *config* the error was the same and this are the logs I got:  ^peer1-logs.txt    Looking at the logs I think the discovery service its trying to reach to the anchor peers and it can't find them because the address its wrong, I'm going to change them directly from the peer without using the function provided by azure.  ></body> </Action>
<Action id="70067" issue="45924" author="yacovm" type="comment" created="2020-08-26 16:44:26.0" updateauthor="yacovm" updated="2020-08-26 16:44:26.0"> <body><! CDATA Yeah these errors indeed look like it can't reach them due to some reason.    {quote} Looking at the logs I think the discovery service its trying to reach to the anchor peers and it can't find them because the address its wrong, I'm going to change them directly from the peer without using the function provided by azure.{quote}  To change the anchor peer you need to make a configuration update which changes anchor peers.  Look  here|https://github.com/hyperledger/fabric-samples/blob/be3ce853dc6366deaac278323ce8429bfdde713f/test-network/scripts/createChannel.sh#L34-L49  and  here|https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/scripts/utils.sh#L71-L91  for hints how to do it.   ></body> </Action>
<Action id="70083" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-27 13:37:47.0" updateauthor="JIRAUSER20631" updated="2020-08-27 13:38:55.0"> <body><! CDATA Hi Yacob, after struggling for a while I managed to extract the config from my blockchain adding some variables to the peer channel fetch config like this:  {code:java} peer channel fetch config config_block.pb -o ${ORDERER_ADDRESS} -c $CHANNEL --tls --cafile ${ORDERER_TLS_CA} --clientauth --certfile $ADMIN_TLS_CERTFILE --keyfile $ADMIN_TLS_KEYFILE &> $LOG_FILE{code} I think the anchor peers look fine, here is the config.json file:  ^config-modified.json  do you see something wrong? thanks  ></body> </Action>
<Action id="70084" issue="45924" author="JIRAUSER20631" type="comment" body="The weird thing I keep seeing its the capitalized org1 I&apos;m going to try to remove it from the channel" created="2020-08-27 13:46:50.0" updateauthor="JIRAUSER20631" updated="2020-08-27 13:46:50.0"/>
<Action id="70085" issue="45924" author="JIRAUSER20631" type="comment" body="That and that the config its really nested, is it supposed to look like that?" created="2020-08-27 14:23:59.0" updateauthor="JIRAUSER20631" updated="2020-08-27 14:23:59.0"/>
<Action id="70086" issue="45924" author="yacovm" type="comment" created="2020-08-27 14:51:53.0" updateauthor="yacovm" updated="2020-08-27 14:51:53.0"> <body><! CDATA The config is always nested, it's supposed to represent a tree.   ~afrancoc2000  can you put all logs to debug and upload them here after censoring them?   ></body> </Action>
<Action id="70091" issue="45924" author="JIRAUSER20631" type="comment" created="2020-08-27 17:18:28.0" updateauthor="JIRAUSER20631" updated="2020-08-27 17:18:28.0"> <body><! CDATA Hi Yacob, I changed the contract back to no endorsement policy, where I don't get a discovery error, added the endorsement policies again, killed the pod to change the environment variable to debug, started a new one and then everything, the discovery and the endorsement policy for 2 orgs started working :D  I think that when I changed the anchor peers to the host:port form the configuration was corrected but I needed to recreate the pod and/or restablish normal discovery behavior for it to reset.  Thank you very much for your help, I was really lost with this issue and I learned a lot with your guidance.    ></body> </Action>
<Action id="70093" issue="45924" author="yacovm" type="comment" created="2020-08-27 17:31:39.0" updateauthor="yacovm" updated="2020-08-27 17:31:39.0"> <body><! CDATA {quote}I think that when I changed the anchor peers to the host:port form the configuration was corrected but I needed to recreate the pod and/or restablish normal discovery behavior for it to reset. {quote} No, when you do anchor peer updates they take effect immediately without a restart.   {quote} Thank you very much for your help, I was really lost with this issue and I learned a lot with your guidance.{quote}  Sure, but we still don't know what was going on, and you didn't need to kill the pod to change the debug level,  you can do it dynamically with an HTTP call|https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html#log-level-management . I forgot to mention it and pointed you to the  logging control|https://hyperledger-fabric.readthedocs.io/en/release-2.0/logging-control.html  page which I thought mentioned this, but since I don't read the Fabric documentation myself I was wrong...   Either way, I am closing this issue, please re-open it, or open a new one if the problem comes back.   ></body> </Action>
<Action id="70095" issue="45924" author="JIRAUSER20631" type="comment" body="I&apos;ve created an issue in the azure template for this to get corrected,  Azure Template|https://github.com/Azure/Hyperledger-Fabric-on-Azure-Kubernetes-Service/issues/15 . Thanks again." created="2020-08-27 17:39:55.0" updateauthor="JIRAUSER20631" updated="2020-08-27 17:39:55.0"/>
