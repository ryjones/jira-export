<Issue id="19675" key="INDY-500" number="500" project="10303" reporter="andrey.goncharov" assignee="ashcherbakov" creator="andrey.goncharov" type="10002" summary="Drop messages from request queue when their amount is too high" priority="3" resolution="10000" status="10001" created="2017-08-01 12:29:26.0" updated="2019-03-29 20:33:36.0" resolutiondate="2019-03-29 20:33:36.0" votes="0" watches="4" timeoriginalestimate="28800" timeestimate="28800" workflowId="19675"> <description><! CDATA On high message rate node may be incapable to process them all quickly, so some of them should be en-queued.  Earlier we used internal queue of zmq for this, but it does not allow us to: # Understand which number of messages received # Drop some of them selectively (for example the oldest) when load is too high (zmq allows dropping of new messages only)  That's why we need to create own queue, put all incoming messages to it and drop some of them on high load.     In INDY-366 we changed the default FIFO queue in ZMQ to be unlimited. This makes certain problems less likely, but it also masks problems for a lot longer.  It led to Memory Leaks, so we reverted  this  back to 10,000 limit. We were truly robust if: # The high water mark were finite (e.g., 100,000). # We had a way to detect that we are nearing the high water mark, and that we would report a graceful error that makes this condition easy to diagnose. # We implemented logic in STP to discard old messages rather than new ones. (Desirable but not necessarily required.) # If we exceed the high water mark, we exit the daemon process gracefully rather than crashing due to an out-of-memory condition.  Possibly 3 could be omitted.  ></description> </Issue>
