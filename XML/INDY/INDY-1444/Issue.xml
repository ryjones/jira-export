<Issue id="31564" key="INDY-1444" number="1444" project="10303" reporter="ckochenower" creator="ckochenower" type="10004" summary="Catchup requires indy-node service restart" priority="3" resolution="10001" status="10001" created="2018-07-02 19:16:56.0" updated="2019-03-29 20:35:42.0" resolutiondate="2019-03-29 20:35:42.0" votes="0" watches="2" workflowId="31578"> <description><! CDATA Simulating packet/message loss using iptables/nftables produced unexpected behavior in catchup process. The indy-node service must be restarted to trigger catchup when packages/messages are lost due to dropped packets/messages at the firewall.   ~sergey.khoroshavin  asked that the following properties be added to /etc/indy/indy_config.py on each of the validator nodes to test if this issue is related to INDY-1429. The change in configuration did not change the outcome.  Steps to reproduce:  Setup: # Open 4 ssh sessions (terminal 1 - 4) # (terminal 1) - Generate some nym transactions. ssh to a client node. This is where you will run the indy-node perf_processes load script to write 400 nyms to the domain ledger. ## ssh to a client node and be prepared to run the following load script: {code} time python3 /home/ubuntu/indy-node/scripts/performance/perf_processes.py -c 20 -n 20 -k nym -g /home/ubuntu/pool_transactions_genesis {code} # (terminal 2) - Monitor "Number_txns_in_catchup" for the domain ledger ("0") using validator-info output. ## ssh to one of the validator nodes and run the following command. You may need to adjust -C 30 to something smaller or larger to capture all of the Catchup_status output. Unfortunately, 'validator-info -v --json` does not currently produce valid JSON output ( see INDY-1443 ) {code}watch -n3 'sudo validator-info -v 2>/dev/null | grep -C 30 Catchup_status'{code} # (terminal 3) - Tail the log for 'catchup' log messages {code} tail -f /var/log/indy/sandbox/Node8.log | grep -i catch {code} # (terminal 4) - Block and unblock the node port during the experiment.  Experiment: (terminal 4) - Add a firewall rule to block the node port (9715 in this case. Get the node port from the genesis transaction file) {code} sudo iptables -A INPUT -p tcp --destination-port 9715 -j DROP {code} (terminal 1) - Generate 400 nym transactions {code} time python3 /home/ubuntu/indy-node/scripts/performance/perf_processes.py -c 20 -n 20 -k nym -g /home/ubuntu/pool_transactions_genesis {code} (terminal 4) - Once all 400 nym transactions are written, unblock the node port {code} sudo iptables -D INPUT -p tcp --destination-port 9715 -j DROP {code} (terminal 2) Observe that the domain ledger (Catchup_status > Number_txns_in_catchup > 1) count has not changed. It doesn't matter how long you wait, it will never change. (terminal 3) Observe that no catchup log messages are being written to the log. Be aware that log rotation may require you to re-tail the log if the file handle changes. (terminal 4) After you have waited long enough to be convinced that unblocking the port isn't enough to trigger catchup... Restart the indy-node service {code} sudo systemctl restart indy-node {code} (terminals 2 and 3) Both 'validator-info -v' and the logs should show evidence that catchup is being performed. After about a minute or two, 'validator-info -v' should report something similar to the following. Notice the 400 next to "1" under "Number_txns_in_catchup"?  {code} ... "Catchup_status": "Last_txn_3PC_keys": "1":             "0":             "2":             "Ledger_statuses": "1":            synced "0":            synced "2":            synced "Waiting_consistency_proof_msgs": "1":            n/a "0":            n/a "2":            n/a "Number_txns_in_catchup": "1":            400 "0":            n/a "2":            n/a "Received_LedgerStatus":  n/a ... {code}  ></description> </Issue>
