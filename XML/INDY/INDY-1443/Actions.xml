<Action id="46831" issue="31563" author="ckochenower" type="comment" created="2018-07-02 19:20:47.0" updateauthor="ckochenower" updated="2018-07-02 19:20:47.0"> <body><! CDATA 1) \-\-json should produce completely parsable JSON 2) \-\-json should be the highest verbosity. No need for \-v to get more data.  ></body> </Action>
<Action id="46832" issue="31563" author="mgbailey" type="comment" created="2018-07-02 19:27:56.0" updateauthor="mgbailey" updated="2018-07-02 19:27:56.0"> <body><! CDATA I'll add support to what  ~ckochenower  is saying. --json should always imply the highest verbosity, since it is by nature machine consumable, and thus is intended to be filtered and used by an automated system.  Changes made for the local validator-info script should also be included in the client get validator info transaction.  ></body> </Action>
<Action id="47107" issue="31563" author="anikitindsr" type="comment" created="2018-07-09 14:46:34.0" updateauthor="anikitindsr" updated="2018-07-09 14:46:34.0"> <body><! CDATA Reasons: * --json option should be the highest verbosity  Changes: * For now, --json option return valid JSON output with the highest verbosity  Versions: * indy-node: 1.4.495  Recommendation for QA:  - run validator-info with --json option and check, that all possible information is displayed as a valid JSON  ></body> </Action>
<Action id="47157" issue="31563" author="vladimirwork" type="comment" created="2018-07-10 13:10:24.0" updateauthor="vladimirwork" updated="2018-07-10 13:10:24.0"> <body><! CDATA Build Info: indy-node 1.4.495  Steps to Validate: 1. Run validator-info with --json / -v / --json -v / -v --json.  Actual Results: Validator-info -v returns human-readable output. All other combinations returns valid JSON with full node information.  ></body> </Action>
<Action id="47184" issue="31563" author="ckochenower" type="comment" created="2018-07-10 18:11:28.0" updateauthor="ckochenower" updated="2018-07-10 18:19:41.0"> <body><! CDATA  ~VladimirWork  - The output of \-\-json \-v appears to be valid JSON, but it is not. It is, however, valid python.  result.stdout in the following Pdb session contains the output from `validator-info \-v \-\-json`. {code} (Pdb) validatorInfoDict = json.loads(result.stdout) *** json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1) (Pdb) validatorInfoDict = eval(result.stdout) (Pdb) validatorInfoJSON = json.dumps(validatorInfoDict) (Pdb) validatorInfoDict = json.loads(validatorInfoJSON) (Pdb) {code}  Notice that json.loads fails with a json.decoder.JSONDecodeError because property names are not enclosed in double quotes? Drop the output in any JSON linter (i.e. jsonlint.org) and you will see what I mean.  Notice that eval parses the results into a python dict w/o error?  I can provide you concrete examples via slack.  The workaround for now is to use eval(...) instead of json.loads(...)  ></body> </Action>
<Action id="47194" issue="31563" author="vladimirwork" type="comment" body="It looks like we should change single quotes to double. !INDY-1443.PNG|thumbnail! " created="2018-07-11 06:55:15.0" updateauthor="vladimirwork" updated="2018-07-11 06:55:15.0"/>
<Action id="47205" issue="31563" author="anikitindsr" type="comment" body="was released new indy-node 1.4.497 with fix json output.Â " created="2018-07-11 11:25:27.0" updateauthor="anikitindsr" updated="2018-07-11 11:25:27.0"/>
<Action id="47226" issue="31563" author="ckochenower" type="comment" body=" ~VladimirWork  and  ~anikitinDSR  - I have upgraded to indy-node 1.4.497 and tested the change. I can confirm that we now have valid JSON. Thank you!" created="2018-07-11 14:27:12.0" updateauthor="ckochenower" updated="2018-07-11 14:27:12.0"/>
<Action id="47228" issue="31563" author="ckochenower" type="comment" body="Would be nice to have a regression test for this." created="2018-07-11 14:28:23.0" updateauthor="ckochenower" updated="2018-07-11 14:28:23.0"/>
