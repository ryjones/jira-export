<Action id="46076" issue="30924" author="ozheregelya" type="comment" created="2018-06-18 11:26:47.0" updateauthor="ozheregelya" updated="2018-06-18 13:05:07.0"> <body><! CDATA The issue was reproduced on the latest master version (indy-node 1.4.464) and node behavior after adding differs from initial one. All missed txns are processed right after node adding, before first batch sending.  Logs: MAX_RECONNECT_RETRY_ON_SAME_SOCKET = 1000 : ->  ^indy1390_MAX_RECONNECT_RETRY_ON_SAME_SOCKET_1000.7z  MAX_RECONNECT_RETRY_ON_SAME_SOCKET = 1 :  ->  ^indy1390_MAX_RECONNECT_RETRY_ON_SAME_SOCKET_1.7z   Note that initial steps (up the node -> add the node -> send txn *before* processing of missed txn by added node) are impossible with small ledger because node processes missed txns right after adding.  ></body> </Action>
<Action id="46193" issue="30924" author="sergey-shilov" type="comment" body="See the  comment|https://jira.hyperledger.org/browse/INDY-1401?focusedCommentId=46192&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-46192  in ticket  INDY-1401|https://jira.hyperledger.org/browse/INDY-1401 ." created="2018-06-19 12:45:09.0" updateauthor="sergey-shilov" updated="2018-06-19 12:45:09.0"/>
<Action id="46366" issue="30924" author="sergey-shilov" type="comment" created="2018-06-21 11:48:55.0" updateauthor="sergey-shilov" updated="2018-06-21 11:51:49.0"> <body><! CDATA *Problem state / reason:*  Sometimes we face troubles with node-to-node connecting process. Each node-to-node logical connection consists of two TCP connections. A node connects to other node and sends packets using only this connection. A node receives packets using incoming connection. If one of these connections is not established then nodes can not communicate. In this ticket nodes had been failed to connect until they recreated their sockets to connect. Seems like it is a bug of ZeroMQ.  *Changes:*  As soon as recreating of ZeroMQ sockets solves connection issue we've made a fix to reduce connections retrying using the same socket:  _MAX_RECONNECT_RETRY_ON_SAME_SOCKET = 1_  *Committed into:*   https://github.com/hyperledger/indy-plenum/pull/749    https://github.com/hyperledger/indy-node/pull/767   indy-node 1.4.470-master  *Risk factors:*      Nothing is expected.  *Risk:*      Low  *Recommendations for QA:*  Repeate tests with adding of nodes and check that all nodes are connected.  ></body> </Action>
<Action id="46411" issue="30924" author="ozheregelya" type="comment" created="2018-06-21 19:18:35.0" updateauthor="ozheregelya" updated="2018-06-21 19:18:35.0"> <body><! CDATA *Environment:* indy-node 1.4.470 libindy 1.4.0~596  *Steps to Validate:* 1. Setup the pool of 4 nodes. 2. Init 2 more nodes (init_indy_node). 3. Send Node txn for one of these nodes. 4. Start both of additional nodes. 5. Check txns count on all nodes. => Added node processed all missed txns. Not added node has only genesis txns. 6. Send txn. => Txn successfully written on added node. 7. Add the second node, check txns count. => Added node processed all missed txns. All nodes have the same count of txns. 8. Send txn.  *Actual Results:* Nodes were successfully added, all nodes have the same amount of txns.  ></body> </Action>
