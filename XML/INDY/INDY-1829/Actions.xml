<Action id="53581" issue="35217" author="zhigunenko.dsr" type="comment" created="2018-11-19 08:51:59.0" updateauthor="zhigunenko.dsr" updated="2018-12-07 14:45:37.0"> <body><! CDATA *Actual Results:* * get_nym indy-node 1.6.700 (25 nodes) domain ledger - 110k, payment ledger - 154k  fact performance (total from 25 nodes): up to 7300 read/sec (potentially up to 8200 and more in case of bigger client number) * get_txn (domain) indy-node 1.6.703 (25 nodes) domain ledger - 10k  fact performance (total from 25 nodes): up to 250 txn/sec (current SDK connection sustentation policy leads to dropping new connections after 500 already existing) !image-2018-11-29-11-01-17-298.png|width=100%, height=100%! Â  * get_txn (payment) fact performance (total from 25 nodes): up to 400 read/sec Step-by-step increasing !image-2018-12-06-16-17-56-413.png|width=100%, height=100%! !image-2018-12-07-17-39-04-739.png|width=100%, height=100%! avg_connected_clients_num   ---- *Numerous client load* !image-2018-12-07-17-01-30-296.png|width=100%, height=100%! !image-2018-12-07-17-42-16-687.png|width=100%, height=100%! avg_connected_clients_num   * get_txn (pool) fact performance (total from 25 nodes): TDB  *Additional Info:* For getting maximum performance load must be increased slowly. Otherwise instant initial spike (with no view_change) will create too many timeouts  ></body> </Action>
