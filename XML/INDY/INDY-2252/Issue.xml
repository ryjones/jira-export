<Issue id="42747" key="INDY-2252" number="2252" project="10303" reporter="lovesh" creator="lovesh" type="10002" summary="Improving efficiency of BLS signature verification" priority="4" status="10200" created="2019-10-14 18:39:27.0" updated="2019-11-05 09:54:34.0" votes="0" watches="1" workflowId="55827"> <description><! CDATA This ticket is motivated by the assumption that BLS signing is done by more computationally powerful machines but the verification needs to be done by less powerful machines (clients) as well hence signature size and speed can be traded-off for faster verification. Also, this change will make current signatures incompatible with future signatures so this ticket should be considered when migration is done (for the curve).  Currently, we have signatures in group G1 (and hence messages are also hashed in G1) whereas the verification key is in G2. This makes the signing and aggregation fast and keeps signatures short but it makes the verification more expensive since operations are more expensive in G2 compared to G1. But this situation can be reversed by keeping signatures in G2 and the verification keys in G1. The signing, verification and aggregation algorithms don't have to change. Also, this has to be supported in the underlying crypto library so a compile time flag can be used to configure such behavior,  an example|https://github.com/lovesh/signature-schemes/tree/master/bls   ></description> </Issue>
