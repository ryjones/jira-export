<Action id="66265" issue="43707" author="esplinr" type="comment" created="2019-12-13 18:37:49.0" updateauthor="esplinr" updated="2019-12-16 14:43:28.0"> <body><! CDATA The approved version of the TAA for the Sovrin Network incorporates this language: {quote} If Transaction Author continues to Author Transactions to the Sovrin Ledger Networks after the Amendment Cutover Date, such continued use will constitute acceptance of the amended Agreement. Â   {quote}  This is interpreted to mean that once someone has accepted any version of the agreement, they do not need to explicitly accept future versions because continued usage is acceptance.  ~drummondreed  confirmed that: * Authors need to be notified that the new version exists. * Authors should continue to sign each transaction with a TAA acceptance. * And authors should continue to include the hash of the latest TAA in their acceptance. * But that the acceptance date can be any date after the first TAA was enforced on the ledger and available for acceptance.  This approach raises questions like: * How does this logic hold when we cannot enforce that users of a distributed ledger are notified of the latest agreement? * Is it really meaningful acceptance to not review the latest agreement? * Why would we include the hash of the latest agreement, but not the date the latest agreement was accepted? * Is it really not important to know which version of the agreement the Transaction Author agreed to (because the acceptance date doesn't relate to the hash being used to sign the transaction).  Regardless, the approach described in this issue is compatible with these requirements because the ratified date for the TAA could be the date the first TAA is ratified. The same ratified date would continue to be used when future agreements are put on the ledger.  ></body> </Action>
<Action id="66281" issue="43707" author="esplinr" type="comment" created="2019-12-16 22:36:11.0" updateauthor="esplinr" updated="2019-12-16 22:36:11.0"> <body><! CDATA We discussed this on the Indy Contributors call. We will proceed with the flexible approach defined in the body of this story, knowing that it can also be used the way that Drummond explained. Future work outside of the Indy project: * When there is a new TAA for the Sovrin Network, they can decide whether to populate the ratified date with the same date as the first enforced version, or the date the new agreement is ratified. * The Sovrin Governance Working Group will need to work with the Sovrin Foundation and other members of the community to specify the UX patterns they think should be used.  ></body> </Action>
<Action id="66335" issue="43707" author="sergey.khoroshavin" type="comment" created="2019-12-20 11:41:54.0" updateauthor="sergey.khoroshavin" updated="2019-12-20 11:41:54.0"> <body><! CDATA *PoA* * modify scheme of TRANSACTION_AUTHOR_AGREEMENT transaction ** add optional field *ratification_ts* ** change existing optional field *retired* to *retirement_ts* for consistency * implement tests and logic according to requirements  ></body> </Action>
<Action id="66380" issue="43707" author="sergey.khoroshavin" type="comment" body=" ~esplinr  Requirements question - when we send a new TAA should nodes allow for some clock skew when checking that ratification datetime is in the past or not? I expect answer to be no (with rationale described  here|https://github.com/hyperledger/indy-plenum/pull/1437/#discussion_r360933051 ), but - again - this is a requirements question, so having your real answer would be much better." created="2019-12-23 17:33:37.0" updateauthor="sergey.khoroshavin" updated="2019-12-23 17:33:37.0"/>
<Action id="66403" issue="43707" author="sergey.khoroshavin" type="comment" created="2019-12-25 11:27:07.0" updateauthor="sergey.khoroshavin" updated="2019-12-25 11:27:07.0"> <body><! CDATA *Problem reason* As described in requirements  *Changes made* Added optional ratification_ts field to TXN_AUTHOR_AGREEMENT transaction, implemented logic described in requirements, update load script to use new workflow. In process had to update API of pluggable request handlers (most notable change - added optional req_pp_time parameter to WriteRequestHandler.dynamic_validation).  *Versions* indy-plenum 1.12.1.dev988 indy-node 1.12.1~dev1171 token-plugin 1.0.6~dev138  *PR* https://github.com/hyperledger/indy-plenum/pull/1434 https://github.com/hyperledger/indy-node/pull/1546 https://github.com/sovrin-foundation/token-plugin/pull/369 https://github.com/hyperledger/indy-plenum/pull/1437 https://github.com/hyperledger/indy-node/pull/1550 https://github.com/sovrin-foundation/token-plugin/pull/372  *Covered by tests* test_create_txn_author_agreement_without_ratified_fails test_create_txn_author_agreement_with_ratified_from_future_fails test_txn_author_agreement_update_ratification_fails + quite a lot of existing tests were updated to use new workflow  *Risks* Medium  *Risk factors* TAA workflow was changed, as well as pluggable request handlers API.  *Recommendations for QA* * Check that current behaviour adheres to new requirements (described in this ticket and documentation) * Check that sending actions still work * Check that sending forced write transactions still work  ></body> </Action>
<Action id="66413" issue="43707" author="vladimirwork" type="comment" created="2019-12-26 13:33:07.0" updateauthor="vladimirwork" updated="2019-12-26 13:33:07.0"> <body><! CDATA All system tests are implemented and pass:  https://github.com/hyperledger/indy-test-automation/blob/3e6232c492b47d32d9721b93a608a00c0cb0c16e/system/draft/test_misc.py#L2287 https://github.com/hyperledger/indy-test-automation/blob/3e6232c492b47d32d9721b93a608a00c0cb0c16e/system/draft/test_misc.py#L2592 https://github.com/hyperledger/indy-test-automation/blob/3e6232c492b47d32d9721b93a608a00c0cb0c16e/system/draft/test_upgrade_docker_7_new_taa.py#L20  ></body> </Action>
<Action id="66574" issue="43707" author="esplinr" type="comment" body="Regarding accounting for potential clock skew in comparing a TAA with the ratification date, I agree with the logic explained by  ~sergey.khoroshavin  in the PR. It is very unlikely to be needed." created="2020-01-09 21:33:27.0" updateauthor="esplinr" updated="2020-01-09 21:33:27.0"/>
