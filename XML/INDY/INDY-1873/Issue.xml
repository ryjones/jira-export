<Issue id="35566" key="INDY-1873" number="1873" project="10303" reporter="vladimirwork" assignee="vladimirwork" creator="vladimirwork" type="10004" summary="Different amount of protocol instances on different nodes" priority="3" resolution="10000" status="10001" created="2018-11-23 09:52:32.0" updated="2019-03-29 20:34:24.0" resolutiondate="2019-03-29 20:34:24.0" votes="0" watches="2" workflowId="47034"> <description><! CDATA Build Info: indy-node 1.6.694  Steps to Reproduce: 1. Start a pool of 7 nodes. 2. Send some write requests. 3. Ensure that the batches are ordered in the instances 1 and 2. 4. Stop the primary of the instance 2 (3rd node). 5. Stop the master's primary (1st node). 6. Wait for a view change is started and completed. 7. Start the last stopped node (1st node). 8. Start the first stopped node (3rd node) and ensure that it is the primary of the instance 1 now. 9. Send 1 write request. 10. Verify that the new batches are ordered in the instances 1 and 2.  Actual Results: There are 3 primaries and protocol instances (0, 1, 2) on the 1st and 3rd node and only 2 primaries and protocol instances (0, 2) on the other 5 nodes. The issue persists after another txns ordering and over time.  Expected Results: We should have the same amount of protocol instances and primaries on each node in the pool.  Additional Info: REPLICAS_REMOVING_WITH_DEGRADATION = None REPLICAS_REMOVING_WITH_PRIMARY_DISCONNECTED = None  There is no issue with this parameters so it looks like replicas' killing logic should be improved.  ></description> </Issue>
