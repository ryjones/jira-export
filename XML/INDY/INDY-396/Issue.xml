<Issue id="19123" key="INDY-396" number="396" project="10303" reporter="krw910" assignee="krw910" creator="krw910" type="10004" summary="Blocking Issue: Unable to launch agents for Faber, Acme, and Thrift due to recent DID changes" priority="1" resolution="10200" status="10001" created="2017-07-10 16:45:34.0" updated="2019-03-29 20:33:25.0" resolutiondate="2019-03-29 20:33:25.0" votes="0" watches="3" workflowId="19123"> <description><! CDATA The agents for Faber, Acme, and Thrift throw an error when launching them. I believe this will be the same case for the Unicorn agents which will also need updating with the new DID changes.     To setup the agents needed in the Getting Started Tutorial you need to do the following listed below. Once those agents are setup you start the demo scripts and will get the error listed below.  *Setup* In the sovrin cli register the demo agents by doing the following ------------------------------------------------------------------------------------------------------------------------ *Register the Faber Agent*  *{color:#205081}Create a Trust Anchor for the agent{color}* send NYM dest=ULtgFQJe6bjiFbs7ke3NJD role=TRUST_ANCHOR  *{color:#205081}Send the endpoint attribute for the agent{color}* send ATTRIB dest=ULtgFQJe6bjiFbs7ke3NJD raw=\{"endpoint": \{"ha": "10.0.0.202:5555", "pubkey": "5hmMA64DDQz5NzGJNVtRzNwpkZxktNQds21q3Wxxa62z"}}  ------------------------------------------------------------------------------------------------------------------------ *Register the Acme Agent*  *{color:#205081}Create a Trust Anchor for the agent{color}* send NYM dest=CzkavE58zgX7rUMrzSinLr role=TRUST_ANCHOR  *{color:#205081}Send the endpoint attribute for the agent{color}* send ATTRIB dest=CzkavE58zgX7rUMrzSinLr raw=\{"endpoint": \{"ha": "10.0.0.203:6666", "pubkey": "C5eqjU7NMVMGGfGfx2ubvX5H9X346bQt5qeziVAo3naQ"}}  ------------------------------------------------------------------------------------------------------------------------ *Register the ThriftBank Agent*  *{color:#205081}Create a Trust Anchor for the agent{color}* send NYM dest=H2aKRiDeq8aLZSydQMDbtf role=TRUST_ANCHOR  *{color:#205081}Send the endpoint attribute for the agent{color}* send ATTRIB dest=H2aKRiDeq8aLZSydQMDbtf raw=\{"endpoint": \{"ha": "10.0.0.204:7777", "pubkey": "AGBjYvyM3SFnoiDGAEzkSLHvqyzVkXeMZfKDvdpEsC2x"}}  ------------------------------------------------------------------------------------------------------------------------  *Starting the Agents* *{color:#205081}Agent 2 (Faber){color}* python3 /usr/local/lib/python3.5/dist-packages/sovrin_client/test/agent/faber.py --port 5555  *{color:#205081}Agent 3 (Acme){color}* python3 /usr/local/lib/python3.5/dist-packages/sovrin_client/test/agent/acme.py --port 6666  *{color:#205081}Agent 4 (Thrift){color}* python3 /usr/local/lib/python3.5/dist-packages/sovrin_client/test/agent/thrift.py --port 7777    *{color:#d04437}Error{color}*   {code:java} Traceback (most recent call last): File "/usr/local/lib/python3.5/dist-packages/sovrin_client/test/agent/faber.py", line 119, in <module> agent = create_faber(name=name, wallet=buildAgentWallet(name, FABER_SEED), base_dir_path=None, port=port) File "/usr/local/lib/python3.5/dist-packages/sovrin_client/test/agent/faber.py", line 26, in create_faber client = create_client(base_dir_path=None, client_class=TestClient) File "/usr/local/lib/python3.5/dist-packages/sovrin_client/agent/agent.py", line 215, in create_client basedirpath=base_dir_path) File "/usr/local/lib/python3.5/dist-packages/plenum/test/testable.py", line 65, in init_only return func(self, *args, **kwargs) File "/usr/local/lib/python3.5/dist-packages/sovrin_client/test/client/TestClient.py", line 25, in __init__ super().__init__(*args, **kwargs) File "/usr/local/lib/python3.5/dist-packages/sovrin_client/client/client.py", line 51, in __init__ sighex) File "/usr/local/lib/python3.5/dist-packages/plenum/client/client.py", line 111, in __init__ HasPoolManager.__init__(self) File "/usr/local/lib/python3.5/dist-packages/plenum/client/pool_manager.py", line 27, in __init__ _, cliNodeReg, nodeKeys = self.parseLedgerForHaAndKeys(self.ledger) File "/usr/local/lib/python3.5/dist-packages/plenum/common/stack_manager.py", line 79, in parseLedgerForHaAndKeys for _, txn in ledger.getAllTxn(): File "/usr/local/lib/python3.5/dist-packages/ledger/ledger.py", line 223, in getAllTxn for seq_no, txn in self._transactionLog.get_range(frm, to)) File "/usr/local/lib/python3.5/dist-packages/ledger/ledger.py", line 223, in <genexpr> for seq_no, txn in self._transactionLog.get_range(frm, to)) File "/usr/local/lib/python3.5/dist-packages/ledger/serializers/json_serializer.py", line 75, in deserialize return self.loads(data) File "/usr/local/lib/python3.5/dist-packages/ledger/serializers/json_serializer.py", line 65, in loads return json.loads(data) File "/usr/lib/python3.5/json/__init__.py", line 319, in loads return _default_decoder.decode(s) File "/usr/lib/python3.5/json/decoder.py", line 339, in decode obj, end = self.raw_decode(s, idx=_w(s, 0).end()) File "/usr/lib/python3.5/json/decoder.py", line 357, in raw_decode raise JSONDecodeError("Expecting value", s, err.value) from None json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0) {code}    ></description> </Issue>
