<Action id="31100" issue="20881" author="ozheregelya" type="comment" created="2017-09-22 16:58:49.0" updateauthor="ozheregelya" updated="2017-09-22 17:01:05.0"> <body><! CDATA No, catch up will fail because of different root hashes.  The main assumption of catch up logic is that roots are the same. It means that any node can miss some transactions, but it will not write anything before actualization its ledger.   Steward initializes node based on this genesis file. After that, he is opens CLI and adds his node to the pool. The message "<client_id> connected to NodeX" will be shown, and it is true because specifier ports on specified IP are opened. But actually NodeX does not take part in consensus and does not work with the pool. Steward will see that node does not work with the pool only when he will look into validator info, or node ledger.  The next interesting thing in this case is CLI. - If steward will use the same incorrect genesis file for connection to pool, the CLI will not start because pool ledgers have different sizes and catch up of client ledger will fail. (This is correct and expected behavior.) - If steward will use genesis file with invalid content (invalid txnId or identifier fields) but the same size as pool ledger, catch up of client pool ledger will not happen because root hashes are not compared if pool ledgers sizes are the same and CLI will work and reconnect until any changes in pool ledger. This behavior is not quite correct, ticket for this: INDY-802. This case was additionally verified for node and node work correctly in this case: catch up will fail. - If steward will use valid genesis file for client, CLI will work without any problems.  ></body> </Action>
