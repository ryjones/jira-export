<Action id="58891" issue="34621" author="derashe" type="comment" created="2019-04-03 13:46:24.0" updateauthor="derashe" updated="2019-04-04 11:13:44.0"> <body><! CDATA Taking into account changes, described in PoA of https://jira.hyperledger.org/browse/INDY-1915  ***** - places, where payload digest need to be used  We need to consider txn handling in a few txn states: * not recieved txn ** problem case: client send two txns (*A* and *B*) with same payload_digest but different digest. If we make nodes reject second txn with the same payload digest, that may cause inconsistency (that can happen, because we cannot guarantee which txn will be recieved earlier, so there is a chance, that part of nodes will get txn *A* first, while other nodes will get *B* first. So they could not agree on PrePrepare). Hence, we need to reject it only if it is already ordered (in seq_no_db storage) *****  * finalized txn ** problem, described in previous point, can cause master node to include both of this txns in one batch. To handle this situation, while creating 3pc batch, we must check, that if there is an uncommitted txn with the same payload digest in seq_no_db *OR* in uncommitted txns, we must reject this txn *****. Same kind of check need to be done in processing of PrePrepare * applied txn ** nodes must consistently agree on txns that will be committed and rejected * written txn ** no additional checks needed  Using this solution, two main problems can be resolved: * different nodes cannot consider same txns with different signatures as one, because txn identified by digest, which contains signatures * one txn with modyfied signatures cannot be written to the ledger as a new one, cause we check for payload digest in seq_no_db and uncommitted txns  ></body> </Action>
<Action id="58938" issue="34621" author="derashe" type="comment" body="Note: As far, as we use _serialize_msg_for_signing_ to build digest of request, so messages will be deterministically sorted." created="2019-04-04 07:54:20.0" updateauthor="derashe" updated="2019-04-04 07:54:20.0"/>
<Action id="58968" issue="34621" author="derashe" type="comment" created="2019-04-05 09:01:30.0" updateauthor="derashe" updated="2019-04-12 14:30:58.0"> <body><! CDATA Problem reason/description: - additional validation needed to use txns with multisignature  Changes: - validation added  PR: -  https://github.com/hyperledger/indy-plenum/pull/1150   Version: -  h1. 892 dev  Risk factors: - additional validation may degrade the performance  Risk: - Med  Covered with tests: -  https://github.com/hyperledger/indy-plenum/pull/1150/files#diff-3e2e1565d65a1423b14b30a7c460973e   Recommendations for QA - try to send single request twice with different multisignatures, ensure that only one will be written  ></body> </Action>
<Action id="59048" issue="34621" author="derashe" type="comment" created="2019-04-09 08:06:20.0" updateauthor="derashe" updated="2019-04-09 08:06:20.0"> <body><! CDATA After internal discussion, we've made a decision to operate with request's digests as follows: * static validation ** if payload_digest in seq_no_db and full_digest in seq_no_db => REPLY ** if payload_digest in seq_no_db and full_digest *NOT* in seq_no_db => REQNACK * propagate ** if payload_digest in seq_no_db => do not process it * creation of pre_prepare ** if payload_digest in seq_no_db or payload_digest in uncommitted => ignore it * processing of pre_prepare ** if request not finalized, check by full_digest *** if present => suspicious primary *** if not present => request for it ** if request finalized, do dynamic validation *** if payload_digest in seq_no_db or payload_digest in uncommitted => suspicious primary  ></body> </Action>
<Action id="59129" issue="34621" author="ashcherbakov" type="comment" body="Validation will be continued in the scope of INDY-2046" created="2019-04-11 13:09:00.0" updateauthor="ashcherbakov" updated="2019-04-11 13:09:00.0"/>
