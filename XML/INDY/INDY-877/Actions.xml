<Action id="31221" issue="21037" author="ashcherbakov" type="comment" created="2017-09-28 10:12:27.0" updateauthor="ashcherbakov" updated="2017-09-28 10:12:27.0"> <body><! CDATA  ~nage   ~danielhardman   ~krw910   ~gudkov  We need to choose the option to implement  ></body> </Action>
<Action id="31269" issue="21037" author="danielhardman" type="comment" created="2017-09-29 14:03:03.0" updateauthor="danielhardman" updated="2017-09-29 14:04:07.0"> <body><! CDATA I prefer option 3. However, I don't feel that our thinking is mature enough about versioning to do it. (For example, I think a client version number is not granular enough, because there could be many clients besides our CLI, and some of them may be more advanced in one type of ledger interaction than they are in another. What we probably need, instead, is a version for each transaction type. That way transaction types can each evolve, and a client only needs to be as up-to-date as the txn types it uses.)  If we are prepared to design Option 3 fully, then let's go down that road. It would require a doc that gets reviewed and blessed in a meeting of key architectural stakeholders.  Otherwise, I think Option 1 is the only alternative.  ></body> </Action>
<Action id="31278" issue="21037" author="ashcherbakov" type="comment" created="2017-09-29 15:13:42.0" updateauthor="ashcherbakov" updated="2017-09-29 15:13:42.0"> <body><! CDATA I agree that having a version for each individual transaction is better. But in my opinion the Client version can be considered as not version of a Client, but rather a version of a Node's state (taking into account all transactions and features) that the client supports. Probably due to limited time we may consider this approach too    ></body> </Action>
<Action id="31548" issue="21037" author="ashcherbakov" type="comment" created="2017-10-03 08:07:40.0" updateauthor="ashcherbakov" updated="2017-10-03 08:07:40.0"> <body><! CDATA  ~danielhardman   ~mzk-vct   ~gudkov  After internal discussion with the team, we realized that we need both versions of individual transaction and a version of the protocol. I captured that briefly in https://docs.google.com/document/d/1Y2e_J2sWii2f6V6aS4g8Z6bq0g9Tqr-VMKbJWx86mRI/edit# For the current task just a Short-term solution (version of the protocol) is enough.   ></body> </Action>
<Action id="31670" issue="21037" author="ashcherbakov" type="comment" created="2017-10-06 11:09:16.0" updateauthor="ashcherbakov" updated="2017-10-09 12:28:54.0"> <body><! CDATA - Added 'protocolVersion' field to each Request - if there is no protocolVersion specified, then the pool should still work, and return results without state proofs. - as of now there is only one version supported: 1 (state proof support) - this version needs to supported in indy-sdk  PRs: - https://github.com/hyperledger/indy-plenum/pull/407 - https://github.com/hyperledger/indy-node/pull/379  Build (master): - 1.1.159  Recommendation for QA: - check that old clients (version <1.1.153) still work with latest nodes - check that old clients still work even without state proofs support (version <= 1.1.143) - check that latest client works with latest node  ></body> </Action>
<Action id="33162" issue="21037" author="ozheregelya" type="comment" created="2017-10-25 14:07:14.0" updateauthor="ozheregelya" updated="2017-10-25 14:07:29.0"> <body><! CDATA Following versions compatibility was verified: ||Node version||CLI version|| |1.1.143 (master)|1.1.37 (stable)| |1.1.160 (master)|1.1.37 (stable)| |1.2.182 (master)|1.2.182 (master)|  ></body> </Action>
