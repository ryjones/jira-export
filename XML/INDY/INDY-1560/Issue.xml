<Issue id="32643" key="INDY-1560" number="1560" project="10303" reporter="ckochenower" assignee="ckochenower" creator="ckochenower" type="10002" summary="Chaos Experiment - View change subversion - Increase/Decrease Replica Count" priority="2" resolution="10000" status="10001" created="2018-08-07 15:37:35.0" updated="2019-03-29 20:32:45.0" resolutiondate="2019-03-29 20:32:45.0" votes="0" watches="1" workflowId="43868"> <description><! CDATA Demote/Promote a sufficient number of nodes to cause the number of replicas to decrease/increase by 1.  # Start a 10 validator node pool with the following Primary and Replica configuration: f = f_value n = Replica_count  (f = 3, n = 4) Node1:0 - Primary Node2:1 - Next in line for primary (backup if node 1 goes down or a view change is requested) Node3:2 - Backup to Node2 Node4:3 - Backup to Node3 # Reduce n by 1 Reducing validator node count by 1 (9 validator nodes) results in f = 2 and n = 3. Variants to consider: ## Demote the primary Expected result: Triggers a view change (f = 2, n = 3) Node2:0 - Primary Node3:1 - Next in line for primary (backup if node 1 goes down or a view change is requested) Node4:2 - Backup to Node3 ## Demote a replica Replica selection variants to consider. Replicas are  Node2, Node3, Node4 : ### forward - Node2 ### reverse - Node4 ### random - any(Node2 - Node4) Expected result: (f = 2, n = 3) #### Forward Node1:0 - Primary Node3:1 - Next in line for primary (backup if node 1 goes down or a view change is requested) Node4:2 - Backup to Node2 #### Reverse Node1:0 - Primary Node2:1 - Next in line for primary (backup if node 1 goes down or a view change is requested) Node3:2 - Backup to Node2 #### Random (lets assume Node3) Node1:0 - Primary Node2:1 - Next in line for primary (backup if node 1 goes down or a view change is requested) Node4:2 - Backup to Node2 ## Demote a node that is not the primary and not a replica (f = 2, n = 3) Node1:0 - Primary Node2:1 - Next in line for primary (backup if node 1 goes down or a view change is requested) Node3:2 - Backup to Node2 # Increase n by 1 - Add/Promote enough nodes to increase n by 1. Three options for setting up for this experiment. ## Option 1: steady state = A nym can be written AND there are at least x demoted nodes where x is the number of nodes needed to move n to n + 1. ## Option 2: Use the "Decrease n by 1" experiment as setup for the "Increase n by 1" experiment. Modify the "Decrease n by 1" rollbacks that promote nodes demoted during the experiment so they take an optional parameter that tells them to skip the rollback. Doing so allows a "Increase n by 1" experiment to run immediately after execution of "Decrease n by 1" ## Option 3: The method of the experiment demotes x nodes to reduce n by 1, waits up to a timeout for n to reduce by 1. Once n is reduced by 1, the method immediately promotes x nodes and waits up to a timeout for n to increase by 1.   ></description> </Issue>
