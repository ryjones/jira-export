<Action id="66555" issue="43805" author="ashcherbakov" type="comment" created="2020-01-09 16:06:34.0" updateauthor="ashcherbakov" updated="2020-01-16 14:15:52.0"> <body><! CDATA PoA:  Phase 1: * Write integration tests * Change the logic of how and when we calculate N and F ** Send `MasterReorderedAfterVC` after the first batch in a new view is orderded ** Move the logic to change N and F and adjust replicas to `MasterReorderedAfterVC` processing  *** Reset monitor at this point as well  ** Select master primary only at the start of view change; backup primaries will be set when re-ordering phase is finished  ** Update `data.primaries` after re-ordering is finished and calculate primaries for backups  ** Introduce active node reg as the node reg at the beginning of the current view  ** Create Primaries Batch Handlers to be set for audit  ** Do a view change if selected master primary turned out to be demoted after re-ordering is finished  ** Recover N, F, number of replicas and primaries correctly after catchup using `primaries` and `node_reg_at_beginning_of_view current_view `  ** Stash (with a new stash code) all 3PC messages with ppSeqNo > prep_cert +1 until last_ordered <= prep_cert+1, so that we don't order anything in a new view with not yet updated N and F. Unstash these messages once N and F are updated in `MasterReorderedAfterVC`  **  Optional  Introduce a timeout for the first batch after re-ordering so that malicious primary in a new view really starts ordering **  Optional  Do not do view change in view change service for backup instances as they don't do real view change (exchange ViewChange messages), and backups start ordering after master finished re-ordering only.  * Update docs  Phase 2: * Re-factor to move the code related to view change triggering on nodes count change to a node-independent place (NodeRegHandler for example) to be able to run it in simulation tests ** This can be done in the scope of INDY-2324  ></body> </Action>
<Action id="66716" issue="43805" author="ashcherbakov" type="comment" created="2020-01-16 14:11:49.0" updateauthor="ashcherbakov" updated="2020-01-17 11:43:45.0"> <body><! CDATA  Link to slides|https://docs.google.com/presentation/d/1l7_D3iActhLBMwzoFAH3xWUEGmlH-2PRaLKrNH2_KKg/edit#slide=id.g76776eb639_0_98   *PR* - https://github.com/hyperledger/indy-plenum/pull/1456  *Issue* - Issue 1: A lagging node may be the only one who started view change in case of F Nodes added/promoted in 1 batch - Issue 2: A lagging node may use wrong N and F quorum values and never finish view change if there are NODE txns being processed  *Issue Reason* - N and F are re-calculated right after a Node committed NODE txn changing F. - As Commit is not synchronous operation, itâ€™s not guaranteed that all nodes will have the same N and F values during view change -- Not equal quorums for INSTANCE_CHANGE  -- Not enough votes in VIEW_CHANGE and NEW_VIEW messages -- Different number of replicas and primaries on replicas (as it depends on N and node registry) including primaries in audit ledger  *Fix* - Do not change N and F right after NODE txn is committed. - Change it at the end of the View Change instead (which is triggered every time number of nodes is changed) - Calculate Primaries for backups at the end of the View Change only - End of view change = when the first txn in a new view is committed (so that Primaries are written to the audit ledger correctly for catch-up) - N, F and backup Primaries are calculated against the node registry as it was at the beginning of (new) view  - Do not allow processing of 3PC messages in a view until the first txn in the view is committed  *Implementation* - Fixes in NodeRegHandler (added active_node_reg) - Fixes in PrimarySelector (correct backup primary selector) - Added PrimaryBatchHandler (correctly update primaries in audit ledger) - Fixes in Node (adjust N, F and select Backup Primaries when view change is finished or after catch-up) - Fixes in OrderingService and OrderingServiceMsgValidator (do not order in a view until the first batch is committed) - Fixes in ViewChangeService (do not select backup primaries at the beginning of view change)  *Tests* - test_node_reg_handler.py - test_round_robin_node_reg_primary_selector.py - test_add_node_delay_commit_on_one.py - test_order_after_demote_and_restart - test_view_change_while_adding_new_node_1_slow_commit.py - test_view_change_while_adding_new_node_1_slow_preprepare.py - test_view_change_while_adding_new_node_2_slow_commit.py - Other tests related to add/promote/demote of nodes  *Build* TBD  *Risk* - Medium  *Recommendation for QA:* - Make sure all system tests pass - Run load tests -- restart nodes;  -- demote/promote nodes - Write more tests related to demotion/promotion/adding new nodes if needed   ></body> </Action>
<Action id="66736" issue="43805" author="ashcherbakov" type="comment" body="Validation will be done in the scope of INDY-2326" created="2020-01-17 13:10:22.0" updateauthor="ashcherbakov" updated="2020-01-17 13:11:08.0"/>
