<Action id="61984" issue="41297" author="esplinr" type="comment" created="2019-07-19 14:42:39.0" updateauthor="esplinr" updated="2019-07-19 14:42:39.0"> <body><! CDATA The use case originally considered in this bug is being addressed in INDY-2171.  However, this bug identifies two problems with the implementation of auth_rules: * The documentation should be clear that the number of signatures specified in auth_rules is the number of DID based signatures and does not consider signatures used by ledger plugins (such as payment signatures). * auth_rules that specify that domain transactions with less than 1 signature should be rejected as invalid (this wouldn't apply to transaction types added by plugins) ** They would circumvent any ledger author agreements ** They could allow people to anchor transactions attributed to DIDs that they do not control  ></body> </Action>
<Action id="61985" issue="41297" author="esplinr" type="comment" body="We will improve the documentation, but we won&apos;t be changing auth_rules to require always at least 1 signature. This will complicate dealing with transactions types added by ledger plugins (such as payment plugins). This would also prevent future potential use cases that might be useful for developers. See the note in INDY-2171. We&apos;ll accept the current behavior as adequate and will reconsider if we have feedback that it should be changed." created="2019-07-19 14:44:50.0" updateauthor="esplinr" updated="2019-07-19 14:49:45.0"/>
<Action id="61986" issue="41297" author="esplinr" type="comment" body="We will close this bug as &quot;deferred&quot;. We addressed the key use case in INDY-2171, but this use case of not requiring any signature is one we don&apos;t think we should do at this time. Even though rules that allow a zero signatures will not work in practice, we believe that it will be rare for people to try to do that once we address INDY-2171." created="2019-07-19 14:46:27.0" updateauthor="esplinr" updated="2019-07-19 14:48:31.0"/>
