<Issue id="17380" key="INDY-141" number="141" project="10303" reporter="devin-fisher" assignee="sergey.khoroshavin" creator="devin-fisher" type="10004" summary="Plenum fails to start with a blank line in pool_transactions file" priority="3" resolution="10000" status="10001" created="2017-06-01 20:53:42.0" updated="2019-10-29 14:36:28.0" resolutiondate="2019-10-29 14:36:28.0" votes="0" watches="2" workflowId="17384"> <description><! CDATA Steps to reproduce: # Add a blank line (with extra white space). Can't just be \n. It must be a new line with some other whitespace character (space, tab, etc). # Start node  Error message is super helpful:    {code:java} _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  ../server/node.py:163: in __init__ self.initPoolManager(nodeRegistry, ha, cliname, cliha) ../server/node.py:374: in initPoolManager HasPoolManager.__init__(self, nodeRegistry, ha, cliname, cliha) ../server/pool_manager.py:54: in __init__ cliha=cliha) ../server/pool_manager.py:72: in __init__ self.initPoolState() ../server/pool_manager.py:99: in initPoolState self.node.initStateFromLedger(self.state, self.ledger, self.reqHandler) ../server/node.py:1997: in initStateFromLedger txns =  _ for _ in ledger.getAllTxn().values()  ../../../ledger/ledger/ledger.py:230: in getAllTxn result seqNo  = self.leafSerializer.deserialize(txn) ../../../ledger/ledger/serializers/json_serializer.py:75: in deserialize return self.loads(data) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   data = ' '  @staticmethod def loads(data): if isinstance(data, (bytes, bytearray)): data = data.decode() > return json.loads(data) E ValueError: Expected object or value  ../../../ledger/ledger/serializers/json_serializer.py:65: ValueError {code}    I've attached a unit test - test_empty_line - just in case it don't get merged into code     ></description> </Issue>
