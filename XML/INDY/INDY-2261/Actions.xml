<Action id="64999" issue="42960" author="ashcherbakov" type="comment" created="2019-10-25 15:33:33.0" updateauthor="ashcherbakov" updated="2019-10-28 10:20:21.0"> <body><! CDATA *PoA* * Check if we really need manual reconnections in ZStack. Maybe ZMQ can handle reconnections by its own? ** Use separate Contexts in Integration tests (see https://github.com/hyperledger/indy-plenum/pull/1387) ** Try to run system tests not reconnecting sockets (see RETRY_SOCKET_RECONNECT flags in https://github.com/hyperledger/indy-plenum/pull/1387) ** Try to run system tests not send ping/pongs (see RETRY_CONNECT flags in https://github.com/hyperledger/indy-plenum/pull/1387) ** Create a new system ZMQ tests (not related to Plenum) with client and server in different processes and check if we have any issues with disconections there  ></body> </Action>
<Action id="65352" issue="42960" author="donqui" type="comment" created="2019-11-07 16:01:55.0" updateauthor="donqui" updated="2019-11-07 16:02:24.0"> <body><! CDATA Curve Auth causes not issues Linger options cause no issues Keep Alive options cause no issues All other socket options are also ok  The problem seems to be caused by the monitoring sockets, this method specifically: {code:java}    @staticmethod    def _get_monitor_events(socket, non_block=True):        # It looks strange to call get_monitor_socket() each time we        # want to get it instead of get it once and save reference.        # May side effects here, will create a ticket to check and clean        # up the implementation.        return           monitor = socket.get_monitor_socket() {code} when it is short circuited (notice the return    as the first statement) ZMQ level re-connects work fine, if the  {code:java} monitor = socket.get_monitor_socket() {code} line is called and return is after that, ZMQ level re-connection does not work.  Next steps are to investigate why this is causing the issue, and see what our possible alternatives could be.  ></body> </Action>
<Action id="65374" issue="42960" author="donqui" type="comment" created="2019-11-08 11:29:25.0" updateauthor="donqui" updated="2019-11-08 16:36:31.0"> <body><! CDATA Test conducted with test scripts shows that when monitor socket is created and connectivity is lost, after some time the zmq re-connection stops working.  Test scripts can be found here: https://github.com/donqui/zmq-sandbox  In case of plenum/node when ping-pong and socket recreation are disabled, and the connection to one remote is lost for a period of time longer than ~120seconds the entire zmq stack crashes in a way, and node becomes unresponsive.  ></body> </Action>
<Action id="65377" issue="42960" author="donqui" type="comment" created="2019-11-08 11:54:21.0" updateauthor="donqui" updated="2019-11-08 11:54:21.0"> <body><! CDATA While investigating I opened an issue on the PYZMQ side to see if they have see this behavior before, and if there are known solutions: https://github.com/zeromq/pyzmq/issues/1340  ></body> </Action>
<Action id="65417" issue="42960" author="ashcherbakov" type="comment" body="Conclusion: it&apos;s possible to get rid of manual reconnection logic. This will be done in the scope of INDY-2289." created="2019-11-11 06:50:33.0" updateauthor="ashcherbakov" updated="2019-11-11 06:50:33.0"/>
