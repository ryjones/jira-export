<Action id="38420" issue="25714" author="vladimirwork" type="comment" body=" !INDY-1029.PNG|thumbnail!  ^1and2.7z    ^3and4.7z    ^5and6.7z  " created="2018-01-11 09:24:08.0" updateauthor="vladimirwork" updated="2018-01-11 09:24:08.0"/>
<Action id="38441" issue="25714" author="vladimirwork" type="comment" body="This issue is not reproducing in 1.2.265 master. !Node1.PNG|thumbnail!  !Node5.PNG|thumbnail!  !Node6.PNG|thumbnail! " created="2018-01-11 15:16:02.0" updateauthor="vladimirwork" updated="2018-01-11 15:16:02.0"/>
<Action id="38740" issue="25714" author="anikitindsr" type="comment" created="2018-01-17 08:55:17.0" updateauthor="anikitindsr" updated="2018-01-17 08:55:17.0"> <body><! CDATA Problem reason:  - One of added nodes doesn't catch up on pool with big number of transactions  Changes:  - Change timeout logic evaluating for resending CATCHUP_REQ messages if there is no qourum for CATCHUP_REP  PR: - https://github.com/hyperledger/indy-plenum/pull/499   Version: - master  Risk factors: - frequently resending for very huge domain ledger  Risk: - Low  Recommendations for QA * Install pool of 4 nodes. * Run load tests to fill ledger with ~20000 txns. * Add the 5th node. * Send NYM txn. * Add the 6th node. * Send NYM.  ></body> </Action>
<Action id="38753" issue="25714" author="vladimirwork" type="comment" created="2018-01-17 16:06:28.0" updateauthor="vladimirwork" updated="2018-01-17 16:06:28.0"> <body><! CDATA Build Info: indy-node 1.2.273  Steps to Reproduce: 1. Install pool of 4 nodes. 2. Run load tests to fill ledger with ~80000 txns. 3. Add the 5th node. 4. Send NYM txn. 5. Add the 6th node.  Actual Results: Node 5 catches up and reaches consensus. Node 6 doesn't catch up.  ^Node1.log    ^Node2.log    ^Node3.log    ^Node4.log    ^Node5.log    ></body> </Action>
<Action id="38840" issue="25714" author="vladimirwork" type="comment" created="2018-01-18 13:37:18.0" updateauthor="vladimirwork" updated="2018-01-18 13:37:18.0"> <body><! CDATA Build Info: indy-node 1.2.275  Steps to Reproduce: 1. Install pool of 4 nodes. 2. Run load tests to fill ledger with ~80000 txns. 3. Add the 5th node. 4. Send NYM txn. 5. Add the 6th node. 6. Send NYM.  Actual Results: Both nodes catch up and reach consensus successfully.  ></body> </Action>
