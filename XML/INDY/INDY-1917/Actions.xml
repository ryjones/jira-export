<Action id="56697" issue="36229" author="derashe" type="comment" created="2019-02-05 16:57:57.0" updateauthor="derashe" updated="2019-02-06 11:46:53.0"> <body><! CDATA In case 1, we send txn with 7-th node and that caused new replica to appear. But because load on pool was not high, this replica did not get high throughtput values. And when throughtput comparision activated, it just deleted new replica. Deletion was unequeal because of little bug in code.  In case 2, we needed to restart node after demotion. That would probably let us aviod anomaly.  PR:  https://github.com/hyperledger/indy-plenum/pull/1076   ></body> </Action>
<Action id="56749" issue="36229" author="derashe" type="comment" body="h4.  Indy Node 1.6.799 |https://github.com/hyperledger/indy-node/releases/tag/1.6.799-master  contains this fix" created="2019-02-07 14:52:17.0" updateauthor="derashe" updated="2019-02-11 09:53:53.0"/>
<Action id="56859" issue="36229" author="vladimirwork" type="comment" created="2019-02-11 15:26:57.0" updateauthor="vladimirwork" updated="2019-02-11 15:27:12.0"> <body><! CDATA Build Info: indy-node 1.6.800  Steps to Valdiate: 1. Setup pool of 4 nodes. 2. Initialize 3 more nodes. 3. Start 5 and 6 nodes. 4. Add 5 - 7 nodes (node7 is stopped). 5. Wait for some time and check replicas at all nodes. 6. Start Node7. 7. Wait for some time and check replicas at all nodes. 8. Demote Node7. 9. Promote Node7 back *and restart service*. 10. Wait for some time and check replicas at all nodes.  Actual Results: All nodes have the same primaries for each instance during test. !INDY-1917_case1.PNG|thumbnail!  !INDY-1917_case2.PNG|thumbnail!   ></body> </Action>
