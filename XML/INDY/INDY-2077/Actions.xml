<Action id="59964" issue="39487" author="ashcherbakov" type="comment" body="Partially done in https://github.com/hyperledger/indy-node/pull/1279" created="2019-05-13 16:50:38.0" updateauthor="ashcherbakov" updated="2019-05-13 16:50:38.0"/>
<Action id="60336" issue="39487" author="toktar" type="comment" created="2019-05-24 08:53:12.0" updateauthor="toktar" updated="2019-05-24 08:59:40.0"> <body><! CDATA *PoA:* At the moment there are constraints of the type Role, And, Or. It is necessary to add the Forbidden constraint to indicate the unavailability of the execution of any action. The validator for Forbidden will immediately return an error with the Forbidden constraint translated into a string. Forbidden constraint structure: {code:java} {"constraint_id": 'FORBIDDEN'} {code} It is recommended to use this type of constraint as an independent. When used in the expression of many constraints, perceived as a logical 0.  Tests: * add unit tests to  test_auth_constraint.py|https://github.com/hyperledger/indy-node/pull/1296/files#diff-e5646c7dd3f8a2b580b869a1a66db99c   * test_get_one_disabled_auth_rule_transaction     PR:   https://github.com/hyperledger/indy-node/pull/1296   ></body> </Action>
<Action id="60684" issue="39487" author="ashcherbakov" type="comment" created="2019-06-05 11:49:01.0" updateauthor="ashcherbakov" updated="2019-06-05 11:49:01.0"> <body><! CDATA Please create the following system test: - send AUTH_RULE to Forbid creation of new Trustees - try to create a Trustee - make sure that it's not possible anymore  ></body> </Action>
<Action id="60694" issue="39487" author="toktar" type="comment" created="2019-06-05 12:48:12.0" updateauthor="toktar" updated="2019-06-05 12:48:12.0"> <body><! CDATA Problem reason: * There is no constraint for the forbidden some action.  Changes: * Add command FORBIDDEN constraint * Add key for auth_map for editing schema with a forbidden constraint. * Add tests  PR: *  https://github.com/hyperledger/indy-node/pull/1296   Version: * indy-node 1.9.0~dev987 master  Risk factors: * AUTH_RULE, AUTH_RULES and GET_AUTH_RULES with forbidden constraint.  Risk: * Low  Covered with tests: * test_plugin_complex_with_or_rule_with_not_allowed *  test_auth_constraint.py|https://github.com/hyperledger/indy-node/pull/1296/files#diff-e5646c7dd3f8a2b580b869a1a66db99c    Recommendations for QA: Test sending AUTH_RULE with forbidden constraint and get it with GET_AUTH_RULE request via sdk functions.  ></body> </Action>
<Action id="60749" issue="39487" author="andkononykhin" type="comment" created="2019-06-07 10:24:48.0" updateauthor="andkononykhin" updated="2019-06-07 10:31:16.0"> <body><! CDATA Implemented new  system test with the following scenario: # start new docker pool # using trustee1 did send add trustee nym - should pass # using trustee1 did set forbidden constraint for that nym operation - should pass # using trustee1 did get auth rule for that operation - should reply with forbidden constraint # using trustee1 try to add one more new trustee - should be rejected  Run the scenario on pool using the following versions of artifacts: * client: ** libindy 1.9.0~1122 and python wrapper version 1.9.0-dev-1122 * pool: ** indy-node 1.9.0~dev987 ** indy-plenum 1.9.0~dev808  Test passed.  For now  the test|https://github.com/hyperledger/indy-test-automation/blob/95cae6e6b02441c7d742425d075be64e5f70bf67/system/draft/TestAuthMapSuite.py#L1029  is a part of  the pull request|https://github.com/hyperledger/indy-test-automation/pull/25  to indy-test-automation repository.  ></body> </Action>
