<Action id="45239" issue="30526" author="zhigunenko.dsr" type="comment" created="2018-05-29 13:53:31.0" updateauthor="zhigunenko.dsr" updated="2018-05-30 07:41:27.0"> <body><! CDATA Current algorithm does not take into account the probability of a certain type of transaction.  *Option A:* After creating all transaction types {code:java} async def gen_random(self): reqs =  self.gen_attrib, self.gen_nym, self.gen_schema  idx = random.randint(0, 1000) % len(reqs) return await reqs idx () {code} this function should be replaced by code like this {code:java} import random  probabilities_w = {'writing credentials schema': 5, 'writing credential definition': 5, 'revoke registry definition': 5, 'revoke registry update': 5, 'write DID to ledger': 20, 'write payment to ledger': 45, 'write attrib to ledger': 15}  probabilities_r = {'read DID from ledger': 45, 'read credential schema': 10, 'read credential definition': 10, 'read revoke registry definition': 10, 'read revoke registry delta': 10, 'read attrib from ledger': 10, 'read payment balance from ledger': 5}   def get_action(action_probabilities): total = 0 for key, value in action_probabilities.items(): total += value choice = random.randint(1, total)  for key, value in action_probabilities.items(): if value >= choice: return key else: choice -= value {code}  For example, reqs array has filling once during script initialization relying on the dict content (each transaction type repeated in array appropriate number of times)  *Option B:*  modify -k parameter parser to set certain quantity of each transactions type (args file would save all parameters of corresponding run)  *Remark from Dmitry S:* it's better to move request generator into separate class  ></body> </Action>
<Action id="46427" issue="30526" author="dsurnin" type="comment" created="2018-06-22 09:16:16.0" updateauthor="dsurnin" updated="2018-06-22 09:16:16.0"> <body><! CDATA mixed mode implemented with a help of -k parameter - now it can accept complex test description in form of JSON.  For detailed description please check the https://github.com/hyperledger/indy-node/blob/master/docs/process-based-load-script.md  ></body> </Action>
<Action id="46430" issue="30526" author="ozheregelya" type="comment" created="2018-06-22 10:51:27.0" updateauthor="ozheregelya" updated="2018-06-22 10:51:27.0"> <body><! CDATA Command for writing: {code:java} python3.5 perf_processes.py -n 1 -t 1 -c 1 -r 1 -g ./pool_transactions_genesis -k " {\"schema\":{\"count\": 5}}, {\"cred_def\":{\"count\": 5}}, {\"revoc_reg_def\":{\"count\": 5}}, {\"revoc_reg_entry\":{\"count\": 5}}, {\"nym\":{\"count\": 20}}, {\"attrib\":{\"count\": 15}} "{code} Command for reading: {code:java} python3.5 perf_processes.py -n 1 -t 1 -c 1 -r 1 -g ./pool_transactions_genesis -k " {\"get_nym\": {\"count\": 45, \"file_name\": \"get_nym.source\"}}, {\"get_schema\": {\"count\": 10, \"file_name\": \"get_schema.source\"}}, {\"get_cred_def\": {\"count\": 10, \"file_name\": \"get_cred_def.source\"}}, {\"get_revoc_reg_delta\": {\"count\": 10, \"file_name\": \"get_revoc_reg.source\"}}, {\"get_attrib\": {\"count\": 10, \"file_name\": \"get_attrib.source\"}} "{code}  ></body> </Action>
