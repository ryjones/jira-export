<Action id="60549" issue="35450" author="anikitindsr" type="comment" created="2019-05-31 08:45:00.0" updateauthor="anikitindsr" updated="2019-05-31 08:45:00.0"> <body><! CDATA h2. PoA h3. What we need to do  We need to make bootstrap process more clearnly and predicable. As of now, we have a couple of strongly constrained things. For example, PoolManager need to be initiated before bls_bft, but PoolManager requires a PoolReqHandler, which requires write_req_validator, which requires config_state... More clearnly schema is: * init request managers * init storages, ledgers and states * init write_request_validator (which is used on indy-node side for AUTH_RULE validation) * init request handlers * init batch handlers * restore states from corresponded ledgers if needed  For now, there is a couple of problems related to strongly integrated order of initialization.  The most appropriated approach for this is a "Factory" schema. We can init all stuffs firstly and setup all other things them.  ></body> </Action>
<Action id="60746" issue="35450" author="anikitindsr" type="comment" created="2019-06-07 10:00:27.0" updateauthor="anikitindsr" updated="2019-06-07 10:00:27.0"> <body><! CDATA Reason: * Need to create bootstraping procedure for pluggable request handlers  Changes: * Created methods for initiating storages and registering handlers.  PRs: * indy-plenum:  https://github.com/hyperledger/indy-plenum/pull/1222  * indy-node:  https://github.com/hyperledger/indy-node/pull/1332   Â   ></body> </Action>
