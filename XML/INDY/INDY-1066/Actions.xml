<Action id="37701" issue="25749" author="ashcherbakov" type="comment" created="2017-12-21 09:01:11.0" updateauthor="ashcherbakov" updated="2017-12-21 09:23:08.0"> <body><! CDATA There are multiple ways on how we can fix it. The main problem is that any minor change in txns structure is non trivial because we need to be backward-compatible, and don't have versioning support for txns yet.   *Option1* - Do not change field names on the ledger, but just transform them into the same case (snake or camel) when returning Reply to client. - The new clients (expecting the same case) will send requests with protocolVersion=2 (new one). We already have this protocol version support. This guarantees backward-compatibility for old clients (they will get replies as it's now) while new clients can get replies in the same case. - Support consistent field names in libindy  This option doesn't require any versioning in transaction (which we don't have now), but doesn't solve the inconsistency problem on ledger level.  *Option 2* - Support 'version' field in txns (version=0 if it's absent) - support consistent field names and increment the version. - support old clients (with inconsistent fields) as described in Option1.  So, this Option is next step of Option1 introducing versioning in ledger. It requires more work.  ></body> </Action>
<Action id="39539" issue="25749" author="ashcherbakov" type="comment" body="This is will be done as part of INDY-1108." created="2018-02-01 18:24:17.0" updateauthor="ashcherbakov" updated="2018-02-01 18:24:17.0"/>
