<Action id="49712" issue="28931" author="toktar" type="comment" created="2018-08-31 15:15:09.0" updateauthor="toktar" updated="2018-09-04 07:49:07.0"> <body><! CDATA We have a problem with backup instances thouse primaries are stopped. In this case primary nodes: * replicas stashing messages and can't use it and dynamicly free memory * replicas store all new requests and other replicas can't remove already oredered messages.  Ways to solve problems: *1) Remove stopped replicas* +What's bad?+  We will have less then f+1 replicas and it's going against with the RBFT. +Why can we do it?+  In RBFT we need in f+1 instances because if f primary (backup and master) nodes will malicious, one node will correct and pool will do view changes until the correct node becomes the primary. If primary on backup malicious, the whole backup instance malicious and we don't need in this throughput metrics. And we can remove it. +Not forget.+ If we incorrect identify backup primary as malicious more then f+1 replicas can be remove in instance and we kill not malicious instance.  *2) Exclude a sleeping node from consensus for removing requests.* (excluding options 1) +What's bad?+  A sleeping replica can't free memory with data that can't use. +Why +can+ we do it?+  It's faster to implementation then the previouse option and has a smaller risks.  +Not forget.+ If we incorrect identify backup primary as malicious, replicas will lost necessary requests. More then f+1 replicas and the whole backup instance will malicious. *3) Choose other primary if it disconnected.* +What's bad?+  A very big risk. For implementation this option we need to change VIEW_CHANGE_DONE format. Should be use with other option because not solve problems but do it less likely. +Not forget.+ In this option we need to add list with all primary nodes in ViewChangeDone and wait consensus of a list with primaries. In theory, we may never have a quorum and never finish view change.  ></body> </Action>
<Action id="49900" issue="28931" author="toktar" type="comment" created="2018-09-05 14:49:11.0" updateauthor="toktar" updated="2018-09-05 14:55:35.0"> <body><! CDATA In this situation, it was decided to remove the replicas when its primary node malicious. 1) Firstly, we will add the ability to remove the replica without changing f with the check it is possible to clean the queue with requests (we should verify that nothing will be broken after switch off replicas, especially the monitor) INDY-1680 2) Secondly, will add a switching off a replica that stopped because disconnected from a backup primary a long time.  INDY-1681 3) Thirdly, will implement a new strategy which will check for performance degradation (the same way as master does) in addition to disconnections INDY-1682 4) Finaly, will implement a new strategy for removing replica with quorum of instance changes (and not just a local check as in task 3) INDY-1683 5) (Additional) After task will 2 add a view change (send INSTANCE CHANGE) when f / 2 (for example) replicas are switched off. INDY-1685  ></body> </Action>
