<Action id="61902" issue="40584" author="derashe" type="comment" created="2019-07-17 11:21:22.0" updateauthor="derashe" updated="2019-07-17 14:01:02.0"> <body><! CDATA PoA:  1st option: Check that throttler block second instance change. If this can be fixed, avoid 2nd option.  2nd option: * We need to reproduce issue in test environment. Using details mentioned in INDY-2133, we can write such a test: ** Pool of 7 nodes. f = 2. VCH_D quorum = 5. I_CH quorum = 5. ** 2 nodes are ofline ** view_change initiated ** 4 nodes send I_CH, fifth send I_CH also, but it fails to deliver ** fifth node collect quorum for I_CH and send VCH_D. ** other nodes can't collect quorum and start new view * Check that above tests fails * Implement fix - make a node, which has view_change in progress periodically send I_CH again for this "in progress view" * Set appropriate timeout for new feature in the test and recheck it. After this timeout new I_CH should be sent and new view successfully achieved  ></body> </Action>
<Action id="61975" issue="40584" author="derashe" type="comment" created="2019-07-19 12:14:30.0" updateauthor="derashe" updated="2019-07-19 12:20:33.0"> <body><! CDATA Problem reason/description: - Pool can stuck in a troubled situation. It can happen when pool is in progress of unsuccessfull view change and has some view (1 for example) and it is trying to send INSTANCE_CHANGE for the next view (2). But some nodes didn't send I_CH or I_CH was lost. Previous logic assumed only resending I_CH for current view i.e. 1 view.  Changes:  - So, after view_change started, new event scheduled. This event checks if view_change is incomplete, than it send I_CH for new view again. INSTANCE_CHANGE_RESEND_TIMEOUT stands for periods of sending  PR: -  https://github.com/hyperledger/indy-plenum/pull/1270   Version: - plenum 847  Covered with tests: -  https://github.com/hyperledger/indy-plenum/pull/1270/files#diff-5eafcbdb347b4bddaa43cea30bd7120f   Recommendations for QA * Please, be aware of situations that can appear in scope of this problem. You can look at it in the test ahead      ></body> </Action>
