<Action id="31246" issue="21038" author="ashcherbakov" type="comment" created="2017-09-28 18:19:39.0" updateauthor="ashcherbakov" updated="2017-09-28 18:19:39.0"> <body><! CDATA  ~nage   ~danielhardman   ~sergey-shilov  A design doc: https://docs.google.com/document/d/1-TV3BxeAznpXKg8wFTmF4DxUHpdnqRjX_KQVUFWhSFY/edit#heading=h.27zfbdnncpnx  ></body> </Action>
<Action id="35912" issue="21038" author="sergey-shilov" type="comment" created="2017-12-06 10:01:59.0" updateauthor="sergey-shilov" updated="2017-12-06 10:01:59.0"> <body><! CDATA The main changes done in scope of this ticket are related to config usage. The main ideas were: - to minimise getConfig() calls; - to minimise the count of code places where full paths are built; - to introduce some config structure to reflect file/folder re-factoring.  The main point of changes is the introducing of ConfigHelper classes hierarchy. These classes implement building of full paths for node placement in the file system. All paths for node placement should be retrieved using instances of ConfigHelper classes.  As file/folder placement is systems-dependent we decided to figure out paths config as a separate file. This file is merged with general config, which now contains only network name and will contain other user-editable parameter of node. This merge is done during build procedure, so that all build procedure and thus installation procedure for Ubuntu OS should be tested. Such separation of system-dependent things will help us in multi-platform support in the future.  Introducing of ConfigHelper and separation of configs led to huge re-factoring of test fixtures and tests themselves of Indy-Node and Indy-Plenum, Now the placement of nodes and clients in the file system during tests is the same as it is done on real system. The only difference is changed root. Such approach allows to control and debug the nodes/clients placement in the file system on the tests stage.  Also many scripts are changed according to ConfigHelper usage.  So the most careful attention during testing should be paid to: - build and installation procedures; - all scripts that are used by system administrators to control/modify/support Indy node.   ></body> </Action>
<Action id="35982" issue="21038" author="vladimirwork" type="comment" body="There is an issue with node initialization, waitng for new sovrin build." created="2017-12-07 11:22:14.0" updateauthor="vladimirwork" updated="2017-12-07 11:22:14.0"/>
<Action id="35988" issue="21038" author="ozheregelya" type="comment" created="2017-12-07 14:17:44.0" updateauthor="ozheregelya" updated="2017-12-11 21:27:42.0"> <body><! CDATA Things to be tested:  Node: {color:#14892c}– manual installation  !https://jira.hyperledger.org/images/icons/emoticons/check.png|width=16,height=16!{color} {color:#14892c}– docker installation{color} (/) – vagrant installation {color:#14892c}– manual upgrade -  !https://jira.hyperledger.org/images/icons/emoticons/check.png|width=16,height=16! - case 1 fixed{color} {color:#14892c} – POOL_UPGRADE {color} {color:#14892c} – – force=True -  !https://jira.hyperledger.org/images/icons/emoticons/check.png|width=16,height=16!  - case 1 fixed{color} {color:#14892c} – – force=False -  !https://jira.hyperledger.org/images/icons/emoticons/check.png|width=16,height=16!  - case 1 fixed{color}  Node initialization (+adding node to the pool)  – init_indy_node – init_bls_keys – generate_indy_pool_transactions Network setup – create network – change network  Indy scripts – pool_start.sh – pool_stop.sh – read_ledger – generate_indy_pool_transactions – init_bls_keys – init_indy_keys – init_indy_node – clear_node.py – reset_client -- validator-info – performance scripts  {color:#14892c}Client:{color} {color:#14892c} Clear installation {color} {color:#14892c} – manual installation (/){color} {color:#14892c} – docker installation (client_for_pool_start.sh) (/){color} {color:#14892c} Upgrade {color} {color:#14892c} – upgrade using apt-get install (/){color}  Configs: – overlapping of parameters The main config is /etc/indy/indy_config.py Values from /etc/indy/indy_config.py may be overrided in /etc/indy/network_name/indy_config.py Values from both of previous configs may be overrided in /home/indy/.indy/network_name/indy_config.py  ></body> </Action>
<Action id="35997" issue="21038" author="ozheregelya" type="comment" created="2017-12-07 16:59:14.0" updateauthor="ozheregelya" updated="2017-12-07 16:59:14.0"> <body><! CDATA *Case 1:* Pool upgrade and manual upgrade don't work. *Steps to Reproduce:* 1. Set up the pool with following versions: {noformat} root@05b9cd614d2d:/home/indy# dpkg -l | grep indy ii indy-anoncreds 1.0.32 amd64 Anonymous credentials ii indy-node 1.2.223 amd64 Indy node ii indy-plenum 1.2.180 amd64 Plenum Byzantine Fault Tolerant Protocol ii libindy-crypto 0.1.6-10 amd64 This is the shared crypto libirary for Hyperledger Indy components. ii python3-indy-crypto 0.1.6 amd64 This is the official wrapper for Hyperledger Indy Crypto library (https://www.hyperledger.org/projects). root@05b9cd614d2d:/home/indy# dpkg -l | grep sovrin ii sovrin 1.1.39 amd64 Sovrin node{noformat} 2. Open CLI and connect to the pool. 3. Send POOL_UPGRADE command: {noformat} send POOL_UPGRADE name=upgrade12227 version=1.2.227 sha256=f6f2ea8f45d8a057c9566a33f99474da2e5c6a6604d736121650e2730c6fb0a3 action=start schedule={'Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv': '2017-12-03T11:45:00.000000+00:00', '8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb': '2017-12-03T11:45:00.000000+00:00', 'DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya': '2017-12-03T11:45:00.000000+00:00', '4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA': '2017-12-03T11:45:00.000000+00:00'} timeout=20 force=True{noformat}  *Actual Results:* Nodes are upgraded, but nodes can't start. See details in  ^journalctl.log   *Expected Results:* Pool should work after upgrade.  *Additional Information:* The same behavior reproduces during manual upgrade: https://docs.google.com/document/d/1vUvbioL5OsmZMSkwRcu0p0jdttJO5VS8K3GhDLdNaoI/edit  ></body> </Action>
<Action id="36011" issue="21038" author="vladimirwork" type="comment" created="2017-12-08 13:31:33.0" updateauthor="vladimirwork" updated="2017-12-08 13:31:33.0"> <body><! CDATA *Case 2:*  There are empty node folders in /var/lib/indy/sandbox/data. Each node has folders with all other nodes' names and it causes read_ledger.py script to read data from wrong folder.  ></body> </Action>
<Action id="36018" issue="21038" author="vladimirwork" type="comment" created="2017-12-08 15:27:08.0" updateauthor="vladimirwork" updated="2017-12-08 15:27:08.0"> <body><! CDATA *Case 3:*  validator-info tool doesn't work due to "There are no info files in /var/lib/indy/sandbox" error.  ></body> </Action>
<Action id="37503" issue="21038" author="vladimirwork" type="comment" body="All test plan cases are passed, except vagrant installation. Vagrant manual document will be reviewed and checked in scope of INDY-1009." created="2017-12-15 12:23:39.0" updateauthor="vladimirwork" updated="2017-12-15 12:23:39.0"/>
