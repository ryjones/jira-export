<Action id="40995" issue="27761" author="sergey-shilov" type="comment" created="2018-02-28 09:46:40.0" updateauthor="sergey-shilov" updated="2018-02-28 09:46:40.0"> <body><! CDATA *Problem state / reason:*  The formula that is used for selection of primary node for master replica can not be applied for selection of primary nodes for backup replicas since N is variable.  *Changes:*  Now primaries for backup instances are chosen in a round-robin manner always starting from primary. If the next node is a primary for some instance then this node is skipped. So the first non-primary node is chosen as primary for current instance. Such approach allows to avoid election of instances of the same node as a primaries for different instances. The election procedure of the primary for master instance is not changed. Also working with node registry was changed. Now a newly added node does not add itself to owned node registry during initialisation. It waits for pool ledger catch-up instead. So now node registry is consistent with pool txns.  *Committed into:*       https://github.com/hyperledger/indy-plenum/pull/539       https://github.com/hyperledger/indy-node/pull/585      indy-node 1.2.320-master  *Risk factors:*      Nodes demotion and promotion, growing number of instances.  *Risk:*      Medium  *Recommendations for QA:*   - Check demotion and promotion of primary of master replica when number of instances is changed.  - Check demotion and promotion of random nodes.  ></body> </Action>
<Action id="41011" issue="27761" author="zhigunenko.dsr" type="comment" created="2018-02-28 14:43:28.0" updateauthor="zhigunenko.dsr" updated="2018-02-28 14:43:28.0"> <body><! CDATA *Environment:* indy-node                  1.3.321 indy-plenum                1.2.259  *Steps to Reproduce:* 1. Setup the pool of 7 nodes. 2. Demote primary node 3. Promote demoted node back 4. Demote nodes for instance 1 and instance 0, promote instance 0 5. Demote nodes for instance 2 and instance 0, promote instance 0 6. Demote node which follow to the instance 2 and node for instance 0, promote instance 0  *Actual results:* - No duplicates in primary instances - Sending NYM is successful  ></body> </Action>
