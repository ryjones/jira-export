<Issue id="41301" key="INDY-2171" number="2171" project="10303" reporter="esplinr" assignee="vladimirwork" creator="esplinr" type="10001" summary="New DIDs can be created without endorsers" priority="3" resolution="10000" status="10001" created="2019-07-18 14:28:47.0" updated="2019-07-29 20:02:07.0" resolutiondate="2019-07-29 20:02:07.0" votes="0" watches="4" workflowId="54306"> <description><! CDATA *Story* As an administrator of an Indy network, I want to be able to configure auth_rules such that new network users can write their own nyms to the public ledger so that the ledger can be managed in a completely decentralized way.  *Acceptance Criteria* * The ledger can be configured so that new DIDs can be anchored without a signature from an entity already on the ledger. ** The configuration happens in auth_rules. * The transaction that anchors the DID is signed with the DID that will be added to the ledger. ** This ensures that any transaction author agreements are signed. ** This ensures that someone cannot anchor a DID that they do not control with their private keys.  *Notes* * It is expected that decentralized public write access allows unknown users to anchor their own nym to the ledger if they provide payment through a payment plugin without going through an endorser for approval. * Allowing anonymous users to anchor nyms will avoid certain ledger checks for validity that could reduce the system's resilience to denial of service attacks, but we don't consider that to be a significant risk. Other levels of DOS protection needs to be instituted by the network administrators regardless of the ledger checks, such as firewall rules to blacklist hostile connections. * We considered whether we should allow transactions besides nym creation to be allowed without on-ledger signatures because use cases with peer DIDs that could benefit. We decided against doing this work because we don't have customer demand or clear requirements. * We also considered whether transactions should be allowed without any signatures at all for some development use cases, as previously considered in INDY-2170. But we similarly decided not to do this work without clear demand.   ></description> </Issue>
