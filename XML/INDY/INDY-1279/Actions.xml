<Action id="43155" issue="29475" author="zhigunenko.dsr" type="comment" created="2018-04-19 15:10:05.0" updateauthor="zhigunenko.dsr" updated="2018-04-19 15:10:05.0"> <body><! CDATA 1) unstable error during statistics collecting {code} Traceback (most recent call last): File "perf_runner.py", line 374, in <module> PerformanceTestRunner().run() File "perf_runner.py", line 188, in run self.collect_result() File "perf_runner.py", line 207, in collect_result self.find_start_and_finish_time() File "perf_runner.py", line 279, in find_start_and_finish_time if self.finish_time < tester.finish_time: TypeError: '<' not supported between instances of 'NoneType' and 'NoneType' Error in sys.excepthook: Traceback (most recent call last): File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 63, in apport_excepthook from apport.fileutils import likely_packaged, get_recent_crashes File "/usr/lib/python3/dist-packages/apport/__init__.py", line 5, in <module> from apport.report import Report File "/usr/lib/python3/dist-packages/apport/report.py", line 30, in <module> import apport.fileutils File "/usr/lib/python3/dist-packages/apport/fileutils.py", line 23, in <module> from apport.packaging_impl import impl as packaging File "/usr/lib/python3/dist-packages/apport/packaging_impl.py", line 23, in <module> import apt File "/usr/lib/python3/dist-packages/apt/__init__.py", line 23, in <module> import apt_pkg ModuleNotFoundError: No module named 'apt_pkg'  Original exception was: Traceback (most recent call last): File "perf_runner.py", line 374, in <module> PerformanceTestRunner().run() File "perf_runner.py", line 188, in run self.collect_result() File "perf_runner.py", line 207, in collect_result self.find_start_and_finish_time() File "perf_runner.py", line 279, in find_start_and_finish_time if self.finish_time < tester.finish_time: TypeError: '<' not supported between instances of 'NoneType' and 'NoneType' {code}  2) perf_traffic.py line 99 {code} __kinds_of_request =  "nym", "attribute", "schema", "claim", "get_nym", "get_attribute", "get_schema", "get_claim"  {code} can raise this exception {code:java} Cannot submit claim request: {"reqId":1524148729640475841,"identifier":"5jzdEyYxTj37RGbr168Xko","operation":{"ref":367210,"data":{"primary":{"n":"55312796410659626845","s":"43238942971209000644","rms":"57777090240537072580","r":{"name":"75798985861406769916"},"rctxt":"52360851049817003064","z":"63056656501435427588"},"revocation":{}},"type":"102","signature_type":"CL"}} ErrorCode.LedgerInvalidTransaction {code}  ></body> </Action>
<Action id="43200" issue="29475" author="ozheregelya" type="comment" created="2018-04-20 08:38:52.0" updateauthor="ozheregelya" updated="2018-04-20 08:38:52.0"> <body><! CDATA 3) Error message permanently appears right after running traffic mode: {code:java} object NoneType can't be used in 'await' expression{code}  ></body> </Action>
<Action id="43201" issue="29475" author="ozheregelya" type="comment" body="4) BTW, why the scripts should be run from the root user? It should be possible to run them from usual users." created="2018-04-20 09:52:32.0" updateauthor="ozheregelya" updated="2018-04-20 09:52:32.0"/>
<Action id="44051" issue="29475" author="zhigunenko.dsr" type="comment" body="5) don&apos;t forget about measuring_transactions.py - it raises many errors if applied to big ledger" created="2018-05-08 13:09:49.0" updateauthor="zhigunenko.dsr" updated="2018-05-08 13:09:49.0"/>
<Action id="44494" issue="29475" author="krw910" type="comment" body="One of the things I would like to see is a script that generates traffic with different transaction types not just NYMs" created="2018-05-16 17:43:28.0" updateauthor="krw910" updated="2018-05-16 17:43:28.0"/>
<Action id="44644" issue="29475" author="dsurnin" type="comment" created="2018-05-18 10:36:40.0" updateauthor="dsurnin" updated="2018-05-18 10:37:19.0"> <body><! CDATA new load script is provided  https://github.com/hyperledger/indy-node/pull/699   it uses processes instead of threads to maximize number of concurrent requests to pool and stores all the statistics to csv file for the moment only non-blocking send is supported. blocking send implementation in progress.   ~ozheregelya   ~VladimirWork   ~zhigunenko.dsr  to avoid some useless indy python wrapper error output it is possible to run the script with stderr redirected to some file in a following way {code:java} python3 perf_processes.py -c 2 -n 100 2>error_file {code}  ></body> </Action>
<Action id="44963" issue="29475" author="ozheregelya" type="comment" body="New load script was implemented. Improvements for this script moved to separated tickets and will be implemented later: INDY-1355, INDY-1356, INDY-1357, INDY-1358." created="2018-05-23 10:30:54.0" updateauthor="ozheregelya" updated="2018-05-23 10:30:54.0"/>
