<Action id="27488" issue="18687" author="ashcherbakov" type="comment" body=" ~krw910  Do we have log files? Did we check that the nodes we stopped were not a Primary in any instance? Otherwise a View Change is started, and the ledger may be stalled because of INDY-13." created="2017-06-28 12:40:15.0" updateauthor="ashcherbakov" updated="2017-06-28 12:40:15.0"/>
<Action id="27869" issue="18687" author="vladimirwork" type="comment" created="2017-07-05 13:18:04.0" updateauthor="vladimirwork" updated="2017-07-05 13:18:04.0"> <body><! CDATA There is a similar case with 4 nodes pool !Screenshot.PNG|thumbnail!   ^Node1.log    ^Node2.log    ^Node3.log    ^Node4.log  :  Build Info: sovrin-node 0.4.9  Overview: Send NYM command doesn't work with 3 online nodes of 4.  Steps to Reproduce: 1. *Stop* one node of four. 2. Send NYM command -> NYM is successfully added. 3. *Restart* another one node. 4. Send NYM command.  Actual Results: NYM is not added.  Expected Results: NYM should be added because 3 online nodes of 4 is enough to do that.   Logs from all nodes are in attachment.  ></body> </Action>
<Action id="28414" issue="18687" author="mzk-vct" type="comment" created="2017-07-14 15:55:57.0" updateauthor="mzk-vct" updated="2017-07-14 15:55:57.0"> <body><! CDATA Changes were done in https://jira.hyperledger.org/browse/INDY-389 Check whether they helped  Build numbers: node==0.4.35 plenum==0.4.47   ></body> </Action>
<Action id="28903" issue="18687" author="vladimirwork" type="comment" created="2017-07-24 14:31:13.0" updateauthor="vladimirwork" updated="2017-07-24 15:05:35.0"> <body><! CDATA There is the same behavior on indy-node 0.4.60:   1. Stop one node of four (Node 1). 2. Send NYM command -> NYM is successfully *added* (3 of 4 nodes are active now). 3. Restart another one node (Node 2). 4. Send NYM command -> NYM adding is *failed* (3 of 4 nodes are active now).  Additional info is in attachment. !Screenshot.PNG|thumbnail!   ^node1.txt    ^node2.txt    ^node3.txt    ^node4.txt    NYM is successfully added after Node 4 is stopped and Node 3 is restarted, so reproduce it exactly the same: with Node 1 is stopped and Node 2 is restarted.  ></body> </Action>
<Action id="28910" issue="18687" author="ashcherbakov" type="comment" created="2017-07-24 16:39:38.0" updateauthor="ashcherbakov" updated="2017-07-24 16:39:38.0"> <body><! CDATA *Problem reason* If the Primary is disconnected, and no view change happened (probably because of lack of consensus), then the Primary didn't use correct ppSeqNo for the next Batch.  *Fix* Set ppSeqNo to the last_ordered_pp_seq_no in the case above.  *PR* PR: https://github.com/hyperledger/indy-plenum/pull/305  *Covered with tests* test_recover_stop_primaries  ></body> </Action>
<Action id="28912" issue="18687" author="lovesh" type="comment" body=" ~ashcherbakov  If primary was just disconnected and not crashed, the why would it not use the correct `ppSeqNo` for next batch. If it crashed, view change should probably be triggered since nodes tolerate primary disconnection for only  `ToleratePrimaryDisconnection` which is 2 sec, as of now. If a node starting up does not get current state as i am assuming happened here (because other nodes did not detect disconnection), it should request CURRENT_STATE and LEDGER_STATUS" created="2017-07-24 16:58:01.0" updateauthor="lovesh" updated="2017-07-24 16:58:01.0"/>
<Action id="28913" issue="18687" author="ashcherbakov" type="comment" created="2017-07-24 17:08:10.0" updateauthor="ashcherbakov" updated="2017-07-24 17:08:10.0"> <body><! CDATA  ~lovesh  It's reproduced only if we don't have a quorum of InstanceChanges. The CurrentState is Propagated correctly, the disconnected Primary is catch-up and completed view change successfully, The only issue is that is has ppSeqno=0, so when it tries to send next batch, other nodes discard it since it's already ordered. That's why the fix is set ppSeqNo for the Primary to lastOrderedPpSeqNo.   ></body> </Action>
<Action id="28914" issue="18687" author="lovesh" type="comment" body=" ~ashcherbakov  By &quot;completed view change successfully&quot; you mean view changes? if yes then it would not be primary and pp_seq_no will start from 1" created="2017-07-24 17:12:19.0" updateauthor="lovesh" updated="2017-07-24 17:12:19.0"/>
<Action id="28915" issue="18687" author="ashcherbakov" type="comment" created="2017-07-24 17:16:26.0" updateauthor="ashcherbakov" updated="2017-07-24 17:16:26.0"> <body><! CDATA  ~lovesh  No, by view change I mean view change happened to Propagate Primary (that is processing of VCD messages from other nodes). So, again: 1) We have 3 nodes 2) We re-start primary (Node1) 3) View change doesn't happen since not enough InstanceChange 4) Node1 recieves f+1 CurrentState messages. This is enough to recover (because of INDY-389). 5) Node1 does a 'fake' View change to propagate the Primary and View number (from Current State) 6) Node1 is ready to participate 7) node 1 send next batch with ppSeqNo=0, while it should not be 0 (the view is still the same)  ></body> </Action>
<Action id="28926" issue="18687" author="ashcherbakov" type="comment" created="2017-07-24 20:16:41.0" updateauthor="ashcherbakov" updated="2017-07-24 20:16:41.0"> <body><! CDATA  ~VladimirWork   ~krw910  Fixed in indy-node 0.4.62  ></body> </Action>
<Action id="28960" issue="18687" author="vladimirwork" type="comment" created="2017-07-25 10:55:01.0" updateauthor="vladimirwork" updated="2017-07-25 10:55:01.0"> <body><! CDATA Build Info: indy-node 0.4.63  Steps to Validate: 1. Stop one node of four (Node 1). 2. Send NYM command -> NYM is successfully added. 3. Restart another one node (any). 4. Send NYM command.  Actual Results: NYM is successfully added.  ></body> </Action>
