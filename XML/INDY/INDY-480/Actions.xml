<Action id="29331" issue="19655" author="danielhardman" type="comment" body="I would do this in conjunction with implementing a state machine for view change." created="2017-08-02 03:43:50.0" updateauthor="danielhardman" updated="2017-08-02 03:43:50.0"/>
<Action id="35369" issue="19655" author="ashcherbakov" type="comment" created="2017-11-23 12:34:41.0" updateauthor="ashcherbakov" updated="2017-11-23 12:34:41.0"> <body><! CDATA I suggest just do separation of view change logic into a separate class, without full state machine support. I suggest to re-factor it for states support in a separate ticket (it would be much easier to do it when view change code is already separated). The reason is not to have a big re-factoring lasting multiple Sprints again.  ></body> </Action>
<Action id="35397" issue="19655" author="andkononykhin" type="comment" created="2017-11-24 13:36:57.0" updateauthor="andkononykhin" updated="2017-11-24 13:36:57.0"> <body><! CDATA h2. PoA # analyze current logic of view change: who (object), when (events + conditionals) and what (action) performs # design class that implements existence behavior and provides API for the events processing # refactor code to use object of that class for all view change related routine # testing on current set of tests: check that no logic has been broken  ></body> </Action>
<Action id="36017" issue="19655" author="ashcherbakov" type="comment" created="2017-12-08 15:24:18.0" updateauthor="ashcherbakov" updated="2017-12-08 15:24:18.0"> <body><! CDATA PR: https://github.com/hyperledger/indy-plenum/pull/470 Build: 1.2.230 Changes: Just code refactoring  For QA: Check that view change works as before   ></body> </Action>
<Action id="37099" issue="19655" author="ozheregelya" type="comment" created="2017-12-14 15:14:51.0" updateauthor="ozheregelya" updated="2017-12-14 15:14:51.0"> <body><! CDATA Version Info: indy-node 1.2.236  Following cases were verified: - view change because of low performance of primary node - view change because of primary node stopping - view change because of primary node demotion - view change when the pool is loaded  ></body> </Action>
