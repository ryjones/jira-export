<Issue id="19266" key="INDY-426" number="426" project="10303" reporter="ozheregelya" assignee="stevetolman" creator="ozheregelya" type="10004" summary="Pool does not work after demotion and promotion node" priority="2" resolution="10200" status="10001" created="2017-07-14 15:26:33.0" updated="2019-03-29 20:33:41.0" resolutiondate="2019-03-29 20:33:41.0" votes="0" watches="2" workflowId="19266"> <environment><! CDATA Build Info: indy-node version: 0.4.28 OS/Platform: Ubuntu 16.04.2 LTS Setup: 7 nodes, 1 client  ></environment> <description><! CDATA Steps to Reproduce:  1. Set up pool. 2. Open the CLI, connect to the pool, set up yourself as Trustee. 3. Demote any node (e.g. Node 3). send NODE dest=DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya data=\{'alias': 'Node3', 'services':   } 4. Promote it back. send NODE dest=DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya data=\{'alias': 'Node3', 'services':  'VALIDATOR' } => Pool works. 5. Exit the CLI and open it again. 6. Connect to test environment.  Actual Results: Strange error appears during connecting to test. NYMs are not send.    {code:java} sovrin@sovrin-VirtualBox:~/.sovrin$ sovrin Loading module /usr/local/lib/python3.5/dist-packages/config/config-crypto-example1.py Module loaded. Sovrin-CLI (c) 2017 Evernym, Inc. Node registry loaded. Node1: 10.0.0.2:9701 Node2: 10.0.0.3:9703 Node3: 10.0.0.4:9705 Node4: 10.0.0.5:9707 Node5: 10.0.0.6:9709 Node6: 10.0.0.7:9711 Node7: 10.0.0.8:9713 Type 'help' for more information. Running Sovrin 0.4.28 sovrin> connect test Saved keyring "Default_1f168" restored (/home/sovrin/.sovrin/keyrings/test/default_1f168.wallet) Active keyring set to "Default_1f168" Client sovrin7bc183 initialized with the following node registry: Node1C listens at 10.0.0.2 on port 9702 Node2C listens at 10.0.0.3 on port 9704 Node3C listens at 10.0.0.4 on port 9706 Node4C listens at 10.0.0.5 on port 9708 Node5C listens at 10.0.0.6 on port 9710 Node6C listens at 10.0.0.7 on port 9712 Node7C listens at 10.0.0.8 on port 9714 Active client set to sovrin7bc183 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 listening for other nodes at 0.0.0.0:6005 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node1C at 10.0.0.2:9702 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node6C at 10.0.0.7:9712 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node3C at 10.0.0.4:9706 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node5C at 10.0.0.6:9710 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node4C at 10.0.0.5:9708 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node2C at 10.0.0.3:9704 Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 looking for Node7C at 10.0.0.8:9714 Connecting to test... Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node2C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node4C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node6C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node3C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node5C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node7C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 now connected to Node1C Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 could not verify catchup reply CATCHUP_REP{'ledgerId': 0, 'txns': {'8': {'reqId': 1500034359003949, 'dest': 'DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya', 'data': {'services':   , 'alias': 'Node3'}, 'signature': 'okhKtLWKmBiam4EsohrgMA57uXTqwVPUh2w7FSdvyXXVUT77Rp9yA79E8NehaYsreBwfQNuTwJy35BJgdTGaBSc', 'identifier': 'V4SGRU86Z58d6TV7PBUe6f', 'type': '0'}}, 'consProof':  'Gf5K1TEoNegZsS2C5vzfNPbJ3cKMZGS4NaHZ8VY19Esp' } since Bad Merkle proof: second root hash does not match. Expected hash: b'bd8142fe77cece59f67e2f3c51083607845a8119ac14be20969b72b36f05719f' , computed hash: b'524121f7b02d124d6aa43800d50240acbed868fc1ff2aef9ca11aa13f0f94587' Db57e2gEAJPSMwUoQ48axT1iW4M9RXLztAMrp7xv3Xa4 could not verify catchup reply CATCHUP_REP{'ledgerId': 0, 'txns': {'8': {'reqId': 1500034359003949, 'dest': 'DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya', 'data': {'services':   , 'alias': 'Node3'}, 'signature': 'okhKtLWKmBiam4EsohrgMA57uXTqwVPUh2w7FSdvyXXVUT77Rp9yA79E8NehaYsreBwfQNuTwJy35BJgdTGaBSc', 'identifier': 'V4SGRU86Z58d6TV7PBUe6f', 'type': '0'}}, 'consProof':  'Gf5K1TEoNegZsS2C5vzfNPbJ3cKMZGS4NaHZ8VY19Esp' } since Bad Merkle proof: second root hash does not match. Expected hash: b'bd8142fe77cece59f67e2f3c51083607845a8119ac14be20969b72b36f05719f' , computed hash: b'524121f7b02d124d6aa43800d50240acbed868fc1ff2aef9ca11aa13f0f94587' Connected to test. sovrin@test> new key with seed 000000000000000000000000Steward1 Key created in keyring Default_1f168 Identifier for key is Th7MpTaRZVRYnPiabds81Y Verification key is ~7TYfekw4GUagBnBVCqPjiC Current identifier set to Th7MpTaRZVRYnPiabds81Y sovrin@test> send NYM dest=ULtgFQJe6bjiFbs7ke3NJD role=TRUST_ANCHOR Adding nym ULtgFQJe6bjiFbs7ke3NJD sovrin@test> {code}    Expected Results:  Error should not be shown, NYMs should be send.  ></description> </Issue>
