<Action id="54570" issue="33096" author="andkononykhin" type="comment" created="2018-12-10 12:18:51.0" updateauthor="andkononykhin" updated="2018-12-10 12:18:51.0"> <body><! CDATA *PoA*: * add API (variable) to pass list of plugin packages * add API (variable) to pass role for plugins installation/configuration if it requires more complex routine than just packages installation  ></body> </Action>
<Action id="54593" issue="33096" author="andkononykhin" type="comment" body="PR: https://github.com/hyperledger/indy-node/pull/1086" created="2018-12-10 15:39:59.0" updateauthor="andkononykhin" updated="2018-12-10 15:39:59.0"/>
<Action id="54655" issue="33096" author="andkononykhin" type="comment" created="2018-12-11 11:30:45.0" updateauthor="andkononykhin" updated="2018-12-11 11:30:45.0"> <body><! CDATA *Problem reason*:  Need an API to install plugins for both node and client parts.  *Changes*: * plugins as a role to manage plugins installation, provides two ways: ** plugins_packages variable as a list of packages ** plugins_role variable as a name of separate role for more complex installation scenarios * improves indy repositories configuration routine to reduce copy-paste   *Committed into*:   https://github.com/hyperledger/indy-node/pull/1086   *Risk factors*:  Nothing is expected.  *Risk*:  Low    *Covered with tests*: * updated/added molecule tests for all relevant roles (plugins, indy_node, indy_cli, perf_scripts, indy_repo)  *Recommendations for QA*: * case 1: plugins installed as a list of packages ** create namespace using _namespace-config.py_ script with the following parameters {noformat} --nodes.plugins_packages gosu 'jq=1.5+dfsg-1' --clients.plugins_packages tree{noformat}  *  ** run provision and configure playbooks ** ensure that specified packages are installed on clients (_gosu_ and _jq_) and nodes (_tree_) and have proper versions (_jq_) ** destroy  * case 2: plugins installed using special ansible role (check that custom role is executed) ** create simple role *** mkdir -p test_roles/plugins_test/tasks *** add the following content (or any other, up to you) {noformat} --- - name: Ensure test file exists copy: content: "" dest: "/tmp/{{inventory_hostname}}.test" force: no ... {noformat}  *  ** create namespace using namespace-config.py script with the following parameters (optionally, you may try different roles for nodes and clients) {noformat}  --nodes.plugins_role plugins_test --clients.plugins_role plugins_test{noformat}  ** run provision playbook ** run configuration playbook with re-defined path where ansible searches for roles:  {noformat} ANSIBLE_ROLES_PATH=./test_roles ansible-playbook ... configure.yml{noformat}  ** check that for both clients and nodes plugins_test role has been executed: there should be an empty file */tmp/*.test* on each host ** destroy  ></body> </Action>
<Action id="54695" issue="33096" author="ozheregelya" type="comment" created="2018-12-11 22:53:41.0" updateauthor="ozheregelya" updated="2018-12-11 22:53:41.0"> <body><! CDATA *Steps to Validate:* Case 1: 1. Initialize inventory with specified plugins to install them from repo (with version and without it). 2. Run provision and configure playbooks. 3. Make sure that plugins were installed.  4. Run destroy playbook. Case 2: 1. Initialize inventory with specified role for plugins installation. 2. Run provision and configure playbooks. 3. Make sure that plugins were installed.  4. Run destroy playbook.  *Actual Results:* Both ways of plugins installation work.  ></body> </Action>
