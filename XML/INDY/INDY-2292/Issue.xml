<Issue id="43268" key="INDY-2292" number="2292" project="10303" reporter="ashcherbakov" assignee="vladimirwork" creator="ashcherbakov" type="10002" summary="Take into account txn history when recovering state from the ledger for new nodes" priority="2" resolution="10000" status="10001" created="2019-11-11 13:15:39.0" updated="2019-11-27 12:25:11.0" resolutiondate="2019-11-25 07:23:38.0" votes="0" watches="4" workflowId="56375"> <description><! CDATA Due to undetected bugs in the way properties are added to the node state, there are live Indy ledgers with incorrectly calculated hashes. This prevents new nodes in those pools from entering into consensus.  We should special case the merkle hash calculation so that entries in the audit ledger are created using the logic that was used by historical versions of Indy this allows new nodes to arrive at the same merkle root as all other nodes in the pool.  *Acceptance criteria:* * Take into account the txn version as it was at the time of applying txn when recovering Config state from the ledger (as part of catchup or as part of recover state from the ledger procedure) * Implement it in a generic way using a txn version concept * Get the "virtual" txn version using the POOL_UPGRADE txns from the Config Ledger * The transaction history must explicitly account forÂ auth_rules transactions in version 1.9.1 (see INDY-2283). ** A comment exists in the code linking to this INDY-2283 so that future developers can easily find the context for the change. * _Evaluate if needed:_ There needs to also be a way to allow ledger plugins to specify a historical calculation (see SN-8 for a historical problem with Sovrin Fees in Indy 1.7.1)  ></description> </Issue>
