<Action id="53316" issue="33100" author="andkononykhin" type="comment" created="2018-11-12 12:28:48.0" updateauthor="andkononykhin" updated="2018-11-29 08:09:02.0"> <body><! CDATA *PoA*: # improve inventory-init.py to deal with two levels of variables: roles and playbooks # improve roles ## check that aws_manage is agnostic to hosts roles (node, client) ## add role to install client tools with necessary environment (e.g. _client_install_) *** indy-cli *** load scripts ## add role to configure client hosts (e.g. _client_configure_) *** genesis transactions (either generated or grabbed from one of node hosts) ## (optionally) refactor roles to move common node/client parts to separate roles # improve playbooks: ## rename existent playbooks (likely to be as suggested in description: _create.yml, configure.yml, destroy.yml_) ## extend them to deal with client hosts as well # update docs  *Tests*: all tests are performed by molecule * indy-cli is installed * performance scripts are installed * pool txns file exists on client * indy-cli can connect to pool * performance scripts can connect to pool  ></body> </Action>
<Action id="54058" issue="33100" author="andkononykhin" type="comment" created="2018-11-30 09:13:24.0" updateauthor="andkononykhin" updated="2018-11-30 11:26:48.0"> <body><! CDATA *Problem reason*:  There was no way to provision and configure clients machine using pool automation ansible scripts.  *Changes*: * improved roles: ** added role *indy_cli* to install and configure indy-cli ** added role *perf_scripts* to install and configure performance scripts ** added role *indy_node* as a combination of former roles node_install and pool_install * improved playbooks: ** *provision.yml* and *destroy.yml* to create and destroy hosts  respectively ** *configure.yml* to configure hosts ** implemented logic of separate variables scopes for clients and nodes provisioning * improved inventory-init.py script: ** renamed to *namespace-config.py* since for now it is more oriented to config namespace directory where inventory is only one of sub-directories ** added support to config clients and nodes provisioning separately ** improved inventory directory structure ** improved command line API * improved tests to cover new functionality  *Committed into*:   https://github.com/hyperledger/indy-node/pull/1041|https://github.com/hyperledger/indy-node/pull/1007   *Risk factors*:  Nothing is expected.  *Risk*:  Low    *Covered with tests*: * molecule tests in all roles * test for stateful_set.py ansible module  *Recommendations for QA*: # check *python* *scripts/namespace-config.py --help*, please notice: ** vars for *localhosts* group impact provisioning parameters for both nodes and clients ** vars for *aws_clients_provisioner* and *aws_clients_provisioner*  hosts impact provisioning for clients and nodes respectively ** vars for *clients* and *nodes*  groups impact configuration for clients and nodes respectively # initiallize namespace directory: *{{python ./scripts/namespace-config.py indy1626 --localhosts.aws_regions us-east-1 us-west-2 --aws_clients_provisioner.aws_instance_count 2 --aws_clients_provisioner.aws_ec2_type t3.micro --aws_nodes_provis}}*{{*ioner.aws_instance_count 5 --aws_nodes_provisioner.aws_ec2_type t3.large*}}. This should create namespace directory *indy1626* with inventory sub-directory *indy1626/inventory* configured to provision five t2.large nodes and two t3.micro clients instances across two listed aws regions (_us-east-1_ and _us-west-2_). Optionally you may want to use the following options to configure clients and nodes: ** indy-cli: --clients.indy_cli_ver and --clients.indy_cli_libindy_ver ** performace scrtips: --clients.perf_scripts_ver (expected values: branch, tag or commit SHA1 in indy-node repo), --clients.perf_scripts_python3_indy_ver (in pip) and --clients.perf_scripts_libindy_ver ** indy-node: --nodes.indy_node_ver, --nodes.indy_plenum_ver, --nodes.python_indy_crypto_ver, --nodes.libindy_crypto_ver # run *{{ansible-playbook -i indy1626/inventory provision.yml}}*. This should perform creation of nodes and clients. Ensure: ** nodes and clients number, regions distribution, ec2 instance types are as expected ** ec2 security groups and key pairs are created for both clients and nodes ** all instances have proper tags: _Project=Indy-PA_, _Namespace=indy1626_ and _Group_ vakues are clients or nodes ** there is a *indy1626/ssh* directory with ssh settings to access created hosts ** there are inventory files *clients.yml* and *nodes.yml* in *indy1626/inventory/* directory # check that you are able to ssh there: ** {{cd indy1626/ssh && ssh -F config.nodes indy1626_nodes1 whoami && cd -}} ** {{cd indy1626/ssh && ssh -F config.clients indy1626_clients2 whoami && cd -}} # run *{{ansible-playbook -i indy1626/inventory configure.yml}}* and ensure: ** (locally) you have pool genesis transactions file in *indy1626/pool* directory ** (locally) the file is also available on clients: ***  {{cd indy1626/ssh && ssh -F config.clients indy1626_clients1 "ls -la \$HOME/pool_transactions_genesis" && cd -}} ** (clients) ensure that indy-cli tool is available and already configured to connect to running pool (which is named *indy-pool*): *** {{cd indy1626/ssh &&  ssh -F config.clients indy1626_clients2 "echo 'pool connect indy-pool' | indy-cli" && cd -}} ** (clients) ensure that perf-scripts are installed (in python virtual env), can be run and can connect to pool: *** {{cd indy1626/ssh && ssh -F config.clients indy1626_clients1 "\$HOME/perf_venv/bin/perf_processes.py --help" && cd -}} *** {{cd indy1626/ssh && ssh -F config.clients indy1626_clients1 "\$HOME/perf_venv/bin/perf_spike_load.py --help" && cd -}} *** {{cd indy1626/ssh && ssh -F config.clients indy1626_clients1 "\$HOME/perf_venv/bin/perf_processes.py --test_conn -g \$HOME/pool_transactions_genesis" && cd -}} (for now it just silently exits with exit code 0 if everything is fine) ** (clients, nodes) perform other checks to ensure that pool is working properly and client tools are able to connect and communicate with it # run *ansible-playbook -i indy1626/inventory destroy.yml* and ensure: ** all aws ec2 resources have been destroyed (ec2 instances, security groups, key pairs) ** *indy1626/inventory* and *indy1626/ssh* directories don't include any information about removed hosts  You can repeat all the above steps with the following changes: * each ansible-playbook can be run several times: second and further runs should not do any changes (green ansible logs) * you can configure each ansible-playbook command to perform operations only on/for nodes or clients using *--tags(-t)* option (e.g. _-t clients_)  ></body> </Action>
<Action id="54455" issue="33100" author="ozheregelya" type="comment" created="2018-12-06 18:16:40.0" updateauthor="ozheregelya" updated="2018-12-06 18:16:40.0"> <body><! CDATA *Steps to Validate:* # check *python* *scripts/namespace-config.py --help* *=>* vars for *localhosts* group impact provisioning parameters for both nodes and clients *=>* vars for *aws_clients_provisioner* and *aws_clients_provisioner*  hosts impact provisioning for clients and nodes respectively *=>* vars for *clients* and *nodes*  groups impact configuration for clients and nodes respectively # initiallize namespace directory: *{{python ./scripts/namespace-config.py indy1626 --localhosts.aws_regions us-east-1 us-west-2 --aws_clients_provisioner.aws_instance_count 2 --aws_clients_provisioner.aws_ec2_type t3.micro --aws_nodes_provis}}*{{*ioner.aws_instance_count 5 --aws_nodes_provisioner.aws_ec2_type t3.large*}}.  *=>* namespace directory *indy1626* with inventory sub-directory *indy1626/inventory* created # run *{{ansible-playbook -i indy1626/inventory provision.yml}}*. This should perform creation of nodes and clients. Ensure: *=>* 5 nodes and 2 clients created in two regions, with instance types t3.large for nodes and t3.micro for clients. *=>* ec2 security groups and key pairs are created for both clients and nodes *=>* all instances have proper tags: _Project=Indy-PA_, _Namespace=indy1626_ and _Group_ values are clients or nodes *=>* there is a *indy1626/ssh* directory with ssh settings to access created hosts *=>* there are inventory files *clients.yml* and *nodes.yml* in *indy1626/inventory/* directory # check that you are able to ssh *=>* both nodes and clients are accessible via ssh # run *{{ansible-playbook -i indy1626/inventory configure.yml}}* and ensure: *=>* genesis file available on host and client machines. *=>* indy-cli tool is available and already configured to connect to running pool *=>* perf-scripts are installed in python virtual env on client machines *=>* pool work correctly under load test from one of clients  # run *ansible-playbook -i indy1626/inventory destroy.yml*  *=>* all aws ec2 resources have been destroyed *=> indy1626/inventory* and *indy1626/ssh* directories don't include any information about removed hosts # repeat all the above steps and run them only for part of instances => *tags* work, second run does nothing.  *Actual Results:*  Pool automation playbooks are awesome.  ></body> </Action>
