<Action id="60065" issue="39469" author="sergey.khoroshavin" type="comment" created="2019-05-16 13:36:43.0" updateauthor="sergey.khoroshavin" updated="2019-05-17 09:55:44.0"> <body><! CDATA *Changes made* Implemented GET_TXN_AUTHOR_AGREEMENT_TRANSACTION as  designed|https://github.com/hyperledger/indy-node/blob/master/design/txn_author_agreement.md#get_txn_author_agreement . For all variants state proofs are generated as follows, depending on parameters supplied: * no parameters - key is "2:latest" and expected value is hexdigest of received TAA * version - key is "2:v:version" and expected value is hexdigest of received TAA * digest - key is "2:d:digest" and expected value is JSON with TAA {code} { "lsn": txn-seqno, "lut": txn-timestamp, "val" : { "text": received-taa-text, "version": received-taa-version }, } {code} * timestamp - key is "2:latest" and expected value is hexdigest of received TAA, however additional check is required to make sure that received state root hash timestamp is within freshness interval from asked timestamp  *PR* https://github.com/hyperledger/indy-plenum/pull/1204 https://github.com/hyperledger/indy-plenum/pull/1206 https://github.com/hyperledger/indy-plenum/pull/1208 https://github.com/hyperledger/indy-node/pull/1286  *Covered by tests* test_get_taa_has_expected_schema test_get_txn_author_agreement_works_on_clear_state test_get_txn_author_agreement_cannot_have_more_than_one_parameter test_get_txn_author_agreement_returns_latest_taa_by_default test_get_txn_author_agreement_can_return_taa_for_old_version test_get_txn_author_agreement_can_return_taa_for_current_version test_get_txn_author_agreement_doesnt_return_taa_for_nonexistent_version test_get_txn_author_agreement_can_return_taa_for_old_digest test_get_txn_author_agreement_can_return_taa_for_current_digest test_get_txn_author_agreement_doesnt_return_taa_for_nonexistent_digest test_get_txn_author_agreement_can_return_taa_for_old_ts test_get_txn_author_agreement_can_return_taa_for_fresh_ts test_get_txn_author_agreement_doesnt_return_taa_when_it_didnt_exist  *Risk* Low  *Known issues* Currently SDK doesn't support state proofs from GET_TAA with timestamp, so these tests are skipped, however we do have tests that state proofs returned in this case are still valid.  ></body> </Action>
