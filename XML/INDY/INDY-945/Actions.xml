<Action id="34615" issue="23872" author="andkononykhin" type="comment" created="2017-11-14 13:32:43.0" updateauthor="andkononykhin" updated="2017-11-14 13:32:43.0"> <body><! CDATA Hyperledger Jenkins uses minions from OpenStack - on demand created agents with a set of software pre-installed including pulled docker images. h2. PoA  *option 1* * use base image for fabric projects based on ubuntu 16.04 * configure our dockerfiles to base on it  *option 2*  * creat base docker image for indy projects and inject to one of the OpecnStack images * configure dockerfiles to base on it  Option 2 seems quite better because: * cleaner environment * more configuration common for all indy projects will be pre-installed     ></body> </Action>
<Action id="35372" issue="23872" author="andkononykhin" type="comment" created="2017-11-23 13:04:24.0" updateauthor="andkononykhin" updated="2017-11-23 13:04:24.0"> <body><! CDATA PRs to indy core repos:  https://github.com/hyperledger/indy-node/pull/464 https://github.com/hyperledger/indy-anoncreds/pull/113 https://github.com/hyperledger/indy-plenum/pull/460  ></body> </Action>
<Action id="35394" issue="23872" author="andkononykhin" type="comment" created="2017-11-24 09:54:04.0" updateauthor="andkononykhin" updated="2017-11-24 09:54:04.0"> <body><! CDATA Problem reason: - no docker images hierarchy for ci testing and copy-paste like (similar but not the same) dockerfiles in indy core repos lead to non optimal docker images build routine  Changes: - moved common parts of dockerfiles to baseimages (3 levels of them) and automated baseimages build routine. For now that code  is placed|https://github.com/hyperledger/indy-node/tree/master/docker-files/baseimage  in indy-node repo and used by all three repos. - updated in dockerfiles  in repos - updated jenkinsfiles  Committed into: -  https://github.com/hyperledger/indy-node/pull/464  -  https://github.com/hyperledger/indy-anoncreds/pull/113  -  https://github.com/hyperledger/indy-plenum/pull/460   Risk factors: - broken CI testing  Risk: - Low  Covered with tests: - tested manually  Recommendations for QA: do the following sequence of steps * check that base images are built by the make routine without any issues ** clone  indy-node ** create base images *make -C docker-files/baseimage* ** check images *docker images hyperledger/indy** * check that ci images are built as well ** for any core indy repo: *docker build -t indy-test -f ci/ubuntu.dockerfile ci* *  check that tests are run as usual on jenkins pipelines **  https://ci.evernym.com/view/ci/job/Indy-Anoncreds/job/indy-anoncreds-verify-x86_64/  **  https://ci.evernym.com/view/ci/job/Indy-Node/job/indy-node-verify-x86_64/  **  https://ci.evernym.com/view/ci/job/Indy-Plenum/job/indy-plenum-verify-x86_64/   ></body> </Action>
<Action id="35576" issue="23872" author="ozheregelya" type="comment" created="2017-11-28 16:39:18.0" updateauthor="ozheregelya" updated="2017-11-28 16:39:18.0"> <body><! CDATA Version Info: indy-node 1.2.222  Steps to Validate: * check that base images are built by the make routine without any issues ** clone  indy-node ** create base images *make -C docker-files/baseimage* ** check images *docker images hyperledger/indy** * check that ci images are built as well ** for any core indy repo: *docker build -t indy-test -f ci/ubuntu.dockerfile ci* *  check that tests are run as usual on jenkins pipelines **  https://ci.evernym.com/view/ci/job/Indy-Anoncreds/job/indy-anoncreds-verify-x86_64/  **  https://ci.evernym.com/view/ci/job/Indy-Node/job/indy-node-verify-x86_64/  **  https://ci.evernym.com/view/ci/job/Indy-Plenum/job/indy-plenum-verify-x86_64/   Actual Results: Following images were build after performed steps: {code:java} indy-test hyperledger/indy-core-baseci hyperledger/indy-baseci hyperledger/indy-baseimage{code}  ></body> </Action>
