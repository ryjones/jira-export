<Action id="31006" issue="20830" author="andrey.goncharov" type="comment" body="PR opened https://github.com/hyperledger/indy-plenum/pull/382" created="2017-09-19 12:31:56.0" updateauthor="andrey.goncharov" updated="2017-09-19 12:31:56.0"/>
<Action id="31009" issue="20830" author="andrey.goncharov" type="comment" created="2017-09-19 13:32:03.0" updateauthor="andrey.goncharov" updated="2017-09-19 13:32:03.0"> <body><! CDATA Problem reason:  - request not all required messages  Changes:  -Â added requesting missing messages  Committed into: https://github.com/hyperledger/indy-plenum/commit/45c91ce7f794d1d85d33ba0d4c0be71172e6f20e indy-plenum/master 1.1.130  Risk factors: Nothing is expected.  Risk: Low  Covered with tests: https://github.com/hyperledger/indy-plenum/blob/master/plenum/test/node_request/message_request/test_node_request_missing_three_phase_messages.py  ></body> </Action>
<Action id="31039" issue="20830" author="vladimirwork" type="comment" created="2017-09-20 12:18:29.0" updateauthor="vladimirwork" updated="2017-09-20 12:19:46.0"> <body><! CDATA Build Info: indy-node 1.1.141  Case 1: Steps to Validate: 1. Set up the pool of 3 nodes. 2. Make view change (i.e. restart primary node). 3. Send transaction to make sure that pool works. 4. Stop services on any node. 5. Send NYM transaction. 6. Start services on stopped node. 7. Send NYM transaction.  Actual Results: Pool comes back to consensus.   Case 2: Steps to Validate: 1. Set up the pool of 3 nodes. 2. Send NYM transaction. 3. Stop services on not primary node. 4. Send NYM transaction. 5. Start services back on stopped node. 6. Send NYM transaction. => 2 NTMs were written. 7. Stop services on primary node. 8. Send NYM transaction. 9. Start stopped node. 10. Send NYM transaction. => 2 transactions were written. View Change was happened, new primary node was chosen. 11. Stop services on old primary node. 12. Send NYM transaction. 13. Start old primary back.  Actual Results: Pool comes back to consensus.  Additional Info: Consensus is also checked with 6 and 7 nodes pools.  ></body> </Action>
<Action id="31060" issue="20830" author="vladimirwork" type="comment" created="2017-09-21 09:55:26.0" updateauthor="vladimirwork" updated="2017-10-20 09:07:11.0"> <body><! CDATA The issue is reproducing again during testing of INDY-868 with another variation of Case 1:  Build Info: indy-node 1.1.142  Case 1: Steps to Reproduce: 1. Set up the pool of 3 nodes. 2. Make view change (i.e. restart primary node). 3. Send transaction to make sure that pool works. 4. Stop services on any node. 5. Send NYM transaction. *6. Wait 10+ minutes.* 7. Start services on stopped node. 8. Send NYM transaction.  Actual Results: Pool doesn't come back to consensus. !Screenshot__.PNG|thumbnail!   Expected Result: Pool should come back to consensus.  Additional Info: There are missing pre-prepares in Node1.log (see attachments).  ^_node1.log    ^_node2.log    ^_node3.log    ></body> </Action>
<Action id="31676" issue="20830" author="mzk-vct" type="comment" body="The reason is that preprepares have a life time. When replica receives outdated preprepare it discards it and marks sender as suspicious." created="2017-10-06 14:55:02.0" updateauthor="mzk-vct" updated="2017-10-06 14:55:02.0"/>
<Action id="31677" issue="20830" author="mzk-vct" type="comment" body="There is a special case - if there are enough prepares life time is ignored. Perhaps this mechanism has a bug." created="2017-10-06 14:56:19.0" updateauthor="mzk-vct" updated="2017-10-06 14:56:19.0"/>
<Action id="33157" issue="20830" author="mzk-vct" type="comment" body="Pull request to plenum https://github.com/hyperledger/indy-plenum/pull/415" created="2017-10-25 12:00:50.0" updateauthor="mzk-vct" updated="2017-10-25 12:00:50.0"/>
<Action id="33226" issue="20830" author="vladimirwork" type="comment" created="2017-10-26 15:50:57.0" updateauthor="vladimirwork" updated="2017-10-26 15:50:57.0"> <body><! CDATA Build Info: indy-node 1.2.186  Steps to Validate: 1. Set up the pool of 3 nodes. 2. Make view change (i.e. restart primary node). 3. Send transaction to make sure that pool works. 4. Stop services on any node. 5. Send NYM transaction. 6. Wait 10+ minutes. 7. Start services on stopped node. 8. Send NYM transaction.  Actual Results: Pool works normally.  Additional Info: Also checked with another f count (7 nodes).  ></body> </Action>
