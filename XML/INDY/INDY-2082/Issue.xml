<Issue id="39619" key="INDY-2082" number="2082" project="10303" reporter="esplinr" creator="esplinr" type="10000" summary="Individual nodes can tombstone data" priority="3" status="10200" created="2019-05-03 23:29:59.0" updated="2019-10-08 15:28:46.0" votes="0" watches="1" workflowId="52504"> <description><! CDATA *Story*  As a steward on an Indy Network, I need to be able to mark individual ledger entries as "deleted" so that I can comply with regulatory requirements in my geography that forbid me from serving some items.  *Acceptance Criteria* * A steward can mark specific ledger entries with a "tombstone" * When such ledger entries are requested, an error similar to HTTP 451 should be returned. * Developers of ledger plugins should be able to mark whether ledgers created by their plugins can use tombstones without breaking functionality (i.e. tombstoning a payment address would break all subsequent payments) * When the SDK receives an error similar to HTTP 451, it will try other nodes on the network the same as with any other failed read request. * A steward can remove the tombstone on a ledger entry.  *Notes* * Types of data which might be forbidden: pornography, terrorist content, accidentally submitted personal data. * Tombstone specific to a node strike an reasonable balance between regulatory compliance and concerns of censorship, as the data will remain available on the network unless it is concerning enough for all stewards to agree to tombstone the data. * The BLS multi-signature is created when the data is initially written to the ledger, so as long as any single node is willing to return the data, the data will be returned. * By default, if the SDK receives enough rejects (F+1), it will stop trying to get the data. But this behavior could be overwritten if the user really wants the data. We could make it the default behavior of the SDK to keep retrying if failures are caused by the 451-style error.  ></description> </Issue>
