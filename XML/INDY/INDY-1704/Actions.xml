<Action id="50599" issue="33757" author="sergey.khoroshavin" type="comment" created="2018-09-18 13:41:05.0" updateauthor="sergey.khoroshavin" updated="2018-09-18 13:41:05.0"> <body><! CDATA  ~esplinr  I have several questions regarding specifying required number of signatures in configuration ledger: * Do you want to specify only number of signatures (with affected transactions essentially hardcoded) or you want to specify required number of signatures per transaction type? First case is much simpler to implement, but I'm afraid it may cause problems in future when more requirements are added. Second one will essentially require moving _auth_map_ to config ledger which is quite big task, but it's much more flexible. * Do we have plans to make configurable number of stewards to approve some transactions as well, or it's just for trustees? * It seems like we should have some defaults when no such transaction is written to configuration ledger (I don't think we can afford rewriting SLN ledgers). If so, what are those defaults? * As for specifying ratio of total trustees - while actual implementation is blocked by INDY-1594 I believe we should add this to protocol upfront. Probably two numbers - absolute and relative number of trustees, taking maximum of them when deciding on final number. Does it seem reasonable?   ></body> </Action>
<Action id="50832" issue="33757" author="esplinr" type="comment" created="2018-09-20 12:32:37.0" updateauthor="esplinr" updated="2018-09-20 12:32:37.0"> <body><! CDATA My suggested responses: 1. The number of signatures should be specified per transaction type, so that some transactions can have a higher trust requirement than others. 2. This should also apply to steward transactions so that the ledger can be configured such that one steward cannot control the ledger. 3. The default should be one signature is required to approve the transaction. This is to make it easy for people running development and test ledgers. 4. It does seem prudent to include in the transaction specification the ability to declare a ratio of trustees or stewards. Rather than having two numbers, and having a rule for which is valid, I was thinking there would be a single number and an indicator whether it was a percentage ratio or an absolute number. That's simply how I was thinking about it; I would consider the architects' opinion on how it should be implemented (and whether to postpone specifying the percentage ratio) to be a more authoritative opinion.  ></body> </Action>
<Action id="50850" issue="33757" author="sergey-shilov" type="comment" created="2018-09-20 14:49:40.0" updateauthor="sergey-shilov" updated="2018-09-20 14:49:40.0"> <body><! CDATA I just want to comment that it is not fully correct to use *"transaction"* and *"transaction type"* words. Add a trustee, suspend a trustee, add a steward, revoke the role of steward - these are all the *same* transaction type. They are all *actions*, *not transaction types*. So identifying of these actions is a topic for discussion.  For now we can say that configuration ledger will store something like that: * _<action1>: <required number of sigs>_ * _<action2>: <required number of sigs>_ * _<action3>: <required number of sigs>_  But for now it is not clear what the _actionN_ is.  ></body> </Action>
<Action id="50881" issue="33757" author="sergey.khoroshavin" type="comment" created="2018-09-20 19:21:30.0" updateauthor="sergey.khoroshavin" updated="2018-09-20 19:21:30.0"> <body><! CDATA  ~sergey-shilov  {quote} They are all actions, not transaction types. So identifying of these actions is a topic for discussion. {quote} I believe these actions are already clearly defined in _auth_map_, so it all boils down to moving it out of code into config ledger (so it's really configurable) and adding support for configuring required number of signatures. Please correct me if I'm wrong.  ></body> </Action>
<Action id="51128" issue="33757" author="esplinr" type="comment" created="2018-09-24 23:03:21.0" updateauthor="esplinr" updated="2018-09-24 23:03:21.0"> <body><! CDATA Thank you  ~sergey-shilov  for the clarification. The approach discussed by  ~sergey.khoroshavin  does appear to meet the requirement.  Sergey K. also mentioned that using two numbers (both absolute and percentage) has the advantage of allowing logic such as "33% of trustees but not less than 2". That is an interesting advantage that it is good to consider. I worry about the added complexity in implementation and user configuration, but the rule "if both number are specified use whichever is bigger" is simple enough  to communicate. I like the approach.  ></body> </Action>
<Action id="51165" issue="33757" author="sergey-shilov" type="comment" created="2018-09-25 17:19:36.0" updateauthor="ashcherbakov" updated="2018-09-27 19:18:29.0"> <body><! CDATA *Plan of Attack*     *Requirement*  According to the story the network should require several trustees to sign administrative transactions to do some actions that are important for the network. Otherwise the transaction whould be rejected due to insufficient number of signatures. Also the quorum of trustees should be configurable for different kinds of actions.     *What to do* Current implementation of the indy-node does not support such functionality. To address this issue we need to do several consequence steps: * find out the structure of "actions" and their definition * apply them for incoming transactions as a part of authorisation * store them in config ledger to make them configurable     *How to do*  For now we have a static structure called auth_map. This structure defines permissions for various actions. So we can use this data structure as a base for new rules definition, but most probably it will require some changes and extensions. Another issue is the fact that auth_map structure is static, so we should find a solution how to move it to the config ledger.  Moving the auth_map to config ledger requires significant work as we should define corresponding transactions and so on. It would be more efficient for whole stack to implement a solution with static rules first.  At the first step we can use absolute numbers of required signatures. Further we can use a strategy of combination of absolute numbers and percentage to implement a rules like "33% of trustees but not less than 2", but using of percentage requires INDY-1594 complete.  Since we plan to move the auth_map structure to the config ledger as the last step there is the question of atomicity of adding and modification of the rules for all administrative actions is still under discussion. Possible solutions: # each rule can be added/modified by separate transaction; # all rules are added/modified by single transaction, i.e. this transaction contains a list of all rules for administrative actions.  I think, the first point is better.  One important thing regarding the client side: the indy-node will expect an administrative transaction *sent with the same source DID (action initiator) and signed by required number of trustees*. Otherwise the transaction will be rejected.     *Technical tasks:*  So our current plan is: # Modify and extend the auth_map structure to store the authorization rules for administrative actions. # Define the authorization rules for administrative actions with quorums as constants (hard-coded constants for absolute number of signers). # Modify applying of the rules stored if the auth_map according to changes made by steps 1 and 2. # Support a strategy to specify per-cent of signers instead of absolute number # Move the auth_map structure to the config ledger.     ></body> </Action>
