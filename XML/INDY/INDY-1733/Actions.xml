<Action id="51747" issue="34212" author="andkononykhin" type="comment" created="2018-10-04 12:25:28.0" updateauthor="andkononykhin" updated="2018-10-04 12:25:28.0"> <body><! CDATA {quote}In the Indy Node repository in GitHub, development releases appear alongside the stable releases. {quote} and release candidates as well (a.k.a. pre-releases) e.g.:  pre-release for 1.6.70|https://github.com/hyperledger/indy-node/tree/1.6.70-rc  and  stable release 1.6.70|https://github.com/hyperledger/indy-node/tree/1.6.70-stable  {quote}Builds that have not been approved by QA are marked in GitHub as "pre-release". {quote} Current release candidate processing logic among other steps includes: tagging pre-release as X.Y.Z-rc -> ... QA approval -> ... tagging stable release X.Y.Z-stable If QA denies RC no stable tag is created. And it might be treated as an indicator of such QA decision. e.g. here is  pre-release for 1.6.69|https://github.com/hyperledger/indy-node/tree/1.6.69-rc  but no tag 1.6.69-stable   ~esplinr  Do you think we should change anything in that logic? Seems it provides all necessary information that is mentioned in acceptance criteria. Moreover a lot of discussions are happening these days regarding development and release processes and things may change drastically soon.  One thing that might be worth to improve is to include more details to the  ci-cd doc|https://github.com/hyperledger/indy-node/blob/master/docs/ci-cd.md  to clarify mentioned logic.  ></body> </Action>
<Action id="56794" issue="34212" author="andkononykhin" type="comment" created="2019-02-08 14:50:03.0" updateauthor="andkononykhin" updated="2019-02-08 15:47:46.0"> <body><! CDATA Some exploration results: * GithHub release is a kind of addition over git's tags: GitHub adds some metadata like release notes, release name, attachments * for now GitHub shows each tag in Releases tab anyway (regardless of release metadata)  treating it as release point (placeholder), so each tag is visible in both Releases and Tags tabs * GitHub agrees that showing all tags in Release tab might be confusing and an internal ticket regarding that has been created ( https://github.community/t5/How-to-use-Git-and-GitHub/Tag-without-release/td-p/6255)  * (one more related conversation:  https://stackoverflow.com/questions/28496319/github-a-tag-but-not-a-release )  Thus, for now we can't make non-release tags invisible in Release tab: development tags will be anyway presented in Releases tab alongside tags for releases it would be still confusing.  But we can try satisfy the acceptance criteria in any case.  *PoA*  +Option 1+ * create GitHub releases for x-stable tags and pre-releases for *-rc tags * leave *-master tags as is (just tags, no GitHub release metadata)  pros * all release and pre-release tags would be properly marked * *-master (dev tags) would be partly collapsed !master_as_no_release_collapsed.jpeg|thumbnail!  cons * simple tags (no GitHub release metadata) would be still visible in Releases tab * pre-releases would be still visible as well  +Option 2+ * create GitHub releases for x-stable tags and pre-releases for *-rc tags and *-master  pros * *-master tags will be marked as pre-releases as well  cons * *-master pre-releases would  occupy a lot of area in UI  !master_as_pre_release.jpeg|thumbnail! * it's not accurate to mark *-master as pre-release since it's actually a dev version (ones might call them `pre-pre-release`) * simple tags (no GitHub release metadata) would be still visible in Releases tab * pre-releases would be still visible as well  +Option 3+ * create Releases only *-stable tags * remove all current *-master tags and stop pushing them from CD pipeline  pros: * more clean UI Releases tab:  real releases are shown as expected, pre-releases are presented as just one line (but not marked), dev tags are not presented, thus don't "pollute" the UI  cons: * might be less convenient to associate artifacts (e.g. debian and pypi packages) with the source code but I don't see any valuable cases where it is really needed (artifacts for now includes metadata with commit sha) * I believe that can't be done before INDY-1992 since it requires revision of current workflows and version management  Seems the option 3 is best one. There might be variants of it (e.g. create pre-release for *rc as well) but the main idea is to get rid of dev tags.   ~esplinr   ~ashcherbakov  What do you think?  ></body> </Action>
<Action id="56872" issue="34212" author="ashcherbakov" type="comment" body="I vote for Option 3." created="2019-02-11 16:53:25.0" updateauthor="ashcherbakov" updated="2019-02-11 16:53:25.0"/>
<Action id="58842" issue="34212" author="andkononykhin" type="comment" created="2019-04-02 12:03:11.0" updateauthor="andkononykhin" updated="2019-04-02 12:03:11.0"> <body><! CDATA The task was partly done in scope of INDY-2019: * master tags were removed from indy-plenum and indy-node * CD pipeline stopped publishing new master tasg * rc tags are not published for now as well but it might be changed in future  What is left: * (using GitHub REST API) add changelog info for releases as GitHub release metadata as a part of CD pipeline * (optionally) push tags for pre-releases and mark them as GitHub pre-releases via GitHub REST API  ></body> </Action>
<Action id="60812" issue="34212" author="ashcherbakov" type="comment" created="2019-06-10 07:39:32.0" updateauthor="ashcherbakov" updated="2019-06-10 07:39:32.0"> <body><! CDATA I think the following needs to be done as a minimum to complete the task: * Remove all RCs in GitHub release tab (both plenum and node) * Add changelog (manually) to every release in plenum and node.  ></body> </Action>
<Action id="60972" issue="34212" author="andkononykhin" type="comment" created="2019-06-13 15:42:59.0" updateauthor="andkononykhin" updated="2019-06-13 15:42:59.0"> <body><! CDATA The following has been done: * rc tags - removed in both  indy-plenum|https://github.com/hyperledger/indy-plenum/tags  and  indy-node|https://github.com/hyperledger/indy-node/tags  * release notes - attached to  releases|https://github.com/hyperledger/indy-node/releases  for indy-node only * release notes - fixed in few places in indy-node and sovrin, PRs: **  https://github.com/hyperledger/indy-node/pull/1347  ** https://github.com/sovrin-foundation/sovrin/pull/177  ></body> </Action>
<Action id="61010" issue="34212" author="ashcherbakov" type="comment" body="Release notes for sovrin token plugins have also been added (for the latest release only)." created="2019-06-14 11:39:45.0" updateauthor="ashcherbakov" updated="2019-06-14 11:39:45.0"/>
