<Issue id="39894" key="INDY-2099" number="2099" project="10303" reporter="vladimirwork" assignee="vladimirwork" creator="vladimirwork" type="10004" summary="Load script can&apos;t mint 8000000000*100000 sovatoms" priority="2" resolution="10000" status="10001" created="2019-05-17 09:35:38.0" updated="2019-05-24 09:52:01.0" resolutiondate="2019-05-24 09:51:45.0" votes="0" watches="2" workflowId="52789"> <description><! CDATA Steps to Reproduce: 1. Get the latest load script: {code:java} sudo pip3 install -e 'git+https://github.com/hyperledger/indy-node.git@master#egg=subdir&subdirectory=scripts/performance' {code} 2. Try to run this: {code:java} perf_processes.py -g persistent_transactions_genesis -m t -n 1 -y one -s 000000000000000000000000Trustee1 -s 000000000000000000000000Trustee2 -s 000000000000000000000000Trustee3 -s 000000000000000000000000Trustee4 --ext "{\"payment_addrs_count\":1,\"addr_mint_limit\":800000000000000,\"mint_by\":800000000000000,\"payment_method\":\"sov\",\"plugin_lib\":\"libsovtoken.so\",\"plugin_init\":\"sovtoken_init\",\"trustees_num\":4}" -k payment -c 1 -b 1 -l 10 {code}  Actual Results: {noformat} 2019-05-16 14:15:45,358|INFO|libindy.py|indy.libindy.native.sovtoken.api|	src/api/mod.rs:556 | Parsed GET_UTXO response, received: " {\"paymentAddress\":\"pay:sov:2geuA6zB56hCsdS3UMwZMGVPQMHdWmvmREY6bt6PPzWJReRVfp\",\"source\":\"txo:sov:LJJjXLVFh3iQHWqyEBHn1fddT516Gt1shinxR3NiLySQu9t7Qy4w5ibpzuKSaa3vMvScCRnARPHsE7L6WBkY5M21oWpZZeb8c3FDCC7R5Sp2qgyWyWX2euxeMH3\",\"amount\":800000000000000,\"extra\":\"\"} " 2019-05-16 14:15:45,358|INFO|libindy.py|indy.libindy.native.indy.commands|	src/commands/mod.rs:156 | PaymentsCommand command received 2019-05-16 14:15:45,359|INFO|libindy.py|indy.libindy.native.payments_command_executor|	src/commands/payments.rs:196 | ParseGetPaymentSourcesResponseAck command received 2019-05-16 14:15:45,359|INFO|perf_client_fees.py|LoadClient_0|_payment_address_init done 2019-05-16 14:15:45,359|INFO|perf_client_fees.py|LoadClient_0|_post_init done 2019-05-16 14:15:45,359|INFO|perf_client.py|LoadClient_0|call _req_generator.on_pool_create 2019-05-16 14:15:45,359|INFO|perf_client_fees.py|LoadClient_0|_on_pool_create_ext_params done {'max_cred_num': 1, 'addr_txos': {'pay:sov:2geuA6zB56hCsdS3UMwZMGVPQMHdWmvmREY6bt6PPzWJReRVfp':  ('txo:sov:LJJjXLVFh3iQHWqyEBHn1fddT516Gt1shinxR3NiLySQu9t7Qy4w5ibpzuKSaa3vMvScCRnARPHsE7L6WBkY5M21oWpZZeb8c3FDCC7R5Sp2qgyWyWX2euxeMH3', 800000000000000) }, 'pool_fees': {}, 'payment_method': 'sov'} 2019-05-16 14:15:45,359|INFO|perf_client.py|LoadClient_0|call pregen_reqs 2019-05-16 14:15:45,359|ERROR|perf_client.py|LoadClient_0|generate req error Cannot choose from an empty sequence Traceback (most recent call last): File "/usr/lib/python3.5/random.py", line 253, in choice i = self._randbelow(len(seq)) File "/usr/lib/python3.5/random.py", line 230, in _randbelow r = getrandbits(k)          # 0 <= r < 2**k ValueError: number of bits must be greater than zero  During handling of the above exception, another exception occurred:  Traceback (most recent call last): File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_client.py", line 183, in gen_signed_req req_data, req = await self._req_generator.generate_request(self._test_did) File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_req_gen.py", line 73, in generate_request req_data = self._gen_req_data() File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_req_gen_payment.py", line 61, in _gen_req_data return self._gen_input_output(1, self._payment_fees) File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_req_gen_payment.py", line 40, in _gen_input_output to_address = random.choice(addrs) File "/usr/lib/python3.5/random.py", line 255, in choice raise IndexError('Cannot choose from an empty sequence') IndexError: Cannot choose from an empty sequence 2019-05-16 14:15:45,360|INFO|perf_client.py|LoadClient_0|stopped 2019-05-16 14:15:45,361|INFO|perf_processes.py|__main__|load_run stopping... 2019-05-16 14:15:45,361|INFO|perf_processes.py|__main__|load_run stopped 2019-05-16 14:15:45,366|ERROR|base_events.py|asyncio|Task exception was never retrieved future: <Task finished coro=<LoadClient.run_test() done, defined at /home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_client.py:117> exception=IndexError('Cannot choose from an empty sequence',)> Traceback (most recent call last): File "/usr/lib/python3.5/random.py", line 253, in choice i = self._randbelow(len(seq)) File "/usr/lib/python3.5/random.py", line 230, in _randbelow r = getrandbits(k)          # 0 <= r < 2**k ValueError: number of bits must be greater than zero  During handling of the above exception, another exception occurred:  Traceback (most recent call last): File "/usr/lib/python3.5/asyncio/tasks.py", line 239, in _step result = coro.send(None) File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_client.py", line 138, in run_test await self.pregen_reqs() File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_client.py", line 220, in pregen_reqs await self.gen_signed_req() File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_client.py", line 190, in gen_signed_req raise e File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_client.py", line 183, in gen_signed_req req_data, req = await self._req_generator.generate_request(self._test_did) File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_req_gen.py", line 73, in generate_request req_data = self._gen_req_data() File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_req_gen_payment.py", line 61, in _gen_req_data return self._gen_input_output(1, self._payment_fees) File "/home/ubuntu/.local/lib/python3.5/site-packages/perf_load/perf_req_gen_payment.py", line 40, in _gen_input_output to_address = random.choice(addrs) File "/usr/lib/python3.5/random.py", line 255, in choice raise IndexError('Cannot choose from an empty sequence') IndexError: Cannot choose from an empty sequence {noformat}  Expected Results: Script should be able to mint 8000000000*100000 sovatoms and run the payment load after that.   ></description> </Issue>
