<Action id="64754" issue="42490" author="toktar" type="comment" created="2019-10-16 15:31:19.0" updateauthor="toktar" updated="2019-10-16 15:31:19.0"> <body><! CDATA *PoA:*  Consider the following cases: 1. Catchup before view change. View change messages should be stashed during catchup and unstashed after this. 2. After starting the view change, we have a quorum of checkpoints before the view change. Ex: NodeX.last_orderd = (0, 50); other_nodes.last_orderd = (0, 250), All nodes start view change  NodeX received quorum of checkpoints  101, 200  and start catchup last_oredered, 200 . View change messages should be stashed during catchup and unstashed after this and NodeX will finish the view change. 3. After starting the view change, we have a quorum of checkpoints from the next view. Ex: NodeX.last_orderd = (0, 150); other_nodes.last_orderd = (0, 250), All nodes start view change  NodeX received quorum of checkpoints  201, 300  and start catchup last_oredered, 300 . View change and 3pc messages should be stashed during catchup After this waiting_for_new_view = False for finish the view change. Unstash view change messages, unstash 3pc messages.  In fact, last 2 items about cases when catchup finished with primary changing or not.  ></body> </Action>
<Action id="64765" issue="42490" author="sergey.khoroshavin" type="comment" created="2019-10-17 12:01:21.0" updateauthor="sergey.khoroshavin" updated="2019-10-17 12:01:38.0"> <body><! CDATA It looks like it makes sense to implement simpler and safer solution instead - request missing NewView messages (INDY-2224).  Other ideas: - always react with ViewChangeAck to ViewChange messages _before_ checking whether they should be processed, discarded or stashed. That way even if we're in a long catch up new primary would be able to get our witness of other nodes ViewChange messages - upon receiving NewView message if it requires ordering from checkpoint that we don't have - start catch up immediately, don't wait for checkpoints  ></body> </Action>
<Action id="64912" issue="42490" author="ashcherbakov" type="comment" created="2019-10-24 07:50:48.0" updateauthor="ashcherbakov" updated="2019-10-24 07:50:48.0"> <body><! CDATA We are not going to do this since it looks dangerous to change checkpoints during view change. The issue with infinite view changes is addressed and fixed by the following: 1) INDY-2224 2) Sending InstanceChanges to the next view by timeout + Instances Changes by Nodes who finished view change but can not order (freshness checks) + regular view changes due to Aardvark  ></body> </Action>
