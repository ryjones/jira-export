<Action id="66002" issue="43107" author="ashcherbakov" type="comment" created="2019-12-03 10:33:22.0" updateauthor="ashcherbakov" updated="2019-12-03 10:34:01.0"> <body><! CDATA *PoA:* 1) Do not fill and check BLS sigs twice (in `blsMultiSig` and `blsMultiSigs`). Keep it in `blsMultiSigs` only. This should reduce the time spend for BLS up to 50%. 2) Do not do unnecessary decoding/encoding calling `bls_from_str` for a public key every time we do verification 3) Do not validate BLS sigs for already ordered Commits (as part of View Change re-ordering) 4) Do not verify individual BLS sigs in commits: - Verify aggregated BLS sig only when receive a quorum of commits (in assumption that in most of the cases it's valid) - If aggregated BLS sig is invalid, then validate each individual COMMIT  5) Validate BLS sigs on Primary only - Do not validate BLS sig for Commits on non-Primary replicas - Do not calculate aggregated BLS sig on non-Primary replicas while Ordering - If a Primary doesn't have requests to be sent when it's time for the next Batch, but there are requests on the previous batch ordered (so that BLS aggregated sig is not calculated for them yet), then send a Freshness empty batch now (doesn't wait till the next Freshness check).  Items 1-3 must be done in this ticket. Items 4 and 5 can be done in a follow-up ticket.  ></body> </Action>
<Action id="66111" issue="43107" author="ashcherbakov" type="comment" body="https://jira.hyperledger.org/browse/INDY-2309 is created for Items 4 and 5." created="2019-12-05 13:28:25.0" updateauthor="ashcherbakov" updated="2019-12-05 13:28:25.0"/>
<Action id="66112" issue="43107" author="ashcherbakov" type="comment" created="2019-12-05 13:33:15.0" updateauthor="ashcherbakov" updated="2019-12-05 13:40:14.0"> <body><! CDATA *Changes* * Items 1-3 are implemented  *PRs* *  https://github.com/hyperledger/indy-plenum/pull/1423  - Items 1 and 3 * https://github.com/hyperledger/indy-plenum/pull/1425 - Item 2  *Version* * Items 1 and 3: Plenum 1.12.1.dev971, Node 1.12.1.dev1152 * Items 2: TBD  *Risk* * Low  *Recommendation for QA* - run load test, get and compare BLS verification metrics (BLS_VALIDATE_COMMIT_TIME, BLS_VALIDATE_PREPREPARE_TIME) ** it may make sense to run and compare metrics for Items 1,3 only, and for all Items (builds 1152 and TBD) to check how Item2 improved situation and how expensive base58 serialization is. - make sure that load tests for adding/demoting/restartiong nodes pass - make sure that load tests for BLS key rotation pass  ></body> </Action>
<Action id="66152" issue="43107" author="sergey.khoroshavin" type="comment" created="2019-12-06 13:56:45.0" updateauthor="sergey.khoroshavin" updated="2019-12-06 13:56:45.0"> <body><! CDATA *Versions* sovtoken 1.0.6~dev128 indy-node 1.12.1~dev1154 indy-plenum 1.12.1~dev974   ></body> </Action>
<Action id="66194" issue="43107" author="anikitindsr" type="comment" created="2019-12-10 10:48:22.0" updateauthor="anikitindsr" updated="2019-12-10 10:51:13.0"> <body><! CDATA After small performance investigations:  (After 2 hours from load_test begining) h3. With BLS changes: {quote}{color:#0747a6}PROCESS_COMMIT_TIME : 34151 samples, 290.08 seconds total, 0.02/8.49/39.05 ms min/avg/max, 7.18 stddev{color}  {color:#0747a6}PROCESS_PREPARE_TIME : 34152 samples, 7.85 seconds total, 0.01/0.23/5.15 ms min/avg/max, 0.55 stddev{color} {color:#0747a6} BLS_VALIDATE_COMMIT_TIME : 229264 samples, 274.67 seconds total, 0.00/1.20/31.99 ms min/avg/max, 3.85 stddev{color} {color:#0747a6} BLS_UPDATE_COMMIT_TIME : 1423 samples, 3.23 seconds total, 1.11/2.27/4.63 ms min/avg/max, 0.90 stddev{color} {quote} h3. Without BLS changes: {quote}{color:#0747a6}PROCESS_COMMIT_TIME : 28847 samples, 408.46 seconds total, 0.02/14.16/59.18 ms min/avg/max, 11.01 stddev{color} {color:#0747a6} PROCESS_PREPARE_TIME : 28848 samples, 8.09 seconds total, 0.01/0.28/6.69 ms min/avg/max, 0.78 stddev{color} {color:#0747a6} BLS_VALIDATE_COMMIT_TIME : 193776 samples, 390.80 seconds total, 0.00/2.02/39.29 ms min/avg/max, 6.25 stddev{color} {color:#0747a6} BLS_UPDATE_COMMIT_TIME : 1202 samples, 4.09 seconds total, 1.95/3.40/6.00 ms min/avg/max, 1.05 stddev{color} {quote} As we can see from results we have almost 2 times performance increasing for processing commit messages.  Also we have the same situation on the 18th hour of load test: {quote}{color:#0747a6}{{PROCESS_COMMIT_TIME : 32640 samples, 280.24 seconds total, 0.02/8.59/56.84 ms min/avg/max, 7.31 stddev}} {{BLS_VALIDATE_COMMIT_TIME : 220720 samples, 265.20 seconds total, 0.00/1.20/50.64 ms min/avg/max, 3.89 stddev}}{color} {quote}    ></body> </Action>
