<Action id="46564" issue="31379" author="sergey.khoroshavin" type="comment" created="2018-06-26 17:13:07.0" updateauthor="sergey.khoroshavin" updated="2018-06-26 17:13:07.0"> <body><! CDATA Tried two more cases: 1) MSG_LEN_LIMIT=768k, Max3PCBatchSize=10000 (current default) 2) MSG_LEN_LIMIT=128k (current default), Max3PCBatchSize=1000 In both cases pool stopped writing with same symptoms (equal ledgers, but new transactions are not accepted until restart)  Logs retrieved, going to investigate further.  ></body> </Action>
<Action id="46662" issue="31379" author="sergey.khoroshavin" type="comment" created="2018-06-28 10:31:47.0" updateauthor="sergey.khoroshavin" updated="2018-06-28 10:44:48.0"> <body><! CDATA During investigation of two more failure cases it was found that: 1) Large PREPREPARE after view change were delivered to non-primary nodes, which means that increasing MSG_LEN_LIMIT did help 2) First PREPREPARE after view change was large enough to make dynamic validation take significant amount of time (>5 seconds) on master replica, so it was sent later compared to PREPREPAREs from backups, which were sent almost immediately after view change 3) Backup replices ordered first batch in just about 5-10 seconds, while just delivery of first PREPREPARE from master replica took >10 seconds. Also, dynamic validation of PREPREPARE on non-primary replicas in master instance took another 5 seconds. 4) Given above timings first batch in master instance should have been ordered in >25 seconds, but by that time backup instances ordered enough batches so that monitor found master thoughput severely degraded, which triggered another view change. 5) When new view change ended there were even more transactions in first PREPREPARE, so everything repeated.  Conclusions: 1) When increasing max batch size MSG_LEN_LIMIT should be increased as well (probably it should be some function of batch size) 2) Thoughput measurements by monitor should be windowed, with window length based on maximum allowed latency, this should be addressed in  INDY-1435|https://jira.hyperledger.org/browse/INDY-1435  3) Dynamic validation time on master instance should be taken into account by monitor somehow, one possible approach is  INDY-34|https://jira.hyperledger.org/browse/INDY-34    ></body> </Action>
