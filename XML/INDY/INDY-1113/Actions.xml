<Action id="41189" issue="27264" author="spivachuk" type="comment" created="2018-03-05 14:26:26.0" updateauthor="spivachuk" updated="2018-03-05 17:14:44.0"> <body><! CDATA *Problem state:*  The behavior was correct. After setting delay on VIEW_CHANGE_DONE messages processing to 60 seconds at 11:12 {{Node1}} failed to complete any view change. It started view change to {{view_no=5}} after reception the propagate primary quorum number of VIEW_CHANGE_DONE with {{view_no=5}} from other nodes. It failed to complete view change to {{view_no=5}} in time, so it sent INSTANCE_CHANGE with {{view_no=6}}. Then {{Node1}} gathered quorum number of INSTANCE_CHANGEs with {{view_no=6}} and started view change to {{view_no=6}}. It failed to complete view change to {{view_no=6}} in time too, so it sent INSTANCE_CHANGE with {{view_no=7}}. However, {{Node1}} did not gather the quorum number of INSTANCE_CHANGE with {{view_no=7}}. So it did not even start view change to {{view_no=7}}. Correspondingly, no timer for view change completion was started.  After integration tests related to this case had been written, faced â€‹intermittent failures of the new test verifying that a disconnected node with a lagged view pulls up its view on re-connection ({{test_disconnected_node_with_lagged_view_pulls_up_its_view_on_reconnection}}). Found that these intermittent failures were caused by incorrectness of the procedures of node disconnection and reconnection that are used in tests. After these procedures had been corrected, the new test specified above became stably passing but one of the existing tests ({{test_6_nodes_pool_cannot_reach_quorum_with_2_disconnected}}) became stably hanging up. During investigation of the last test hang-ups, faced an error with a not retrieved exception of a future related to Indy SDK. However, the fix of this error did not resolve the issue with the test hang-ups. Made a workaround in this test to avoid hang-ups.  *Changes:* - Added a test verifying that a view change is restarted each time when the previous one is timed out. - Added a test verifying that a disconnected node with a lagged view accepts the current view from the other nodes on re-connection. - Corrected the procedures of node disconnection and reconnection in tests. - Removed a workaround patch which had become unnecessary from {{start_stopped_node}} function in tests. - Corrected existing tests according to the fixes specified above. - Fixed the cause of a potential error with a not retrieved exception of a future in {{sdk_get_replies}} function. - Corrected test helpers for Indy SDK. - Added a workaround to avoid hang-ups of {{test_6_nodes_pool_cannot_reach_quorum_with_2_disconnected}}.  *PRs:* - https://github.com/hyperledger/indy-plenum/pull/551 - https://github.com/hyperledger/indy-node/pull/591  *Version:* - indy-node 1.3.325-master - indy-plenum 1.2.260-master  *Risk factors:* - Nothing is expected.  *Risk:* - Low  *Covered with tests:* - {{test_multiple_view_change_retries_by_timeouts}} - {{test_disconnected_node_with_lagged_view_pulls_up_its_view_on_reconnection}}  ></body> </Action>
<Action id="41239" issue="27264" author="vladimirwork" type="comment" body="Integration tests&apos; changes are added. The pool behavior was correct in this case." created="2018-03-06 09:58:01.0" updateauthor="vladimirwork" updated="2018-03-06 09:58:01.0"/>
