<Action id="30213" issue="20365" author="krw910" type="comment" body="Linked to INDY-765" created="2017-08-25 16:33:55.0" updateauthor="krw910" updated="2017-08-25 16:33:55.0"/>
<Action id="30216" issue="20365" author="krw910" type="comment" created="2017-08-25 16:38:38.0" updateauthor="krw910" updated="2017-08-25 16:38:38.0"> <body><! CDATA  ~ashcherbakov  ~nage  ~stevetolman  ~danielhardman  This relates to INDY-765 where both need to be addressed in the same build.  ></body> </Action>
<Action id="30459" issue="20365" author="ashcherbakov" type="comment" created="2017-09-01 15:53:44.0" updateauthor="ashcherbakov" updated="2017-09-01 15:53:44.0"> <body><! CDATA  ~krw910   ~dsurnin  I think we need to discuss whether the feature in this ticket is really needed if INDY-765 is fixed.  ></body> </Action>
<Action id="30503" issue="20365" author="dsurnin" type="comment" created="2017-09-05 13:31:49.0" updateauthor="dsurnin" updated="2017-09-05 13:31:49.0"> <body><! CDATA  ~krw910   ~ashcherbakov   ~mzk-vct   After short team discussion we suggest to use mixed approach - leave message limit as is and add individual txn length limit.  INDY-765 fix allows to split long batches into several batches each fitted to message limit, so there should not be any changes.  Most of the txns' fields have fixed size, so we need to limit only variable sizing fields, such as name, raw, etc. We can do this on txn scheme level during the validation process for the needed fields only.     Question for discussion  Do we plan to set individual txn lengths via pool_config txn, see INDY-698 ?  ></body> </Action>
<Action id="30676" issue="20365" author="dsurnin" type="comment" created="2017-09-08 12:14:20.0" updateauthor="dsurnin" updated="2017-09-08 12:14:20.0"> <body><! CDATA individual fields length restrictions added  plenum 612b2c3ceeba38ac4087fd3aa9f45e0e1eff0de9  node 0b6e59abae8b923b580103beddc7a08182e9ef52     please note, following constraints were added  ALIAS_FIELD_LIMIT = 256 DIGEST_FIELD_LIMIT = 512 TIE_IDR_FIELD_LIMIT = 256 NAME_FIELD_LIMIT = 256 SENDER_CLIENT_FIELD_LIMIT = 256 HASH_FIELD_LIMIT = 256 SIGNATURE_FIELD_LIMIT = 512 JSON_FIELD_LIMIT = 5 * 1024 DATA_FIELD_LIMIT = 5 * 1024 NONCE_FIELD_LIMIT = 512 ORIGIN_FIELD_LIMIT = 128 ENC_FIELD_LIMIT = 16 RAW_FIELD_LIMIT = 5 * 1024 SIGNATURE_TYPE_FIELD_LIMIT = 16 BLS_KEY_LIMIT = 512 BLS_SIG_LIMIT = 512 BLS_MULTI_SIG_LIMIT = 512     these limits could be discussed and configured     no additional tests were added  ></body> </Action>
<Action id="30801" issue="20365" author="vladimirwork" type="comment" created="2017-09-13 12:02:58.0" updateauthor="vladimirwork" updated="2017-09-13 12:02:58.0"> <body><! CDATA Build Info: indy-node 1.1.134  Steps to Reproduce - Case 1: 0. Login as Trustee. 1. send CLAIM_DEF ref=16 signature_typectual Results: In 617 iterations, found prime 16588191782994323122975708446126707113022746136322835518069910531704777222371121307846835296695807547324646674696357625698228391623149616099004338627192875431052230317381749 In 129 iterations, found prime 15081128388203406640905998096007010940543334738547626084248744619521111357048790683330677838329326480880906221441703868983372143472554712293142273519416027407733726260127209 The claim definition was published to the Sovrin distributed ledger: Sequence number is 29. !__SIGNATURE_TYPE.PNG|thumbnail!   Expected Results: There should be an validation error (LIMIT=16). Claim definition should not be published.   Steps to Reproduce - Case 2: 0. Login as Trustee. 1. send SCHEMA name=Degree version=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 keys=undergrad,last_name,first_name,birth_date,postgrad,expiry_date  Actual Results: The following schema is published to the Sovrin distributed ledger...Sequence number is 30. !__VERSION.PNG|thumbnail!   Expected Results: We should add some validation (about 16 or 128 as max?) for "version" attribute, because now we can send 1024+ chars in it.   ></body> </Action>
<Action id="30921" issue="20365" author="vladimirwork" type="comment" body="General implementation is done. All bugs found are reported as separated ticket (INDY-852)." created="2017-09-15 13:13:38.0" updateauthor="vladimirwork" updated="2017-09-15 13:15:00.0"/>
<Action id="31256" issue="20365" author="danielhardman" type="comment" created="2017-09-28 21:23:13.0" updateauthor="danielhardman" updated="2017-09-28 21:23:13.0"> <body><! CDATA I am not sure I am understanding the fix fully. Are we waiting until a message arrives, and then running it through input validation, rejecting any message that has a field that exceeds the max size? If so, this helps, but it is not enough. A person could open a connection and begin streaming a message with a 10 TB field, and we would continue to try to buffer the incoming message until we ran out of memory, without ever getting to the point where the input validation is triggered.  Am I misunderstanding?  ></body> </Action>
<Action id="31265" issue="20365" author="dsurnin" type="comment" created="2017-09-29 09:18:26.0" updateauthor="dsurnin" updated="2017-09-29 09:18:26.0"> <body><! CDATA  ~danielhardman   First of all we check that incoming chunk of data is less than 128K. We do this on raw data without decoding.  After that we decode it and split on individual transactions.  Individual transactions are validated with field size, field types, values, etc validators. And the length field constants I talked about above are applied on this step.  This size 128K is hardcoded in config for now, but as far as I remember we have plans to make it configurable via special transaction.     ></body> </Action>
