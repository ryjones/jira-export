<Action id="25519" issue="17557" author="spivachuk" type="comment" body="Found that sometimes in case the primary of the master protocol instance is demoted, primary re-election is done for no protocol instances." created="2017-06-06 15:25:01.0" updateauthor="spivachuk" updated="2017-06-13 10:49:57.0"/>
<Action id="25553" issue="17557" author="spivachuk" type="comment" created="2017-06-06 17:10:38.0" updateauthor="spivachuk" updated="2017-06-13 10:50:31.0"> <body><! CDATA After 1 of 4 nodes has been demoted: * Sometimes it is possible to add nyms and then promote the demoted node back. Catch-up succeeds on the promoted node. After this it is also possible to add nyms. * Sometimes it is not possible to add new nyms and promote the demoted node back.  ></body> </Action>
<Action id="27418" issue="17557" author="lovesh" type="comment" body="We are moving away from election as part of INDY-13" created="2017-06-27 10:36:00.0" updateauthor="lovesh" updated="2017-06-27 10:36:00.0"/>
<Action id="27455" issue="17557" author="stevetolman" type="comment" body="Please re-verify if this is a bug or not." created="2017-06-27 20:56:07.0" updateauthor="stevetolman" updated="2017-06-27 20:56:07.0"/>
<Action id="27619" issue="17557" author="krw910" type="comment" body="Lovesh says we have moved away from this with INDY-13. Once we get a new master build can you retest this to see if it is valid anymore. You can assign it back to me with your results." created="2017-06-29 15:03:40.0" updateauthor="krw910" updated="2017-06-29 15:03:40.0"/>
<Action id="28272" issue="17557" author="krw910" type="comment" body="Blocked by INDY-406" created="2017-07-12 20:25:09.0" updateauthor="krw910" updated="2017-07-12 20:25:09.0"/>
<Action id="28335" issue="17557" author="slafranca" type="comment" created="2017-07-13 18:11:22.0" updateauthor="slafranca" updated="2017-07-13 18:20:46.0"> <body><! CDATA I tested this with  {code:java} indy-plenum=0.4.43 indy-anoncreds=0.4.12 indy-node=0.4.26 {code} The bug is not fixed.  There is a problem with shutting down the service on the node, this will be logged in a separate ticket.  For this ticket, follow the steps for demoting a primary.  ></body> </Action>
<Action id="29431" issue="17557" author="ashcherbakov" type="comment" body="Please check whether the issue is still reproduced." created="2017-08-04 07:44:39.0" updateauthor="ashcherbakov" updated="2017-08-04 07:44:39.0"/>
<Action id="29611" issue="17557" author="mzk-vct" type="comment" created="2017-08-09 15:50:27.0" updateauthor="mzk-vct" updated="2017-08-09 15:50:27.0"> <body><! CDATA Seems to be fixed. Failed to reproduce on {code} indy-plenum=1.0.79 indy-anoncreds=1.0.22 indy-node=1.0.77 {code}  ></body> </Action>
<Action id="29870" issue="17557" author="krw910" type="comment" created="2017-08-15 18:24:30.0" updateauthor="krw910" updated="2017-08-15 18:24:30.0"> <body><! CDATA  ~mzk-vct  I can still reproduce the second half of this ticket. The first part works fine if you shut off the service to the primary node. The second part fails where if I demote the primary node the election does not happen.  I have 4 nodes. Node1 starts as the primary.  I shut down its service and Node2 becomes the primary with Node3 in line to be the next primary.  I bring up Node1 so all 4 are working then demote Node2.  Node 3 does not become the primary and the pool stops taking transactions.  indy-plenum=1.0.95 indy-anoncreds=1.0.25 indy-node=1.0.105 sovrin=1.0.23  ></body> </Action>
<Action id="29963" issue="17557" author="dsurnin" type="comment" created="2017-08-17 16:30:17.0" updateauthor="dsurnin" updated="2017-08-17 16:30:17.0"> <body><! CDATA  ~krw910   ~mzk-vct   Today I tried to reproduce it with the latest master code on local machine. It looks like it works fine.      ~krw910   Could you please check it with the build from latest master source code?  ></body> </Action>
<Action id="30035" issue="17557" author="ozheregelya" type="comment" created="2017-08-21 12:22:00.0" updateauthor="ozheregelya" updated="2017-08-21 12:22:00.0"> <body><! CDATA *Build Info:*   indy-node 1.0.67   indy-anoncreds 1.0.22   indy-plenum 1.0.77   sovrin 1.0.23 OS/Platform: Ubuntu 16.04.2 LTS Setup: 4 nodes, 1 client  Steps to Reproduce:  1. Set up the pool of 4 nodes. 2. Look at node logs and check which node is primary: {code:java} root@ec5db9ad2c7d:/home/sovrin# tail -f .sovrin/Node4.log | grep "selected primary" 2017-08-21 10:20:51,542 | DISPLAY | primary_selector.py ( 283) | _startSelection | PRIMARY ELECTION: Node4:0 selected primary Node1:0 for instance 0 (view 0) 2017-08-21 10:20:51,543 | DISPLAY | primary_selector.py ( 283) | _startSelection | PRIMARY ELECTION: Node4:1 selected primary Node2:1 for instance 1 (view 0){code} => Node1 is primary, Node2 is primary backup. 3. Demote primary node, look at node logs.     In CLI: {code:java} sovrin@test> send NODE dest=Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv data={'alias': 'Node1', 'services':   }{code}     On node: {code:java} root@ec5db9ad2c7d:/home/sovrin# tail -f .sovrin/Node4.log | grep "selected primary" 2017-08-21 10:20:51,542 | DISPLAY | primary_selector.py ( 283) | _startSelection | PRIMARY ELECTION: Node4:0 selected primary Node1:0 for instance 0 (view 0) 2017-08-21 10:20:51,543 | DISPLAY | primary_selector.py ( 283) | _startSelection | PRIMARY ELECTION: Node4:1 selected primary Node2:1 for instance 1 (view 0) 2017-08-21 10:23:10,293 | DISPLAY | primary_selector.py ( 283) | _startSelection | PRIMARY ELECTION: Node4:0 selected primary Node2:0 for instance 0 (view 1){code} => Node2 is selected as primary, but primary backup is not selected. 4. Promote Node1 back. 5. Send any transaction to make sure that CLI works. => Transaction is successfully send. 6. Exit the CLI. 7. Open CLI again, connect to test, try to send any transaction. => transaction was not send.  *Actual Results:* - Primary backup was not selected after view change which was caused by demotion of primary node. - CLI does not send transactions after restart, following message appears after connection to test: {code:java} C2ej5UixyQsc63zGMphXscgJjmeqsLwpQqkyipijbLSE could not verify catchup reply CATCHUP_REP{'consProof':  '8RGnCTaL3UzRxP2nkPNAvaQPDRvPPnVfMzbs6wF4Tccc', '4wBxHrzkLnvoiSza5bP7Ypzawnpv3CejBQY7B2W21pTE', '8t6iko6iXv1Yqryo7tVSeCqJhRgMBCCa2fXx5PZLg3Hd', '5xizCdcGJoYwSK5swMP4BDasTxDbULANZozqM2M2uRo3' , 'ledgerId': 0, 'txns': {'5': {'reqId': 1503311243389437, 'type': '0', 'signature': '5X3rw8me9LAutxNhZwsyyQc2iHjDrVxCwF5xhahbHtJqhNnddRt2zoGuAgugthmV7sUHWi85kV8tfBNSRu3b7xqb', 'dest': '4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA', 'txnTime': 1503311243, 'identifier': 'V4SGRU86Z58d6TV7PBUe6f', 'data': {'services':   , 'alias': 'Node4'}}}} since Inconsistency: first root hash does not match. Expected hash: b'14175d8de952f91fb51e5a97a98bab4565e196ec47b2d109233cc96698b9cf6c', computed hash: b'91b838db75d37a99e393379ed4f9a23774a1e6052758301f6b68f33a2c2e1e8d'{code}  *Expected Results:* Both of primary and primary backup should be selected during view change. CLI and pool should work without errors.        ></body> </Action>
<Action id="30038" issue="17557" author="ashcherbakov" type="comment" body="Looks like a duplicate of INDY-463" created="2017-08-21 13:23:48.0" updateauthor="ashcherbakov" updated="2017-08-21 13:23:48.0"/>
<Action id="30072" issue="17557" author="krw910" type="comment" body=" ~ashcherbakov  You are correct that this ticket is the same as INDY-463 when dealing with demotion of a primary. However the bigger issue with INDY-463 is that if you demote Node 1 in a pool (The first node in the pool transactions file) you will never get the pool to function again if the entire pool is restarted. So they are similar to a point, but keep INDY-463 because it is dealing with a bigger issue around the new view change protocol. " created="2017-08-22 14:44:06.0" updateauthor="krw910" updated="2017-08-22 14:44:06.0"/>
<Action id="30073" issue="17557" author="ashcherbakov" type="comment" created="2017-08-22 15:09:42.0" updateauthor="ashcherbakov" updated="2017-08-22 15:09:42.0"> <body><! CDATA  ~krw910   Yes, we keep all the tickets, and we've been working on the fixes for the issues you mentioned in the scope of INDY-463 and INDY-446.  ></body> </Action>
<Action id="30316" issue="17557" author="andkononykhin" type="comment" created="2017-08-29 14:05:54.0" updateauthor="andkononykhin" updated="2017-08-29 14:05:54.0"> <body><! CDATA 1. original description of that task is not about any failure: demoting one of 4 nodes decrements f-value from 1 to 0 and it causes a decrement of number of protocol instances. So we should expect primary selection only for that single left instance (master one).  2. original problem of primary selection after any demotion relates to INDY-463 and should be fixed by the  PR-354|https://github.com/hyperledger/indy-plenum/pull/354   How to test: try different scenarios with nodes demotions     ></body> </Action>
<Action id="30363" issue="17557" author="vladimirwork" type="comment" created="2017-08-30 13:51:28.0" updateauthor="vladimirwork" updated="2017-08-30 13:51:28.0"> <body><! CDATA Build Info: indy-node 1.1.125  Steps to Validate - Case 1: 1. Install pool with 4 nodes (Node1 is primary). 2. Shut down Node1 (Node2 is primary).  3. Bring up Node1. 4. Demote Node2.  Actual Results: Primary node is elected normally. Pool works normally.  Steps to Validate - Case 2: 1. Set up the pool of 4 nodes. 2. Look at node logs and check which node is primary => Node1 is primary, Node2 is primary backup. 3. Demote primary node, look at node logs => Node2 is selected as primary, but primary backup is not selected. 4. Promote Node1 back. 5. Send any transaction to make sure that CLI works => Transaction is successfully send. 6. Exit the CLI. 7. Open CLI again, connect to test, try to send any transaction.  Actual Results: Pool works normally. Backup primary is not selected - it's ok according to Andrey K comment.  Steps to Validate - Case 3: 1. Set up the pool of 5 nodes. 2. Look at node logs and check which node is primary => Node2 is primary, Node3 is primary backup. 3. Demote primary node, look at node logs.  Actual Results: Main primary and backup primary are selected normally (screenshot). !Screenshot.PNG|thumbnail!   ></body> </Action>
