<Issue id="19759" key="INDY-571" number="571" project="10303" reporter="avkrishnan" assignee="nage" creator="avkrishnan" type="10001" summary="As a developer interacting with Indy, I need all error messages to have a crisp identifier" description="When developers code against the ledger (going through sovclient.py or its Rust equivalent), they need to know whether their calls succeed or not. If they fail, the error conditions need to be communicated. Today, that communication is textual (an error message). That&apos;s a good start, but it is problematic in three ways:1. It can&apos;t be localized.2. If the text changes, consuming code that analyzes the error will break.3. There are important challenges to reliably build a knowledge base or refer to an error condition in a forum or stack overflow posts.I believe the solution to this is to associate every error with a number or code that is held invariant across changes to text. (I actually recommend numbers, possibly with a textual prefix, because that is the easiest to pass across a C-callable interface cheaply.)This is not necessarily vital for warnings or less severe logged events -- only for errors." priority="3" resolution="10200" status="10001" created="2017-08-02 09:27:14.0" updated="2019-03-29 20:33:42.0" resolutiondate="2019-03-29 20:33:42.0" votes="0" watches="2" workflowId="19759"/>
