<Action id="34663" issue="23945" author="ashcherbakov" type="comment" created="2017-11-16 13:02:33.0" updateauthor="ashcherbakov" updated="2017-11-16 14:06:42.0"> <body><! CDATA Problem:  - there was a bug in create state proof code. It created the proof for the latest state, not the committed one. - so, in the situation above, when we send NYM txn to a pool of 2 nodes, it's applied to the state trie, but not committed (since we don't have consensus). If later on we send GET_NYM, it returns state proof for the uncommitted state trie root, so state proof validation fails, and we see the problem above.  PR: - https://github.com/hyperledger/indy-plenum/pull/449 - https://github.com/hyperledger/indy-node/pull/451  Build: 0.2.211  ></body> </Action>
<Action id="34707" issue="23945" author="vladimirwork" type="comment" created="2017-11-17 08:59:26.0" updateauthor="vladimirwork" updated="2017-11-17 08:59:26.0"> <body><! CDATA Build Info: indy-node 1.2.211  Steps to Validate: 1. Set up the docker pool of 4 nodes with 1.2.211 version of indy-node. 2. Install client with the same version (using other machine, not docker container created by client_for_pool_start.sh). 3. Copy content of /var/lib/indy/sandbox/pool_transactions_genesis and /var/lib/indy/sandbox/domain_transactions_genesis files from node machine to /.indy-cli/networks/sandbox/pool_transactions_genesis and /.indy-cli/networks/sandbox/domain_transactions_genesis on client machine. 4. Run the client. Verify that all works correctly by rending write and read transactions. => transactions are successfully written and read. 5. Stop services on n-1 nodes one-by-one and send read transaction after each node stopping.  Actual Results: There are no incorrect CLI messages. GET_NYM works normally with n-1 nodes stopped (returns the last commited NYM). !INDY-949.PNG|thumbnail!   ></body> </Action>
