<Action id="24490" issue="17092" author="devin-fisher" type="comment" created="2017-05-26 17:35:58.0" updateauthor="devin-fisher" updated="2017-05-26 18:45:27.0"> <body><! CDATA Did several experiments of size leading up to the 1.4 GB described below.     Size: 1.4 GB Padded create NYM request  (normal JSON for NYM create with 1.4 GB of whitespace after the JSON)     FROM Client: Sent in 50 sec     TO Node:  Received and replayed 20 min  Slowly consumed resources over the 20 min.   Standard CPU usage 25%  Started 150 MB and slowly consumed resources up to 1400 MB.   In the last minute, there was a spike in resources.   Jumped quickly to 3 GB to 4 GB.  Consistently used 150% CPU  ></body> </Action>
<Action id="24501" issue="17092" author="devin-fisher" type="comment" created="2017-05-26 18:46:49.0" updateauthor="devin-fisher" updated="2017-05-26 18:46:49.0"> <body><! CDATA Added a code file I used to send the transaction.  Any questions direct to me.  ></body> </Action>
<Action id="24502" issue="17092" author="devin-fisher" type="comment" body="When this gets looked at by a product team member please remember that most transactions are small but ClaimDef can be a lot larger (not sure how large). They contain (at the moment) RSA keys for each attratbute. So, if we want a one size fits all solution it must be large enough to fit what every we think is the largest allowable ClaimDef." created="2017-05-26 18:49:10.0" updateauthor="devin-fisher" updated="2017-05-26 18:49:10.0"/>
<Action id="27982" issue="17092" author="stevetolman" type="comment" created="2017-07-06 23:45:03.0" updateauthor="stevetolman" updated="2017-07-06 23:45:03.0"> <body><! CDATA Time box this to 1 hour.  Pick a reasonable maximum txn size - 128K - and reject all incoming txns that are larger than that size, with a good error message explaining why it was rejected.  ></body> </Action>
<Action id="29018" issue="17092" author="dsurnin" type="comment" body="I spent some time reviewing it and it looks like it does not fit into 1h timebox" created="2017-07-26 09:43:24.0" updateauthor="dsurnin" updated="2017-07-26 09:43:24.0"/>
<Action id="29025" issue="17092" author="lovesh" type="comment" body="The limit like 128K should neither be hardcoded in code nor be in a conifg file but in the config ledger, the initial limit should be present as a genesis txn." created="2017-07-26 10:37:30.0" updateauthor="lovesh" updated="2017-07-26 10:37:30.0"/>
<Action id="29027" issue="17092" author="dsurnin" type="comment" created="2017-07-26 11:48:59.0" updateauthor="dsurnin" updated="2017-07-26 11:48:59.0"> <body><! CDATA Document for discussion  https://docs.google.com/document/d/1aBqiORwMEcuhr9PHApQ1Vu7DxdR3IVhbLu3XiExNMsY/edit  ></body> </Action>
<Action id="29073" issue="17092" author="dsurnin" type="comment" created="2017-07-27 05:12:06.0" updateauthor="dsurnin" updated="2017-07-27 05:12:06.0"> <body><! CDATA From email from Daniel  For now, I don't want this to be configurable. I want something very simple and hard-coded. Later we can change it. I'd pick some limit that's big enough to receive a large schema doc, like maybe 128k or 64k. I agree with discarding it in zmq.    ></body> </Action>
<Action id="29320" issue="17092" author="danielhardman" type="comment" body="I agree with Lovesh&apos;s comment that it should be in the config ledger. The only reason I said to timebox to one hour and hardcode it was that I wanted it to be in the go-live build. Now that we&apos;re past go live, let&apos;s fix it right." created="2017-08-02 03:20:14.0" updateauthor="danielhardman" updated="2017-08-02 03:20:14.0"/>
<Action id="29339" issue="17092" author="ashcherbakov" type="comment" body=" ~danielhardman  I would suggest to finish and close this story (as it&apos;s quite complete), and create a new story to enhance this logic with a parameter from config ledger. I think having two small stories is better than a big one." created="2017-08-02 09:02:00.0" updateauthor="ashcherbakov" updated="2017-08-02 09:02:15.0"/>
<Action id="29345" issue="17092" author="dsurnin" type="comment" created="2017-08-02 12:00:11.0" updateauthor="dsurnin" updated="2017-08-02 12:00:11.0"> <body><! CDATA Implemented as config parameter  plenum c4b0de5d794d7700d3814ddb6b7cbc7503728242  node 4674f7a9b807d9cf558027c6f75f0e4dc5443da6     tests   stp_core/test/test_msg_len_validator.py|https://github.com/hyperledger/indy-plenum/commit/1b799a1fde972bcb0bb6a468c46efcb09fefea3a#diff-0a828705f5f9b2e666bf772ed1c7090c    stp_zmq/test/test_zstack.py|https://github.com/hyperledger/indy-plenum/commit/1b799a1fde972bcb0bb6a468c46efcb09fefea3a#diff-7ffd3624d890e8f700882833e216fc4c      ></body> </Action>
<Action id="29369" issue="17092" author="krw910" type="comment" created="2017-08-02 19:00:08.0" updateauthor="krw910" updated="2017-08-02 19:00:08.0"> <body><! CDATA  ~dsurnin  I have attached two files "LargeJson248" and "SmallJson100". The files are a send ATTRIB transaction and is just a key pair with a large string. The large file is 246k and the small file is 86k.  *Version* indy-plenum= 1.0.79 indy-anoncreds= 1.0.22 indy-node= 1.0.72 sovrin= 1.0.15  I did the following:  *Start sovrin CLI* sovrin connect test new key with seed 000000000000000000000000Trustee1 send NYM dest=CA6NHp54iKYu4zTEobYKy7  Now you can sent the contents of one of the files. The contents look like "send ATTRIB dest=CA6NHp54iKYu4zTEobYKy7 raw={"myname":"<large string>"}  On the smaller transaction is works just fine. On the larger transaction there are two issues: *{color:#d04437}Issue 1{color}* There was nothing in the CLI to tell me the transaction was not accepted. I could tell only because I did not get a message telling me it was added. I expected to see a message telling me that the transaction size was to large.  *{color:#d04437}Issue 2{color}* After sending the large transaction I get an exception when exiting the CLI {code} sovrin@test> exit Active wallet "Default-f882f8" saved (/home/ubuntu/.sovrin/wallets/test/default-f882f8.wallet) Goodbye. Traceback (most recent call last): File "/usr/local/bin/sovrin", line 78, in <module> run_cli() File "/usr/local/bin/sovrin", line 56, in run_cli looper.run(cli.shell(*commands)) File "/usr/local/lib/python3.5/dist-packages/stp_core/loop/looper.py", line 284, in __exit__ self.shutdownSync() File "/usr/local/lib/python3.5/dist-packages/stp_core/loop/looper.py", line 280, in shutdownSync self.loop.run_until_complete(self.shutdown()) File "/usr/lib/python3.5/asyncio/base_events.py", line 387, in run_until_complete return future.result() File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result raise self._exception File "/usr/lib/python3.5/asyncio/tasks.py", line 239, in _step result = coro.send(None) File "/usr/local/lib/python3.5/dist-packages/stp_core/loop/looper.py", line 270, in shutdown await self.runFut File "/usr/lib/python3.5/asyncio/futures.py", line 363, in __iter__ return self.result()  # May raise too. File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result raise self._exception File "/usr/lib/python3.5/asyncio/tasks.py", line 239, in _step result = coro.send(None) File "/usr/local/lib/python3.5/dist-packages/stp_core/loop/looper.py", line 218, in runForever await self.runOnceNicely() File "/usr/local/lib/python3.5/dist-packages/stp_core/loop/looper.py", line 202, in runOnceNicely msgsProcessed = await self.prodAllOnce() File "/usr/local/lib/python3.5/dist-packages/stp_core/loop/looper.py", line 147, in prodAllOnce s += await n.prod(limit) File "/usr/local/lib/python3.5/dist-packages/sovrin_client/client/client.py", line 188, in prod s = await super().prod(limit) File "/usr/local/lib/python3.5/dist-packages/plenum/client/client.py", line 240, in prod s = await self.nodestack.service(limit) File "/usr/local/lib/python3.5/dist-packages/stp_zmq/kit_zstack.py", line 109, in service c = await super().service(limit) File "/usr/local/lib/python3.5/dist-packages/stp_zmq/zstack.py", line 438, in service return self.processReceived(pracLimit) File "/usr/local/lib/python3.5/dist-packages/stp_zmq/zstack.py", line 548, in processReceived self.msgHandler((msg, frm)) File "/usr/local/lib/python3.5/dist-packages/sovrin_client/client/client.py", line 103, in handleOneNodeMsg super().handleOneNodeMsg(wrappedMsg, excludeFromCli) File "/usr/local/lib/python3.5/dist-packages/plenum/client/client.py", line 301, in handleOneNodeMsg self.reqRepStore.addReject(msg, frm) File "/usr/local/lib/python3.5/dist-packages/plenum/persistence/client_req_rep_store_file.py", line 73, in addReject self.delimiter, reason)) File "/usr/local/lib/python3.5/dist-packages/ledger/stores/directory_store.py", line 43, in appendToValue with open(self.keyFilePath(key), mode="a+") as f: IsADirectoryError:  Errno 21  Is a directory: '/home/ubuntu/.sovrin/data/clients/6qv9puak2PM7fE9Y1YVGNtTcJXesfzuf2Je8nE76pBf1/Requests/' {code}  ></body> </Action>
<Action id="29370" issue="17092" author="danielhardman" type="comment" body=" ~tharmon  and  ~mgbailey  and  ~TechWritingWhiz : here is a new config parameter. I think the intention is to make it undocumented, so I&apos;m not sure any of your plans or behaviors need to change. But I wanted you to be aware so you can ask questions as needed." created="2017-08-02 19:03:00.0" updateauthor="danielhardman" updated="2017-08-02 19:03:00.0"/>
<Action id="29604" issue="17092" author="dsurnin" type="comment" created="2017-08-09 15:08:54.0" updateauthor="dsurnin" updated="2017-08-09 15:08:54.0"> <body><! CDATA crash is fixed  notification is added     plenum 0a209bec9e6ba033380ad272b247ded0df2bed09  node 8273af9e1f475ec79ff199a9b3fc9c1ded8d73b6     additional test  plenum/test/cli/test_long_msg_err.py  ></body> </Action>
<Action id="29647" issue="17092" author="vladimirwork" type="comment" created="2017-08-10 11:09:40.0" updateauthor="vladimirwork" updated="2017-08-10 12:44:46.0"> <body><! CDATA Build Info: indy-node 1.0.87  Steps to Validate: 1. Send smaller transaction. 2. Send larger transaction. 3. Exit CLI.  Actual Results: Smaller transaction is successfully added. Larger transaction adding throws readable error. CLI exiting doesn't throw any exceptions.  Additional Info: Larger transactions sent by shakedown.py are also rejected:  Client EVemRztUB6TpbaTfBHwC4nmHgSjdVNoJEHw95JfaQacQ got msg from node Node4C: {'reqId': '', 'reason': "Message will be discarded due to InvalidMessageExceedingSizeException('Message len 500000294 exceeded allowed limit of 131072',)", 'identifier': '', 'op': 'REJECT'}.  ></body> </Action>
<Action id="29651" issue="17092" author="vladimirwork" type="comment" body=" !Screenshot.PNG|thumbnail! " created="2017-08-10 12:45:08.0" updateauthor="vladimirwork" updated="2017-08-10 12:45:08.0"/>
