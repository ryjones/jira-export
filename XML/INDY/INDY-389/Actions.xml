<Action id="28026" issue="19019" author="mzk-vct" type="comment" body="Ticket is blocked by discussion of solutions" created="2017-07-07 15:54:34.0" updateauthor="mzk-vct" updated="2017-07-07 15:54:34.0"/>
<Action id="28067" issue="19019" author="lovesh" type="comment" created="2017-07-10 05:46:06.0" updateauthor="lovesh" updated="2017-07-10 05:48:19.0"> <body><! CDATA Here is a proposal: We have been using *>2f* for CONSISTENCY_PROOF and LEDGER_STATUS quorum sizes. I now realise that they are incorrect. You need *>2f* for agreement before ordering since some replicas may vote one way or the other. But after requests have been ordered only a quorum of *f+1* is required, eg. Clients require *f+1* replies not *2f+1* replies. Since LEDGER_STATUS and CONSISTENCY_PROOF are communicating information derived from ordered requests, *f+1* is sufficient since we know that at least once correct node saw ordered the request which means *>=2f+1* nodes participated in consensus. This solves the problem where *<= 2f* nodes can crash simultaneously with their ledger being different from the non crashed ones or all nodes crash where the last orderable (*>2f* COMMITs) requests are ordered at *>=f+1* and *<2f+1* nodes. If more than *2f* nodes crash, leaving less than *f+1* nodes alive or less than *f+1* nodes with last ordered requests, then the nodes alive will revert remove entries from the ledger. The idea is to choose the *>f* nodes with the highest ledger and consider them to be the last ordered state.   This is fine as *<f+1* nodes had ordered the requests so a client could not have got sufficient replies for those requests and thus would not have considered them ordered.  Also one more change that needs to be made to processing LEDGER_STATUS is that a node should not start requesting/processing consistency proof as soon as it gets *>f* LEDGER_STATUS, it should either get from *>2f* or wait till a timeout.    ></body> </Action>
<Action id="28412" issue="19019" author="mzk-vct" type="comment" created="2017-07-14 15:52:16.0" updateauthor="mzk-vct" updated="2017-07-14 15:52:16.0"> <body><! CDATA Build numbers:  node==0.4.35 plenum==0.4.47  ></body> </Action>
<Action id="28807" issue="19019" author="mzk-vct" type="comment" body="PR https://github.com/hyperledger/indy-plenum/pull/295" created="2017-07-21 15:55:13.0" updateauthor="mzk-vct" updated="2017-07-21 15:55:13.0"/>
<Action id="28875" issue="19019" author="ashcherbakov" type="comment" body="A new PR: https://github.com/hyperledger/indy-plenum/pull/301" created="2017-07-24 07:57:54.0" updateauthor="ashcherbakov" updated="2017-07-24 07:57:54.0"/>
<Action id="28878" issue="19019" author="mzk-vct" type="comment" created="2017-07-24 08:53:50.0" updateauthor="mzk-vct" updated="2017-07-24 08:53:50.0"> <body><! CDATA PR 295 closed in favour of PR 301which has more simple implementation.  Some developmens from 295 can be useed then in refactoring.  ></body> </Action>
<Action id="28890" issue="19019" author="mzk-vct" type="comment" created="2017-07-24 12:52:54.0" updateauthor="mzk-vct" updated="2017-07-24 12:52:54.0"> <body><! CDATA h3. Pull requests merged, builds: node==0.4.60 plenum==0.4.73  ></body> </Action>
