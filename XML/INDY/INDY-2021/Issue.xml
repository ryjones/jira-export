<Issue id="38413" key="INDY-2021" number="2021" project="10303" reporter="andkononykhin" creator="andkononykhin" type="10004" summary="Dependency environment is shifted by pip package imports" priority="2" status="10200" created="2019-03-13 04:47:43.0" updated="2019-03-13 04:50:26.0" votes="0" watches="1" workflowId="50055"> <description><! CDATA Plenum and node imports pip for some routine. On Ubuntu 16.04 python3-pip depends on python-pip-whl package which installs set of python wheels:    {code:java} dpkg -L python-pip-whl  ...  /usr/share/python-wheels/requests-2.9.1-py2.py3-none-any.whl  /usr/share/python-wheels/pip-8.1.1-py2.py3-none-any.whl  /usr/share/python-wheels/six-1.10.0-py2.py3-none-any.whl  /usr/share/python-wheels/setuptools-20.7.0-py2.py3-none-any.whl  /usr/share/python-wheels/html5lib-0.999-py2.py3-none-any.whl  /usr/share/python-wheels/ipaddress-0.0.0-py2.py3-none-any.whl  /usr/share/python-wheels/packaging-16.6-py2.py3-none-any.whl  /usr/share/python-wheels/retrying-1.3.3-py2.py3-none-any.whl  /usr/share/python-wheels/colorama-0.3.7-py2.py3-none-any.whl  /usr/share/python-wheels/chardet-2.3.0-py2.py3-none-any.whl  /usr/share/python-wheels/distlib-0.2.2-py2.py3-none-any.whl  /usr/share/python-wheels/lockfile-0.12.2-py2.py3-none-any.whl  /usr/share/python-wheels/wheel-0.29.0-py2.py3-none-any.whl  /usr/share/python-wheels/pyparsing-2.0.3-py2.py3-none-any.whl  /usr/share/python-wheels/CacheControl-0.11.5-py2.py3-none-any.whl  /usr/share/python-wheels/progress-1.2-py2.py3-none-any.whl  /usr/share/python-wheels/urllib3-1.13.1-py2.py3-none-any.whl  /usr/share/python-wheels/pkg_resources-0.0.0-py2.py3-none-any.whl  ...  {code} Some of packages are used by plenum/node (e.g. packaging, six) but expected with other versions ( https://github.com/hyperledger/indy-plenum/blob/9edc3856219ac2506032aad293d82777a5497a28/setup.py#L48).   During import pip updates python search path (sys.path) in such a way that the wheels becomes more prioritized and plenum/node operates with wrong versions of the packages.     Options: # do not use pip (we use v.9.0.1 but 10.0 rejected any python API) # import all dependencies before any pip imports so necessary versions would be cached # keep dependencies in plenum/node repos as-is as vendor packages (example: https://github.com/pypa/pipenv/tree/master/pipenv/vendor)     ></description> </Issue>
