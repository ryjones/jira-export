<Action id="48876" issue="32840" author="lovesh" type="comment" created="2018-08-15 10:02:26.0" updateauthor="lovesh" updated="2018-08-15 10:02:26.0"> <body><! CDATA A simple solution is to iterate over keys of `IdrCache` (which is a key value store) and select all roles that are trustees; this check should be done at last step in dynamic validation (once we know each sender is a trustee). This is expensive but since such voting txns are rare it is not very bad. A better solution is to create a new key in `IdrCache` that keeps a count (or list if needed) of all trustee roles. This is done in `onBatchCommitted` of `IdrCache` where we check that if a NYM is being given a trustee role or an existing trustee role is being revoked (the existing trustee dids can be kept in memory, initialised on node start and updated accordingly). There has to be a migration script written for existing ledgers that creates such a key with correct value. A caveat of adding this logic `onBatchCommitted` is that any uncommitted txns that are adding/removing trustee role will not be considered. A more thorough solution would be to add more logic in `set`, `get` and `batchRejected` too.  ></body> </Action>
<Action id="48920" issue="32840" author="ashcherbakov" type="comment" created="2018-08-16 08:51:01.0" updateauthor="ashcherbakov" updated="2018-08-16 08:51:01.0"> <body><! CDATA I think we can go with the option to have a new key in `idr_cache` contains the latest (committed) number of trustees and updated on `onBatchCommitted`. I think that for the first version it may be enough to take into account only committed Trustee txns. In any case we can not expect any signatures and voting from the trustees being added, so it can be fine to not take them into account when checking multi-sig within a 3PC batch. We can add a feature on re-calculating the number of Trustees for uncommitted state later.  ></body> </Action>
