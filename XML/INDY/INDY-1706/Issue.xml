<Issue id="33941" key="INDY-1706" number="1706" project="10303" reporter="andkononykhin" assignee="andkononykhin" creator="andkononykhin" type="10002" summary="Explore and choose python dependency manager" priority="3" status="3" created="2018-09-20 10:05:42.0" updated="2019-07-30 14:12:33.0" votes="0" watches="1" workflowId="45257"> <description><! CDATA Indy projects should have more predicable and stable list of dependencies to make reproducible builds possible. We need some kind of lock file for all dependency tree to be sure that we can reproduce the env where we work well. But there is no such PEP that introduces thus no standard way here.  Keeping all that in mind I see several workarounds: * adapt legacy pip+virtualenv and use setup.py / requirements.txt for that purpose (hard to manage) * use custom solutions provided by newly appeared  (but already popular and widely discussed) dependency managers which provide promising improvements here **  pipenv|https://github.com/pypa/pipenv/  **  poetry|https://github.com/sdispater/poetry  **  hatch|https://github.com/ofek/hatch  ** ... (? other)  *Note*. Possibly it's not a time to do a final decision now since mentioned tools have a set of drawbacks no one is accepted by major part python community.  Useful articles: *  Python's New Package Landscape|http://andrewsforge.com/article/python-new-package-landscape/  *  Pipenv: promises a lot, delivers very little|https://chriswarrick.com/blog/2018/07/17/pipenv-promises-a-lot-delivers-very-little/   Also these docs should be taken into account to make a decision: *  PEP 517|https://www.python.org/dev/peps/pep-0517/  *  PEP 518|https://www.python.org/dev/peps/pep-0518/    ></description> </Issue>
