<Action id="62805" issue="41364" author="sergey.khoroshavin" type="comment" created="2019-08-12 15:50:14.0" updateauthor="sergey.khoroshavin" updated="2019-08-12 15:54:47.0"> <body><! CDATA *PoA* * Use audit ledger root hash as checkpoint digest * Always set checkpoints startSeqNo to 0 * Change internal representation (inside CheckpointService) of received checkpoints to dict (view_no, pp_seq_no, audit_digest) -> List node_alias  and simplify logic as much as possible ** for example it might not make sense to do stashing checkpoints from future view anymore * Make sure there is always at least one checkpoint stored in ConsensusSharedData * Temporarily change stable_checkpoint in ConsensusSharedData to tuple (view_no, pp_seq_no) (it can be changed back to plain number after INDY-1336 is implemented)  Almost every step is a separate small PR with tests fixed  ></body> </Action>
<Action id="63445" issue="41364" author="sergey.khoroshavin" type="comment" created="2019-08-30 16:14:40.0" updateauthor="sergey.khoroshavin" updated="2019-08-30 16:14:40.0"> <body><! CDATA *PR* https://github.com/hyperledger/indy-plenum/pull/1296 https://github.com/hyperledger/indy-plenum/pull/1304  *Changes made* * Audit ledger root hash is used as checkpoint digest * Checkpoints startSeqNo is set to 0 and no longer used * Internal representation of received checkpoints is changed as in PoA  PR (https://github.com/hyperledger/indy-plenum/pull/1317) with "make sure there is always at least one checkpoint stored" functionality was raised, however it turned out it is blocked by INDY-1336, so it was decided to move this into scope of INDY-1340  ></body> </Action>
