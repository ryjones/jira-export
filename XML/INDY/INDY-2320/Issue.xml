<Issue id="43802" key="INDY-2320" number="2320" project="10303" reporter="ashcherbakov" assignee="ashcherbakov" creator="ashcherbakov" type="10002" summary="A lagging node may use wrong N and F quorum values and never finish view change if there are NODE txns being processed" priority="3" resolution="10000" status="10001" created="2019-12-27 12:49:20.0" updated="2020-01-17 13:11:47.0" resolutiondate="2020-01-17 13:11:47.0" votes="0" watches="1" workflowId="57655"> <description><! CDATA *Issue* * Pool of 4 Nodes, viewNo=0 * Adding Node5 and demoting Node4 * Node 5 is committed on all nodes, Instance Change to view=1 is sent ** => N=5, F=1 on all nodes * Before view change is started, Node4 demotion is also committed, but on Nodes2, 3 and 5 only ** Node1: N=5, F=1 ** Nodes2, 3 ,5: N=4, F=1 * View Change to view=1 is started on all nodes * Nodes 2, 3, 5 finish View change using N-f=3 View Change messages in a NewView * Node1 receives NewView from the  Node2 and tries to verify it. As Node1's N=5, it expects N-F=4 ViewChange messages, while only 3 ViewChanges are there * So, Node1 can not finish View Change  *Possible Options for Fixes:* * Enhance changes done in the scope of INDY-2308 to finish View Change if a Node sees a quorum of equal NewView messages (not necessary verifiable). * Change the logic how and when we calculate N and F ** For example, update N and F not on every committed Node txn, but at the beginning of new View only. * Enhance Instance Change triggering logic to include N value into InstanceChanges, and start view change only if Nodes' N is equal to the one in the quorum of Instance Changes. * Do not allow 3PC batches to Pool Ledger with more than 1 txn * Allow only one NODE txn per view with adding/demoting * Start View Change immediately (without waiting for a quorum of Instance Changes) once a node is added or promoted. ** It may make sense to send Instance Change as well to propagate view change to lagged nodes.     ></description> </Issue>
