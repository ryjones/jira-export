<Action id="47234" issue="31407" author="sergey-shilov" type="comment" created="2018-07-11 17:01:00.0" updateauthor="sergey-shilov" updated="2018-07-17 13:57:53.0"> <body><! CDATA *Problem state / reason:*  Need to implement client stack restart if connections limit reached to allow new clients to connect.  *Changes:*  Client stack is restarted if connections threshold is reached and specified minimal time (configurable, should be greater than TIME_WAIT) is spent since previous client stack restart to avoid sockets overhead in TIME_WAIT or FIN_WAIT state. Connections tracking mechanism is based on monitor socket that reports events occurred on listener socket. Connections tracking and stack restart are implemented as separate features that may be enabled or disabled. NOTE: connections tracking must be enabled if stack restart is enabled as stack restart uses connections tracking mechanism for triggering of restart.  Both connections tracking and stack restart features are disabled by default.  *Committed into:*       https://github.com/hyperledger/indy-plenum/pull/799       https://github.com/hyperledger/indy-node/pull/814      indy-node 1.4.498-master  *Risk factors:*      Clients may not receive their replies.  *Risk:*      Medium  *Recommendations for QA:*  Set the following parameters in indy config file: _MAX_CONNECTED_CLIENTS_NUM = 1_  # connections limit _MIN_STACK_RESTART_TIMEOUT = 15  # seconds_ _MAX_STACK_RESTART_TIME_DEVIATION = 5_  _# seconds_  NOTE: client stack is restarted in time period {color:#333333}_ MIN_STACK_RESTART_TIMEOUT, MIN_STACK_RESTART_TIMEOUT + MAX_STACK_RESTART_TIME_DEVIATION _{color} since connections limit is reached.  Test several scenarios:  1) Enable only connections tracking: _TRACK_CONNECTED_CLIENTS_NUM_ENABLED = True._ Connect one client and check logs, "connections limit reached" should be reported. Then disconnect client, "connections number fell below the limit" should be reported.  2) Enable both connections tracking and stack restart: _TRACK_CONNECTED_CLIENTS_NUM_ENABLED = True, CLIENT_STACK_RESTART_ENABLED = True._ Connect one client and check logs, "connections limit reached" and "connections limit reached but too few time spent since client stack start" should be reported. Wait a bit more than sum of _MIN_STACK_RESTART_TIMEOUT and MAX_STACK_RESTART_TIME_DEVIATION,_ than check logs, "Going to restart client stack" and stack restart messages should be reported.  3) Enable both connections tracking and stack restart. Connect one client and check logs, "connections limit reached" and "connections limit reached but too few time spent since client stack start" should be reported. Disconnect client immediately and check logs, "connections number fell below the limit" and "client stack restart is not needed anymore" should be reported.  4) Enable both connections tracking and stack restart, set _MAX_CONNECTED_CLIENTS_NUM_ not so high (100, 300...), other parameters leave as default. Run pool under heavy load periodically reaching and exceeding connections limit, find out if there is some strange behaviour of nodes or clients.  5) Please check upgrade procedure. The _/etc/indy/indy.env_ file should be changed by migration script: * old value: CLIENT_CONNECTIONS_LIMIT=15360 * new value: CLIENT_CONNECTIONS_LIMIT=10000     ></body> </Action>
<Action id="47509" issue="31407" author="vladimirwork" type="comment" body="All cases are checked against 4 and 25 nodes pools. Need to be retested with new libindy with increased connection timeout against 25 nodes pool." created="2018-07-19 06:56:08.0" updateauthor="vladimirwork" updated="2018-07-19 06:56:08.0"/>
<Action id="47547" issue="31407" author="vladimirwork" type="comment" created="2018-07-19 16:08:38.0" updateauthor="vladimirwork" updated="2018-07-19 16:08:38.0"> <body><! CDATA Build Info: indy-node 1.5.514  Steps to Validate: 1) Enable only connections tracking: TRACK_CONNECTED_CLIENTS_NUM_ENABLED = True. Connect one client and check logs, "connections limit reached" should be reported. Then disconnect client, "connections number fell below the limit" should be reported.  2) Enable both connections tracking and stack restart: TRACK_CONNECTED_CLIENTS_NUM_ENABLED = True, CLIENT_STACK_RESTART_ENABLED = True. Connect one client and check logs, "connections limit reached" and "connections limit reached but too few time spent since client stack start" should be reported. Wait a bit more than sum of MIN_STACK_RESTART_TIMEOUT and MAX_STACK_RESTART_TIME_DEVIATION, than check logs, "Going to restart client stack" and stack restart messages should be reported.  3) Enable both connections tracking and stack restart. Connect one client and check logs, "connections limit reached" and "connections limit reached but too few time spent since client stack start" should be reported. Disconnect client immediately and check logs, "connections number fell below the limit" and "client stack restart is not needed anymore" should be reported.  4) Enable both connections tracking and stack restart, set MAX_CONNECTED_CLIENTS_NUM not so high (100, 300...), other parameters leave as default. Run pool under heavy load periodically reaching and exceeding connections limit, find out if there is some strange behaviour of nodes or clients.  5) Check upgrade procedure. The /etc/indy/indy.env file should be changed by migration script:  old value: CLIENT_CONNECTIONS_LIMIT=15360 new value: CLIENT_CONNECTIONS_LIMIT=10000  Actual Results: Client stack restart works as expected in all cases. Also additional testing will be performed in scope of INDY-1496.  ></body> </Action>
