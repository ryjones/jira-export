<Issue id="17571" key="INDY-164" number="164" project="10303" reporter="lovesh" assignee="danielhardman" creator="lovesh" type="10002" summary="Revisit ledger serialisation (Design/research task)" priority="3" resolution="10000" status="10001" created="2017-06-06 16:12:34.0" updated="2019-03-29 20:32:36.0" resolutiondate="2019-03-29 20:32:36.0" votes="0" watches="2" timeoriginalestimate="540" timeestimate="540" workflowId="17575"> <description><! CDATA Our current serialisation has some problems: # Does not differentiate between null and empty strings # Does not support versions # Mandates indicating each possible field in the serialised data, and indicating each absent field with an empty string. This is inefficient and can lead to errors.  Possible solutions # Use a standard serialisation protocol like Protobuf or Avro # Have the first byte or 2 of each transaction as a bitset with bits being set for the fields present in the transaction, (assumes a total order defined on the fields) and then the values follow the included fields.  In both cases we should have a ledger viewer script that can be used to pretty print the transactions from ledger, piping the output of ledger files to a deserialiser can be used to build a less like utility for the ledger   ></description> </Issue>
