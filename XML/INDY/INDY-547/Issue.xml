<Issue id="19735" key="INDY-547" number="547" project="10303" reporter="avkrishnan" assignee="ashcherbakov" creator="avkrishnan" type="10001" summary="When a validator node falls behind by more than 1 version (2 or more), it should be kicked out until it upgrades" description="Given there&apos;s a Sovrin Validator node that falls behind more than 1 version from the rest of the network, the network should collectively: # Kick out the node (automatically) that&apos;s behind until it upgrades# A Trustee (or the Steward of that node??) should be able to re-add the node back to the pool once it upgradesPoA:- Find a way to check that version of a node is below others for more than 1 (use NODE_UPGRADE txn?)- Find who checks that a particular node should be kicked out (the node itself, or the pool by some consensus)  Consider the following example: 4 nodes with versions 1.2.3, 1.2.2, 1.2.3, 1.2.1. Should we make sure that all nodes (even a node with 1.2.2) kicks out the node with version 1.2.1?- Find a time/place when we kick out a node (that is when we check that a version is too below): when we get NODE_UPGRADE txn, or at the startup, or check from time to time.- FInd how we kick out a node: just blacklist it?- Implement the proposed solution*Update:*On completion of each POOL_UPGRADE, each node checks whether other nodes are on an acceptable version by querying the ledger for NODE_UPGRADE txns, if they find they are not, they check if this POOL_UPGRADE can bring make node 1+ version, if yes they wait else not. Once they realise that some node is behind and they make an `OBSOLETE/OUTDATED` txn and once another node agrees that node has fallen behind on the upgrade, it also sends `OBSOLETE` txn.There needs to be configuration parameter specifying how long can a node stay outdated?" priority="3" resolution="10200" status="10001" created="2017-08-02 09:27:11.0" updated="2019-03-29 20:33:32.0" resolutiondate="2019-03-29 20:33:32.0" votes="0" watches="2" workflowId="19735"/>
