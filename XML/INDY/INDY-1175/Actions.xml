<Action id="42217" issue="27711" author="ashcherbakov" type="comment" body="Let&apos;s populate validator-info results from the code, not from the logs." created="2018-03-27 14:50:21.0" updateauthor="ashcherbakov" updated="2018-03-27 14:50:21.0"/>
<Action id="42294" issue="27711" author="anikitindsr" type="comment" created="2018-03-29 06:51:47.0" updateauthor="anikitindsr" updated="2018-05-03 13:02:42.0"> <body><! CDATA PoA: Host machine info  Hardware * HDD free space * RAM available * MBs used by node process * Node's data folder size Software * OS version * pip freeze output * all indy related packets versions                  {color:#d04437} (Done) {color} Current datetime and timezone Configuration  Config * Content of main config                                {color:#d04437} (Done) (In Additional info) {color} * Content of network config                            {color:#d04437} (Done)(In Additional info) {color} * Content of user config                                  {color:#d04437} (Done)(In Additional info) {color} Content of Genesis Transaction Files * indy.env                                                      {color:#d04437} (Done)(In Additional info) {color} * node_control.conf                                        {color:#d04437} (Done)(In Additional info) {color} * indy-node.service                                        {color:#d04437} (Done)(In Additional info) {color} * indy-node-control.service                            {color:#d04437} (Done)(In Additional info) {color} Extraction from logs and ledgers  * grep exception from journalctl                      {color:#d04437}(Done)  (In Additional info){color} * grep view change, catch up, shutdown, instance change from the last log file    {color:#d04437} (later){color} * systemctl status indy-node                            {color:#d04437} (Done)(In Additional info)  * systemctl status indy-node-control                  {color:#d04437} (Done)(In Additional info)  * Uptime                                                            * upgrade_log                                                    {color:#d04437} (Done)(In Additional info)  {color} * last N txns from pool ledger                             {color:#d04437} (Later)(In Additional info) {color} * last N txns from config ledger                           {color:#d04437} (Later)(In Additional info){color}  * last N txns from domain ledger                         {color:#d04437} (Later)(In Additional info){color}  * pool ledger size                                               {color:#d04437} (Done)(moved into Node info) {color} * config ledger size                                             {color:#d04437} (Done)(moved into Node info) {color} * domain ledger size                                           {color:#d04437} (Done)(moved into Node info) {color} Pool info   * Global pool settings * read-only mode * Nodes' connect/disconnect events for the last N min           {color:#d04437} (later){color} * Ping time to other nodes * Current quorum values * N value * f value * per action values * Reachable nodes * Unreachable nodes * Blacklisted nodes * List of Suspicious * Protocol *  * supported client versions * supported protocol versions * supported requests versions Node info  * name * last N txns from the pool ledger that belong to the current node only * current mode * metrics * view change status * instance_change msgs * waiting view_change_done msgs * catchup status * each ledger catchup status * last ledger_status msgs * waiting consistency_proof msgs * number of replicas * foreach replica * name * primary * root hashes * uncommitted txns count * uncommitted root hashes * watermarks * last_ordered * last_3pc key * info about stashed txns * total number of stashed txns * number of stashed checkpoints * min stashed PrePrepare * min stashed Prepare * min stashed Commit  ></body> </Action>
<Action id="43272" issue="27711" author="dsurnin" type="comment" body="Also it would be good to have the number of node restarts according to journalctl" created="2018-04-23 12:54:31.0" updateauthor="dsurnin" updated="2018-04-23 12:54:31.0"/>
<Action id="43391" issue="27711" author="anikitindsr" type="comment" created="2018-04-25 09:12:30.0" updateauthor="anikitindsr" updated="2018-04-25 09:12:30.0"> <body><! CDATA link to design:  validator_info|https://github.com/hyperledger/indy-node/blob/master/design/validator_info.md   ></body> </Action>
<Action id="43766" issue="27711" author="anikitindsr" type="comment" created="2018-05-03 13:11:37.0" updateauthor="anikitindsr" updated="2018-05-03 13:11:37.0"> <body><! CDATA Reason: - need to extend validator info  Changes: - extend validator info with appropriatted design: https://github.com/hyperledger/indy-node/blob/master/design/validator_info.md  Versions: indy-node: 1.3.398-master indy-plenum: 1.2.345-master  For QA; Previous comment describe all of implemented parameters which must be dumped in two ways: - additional info will dump while node starting. It consist of configs information and etc. - general info for usual case. Now, if validator-info tools were run without any parameters, than fully information would shown. If run "validator-info --short", than information would be in "old style"   ></body> </Action>
<Action id="43861" issue="27711" author="mgbailey" type="comment" created="2018-05-04 16:55:28.0" updateauthor="mgbailey" updated="2018-05-04 16:55:28.0"> <body><! CDATA Please make sure that there are no log-style lines written to the output: i.e. no "INFO" or "DEBUG" lines.  The --short output should be the default.  It should include all the information that is in the -v output in the current stable.  ></body> </Action>
<Action id="43940" issue="27711" author="ozheregelya" type="comment" created="2018-05-06 11:23:04.0" updateauthor="ozheregelya" updated="2018-05-06 11:23:04.0"> <body><! CDATA *Environment:* indy-node 1.3.403  *Reasons for Rejection:* Case 1: Following traceback appears at the end of running validator-info: {code:java} Traceback (most recent call last): File "/usr/local/bin/validator-info", line 731, in <module> sys.exit(main()) File "/usr/local/bin/validator-info", line 721, in main print(get_stats_from_file(file_path, args.verbose, args.json)) File "/usr/local/bin/validator-info", line 533, in get_stats_from_file with open(fpath) as f: TypeError: invalid file:  '/var/lib/indy/sandbox/node7_additional_info.json' {code}    Case 2: Part of data is duplicated. For short version: {code:java} Validator Node7 is running Validator DID: BM8dTooz5uykCbYSAAFwKNkYfT4koomBHsSWHTDtkjhW Verification Key: 4u9hRgKH6daKcEWb6x9zhsM1G6X93VoXSJHppaeJhdivrHWpKvVtUj9 Node Port: None Client Port: None Metrics: Uptime: 52 minutes, 4 seconds Total Ledger Transactions: 4107 Total Pool Transactions: 25 Read Transactions/Seconds: 0.00 Write Transactions/Seconds: 1.30 Reachable Hosts: 25/25 Unreachable Hosts: 0/25{code} ... {code:java} Validator unknown is running Validator DID: unknown Verification Key: unknown Node Port: None Client Port: None Metrics: Uptime: unknown Total Ledger Transactions: unknown Total Pool Transactions: unknown Read Transactions/Seconds: unknown Write Transactions/Seconds: unknown Reachable Hosts: unknown/unknown Unreachable Hosts: unknown/unknown{code} Similar for extended version (Software, Pool_info and Node_info sections).     Case 3: Parts of logs are still appear: {code:java} 2018-05-06 11:00:41,155 | DEBUG | validator-info ( 681) | main | Cmd line arguments: Namespace(basedir='/var/lib/indy/sandbox', json=False, log='/var/log/indy/validator-info.log', short=True, stdlog=False, verbose=False) 2018-05-06 11:00:41,156 | INFO | validator-info ( 719) | main | Reading file /var/lib/indy/sandbox/node7_info.json ... 2018-05-06 11:00:41,157 | DEBUG | validator-info ( 536) | get_stats_from_file | Data {'Hardware': {'HDD_all': '2637 Mbs', 'HDD_used_by_node': '2637 MBs', 'RAM_used_by_node': '514 Mbs', 'RAM_all_free': '7062 Mbs'}, 'Pool_info': {'Reachable_nodes':  'Node1', 'Node10', 'Node11', 'Node12', 'Node13', 'Node14', 'Node15', 'Node16', 'Node17', 'Node18', 'Node19', 'Node2', 'Node20', 'Node21', 'Node22', 'Node23', 'Node24', 'Node25', 'Node3', 'Node4', 'Node5', 'Node6', 'Node7', 'Node8', 'Node9' , 'Unreachable_nodes_count': 0, 'Unreachable_nodes':   , 'f_value': 8, 'Total_nodes_count': 25, 'Reachable_nodes_count': 25, 'Quorums': "{'checkpoint': Quorum(16), 'propagate_primary': Quorum(9), 'reply': Quorum(9), 'prepare': Quorum(16), 'view_change': Quorum(17), 'bls_signatures': Quorum(17), 'ledger_status_last_3PC': Quorum(9), 'ledger_status': Quorum(16), 'view_change_done': Quorum(17), 'election': Quorum(17), 'f': 8, 'commit': Quorum(17), 'timestamp': Quorum(9), 'observer_data': Quorum(9), 'consistency_proof': Quorum(9), 'propagate': Quorum(9), 'same_consistency_proof': Quorum(9)}", 'Blacklisted_nodes':   , 'Suspicious_nodes': '', 'Read_only': False}, 'Software': {'indy-node': '1.3.403', 'sovrin': '1.1.51', 'Indy_packages':  'hi indy-anoncreds 1.0.32 amd64 Anonymous credentials', 'hi indy-node 1.3.403 amd64 Indy node', 'hi indy-plenum 1.2.347 amd64 Plenum Byzantine Fault Tolerant Protocol', 'ii libindy-crypto 0.4.0 amd64 This is the shared crypto libirary for Hyperledger Indy components.', 'hi python3-indy-crypto 0.4.0 amd64 This is the official wrapper for Hyperledger Indy Crypto library (https://www.hyperledger.org/projects).', '' , 'Installed_packages':  'semver 2.7.9', 'sovrin 1.1.51', 'rlp 0.5.1', 'indy-node 1.3.403', 'Pygments 2.2.0', 'base58 1.0.0', 'ioflo 1.5.4', 'orderedset 2.0', 'sha3 0.2.1', 'setuptools 38.5.2', 'sortedcontainers 1.5.7', 'indy-plenum 1.2.347', 'timeout-decorator 0.4.0', 'python-dateutil 2.6.1', 'python-rocksdb 0.6.9', 'Charm-Crypto 0.0.0', 'pyzmq 17.0.0', 'indy-crypto 0.4.0-13', 'six 1.11.0', 'indy-anoncreds 1.0.32', 'jsonpickle 0.9.6', 'portalocker 0.5.7', 'psutil 5.4.3', 'libnacl 1.6.1', 'intervaltree 2.1.0' , 'OS_version': 'Linux-4.4.0-1055-aws-x86_64-with-Ubuntu-16.04-xenial'}, 'Protocol': {}, 'timestamp': 1525604416, 'response-version': '0.0.1', 'Node_info': {'Uncommitted_root_hashes': {}, 'Client_protocol': 'tcp', 'did': 'BM8dTooz5uykCbYSAAFwKNkYfT4koomBHsSWHTDtkjhW', 'Metrics': {'Delta': 0.4, 'avg backup throughput': 2.1788303154986712, 'instances started':  1028187.47344777, 1028187.47366069, 1028187.473844688, 1028187.474016361, 1028187.474250274, 1028187.474429558, 1028187.47460209, 1028187.474768239, 1028187.474990024 , 'master throughput': 2.2095107651995254, 'master throughput ratio': 1.0140811560600267, 'throughput': {'6': 2.1025905671761995, '8': 2.104306227919157, '3': 2.1063077814353015, '0': 2.2095107651995254, '2': 2.1165528660512036, '7': 2.122879826456821, '5': 2.114060890417075, '1': 2.646670703327902, '4': 2.2137136440574436}, 'average-per-second': {'write-transactions': 1.2979785090990041, 'read-transactions': 0.0}, 'ordered request durations': {'6': 1928.5732863559388, '8': 1927.000902340049, '3': 1925.1697381266858, '0': 1835.2479036841542, '2': 1915.8510354458122, '7': 1910.1410967609845, '5': 1918.109368741978, '1': 1532.1135322581977, '4': 1831.7635665684938}, 'Lambda': 60, 'master request latencies': {}, 'ordered request counts': {'6': 4055, '8': 4055, '3': 4055, '0': 4055, '2': 4055, '7': 4055, '5': 4055, '1': 4055, '4': 4055}, 'Node7 Monitor metrics:': None, 'client avg request latencies':  {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.45258887883702936 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.3778331768824158 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.4724663465957613 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.47476442370571786 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.45172960951134244 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.4730232721928429 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.4756037697548553 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.47105822361553257 }, {'V4SGRU86Z58d6TV7PBUe6f':  4055, 0.47521600550925985 } , 'total requests': 4055, 'uptime': 3124, 'transaction-count': {'config': 0, 'pool': 25, 'ledger': 4107}, 'Omega': 5}, 'Count_of_replicas': 9, 'Name': 'Node7', 'Config_ledger_size': 0, 'Uncommitted_txns': {'2':   , '0':   , '1':   }, 'View_change_status': {'VCDone_queue': {'Node24':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node15':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node14':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node11':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node5':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node10':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node7':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node16':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node12':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node4':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node21':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node3':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node6':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node8':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node1':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node22':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node19':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node23':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node25':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node13':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node2':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node17':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node9':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node20':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   , 'Node18':  'Node1',   0, 25, '6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy' ,  1, 52, 'GLQfx465ri7ynv6vkbenQpvDD97kzPeC7aAnNcrFnsGQ' ,  2, 0, 'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'   }, 'IC_queue': {}, 'View_No': 0, 'VC_in_progress': False}, 'Node_port': 9713, 'Catchup_status': {'Received_LedgerStatus': '', 'Last_txn_3PC_keys': {'2': {'Node24':  None, None , 'Node6':  None, None , 'Node15':  None, None , 'Node11':  None, None , 'Node10':  None, None , 'Node25':  None, None , 'Node13':  None, None , 'Node2':  None, None , 'Node23':  None, None , 'Node17':  None, None , 'Node16':  None, None , 'Node9':  None, None , 'Node4':  None, None , 'Node21':  None, None , 'Node3':  None, None }, '0': {'Node13':  None, None , 'Node17':  None, None , 'Node16':  None, None , 'Node9':  None, None , 'Node4':  None, None , 'Node1':  None, None , 'Node3':  None, None , 'Node25':  None, None }, '1': {'Node13':  None, None , 'Node17':  None, None , 'Node16':  None, None , 'Node9':  None, None , 'Node4':  None, None , 'Node3':  None, None , 'Node25':  None, None }}, 'Number_txns_in_catchup': {'2': 0, '0': 0, '1': 0}, 'Waiting_consistency_proof_msgs': {'2': None, '0': None, '1': None}, 'Ledger_statuses': {'2': 'synced', '0': 'synced', '1': 'synced'}}, 'Root_hashes': {'2': "b'GKot5hBsd81kMupNCXHaqbhv3huEbxAFMLnpcX2hniwn'", '0': "b'6YgcxFrcQpEXLdUHjNU7id36SMUCid4XmyjJXm3aJkSy'", '1': "b'7M1gNibf2gYPVLxBNsPvaBF1rAzB3j4mMK1CjFYx6eRm'"}, 'Pool_ledger_size': 25, 'Client_port': 9714, 'verkey': '4u9hRgKH6daKcEWb6x9zhsM1G6X93VoXSJHppaeJhdivrHWpKvVtUj9', 'Domain_ledger_size': 4107, 'Replicas_status': {'Node7:0': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node1:0'}, 'Node7:5': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node6:5'}, 'Node7:2': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node3:2'}, 'Node7:7': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node8:7'}, 'Node7:8': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node9:8'}, 'Node7:1': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node2:1'}, 'Node7:4': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node5:4'}, 'Node7:3': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node4:3'}, 'Node7:6': {'Watermarks': '4000:4300', 'Last_ordered_3PC':  0, 4055 , 'Stashed_txns': {'Stashed_checkoints': 0}, 'Primary': 'Node7:6'}}, 'Mode': 'participating', 'Node_protocol': 'tcp'}} {code}  ~mgbailey , we have separated ticket for this problem: INDY-1122. Should we put it to current or next sprint, or fix the problem in scope of this ticket?     *Enhancements:* 1. Need to add something like 'n/a' if the section is empty. Example: {code:java} "Total_nodes_count": 25  "Reachable_nodes_count": 25  "Unreachable_nodes":  "f_value": 8  "Suspicious_nodes":  "Read_only": False  "Unreachable_nodes_count": 0  {code} It's not obvious that there is no "Unreachable_nodes", also, hierarchy ("f_value" inside the "Unreachable_nodes") looks strange.  2. Some information, like configs and genesis txns looks excess.  May be it make sense to remove it from default validator-info output and put into the --extended mod, or to separated parameters (–configs, --genesis)?     ></body> </Action>
<Action id="44082" issue="27711" author="ozheregelya" type="comment" created="2018-05-08 16:20:39.0" updateauthor="ozheregelya" updated="2018-05-08 16:22:11.0"> <body><! CDATA Case 4:  Following errors appear every minute in node logs: {code:java} 2018-05-08 15:56:31,670 | ERROR | validator_info_tool.py ( 565) | dump_general_info | Error while dumping into json: TypeError('string indices must be integers',){code}  Steps to reproduce are unclear.  ></body> </Action>
<Action id="44127" issue="27711" author="ozheregelya" type="comment" created="2018-05-09 13:08:53.0" updateauthor="ozheregelya" updated="2018-05-09 13:09:17.0"> <body><! CDATA Case 5: On some nodes validator-info doesn't work at all with following error: {code:java} 2018-05-09 13:02:15,974 | DEBUG | validator-info ( 681) | main | Cmd line arguments: Namespace(basedir='/var/lib/indy/sandbox', json=False, log='/var/log/indy/validator-info.log', short=False, stdlog=False, verbose=False) 2018-05-09 13:02:15,975 | INFO | validator-info ( 719) | main | Reading file /var/lib/indy/sandbox/node15_info.json ... Traceback (most recent call last): File "/usr/local/bin/validator-info", line 731, in <module> sys.exit(main()) File "/usr/local/bin/validator-info", line 724, in main print("{}".format(os.linesep).join(create_print_tree(json.load(f_stats)))) File "/usr/lib/python3.5/json/__init__.py", line 268, in load parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw) File "/usr/lib/python3.5/json/__init__.py", line 319, in loads return _default_decoder.decode(s) File "/usr/lib/python3.5/json/decoder.py", line 339, in decode obj, end = self.raw_decode(s, idx=_w(s, 0).end()) File "/usr/lib/python3.5/json/decoder.py", line 357, in raw_decode raise JSONDecodeError("Expecting value", s, err.value) from None json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0){code} Sometimes it shows only configs content, without Pool Info section.  ></body> </Action>
<Action id="44315" issue="27711" author="anikitindsr" type="comment" created="2018-05-14 10:42:44.0" updateauthor="anikitindsr" updated="2018-05-14 10:42:44.0"> <body><! CDATA Fixed issue in previous comment. New version is: indy-node 1.3.412 indy-plenum 1.2.357  ></body> </Action>
<Action id="44342" issue="27711" author="zhigunenko.dsr" type="comment" created="2018-05-14 15:05:26.0" updateauthor="zhigunenko.dsr" updated="2018-05-14 15:05:26.0"> <body><! CDATA *Environment:* indy-node 1.3.412 indy-plenum 1.2.357  Actual results: 1) NodeX.log ( LogLevel=0) {code} 2018-05-14 11:47:26,613 | DEBUG    | validator_info_tool.py (  31) | wrap | Validator info tool fails to execute __sovrin_pkg_version because ImportError("No module named 'sovrin'",) {code}  2) _validator-info_ without options shows  {code} Node Port:        None Client Port:      None {code} despite content of _indy.env_  3) some empty fields in the end {code} "Extractions":  "node-control status":   "indy-node_status":   "upgrade_log":   "journalctl_exceptions":   "stops_stat":   None  {code}  4) _"Pool_ledger_size":  25_ shown twice   ></body> </Action>
<Action id="44350" issue="27711" author="mgbailey" type="comment" body="Please also check all flags for this command for proper functionality, especially --json, which should produce valid JSON for the output." created="2018-05-14 17:16:02.0" updateauthor="mgbailey" updated="2018-05-14 17:16:02.0"/>
<Action id="44811" issue="27711" author="anikitindsr" type="comment" created="2018-05-22 06:58:46.0" updateauthor="anikitindsr" updated="2018-05-22 06:58:46.0"> <body><! CDATA Versions: indy-node: 1.3.421-master indy-plenum: 1.2.367  ></body> </Action>
<Action id="44971" issue="27711" author="anikitindsr" type="comment" created="2018-05-23 12:24:39.0" updateauthor="anikitindsr" updated="2018-05-23 12:24:39.0"> <body><! CDATA Versions: indy-node: 1.3.424 indy-plenum: 1.2.368  ></body> </Action>
<Action id="44989" issue="27711" author="zhigunenko.dsr" type="comment" created="2018-05-23 15:15:25.0" updateauthor="zhigunenko.dsr" updated="2018-05-23 15:15:25.0"> <body><! CDATA *Environment:* indy-node: 1.3.424 indy-plenum: 1.2.368  *Actial results:* * no parameters - correct output * --json - output is valid JSON * -v - correct output (except mock "protocol" section and some notices below)  *Additional info:* * "node-control status": and "indy-node_status": may be empty while using Docker * "stops_stat": and "journalctl_exceptions": are unavailable now, it's requires some changes in installation process (INDY-1361) * --log option isn't working (INDY-1362)  ></body> </Action>
