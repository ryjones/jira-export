<Action id="49576" issue="32857" author="ckochenower" type="comment" created="2018-08-29 22:29:39.0" updateauthor="ckochenower" updated="2018-08-29 22:29:39.0"> <body><! CDATA Any objections to this approach as a solution for INDY-1597 - Automate running of Chaos experiments on a regular basis? I'm not exactly sure this approach is possible, but I believe it is.  ~krw910  and I discussed it and he says he likes it. I will proceed with a POC using a Jenkins Server hosted in the evernym-dev AWS account. If this new downstream jenkins job needs to be hosted elsewhere, I will need help moving it elsewhere. (edited) https://drive.google.com/file/d/1tsYGnp-g6IJGxUKbIxX3Akpa_zEH335P/view?usp=sharing  ></body> </Action>
<Action id="49577" issue="32857" author="ckochenower" type="comment" created="2018-08-29 22:51:36.0" updateauthor="ckochenower" updated="2018-08-29 22:53:08.0"> <body><! CDATA The proposed approach will need the following added to the chaosindy module:  clean_pool nscapture_pool record_on record_off  All other operations/primitives needed appear to already exist in the chaosindy module.  Perhaps the following or something similar would be needed as well:  upload_to_s3 notify_of_failure  ></body> </Action>
<Action id="49848" issue="32857" author="ckochenower" type="comment" created="2018-09-04 19:46:22.0" updateauthor="ckochenower" updated="2018-09-04 19:46:22.0"> <body><! CDATA Received feedback from Devin, Andrey K., Alex, and Sergey K. A "Simplified Chaos Experiment Automation" design is located here:  https://drive.google.com/file/d/12QM1-mq3Jf4s6lipJ7vCUWPu_IsHcbUb/view?usp=sharing  Please provide comments/feedback. I will get started on implementation assuming this draft is a good starting point.  ></body> </Action>
<Action id="51329" issue="32857" author="ckochenower" type="comment" created="2018-09-27 22:58:04.0" updateauthor="ckochenower" updated="2018-09-27 22:58:43.0"> <body><! CDATA A run.py script now exists in the chaosindy repo that allows CI/CD, QA, Dev workflows to run one or more chaos experiments. There are a number of TODOs documented in the README.md file that will make the run.py more useful. A pool reset (delete the ledger - start with a clean slate) is not yet available, but all experiments except the force-catchup-blocked-port experiment run back to back (one after the other) with no problems without "resetting" the pool between experiments.  {code}commit b241a8d3d7d26be9d6f02395d50cd31e5082011d Author: Corin Kochenower <corin.kochenower@evernym.com> Date:   Thu Sep 27 08:52:51 2018 -0600  Instrumentation required to automate experiment execution  - Add run.py script for batching/executing any/all experiments - Refactoring required due to changes in perf_processes load script  Signed-off-by: Corin Kochenower <corin.kochenower@evernym.com>{code}  The following...  {code} ./run.py pool1 --exclude "force-catchup-service-down,view-change-subversion"{code}  ...produces the following output in the "report" file:  {code}(chaostoolkit) ubuntu@KellyStableClientVirgina:/tmp/None-2018-09-27T14:18:09.21690710oqluf7$ tail -f report force-catchup-blocked-port: succeeded demote-replica: succeeded replica-selection: succeeded force-view-change: succeeded demote-promote: succeeded consensus-recovery: succeeded shrink-pool: succeeded{code}  ></body> </Action>
