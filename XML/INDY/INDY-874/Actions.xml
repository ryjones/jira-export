<Action id="31647" issue="21012" author="spivachuk" type="comment" created="2017-10-05 18:04:29.0" updateauthor="spivachuk" updated="2017-10-05 18:04:29.0"> <body><! CDATA Changed the user performing the migration that uses {{getConfig()}} (from {{root}} to {{sovrin}}).  The changes ate contained in the following pull request: https://github.com/hyperledger/indy-node/pull/378  ></body> </Action>
<Action id="31680" issue="21012" author="spivachuk" type="comment" created="2017-10-06 16:00:14.0" updateauthor="spivachuk" updated="2017-10-12 13:20:25.0"> <body><! CDATA To verify this fix: # Deploy a pool of the version 1.0.96 master in Docker. # Log in to any node machine. # Stop the node service. # Remove {{pool_transactions_sandbox_genesis}} file. # Override {{poolTransactionsFile}} configuration parameter in {{sovrin_config.py}} and rename the directory with the pool ledger correspondingly. # Start the node service and make sure that the node connects to other nodes in the pool and participates in consensus, i.e. the overridden parameter takes effect. # From CLI on the client machine send POOL_UPGRADE transaction to the version 1.1.156 and wait for all the nodes to be upgraded. # Verify that the node with the overridden parameter is connected to other nodes and participates in consensus. This will indicate that on this node the migration script has updated the format of the pool ledger to {{msgpack}} being used in the new version, hence the script found {{sovrin_config.py}} with the overridden parameter, hence the script searched for {{sovrin_config.py}} in the home directory of the user {{sovrin}}, not of the user {{root}}.  ></body> </Action>
<Action id="32037" issue="21012" author="vladimirwork" type="comment" created="2017-10-12 12:33:44.0" updateauthor="vladimirwork" updated="2017-10-12 12:33:44.0"> <body><! CDATA We have an issue with step 7:  Oct 12 12:10:14 d3d2f4c4907d env 2437 : The following packages have unmet dependencies: Oct 12 12:10:14 d3d2f4c4907d env 2437 :  indy-plenum : Depends: python3-msgpack-python (= 0.4.6-1build1) but it is not installable Oct 12 12:10:14 d3d2f4c4907d env 2437 : E: Unable to correct problems, you have held broken packages.  So it's unable to perform upgrade to versions with msgpack. !Screenshot.PNG|thumbnail!   ></body> </Action>
<Action id="32043" issue="21012" author="vladimirwork" type="comment" created="2017-10-12 14:36:19.0" updateauthor="vladimirwork" updated="2017-10-12 14:36:19.0"> <body><! CDATA Steps to Reproduce: 1. Deploy a pool of the version 1.0.96 master in Docker. 2. Log in to *node 4* machine. 3. Stop the node service. 4. Remove pool_transactions_sandbox_genesis file. 5. Override poolTransactionsFile configuration parameter in sovrin_config.py and rename the directory with the pool ledger correspondingly. 6. Start the node service and make sure that the node connects to other nodes in the pool and participates in consensus, i.e. the overridden parameter takes effect. 7. From CLI on the client machine send POOL_UPGRADE transaction to the version 1.1.156 and wait for all the nodes to be upgraded.  Actual Results: Upgrade to 1.1.156 is failed at all nodes. See screenshots and logs for additional info. !node1_journal.PNG|thumbnail!  !node4_journal.PNG|thumbnail!   ^node4_journalctl.txt    Expected Results: Upgrade should perform normally.   ></body> </Action>
<Action id="32044" issue="21012" author="ashcherbakov" type="comment" created="2017-10-12 14:42:40.0" updateauthor="ashcherbakov" updated="2017-10-12 15:43:45.0"> <body><! CDATA  ~spivachuk   ~VladimirWork  I think 1.0.96 is incorrect version for migration from. Although migration is written for version 96 -> 97, there were some fixes in further versions. Please try the version corresponding to MGL  ></body> </Action>
<Action id="32509" issue="21012" author="vladimirwork" type="comment" created="2017-10-16 13:30:10.0" updateauthor="vladimirwork" updated="2017-10-16 13:33:30.0"> <body><! CDATA Steps to Reproduce:  1. Deploy a pool of the version 1.0.67 master in Docker. 2. Log in to node 4 machine. 3. Stop the node service. 4. Remove pool_transactions_sandbox_genesis file. 5. Override poolTransactionsFile configuration parameter in sovrin_config.py and rename the directory with the pool ledger correspondingly. 6. Start the node service and make sure that the node connects to other nodes in the pool and participates in consensus, i.e. the overridden parameter takes effect. 7. From CLI on the client machine send POOL_UPGRADE transaction to the version 1.1.156 and wait for all the nodes to be upgraded.  Actual Results: Pool upgrade is failed due to migration script applying errors and falls into upgrade loop. See attachments for more info.  ^journalctl.txt   !874_journalctl_errors.PNG|thumbnail!  !874_pool_upgrade_loop.PNG|thumbnail!   ></body> </Action>
<Action id="32647" issue="21012" author="spivachuk" type="comment" created="2017-10-18 18:02:59.0" updateauthor="spivachuk" updated="2017-10-18 18:06:19.0"> <body><! CDATA The issue described in the previous comment from  ~VladimirWork  is also reproduced without overriding {{poolTransactionsFile}} config parameter and renaming the corresponding directory. So the upgrade from 1.0.67 to 1.1.156 on master fails in any case with the symptoms described in the previous comment. However, the fix made in scope of this ticket is just a copy of the hotfix made in stable branch (https://github.com/hyperledger/indy-node/pull/361). The hotfix in stable was verified and works correctly.  The issue with upgrade from 1.0.67 to 1.1.156 on master seems to be caused by a wide version jump. It includes 3 migrations at once. From the logs it is seen that the variable {{pool_transactions_file_base}} cannot be imported from the module {{plenum.config}} when the migration {{1_0_96_to_1_0_97.py}} is executed. This variable exists in indy-plenum version which indy-node 1.1.156 master depends on but does not exist in indy-plenum version which indy-node 1.0.67 master depends on. However, the migration {{1_0_96_to_1_0_97.py}} is executed when the new deb packages have already been installed and {{plenum.config}} loading seems to be triggered by {{helper_1_0_96_to_1_0_97.py}} which is run in a new process created by {{1_0_96_to_1_0_97.py}}. For the current moment we don't see why {{plenum.config}} from indy-plenum version which indy-node 1.0.67 master depends on is actually loaded.  The live pool was already upgraded using the same migration from stable - {{1_0_28_to_1_0_29.py}}. So on the live pool an upgrade with such version jump as from 1.0.67 to 1.1.156 on master will not take place. Taking this into account, the issue with upgrade from 1.0.67 to 1.1.156 on master seems not to be critical while further investigation of the issue may be time-consuming.  ~nage ,  ~krw910 , can we close this bug as "Won't Fix"?  ></body> </Action>
