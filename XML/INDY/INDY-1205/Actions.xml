<Action id="42197" issue="28184" author="sergey-shilov" type="comment" created="2018-03-27 10:04:48.0" updateauthor="sergey-shilov" updated="2018-03-27 10:04:48.0"> <body><! CDATA *Problem state / reason:*  See ticket description and ticket  INDY-1138|https://jira.hyperledger.org/browse/INDY-1138 .  *Changes:*  Added support of rocksdb. Now each key/value storage and hash storages are configurable.  Currently we use: * *Database library: rocksdb-5.8.8* * *Wrapper: python-rocksdb-0.6.9*  NOTE: according to comment in INDY-1138 we should use version of rocksdb higher than or equal to *4.13*, but canonical repos for Ubuntu 16.04 contain version *4.1*, so for now we build rocksdb deb package as 3rd party package. As we plan to migrate to Ubuntu 18.04 in future, we decided to use rocksdb version *5.8.8* as this version currently presented in Ubuntu 18.04 canonical repos. Current version of rocksdb wrapper (that is not a wrapper in fact as it is linked statically with rocksdb library) python-rocksdb is *0.6.9* that is fully compatible with *rocksdb-5.8.8*. Currently rocksdb build procedure gets rocksdb sources from sovrin's rocksdb fork:      https://github.com/evernym/rocksdb.git  For now sovrin's fork's master and original rocksdb master branches are fully synchronised (including git tags). Currently we build our package on *tag rocksdb-5.8.8*, used build flags: * _{color:#333333}PORTABLE=1{color}_ * _{color:#333333}EXTRA_CFLAGS="-fPIC"{color}_ * _{color:#333333}EXTRA_CXXFLAGS="-fPIC"{color}_  {color:#333333}Currently the only storage that uses rocksdb by default is state-timestamp storage. It is a new storage, so these changes are fully backward compatible and do not need the migration steps. *So now we don't migrate from leveldb to rocksdb, this step has been taken out of scope of this ticket.*{color}  *Committed into:*      https://github.com/hyperledger/indy-plenum/pull/561     https://github.com/hyperledger/indy-plenum/pull/580     https://github.com/hyperledger/indy-plenum/pull/583     https://github.com/hyperledger/indy-plenum/pull/584      https://github.com/hyperledger/indy-plenum/pull/586       https://github.com/hyperledger/indy-plenum/pull/589       https://github.com/hyperledger/indy-plenum/pull/590       https://github.com/hyperledger/indy-node/pull/619      https://github.com/hyperledger/indy-node/pull/623     indy-node 1.2.353-master  *Risk factors:*  Instability of {color:#333333}state-timestamp storage{color}, installation issues related to rocksdb library and wrapper, changing of configuration parameters related to storages if leveldb storages are already presented on disk,  *Risk:*      Medium.  *Recommendations for QA:*  Check installation of indy-node deb package, Change storages type to rocksdb, example from config.py:  ===============================  _{color:#333333}hashStore = \{{color}_ _{color:#333333}"type": HS_ROCKSDB{color}_ _{color:#333333}}{color}_  domainStateStorage {color:#f92672}= {color}KeyValueStorageType.Rocksdb  # etc.  ===============================  But don't change parameters to rocksdb if indy-node have already been started with leveldb, it may cause broken storages.  ></body> </Action>
<Action id="42246" issue="28184" author="vladimirwork" type="comment" created="2018-03-28 13:11:44.0" updateauthor="vladimirwork" updated="2018-03-28 13:11:44.0"> <body><! CDATA Build Info: indy-node 1.3.353  Things tried during regression testing:  1. With leveldb: 1.1. Installation. 1.2. Upgrade. 1.3. Txns of various type sending. 1.4. Load testing.  2. With rocksdb: 2.1. Switching to rocksdb. 2.2. Txns of various type sending. 2.3. Logs/journalctl/data files checking.  Full acceptance testing of rocksdb build will be done with new RC.  ></body> </Action>
