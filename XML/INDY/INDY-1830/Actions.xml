<Action id="67712" issue="35218" author="ashcherbakov" type="comment" body="Research results are tracked here: https://docs.google.com/document/d/1pme6fIpo3FcB7SLpxyyf28yOV5DOU27zgu3brZdvXpY/edit#" created="2020-01-29 10:01:58.0" updateauthor="ashcherbakov" updated="2020-01-29 10:01:58.0"/>
<Action id="67792" issue="35218" author="ashcherbakov" type="comment" created="2020-02-03 15:57:04.0" updateauthor="ashcherbakov" updated="2020-02-04 08:43:44.0"> <body><! CDATA First-priority questions: * Liveness: ** Does every node need to change quorum slices if the network got stuck? ** Is stuck state unstable? * Leader: ** Is it selected in every slot/ballot? ** Does it depend on quorum slices so that nodes with equal quorums select leaders deterministicly? * Is it possible to support custom transaction? * Is it possible to get rid of FEEs? * Is it possible to pay FEEs in other currencies (not lumens / Stellar tokens)? * Is Stellar with symmetric quorum slices same as PBFT-like protocols?  * What deployment options do we have,  ** Use existing Stellar nodes ** Create a dedicated federation of Sovrin nodes on existing code ** Create a dedicated federation of Sovrin nodes on forked/enhanced code with support of Indy txns * How many nodes do we need in deployment, and how quorum slices should look like? ** symmetric quorum slices ** asymmetric quorum slices  * How can we organize nodes joining and leaving the pool?    Â   ></body> </Action>
<Action id="67823" issue="35218" author="sergey.khoroshavin" type="comment" created="2020-02-05 17:44:11.0" updateauthor="sergey.khoroshavin" updated="2020-02-07 11:40:57.0"> <body><! CDATA Glossary: * *Liveness* - property of system that _something good eventually happens_ * *Stuck network* - network failing to satisfy *liveness* condition * *Stable stuck state* - stuck state which is persistent once entered, and requires manual intervention to make progress * *Unstable stuck state* - stuck state which has a chance of disappearing without manual intervention given long enough time  Answers to first-priority questions: * Liveness: ** Does every node need to change quorum slices if the network got stuck? ***  ALMOST CERTAIN  *No.* It looks like stuck state can result only if selected quorum slices are unsafe, and amount of nodes which need to adjust their quorum slices to make network safe can easily be less than amount of all (or even 2/3) nodes. ** Is stuck state unstable? ***  ALMOST CERTAIN  *Yes, it is unstable*, if quorum sets are safe. Nodes can neutralize stuck ballots indefinitely and try again, while nomination protocol tries to converge, and nomination protocol should eventually converge unless we miss something. ** Can stuck state happen if less than F (F_Liveness) nodes are malicious/crashed?  ***  ALMOST CERTAIN  *It doesn't seem so*, however if quorums are asymmetric and network is large it could be quite hard to calculate minimum possible dispensable set (in other words - set of nodes that cannot affect consensus if all other nodes are live and honest). ***  NOT CERTAIN  If there is some malicious scheduler that reorders inter-node messages over majority of network at his will, then *it might be possible* that network become stuck. I've seen mentions of such attack in randomized BFT protocols like Honeybadger (and they do have protection against it through common coin based on threshold crypto), as well as studies of Avalanche protocol. _We did not construct such an attack against Stellar protocol, and not sure if it is really possible - more research is needed here._ * Leader: ** Is it selected in every slot/ballot? ***  CERTAIN  *Yes, it does,* however if nomination protocol fails to converge on first round next leader is selected in addition to existing one, and eventually all nodes in a given quorum set could become leaders at the same time. ** Does it depend on quorum slices so that nodes with equal quorums select leaders deterministicly? ***  CERTAIN  *Yes,* nodes having equal quorum sets will select same leaders * Is it possible to support custom transaction? **  ALMOST CERTAIN  *No*, unless we fork Stellar code. It is possible to write custom data, but it is not possible to add custom validation. * Is it possible to get rid of FEEs? **  ALMOST CERTAIN  *No,* at least not without making our own fully independent deployment. Also code selecting transaction set for block is quite dependent on fees, especially when there is high load. * Is it possible to pay FEEs in other currencies (not lumens / Stellar tokens)? **  CERTAIN  *No,* documentation explicitely says that fees must be payed in lumens. It is possible to create tokens ("custom assets" in stellar terminology) though, but they need to be traded for lumens before becoming usable as fees. * Is Stellar with symmetric quorum slices has same safety and liveness properties as PBFT-like protocols? **  ALMOST-ALMOST CERTAIN  *Yes,* it seems like they share safety and liveness properties with PBFT if all nodes select their quorum sets as >2/3 of all validator nodes. Also, it looks like DoS strategy for PBFT-like protocols when it is sufficient to shoot down only one node (current leader) at one time is not possible in Stellar, since it allows multiple leaders and grows set of current leaders as long as nomination at some slot fails to converge, however it also seems like shooting down 2-3 leaders can still severely slow down network. * What deployment options do we have **  CERTAIN  *Create a dedicated federation of Sovrin nodes on forked code with support of Indy txns* * How many nodes do we need in deployment? **  CERTAIN  I'd use *25* as initial guess, but it really depends on performance and diversity requirements, as well as performance of Stellar protocol itself. * How quorum slices should look like? **  CERTAIN  *Symmetric is preferred* (there are some works proving that no asymmetric quorums can be more reliable than symmetric), however it might not be possible depending on answer for next question. * How can we organize nodes joining and leaving the pool? **  OPTION 1  Force all nodes (using special transaction, similar to existing node promotion/demotion mechanic in Indy) to have same quorum set, consisting of all validator nodes with threshold of 2/3. However, this rejects many properties of Stellar, including possibility to effectively demote some bad validators despite network being stuck. **  OPTION 2  Provide recommended quorum set through some side channel (like sovrin.org website?), but let stewards decide themselves whether they agree to apply it to configuration of their nodes. This makes it possible to repair stuck network much easier, however it adds risks that stewards could end up with some really unsafe configuration, since real quorum set configuration is up to them (and this is what production Stellar network seems to struggle with).  ></body> </Action>
<Action id="67908" issue="35218" author="sergey.khoroshavin" type="comment" body="Final results of research are available  here|https://docs.google.com/document/d/1pme6fIpo3FcB7SLpxyyf28yOV5DOU27zgu3brZdvXpY " created="2020-02-11 17:08:16.0" updateauthor="sergey.khoroshavin" updated="2020-02-11 17:08:16.0"/>
