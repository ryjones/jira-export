<Action id="41849" issue="28318" author="techwritingwhiz" type="comment" body="Second time around: Part of this has now been done to indy-sdk repo:Â https://github.com/hyperledger/indy-sdk/pull/583" created="2018-03-20 20:22:59.0" updateauthor="techwritingwhiz" updated="2018-03-20 20:22:59.0"/>
<Action id="43242" issue="28318" author="esplinr" type="comment" created="2018-04-20 21:20:13.0" updateauthor="esplinr" updated="2018-04-20 21:20:13.0"> <body><! CDATA As I have been digging into this project, I see some challenges with keeping the consumer documentation in the same repository as the code: * It makes it hard to release the documentation on a different cycle than the code (the documentation often trails the release of the product it documents, and is often corrected and updated later). * It makes it hard to publish the documentation to a documentation platform like Read-the-Docs, which is used by most Hyperledger projects. * It makes it hard for people to find the information in the documentation via a Google Search, whereas publishing to Read-the-Docs makes this easier.  By keeping documentation in a separate repository, we address these concerns. Consequences: * This could be a singly indy-docs repo, or a docs repo for each Indy repo (indy-sdk-repo). * The docs repo would also contain the release notes, which allows them to be updated out-of-band with the release. * The docs repo would also contain RFCs, which would replace the currently unused indy-rfc repo.  In this discussion, I am differentiating the documentation referenced by those using the project from the documentation used by the people working to improve the project (even though both groups are "developers"). Design and architecture documents and diagrams that are targeted to assist those improving the project should remain in the same repository as the code.  Let's make sure to have a conversation about this ticket before doing the work.  ></body> </Action>
