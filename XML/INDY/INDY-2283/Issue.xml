<Issue id="43133" key="INDY-2283" number="2283" project="10303" reporter="toktar" assignee="lbendixsen" creator="toktar" type="10004" summary="The MainNet problem with a config state." priority="1" resolution="10000" status="10001" created="2019-11-05 16:22:10.0" updated="2019-11-20 14:00:14.0" resolutiondate="2019-11-20 14:00:14.0" votes="0" watches="4" workflowId="56239"> <description><! CDATA _Environment_: MainNet - Sovrin - 1.1.58   Node - 1.10.0  _Steps to Reproduce_:  # *On August 19th* the MainNet was upgraded up to *indy-node 1.9.1*. This version contained a problem with a config state which reproduced on BuilderBet. We fixed and discussed the issue here: INDY-2211 # In order to not affect other Nets, it was suggested to not send any AUTH_RULE txns until the issue is fixed, that it until 1.9.2 is applied (see https://jira.hyperledger.org/browse/INDY-2211?focusedCommentId=63169&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-63169) # However, *On September 5th*, two *AUTH_RULES* transactions were written to Main Net (it still had indy-node 1.9.1 version with the issue) # *September 27th*. Only then MainNet was upgraded up to *indy-node 1.9.2* where the problem with config state for AUTH_RULE was fixed.  _Affects:_ New nodes can't be promoted.  _Options to solve the problem:_ # _Write a migration script and execute it on all nodes. Migrate current config state and change an audit ledger._ _Pros:_ Fixes the issues with adding new nodes and external auditability of config ledger _Cons:_ Change an audit ledger doesn't safe (high risk) and doesn't сorrespond to the ideology of the blockchain. # _Send AUTH_RULE transaction equal to the two AUTH_RULES wrote on September 5th, and clean-up config state (or the whole data) on Sicpa Node_ _Pros:_ Fixes the issues with adding new nodes; low risk _Cons:_ External audit of the config ledger for the period from 5 Sep till the two AUTH_RULE txns are re-sent will show different config states (it affects external audit only, and only for the given period of time). # _Take into account txn history when recovering state from the ledger for new nodes_ _Pros:_ Fixes the issues with adding new nodes and external auditability of config ledger; low risk _Cons:_ Not so good from Indy code point of view; requires either a hotfix release or waiting for the next stable release  It may make sense to do Option 2 right now regardless if we do Options 1 or 3 or not. This should allow to add new nodes to MainNet. If we think that the issues with auditability are real issues, we may do Options 1 or 3 in addition.  As for non-auditable config ledger for this 2 months: "non-auditbale" is probably too strong. It's auditable, but if someone will try to apply txns one by one to all ledger and states using the latest version of code, and compare the txn root hashes with the one in the corresponding audit txn, he will see a difference in config ledger root hash for that period of time. An excuse and workaround can be: at that time there was a different version of code (a different algorithm) which provided a bit different values. So, if someone will use that (1.9.1) version of code to apply txns, he will get exactly the same values as in audit ledger, and can see that we are not cheating.   ></description> </Issue>
