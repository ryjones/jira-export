<Action id="63448" issue="40611" author="sergey.khoroshavin" type="comment" created="2019-08-30 16:34:08.0" updateauthor="ashcherbakov" updated="2019-09-02 15:51:50.0"> <body><! CDATA A must have simulation test: * randomly schedule starts of batch ordering (I think 5 batches would be enough) * randomly schedule some view changes (3 is enough, but it should be possible for them to interleave with batch creation) * randomly simulate sequential view changes (new primary not responded?) so that P and Q contain batches from multiple views and view_no != pp_view_no * wait until all view changes are done and all batches are ordered (sim framework will take care of randomly delaying inter-node messages so that if there are flaws in messages processing they will be most certainly caught) * random delays in inter-node messages should affect ViewChange messages as well, so that asking ViewChanges from other nodes must be required. * make sure all nodes have same state and are in consensus  There might be need to create or mock BlsBft and BlsBftReplica in test start up code. Look for SimPool and TestLedgersBootstrap classes.  ></body> </Action>
<Action id="63449" issue="40611" author="sergey.khoroshavin" type="comment" created="2019-08-30 16:37:32.0" updateauthor="sergey.khoroshavin" updated="2019-08-30 16:37:32.0"> <body><! CDATA Nice to have tests: * catchup of some nodes intermingled with view change on others (may require improvements in catchup code) * addition/deletion of validator nodes intermingled with view change (will require improvements in LedgersBootstrap, may require improvements in PoolManager and catchup code)  ></body> </Action>
<Action id="63758" issue="40611" author="anikitindsr" type="comment" created="2019-09-13 16:12:01.0" updateauthor="anikitindsr" updated="2019-09-13 16:13:12.0"> <body><! CDATA For now we have: * simulation tests with real ordering (adding real requests into requests queue and forwarding them) * simulation test with view change injected into ordering process (Now used only 1 seed, because there is some issues related to INDY-1340 and view_change integration process)  All other cases will be implemented after INDY-1340 finalizing and in view_change integration phase.  Current tests was added in PR: https://github.com/hyperledger/indy-plenum/pull/1328  ></body> </Action>
