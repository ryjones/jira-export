<Action id="45396" issue="30681" author="toktar" type="comment" created="2018-06-01 09:27:56.0" updateauthor="toktar" updated="2018-06-07 15:13:15.0"> <body><! CDATA PRs: *  https://github.com/hyperledger/indy-plenum/pull/713  *  https://github.com/hyperledger/indy-node/pull/748       Presentation|https://docs.google.com/presentation/d/18mGt0tCd2YJhms2ZBGam8q5yqumbITmAILHd57WwUso/edit#slide=id.g3bbe9cf0dc_0_313  with description of the problems found and information about fixes.  ></body> </Action>
<Action id="45752" issue="30681" author="toktar" type="comment" created="2018-06-09 07:49:36.0" updateauthor="toktar" updated="2018-06-09 07:50:06.0"> <body><! CDATA *Problem reason:* * The client sends requests with different operation data, but the same identifier and reqID. As a result, there are different requests under the same key on different nodes. Which leads to a collision. No one of the requests will be recorded and the consensus will be lost.  *Changes:* * We fixed this by replacing the identifier and recID with a digest as a key in the following structures: ** Ordered messages ** PrePrepare messages ** Request ** Message Requests with Propagate ** Monitor.requestTracker ** Monitor.requests ** Node.requests ** Node.requestSender ** Transactions  *PR:* *  https://github.com/hyperledger/indy-plenum/pull/713  *  https://github.com/hyperledger/indy-node/pull/748  *  https://github.com/hyperledger/indy-plenum/pull/735   *Version:* * indy-node 1.3.449-master * indy-plenum 1.2.393-master  *Risk factors:* * The transactions can not be ordered in specific case such as after catch up. * Two requests with same identifier and requestId but different operation will not be recorded in the ledger.   *Risk:* * Normal  *Recommendations for QA:*  Changes made within this task affect processing of all kinds of requests. Integration tests cover standard cases, it may be worth checking the behavior under load. However, firstly need to check the case when two requests are sent in one time (preferably to different nodes) with the same identifier and requestID, but with a different field of the "operation". Both requests must correctly work out and record both transactions in the ledger.  ></body> </Action>
<Action id="45754" issue="30681" author="zhigunenko.dsr" type="comment" created="2018-06-09 13:18:57.0" updateauthor="zhigunenko.dsr" updated="2018-06-09 16:00:41.0"> <body><! CDATA *Environment:* indy-cli 1.4.0~562 indy-node 1.3.450  *Steps to Validate:* 1) setup pool 2) open two different CLI 3) run {code:java} ledger custom {"reqId":1,"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"type":"1","dest":"V4SGRU86Z58d6TV7PBU111"},"protocolVersion":1} sign=true {code} and {code:java} ledger custom {"reqId":1,"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"type":"105","dest":"V4SGRU86Z58d6TV7PBU111"},"protocolVersion":1} sign=true {code} from both CLI simultaneously 4) run  {code:java} perf_processes.py -n 1 -t 1 -c 10 -r 100 -g pool_transactions_genesis  {code} from 2 CLI  *Actual results:* All transactions have been written  ></body> </Action>
