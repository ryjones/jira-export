<Issue id="39223" key="INDY-2052" number="2052" project="10303" reporter="andkononykhin" creator="andkononykhin" type="10002" summary="Revise requests cleanup logic" priority="3" status="10405" created="2019-04-11 12:03:46.0" updated="2019-10-25 11:59:20.0" votes="0" watches="1" workflowId="52100"> <description><! CDATA Base statement: requests can be totally cleaned (no reference on node level) if request is not needed anymore #  if request is not needed anymore ** ordered by all replicas ** executed (replied) ** no propagate requests are expected (limited to checkpoint borders) # OR request is outdated ** older than thresholds (propagation and ordering)  Currently there are a set of places in code related to requests cleanup logic: # plenum/server/node.py:*_clear_request_for_txn* ** on any txn is written to ledger during catchup ** for master replica only # plenum/server/node.py:*executeBatch* ** on any txn is ordered and requests are replied # plenum/server/node.py:*check_outdated_reqs* ** (periodical) to filter and remove outdated requests # plenum/server/replica.py:*clear_requests_and_fix_last_ordered* ** on view change completes ** for backup replicas only # plenum/server/replica.py:*_gc* ** on new view starts  Additional related logic (the following methods clear related containers): # plenum/server/replica.py_:*catchup_clear_for_backup* ** (backups) on master's catchup complete # plenum/server/replica.py​_:*_remove_till_caught_up_3pc​* ** (backups) on quorum of checkpoints (catchup-like complete) ** (master) on catchup complete  Cases which seemed buggy or unclear: # any catchup: ** _clear_request_for_txn decrements counter for replicas that reference the request but it is called only once per txn and only in scope of master catchup ** once any catchup (master or backup) backups clear setPrePrepares and prePrepares containers that would prevent requests cleaning (replicas "unsubscribe" from requests referenced in theese containers) in _gc ** -> if catch up happens before gc: *** (both master and backup) invalid requests won't be cleaned since they can't be caught up *** (master and backup in case of cathup caused by missed checkpoints) ordered requests won't cleaned since they are not caught up # PrePrepares that are stashed by some reason in processPrePrepare: ** stashed in: pre_prepares_stashed_for_incorrect_time, prePreparesPendingFinReqs, prePreparesPendingPrevPP # PrePrepares that are reported as suspicious and are not stored in any replica's container (processPrePrepare)     ></description> </Issue>
