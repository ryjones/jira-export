<Action id="52128" issue="34225" author="anikitindsr" type="comment" created="2018-10-12 05:16:21.0" updateauthor="anikitindsr" updated="2018-10-12 05:16:21.0"> <body><! CDATA Reasons: * need to reuse payment addresses instead of generating count_of_payment_addresses == count_of_requests  Changes: * reuse payment addresses, but it works only for wait_resp sync option * for other sync mode old way will be used  Versions: * 1.0.14  PRs: *  https://github.com/hyperledger/indy-node/pull/965   Recomendation for QA: * as of now version for testing available as tar archive in load_script_dev_qa channel. After testing and merging PR pypi package will be created.        ></body> </Action>
<Action id="52168" issue="34225" author="nataliadracheva" type="comment" created="2018-10-12 15:37:58.0" updateauthor="nataliadracheva" updated="2018-10-12 15:44:25.0"> <body><! CDATA *Scenario 1:* *Build version:* indy-node: 1.6.631 indy-plenum: 1.6.564 *Test description:* 5 payments + fees/sec, mode = wait_resp *Steps to Reproduce:* 1. Run perf_processes.py from 1 AWS agent with the following parameters: {code:java} perf_processes.py -g pool_transactions_genesis -m t -n 1 -y wait_resp -s 000000000000000000000000Trustee1 -s 000000000000000000000000Trustee2 -s 000000000000000000000000Trustee3 -s 000000000000000000000000Trustee4 --ext "{\"payment_addrs_count\":100,\"addr_mint_limit\":1000000,\"payment_method\":\"sov\",\"plugin_lib\":\"libsovtoken.so\",\"plugin_init\":\"sovtoken_init\",\"trustees_num\":4,\"set_fees\":{\"1\":1,\"100\":1,\"101\":1,\"102\":1,\"113\":1,\"10001\":1}}" -k payment -c 5 -b 1 -l 1 {code}  *Expected results:*  The number of transactions in sovtoken ledger is: clients * load rate * test time in seconds.  Test time = 1170 s - 100 s for minting = 1070 s; load rate = 1; clients = 5. Expected count of transactions in sovtoken ledger = 5350 *Actual results:* Transactions in sovtoken ledger = 5079 (/)  *Scenario 2:* *Build version:* indy-node: 1.6.631 indy-plenum: 1.6.564 *Test description:* 20 payments + fees/sec, mode = wait_resp *Preconditions:* *Steps to Reproduce:* 1. Run perf_processes.py from 1 AWS agent with the following parameters: {code:java} perf_processes.py -g pool_transactions_genesis -m t -n 1 -y wait_resp -s 000000000000000000000000Trustee1 -s 000000000000000000000000Trustee2 -s 000000000000000000000000Trustee3 -s 000000000000000000000000Trustee4 --ext "{\"payment_addrs_count\":100,\"addr_mint_limit\":1000000,\"payment_method\":\"sov\",\"plugin_lib\":\"libsovtoken.so\",\"plugin_init\":\"sovtoken_init\",\"trustees_num\":4,\"set_fees\":{\"1\":1,\"100\":1,\"101\":1,\"102\":1,\"113\":1,\"10001\":1}}" -k payment -c 5 -b 1 -l 4 {code} *Expected results:*  The number of transactions in sovtoken ledger is: clients * load rate * test time in seconds.  Test time = 830 s - 100 s for minting = 730 s; load rate = 4; clients = 5. Expected count of transactions in sovtoken ledger = 14 600 *Actual results:* Transactions in sovtoken ledger = 3589 (x) *Additional info:* No errors in load script logs.  *Scenario 3:* *Build version:* indy-node: 1.6.631 indy-plenum: 1.6.564 *Test description:* 5 nyms + fees/sec, mode = wait_resp *Steps to Reproduce:* 1. Run perf_processes.py from 1 AWS agent with the following parameters: {code:java} perf_processes.py -g pool_transactions_genesis -m t -n 1 -y wait_resp -s 000000000000000000000000Trustee1 -s 000000000000000000000000Trustee2 -s 000000000000000000000000Trustee3 -s 000000000000000000000000Trustee4 --ext "{\"payment_addrs_count\":100,\"addr_mint_limit\":1000000,\"payment_method\":\"sov\",\"plugin_lib\":\"libsovtoken.so\",\"plugin_init\":\"sovtoken_init\",\"trustees_num\":4,\"set_fees\":{\"1\":1,\"100\":1,\"101\":1,\"102\":1,\"113\":1,\"10001\":1}}" -k nym -c 5 -b 1 -l 1 {code} *Expected results:* The number of transactions in sovtoken ledger is: clients * load rate * test time in seconds.  Test time = 730 s - 100 s for minting = 630 s; load rate = 1; clients = 5. Expected count of transactions in sovtoken ledger = 3150 Expected count of transactions in domain ledger = 3150 *Actual results:* Transactions in sovtoken ledger = 500 (x) Transactions in domain ledger = 500 (x) Other transactions are rejected (534) because of a lack of money and failed (13) because of the pool timeout.  *Scenario 4:* *Build version:* indy-node: 1.6.631 indy-plenum: 1.6.564 *Test description:* 5 nyms + fees/sec, mode = freeflow *Steps to Reproduce:* 1. Run perf_processes.py from 1 AWS agent with the following parameters: {code:java} perf_processes.py -g pool_transactions_genesis -m t -n 1 -y wait_resp -s 000000000000000000000000Trustee1 -s 000000000000000000000000Trustee2 -s 000000000000000000000000Trustee3 -s 000000000000000000000000Trustee4 --ext "{\"payment_addrs_count\":100,\"addr_mint_limit\":1000000,\"payment_method\":\"sov\",\"plugin_lib\":\"libsovtoken.so\",\"plugin_init\":\"sovtoken_init\",\"trustees_num\":4,\"set_fees\":{\"1\":1,\"100\":1,\"101\":1,\"102\":1,\"113\":1,\"10001\":1}}" -k nym -c 5 -b 1 -l 1 {code} *Expected results:* The number of transactions in sovtoken ledger is: clients * load rate * test time in seconds.  Test time = 2462 s - 100 s for minting = 2362 s; load rate = 1; clients = 5. Expected count of transactions in sovtoken ledger = 11810 Expected count of transactions in domain ledger = 11810 *Actual results:* Transactions in sovtoken ledger = 500 (x) Transactions in domain ledger = 500 (x) Other transactions are rejected (9620) because of a lack of money and failed (1042) because of the pool timeout.  Logs: s3://qanodelogs/indy-1737/load_script_14  ></body> </Action>
<Action id="52258" issue="34225" author="dsurnin" type="comment" created="2018-10-15 12:54:23.0" updateauthor="dsurnin" updated="2018-10-15 12:54:23.0"> <body><! CDATA it should be retested with version 1.0.13 also please note since fees and payments use the same addresses initial address count should be increased  it is possible to change mint strategy to have lots of txos for each address with 1 atom instead of 1 txo with all atoms - it will significantly increase number of concurrent reqs, but probably init time will be longer.  ></body> </Action>
<Action id="52311" issue="34225" author="ozheregelya" type="comment" body="The issue is reproduces on 1.0.13 version. Results of load script run (step 1 from Steps to Reproduce):  ^out.7x " created="2018-10-16 10:14:00.0" updateauthor="ozheregelya" updated="2018-10-16 10:14:00.0"/>
<Action id="52425" issue="34225" author="dsurnin" type="comment" created="2018-10-18 15:06:21.0" updateauthor="dsurnin" updated="2018-10-18 15:06:57.0"> <body><! CDATA payment responses were not parsed.  added response parsing and new parameter to ext config - mint_by  PR https://github.com/hyperledger/indy-node/pull/990  new script version is 16  ></body> </Action>
<Action id="52428" issue="34225" author="nataliadracheva" type="comment" created="2018-10-18 15:57:25.0" updateauthor="nataliadracheva" updated="2018-10-18 15:57:25.0"> <body><! CDATA *Scenario 1:* *Build version:* indy-node: 1.6.638 indy-plenum: 1.6.566 *Test description:* Run 5 payments + fees/sec *Steps to Reproduce:* 1. Run perf_processes.py from 1 client with the following parameters: {code:java} perf_processes.py -g  .indy-cli/networks/sandbox/pool_transactions_genesis -m t -n 1 -y freeflow -s 000000000000000000000000Trustee1 -s 000000000000000000000000Trustee2 -s 000000000000000000000000Trustee3 -s 000000000000000000000000Trustee4 --ext "{\"payment_addrs_count\":100,\"addr_mint_limit\":1000000,\"payment_method\":\"sov\",\"plugin_lib\":\"libsovtoken.so\",\"plugin_init\":\"sovtoken_init\",\"trustees_num\":4,\"set_fees\":{\"1\":1,\"100\":1,\"101\":1,\"102\":1,\"113\":1,\"10001\":1}}" -k payment -c 5 -b 1 -l 1 -d=/home/indy/logs -o=load_script_output.txt {code} *Expected results:* the script keeps sending requests after 500 (5*100) transactions are sent *Actual results:* the script keeps sending requests after 500 (5*100) transactions are sent *Additional info:* Rechecked scenario with nyms + fees, works fine as well.  ></body> </Action>
