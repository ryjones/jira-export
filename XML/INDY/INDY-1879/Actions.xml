<Action id="54086" issue="35655" author="toktar" type="comment" created="2018-11-30 16:15:22.0" updateauthor="toktar" updated="2018-12-03 09:03:13.0"> <body><! CDATA PoA:  Pool transactions are ordered so long because in process  ledger.getAllTxn() is called. It's a very long operation because it returns all transactions from ledger. We need change it to faster way.  getNodeInfoFromLedger is called from: # getNodeData - doesn't use and can be pass # nodeServicesChanged - uses in onPoolMembershipChange for getting all services and compare with new services. I think we should add a new field to store services information. In theory, we can change logic of nodeServicesChanged but code will be not obvious.  # onPoolMembershipChange - check new node or not via field to store last services. For checking logical bug with unordered txn SeqNoDB will be used. # getNodeName - uses in blskeys, HA, keys changing. Will change to using date from node.nodestack.remotes  Tests: * Unit test for onPoolMembershipChange. Ledger contains a lot of transactions. Check that method works fast and getAllTxn is never called. * Integration test for write pool transactions in a big ledger (or long getAllTxn). Check time of execute operation.  ></body> </Action>
<Action id="54662" issue="35655" author="toktar" type="comment" created="2018-12-11 13:49:17.0" updateauthor="toktar" updated="2018-12-12 09:48:29.0"> <body><! CDATA Problem reason: - Method  ledger.getAllTxn() is called in each ordering of transactions for pool ledger. And pool txns order very slow for a big Pool ledger.  Changes: - Remove uses of getAllTxn in nodeServicesChanged, onPoolMembershipChange and getNodeName  - Remove methods which have never used. - Add tests  PR: *  https://github.com/hyperledger/indy-node/pull/1091  *  https://github.com/hyperledger/indy-plenum/pull/1010   Version: * indy-node 1.6.731 -master * indy-plenum 1.6.632 -master  Risk factors: - Problem with pool transactions ordering  Risk: - Low  Covered with tests: * test_on_pool_membership_changes  Recommendations for QA: * Load test with 10 NODE txn/sec for 4 hours. (Please, send me a metric from any one node to detect looper work time)  ></body> </Action>
<Action id="54762" issue="35655" author="zhigunenko.dsr" type="comment" created="2018-12-13 12:05:03.0" updateauthor="zhigunenko.dsr" updated="2018-12-13 12:05:03.0"> <body><! CDATA *Environment:* node 1.6.371 (25 nodes)  *Steps to Validate:* Load test with 10 NODE txn/sec for 4 hours  *Actual Results:* There is no failures or view changes !image.png|thumbnail!   ></body> </Action>
