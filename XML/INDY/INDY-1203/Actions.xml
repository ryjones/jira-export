<Action id="41186" issue="28141" author="zhigunenko.dsr" type="comment" created="2018-03-05 13:29:55.0" updateauthor="zhigunenko.dsr" updated="2018-03-07 13:53:32.0"> <body><! CDATA *Environment:* indy-anoncreds 1.0.32 indy-node                  1.3.324 indy-plenum                1.2.259 libindy                    1.3.1~406  All cases have been reproduced in Docker with 7 nodes  *Case1:* *Steps to reproduce:* 1. Write some NYMs 2. Disconnect current primary (nodeX) 3. Write some NYMs 4. Connect nodeX back *Actual results:* - viewChange completed successfully - nodeX returned back to pool successfully  *Case2:* *Steps to reproduce:* 1. Write some NYMs 2. Disconnect node which follows the primary instance 2 (nodeY) 3. Disconnect current primary (nodeX) 4. Try to write some NYMs 5. Connect nodeY back 6. Connect nodeX back *Expected results:* - nodeY returned back to pool successfully - viewChange completed successfully when (n-f+1) node returned back - nodeX returned back to pool successfully  *Actual results:* {color:red}- pool lost its quorum and cannot restore it - all nodes (exclude X and Y) assume that X and Y are malicious - nodeX cannot connect to all the others{color} *Logs:* disc-2.7z (X = node3, Y = node6) Allocated in INDY-1210  *Case3:* *Steps to reproduce:* 1. Write some NYMs 2. Disconnect current primary (nodeX) 3. Demote disconnected node 4. Write some NYMs 5. Connect nodeX back 6. Promote nodeX *Actual results:* NodeX comes back to pool and catch-up successfully  *Case4:* *Steps to reproduce:* 1. Write some NYMs 2. Demote current primary nodeX 3. Disconnect nodeX 4. Write some NYMs 5. Promote nodeX 6. Connect nodeX back *Actual results:* NodeX comes back to pool and catch-up successfully  *Case5:* *Steps to reproduce:* 1. Write some NYMs 2. Disconnect current primary (nodeX) 3. Stop indy-node on disconnected node 4. Write some NYMs 5. Connect nodeX back 6. Restart nodeX *Actual results:* NodeX comes back to pool and catch-up successfully  *Case6:* *Steps to reproduce:* 1. Write some NYMs 2. Stop indy-node on current primary nodeX 3. Disconnect nodeX 4. Write some NYMs 5. Restart nodeX 6. Connect nodeX back *Actual results:* NodeX comes back to pool and catch-up successfully  *Acceptance scenarios:* Case 13 - updated  ></body> </Action>
<Action id="41376" issue="28141" author="krw910" type="comment" body=" ~zhigunenko.dsr  Great work and good findings." created="2018-03-08 16:30:59.0" updateauthor="krw910" updated="2018-03-08 16:30:59.0"/>
