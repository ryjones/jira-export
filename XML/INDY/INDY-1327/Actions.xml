<Action id="45072" issue="30162" author="toktar" type="comment" created="2018-05-24 15:48:15.0" updateauthor="toktar" updated="2018-05-24 16:15:28.0"> <body><! CDATA We suggest a new ReqIdrToTxn format digest -> ledger_id<delimiter>txn seq_no. Adding digest will be more useful for a new View change because we will not need to find seq_no in every ledger. And we don't want to remove ledger_id because this will create a need to find a digest for each View Change. In this case, we lose a bit of disk space, but we get better performance.  Migration way. We have sha256(identifier||req_id) -> txn seq_no and it's not enough for value migration from txn seq_no to ledger_id<delimiter>txn seq_no because we haven't any storage with req_id. If we will store (digest -> ledger_id<delimiter>txn seq_no) then we can remove current ReqIdrToTxn and create a new version based on ledger transaction log.  ></body> </Action>
<Action id="45395" issue="30162" author="toktar" type="comment" created="2018-06-01 09:25:38.0" updateauthor="toktar" updated="2018-06-05 11:01:05.0"> <body><! CDATA PRs: *  https://github.com/hyperledger/indy-plenum/pull/712  *  https://github.com/hyperledger/indy-node/pull/743   ></body> </Action>
<Action id="45608" issue="30162" author="toktar" type="comment" created="2018-06-06 16:16:26.0" updateauthor="toktar" updated="2018-06-06 16:20:32.0"> <body><! CDATA *Problem reason:* * If one client send two requests with same reqId and DID, pool answer for second request as for first because uses cash from  ReqIdrToTxn by key (reqId, DID)  *Changes:* * Changed ReqIdrToTxn key to digest = hash(reqId, DID, operation), that excludes erroneous search by key * Added migration script for SeqNoDb * Added digest to transaction metadata (change converter of request to transaction )   *PR:* *  https://github.com/hyperledger/indy-plenum/pull/712  *  https://github.com/hyperledger/indy-node/pull/743   *Version:* * indy-node 1.3.445-master * indy-plenum 1.2.377-master  *Risk factors:* * The transaction sent twice, with the same reqId will be written twice in the ledger.  *Risk:* * Low  *Covered with tests:* * test_get_protocol_version -  test_txn_general_access_utils.py|https://github.com/hyperledger/indy-plenum/pull/727/files#diff-2356c08903aa87cd57b7387f30e84c22  *  test_req_idr_to_txn.py|https://github.com/hyperledger/indy-plenum/pull/712/files#diff-f58a73496209fe3d4c4894782a950118  * test_get_digest -  test_txn_general_access_utils.py|https://github.com/hyperledger/indy-plenum/pull/712/files#diff-2356c08903aa87cd57b7387f30e84c22   ></body> </Action>
<Action id="45629" issue="30162" author="zhigunenko.dsr" type="comment" created="2018-06-07 10:26:36.0" updateauthor="zhigunenko.dsr" updated="2018-06-08 09:08:50.0"> <body><! CDATA *Steps to check:* 1) create pool with indy-node=1.3.428 2) write 10k nyms 3) upgrade pool to 1.3.446 4) write transactions {code} ledger custom {"reqId":1,"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"type":"1","dest":"V4SGRU86Z58d6TV7PBU111"},"protocolVersion":1} sign=true ledger custom {"reqId":1,"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"type":"105","dest":"V4SGRU86Z58d6TV7PBU111"},"protocolVersion":1} sign=true {code}  *Actual results:* Outputs are different  *Environment:* indy-cli 1.4.0~554 indy-node 1.3.446 indy-plenum 1.2.389 libindy 1.4.0~554  ></body> </Action>
