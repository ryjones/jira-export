<Action id="58676" issue="36211" author="sergey.khoroshavin" type="comment" created="2019-03-28 12:50:17.0" updateauthor="sergey.khoroshavin" updated="2019-03-28 12:55:50.0"> <body><! CDATA *Problem analysis* * Transactions in ledger include signatures, therefore same transactions with different signatures should really be treated as different transactions during ordering. This can be achieved by including signatures into transaction digest, so they are easily distinguishable during ordering * Once transaction is written to ledger it should not be replayable - for example, it should be impossible to add another valid signature to existing set of signatures and send it as another one. So it should be possible to easily detect if transaction with same payload but different signatures was already ordered. This can be achieved by having digest of just transaction payload. Actually this is digest we already have.  *Plan of Attack* * Rename current digest into _payload_digest_ * Introduce another transaction digest, called _digest_, which includes both transaction payload and signatures * Use new _digest_ as is without modifying majority of old code (for example this includes PREPREPARE messages and seqNoDB) * Introduce another index _payload_digest_ -> _digest_ and modify logic of handling existing transactions (look for getReplyFromLedgerForRequest in node.py) as follows: ** if there are no transactions written with same _payload_digest_ - put transaction into ordering as usual ** if there was a transaction with same _payload_digest_ and _digest_ - return REPLY as if transaction was just ordered ** if there was a transaction with same _payload_digest_ but different _digest_ - return REQNACK stating that same transaction was already ordered with different signatures  Another option is to avoid adding new index by modifying seqNoDB to use _payload_digest_ as key and tuple (_digest_, _seq_no_) as value, however this will require more changes in existing code and can be actually more error prone both to implement and maintain. Also this option can turn out to be more costly performance wise.  Also it might be desirable to add digest checks into dynamic validation as well to get rid of situations when two requests with same payload but different signatures end up in one batch.  ></body> </Action>
<Action id="58713" issue="36211" author="ashcherbakov" type="comment" created="2019-03-29 06:48:40.0" updateauthor="ashcherbakov" updated="2019-03-29 06:48:40.0"> <body><! CDATA UPD: the signatures needs to be deterministically sorted when calculating digest.  ></body> </Action>
