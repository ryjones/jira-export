<Action id="62982" issue="30290" author="anikitindsr" type="comment" created="2019-08-16 11:41:26.0" updateauthor="anikitindsr" updated="2019-08-16 11:41:26.0"> <body><! CDATA h2. PoA  Quick solution is: * remove dropping last_ordered_3pc to after view_change complete; * remove view_no comparing for compare_3PC_keys function; * run integration tests and analize results  ></body> </Action>
<Action id="63595" issue="30290" author="anikitindsr" type="comment" created="2019-09-06 13:12:18.0" updateauthor="anikitindsr" updated="2019-09-06 13:22:27.0"> <body><! CDATA Reason: * need to stop dropping pp_seq_no after view_change  Changes: * pp_seq_no as a part of last_ordered_3pc is increasing sequence now, lastPrePrepareSeqNo too  Versions: * indy-plenum: 1.10.0.dev888 * indy-node: 1.10.0.dev1079 * token-plugins: 1.0.3~dev89  Recommendation for QA: * need to run load test and analize result  ></body> </Action>
<Action id="63701" issue="30290" author="vladimirwork" type="comment" created="2019-09-12 11:03:40.0" updateauthor="vladimirwork" updated="2019-09-13 20:45:20.0"> <body><! CDATA Build Info: indy-node 1.10.0.dev1079 plugins 1.0.3~dev89  Steps to Reproduce: 1. Run production load test against 25 nodes pool. 2. Run production load test with forced VC (every 30 minutes) against 25 nodes pool.  Actual Results: Pool sustains production load for more than 24 hours but it looks like that backup replicas don't order txns after some VC in 2nd test run.  Expected Results: Backup replicas must order txns after VCs.  Summary Test Results:  ^performance_results_11_09_2019.tar.gz    ^performance_results_12_09_2019.tar.gz    Full Logs: ev@evernymr33:logs/1336_1st_run_without_VC.tar.gz ev@evernymr33:logs/1336_2nd_run_with_VC.tar.gz  ></body> </Action>
<Action id="63759" issue="30290" author="ashcherbakov" type="comment" created="2019-09-13 16:25:08.0" updateauthor="ashcherbakov" updated="2019-09-13 16:25:08.0"> <body><! CDATA It was discovered in the last load, not dropping ppSeqNo after view change on backup instances may stop instances from ordering if they have been removed by some nodes.  This will be fixed in INDY-2226  ></body> </Action>
