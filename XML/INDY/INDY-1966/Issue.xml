<Issue id="37188" key="INDY-1966" number="1966" project="10303" reporter="toktar" assignee="vladimirwork" creator="toktar" type="10002" summary="Problem with VCStartMsgStrategy" priority="3" resolution="10000" status="10001" created="2019-01-28 13:55:34.0" updated="2019-03-29 20:33:09.0" resolutiondate="2019-03-29 20:33:09.0" votes="0" watches="2" workflowId="48769"> <description><! CDATA *Steps to Reproduce:*  1) A node is started.  2) The node receive InstanceChange for viewNo = 3 and collect Quorum to start View Change 2 -> 3. The node calls _on_verified_instance_change_msg() and starts prepare_view_change process.  3) The node begins to process FutureViewChangeDone (CurentState early) and starts propagate primary for view no 3.  View_change_in progress = True, catchup is started.  4) The node process ViewChangeContinueMessage in the method on_view_change_continued() but proposed_view_no = 3 and  replica.node.viewNo = 3. It means that message will not be processed and prepare_view_change  will not be finished. As a result a new InstanceChanges will be received but condition for a new view change will not be called because is_preparing is False still.     *Acceptance Criteria:*  To solve this problem we need to collect InstanceChanges but don't process them before propagate primary. And process InstanceChanges after. * Add test to reproduce this case * Fix a bug with processing InstanceChanges before propagate primary. If a node starts with a big lag and pool has 2 view changes one by one then the started node should does catch up, propagates primary, does view change for the last view and start ordering.  *Logs:*  ev@evernymr33:logs/1949_25_01_2019_metrics.tar.gz  ev@evernymr33:logs/1949_25_01_2019.tar.gz  ></description> </Issue>
