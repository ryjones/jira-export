<Action id="29322" issue="19654" author="danielhardman" type="comment" created="2017-08-02 03:30:28.0" updateauthor="danielhardman" updated="2017-08-02 03:30:28.0"> <body><! CDATA I think we have multiple state machines–there is one for catchup state, another for view change state, and another for 3pc state.  Although I like state machines as a design pattern–*particularly* when states and transitions are complex and loaded with semantics–I am not sure about using a framework. State machine frameworks tend to be heavy without adding significant value over what we could write ourselves. Perhaps research will prove me wrong.  One important consequence of state machine logic is that we could write good unit tests for certain things without actually doing complex setup, by manipulating the state machines cleverly.  If we do this ticket, I want the state machines to be written in such a way that we can generate documentation from them, and possibly so we can trace how their state evolves in a debugger in a useful way. This will make it much easier to test and to learn how state evolves, as a developer.  ></body> </Action>
<Action id="35571" issue="19654" author="ashcherbakov" type="comment" body="We would like to do this vertically step by step according to the thoughts in https://docs.google.com/document/d/1qDfyb6ALqvf7Cwrnmk0RUmyVbM2Znd7urey-8B21j6o/edit#heading=h.myn1swcdi79r" created="2017-11-28 15:45:38.0" updateauthor="ashcherbakov" updated="2017-11-28 15:45:38.0"/>
