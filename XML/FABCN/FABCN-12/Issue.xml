<Issue id="29877" key="FABCN-12" number="12" project="11207" reporter="pratika" creator="pratika" type="10000" summary="Chaincode calling chaincode" environment="Fabric v 1.1.1/Alpha  " priority="3" resolution="10200" status="6" created="2018-05-02 08:53:23.0" updated="2019-11-30 21:13:55.0" resolutiondate="2018-09-06 12:23:02.0" votes="0" watches="5" workflowId="56830"> <description><! CDATA I am trying to invoke a chaincode inside other chaincode. The response is always an empty string.  Following the code snippet from my nodejs chaincode. Trying to call invoke of chaincode1 from chaincode2.  Chaincode 1  async invoke(stub, args, thisClass) { if (args.length != 1) { throw new Error(" Incorrect number of arguments. Expecting name of the Id to query "); } let hospitalId = args 0 ; let allResult =   ; let count = await stub.getState(hospitalId+"T"); let count1 = parseInt(count.toString())+1; return Buffer.from(JSON.stringify(count1)); }  Chaincode 2  async  toChaincodeArgs(str) { var buf = new ArrayBuffer(str.length*2);  var bufView = new Uint16Array(buf); for (var i=0, strLen=str.length; i<strLen; i++) { bufView i  = str.charCodeAt(i); } return buf; }  async countTransplant(stub, args, thisClass) {    let chaincodeName = args 0   let channel = args 1  let method = thisClass 'toChaincodeArgs' ; let queryArgs = await method(f,"2-H1"); let response = stub.invokeChaincode(chaincodeName, queryArgs, channel) return Buffer.from(JSON.stringify(response)); }  Commands used for query and Invoke:  peer chaincode instantiate -o orderer.example.com:7050 -C whochannel -n whocc79 -l node -v 1.0 -c '{"Args": "init","count","0" }' -P "OR ('whoMSP.peer')"  peer chaincode query -C whochannel -v 2.0  -n whocc79  -c '{"Args": "countTransplant","indiacc16","channelwhoindia" }'  Output: Query Result: {}  ></description> </Issue>
