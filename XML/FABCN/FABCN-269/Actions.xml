<Action id="66718" issue="42783" author="mbwhite" type="comment" created="2020-01-16 14:32:14.0" updateauthor="mbwhite" updated="2020-01-16 14:34:08.0"> <body><! CDATA  ~davidkel        By inspection the following is the approach that, by inspection, would configure the serializer for a JS contract (so no annotations, and no separate json file). Using FabCar as a vehicle.    const FabCar = require('./lib/fabcar');  module.exports.FabCar = FabCar; module.exports.contracts =   FabCar  ;  const MySerializer = require('./myserializer.js'); module.exports.serializers = { transaction:'mySerializer', serializers: { mySerializer :MySerializer } };  ></body> </Action>
<Action id="66719" issue="42783" author="mbwhite" type="comment" body="..but you&apos;re correct that it won&apos;t get used for parameters - see datamarshall.js handleParameters() line 81-89" created="2020-01-16 14:40:03.0" updateauthor="mbwhite" updated="2020-01-16 14:40:03.0"/>
<Action id="66720" issue="42783" author="mbwhite" type="comment" body="Have a proposed solution; need to validate in the test suite." created="2020-01-16 15:14:10.0" updateauthor="mbwhite" updated="2020-01-16 15:14:10.0"/>
<Action id="66839" issue="42783" author="mbwhite" type="comment" created="2020-01-21 14:32:31.0" updateauthor="mbwhite" updated="2020-01-21 14:32:31.0"> <body><! CDATA Have found that this was already fixed in master...  https://github.com/hyperledger/fabric-chaincode-node/commit/08dd59830ae46e3dc76af91d47a07c41f9c25b5f   Need to back port to 1.4.x  ></body> </Action>
<Action id="66890" issue="42783" author="mbwhite" type="comment" created="2020-01-22 11:43:43.0" updateauthor="mbwhite" updated="2020-01-22 11:43:43.0"> <body><! CDATA PR to do this.   https://github.com/hyperledger/fabric-chaincode-node/pull/64   ></body> </Action>
