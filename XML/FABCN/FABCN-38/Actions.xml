<Action id="47653" issue="29414" author="davidkel" type="comment" body="Unfortunately the x509 parsed certificate format is explicitly exposed in the chaincode API and as such means that changing for format is a breaking api change. Also if a different version of x509 decided to change the format then it would be a breaking api change outside of our control. There is a pure javascript library for X509 parsing at  https://fidm.github.io/x509/ Â which we might want to consider switching to in the future." created="2018-07-23 14:17:27.0" updateauthor="davidkel" updated="2018-07-23 14:17:27.0"/>
<Action id="49755" issue="29414" author="zhaochy" type="comment" created="2018-09-03 03:12:22.0" updateauthor="zhaochy" updated="2018-09-03 03:12:22.0"> <body><! CDATA As far as I can see, very few developers use the x509 interface from fabric-shim. Agreed to change the x509 package to jsrsasign.  ~harrisob@us.ibm.com  What's your opinion?  ></body> </Action>
<Action id="50646" issue="29414" author="davidkel" type="comment" body="We will keep x509 but as part of FAB-11555 we can have a compiled version already present in the node chaincode build image" created="2018-09-19 09:13:38.0" updateauthor="davidkel" updated="2018-09-19 09:13:38.0"/>
<Action id="52143" issue="29414" author="sstone1" type="comment" body="We need to consider how we can get rid of the dependency on x509; it doesn&apos;t build on Windows without the user installing a specific level of OpenSSL to a specific directory, which makes it difficult for smart contract developers using Windows to run in development mode. " created="2018-10-12 09:51:40.0" updateauthor="sstone1" updated="2018-10-12 09:51:40.0"/>
<Action id="52150" issue="29414" author="davidkel" type="comment" body=" ~sstone1  It&apos;s already been looked at for removing and to try to keep the api the same. Unfortunately this would be a large amount of effort and code. For HLF 2.0 we can easily remove it, but to remove it now would be a breaking API change. I&apos;m not sure how Zhao was able to quantify the use of this particular interface so unsure of it&apos;s use. There is an alternative pure JS library we could use. JSRSASIGN was found to have an issue regarding certificate extensions and you couldn&apos;t extract them. An issue was raised with JSRSASIGN but the response wasn&apos;t too helpful.  ~awjh-ibm  would know more as he did the investigation." created="2018-10-12 10:11:56.0" updateauthor="davidkel" updated="2018-10-12 10:11:56.0"/>
