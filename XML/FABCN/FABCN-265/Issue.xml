<Issue id="36038" key="FABCN-265" number="265" project="11207" reporter="sstone1" assignee="mbwhite" creator="sstone1" type="10000" summary="Contract name (was namespace) always required in applications" priority="2" resolution="10000" status="6" created="2018-12-10 16:34:49.0" updated="2019-11-30 21:15:00.0" resolutiondate="2018-12-10 18:18:18.0" votes="0" watches="2" workflowId="57083"> <description><! CDATA A change went into the Fabric Node.js chaincode shim last week that means that contracts always have a name (used to be namespace). This change in itself is fine, but the change now means that applications must always specify three things when wanting to call a transaction:  chaincode ID, contract name, transaction name  In most cases, there will be one contract deployed in one chaincode, with the same name. For example the FabCar contract will be deployed with a chaincode ID of fabcar. However you will have to specify fabcar twice - e.g. fabcar.fabcar.queryCar.  We need to revert this behaviour so that in the common case of one contract to one chaincode, you do not have to qualify the transaction name with the contract name. We propose that if you have a single contract then that is the "default" contract. If you have multiple contracts, then the first one in the contracts array becomes the "default" contract. If a transaction comes in without a contract name, then the default contract is used to resolve the transaction.  ></description> </Issue>
