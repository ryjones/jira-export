<Action id="57114" issue="37734" author="denyeart" type="comment" body=" ~mbwhite  Can you take a look?" created="2019-02-18 04:58:02.0" updateauthor="denyeart" updated="2019-02-18 04:58:02.0"/>
<Action id="57134" issue="37734" author="mbwhite" type="comment" created="2019-02-18 14:12:55.0" updateauthor="mbwhite" updated="2019-02-18 14:12:55.0"> <body><! CDATA Configuring a local test envionment for private data now...     ></body> </Action>
<Action id="57557" issue="37734" author="mehulshahnj" type="comment" body="Adding affected version as 1.4.0 as well, same problem as 1.3.0." created="2019-02-25 16:52:56.0" updateauthor="mehulshahnj" updated="2019-02-25 16:52:56.0"/>
<Action id="57777" issue="37734" author="mbwhite" type="comment" created="2019-03-01 10:25:08.0" updateauthor="mbwhite" updated="2019-03-01 10:25:08.0"> <body><! CDATA Found the root cause of this problem; the overall journey took quite a winding path, but the problem itself is not as complex as might appear. * In a number of APIs an iterator is returned for the developer to use to look at all the results * In some cases, though this iterator object is wrapped in another object  `return \{ iterator }`  effectively * End result is that for some APIs the return values needs 'unpacking' or 'destructuring', and some it doesn't.  This change was introduced when a number of pagination functions where added; though this would appear to be accidental change rather than deliberate.   The plan is therefore to   (1) Revert to the approach where the iterator is not wrapped  (2) For the v1.4.0 release, mitigate any migration issues by adding the iterator as a property of itself under the key iterator. Should any code have worked around the problem - this will keep that code working.   (3) For v2.0, revert to returned an interator but without the migration support.   ></body> </Action>
<Action id="57872" issue="37734" author="mbwhite" type="comment" created="2019-03-05 14:35:37.0" updateauthor="mbwhite" updated="2019-03-05 14:35:37.0"> <body><! CDATA Affected code is  handler.js - line 697 handleGetQueryResult()     ></body> </Action>
<Action id="58334" issue="37734" author="jtonline" type="comment" body="I think handleGetQueryResult() is right to be returning an object since it seems to include paging related metadata. Should other methods also return objects for consistency, or does that not really matter?" created="2019-03-20 11:01:16.0" updateauthor="jtonline" updated="2019-03-20 11:01:16.0"/>
<Action id="58343" issue="37734" author="mbwhite" type="comment" created="2019-03-20 13:46:17.0" updateauthor="mbwhite" updated="2019-03-20 13:46:17.0"> <body><! CDATA Consistency is important; looking at the approach of the other languages; they have extended the iterator.. so you can call both the 'next' method and the 'getmetadata'  It would be better in this case to add in the metadata to the iterator object. rather than wrapping it another object.   ></body> </Action>
<Action id="59911" issue="37734" author="davidkel" type="comment" created="2019-05-10 10:38:13.0" updateauthor="davidkel" updated="2019-05-10 10:38:13.0"> <body><! CDATA A summary of the problem is as follows 1. The original methods getHistoryForKey, getQueryResult, getStateBy.... just return the appropriate iterator 2. The getPrivateData... methods introduced return an object with an iterator property. This isn't necessary as no metadata is returned. These api's should have just returned the iterator 3. The get...Pagination methods introduced, return an object with an iterator and metadata property.  FAB-15330 will provide a consistent experience across all these api's and provide detail about how to obtain the metadata for the Pagination apis.  ></body> </Action>
<Action id="63201" issue="37734" author="tangross" type="comment" created="2019-08-22 17:15:02.0" updateauthor="tangross" updated="2019-08-22 17:15:02.0"> <body><! CDATA To handle TypeError, can workaround like this.  const \{ iterator } = (await stub.getPrivateDataByRange("abc","aaaaa", "zzzzz")) as any;  ></body> </Action>
<Action id="64056" issue="37734" author="jyellick" type="comment" body="Is this still in progress? Any updates?" created="2019-09-24 15:36:28.0" updateauthor="jyellick" updated="2019-09-24 15:36:28.0"/>
<Action id="64723" issue="37734" author="davidkel" type="comment" created="2019-10-15 15:17:09.0" updateauthor="davidkel" updated="2019-10-15 15:17:09.0"> <body><! CDATA As a side 1. The new async loop capabilities in v2.0 will hide all the discrepancies 2. If these apis are changed then the tutorial which describes the differences of returned values from apis that return iterators will need to be updated.  ></body> </Action>
