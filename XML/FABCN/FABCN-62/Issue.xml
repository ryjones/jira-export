<Issue id="31367" key="FABCN-62" number="62" project="11207" reporter="sstone1" assignee="sstone1" creator="sstone1" type="10000" summary="Export Shim class from Node.js chaincode module as per Stub" priority="4" resolution="10000" status="6" created="2018-06-26 08:34:48.0" updated="2019-11-30 21:14:07.0" resolutiondate="2018-09-04 08:25:17.0" votes="0" watches="2" workflowId="56880"> <description><! CDATA The module exports from fabric-shim for Node.js chaincode are a bit weird:  {code}module.exports = Shim; module.exports.ClientIdentity = ClientIdentity; module.exports.Stub = Stub; module.exports.Iterators = require('./iterators');{code}  Because we have classes being exported from a top level class, it makes it difficult to write a TypeScript declaration file for this module.  The ideal TypeScript (IMO) import for this module would be:  {code}import { Shim, Stub, ClientIdentity } from 'fabric-shim';{code}  You could alternatively do it today by using a "shim" prefix for everything:  {code}import * as shim from 'fabric-shim';{code}  But that is a bit ugly as you have to do shim.ChaincodeInterface, shim.Stub, etc.  By duplicating the Shim export as follows, you can get to the ideal TypeScript import style:  {code}module.exports = Shim; module.exports.Shim = Shim; module.exports.ClientIdentity = ClientIdentity; module.exports.Stub = Stub; module.exports.Iterators = require('./iterators');{code}   ></description> </Issue>
