<Issue id="39326" key="FABCN-218" number="218" project="11207" reporter="awjh-ibm" assignee="mbwhite" creator="awjh-ibm" type="10000" summary="Using annotations on classes of superclasses causes merged metadata" priority="2" resolution="10000" status="6" created="2019-04-15 15:11:00.0" updated="2019-11-30 21:14:49.0" resolutiondate="2019-05-22 12:11:22.0" votes="0" watches="2" workflowId="57036"> <description><! CDATA If a user defined a class to extend a superclass, property annotations on another child class of that superclass appear in the metadata of the sibling and superclass.  This is due to the use of getMetadata rather than getOwnMetadata when getting the properties of the target in Object.js.  Example: {code:title=example.ts} class Person { @Property() private eyeColour: string; }  @Object() class Bob extends Person {    @Property()    private houseName: string;  }  @Object() class Fred extends Person {     @Property()     private favouriteColour: string; } {code}  The above will result in both Bob and Fred having the same metadata properties as well as Person (although in this case person will not appear in the metadata returned to the user as it has no @Object annotation)  ></description> </Issue>
