<Action id="50159" issue="33622" author="zhaochy" type="comment" body=" ~denyeart  please have a look at this" created="2018-09-10 14:33:13.0" updateauthor="zhaochy" updated="2018-09-10 14:33:13.0"/>
<Action id="50657" issue="33622" author="denyeart" type="comment" body=" ~Senthil1  I haven&apos;t been able to get to this, could you take a look?" created="2018-09-19 12:58:19.0" updateauthor="denyeart" updated="2018-09-19 12:58:19.0"/>
<Action id="50660" issue="33622" author="senthil1" type="comment" body=" ~zhaochy  which statedb did you use?" created="2018-09-19 13:20:35.0" updateauthor="senthil1" updated="2018-09-19 13:20:35.0"/>
<Action id="50694" issue="33622" author="senthil1" type="comment" created="2018-09-19 16:15:56.0" updateauthor="senthil1" updated="2018-09-19 16:45:54.0"> <body><! CDATA  ~zhaochy   Note that we cannot pass compositeKeys to range query APIs (both pagination and non-pagination range query). We would throw error if a composite key is passed as an argument in a call to _GetStateByRangeWithPagination()_ (refer to  https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806 |https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806   To do a range query on composite keys, we need to introduce new chaincode APIs (https://jira.hyperledger.org/browse/FAB-11281)  Note that we can use _GetStateByPartialCompositeKey()_ and _GetStateByPartialCompositeKeyWithPagination()_ for partial composite keys only.   ></body> </Action>
<Action id="50696" issue="33622" author="senthil1" type="comment" created="2018-09-19 16:35:57.0" updateauthor="senthil1" updated="2018-09-19 16:35:57.0"> <body><! CDATA  ~denyeart   ~zhaochy  node shim seems to be different from go shim  for range query. In go shim, we do not allow composite key to be used with range query whereas we do in node shim go shim –  https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806 |https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go#L806  node shim -   https://github.com/hyperledger/fabric-chaincode-node/blob/master/fabric-shim/lib/stub.js#L470    ~zhaochy   refer to  https://gerrit.hyperledger.org/r/c/8119/ |https://gerrit.hyperledger.org/r/c/8119/ for reasoning behind restricting only simple keys for the range query API. node shim might need to fix this.  ></body> </Action>
<Action id="50700" issue="33622" author="senthil1" type="comment" created="2018-09-19 16:41:30.0" updateauthor="senthil1" updated="2018-09-19 16:41:30.0"> <body><! CDATA  ~zhaochy  java shim has this check  https://github.com/hyperledger/fabric-chaincode-java/blob/master/fabric-chaincode-shim/src/main/java/org/hyperledger/fabric/shim/impl/ChaincodeStubImpl.java#L181      ></body> </Action>
<Action id="50817" issue="33622" author="zhaochy" type="comment" body=" ~Senthil1  thanks for your help. Some fix for node shim should be made. I just self assigned this ticket and would fix this later." created="2018-09-20 06:09:50.0" updateauthor="zhaochy" updated="2018-09-20 06:09:50.0"/>
<Action id="51728" issue="33622" author="denyeart" type="comment" created="2018-10-04 04:19:09.0" updateauthor="denyeart" updated="2018-10-04 04:37:41.0"> <body><! CDATA master:  https://gerrit.hyperledger.org/r/#/c/26452/  - merged  cherry picked to release-1.3:  https://gerrit.hyperledger.org/r/#/c/26781/  - merged  ></body> </Action>
