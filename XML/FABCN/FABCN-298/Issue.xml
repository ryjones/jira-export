<Issue id="36377" key="FABCN-298" number="298" project="11207" reporter="shimos" assignee="shimos" creator="shimos" type="10000" summary="Error in the type definition for CouchDB results in node.js chaincode" priority="3" resolution="10000" status="6" created="2018-12-21 22:37:42.0" updated="2019-11-30 21:15:09.0" resolutiondate="2019-01-03 03:02:15.0" votes="0" watches="2" workflowId="57116"> <description><! CDATA In the current type definition, the type for a value from the iterator returned by getQueryResult is "KV", and the definition for KV is: {code:java} interface KV { key: string; value: Buffer; getKey(): string; getValue(): Buffer; } {code} However, the value is not Buffer but ByteBuffer as it is deserialized from a protobuf object.  *To reproduce the bug:*  Suppose we have some values which have "testType" as their docTypes in the state db andÂ  the following chaincode: {code:java} class NodeCC implements shim.ChaincodeInterface {   ...(snip)...  async Invoke(stub: shim.ChaincodeStub): Promise<shim.ChaincodeResponse> { const {fcn, params} = stub.getFunctionAndParameters();  if (fcn == "query") { const query = { selector: { docType: "testType" } }; const response = await stub.getQueryResult(JSON.stringify(query));  const next = await response.next(); console.log("(Raw) key = %s, value = %s", next.value.key, next.value.value);  const value = JSON.parse(next.value.value.toString()); await response.close();  return shim.success(Buffer.from(JSON.stringify(value.data))); } ...(snip)...  } } {code} And invoking "query" results in the following output and error in the chaincode log: {noformat} (Raw) key = abc, value = ByteBufferNB(offset=17,markedOffset=-1,limit=52,capacity=90) (node:13877) UnhandledPromiseRejectionWarning: SyntaxError: Unexpected token B in JSON at position 0 at JSON.parse (<anonymous>) at NodeCC.Invoke (/home/shimos/test/nodecc/index.js:31:32) at <anonymous> at process._tickCallback (internal/process/next_tick.js:189:7) (node:13877) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1) (node:13877)  DEP0018  DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.  {noformat} which is not what we expect for a Buffer value.  ></description> </Issue>
