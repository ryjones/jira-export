<Action id="31102" issue="20964" author="ratnakar" type="comment" created="2017-09-22 17:39:35.0" updateauthor="ratnakar" updated="2017-09-22 17:39:35.0"> <body><! CDATA Please refer the examle02 chaincode writen in node in here:   https://github.com/hyperledger/fabric-test/tree/master/chaincodes/example02/node  ></body> </Action>
<Action id="31520" issue="20964" author="ratnakar" type="comment" created="2017-10-02 15:36:59.0" updateauthor="ratnakar" updated="2017-10-02 15:37:30.0"> <body><! CDATA +*Steps to reproduce the issue:*+    **  ensure path is set for fabric binaries # git clone * https://github.com/hyperledger/fabric-test * # cd fabric-test/feature # behave n FAB---5790  error message :    {code:java} Then a user receives an error response of status: 500 # steps/endorser_impl.py:336 0.000s Assertion Failed: Expected response was status: 500; received Error occurred  u'docker exec peer0.org1.example.com /bin/bash -c "CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/14474b4fa78711e7b3d580e65025f612/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor \'{\\"Args\\":  \\"readMarble\\",\\"marble201\\" }\' --channelID behavesystest "' : 2017-10-02 15:35:55.879 UTC  msp  GetLocalMSP -> DEBU 001 Returning existing local MSP 2017-10-02 15:35:55.879 UTC  msp  GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2017-10-02 15:35:55.880 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 003 Using default escc 2017-10-02 15:35:55.880 UTC  chaincodeCmd  checkChaincodeCmdParams -> INFO 004 Using default vscc 2017-10-02 15:35:55.880 UTC  msp/identity  Sign -> DEBU 005 Sign: plaintext: 0A9E070A6B08031A0C08DBB9C9CE0510...6172626C650A096D6172626C65323031 2017-10-02 15:35:55.880 UTC  msp/identity  Sign -> DEBU 006 Sign: digest: 9F0B4C6076536D1DDE72A8C50FAD5EF55221CCA5D168B011B8F427F7128D3135 Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure:  76e70a4b Calling chaincode Invoke() returned error response  Error: {"Error":"Marble does not exist: marble201"} . Sending ERROR message back to peer - <nil> Usage: peer chaincode query  flags  Flags: -C, --channelID string The channel on which this command should be executed (default "testchainid") -c, --ctor string Constructor message for the chaincode in JSON format (default "{}") -x, --hex If true, output the query value byte array in hexadecimal. Incompatible with --raw -n, --name string Name of the chaincode -r, --raw If true, output the query value as raw bytes, otherwise format as a printable string -t, --tid string Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64 Global Flags: --cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint --logging-level string Default logging level and overrides, see core.yaml for full syntax -o, --orderer string Ordering service endpoint --test.coverprofile string Done (default "coverage.cov") --tls Use TLS when communicating with the orderer endpoint --transient string Transient map of arguments in JSON encoding -v, --version Display current version of fabric peer server{code}       ></body> </Action>
<Action id="35650" issue="20964" author="nnao" type="comment" created="2017-11-29 19:58:49.0" updateauthor="nnao" updated="2017-11-29 19:58:49.0"> <body><! CDATA I tried to reproduce this problem but FAB-5790 does not exist. These codes merged into FAB-5791. I tried FAB-5791 and ended successfully. I think this problem is fixed. May I close this JIRA?  ></body> </Action>
<Action id="35651" issue="20964" author="ratnakar" type="comment" created="2017-11-29 20:12:48.0" updateauthor="ratnakar" updated="2017-11-29 20:13:29.0"> <body><! CDATA Hi  ~nnao , Thanks for working on this issue.  Node related tests been disabled due to this issue,  you have to uncomment them   https://github.com/hyperledger/fabric-test/blob/master/feature/chaincodes.feature#L516 , to test them against node.js chaincode.     Issue still exists in Node.js chaincode , Please uncomment and try again     ></body> </Action>
<Action id="35655" issue="20964" author="nnao" type="comment" body="Hi  ~Ratnakar , Thanks for the comment. I will try this." created="2017-11-29 21:22:09.0" updateauthor="nnao" updated="2017-11-29 21:22:09.0"/>
<Action id="38265" issue="20964" author="denyeart" type="comment" body=" ~nnao   ~Ratnakar  Could you provide an update on this one?" created="2018-01-08 02:49:08.0" updateauthor="denyeart" updated="2018-01-08 02:49:08.0"/>
<Action id="38284" issue="20964" author="nnao" type="comment" created="2018-01-08 09:41:30.0" updateauthor="nnao" updated="2018-01-08 09:41:30.0"> <body><! CDATA  ~denyeart  I am working on this bug.  This bug needs FAB-6387 patch and some minor bug fix for "chaincodes.feature" After applying those patch I tried a behave test like that.  {code:java} $ behave -n FAB-5791 -k -D logs=y {code}  I had success FAB-5791 test using nodejs chaincode, but I had fail FAB-5791 test using golang chaincode. I got the following message: {code:java} less peer0.org1.example.com_FAB-5791\:_Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_solo_orderer_leveldb_db_GOLANG_lang_--_@1.1_.log  ... ESC 36m2018-01-08 09:02:32.331 UTC  stateleveldb  GetState -> DEBU 1854ESC 0m GetState(). ns=mycc, key=marble201 ESC 36m2018-01-08 09:02:32.331 UTC  chaincode  func1 -> DEBU 1855ESC 0m  cbe831ef No state associated with key: marble201. Sending RESPONSE with an empty payload ESC 36m2018-01-08 09:02:32.331 UTC  chaincode  1 -> DEBU 1856ESC 0m  cbe831ef handleGetState serial send RESPONSE ESC 36m2018-01-08 09:02:32.332 UTC  chaincode  processStream -> DEBU 1857ESC 0m  cbe831ef Received message COMPLETED from shim ...  $ less peer0.org1.example.com_FAB-5791\:_Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_solo_orderer_leveldb_db_NODE_lang_--_@1.2_.log ESC 36m2018-01-08 09:05:42.599 UTC  stateleveldb  GetState -> DEBU 1849ESC 0m GetState(). ns=mycc, key=marble201 ESC 36m2018-01-08 09:05:42.599 UTC  chaincode  func1 -> DEBU 184aESC 0m  2f43921e No state associated with key: marble201. Sending RESPONSE with an empty payload ESC 36m2018-01-08 09:05:42.599 UTC  chaincode  1 -> DEBU 184bESC 0m  2f43921e handleGetState serial send RESPONSE ESC 36m2018-01-08 09:05:42.601 UTC  chaincode  processStream -> DEBU 184cESC 0m  2f43921e Received message ERROR from shim ... {code}  This test case(get marble201 key that does not exist) returns different value COMPLETED(GOLANG chaincode) and ERROR(NODE chaincode). I think the behavior of GOLANG and NODE shim package is different in error case.     ></body> </Action>
<Action id="38465" issue="20964" author="nnao" type="comment" created="2018-01-11 19:45:03.0" updateauthor="nnao" updated="2018-01-11 19:45:03.0"> <body><! CDATA I send patches -  https://gerrit.hyperledger.org/r/#/c/16779/  -  https://gerrit.hyperledger.org/r/#/c/16781/  These patches need FAB-6387 patches       ></body> </Action>
<Action id="44877" issue="20964" author="nnao" type="comment" body="This problem was solved by FAB-6387. " created="2018-05-22 18:18:31.0" updateauthor="nnao" updated="2018-05-22 18:18:31.0"/>
