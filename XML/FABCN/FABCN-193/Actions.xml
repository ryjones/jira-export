<Action id="58436" issue="38673" author="awjh-ibm" type="comment" body="I think for now rather than using the schema we should check the type of the result and perform any serialization based on that alone. The metadata is a suggestion to the user of what they should get back and it is down to the developer to ensure that what they return matches that metadata" created="2019-03-22 10:11:52.0" updateauthor="awjh-ibm" updated="2019-03-22 10:11:52.0"/>
<Action id="58437" issue="38673" author="davidkel" type="comment" body="yep totally agree, also updated my original text to be specific about removing the typeof check." created="2019-03-22 10:14:33.0" updateauthor="davidkel" updated="2019-03-22 10:14:33.0"/>
<Action id="58885" issue="38673" author="mbwhite" type="comment" created="2019-04-03 09:22:40.0" updateauthor="mbwhite" updated="2019-04-03 09:22:40.0"> <body><! CDATA Good points Dave; based on the current state-of-the-art in 1.4.1:  0. There are some corrections that need to made with respect to validation of the types; I'll use this issue to add those and some docs references. Also the error message in the code you've highlighted is misleading in it's current form, so will improve that. # _We can be specific about which input values are validated or not_ For primitive types such as string, number, boolean - very little checking is done here for the default schema. Really only the typechecking that JavaScript enforces! For more complex types, the default of JSONSchema is that everything is optional so there is great freedom to return what you want # _We can specify whether the return value is validated or not_ Same rules are applied to return types as per parameters. # _We can control the depth of validation for complex objects (and also cope with cyclic issues)_ The optional nature should be able to help here # _We can define the concept of strict/non-strict validation which means either an object has to have the exact parameters or whether it is allowed to have extra parameters_ __This can be defined today...   additionalProperites: false to the object definition will mean that if a property is specified in the object it has to be from the supplied schema. mandatory: true on a property means the property has to be present.  ></body> </Action>
<Action id="61882" issue="38673" author="denyeart" type="comment" body=" ~mbwhite  I&apos;ve changed Fix Version to v2.0.0, do you agree?" created="2019-07-16 19:05:28.0" updateauthor="denyeart" updated="2019-08-28 18:07:03.0"/>
<Action id="64034" issue="38673" author="jyellick" type="comment" body=" ~mbwhite  any updates on this?" created="2019-09-24 14:18:42.0" updateauthor="jyellick" updated="2019-09-24 14:18:42.0"/>
<Action id="67802" issue="38673" author="mbwhite" type="comment" created="2020-02-04 09:51:55.0" updateauthor="mbwhite" updated="2020-02-04 09:51:55.0"> <body><! CDATA  ~davidkel  Rereviewing this I believe that it is possible to achieve what you want today.  Please shout and we can work out some examples/details.   ></body> </Action>
<Action id="67803" issue="38673" author="davidkel" type="comment" body=" ~mbwhite  ok, many thanks for the update" created="2020-02-04 12:51:27.0" updateauthor="davidkel" updated="2020-02-04 12:51:27.0"/>
