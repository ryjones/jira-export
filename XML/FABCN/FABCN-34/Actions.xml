<Action id="59865" issue="39601" author="davidkel" type="comment" created="2019-05-09 08:53:34.0" updateauthor="davidkel" updated="2019-05-09 08:53:34.0"> <body><! CDATA An example of a replacement for getAllResults looks like this. not it doesn't care about the difference in what is returned by the various iterator methods (as some return an iterator while others return an object with an iterator property)  {code:java} async function getAllResults(promiseOfIterator, getKeys) { const allResults =   ; for await (const res of promiseOfIterator) { const theVal = (getKeys) ? res.key : res.value.toString('utf8'); allResults.push(theVal); }  // need to close the iterator, but the returned value could either // be an iterator or the an object with an iterator property so need // to handle both scenarios. const res = await promiseOfIterator; let iterator = res.iterator ? res.iterator : res; await iterator.close(); return allResults; } {code} Note how to be able to call close  I have considered whether we should update the iterator support to perform automatic close when done is received. However we would still need to document that an explicit close MUST be performed if you don't iterate to the last element. So it may be safer to leave as is and make it mandatory in all scenarios. Worth a discussion on this.  The other thing that needs to be possible is how to get to the metadata which will be returned by methods such as the ones that use pagination. So an example of code that may call getAllResults above looks like this  {code:java} const promiseOfIterator = stub.getQueryResultWithPagination(JSON.stringify(query), 2); const results = await getAllResults(promiseOfIterator); const metadata = (await promiseOfIterator).metadata; {code}  As part of this we should include a new tutorial on how to use iterators and include old style as well as new as the old style will continue to work as before.  ></body> </Action>
<Action id="59866" issue="39601" author="sstone1" type="comment" created="2019-05-09 09:41:10.0" updateauthor="sstone1" updated="2019-05-09 09:41:10.0"> <body><! CDATA  ~davidkel  on the explicit close stuff - I'd prefer to avoid that at all costs ;-)  We might be able to avoid that by implementing a `return` method on our AsyncIterator implementation: https://github.com/Microsoft/TypeScript/blob/master/lib/lib.esnext.asynciterable.d.ts#L34  From a couple of blogs, it sounds like the `return` method gets called if iteration ends early, so sounds like a good place to insert the close code. Not sure what `throw` does, but I can hazard a guess!   ></body> </Action>
<Action id="59946" issue="39601" author="davidkel" type="comment" body="https://gerrit.hyperledger.org/r/#/c/31339/" created="2019-05-13 08:44:11.0" updateauthor="davidkel" updated="2019-05-13 08:44:11.0"/>
