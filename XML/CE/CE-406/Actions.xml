<Action id="47075" issue="31582" author="qsmen" type="comment" created="2018-07-09 02:03:26.0" updateauthor="qsmen" updated="2018-07-09 07:45:59.0"> <body><! CDATA To be safe and for production scenario,  here is some suggestions for Cello.  1. Suppose two orgs want to construct a fabric network, and the requirements are: org1 requires 2 peers, org2 requires 1 peer, each maintains their own fabric CA, and uses the kafka consensus. 2. The blockchain service provider(BSP) provides nodes and necessary software are installed.  3.each org's admin  start the fabric CA-servers of the two orgs. When CA1 server and CA2 server are started for the first time, they each will generate self-signed certificates as org’s certificates.  4.Start the user dashboard on org1-peer0 and org2-peer0. The admins of the two orgs login their respective user dashboards and register and enroll their Admin certificates with their respective CAs. Similarly peers, client app user and orders get their own certificate from their org’s CA, respectively.  5  one org's admin configure the order profile and channel profile,  Start up the order system on behalft of other org's  admin by obtaining their signatures.  6.The admin of org1 logs in to the user dashboard, creates channel and have peers join channel.  7.The admins of org1 and org2 log in to the user dashboard, install chaincode and instantiate chaincode. Client app invoke chaincode and so on.  ></body> </Action>
<Action id="47195" issue="31582" author="qsmen" type="comment" created="2018-07-11 08:09:15.0" updateauthor="qsmen" updated="2018-07-11 08:09:15.0"> <body><! CDATA the suggestions above may be too ideal. what about the following one?  one worry about the initial design is that the crypto files are generated in one place and then copied in plaintext form to their destionations respectively. Now suppose once crypto files for one node are generated, the system promotes the node user to input a password which will be used to encrypt the crypto files, or only encrypt the private key. And when they are copied to their destination, the password are required  to decrypt the encrypted crypto files.           ></body> </Action>
<Action id="47767" issue="31582" author="baohua" type="comment" created="2018-07-25 06:25:47.0" updateauthor="baohua" updated="2018-07-25 06:25:47.0"> <body><! CDATA In practice, it may be that each org has its own CA and generate credential dynamically.   ></body> </Action>
<Action id="48018" issue="31582" author="hightall" type="comment" body=" ~baohua  I think we should evaluate fabric ca server &amp; client mode for dynamic certification." created="2018-07-27 07:44:13.0" updateauthor="hightall" updated="2018-07-27 07:44:13.0"/>
<Action id="52496" issue="31582" author="baohua" type="comment" body=" ~ShuoWang , Would you like to help on this?" created="2018-10-21 06:56:11.0" updateauthor="baohua" updated="2018-10-21 06:56:11.0"/>
<Action id="52506" issue="31582" author="shuowang" type="comment" body=" ~baohua   ~hightall  Sure. In this issue, do we still use cryptogen command in initial docker? Or we integrate fabric-ca too?" created="2018-10-22 00:56:49.0" updateauthor="shuowang" updated="2018-10-22 00:56:49.0"/>
