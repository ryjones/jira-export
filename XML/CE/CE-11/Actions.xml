<Action id="20600" issue="14417" author="amjadnz" type="comment" created="2017-01-28 08:23:24.0" updateauthor="amjadnz" updated="2017-01-28 08:23:24.0"> <body><! CDATA Additional Information:  $ sudo make logs  nginx         | 2017/01/28 16:21:53  error  8#8: *6 connect() failed (113: No route to host) while connecting to upstream, client: 172.18.0.1, server: , request: "GET / HTTP/1.1", upstream: "http://172.18.0.2:8080/", host: "172.18.0.1:8080" nginx         | 2017/01/28 16:21:53  error  8#8: *6 open() "/etc/nginx/html/50x.html" failed (2: No such file or directory), client: 172.18.0.1, server: , request: "GET / HTTP/1.1", upstream: "http://172.18.0.2:8080/", host: "172.18.0.1:8080"  When accessing the URL : http://172.18.0.1:8080 with user admin/pass    ></body> </Action>
<Action id="20680" issue="14417" author="szabozoltan" type="comment" created="2017-02-04 19:49:05.0" updateauthor="szabozoltan" updated="2017-02-04 19:49:05.0"> <body><! CDATA I have the same situation. I made the steps written on https://github.com/hyperledger/cello/blob/master/docs/deployment.md on an EC2 instance. The "docker -H 127.0.0.1:2375 version" works fine (after a workaround).  ></body> </Action>
<Action id="20682" issue="14417" author="baohua" type="comment" created="2017-02-05 00:26:47.0" updateauthor="baohua" updated="2017-02-05 00:28:15.0"> <body><! CDATA Strange. I suppose u do not have the docker-py python lib installed, which should be automatically setup by the docker-compose package.  @amjad have u installed the docker-compose at the master node?  1). pls show the logs of  `pip install docker-compose==1.8.0`  2) pls try manually  ``` $ python python> from docker import Client ``` Thanks!  ></body> </Action>
<Action id="20694" issue="14417" author="amjadnz" type="comment" created="2017-02-05 19:35:00.0" updateauthor="amjadnz" updated="2017-02-05 19:35:00.0"> <body><! CDATA Dear Yang,  Please find the results of the python command  <code> Python 2.7.13 (default, Jan 12 2017, 17:59:37)   GCC 6.3.1 20161221 (Red Hat 6.3.1-1)  on linux2 Type "help", "copyright", "credits" or "license" for more information. >>> from docker import Client >>> cli = Client(base_url='unix://var/run/docker.sock') >>> cli.containers()  {u'Status': u'Up About a minute', u'Created': 1486321568, u'Image': u'mongo:3.2', u'Labels': {u'com.docker.compose.service': u'mongo', u'com.docker.compose.config-hash': u'1f2fc46265215120ff6a56a4cccddce9406cb7b09074746b25a536f09ec02ddd', u'com.docker.compose.project': u'cello', u'com.docker.compose.version': u'1.8.0', u'com.docker.compose.oneoff': u'False', u'com.docker.compose.container-number': u'1'}, u'NetworkSettings': {u'Networks': {u'cello_default': {u'NetworkID': u'9159be1bf998801be381f25171dd83e3fb666d40b91fe33bc8671147fc7e6c4e', u'MacAddress': u'02:42:ac:14:00:04', u'GlobalIPv6PrefixLen': 0, u'Links': None, u'GlobalIPv6Address': u'', u'IPv6Gateway': u'', u'IPAMConfig': None, u'EndpointID': u'720f6bd6dfb0b14f896631f07d5a2eb739452588dacd284f258cae3b03f75a61', u'IPPrefixLen': 16, u'IPAddress': u'172.20.0.4', u'Gateway': u'172.20.0.1', u'Aliases': None}}}, u'HostConfig': {u'NetworkMode': u'cello_default'}, u'ImageID': u'sha256:682b41d019095206f88863d762dc80c39b716b5a90e28ef80a43644996f05d37', u'State': u'running', u'Command': u'/entrypoint.sh mongod', u'Names':  u'/mongo' , u'Mounts':  {u'RW': True, u'Name': u'caa78a9369d18d5f60b442c951b9133eccb790031d93d243a81319e9827edc4f', u'Propagation': u'', u'Destination': u'/data/configdb', u'Driver': u'local', u'Source': u'/var/lib/docker/volumes/caa78a9369d18d5f60b442c951b9133eccb790031d93d243a81319e9827edc4f/_data', u'Mode': u'', u'Type': u'volume'}, {u'RW': True, u'Propagation': u'', u'Destination': u'/data/db', u'Source': u'/opt/cello/mongo', u'Mode': u'rw', u'Type': u'bind'} , u'Id': u'3a79266cf160cb1c64514fc3e66df951cd6393b420bfae6a46cbef35b3a45544', u'Ports':  {u'IP': u'127.0.0.1', u'Type': u'tcp', u'PublicPort': 27018, u'PrivatePort': 27018}, {u'IP': u'127.0.0.1', u'Type': u'tcp', u'PublicPort': 27017, u'PrivatePort': 27017} }, {u'Status': u'Up About a minute', u'Created': 1486321568, u'Image': u'yeasy/nginx', u'Labels': {u'com.docker.compose.service': u'nginx', u'com.docker.compose.config-hash': u'6fc508246f119fa45a5048e3dbc5d7ad7148490c6f3e9b8ce6fca4650a3c43c4', u'com.docker.compose.project': u'cello', u'com.docker.compose.version': u'1.8.0', u'com.docker.compose.oneoff': u'False', u'com.docker.compose.container-number': u'1'}, u'NetworkSettings': {u'Networks': {u'cello_default': {u'NetworkID': u'9159be1bf998801be381f25171dd83e3fb666d40b91fe33bc8671147fc7e6c4e', u'MacAddress': u'02:42:ac:14:00:06', u'GlobalIPv6PrefixLen': 0, u'Links': None, u'GlobalIPv6Address': u'', u'IPv6Gateway': u'', u'IPAMConfig': None, u'EndpointID': u'2dac117f27e4f43bf433cf5c0b356af2e0fb01f87cdb666c075aa539b95b9ef7', u'IPPrefixLen': 16, u'IPAddress': u'172.20.0.6', u'Gateway': u'172.20.0.1', u'Aliases': None}}}, u'HostConfig': {u'NetworkMode': u'cello_default'}, u'ImageID': u'sha256:2cee8a46dbb102990623ffed9d6cc127a79d048fe8cb576bf7cbd176e470612a', u'State': u'running', u'Command': u'/bin/bash /tmp/docker-entrypoint.sh', u'Names':  u'/nginx' , u'Mounts':  {u'RW': True, u'Propagation': u'', u'Destination': u'/etc/nginx/nginx.default.conf', u'Source': u'/home/tts/cello/cello/nginx/nginx.conf', u'Mode': u'rw', u'Type': u'bind'}, {u'RW': True, u'Name': u'88d1082cc1ef1d79c4649faabfd76a56d4153e3f49804d59d3b285c8cafbf672', u'Propagation': u'', u'Destination': u'/var/cache/nginx', u'Driver': u'local', u'Source': u'/var/lib/docker/volumes/88d1082cc1ef1d79c4649faabfd76a56d4153e3f49804d59d3b285c8cafbf672/_data', u'Mode': u'', u'Type': u'volume'} , u'Id': u'e08194a0003f8d5b33aee7bfb14c8b3eddab3da97a42e91d644326e879601e0f', u'Ports':  {u'IP': u'0.0.0.0', u'Type': u'tcp', u'PublicPort': 8080, u'PrivatePort': 8080}, {u'Type': u'tcp', u'PrivatePort': 443}, {u'IP': u'0.0.0.0', u'Type': u'tcp', u'PublicPort': 80, u'PrivatePort': 80} }, {u'Status': u'Restarting (1) 23 seconds ago', u'Created': 1486321568, u'Image': u'cello-dashbard', u'Labels': {u'com.docker.compose.service': u'dashboard', u'com.docker.compose.config-hash': u'a743789f5ead67b208dc45a75a195668edd9434b498885f287e26aeebdab3800', u'com.docker.compose.project': u'cello', u'com.docker.compose.version': u'1.8.0', u'com.docker.compose.oneoff': u'False', u'com.docker.compose.container-number': u'1'}, u'NetworkSettings': {u'Networks': {u'cello_default': {u'NetworkID': u'9159be1bf998801be381f25171dd83e3fb666d40b91fe33bc8671147fc7e6c4e', u'MacAddress': u'', u'GlobalIPv6PrefixLen': 0, u'Links': None, u'GlobalIPv6Address': u'', u'IPv6Gateway': u'', u'IPAMConfig': None, u'EndpointID': u'', u'IPPrefixLen': 0, u'IPAddress': u'', u'Gateway': u'', u'Aliases': None}}}, u'HostConfig': {u'NetworkMode': u'cello_default'}, u'ImageID': u'sha256:31ac917367c79b83d5d80637eff35ab172b0c21d1de3b3dee53d3d9db963ea35', u'State': u'restarting', u'Command': u'python dashboard.py', u'Names':  u'/dashbard' , u'Mounts':  {u'RW': True, u'Propagation': u'', u'Destination': u'/app', u'Source': u'/home/tts/cello/cello/src', u'Mode': u'rw', u'Type': u'bind'} , u'Id': u'a2c0a16cc65c9407ac5575430acb374d91dc74f03d272052e756cd1d04f9b277', u'Ports':   }, {u'Status': u'Restarting (1) 23 seconds ago', u'Created': 1486321568, u'Image': u'cello-restserver', u'Labels': {u'com.docker.compose.service': u'restserver', u'com.docker.compose.config-hash': u'91de5062a838d3b37133d84becbdbc83af209d8dd5ddee981a029755d444c46a', u'com.docker.compose.project': u'cello', u'com.docker.compose.version': u'1.8.0', u'com.docker.compose.oneoff': u'False', u'com.docker.compose.container-number': u'1'}, u'NetworkSettings': {u'Networks': {u'cello_default': {u'NetworkID': u'9159be1bf998801be381f25171dd83e3fb666d40b91fe33bc8671147fc7e6c4e', u'MacAddress': u'', u'GlobalIPv6PrefixLen': 0, u'Links': None, u'GlobalIPv6Address': u'', u'IPv6Gateway': u'', u'IPAMConfig': None, u'EndpointID': u'', u'IPPrefixLen': 0, u'IPAddress': u'', u'Gateway': u'', u'Aliases': None}}}, u'HostConfig': {u'NetworkMode': u'cello_default'}, u'ImageID': u'sha256:a62dfaad02625f7a269c0198c151f03ac0fc0b3a2300272374cbd8e8ccbafbf3', u'State': u'restarting', u'Command': u'python restserver.py', u'Names':  u'/restserver' , u'Mounts':  {u'RW': True, u'Propagation': u'', u'Destination': u'/app', u'Source': u'/home/tts/cello/cello/src', u'Mode': u'rw', u'Type': u'bind'} , u'Id': u'9fdc047d1f8b3946fab73e7e8effd41b72c0b8d366c034719f9483e1ddf55c27', u'Ports':   }, {u'Status': u'Restarting (1) 26 seconds ago', u'Created': 1486321568, u'Image': u'cello-watchdog', u'Labels': {u'com.docker.compose.service': u'watchdog', u'com.docker.compose.config-hash': u'29fe290efa0d0249e889e0cbf0aea618a05d2596d2c6d0ff30fbc555f0e5aa66', u'com.docker.compose.project': u'cello', u'com.docker.compose.version': u'1.8.0', u'com.docker.compose.oneoff': u'False', u'com.docker.compose.container-number': u'1'}, u'NetworkSettings': {u'Networks': {u'cello_default': {u'NetworkID': u'9159be1bf998801be381f25171dd83e3fb666d40b91fe33bc8671147fc7e6c4e', u'MacAddress': u'', u'GlobalIPv6PrefixLen': 0, u'Links': None, u'GlobalIPv6Address': u'', u'IPv6Gateway': u'', u'IPAMConfig': None, u'EndpointID': u'', u'IPPrefixLen': 0, u'IPAddress': u'', u'Gateway': u'', u'Aliases': None}}}, u'HostConfig': {u'NetworkMode': u'cello_default'}, u'ImageID': u'sha256:8717207b77897790b837c3516a401dba42b5970f1327eb0173025f456dff5ad4', u'State': u'restarting', u'Command': u'python watchdog.py', u'Names':  u'/watchdog' , u'Mounts':  {u'RW': True, u'Propagation': u'', u'Destination': u'/app', u'Source': u'/home/tts/cello/cello/src', u'Mode': u'rw', u'Type': u'bind'} , u'Id': u'8422fffa5285821273a7769dc17b8f184574d1aec8888522b60bae9744db1b57', u'Ports':   }  >>> exit()                </code>  +++++++ and the docker-compose version +++++++++++  root@localnode # docker-compose version docker-compose version 1.8.0, build 94f7016 docker-py version: 1.10.6 CPython version: 2.7.13 OpenSSL version: OpenSSL 1.0.2j-fips  26 Sep 2016  Strange part is I can run the 'from docker import Client' from the command prompt. I tried with sudo and root directly just to rule out any profile based issues or path settings.  Any more information please let me know.  Regards, Amjad  ></body> </Action>
<Action id="20700" issue="14417" author="baohua" type="comment" created="2017-02-06 01:32:51.0" updateauthor="baohua" updated="2017-02-06 01:32:51.0"> <body><! CDATA Dear amjad  The python cmd should be run inside the cello-dashboard container. e.g.,  ``` docker exec -it cello-dashboard bash #python #from docker import Client ```  Are u using slack, pls go to the https://hyperledgerproject.slack.com/archives/cello.  Let's dig out the issue there.  ></body> </Action>
<Action id="20701" issue="14417" author="amjadnz" type="comment" created="2017-02-06 05:52:22.0" updateauthor="amjadnz" updated="2017-02-06 05:52:22.0"> <body><! CDATA Dear Yang,  as shown below and in the initial comment:  CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                          PORTS                                                 NAMES 63e5d365e43c        mongo:3.2           "/entrypoint.sh mo..."   About a minute ago   Up About a minute               127.0.0.1:27017-27018->27017-27018/tcp                mongo 05e6649877fd        yeasy/nginx         "/bin/bash /tmp/do..."   About a minute ago   Up About a minute               0.0.0.0:80->80/tcp, 0.0.0.0:8080->8080/tcp, 443/tcp   nginx 319facf8d38e        cello-dashbard      "python dashboard.py"    About a minute ago   Restarting (1) 27 seconds ago                                                         dashbard 4a76e2d455ae        cello-restserver    "python restserver.py"   About a minute ago   Restarting (1) 28 seconds ago                                                         restserver 110df7fa4835        cello-watchdog      "python watchdog.py"     About a minute ago   Restarting (1) 27 seconds ago                                                         watchdog  the docker container are in a stage of "Restarting " hence i cannot bash into them.  Only NGINX Container restarted without any issues. The Cello specific containers are having issue. Shall I try python3.5 instead of python?  Regards, Amjad  ></body> </Action>
<Action id="20702" issue="14417" author="amjadnz" type="comment" created="2017-02-06 05:54:48.0" updateauthor="amjadnz" updated="2017-02-06 05:54:48.0"> <body><! CDATA Infact when I tried   tts@localnode src $ sudo docker exec -it dashbard bash  I get the following error message:  Error response from daemon: Container 319facf8d38eda0c555af047e490635e6adf0d14373b67e95148ecef49ce67d3 is restarting, wait until the container is running  ></body> </Action>
<Action id="20703" issue="14417" author="amjadnz" type="comment" created="2017-02-06 05:58:31.0" updateauthor="amjadnz" updated="2017-02-06 05:58:31.0"> <body><! CDATA Also you are mentioning cello-dashboard but my container name is dashbard.  Is there a difference in compose.yaml?   ></body> </Action>
<Action id="20704" issue="14417" author="baohua" type="comment" created="2017-02-06 06:17:05.0" updateauthor="baohua" updated="2017-02-06 06:17:05.0"> <body><! CDATA It seems the dashboard container was not created successfully.  Could u delete the dashboard image, and run `make redeploy service=dashboard`.  Then show the log of the dashboard container?  By the way, can u using the chat channel? https://chat.hyperledger.org/channel/cello.  Thanks!  ></body> </Action>
<Action id="20706" issue="14417" author="baohua" type="comment" created="2017-02-06 11:42:06.0" updateauthor="baohua" updated="2017-02-06 11:42:06.0"> <body><! CDATA The reason is the docker-compose python lib has changes in its new version.  Since 1.10.0, there will be docker client error with docker-compose python lib.  ``` from docker import Client ```  Will fix soon.  ></body> </Action>
