<Issue id="23970" key="CE-173" number="173" project="10200" reporter="sdarwin" assignee="tongliofcary" creator="sdarwin" type="10004" summary="Cello Ansible - Kafka crashing" environment="Ubuntu 16.04, Cello Ansible v0.7, Docker 1.13.1" priority="3" resolution="10000" status="10001" created="2017-11-16 12:28:22.0" updated="2017-11-30 09:34:30.0" resolutiondate="2017-11-30 09:34:30.0" votes="0" watches="2" workflowId="23971"> <description><! CDATA After provisioning a new AWS cluster with the Ansible scripts, all the docker containers were running except Kafka, which was rebooting.  The docker logs shows that it was unable to connect to the zookeepers nodes. Further debugging indicated that all inter-node communication was broken. Not just zookeeper. Log into a container, and try to ping another container on a different host. The ping fails.  Ultimately, the explanation is here https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#container-communication-between-hosts  """ Container communication between hosts For security reasons, Docker configures the iptables rules to prevent containers from forwarding traffic from outside the host machine, on Linux hosts. Docker sets the default policy of the FORWARD chain to DROP. To override this default behavior you can manually change the default policy: $ sudo iptables -P FORWARD ACCEPT The iptables settings are lost when the system reboots. If you want the change to be permanent, refer to your Linux distribution’s documentation. """  In order to make the change permanent I have experimented with iptables-persistent, netfilter-persistent, and ufw. However, if Docker launches after those services it may still overwrite iptables -P FORWARD DROP.  systemd is customizable in terms of dependencies. The solution could be to create a simple systemd oneshot service, which runs _after_ the docker daemon is launched. And the oneshot service will run:  $ sudo iptables -P FORWARD ACCEPT     ></description> </Issue>
