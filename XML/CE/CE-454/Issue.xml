<Issue id="33400" key="CE-454" number="454" project="10200" reporter="ritel126" assignee="hightall" creator="ritel126" type="10002" summary="Some parameters are not given value in the function of generateNetwork." priority="2" resolution="10000" status="10001" created="2018-08-31 09:44:16.0" updated="2019-03-22 12:38:34.0" resolutiondate="2019-03-22 12:38:34.0" votes="0" watches="1" workflowId="44688"> <description><! CDATA In the user-dashboard codes of file app/service/chain.js, Some paramters of the function generateNetwork work with no values. Which include peerConfig.grpc and peerConfig.event and is mark red below.     async generateNetwork(chainId)  {     const \\{ ctx }  = this;      const chain = await ctx.model.Chain.findOne(\{ _id: chainId });      const networkConfig = await ctx.model.NetworkConfig.findOne(\{ chain });      const orgConfigs = await ctx.model.OrgConfig.find(\{ networkConfig }).sort('sequence');      const ordererConfig = await ctx.model.OrdererConfig.findOne(\{ networkConfig });      const network = {        orderer: {          url: `grpcs://${ordererConfig.url}`,          'server-hostname': ordererConfig.serverHostName,          tls_cacerts: '/var/www/app/lib/fabric/fixtures/channel/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt',        },      };      for (const index in orgConfigs)  {       const orgConfig = orgConfigs index ;       const caConfig = await ctx.model.CaConfig.findOne(\\{ networkConfig, sequence: orgConfig.sequence }  );        const peerConfigs = await ctx.model.PeerConfig.find(\{ networkConfig, orgConfig }).sort('sequence');        const peers = {};        for (const peerIndex in peerConfigs) {          const peerConfig = peerConfigs peerIndex ;          peers `peer${peerConfig.sequence + 1}`  = {  {color:#de350b}          requests: `grpcs://${peerConfig.grpc}`,{color}  {color:#de350b}          events: `grpcs://${peerConfig.event}`,{color}            'server-hostname': `peer$\{peerConfig.seq  ></description> </Issue>
