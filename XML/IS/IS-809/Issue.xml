<Issue id="31751" key="IS-809" number="809" project="10401" reporter="smithbk" assignee="smithbk" creator="smithbk" type="10004" summary="ErrorCode: Invalid library state: MerkleTree contains invalid data Syntax(&quot;missing field `data`&quot;)" priority="2" resolution="10000" status="10001" created="2018-07-10 04:00:40.0" updated="2018-07-12 05:04:24.0" resolutiondate="2018-07-12 05:04:24.0" votes="0" watches="2" workflowId="51453"> <description><! CDATA I'm getting the following error when trying to connect to my node pool.  {code} INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received TRACE|indy::services::pool          |           src/services/pool/mod.rs:575 | PoolService::create test with config Some("{\"genesis_txn\": \"/home/indy/sandbox/pool_transactions_genesis\"}") INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received ERROR|indy::services::pool          |           src/services/pool/mod.rs:428 | Pool worker thread finished with error CommonError(InvalidState("MerkleTree contains invalid data Syntax(\"missing field `data`\")")) INFO|indy::commands                |                src/commands/mod.rs:108 | PoolCommand command received INFO|indy::commands::pool          |               src/commands/pool.rs:67  | OpenAck handle 1, pool_id 2, result Err(CommonError(InvalidState("MerkleTree contains invalid data Syntax(\"missing field `data`\")"))) ERROR|indy::errors::indy            |                 src/errors/indy.rs:68  | Casting error to ErrorCode: Invalid library state: MerkleTree contains invalid data Syntax("missing field `data`") _indy_loop_callback: Function returned error 112 Traceback (most recent call last): File "/home/indy/bin/start-client", line 5, in <module> NodePool('test') File "/home/indy/bin/util.py", line 12, in __call__ Singleton, cls).__call__(*args, **kwargs) File "/home/indy/bin/node_pool.py", line 28, in __init__ self.async_init(pool_file=pool_file, cfg=cfg)) File "/usr/lib/python3.5/asyncio/base_events.py", line 387, in run_until_complete return future.result() File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result raise self._exception File "/usr/lib/python3.5/asyncio/tasks.py", line 241, in _step result = coro.throw(exc) File "/home/indy/bin/node_pool.py", line 42, in async_init await self.async_open_pool(cfg) File "/home/indy/bin/node_pool.py", line 60, in async_open_pool self.handle = await pool.open_pool_ledger(self.name, json.dumps(cfg)) File "/usr/local/lib/python3.5/dist-packages/indy/pool.py", line 82, in open_pool_ledger open_pool_ledger.cb) File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__ yield self  # This tells Task to wait for completion. File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup future.result() File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result raise self._exception indy.error.IndyError: ErrorCode.CommonInvalidState {code}  In order to reproduce this error: 1. Unzip the attached bug.zip file and cd to the 'bug' directory 2. Run `docker-compose up -d` The pool container starts successfully but the client container fails with the above error. To see the error: 3. Run `docker ps -a` to get the <CONTAINER ID> of the client container 4. Run `docker logs <CONTAINER ID>` to see the error  In addition to debugging this issue, please provide recommendations for how I can change my pool and client dockerfiles to be version locked.  These (or similar) dockerfiles used to work, but apparently something changed in the stable release to break this.  I would like to avoid such breaks in the future.    ></description> </Issue>
