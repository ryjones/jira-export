<Issue id="20682" key="IS-339" number="339" project="10401" reporter="devin-fisher" assignee="nage" creator="devin-fisher" type="10006" summary="As a Developer using libindy, I need the version to be sandboxed for development." priority="3" status="10405" created="2017-09-07 22:21:45.0" updated="2019-03-29 21:04:19.0" votes="0" watches="1" workflowId="50595"> <description><! CDATA Consider a developer who has multiple needs for libindy:  In production use on the development box, libindy is installed with a stable version for a single sign-on technology used by the developer.  The developer is not developing the single sign-on software but uses it to access used services.  In indy-sdk development: the developer is fixing a small bug for a PR against the indy-sdk. Maybe just a typo in the documentation. But it is the latest version of indy-sdk.   In application work: the developer is working on an application (consumer agent) that uses libindy. The application is using an older version due to backward incompatible changes that have not been upgraded. Upgrade work has been scheduled but not for a few months.     This ticket describes a general problem. But the concrete problem right now is that the maven package for libindy does not contain the shared libraries needed to run the java libindy wrapper. I assume that the expectation was to require an installation of the deb package.  But that is bad UX for the developer. Some reasons why: # The developer is likely not expecting to have to do an outside action when including dependency in a build tool like Maven. # The developer will have to manage version manually with some difficulty. He will have to figure out what version of the OS package is needed for the version he depended on in the build tool. There is no clear communication of these versions. # This forces the developer to deploy his software via OS packages. Otherwise, there is no why for him to automate the dependency on the deb package. For Java, it is common to deploy via WAR files that package all needed bits into a single file.   ></description> </Issue>
