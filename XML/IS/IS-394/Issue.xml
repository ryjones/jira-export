<Issue id="22856" key="IS-394" number="394" project="10401" reporter="gudkov" assignee="sergey.minaev" creator="gudkov" type="10006" summary="Agent API: Support new key management and agents communication approach in iOS wrapper" priority="3" resolution="10000" status="10001" created="2017-10-26 15:17:11.0" updated="2017-11-07 12:40:21.0" resolutiondate="2017-11-07 12:40:21.0" votes="0" watches="1" workflowId="51115"> <description><! CDATA There are significant changes in our API:  1. The new libindy release will introduce generic keys management. Before it was possible to only use keys assigned to DIDs and crypto functions were only allowed to perform only DID-based encryption and signatures creation. Starting from next libindy release it will be possible to create, store and use keys detached from DIDs. 2. Verkey is used as an identifier of generic keys. 3. DID-based crypto becomes a subset of generic-keys based crypto. Creation of my did causes creation of generic-key in a compatible format. The key id can be resolved with the key_for_did method and used in any generic-keys based functions. 4. functions for DID-based crypto are still here but will be replaced in the future with generic-keys based crypto functions. 5. The approach of agents communication is completely changed. Instead of using proprietary secure transport layer protocol libindy will provide generic helpers to create authenticated and encrypted messages. This messages exchange doesn't require a complex handshake-based protocol. Messages can be sent through an insecure channel (http, unencrypted zmq). 6. libindy now provides the helper-methods to securely store any application-specific metadata with the key, did or pairwise.  See corresponded PR for details:  https://github.com/hyperledger/indy-sdk/pull/330   We need to support this changes in iOS wrapper too.  ></description> </Issue>
