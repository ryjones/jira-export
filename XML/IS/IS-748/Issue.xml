<Issue id="30934" key="IS-748" number="748" project="10401" reporter="ashcherbakov" assignee="vladimirwork" creator="ashcherbakov" type="10002" summary="As an app using LibIndy, I need to be able to work with both IndyNode 1.3 and IndyNode 1.4" priority="2" resolution="10000" status="10001" created="2018-06-07 07:29:40.0" updated="2018-06-21 12:55:08.0" resolutiondate="2018-06-21 09:47:30.0" votes="0" watches="3" workflowId="51411"> <description><! CDATA As Indy Node 1.4 release contains breaking changes, it can work with the new clients supporting this changes only.  So, all requests from libindy to the pool need to be sent with a new protocolVersion.  *Acceptance criteria:* * there is a global property PROTOCOL_VERSION in libindy which is used in every request to the pool (Request and LedgerStatus messages) * by default PROTOCOL_VERSION=1 (for IndyNode 1.3, old one), so that by default LibIndy 1.5 will work with IndyNode 1.3, but not with IndyNode 1.4. * add a method `indy_set_protocol_version()` (should be called during initialization of the app) which will set global PROTOCOL_VERSION which is passed to all requests * add a check to `indy_open_pool`: ** if PROTOCOL_VERSION=1, and the passed genesis txn file is in a new (1.4) format - raise an Error which will say to the user to call `indy_set_protocol_version(2)` ** if PROTOCOL_VERSION=2, and the passed genesis txn file is in old (1.3) format - raise an Error which will say to the user to call `indy_set_protocol_version(1)` * use PROTOCOL_VERSION=2 and the latest master in all integration tests  ></description> </Issue>
