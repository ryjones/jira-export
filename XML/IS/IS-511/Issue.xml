<Issue id="26686" key="IS-511" number="511" project="10401" reporter="artemkaaas" assignee="artemkaaas" creator="artemkaaas" type="10006" summary="Error handling: Libindy must return Message in addition to Error Code" priority="3" resolution="10000" status="10001" created="2018-01-09 12:34:49.0" updated="2019-01-15 15:09:18.0" resolutiondate="2019-01-15 11:28:33.0" votes="1" watches="5" workflowId="51212"> <description><! CDATA For the moment it is possible to see developer readable error information only in logs that complicates development. We need the way to return this information and ideally full error stack to developers.  *Acceptance criteria* 1. Libindy allow to return main error description and error stack 2. For wrapper dedicated stories created 2. For vcx and wrappers dedicated stories created 3. For CLI integration dedicated stories created 4. Changes are backward compatible  *POA*  1. Migrate to *failure *crate for error handling to get full error chain 2. Add synchronous *indy_get_error(command_handle, error_json)* method that will return last error description and full error stack.  3. It will be allowed to call indy_get_error in the same thread in case of synchronous error or inside of callback in case of asynchronous error 4. Before synchronous return or callback calling store information about error in local thread storage 5. indy_get_error will read information from local thread storage. verify that it corresponds to command_handle and return to user. 6. Add error information to exception classes in all libindy wrappers, vcx and vcx wrappers (dedicated story) 7. Add printing new error information to CLI (dedicated story)  ></description> </Issue>
