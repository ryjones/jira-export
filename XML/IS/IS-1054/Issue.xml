<Issue id="34997" key="IS-1054" number="1054" project="10401" reporter="sklump" assignee="mattraffel" creator="sklump" type="10004" summary="Investigate: indy-sdk locks on call from subprocess" environment="Ubuntu 16.04 VM, indy-sdk 1.6.7-dev-805" priority="4" resolution="10000" status="10001" created="2018-10-31 12:52:52.0" updated="2018-12-18 12:08:35.0" resolutiondate="2018-12-06 12:55:30.0" votes="0" watches="3" timeoriginalestimate="57600" timeestimate="57600" workflowId="51623"> <description><! CDATA Indy-sdk libindy blocks the on calls that come from a subprocess. It's the command executor that just doesn't get its message.  Procedure: *1:* create indy-sdk/wrappers/python/tests/ledger/test_fork.py as per attachment   ^test_fork.py .  *2:* From indy-sdk/wrappers/python/tests/ledger/, run the test case however one normally does in the environment:  $ pipenv run pytest -s test_fork.py ================================================= test session starts ================================================== platform linux -- Python 3.7.0, pytest-3.6.4, py-1.7.0, pluggy-0.7.1 rootdir: /home/sklump/indy-sdk/wrappers/python, inifile: plugins: asyncio-0.8.0 collected 1 item  test_fork.py parent process 17740 returning .  =============================================== 1 passed in 0.03 seconds =============================================== Child process 17750 done set-sid process 17750 exiting Grandchild process 17751 calling blob_storage.open_writer() $ kill 17751 $ kill 17751 -bash: kill: (17751) - No such process  *3:* Note that the call from the subprocess never returns from indy-sdk and must be killed off manually (although it may time out if the test harness is so configured).  Is this just a Linux characteristic I don't understand? Very possible. Regardless, I would appreciate any advice on getting past this, allowing our main process to fork a subprocess to run an expensive toolkit operation in parallel, surviving after the main process exits until the work (i.e., revocation registry & tails file generation) is done.  *Acceptance Criteria* * Investigate the cause * Create a separate issue for fixing the problem If it is an easy fix, you can go ahead and do it.  ></description> </Issue>
