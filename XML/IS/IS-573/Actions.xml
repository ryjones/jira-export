<Action id="41179" issue="27866" author="sergey.minaev" type="comment" created="2018-03-05 06:16:46.0" updateauthor="sergey.minaev" updated="2018-03-05 06:16:46.0"> <body><! CDATA  ~MikeLodder  FYI More details about 0) point. Actually the sorting is needed for ordering at steps 6.2 and 6.6.1 (paper version "7 February 2018, version 0.3"). The proof defined as set of sub-proof, so the order is undefined. Sorting now is popped up from function get_hash_as_int only to these 2 places.  ></body> </Action>
<Action id="41185" issue="27866" author="mikelodder" type="comment" created="2018-03-05 13:14:05.0" updateauthor="mikelodder" updated="2018-03-05 13:16:11.0"> <body><! CDATA Sorting isn't necessary if you add the values in the same order in both places.  I have done that as part of the DKMS project in my fork at  https://github.com/mikelodder7/indy-crypto .  If you are sorting in 6.2 and 6.6.2, then why are you not also sorting at 2.0.2 and 3.2.1?  Its all about computing the exact same input. That's all that matters. As long as the data are added in the same order then you don't need to sort.  ></body> </Action>
<Action id="41256" issue="27866" author="sergey.minaev" type="comment" body=" ~MikeLodder  We can&apos;t guarantee same order of subclaims/subproofs on both Prover and Verifier sides. Against cases for 2.0.2 and 3.2.1 where order is defined by the paper." created="2018-03-06 14:37:27.0" updateauthor="sergey.minaev" updated="2018-03-06 14:43:19.0"/>
<Action id="41258" issue="27866" author="sergey.minaev" type="comment" created="2018-03-06 14:47:18.0" updateauthor="sergey.minaev" updated="2018-03-06 14:47:18.0"> <body><! CDATA But if we change definition of the Proof from "Set of sub-proofs" to "Array of sub-proofs" it will be possible to force both sides use exact order.  ~ashcherbakov  ~gudkov   ></body> </Action>
<Action id="41562" issue="27866" author="sergey.minaev" type="comment" body="Also about last point: m1_tilde not passed as raw from proover to verifier. Actually in the proof re-calculated m1 will be transferred (see PrimaryEqualProof structure)." created="2018-03-13 22:33:54.0" updateauthor="sergey.minaev" updated="2018-03-13 22:33:54.0"/>
<Action id="41622" issue="27866" author="mikelodder" type="comment" created="2018-03-14 14:37:06.0" updateauthor="mikelodder" updated="2018-03-14 14:37:06.0"> <body><! CDATA So I retract my point m1_tilde being removed. It just needs to be the same size as the other m1_tildes.  The regular m values can be recalculated by hashing the strings if they are not numbers. m1 and m2 will have to be stored of course.  ></body> </Action>
<Action id="41626" issue="27866" author="sergey.minaev" type="comment" body="There is another point to discuss about m1 (m1_tilde/m1_hat). Now it common for all sub-proofs in the proof and allow to verifier be sure about all subproofs are created from same MasterSecret. On the other hand it is a restriction: proover can&apos;t combine credentials from different MasterSecrets" created="2018-03-14 15:48:38.0" updateauthor="sergey.minaev" updated="2018-03-14 15:50:03.0"/>
<Action id="41627" issue="27866" author="mikelodder" type="comment" created="2018-03-14 16:13:23.0" updateauthor="mikelodder" updated="2018-03-14 16:13:23.0"> <body><! CDATA The m1 should be the same as in the credential, if its not then the proof will fail.  There should be an m1_tilde corresponding to each m1.  Credentials containing different m1 values cannot be linked together with m1.  ></body> </Action>
<Action id="41660" issue="27866" author="sergey.minaev" type="comment" created="2018-03-15 06:35:02.0" updateauthor="sergey.minaev" updated="2018-03-15 06:38:19.0"> <body><! CDATA  ~MikeLodder  I mean more complex scenario:  > proover can't combine credentials from different MasterSecrets  In other words: some Proover can (??) has 2 (on even more) different MSs and some credentials are based on the first one, others created with the second one. Current implementation doesn't allow to combine credential based on different MSs into one proof as sub-proofs. But as I can see from the paper, from math point of view, m1 is just attribute to prove, so in abstract implementation it's a valid scenario. Of course, Verifier will notice, that some subproofs are based at one MS, and others on the different. So they are not linked. But it may be OK for some scenario.  ></body> </Action>
<Action id="41663" issue="27866" author="sergey.minaev" type="comment" created="2018-03-15 07:45:35.0" updateauthor="sergey.minaev" updated="2018-03-15 07:45:35.0"> <body><! CDATA After discussion with author of Anoncreds paper I and  ~ashcherbakov  decide to change proof structure provided by indy-crypto to ordered sub-proofs (was unordered). It allow to implement 0th point but results in addition requirement for indy-crypto user: the order should be same on both Issuer and Verifier sides. Changes are appended to  the PR|https://github.com/hyperledger/indy-crypto/pull/81   ></body> </Action>
<Action id="42997" issue="27866" author="gudkov" type="comment" body=" ~MikeLodder  Could you verify the fixes?" created="2018-04-16 12:51:10.0" updateauthor="gudkov" updated="2018-04-16 12:51:10.0"/>
<Action id="43015" issue="27866" author="mikelodder" type="comment" body="Sure which pull request do I need to look at? Is it pull request 81?" created="2018-04-16 17:26:01.0" updateauthor="mikelodder" updated="2018-04-16 17:28:17.0"/>
<Action id="43092" issue="27866" author="gudkov" type="comment" body="Yes, 81 is correct PR. It is already merged. " created="2018-04-18 10:26:52.0" updateauthor="gudkov" updated="2018-04-18 10:26:52.0"/>
<Action id="43397" issue="27866" author="gudkov" type="comment" body="I don&apos;t see any movement here for a long time. For me the solution looks ok." created="2018-04-25 11:19:30.0" updateauthor="gudkov" updated="2018-04-25 11:19:30.0"/>
