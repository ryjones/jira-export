<Issue id="27866" key="IS-573" number="573" project="10401" reporter="mikelodder" assignee="gudkov" creator="mikelodder" type="10004" summary="Errors with Anoncreds implementation" priority="2" resolution="10000" status="10001" created="2018-02-20 15:07:06.0" updated="2018-05-17 17:35:59.0" resolutiondate="2018-04-25 11:19:34.0" votes="0" watches="3" workflowId="51259"> <description><! CDATA In indy-crypto, there are several issues that need to be addressed.  src/cl/helpers.rs - function get_hash_as_int     Please remove nums.sort() and and the hashed_array.reverse()  src/cl/issuer.rs - function _gen_claim_context    1 - There is a function for bitwise_or_big_int is an incorrect implementation. It should be   let mut values: Vec<u8> = Vec::new(); values.extend_from_slice(&prover_id_bn.to_bytes()?); values.extend_from_slice(&rev_idx_bn.to_bytes()?);  let claim_context = get_hash_as_int(&mut vec! values )?;     2 - Get rid of the pow_2 operation, the math in the anoncreds paper simply means that the output from the hash should be 256 bits. Please put a comment if needed to keep that as the output length.  src/cl/prover.rs - struct Proofbuilder  ProofBuilder.m1_tilde is not needed. The anoncreds paper will be updated to remove this. The code needs to match this.     The *m* values need to be checked by Prover and Verifier to make sure values have not been altered.  Prover should calculate the SHA256 hash of all attributes signed by the Issuer to verify the signature. *m* values don't even need to be sent except *m2* – the revocation context value. This checks that the Issuer is honest.  Verifiers should compute the SHA256 hash of all revealed attributes to check that the Prover is honest and has not changed his values.     ></description> </Issue>
