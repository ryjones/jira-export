<Action id="66132" issue="43558" author="ckochenower" type="comment" created="2019-12-05 17:04:51.0" updateauthor="ckochenower" updated="2019-12-05 17:18:30.0"> <body><! CDATA For my records:  Slack discussion with  ~sergey.minaev  and  ~sergey.khoroshavin  {panel} Also sent to the channel  Sergey Minaev  7 hours ago @corin.kochenower thank you for detailed tickets! I think we can include IS-1438 (CLI) in December release IS-1437 - The behavior for success error code / no exception while Reject or ReckNack is expected behavior. It means that response from the ledger is received under consensus. @Richard Esplin @jonathan.rayback FYI  @Sergey Minaev - *Even if it is by design, it seems a bit awkward. I could check to see if there is an "op" attribute, and if its value is "REJECT", but that doesn't clearly tell me why it was rejected unless I look at the "reason" attribute. The "reason" is text, which is not machine friendly. Status codes, and exceptions, however, are machine friendly.* Can we get a status code in the response along with "op = REJECT" and "reason = <text>"? Parsing text from "reason" doesn't seem like best practice.  Sergey Minaev  2 hours ago @corin.kochenower it's interesting idea. @alexander.shcherbakov @Sergey Khoroshavin is it possible to add status code on Indy Node level in reasonable time? (edited)   corin.kochenower  2 hours ago The text in the "reason" ... client request invalid: InvalidClientTaaAcceptanceError('Txn Author Agreement acceptance is required for ledger with id 1'  corin.kochenower  2 hours ago The fact is that a request can be "REJECT"-ed for more reasons than the TAA, right? It isn't reasonable to expect client software to make decisions based on scraping data from text. Status /Reason codes are best practice.  Sergey Minaev  2 hours ago yep, afaik Node has several error classes like InvalidClientTaaAcceptanceError and the replay has reason as combination of class name and the clarification message. I think it should be possible to provide status code as well and map the class to the code  Sergey Khoroshavin  2 hours ago @Sergey Minaev it possible to add status codes, however: there will be lots of codes these codes needs to be documented these codes will become part of protocol, so cannot be changed at whim - so should be added very carefully Also, as far as I understand (but I might be wrong!) current "reasons" were designed to be showed to human, not machine, and as for machine success/failure distinction was considered enough. So, all in all - we can add status codes, but this needs discussion (probably with @daniel.hardman), and it's worth separate ticket in JIRA, so it can be tracked, and @Richard Esplin is aware of this as well. (edited)   Sergey Minaev  1 hour ago @corin.kochenower I'll prepare the list of options (hopefully this week) :+1: 1  @Sergey Khoroshavin - Success/Failure distinction in the case of TAA will not be sufficient for an "on_file" acceptance mechanism. @dfisher and I discussed this with @Richard Esplin and Richard recommended that we manage a version change to the TAA in the following manner: When a new version of the TAA is announced, the Sovrin Foundation will give a minimum of 30 day notice. During this 30 day window, clients that use an "on_file" acceptance mechanism (like Evernym/Verity) must do the following: Accept (sha256(<version><text>)) the new TAA and store the digest "on_file" (in server configuration). Programmatically handle the change when the Sovrin Foundation (ledger) begins requiring the new version of the TAA.  To programmatically handle the change when the Sovrin Foundation adds the new TAA version to the ledger, clients must do the following to detect and handle the change: Submit write request with what is last known to be the current TAA. When/If a write fails because of the TAA: Log the failure at whatever log level seems appropriate. Get the current TAA version and text from the ledger. Check if the version is "on_file" (i.e. in a config file). If the version currently required by the ledger is not "on_file", log an ERROR and fail with the assumption ERRORs of this sort result in a emergent response from Technical Enablement/Support. -OR- If on file, retry once with the "on_file" digest for the version currently required by the ledger. There had been discussion about accepting two versions of the TAA for a period of time, but legal council doesn't seem happy with that. (edited) {panel}   ></body> </Action>
<Action id="66160" issue="43558" author="ckochenower" type="comment" body="I updated the title of the ticket based on the fact that the solution will likely continue to respond with an &quot;op&quot; of &quot;REJECT&quot;, a &quot;reason&quot; with a human readable explanation for the rejection, AND and additional field/attribute that will contain a code that can be used by SDK users to programmatic-ly handle rejections based on a reason code instead of searching for words in the reason text." created="2019-12-06 18:46:32.0" updateauthor="ckochenower" updated="2019-12-06 18:46:32.0"/>
