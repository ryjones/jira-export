<Issue id="32444" key="IS-855" number="855" project="10401" reporter="danielhardman" creator="danielhardman" type="10002" summary="need pack_msg() in SDK" priority="3" resolution="10200" status="10001" created="2018-07-31 17:26:10.0" updated="2019-03-29 20:57:31.0" resolutiondate="2019-03-29 20:57:31.0" votes="0" watches="1" workflowId="51481"> <description><! CDATA Today, libvcx has a prep_msg() function (I think) that turns a payload into something suitable for transporting over the wire. This function takes a small number of paramters (I think, the DID or verkey of the recipient, and the signing key of the sender), and it encrypts and msgpacks. We want a function in the SDK that is like that (possibly adapted from prep_msg()), but that basically does:  <jose>.base64url(crypt(msg)), where "crypt" = authcrypt or anoncrypt, based on some parameter  Eventually, this function will be modified to emit a JWM (the JOSE-oriented standard that Sam and Kyle are working on). This function would be the interoperability point that all agent writers would agree on, that guarantees that over-the-wire transmissions of messages have a common format.  We discussed this function in our agent-to-agent summit, and Sam and Kyle and others may want to add clarifications.  ></description> </Issue>
