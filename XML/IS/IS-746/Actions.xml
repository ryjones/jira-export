<Action id="45632" issue="30890" author="artemkaaas" type="comment" body="Implemented in PR:Â https://github.com/hyperledger/indy-sdk/pull/844" created="2018-06-07 11:26:51.0" updateauthor="artemkaaas" updated="2018-06-07 11:26:51.0"/>
<Action id="45687" issue="30890" author="artemkaaas" type="comment" created="2018-06-08 10:44:27.0" updateauthor="artemkaaas" updated="2018-06-08 10:44:27.0"> <body><! CDATA Cli was updated to work with both reply formats of a write transaction  Master build version: 560  ></body> </Action>
<Action id="45756" issue="30890" author="zhigunenko.dsr" type="comment" created="2018-06-09 16:18:13.0" updateauthor="zhigunenko.dsr" updated="2018-06-09 16:18:13.0"> <body><! CDATA *Environment:* indy-node 1.3.448 libindy 1.4.0~562  *Steps to Validate:* Run Jupyter GSG  *Actual Results:* {code:java} Getting started -> started Open Pool Ledger  _indy_loop_callback: Function returned error 307  --------------------------------------------------------------------------- IndyError                                 Traceback (most recent call last) <ipython-input-1-cf352738fe1d> in <module>() 796     loop = asyncio.new_event_loop() 797     asyncio.set_event_loop(loop) --> 798     loop.run_until_complete(run()) 799     time.sleep(1)  # FIXME waiting for libindy thread complete  /usr/lib/python3.5/asyncio/base_events.py in run_until_complete(self, future) 385             raise RuntimeError('Event loop stopped before Future completed.') 386  --> 387         return future.result() 388  389     def stop(self):  /usr/lib/python3.5/asyncio/futures.py in result(self) 272             self._tb_logger = None 273         if self._exception is not None: --> 274             raise self._exception 275         return self._result 276   /usr/lib/python3.5/asyncio/tasks.py in _step(***failed resolving arguments***) 239                 result = coro.send(None) 240             else: --> 241                 result = coro.throw(exc) 242         except StopIteration as exc: 243             self.set_result(exc.value)  <ipython-input-1-cf352738fe1d> in run() 14     pool_config = json.dumps({"genesis_txn": '/home/indy/sandbox/pool_transactions_genesis'}) 15     await pool.create_pool_ledger_config(pool_name, pool_config) ---> 16     pool_handle = await pool.open_pool_ledger(pool_name, None) 17  18     print("==============================")  /usr/local/lib/python3.5/dist-packages/indy/pool.py in open_pool_ledger(config_name, config) 80                         c_config_name, 81                         c_config, ---> 82                         open_pool_ledger.cb) 83  84     logger.debug("open_pool_ledger: <<< res: %r", res)  /usr/lib/python3.5/asyncio/futures.py in __iter__(self) 359         if not self.done(): 360             self._blocking = True --> 361             yield self  # This tells Task to wait for completion. 362         assert self.done(), "yield from wasn't used with future" 363         return self.result()  # May raise too.  /usr/lib/python3.5/asyncio/tasks.py in _wakeup(self, future) 294     def _wakeup(self, future): 295         try: --> 296             future.result() 297         except Exception as exc: 298             # This may also be a cancellation.  /usr/lib/python3.5/asyncio/futures.py in result(self) 272             self._tb_logger = None 273         if self._exception is not None: --> 274             raise self._exception 275         return self._result 276   IndyError: ErrorCode.PoolLedgerTimeout {code}   ></body> </Action>
<Action id="45774" issue="30890" author="artemkaaas" type="comment" body="Did not reproduce on the current master branch" created="2018-06-11 07:17:26.0" updateauthor="artemkaaas" updated="2018-06-11 07:17:26.0"/>
<Action id="45917" issue="30890" author="zhigunenko.dsr" type="comment" created="2018-06-14 07:45:01.0" updateauthor="zhigunenko.dsr" updated="2018-06-14 07:45:01.0"> <body><! CDATA *Environment:* indy-cli 1.4.0~566 indy-node 1.4.457   *Steps to Validate:* Send these commands {code:java} ledger nym did=V4SGRU86Z58d6TV7PBU111 verkey=~CoRER63DVYnWZtK8uAzNbx role=STEWARD ledger nym did=V4SGRU86Z58d6TV7PBU112  ledger attrib did=V4SGRU86Z58d6TV7PBUe6f enc=aa3f41f619aa7e5e6b6d0d ledger schema name=gvt version=1.0 attr_names=name,age ledger cred-def schema_id=1 signature_type=CL primary={"n":"1","s":"2","rms":"3","r":{"age":"4","name":"5"},"rctxt":"6","z":"7"} {code}  *Actual Results:* Response contains all filled fields  ></body> </Action>
