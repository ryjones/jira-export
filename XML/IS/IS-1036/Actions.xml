<Action id="52586" issue="34600" author="dkulic" type="comment" body="https://github.com/hyperledger/indy-sdk/pull/1243" created="2018-10-24 13:55:17.0" updateauthor="dkulic" updated="2018-10-24 13:55:17.0"/>
<Action id="52737" issue="34600" author="dkulic" type="comment" body="Built in 1.6.7 master 816" created="2018-10-29 14:56:54.0" updateauthor="dkulic" updated="2018-10-29 14:56:54.0"/>
<Action id="52740" issue="34600" author="dkulic" type="comment" created="2018-10-29 15:12:31.0" updateauthor="dkulic" updated="2018-10-29 15:27:22.0"> <body><! CDATA Test cases: # rotate-key resume=true, without rotation being started before. This should return error. # rotate-key ledger write timeut: ## Transaction written to ledger, resume should succeed. ## Transaction not written to ledger, resume should succeed  Timeout may be simulated this way:  After you connect to the pool, setup the rules to drop packets (inbound for case 2.1, outbound for case 2.2).  Do `rotate-key` command. It should fail with timeout.  Remove the firewall rules.  Try `rotate-key resume=true`. It should succeed now.  ></body> </Action>
<Action id="52761" issue="34600" author="zhigunenko.dsr" type="comment" created="2018-10-30 11:01:47.0" updateauthor="zhigunenko.dsr" updated="2018-10-30 13:19:11.0"> <body><! CDATA *Environment:* libindy 1.6.7~818 Docker: 4 separate instances as nodes and 1 as client  *Steps to Validate:* 1) rotate-key resume=true for not yet started process. Error is expected. 2) rotate-key to ledger when pool orders rotation but client response has timeout. resume = true restores keys consistency 3) rotate-key to ledger when pool doesn't order rotation, client response has timeout. resume = true restores keys consistency  *Actual Results:* 1) If second step failed, CLI show message like this: {code} Use command `did rotate-key resume=7zdMZjLQgJQGJzXExHNRjsfss8MKJ2DBXfbu3V7fD6P1` to complete {code} but valid syntax is {code:java} did rotate-key resume=true {code}  2) If pool has ordered transaction right after client has received timeout {code:java} pool(p1):wallet(w1):did(LnX...hJQ):indy> did rotate-key Transaction response has not beed received Use command `did rotate-key resume=D2c6DWYahqqsdHSxqpbwWhRaSWzaLjRB7nnE53sUHrkH` to complete pool(p1):wallet(w1):did(LnX...hJQ):indy> did rotate-key resume=true Unable to resume, verkey on ledger is completely different from verkey in wallet {code}  See _resume_true_failed.txt_ for CLI logs  3) Same problem as clause 2  *Additional Info:* * How network was being degraded (case 2):  traffic_shaping.sh|https://docs.google.com/document/d/1swLE5FwYY0tQXWpcge7KNQ5oosiz4P57Iz9843e7uHY/edit#  was started on node3 and node4 before "rotate-key" sending and stopped after "client timeout" * Client connection (case 3) was broken via "docker network disconnect pool-network indyclient" * CLI and nodes logs are attached * Used DIDs ** PNQm3CwyXbN5e39Rw3dXYx  ** LnXR1rPnncTPZvRdmJKhJQ  ** KMSWjAnqdwgLRc5yZBygcA   ></body> </Action>
<Action id="52972" issue="34600" author="dkulic" type="comment" body="New PR: https://github.com/hyperledger/indy-sdk/pull/1264" created="2018-11-02 13:46:56.0" updateauthor="dkulic" updated="2018-11-02 13:46:56.0"/>
<Action id="53063" issue="34600" author="sergey.minaev" type="comment" body="New master build is 1.6.7 821" created="2018-11-06 09:12:53.0" updateauthor="sergey.minaev" updated="2018-11-06 09:12:53.0"/>
<Action id="53075" issue="34600" author="zhigunenko.dsr" type="comment" created="2018-11-06 12:21:31.0" updateauthor="zhigunenko.dsr" updated="2018-11-06 12:24:59.0"> <body><! CDATA *Environment:* libindy 1.6.7~821  *Step to Validate:* 1) rotate-key resume=true for not yet started process. Error is expected. 2) rotate-key to ledger when pool orders rotation but client response has timeout. resume = true restores keys consistency 3) rotate-key to ledger when pool doesn't order rotation, client response has timeout. resume = true restores keys consistency 4) rotate-key resume=true is omitted but necessary  *Actual Results:* *Case #1* - OK  *Case #2* - skipped this time  *Case #3* First, I've disconnect container and tried to rotate key. _CLI logs:_  ^during_disconnect.txt   After connection reestablishing I got this: {code:java} pool(p1):wallet(w1):did(KMS...gcA):indy> did rotate-key resume=true Verkey on ledger: ~SYaYSBf1ngDyM4VtKf7nxW Current verkey in wallet: B1A3Ups41SbhE7GgwRho4xVr645ud92FQHkUBk1rWSdt Temp verkey in wallet: 5Ydq6nyMeMuJJGD6gd8GKPQ3xz3na18F3KHnDWG1GVLx Unable to resume, verkey on ledger is completely different from verkey in wallet {code} _CLI logs:_  ^after_reestablish.txt   BUT when I tried to send NYM - it was successful. And there is no record in domain ledger about new verkey. (it looks like old verkey still in action) _CLI logs_  ^check_keys.txt   *Case #4* In case I forget about "resume=true" parameter, error message may be discouraging {code:java} did rotate-key Invalid format of command params. Please check format of posted JSONs, Keys, DIDs and etc... {code} CLI Logs for case 4: {code:java} 2018-11-06T11:50:20.215053611+00:00  indy_cli::commands::did::rotate_key_command  TRACE indy_cli::commands::did::rotate_key_command:execute >> ctx CommandContext { main_prompt: RefCell { value: "indy" }, sub_prompts: RefCell { value: {1: "pool(p1)", 2: "wallet(w1)", 3: "did(PNQ...XYx)"} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {"OPENED_WALLET_HANDLE": 2, "CONNECTED_POOL_HANDLE": 3} }, string_values: RefCell { value: {"ACTIVE_DID": "PNQm3CwyXbN5e39Rw3dXYx", "CONNECTED_POOL_NAME": "p1", "OPENED_WALLET_NAME": "w1"} }, plugins: RefCell { value: {} } } params "_" 2018-11-06T11:50:20.215110996+00:00  indy::api::did  TRACE indy::api::did:indy_replace_keys_start: >>> wallet_handle: 2, did: 0x7f1cd5234700, identity_json: 0x7f1cd52151f0 2018-11-06T11:50:20.215119131+00:00  indy::api::did  TRACE indy::api::did:indy_replace_keys_start: entities>>> wallet_handle: 2, did: "PNQm3CwyXbN5e39Rw3dXYx", key_info: "_" 2018-11-06T11:50:20.215127815+00:00  indy::api::did  TRACE indy::api::did:indy_replace_keys_start: <<< res: Success 2018-11-06T11:50:20.215139632+00:00  indy::commands  INFO indy::commands:DidCommand command received 2018-11-06T11:50:20.215143977+00:00  indy::commands::did  INFO indy::commands::did:ReplaceKeysStart command received 2018-11-06T11:50:20.215147815+00:00  indy::commands::did  DEBUG indy::commands::did:replace_keys_start >>> wallet_handle: 2, key_info_json: "_", my_did: "PNQm3CwyXbN5e39Rw3dXYx" 2018-11-06T11:50:20.215159299+00:00  indy::services::crypto  TRACE indy::services::crypto:validate_did >>> did: "PNQm3CwyXbN5e39Rw3dXYx" 2018-11-06T11:50:20.215168073+00:00  indy::services::crypto  TRACE indy::services::crypto:validate_did <<< res: () 2018-11-06T11:50:20.215239713+00:00  indy::services::crypto  TRACE indy::services::crypto:create_key >>> key_info: KeyInfo { seed: None, crypto_type: None } 2018-11-06T11:50:20.215246347+00:00  indy::services::crypto  TRACE indy::services::crypto:convert_seed >>> seed: None 2018-11-06T11:50:20.215249111+00:00  indy::services::crypto  TRACE indy::services::crypto:convert_seed <<< res: None 2018-11-06T11:50:20.215326992+00:00  indy::services::crypto  TRACE indy::services::crypto:create_key <<< key: Key { verkey: "HF9azsoKeuYiR43VcqdncP2tztesdPBa1PhHU3V5qhya" } 2018-11-06T11:50:20.239107755+00:00  indy::errors::indy  ERROR indy::errors::indy:Casting error to ErrorCode: Item already exists 2018-11-06T11:50:20.239135977+00:00  indy::api::did  TRACE indy::api::did:indy_replace_keys_start: verkey: "" {code}  ></body> </Action>
<Action id="53090" issue="34600" author="dkulic" type="comment" created="2018-11-06 15:56:58.0" updateauthor="dkulic" updated="2018-11-06 15:56:58.0"> <body><! CDATA Added support for abbreviated verkey from ledger (in some cases it is received that way).  https://github.com/hyperledger/indy-sdk/pull/1266  ></body> </Action>
<Action id="53225" issue="34600" author="sergey.minaev" type="comment" body="New master build is 829" created="2018-11-08 15:54:48.0" updateauthor="sergey.minaev" updated="2018-11-08 15:54:48.0"/>
<Action id="53251" issue="34600" author="zhigunenko.dsr" type="comment" created="2018-11-09 08:47:38.0" updateauthor="zhigunenko.dsr" updated="2018-11-09 08:47:38.0"> <body><! CDATA *Environment:* indy-cli 1.6.7~829  *Steps to Validate:* 1) rotate-key resume=true for not yet started process. 2) rotate-key to ledger when pool orders rotation but client response has timeout. 3) rotate-key to ledger when pool doesn't order rotation, client response has timeout.  *Actual Resilts:* 1) Error is expected. 2) resume = true restores keys consistency 3) resume = true restores keys consistency  ></body> </Action>
