<Issue id="39276" key="IS-1234" number="1234" project="10401" reporter="esplinr" assignee="sergey.minaev" creator="esplinr" type="10002" summary="POA: Transaction Author Agreement API" priority="3" resolution="10000" status="10001" created="2019-04-12 13:10:45.0" updated="2019-04-30 12:21:16.0" resolutiondate="2019-04-30 12:20:35.0" votes="0" watches="2" workflowId="52153"> <description><! CDATA *Story* As a steward of an Indy network, I want transaction authors to agree that the information they submit to the ledger meets the requirements outlined by ledger governance for the current transaction to minimize the liability that stewards accept when storing the data on an immutable ledger.  *Acceptance Criteria* Design the API calls to: * Pull the list of valid acceptance mechanisms from the ledger. * Allow downstream applications to expose the agreement in an acceptable way to users receive their consent. * Pulling the hash of the agreement so that downstream applications can detect when the agreement changes.  Show how existing calls can modified to: * Require transaction author agreement  acceptance before submitting a write to the public ledger. * Include as part of the transaction signature a digital signature indicating the acceptance of the author agreement. (To achieve this, it is sufficient to include the hash of the agreement in the existing signed transaction. A second signature is not required.) * The transaction also records the time and date when the agreement was accepted. * The transaction records an indication of how it was accepted pulled from a list of valid mechanisms that is stored on the ledger.  Questions: * Should we store the agreement acceptance date and time in the wallet? (This would allow the acceptance to be backed up and restored with the wallet.)  ></description> </Issue>
