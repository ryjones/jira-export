<Issue id="32500" key="IS-861" number="861" project="10401" reporter="ozheregelya" assignee="zhigunenko.dsr" creator="ozheregelya" type="10002" summary="Load test hangs if there is not enough nodes to connect the pool" priority="2" resolution="10000" status="10001" created="2018-08-02 10:48:48.0" updated="2018-08-10 13:09:12.0" resolutiondate="2018-08-10 13:09:12.0" votes="0" watches="3" workflowId="51485"> <description><! CDATA Steps to Reproduce: 1. Setup the pool of 7 nodes. 2. Stop 5 nodes. 3. Try to connect to the pool using load test.  Actual Results: Load script hangs.  Expected Results: Load script should get error and exit.  Logs: {code:java} me@me-VirtualBox:~/indy-node/scripts/performance$ RUST_LOG=indy=trace python3 perf_processes.py -g ./pool_transactions_genesis -m t -c 1 -t 1 -n 1 -k get_nym -p "{\"timeout\": 50, \"extended_timeout\": 150, \"preordered_nodes\":  \"Node1\", \"Node6\" }" -r 1 Number of client          1 Path to genesis txns file ./pool_transactions_genesis Seed                      000000000000000000000000Trustee1 Batch size                1 Timeout between batches   1.0 Request kind              get_nym Refresh rate, txns        1 Background tasks          30 Output directory          . Value Separator           | Wallet Key                key Started At                2018-08-01 18:43:20.070129 Mode                      threads Pool config               {'timeout': 50, 'extended_timeout': 150, 'preordered_nodes':  'Node1', 'Node6' } Started 1 clients TRACE|indy::api::pool               |                    src/api/pool.rs:310 | indy_set_protocol_version: <<< res: Success INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received DEBUG|indy::commands::pool          |               src/commands/pool.rs:228 | set_protocol_version >>> version: 2 DEBUG|indy::commands::pool          |               src/commands/pool.rs:237 | set_protocol_version <<< TRACE|indy::api::pool               |                    src/api/pool.rs:303 | indy_set_protocol_version: TRACE|indy::api::pool               |                    src/api/pool.rs:33  | indy_create_pool_ledger_config: >>> config_name: 0x7fa6d240fb10, config: 0x7fa6d23fbd20 TRACE|indy::api::pool               |                    src/api/pool.rs:39  | indy_create_pool_ledger_config: entities >>> config_name: "pool_3c97853a6a5c82507da6efb2", config: Some("{\"genesis_txn\": \"./pool_transactions_genesis\"}") TRACE|indy::api::pool               |                    src/api/pool.rs:54  | indy_create_pool_ledger_config: <<< res: Success INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received DEBUG|indy::commands::pool          |               src/commands/pool.rs:139 | create >>> name: "pool_3c97853a6a5c82507da6efb2", config: Some("{\"genesis_txn\": \"./pool_transactions_genesis\"}") TRACE|indy::services::pool          |           src/services/pool/mod.rs:62  | PoolService::create pool_3c97853a6a5c82507da6efb2 with config Some("{\"genesis_txn\": \"./pool_transactions_genesis\"}") DEBUG|indy::commands::pool          |               src/commands/pool.rs:143 | create << res: () TRACE|indy::api::pool               |                    src/api/pool.rs:47  | indy_create_pool_ledger_config: TRACE|indy::api::pool               |                    src/api/pool.rs:89  | indy_open_pool_ledger: >>> config_name: 0x7fa6d240fb10, config: 0x7fa6d2fccaa0 TRACE|indy::api::pool               |                    src/api/pool.rs:95  | indy_open_pool_ledger: entities >>> config_name: "pool_3c97853a6a5c82507da6efb2", config: Some("{\"timeout\": 50, \"extended_timeout\": 150, \"preordered_nodes\":  \"Node1\", \"Node6\" }") TRACE|indy::api::pool               |                    src/api/pool.rs:110 | indy_open_pool_ledger: <<< res: Success INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received DEBUG|indy::commands::pool          |               src/commands/pool.rs:159 | open >>> name: "pool_3c97853a6a5c82507da6efb2", config: Some("{\"timeout\": 50, \"extended_timeout\": 150, \"preordered_nodes\":  \"Node1\", \"Node6\" }") TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:456 | Pool::new name pool_3c97853a6a5c82507da6efb2, id 1, config PoolOpenConfig { timeout: 50, extended_timeout: 150, conn_limit: 5, conn_active_timeout: 5, preordered_nodes:  "Node1", "Node6"  } DEBUG|indy::commands::pool          |               src/commands/pool.rs:174 | open <<< TRACE|indy::services::pool::commander|     src/services/pool/commander.rs:26  | cmd   99, 111, 110, 110, 101, 99, 116 ,  1, 0, 0, 0   TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(CheckCache(1)) TRACE|indy::services::pool::merkle_tree_factory|src/services/pool/merkle_tree_factory.rs:27  | Restoring merkle tree from genesis TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:94  | ZMQNetworker::process_event: nodes_updated  RemoteNode { name: "Node4", public_key:  196, 24, 141, 31, 105, 237, 27, 65, 201, 62, 59, 55, 193, 242, 181, 53, 42, 157, 34, 231, 131, 64, 176, 60, 30, 210, 123, 110, 169, 191, 133, 26 , zaddr: "tcp://10.0.0.5:9708", is_blacklisted: false }, RemoteNode { name: "Node3", public_key:  79, 5, 67, 174, 174, 29, 149, 231, 155, 21, 224, 85, 146, 120, 150, 148, 59, 245, 158, 37, 83, 26, 154, 135, 77, 138, 28, 147, 175, 47, 27, 119 , zaddr: "tcp://10.0.0.4:9706", is_blacklisted: false }, RemoteNode { name: "Node1", public_key:  245, 162, 146, 125, 78, 184, 226, 60, 221, 1, 103, 194, 231, 134, 97, 57, 147, 89, 13, 171, 80, 230, 214, 139, 195, 130, 29, 243, 184, 195, 79, 31 , zaddr: "tcp://10.0.0.2:9702", is_blacklisted: false }, RemoteNode { name: "Node5", public_key:  41, 187, 234, 133, 43, 242, 111, 244, 252, 245, 236, 183, 36, 145, 244, 169, 101, 126, 186, 216, 224, 244, 179, 97, 70, 247, 99, 222, 247, 163, 79, 16 , zaddr: "tcp://10.0.0.6:9710", is_blacklisted: false }, RemoteNode { name: "Node2", public_key:  221, 7, 213, 25, 70, 73, 199, 226, 112, 254, 71, 75, 167, 252, 229, 6, 9, 164, 175, 172, 99, 45, 152, 229, 52, 56, 128, 121, 246, 160, 155, 14 , zaddr: "tcp://10.0.0.3:9704", is_blacklisted: false }, RemoteNode { name: "Node6", public_key:  169, 63, 90, 144, 217, 229, 243, 51, 122, 163, 28, 93, 107, 87, 138, 190, 137, 26, 243, 155, 117, 182, 28, 1, 13, 244, 231, 86, 194, 217, 112, 108 , zaddr: "tcp://10.0.0.7:9712", is_blacklisted: false }  TRACE|indy::services::pool::request_handler|src/services/pool/request_handler.rs:211 | start catchup, ne: Some(SendAllRequest("{\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":6,\"merkleRoot\":\"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\",\"ledgerId\":0,\"ppSeqNo\":null,\"viewNo\":null,\"protocolVersion\":2}", "BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo", 150)) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:59  | sending new request TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:83  | send request in new conn TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:180 | PoolConnection::new: from nodes  RemoteNode { name: "Node4", public_key:  196, 24, 141, 31, 105, 237, 27, 65, 201, 62, 59, 55, 193, 242, 181, 53, 42, 157, 34, 231, 131, 64, 176, 60, 30, 210, 123, 110, 169, 191, 133, 26 , zaddr: "tcp://10.0.0.5:9708", is_blacklisted: false }, RemoteNode { name: "Node3", public_key:  79, 5, 67, 174, 174, 29, 149, 231, 155, 21, 224, 85, 146, 120, 150, 148, 59, 245, 158, 37, 83, 26, 154, 135, 77, 138, 28, 147, 175, 47, 27, 119 , zaddr: "tcp://10.0.0.4:9706", is_blacklisted: false }, RemoteNode { name: "Node1", public_key:  245, 162, 146, 125, 78, 184, 226, 60, 221, 1, 103, 194, 231, 134, 97, 57, 147, 89, 13, 171, 80, 230, 214, 139, 195, 130, 29, 243, 184, 195, 79, 31 , zaddr: "tcp://10.0.0.2:9702", is_blacklisted: false }, RemoteNode { name: "Node5", public_key:  41, 187, 234, 133, 43, 242, 111, 244, 252, 245, 236, 183, 36, 145, 244, 169, 101, 126, 186, 216, 224, 244, 179, 97, 70, 247, 99, 222, 247, 163, 79, 16 , zaddr: "tcp://10.0.0.6:9710", is_blacklisted: false }, RemoteNode { name: "Node2", public_key:  221, 7, 213, 25, 70, 73, 199, 226, 112, 254, 71, 75, 167, 252, 229, 6, 9, 164, 175, 172, 99, 45, 152, 229, 52, 56, 128, 121, 246, 160, 155, 14 , zaddr: "tcp://10.0.0.3:9704", is_blacklisted: false }, RemoteNode { name: "Node6", public_key:  169, 63, 90, 144, 217, 229, 243, 51, 122, 163, 28, 93, 107, 87, 138, 190, 137, 26, 243, 155, 117, 182, 28, 1, 13, 244, 231, 86, 194, 217, 112, 108 , zaddr: "tcp://10.0.0.7:9712", is_blacklisted: false }  TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:255 | send_request >> pe: Some(SendAllRequest("{\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":6,\"merkleRoot\":\"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\",\"ledgerId\":0,\"ppSeqNo\":null,\"viewNo\":null,\"protocolVersion\":2}", "BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo", 150)) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 0, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {"op":"LEDGER_STATUS","txnSeqNo":6,"merkleRoot":"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2} DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 0 TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node << TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 1, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {"op":"LEDGER_STATUS","txnSeqNo":6,"merkleRoot":"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2} DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 1 TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node << TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 2, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {"op":"LEDGER_STATUS","txnSeqNo":6,"merkleRoot":"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2} DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 2 TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node << TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 3, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {"op":"LEDGER_STATUS","txnSeqNo":6,"merkleRoot":"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2} DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 3 TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node << TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 4, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {"op":"LEDGER_STATUS","txnSeqNo":6,"merkleRoot":"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2} DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 4 TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node << TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:317 | _send_msg_to_one_node >> idx 5, req_id BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo, req {"op":"LEDGER_STATUS","txnSeqNo":6,"merkleRoot":"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2} DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:329 | _get_socket: open new socket for node 5 TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:323 | _send_msg_to_one_node << TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:283 | send_request << TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:105 | PoolSM: from init to getting catchup target TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(NodeReply("{\"op\":\"LEDGER_STATUS\",\"ppSeqNo\":null,\"ledgerId\":0,\"merkleRoot\":\"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\",\"protocolVersion\":2,\"txnSeqNo\":6,\"viewNo\":null}", "Node5")) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 24399219 } TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(NodeReply("{\"ledgerId\":0,\"txnSeqNo\":6,\"ppSeqNo\":null,\"merkleRoot\":\"BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo\",\"op\":\"LEDGER_STATUS\",\"protocolVersion\":2,\"viewNo\":null}", "Node6")) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 24624870 } TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo", "Node4")) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98213207 } TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo", "Node1")) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98367941 } TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo", "Node3")) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98455138 } TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:527 | received pool event: Some(Timeout("BNexUV5rochpfk8mZhZ3N9mAmQHzjkVNPbgHh7UqDVMo", "Node2")) TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 150, nanos: 98537406 } TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:127 | removing pool connection 2{code}  ></description> </Issue>
