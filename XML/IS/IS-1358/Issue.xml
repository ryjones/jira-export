<Issue id="41841" key="IS-1358" number="1358" project="10401" reporter="sergey.minaev" assignee="kithat" creator="sergey.minaev" type="10002" summary="Minimal support of full-qualified DID" priority="3" resolution="10000" status="10001" created="2019-08-16 13:00:20.0" updated="2019-09-25 19:05:38.0" resolutiondate="2019-09-16 12:25:28.0" votes="0" watches="2" workflowId="54880"> <description><! CDATA See requirements in IS-451  h1. POA  h2. Option 1: Breaking Changes  * All DID-related output of libindy API is fully-qualified. The only exception is the JSONs for Client-Node communication. * libindy may consume both full-qualified and short forms, but short form would be always extended by the configurable default prefix. *  JSON output for Clinet-Node communication (e.g. build_nym_request) will depend on protocol version set in libindy. Current protocol version is 2, and it will always cut off the configured DID prefix. We will evaluate if a future version of Indy Node will keep full-qualified form in the JSONs as well. * Wallets should be migrated before usage.  h3. Transactions Builders  Transaction builders API would allow to pass DID in both (full-qualified and short) forms. If the net prefix specified but it's default and configured to skip by settings - it should be removed while creating transaction JSON.  If the prefix is not defined, the short form of DID would be used in transaction JSON as well.  h3. DID in the wallet  DIDs always would be stored in full-qualified form. If short DID passed to the API, the configured prefix would be applied before storing to the wallet  See IS-1359 about wallet migration  h2. Option 2: Backwards Compatible: "Configurable behavior" * There would be a way to define behavior of libindy like protocol version for Client-Node communication. * If an App setup new behavior then it follows the approach in "breaking changes". * The App can chose the current deprecated behavior. In this case libindy will always return short form of DIDs. * Optionally it may accept full-qualified form of DIDs but the prefix would be totally ignored (cut of right after the API layer, not stored in the wallet, etc)  h2. See Also * https://jira.hyperledger.org/browse/INDY-51 *  https://github.com/hyperledger/indy-sdk/pull/1487  *  https://openssi.github.io/peer-did-method-spec/index.html  *  https://w3c-ccg.github.io/did-spec/   ></description> </Issue>
