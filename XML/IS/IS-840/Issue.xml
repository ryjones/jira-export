<Issue id="32239" key="IS-840" number="840" project="10401" reporter="sklump" assignee="artemkaaas" creator="sklump" type="10004" summary="get-creds panics when req-attr, req-pred specs cite different cred def ids" priority="3" resolution="10000" status="10001" created="2018-07-26 15:04:16.0" updated="2018-07-26 17:30:52.0" resolutiondate="2018-07-26 17:30:21.0" votes="0" watches="1" timeoriginalestimate="28800" timeestimate="28800" workflowId="51469"> <environment><! CDATA ubuntu 16 VM dockerized indy test pool, TEST_POOL_IP=10.0.0.2  ></environment> <description><! CDATA Operating on indy-sdk-1.5.0-dev-651, I send it into a rust panic when I call `anoncreds.prover_get_credentials_for_proof_req()` for a proof request on `requested_attributes` specifications on attributes restricted to one cred def id but a `requested_predicates` specifying a minimum value for an attribute from another cred def id.  It worked fine before the indy-sdk series that allowed WQL search on wallet credentials. Offensive proof request follows.  ``` \{     "name": "proof_req",     "version": "0.0",     "nonce": "1532615113",     "requested_attributes": \{         "16_legalName_uuid": \{             "name": "legalName",             "non_revoked": \{                 "to": 1532615103,                 "from": 1532615103             },             "restrictions":                   \{                     "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:16:0"                 }                       }     },     "requested_predicates": \{         "15_jurisdictionId_uuid": \{             "name": "jurisdictionId",             "restrictions":                   \{                     "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:15:0"                 }              ,             "non_revoked": \{                 "to": 1532615103,                 "from": 1532615103             },             "p_value": 1,             "p_type": ">="         }     } } ```  With RUST_LOG=debug, RUST_BACKTRACE=full, output follows: ``` DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:463 | get_credentials_for_proof_req >>> wallet_handle: 69, proof_req_json: "\{\"requested_attributes\": \{\"16_legalName_uuid\": \{\"non_revoked\": \{\"to\": 1532615426, \"from\": 1532615426}, \"restrictions\":    \{\"cred_def_id\": \"WgWxqztrNooG92RXvxSTWv:3:CL:16:0\"}   , \"name\": \"legalName\"}}, \"nonce\": \"1532615441\", \"version\": \"0.0\", \"name\": \"proof_req\", \"requested_predicates\": \{\"15_jurisdictionId_uuid\": \{\"p_type\": \">=\", \"non_revoked\": \{\"to\": 1532615426, \"from\": 1532615426}, \"restrictions\":    \{\"cred_def_id\": \"WgWxqztrNooG92RXvxSTWv:3:CL:15:0\"}   , \"name\": \"jurisdictionId\", \"p_value\": 1}}}" DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:779 | _query_requested_credentials >>> wallet_handle: 69, query_json: "\{\"attr::legalname::marker\":\"1\",\"$or\":   \{\"cred_def_id\":\"WgWxqztrNooG92RXvxSTWv:3:CL:16:0\"}   }", predicate_info: None DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:787 | _query_requested_credentials <<< credentials:  RequestedCredential  \{ cred_info: CredentialInfo  \{ referent: "af6b0157-c4bc-49d7-8af0-a0cc66323993", attrs:   \{"legalName": "Tart City", "sriRegDate": "2018-07-26", "jurisdictionId": "1"}  , schema_id: "WgWxqztrNooG92RXvxSTWv:2:sri:1.0", cred_def_id: "WgWxqztrNooG92RXvxSTWv:3:CL:16:0", rev_reg_id: Some("WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:16:0:CL_ACCUM:0"), cred_rev_id: Some("2") }, interval: Some(NonRevocedInterval   \{ from: Some(1532615426), to: Some(1532615426) }  ) }  DEBUG|indy::commands::anoncreds::prover|   src/commands/anoncreds/prover.rs:779 | _query_requested_credentials >>> wallet_handle: 69, query_json: "\{\"attr::jurisdictionid::marker\":\"1\",\"$or\":   \{\"cred_def_id\":\"WgWxqztrNooG92RXvxSTWv:3:CL:15:0\"}   }", predicate_info: Some(PredicateInfo \{ name: "jurisdictionId", p_type: GE, p_value: 1, restrictions: Some(Array( Object(  \{"cred_def_id": String("WgWxqztrNooG92RXvxSTWv:3:CL:15:0")}  ) )), non_revoked: Some(NonRevocedInterval \{ from: Some(1532615426), to: Some(1532615426) }) }) ERROR|panic                         |/home/sklump/.cargo/registry/src/github.com-1ecc6299db9ec823/log-panics-2.0.0/src/lib.rs:67  | thread 'unnamed' panicked at 'no entry found for key': libcore/option.rs:914 ```  In particular, operation gets to this line and crashes on it:  https://github.com/hyperledger/indy-sdk/blob/2f28ac36f807a2cff9b655c58caaf457db6c944d/libindy/src/commands/anoncreds/prover.rs#L785   ></description> </Issue>
