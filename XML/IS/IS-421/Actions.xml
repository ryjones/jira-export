<Action id="36623" issue="23935" author="gudkov" type="comment" created="2017-12-12 13:06:40.0" updateauthor="gudkov" updated="2017-12-12 13:06:55.0"> <body><! CDATA Proposed PoA: # Rename “indy_crypto_box” call to “indy_crypto_authcrypt”. Note that this call returns encrypted msg and nonce instead of self-contained protocol message. Transferring information about sender vk and nonce is out of scope for this call. # Rename “indy_crypto_box_open” call to “indy_crypto_authdecrypt”. Also note that this call requires sender vk, recipient vk and nonce to perform  decryption. # Rename “indy_crypto_box_seal” call to “indy_crypto_anoncrypt”. Note that it isn’t protocol level message, but just crypto. # Rename “indy_crypto_box_seal_open” call to “indy_crypto_anondecrypt”. # Rename “indy_prep_msg” to “indy_prep_auth_msg” for symmetry. Leave “indy_prep_anonymous_msg” and “idny_parse_msg” as is. Note that these calls return self-contained message that can be safely transferred. # Update “encrypted-messages” section to correspond libindy and provide libindy references.  ></body> </Action>
<Action id="36624" issue="23935" author="gudkov" type="comment" body=" ~danielhardman   ~ashcherbakov  Could you look to proposed PoA in previous comment?" created="2017-12-12 13:07:38.0" updateauthor="gudkov" updated="2017-12-12 13:07:38.0"/>
<Action id="36625" issue="23935" author="ashcherbakov" type="comment" created="2017-12-12 13:37:57.0" updateauthor="ashcherbakov" updated="2017-12-12 13:41:20.0"> <body><! CDATA I think we have too many similar methods, and it's not clear what methods to use. I can see three options here (and remove all other calls, such as `prepare_msg`):  *Option1* - `indy_crypto_auth_encrypt`   - combo box encryption; returns self-contained message with encrypted text, sender's key and nonce - `indy_crypto_anon_encrypt`  - sealed box encryption; returns self-contained message with encrypted text - `indy_crypto_auth_decrypt`   - combo box decryption; - `indy_crypto_anon_decrypt`  - sealed box decryption;  *Option2* - `indy_crypto_authcrypt`   - combo box encryption; returns self-contained message with encrypted text, sender's key and nonce - `indy_crypto_anoncrypt`  - sealed box encryption; returns self-contained message with encrypted text - `indy_crypto_decrypt`   - decryption; performs decryption for both authcrypt and anoncrypt depending on input message  *Option3* - `indy_crypto_encrypt(auth, ....)`   - encryption (authcrypt if auth=True; anoncrypt if auth=False); returns self-contained message with encrypted text, sender's key and nonce depending on auth parameter - `indy_crypto_decrypt`   - decryption; performs decryption for both authcrypt and anoncrypt depending on input message       ></body> </Action>
<Action id="36627" issue="23935" author="gudkov" type="comment" body="From Alex&apos;s options i prefer Option 2. Disadvantage of Alex&apos;s options is that we don&apos;t provide low level crypto box analog." created="2017-12-12 14:04:22.0" updateauthor="gudkov" updated="2017-12-12 14:04:22.0"/>
<Action id="36904" issue="23935" author="danielhardman" type="comment" created="2017-12-12 18:13:12.0" updateauthor="danielhardman" updated="2017-12-12 18:13:12.0"> <body><! CDATA I think option 1 is better. Let me see if I can convince you why.  First, we want the self-contained messages to be the output of the functions named with the authcrypt and anoncrypt terms. Having functions that return a message that is not self-contained (requires separate vk and nonce) might *also* be interesting (what Slava proposed in his PoA), but I wouldn't use the term "authcrypt" (or "anoncrypt") to describe such functions, because the protocol description of authcrypt and anoncrypt makes it clear that they are self-contained. So if we have the lower-level functions (and they're public, which might be unnecessary...), let's call them something different.  Second, I think decryption of a combo box is potentially more complex than decryption of a sealed box. With a sealed box, the decryption either succeeds or fails. With a combo box, the decryption might succeed, but might require additional analysis before it's accepted. For example, I might want to know whether the key pair of the sender maps to a DID I expect, and if so, whether that mapping is current or old. This might require indy_crypto_auth_decrypt() to return additional info (have a different function signature) compared to indy_crypto_anon_decrypt().     ></body> </Action>
<Action id="37026" issue="23935" author="gudkov" type="comment" created="2017-12-13 07:53:40.0" updateauthor="gudkov" updated="2017-12-13 07:53:40.0"> <body><! CDATA > I might want to know whether the key pair of the sender maps to a DID I expect, and if so, whether that mapping is current or old. This might require indy_crypto_auth_decrypt() to return additional info (have a different function signature) compared to indy_crypto_anon_decrypt().  It current prem_msg/parse_msg approach the information about message format (auth or not) is stored inside of external seal box.   We use the same signature for parse. parse_msg returns decrypted message and sender key. If it is anonymous message than sender key will be just null.  ></body> </Action>
<Action id="37510" issue="23935" author="gudkov" type="comment" body="The latest vision is here: https://docs.google.com/document/d/16bY3TzCj1DVk17ufJ1d0b4V7tisj9RWiJZ2U7wmvi7I/edit" created="2017-12-15 14:08:59.0" updateauthor="gudkov" updated="2017-12-15 14:08:59.0"/>
<Action id="37743" issue="23935" author="artemkaaas" type="comment" created="2017-12-22 14:01:22.0" updateauthor="artemkaaas" updated="2017-12-22 14:01:22.0"> <body><! CDATA Changes:  - Deleted Agent API. Deleted encryption functions from Signus API. Renamed Signus API to DID API.  Changed logic of encryption functions in Crypto API.  PR: - https://github.com/hyperledger/indy-sdk/pull/434   Version: - master build #292  Risk: - Med     ></body> </Action>
<Action id="37748" issue="23935" author="gudkov" type="comment" body=" ~danielhardman  Could you validate results?" created="2017-12-22 14:38:12.0" updateauthor="gudkov" updated="2017-12-22 14:38:12.0"/>
