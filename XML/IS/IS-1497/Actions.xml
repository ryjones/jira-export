<Action id="68020" issue="44331" author="sergey.khoroshavin" type="comment" created="2020-02-20 14:24:14.0" updateauthor="sergey.khoroshavin" updated="2020-02-20 14:24:14.0"> <body><! CDATA *Ease of use* Generally GitLab CI is easy to configure and use, given all required features are there (more on that later)  *Platform and environment support* GitLab runners can be run on Linux, MacOS and Windows. However preferred way of configuring runners is docker, which is obviously limited to Linux.  Using shell runners is considered insecure, so you need to somewhat trust project contributors.  *Triggering builds from GitHub PRs sent from forks* Short answer - this doesn't work. We've tried it on a test GitHub repository integrated with GitLab CI, and when trying to create PR from fork GitLab webhook returned response 400 with body  {code:json} {"message":{"base": "Pull requests from fork are not supported" }} {code} There is an open ticket on this issue, and it doesn't seem it is going to be resolved soon: https://gitlab.com/gitlab-org/gitlab/issues/5667  There is a bot that can help overcome this issue (LabHub), however we didn't test it yet: https://github.com/brndnmtthws/labhub The main problem is that from its description it looks like most probably CD needs to be handled by something else: {quote}If you're not concerned with leaking secrets, then LabHub may be for you! LabHub listens for webhooks from GitHub to notify for new pull requests. If the PR is from a forked repo, it will push a branch to GitLab (for the corresponding PR) to test the build.{quote} Also this bot needs to be deployed somewhere to run.  Another thing to note - for GitHub integration Gitlab CI relies on auto-pull from remote repository: * This feature is available for free to GitLab.com users until March 22nd, 2020. * It looks like after that it will require bronze subscription (however it shouldn't affect open source projects, as far as I know they default to Gold for free) * More info on https://gitlab.com/gitlab-org/gitlab/issues/10361  *Difficulty of launching an Indy Pool for CI testing* When running in docker (which should be default option) there is a feature called service which allows running several sidecar containers with services required for tests. However it doesn't seem to be possible to know their IPs in advance, which is required for generating Indy pool genesis transactions. Probably this can be overcome with some dirty hacks. Possible alternative is to use shell runner, but as already said it doesn't seem to be secure enough. It would be great if GitLab CI could spawn on demand one-time virtual machines from some cloud provider and run jobs directly on them, but this is not implemented (they have autoscaling based on docker-machine or kubernetes , but in this case jobs are still confined to docker).  ></body> </Action>
<Action id="68135" issue="44331" author="sergey.minaev" type="comment" body="Current vision is to use GitHub Actions and keep in the mind the option to migrate Azure Pipelines or Circle CI if needed" created="2020-02-27 13:12:34.0" updateauthor="sergey.minaev" updated="2020-02-27 13:12:34.0"/>
