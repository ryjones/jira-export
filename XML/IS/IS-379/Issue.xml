<Issue id="21773" key="IS-379" number="379" project="10401" reporter="sklump" assignee="nage" creator="sklump" type="10004" summary="anoncreds - can only prove against latest claim request" priority="3" resolution="10200" status="10001" created="2017-10-11 13:09:51.0" updated="2019-03-29 20:57:34.0" resolutiondate="2019-03-29 20:57:34.0" votes="1" watches="2" workflowId="51101"> <environment><! CDATA Ubuntu 16.04  indy-sdk 1.0.0  docker 17.09ce  ></environment> <description><! CDATA I think I've found some extraordinarily weird behaviour in anoncreds.  In {{.../tests/demo/test_anoncreds.py}}, I: (1) build a claim offer (2) get a claim request (3) create and store a claim into a wallet for Alex (M, 175cm, 28) (4) get claims for proof request from the wallet (5) pick out the claim uuid from the claim at index  0  – by construction, it's the only claim in the wallet (6) create proof (7) verify the proof. All is well.  If instead, I write {{.../demo/test_anonx.py}} from {{test_anoncreds.py}} to: (1) build a claim offer (2) get **TWO** claim requests (3) create and store a claim into a wallet for Alex (M, 175cm, 28) against the first claim request (4) get claims for proof request from the wallet (5) pick out the claim uuid from the claim matching Alex's (encoded) name value (6) create proof (7) verify the proof  From python virtual environment py35 operating version 3.5, run the new unit test code: {noformat} (py35) $ docker rm $(docker stop $(docker ps -aq)) (py35) $ docker run -d --ip="10.0.0.2" --net=indy_pool_network indy_pool (py35) $ cd indy-sdk/wrappers/python/tests (py35) $ RUST_LOG=trace RUST_BACKTRACE=full RUST_TEST_THREADS=1 LD_LIBRARY_PATH=/home/sklump/indy/indy-sdk/libindy/target/debug TEST_POOL_IP=10.0.0.2 pytest -s demo/test_anonx.py{noformat} The proof does not verify!  Attached:  ^test_anonx.py  (code)  ^test_anonx.log  (output)  ></description> </Issue>
