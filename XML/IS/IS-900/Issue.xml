<Issue id="33036" key="IS-900" number="900" project="10401" reporter="ignisvulpis" assignee="ignisvulpis" creator="ignisvulpis" type="10004" summary="Indy Java Wrapper eats the exception when it can&apos;t load libindy via jna" priority="3" status="10200" created="2018-08-20 06:18:36.0" updated="2020-01-28 15:22:11.0" votes="0" watches="2" workflowId="50676"> <description><! CDATA Created from  https://github.com/hyperledger/indy-sdk/issues/966   In java static blocks are not allowed to throw checked exceptions, so LibIndy is catching it.  LibIndy could throw a RuntimeException and force the application to crash. This not nice behavior if Indy support is an optional feature of the app.  Â   I suggest to delete the static block and tell all applications that they should call some version of init(). Additionally all methods could check for the api being null and try to init() then.  https://github.com/hyperledger/indy-sdk/blob/master/wrappers/java/src/main/java/org/hyperledger/indy/sdk/LibIndy.java#L181  That would throw an exception that the app CAN catch.  //cc  ~sergey.minaev   ></description> </Issue>
