<Issue id="44563" key="IS-1527" number="1527" project="10401" reporter="ashcherbakov" assignee="artemkaaas" creator="ashcherbakov" type="10002" summary="LibVCX should be tested against the latest StreetCred app and verify that it stores credentials that LibVCX issues" priority="3" resolution="10000" status="10001" created="2020-03-13 14:01:41.0" updated="2020-03-27 13:05:05.0" resolutiondate="2020-03-27 13:05:05.0" votes="0" watches="2" workflowId="58476" archived="N"> <description><! CDATA Here is the branch we can do testing:  https://github.com/Artemkaaas/indy-sdk/tree/feature/streetcred-compatibilkity   I used BuilderNet pool network.  I used Dummy-cloud-agent:  https://github.com/Artemkaaas/indy-sdk/tree/feature/streetcred-compatibilkity/vcx/dummy-cloud-agent   Streetcred Mobile app is available in app store. `Streetcred Identity Wallet`.  Dummy  Agent Mobile app must be at the same WiFi network as PC to be reachable.  Steps: * install the last stable Libndy and Libnullpay:  https://github.com/hyperledger/indy-sdk#ubuntu-based-distributions-ubuntu-1604-and-1804  * build LibVCX from the source.  The branch contains some changes regarding DIDDoc preparation/validation (they need to establish connection). `cd vcx/libvcx && cargo build` — copy target/debug/libvcx.so to /usr/lib or /usr/local/lib  * run dummy-agency: cd vcx/dummy-cloud-agent. Update config/sample-config.json to use IP instead of the localhost.  use ngrok to make it public available. Run agent with `cargo run config/sample-config.json`. * go to vcx/wrappers/python3/demo – update `provisionConfig`  agency related parameters to point on dummy agent address.  * run faber with python3 faber.py. It will print invite json.  You need to base64 encode invite -> put encoded string into  http://192.168.54.174:8080?c_i=|http://192.168.54.174:8080/?c_i= <HERE> -> convert result to QR code. it Scan with Streetcred app.  ></description> </Issue>
