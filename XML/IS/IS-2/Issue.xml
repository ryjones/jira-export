<Issue id="18146" key="IS-2" number="2" project="10401" reporter="avkrishnan" assignee="artemkaaas" creator="avkrishnan" type="10006" summary="Logging: Libindy should provide API for logger configuration that can be integrated with application logging approach." priority="3" resolution="10000" status="10001" created="2017-06-16 14:06:05.0" updated="2018-08-30 16:08:19.0" resolutiondate="2018-08-30 16:08:19.0" votes="0" watches="4" workflowId="50779"> <description><! CDATA For the current moment libindy is linked with simple logger that outputs logs to stdout/stderr, but best practice for libraries is to use logger that will be provided by application to re-use application logging facilities.   We suggest the following:  - Libindy should provide indy_set_logger call that will allow application to register logging callbacks - Libindy should provide indy_get_logger call that will allow plugins (payments, storages) to re-use logger from libindy - For development purposes libindy should also provide set_default_logger call that will allow to register simple logger bundled with libindy. We can keep the same logger behaviour as we have for now. I only suggest to disable logging by default.  Acceptance criteria:  - Design is performed and documented - API is implemented with TDD aprroach - Good integration tests coverage is provided - Documentation is provided - Migration guide is updated - Dependent teams (vcx, libsovtoken) are notified about expected changes  Â   I also suggest to review thread in  https://github.com/hyperledger/indy-sdk/issues/19  for some ideas.  ></description> </Issue>
