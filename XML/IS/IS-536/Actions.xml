<Action id="39325" issue="27202" author="seanbohan_sovrin" type="comment" body=" ~gudkov  -Â we should be using a greater than or = dependency for the libIndy version in the Indy CLI package. Please assign this out" created="2018-01-29 21:42:06.0" updateauthor="seanbohan_sovrin" updated="2018-01-29 21:42:06.0"/>
<Action id="39364" issue="27202" author="gudkov" type="comment" created="2018-01-30 14:04:44.0" updateauthor="gudkov" updated="2018-01-30 14:04:44.0"> <body><! CDATA  ~SeanBohan_Sovrin   ~sergey.minaev   ~ashcherbakov   We have a technical problem here. Rust exports a lot of unnecessary mangled symbols when we create dynamic libindy library. CLI also has the same mangled symbols and linker just removes duplicated symbols from final cli binary. As result if we try to execute CLI with different libindy version it can cause runtime linking error as the list of exported symbols or used mangling can be changed.  See issues like  https://github.com/rust-lang/rust/issues/18541   We can try to control symbols export by custom linking script, but it isn't cross-platform and reliable way. As alternative we can just use === predicate to control dependencies and wait for for problem fix in Rust compiler.  ></body> </Action>
<Action id="39466" issue="27202" author="seanbohan_sovrin" type="comment" created="2018-01-31 22:10:31.0" updateauthor="seanbohan_sovrin" updated="2018-01-31 22:10:31.0"> <body><! CDATA lets move forward with the triple equal  ===  we need to make sure we have a test so if we forget to move the pin we know right away  ></body> </Action>
<Action id="62916" issue="27202" author="artemkaaas" type="comment" body="Done in the scope of IS-1139" created="2019-08-15 05:55:12.0" updateauthor="artemkaaas" updated="2019-08-15 05:55:12.0"/>
