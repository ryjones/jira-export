<Issue id="46367" key="IS-1564" number="1564" project="10401" reporter="sklump" creator="sklump" type="10004" summary="Building revocation states from 0 fails proof for any cred in rev reg if one is revoked" environment="ubuntu 18.04" priority="3" status="10200" created="2020-12-01 20:02:53.0" updated="2020-12-01 20:06:32.0" votes="0" watches="1" timeoriginalestimate="57600" timeestimate="57600" workflowId="60303" archived="N"> <description><! CDATA I've come across something I can't explain but can reproduce. Can anyone investigate and tell me what goes wrong in `indy-sdk/wrappers/python/test/interation/tests_interaction_several_credentials.py` here?  *PROCEDURE* - apply the following delta:  {{--- a/wrappers/python/tests/interation/test_interaction_several_credentials.py}}  +++ b/wrappers/python/tests/interation/test_interaction_several_credentials.py  @@ -507,6 +507,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand_4_creds( # {{Prover Gets RevocationRegistryDelta from Ledger}} # {{from: when last prover revocation state were created}} # {{to: to}}  + '''  get_revoc_reg_delta_request = await ledger.build_get_revoc_reg_delta_request(  prover_did,  rev_reg_def_id,  @@ -532,6 +533,7 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand_4_creds(  timestamp,  cred_rev_id 0 if proof_name == 'Alex' else 3  # Alex, then Olga  )  + '''  # {{Prover creates revocation state from scratch}} # {{from: 0 or time of credential issuance}}  @@ -564,7 +566,8 @@ async def test_anoncreds_revocation_interaction_test_issuance_by_demand_4_creds(  {{rev_states proof_name  =}}  {color:#172b4d}{{{}}{color}  {color:#172b4d}{{  'timestamp': timestamp,}}{color}  {color:#172b4d}{{ - 'value': rev_state_from_timestamp_to_now_json # rev_state_from_0_to_now_json must also work}}{color}  {color:#172b4d}{{+ 'value': rev_state_from_0_to_now_json}}{color}  {color:#172b4d}{{+ # 'value': rev_state_from_timestamp_to_now_json # rev_state_from_0_to_now_json must also work }}}{color}  {color:#172b4d}{{}}}{color}  {color:#172b4d}{{{{revoc_states_json = json.dumps({rev_reg_id: {timestamp: json.loads(rev_states proof_name  'value' )}}}}{color}  and run the test.  1 - WEIRD: It fails to prove Olga's presentation after Alex is revoked. I.e., prover creates revocation state from scratch: no proof can verify from a credential in a revocation registry having revoked (distinct) credentials. 2 - WEIRDER: Uncomment the triple-quotes at lines 510 and 536 and run it again: it passes! Updating the revocation state r from prior states, then creating revocation state s from scratch and throwing the updated revocation state r away and using s, fixes the problem.  I'm totally at a loss here. Can anyone shed some light?  ></description> </Issue>
