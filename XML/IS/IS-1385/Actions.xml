<Action id="65630" issue="42617" author="esplinr" type="comment" created="2019-11-19 15:51:41.0" updateauthor="esplinr" updated="2019-11-19 15:51:41.0"> <body><! CDATA Thanks you for reporting this odd behavior.  We don't think this is a bug, but we should improve the documentation to clarify what is going on.  ></body> </Action>
<Action id="66145" issue="42617" author="dunff2k" type="comment" created="2019-12-06 12:09:15.0" updateauthor="dunff2k" updated="2019-12-06 12:09:15.0"> <body><! CDATA Can you share what "preordered_nodes" and "number_read_nodes" are supposed to do, then?        ></body> </Action>
<Action id="66436" issue="42617" author="artemkaaas" type="comment" created="2019-12-30 08:15:36.0" updateauthor="artemkaaas" updated="2019-12-30 08:25:04.0"> <body><! CDATA Hello,  ~dunff2k  "number_read_nodes" - Libindy sends write transactions (like `NYM)` to all nodes in the ledger. In case of reading request (like `GET_NYM`) it's enough to receive a reply only from one node with valid `state proof`. So, by default Libindy sends a read request to 2 (number_read_nodes) nodes. If Reply wasn't received or response `state proof` is invalid Libindy sends the request again but to 2 (number_read_nodes) * 2 = 4 nodes and so far until getting valid `state proof` or required number of equal replies.  {{So using `number_read_nodes` parameter you can set the number of nodes to send read requests. It doesn't affect response data.}}  {{"preordered_nodes" - names of nodes that will have priority during reading request sending. This can be useful if a user prefers querying specific nodes. Assume that you trust more to `Node1` and `Node2` nodes or they reply faster. if you pass them to `preordered_nodes` parameter Libindy always sends a read request to these nodes first and only then (if not enough) to others (in random order).}}  ></body> </Action>
<Action id="66741" issue="42617" author="sergey.minaev" type="comment" body=" ~dunff2k  I&apos;m closing the ticket as the comment above seems reasonable and the parameters are described in API. Fill free to re-open the issue, if you have more questions. Also, if you have an idea how to re-state the API documentation to make it more clear - the PR with update is very appreciated." created="2020-01-17 13:39:26.0" updateauthor="sergey.minaev" updated="2020-01-17 13:39:26.0"/>
