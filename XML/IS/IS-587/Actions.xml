<Action id="42220" issue="28516" author="sergeypalamarchuk" type="comment" created="2018-03-27 15:34:14.0" updateauthor="sergeypalamarchuk" updated="2018-03-27 15:34:14.0"> <body><! CDATA Json format of request restart pool transaction :  {{\{ }}  {{    "operation":}}{{\{ }}  {{        "type" : 118,}} {{        "action" : (May be start or cancel),}} {{        "schedule : (Time in json format)"}}  {{    }, }}  {{    "identifier": (Did of transaction submitter),}}  {{    "reqId": (Id number of request),}}  {{    "protocolVersion": 1, }}  {{    "signature":  (Submitter's signature)}}  {{}}}   Json format of reply on restart pool transaction :  {{\{}}  {{    "op": "REPLY"}}  {{    "result" : \{}}{{    }}  {{        "operation":}}{{\{}}  {{            "type" : 118, }}  {{            "action" : (May be start or cancel), }}  {{            "schedule : (Time in json format)"}}  {{        },}}  {{    "isSuccess": true or false, }}  {{    "msg": (Error message),}}  {{    "identifier": (Did of transaction submitter),}}  {{    "reqId": (Id number of request),}}  {{    "protocolVersion": 1,}}  {{    "signature":  (Submitter's signature)}}  {{    }}}{{    }}  {{}}}   ></body> </Action>
<Action id="43052" issue="28516" author="sergeypalamarchuk" type="comment" created="2018-04-17 13:04:51.0" updateauthor="sergeypalamarchuk" updated="2018-04-17 13:05:58.0"> <body><! CDATA    Changes: - Add restart pool transaction for indy-sdk and wrappers for python, iOs, java and cli.  PR:   https://github.com/hyperledger/indy-sdk/pull/609      Version: - master#472  Risk: * Med  After ticket INDY-1173 has been tested and merged with master, need add ignored tests.(ticket is-648)  ></body> </Action>
<Action id="43150" issue="28516" author="gudkov" type="comment" body=" ~sergey.minaev  Can you start validation and re-assign to QA after basic validation?" created="2018-04-19 13:04:07.0" updateauthor="gudkov" updated="2018-04-19 13:04:07.0"/>
<Action id="43203" issue="28516" author="ozheregelya" type="comment" body=" ~gudkov ,  ~sergey.minaev , What is the current status of pool-restart? As I can see, this command is available in 1.3.1~477 version of indy-cli. So, is it ready to testing?" created="2018-04-20 10:31:28.0" updateauthor="ozheregelya" updated="2018-04-20 10:31:28.0"/>
<Action id="43217" issue="28516" author="gudkov" type="comment" body=" ~ozheregelya  I believe yes. We can start validation that it is possible to reboot nodes with CLI." created="2018-04-20 14:48:41.0" updateauthor="gudkov" updated="2018-04-20 14:48:41.0"/>
<Action id="43417" issue="28516" author="zhigunenko.dsr" type="comment" created="2018-04-25 13:54:12.0" updateauthor="zhigunenko.dsr" updated="2018-04-25 13:54:12.0"> <body><! CDATA *Environment:* indy-cli 1.3.1~489  *Reason for rejection:* _CLI ledger pool-restart action=cancel_ cannot be performed without _datetime_ despite of help content (marked as optional) and work logic  ></body> </Action>
<Action id="43456" issue="28516" author="ozheregelya" type="comment" created="2018-04-26 09:58:40.0" updateauthor="ozheregelya" updated="2018-04-26 09:58:40.0"> <body><! CDATA One more thing. Copy-paste mistake in description:  {code:java} indy> ledger pool-restart help  Command: 	ledger pool-restart - Send instructions to nodes to update themselves. {code} "Send instructions to nodes to *restart* themselves." should be instead "update".  ></body> </Action>
<Action id="43601" issue="28516" author="zhigunenko.dsr" type="comment" created="2018-04-28 10:48:50.0" updateauthor="zhigunenko.dsr" updated="2018-04-28 10:48:50.0"> <body><! CDATA *Environment:* indy-cli 1.4.0~20  libindy 1.3.1~495  Actual results: * mistype in help fixed * "cancel" still required _datetime_ {code} pool(p1):wallet(w1):did(V4S...e6f):indy> ledger pool-restart action=cancel Transaction has been rejected: validation error  ClientPoolRestartOperation : empty string (datetime=) {code}    ></body> </Action>
<Action id="43602" issue="28516" author="sergey.minaev" type="comment" body="It&apos;s significant to use updated version of libindy too. Also I suggest to run indy-cli with `RUST_LOG=info` to obtain more context" created="2018-04-28 11:19:26.0" updateauthor="sergey.minaev" updated="2018-04-28 11:19:26.0"/>
<Action id="43739" issue="28516" author="ozheregelya" type="comment" created="2018-05-02 18:46:45.0" updateauthor="ozheregelya" updated="2018-05-02 18:46:45.0"> <body><! CDATA `RUST_LOG=info` or `RUST_LOG=trace` don't give additional information: {code:java} pool(p1):wallet(wa):did(V4S...e6f):indy> ledger pool-restart action=start datetime=2020-01-25T12:49:05.258870+00:00 INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received INFO|ledger_command_executor | src/commands/ledger.rs:277 | BuildPoolRestartRequest command received INFO|indy::commands::ledger | src/commands/ledger.rs:616 | build_pool_restart_request >>> submitter_did: "V4SGRU86Z58d6TV7PBUe6f", action: "start", datetime: Some("2020-01-25T12:49:05.258870+00:00") INFO|indy::commands::ledger | src/commands/ledger.rs:622 | build_pool_config_request <<< res: "{\"reqId\":1525286480016039243,\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"operation\":{\"type\":\"118\",\"action\":\"start\",\"datetime\":\"2020-01-25T12:49:05.258870+00:00\"},\"protocolVersion\":1}" INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received INFO|ledger_command_executor | src/commands/ledger.rs:194 | SignAndSubmitRequest command received TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 TRACE|indy::services::pool | src/services/pool/mod.rs:308 | cmd   123, 34, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114, 34, 58, 34, 86, 52, 83, 71, 82, 85, 56, 54, 90, 53, 56, 100, 54, 84, 86, 55, 80, 66, 85, 101, 54, 102, 34, 44, 34, 111, 112, 101, 114, 97, 116, 105, 111, 110, 34, 58, 123, 34, 97, 99, 116, 105, 111, 110, 34, 58, 34, 115, 116, 97, 114, 116, 34, 44, 34, 100, 97, 116, 101, 116, 105, 109, 101, 34, 58, 34, 50, 48, 50, 48, 45, 48, 49, 45, 50, 53, 84, 49, 50, 58, 52, 57, 58, 48, 53, 46, 50, 53, 56, 56, 55, 48, 43, 48, 48, 58, 48, 48, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 49, 49, 56, 34, 125, 44, 34, 112, 114, 111, 116, 111, 99, 111, 108, 86, 101, 114, 115, 105, 111, 110, 34, 58, 49, 44, 34, 114, 101, 113, 73, 100, 34, 58, 49, 53, 50, 53, 50, 56, 54, 52, 56, 48, 48, 49, 54, 48, 51, 57, 50, 52, 51, 44, 34, 115, 105, 103, 110, 97, 116, 117, 114, 101, 34, 58, 34, 51, 118, 105, 72, 53, 80, 114, 109, 110, 109, 89, 80, 49, 85, 107, 80, 116, 55, 116, 85, 55, 75, 119, 107, 56, 99, 55, 57, 114, 87, 49, 49, 116, 114, 56, 99, 78, 85, 51, 86, 118, 116, 85, 53, 70, 55, 78, 110, 51, 54, 68, 116, 52, 50, 80, 101, 90, 84, 122, 70, 82, 106, 57, 83, 104, 49, 76, 118, 49, 105, 52, 49, 55, 54, 50, 118, 100, 104, 57, 69, 51, 52, 105, 90, 103, 53, 117, 122, 34, 125 ,  7, 0, 0, 0   INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:185 | cmd "{\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"operation\":{\"action\":\"start\",\"datetime\":\"2020-01-25T12:49:05.258870+00:00\",\"type\":\"118\"},\"protocolVersion\":1,\"reqId\":1525286480016039243,\"signature\":\"3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz\"}" INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node1 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"start","datetime":"2020-01-25T12:49:05.258870+00:00","type":"118"},"protocolVersion":1,"reqId":1525286480016039243,"signature":"3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz"} INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node2 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"start","datetime":"2020-01-25T12:49:05.258870+00:00","type":"118"},"protocolVersion":1,"reqId":1525286480016039243,"signature":"3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz"} INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node4 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"start","datetime":"2020-01-25T12:49:05.258870+00:00","type":"118"},"protocolVersion":1,"reqId":1525286480016039243,"signature":"3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz"} INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node3 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"start","datetime":"2020-01-25T12:49:05.258870+00:00","type":"118"},"protocolVersion":1,"reqId":1525286480016039243,"signature":"3viH5PrmnmYP1UkPt7tU7Kwk8c79rW11tr8cNU3VvtU5F7Nn36Dt42PeZTzFRj9Sh1Lv1i41762vdh9E34iZg5uz"} TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 30, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 17017325 } TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 17081375 } TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 9, nanos: 999935950 } TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 9999 TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {"reqId":1525286480016039243,"identifier":"V4SGRU86Z58d6TV7PBUe6f","op":"REQACK"} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: "{\"reqId\":1525286480016039243,\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"op\":\"REQACK\"}" DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75 | TransactionHandler::process_ack: update timeout for req_id: 1525286480016039243 TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<< TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 0, tm_min: 43, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23562465 } TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23583124 } TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999979341 } TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 99999 TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {"op":"REQACK","reqId":1525286480016039243,"identifier":"V4SGRU86Z58d6TV7PBUe6f"} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: "{\"op\":\"REQACK\",\"reqId\":1525286480016039243,\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\"}" DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:75 | TransactionHandler::process_ack: update timeout for req_id: 1525286480016039243 TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<< TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 0, tm_min: 43, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23661644 } TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23677232 } TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999984412 } TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 99999 TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {"result":{"action":"start","datetime":"2020-01-25T12:49:05.258870+00:00","type":"118","identifier":"V4SGRU86Z58d6TV7PBUe6f","reqId":1525286480016039243},"op":"REPLY"} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: "{\"result\":{\"action\":\"start\",\"datetime\":\"2020-01-25T12:49:05.258870+00:00\",\"type\":\"118\",\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"reqId\":1525286480016039243},\"op\":\"REPLY\"}" TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:104 | TransactionHandler::process_reply: reply_cnt: 0, f: 1 DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:107 | TransactionHandler::process_reply: Try to verify proof and signature TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:255 | TransactionHandler::parse_reply_for_proof_checking: >>> json_msg: Object({"action": String("start"), "datetime": String("2020-01-25T12:49:05.258870+00:00"), "identifier": String("V4SGRU86Z58d6TV7PBUe6f"), "reqId": Number(1525286480016039243), "type": String("118")}) TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:258 | TransactionHandler::parse_reply_for_proof_checking: xtype: "118" TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:267 | TransactionHandler::parse_reply_for_proof_checking: <<< type not supported DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:140 | TransactionHandler::process_reply: consensus_reached false TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:157 | TransactionHandler::process_reply: <<< TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:346 | get_zmq_poll_timeout first_event Tm { tm_sec: 0, tm_min: 43, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 23661644 } TRACE|indy::services::pool | src/services/pool/mod.rs:347 | get_zmq_poll_timeout now_utc Tm { tm_sec: 20, tm_min: 41, tm_hour: 18, tm_mday: 2, tm_mon: 4, tm_year: 118, tm_wday: 3, tm_yday: 121, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 24560674 } TRACE|indy::services::pool | src/services/pool/mod.rs:349 | get_zmq_poll_timeout diff Duration Duration { secs: 99, nanos: 999100970 } TRACE|indy::services::pool | src/services/pool/mod.rs:351 | get_zmq_poll_timeout diff ms 99999 TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {"op":"REPLY","result":{"identifier":"V4SGRU86Z58d6TV7PBUe6f","action":"start","reqId":1525286480016039243,"type":"118","datetime":"2020-01-25T12:49:05.258870+00:00"}} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: "{\"op\":\"REPLY\",\"result\":{\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"action\":\"start\",\"reqId\":1525286480016039243,\"type\":\"118\",\"datetime\":\"2020-01-25T12:49:05.258870+00:00\"}}" TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:104 | TransactionHandler::process_reply: reply_cnt: 1, f: 1 DEBUG|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:140 | TransactionHandler::process_reply: consensus_reached true TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:157 | TransactionHandler::process_reply: <<< TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received INFO|ledger_command_executor | src/commands/ledger.rs:202 | SubmitAck command received Restart pool request has been sent to Ledger. Metadata: +------------------------+---------------------+ | Identifier | Request ID | +------------------------+---------------------+ | V4SGRU86Z58d6TV7PBUe6f | 1525286480016039243 | +------------------------+---------------------+ Data: +--------+----------------------------------+ | Action | Datetime | +--------+----------------------------------+ | start | 2020-01-25T12:49:05.258870+00:00 | +--------+----------------------------------+ pool(p1):wallet(wa):did(V4S...e6f):indy> TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","op":"REQACK","reqId":1525286480016039243} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: "{\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"op\":\"REQACK\",\"reqId\":1525286480016039243}" TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<< TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {"op":"REPLY","result":{"action":"start","identifier":"V4SGRU86Z58d6TV7PBUe6f","datetime":"2020-01-25T12:49:05.258870+00:00","type":"118","reqId":1525286480016039243}} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: "{\"op\":\"REPLY\",\"result\":{\"action\":\"start\",\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"datetime\":\"2020-01-25T12:49:05.258870+00:00\",\"type\":\"118\",\"reqId\":1525286480016039243}}" WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No pending command for request TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {"reqId":1525286480016039243,"op":"REQACK","identifier":"V4SGRU86Z58d6TV7PBUe6f"} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:72 | TransactionHandler::process_ack: >>> ack: Response { req_id: 1525286480016039243 }, raw_msg: "{\"reqId\":1525286480016039243,\"op\":\"REQACK\",\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\"}" TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:80 | TransactionHandler::process_ack: <<< TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> TRACE|indy::services::pool | src/services/pool/mod.rs:291 | zmq poll 1 INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {"op":"REPLY","result":{"action":"start","type":"118","datetime":"2020-01-25T12:49:05.258870+00:00","reqId":1525286480016039243,"identifier":"V4SGRU86Z58d6TV7PBUe6f"}} TRACE|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:84 | TransactionHandler::process_reply: >>> req_id: 1525286480016039243, raw_msg: "{\"op\":\"REPLY\",\"result\":{\"action\":\"start\",\"type\":\"118\",\"datetime\":\"2020-01-25T12:49:05.258870+00:00\",\"reqId\":1525286480016039243,\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\"}}" WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No pending command for request TRACE|indy::services::pool | src/services/pool/mod.rs:244 | zmq poll loop << TRACE|indy::services::pool | src/services/pool/mod.rs:238 | zmq poll loop >> pool(p1):wallet(wa):did(V4S...e6f):indy>  pool(p1):wallet(wa):did(V4S...e6f):indy>  pool(p1):wallet(wa):did(V4S...e6f):indy>  pool(p1):wallet(wa):did(V4S...e6f):indy>  pool(p1):wallet(wa):did(V4S...e6f):indy> ledger pool-restart action=cancel No required "datetime" parameter present.{code}  ></body> </Action>
<Action id="43760" issue="28516" author="sergey.minaev" type="comment" body=" ~ozheregelya  please specify environment for your last logs." created="2018-05-03 12:20:40.0" updateauthor="sergey.minaev" updated="2018-05-03 12:20:40.0"/>
<Action id="43761" issue="28516" author="sergey.minaev" type="comment" body=" ~ozheregelya  please make sure, that both libindy and CLI are RC 1.4.0 20 " created="2018-05-03 12:23:34.0" updateauthor="sergey.minaev" updated="2018-05-03 12:23:49.0"/>
<Action id="43763" issue="28516" author="ozheregelya" type="comment" created="2018-05-03 12:51:47.0" updateauthor="ozheregelya" updated="2018-05-03 12:51:47.0"> <body><! CDATA  ~sergey.minaev , environment: libindy 1.3.1~495 indy-cli 1.3.1~495 indy-node 1.3.396  ></body> </Action>
<Action id="43773" issue="28516" author="ozheregelya" type="comment" created="2018-05-03 14:32:01.0" updateauthor="ozheregelya" updated="2018-05-03 14:32:01.0"> <body><! CDATA  ~sergey.minaev ,  retested on libindy and indy-cli 1.4.0~20: {code:java} pool(p1):wallet(wa):did(V4S...e6f):indy> INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {"op":"REPLY","result":{"identifier":"V4SGRU86Z58d6TV7PBUe6f","type":"118","datetime":"2020-01-25T12:49:05.258870+00:00","reqId":1525357686282126174,"action":"start"}} WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No pending command for request INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {"reqId":1525357686282126174,"op":"REQACK","identifier":"V4SGRU86Z58d6TV7PBUe6f"} INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {"op":"REPLY","result":{"reqId":1525357686282126174,"action":"start","type":"118","identifier":"V4SGRU86Z58d6TV7PBUe6f","datetime":"2020-01-25T12:49:05.258870+00:00"}} WARN|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:87 | TransactionHandler::process_reply: <<< No=start datetime=2020-01-25T12:49:05.258870+00:00^C pool(p1):wallet(wa):did(V4S...e6f):indy> ledger pool-restart action=cancel INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received INFO|ledger_command_executor | src/commands/ledger.rs:277 | BuildPoolRestartRequest command received INFO|indy::commands::ledger | src/commands/ledger.rs:616 | build_pool_restart_request >>> submitter_did: "V4SGRU86Z58d6TV7PBUe6f", action: "cancel", datetime: Some("") INFO|indy::commands::ledger | src/commands/ledger.rs:622 | build_pool_config_request <<< res: "{\"reqId\":1525357708900123396,\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"operation\":{\"type\":\"118\",\"action\":\"cancel\",\"datetime\":\"\"},\"protocolVersion\":1}" INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received INFO|ledger_command_executor | src/commands/ledger.rs:194 | SignAndSubmitRequest command received INFO|indy::services::pool::transaction_handler|src/services/pool/transaction_handler.rs:185 | cmd "{\"identifier\":\"V4SGRU86Z58d6TV7PBUe6f\",\"operation\":{\"action\":\"cancel\",\"datetime\":\"\",\"type\":\"118\"},\"protocolVersion\":1,\"reqId\":1525357708900123396,\"signature\":\"utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta\"}" INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node4 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"cancel","datetime":"","type":"118"},"protocolVersion":1,"reqId":1525357708900123396,"signature":"utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta"} INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node1 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"cancel","datetime":"","type":"118"},"protocolVersion":1,"reqId":1525357708900123396,"signature":"utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta"} INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node2 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"cancel","datetime":"","type":"118"},"protocolVersion":1,"reqId":1525357708900123396,"signature":"utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta"} INFO|indy::services::pool | src/services/pool/mod.rs:549 | RemoteNode::send_str Node3 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","operation":{"action":"cancel","datetime":"","type":"118"},"protocolVersion":1,"reqId":1525357708900123396,"signature":"utHXUQcoGXTwQcwWRoCt2Wzpt7HtvQK5mykCqyKMJfFhjtPbj884BmKgqLm9WZy51ZrFyBvojaQtVBKE3hqRwta"} INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node1 {"reqId":1525357708900123396,"identifier":"V4SGRU86Z58d6TV7PBUe6f","reason":"client request invalid: InvalidClientRequest('validation error  ClientPoolRestartOperation : empty string (datetime=)',)","op":"REQNACK"} INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","reqId":1525357708900123396,"op":"REQNACK","reason":"client request invalid: InvalidClientRequest('validation error  ClientPoolRestartOperation : empty string (datetime=)',)"} INFO|indy::commands | src/commands/mod.rs:104 | LedgerCommand command received INFO|ledger_command_executor | src/commands/ledger.rs:202 | SubmitAck command received Transaction has been rejected: validation error  ClientPoolRestartOperation : empty string (datetime=) pool(p1):wallet(wa):did(V4S...e6f):indy> INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node4 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","op":"REQNACK","reqId":1525357708900123396,"reason":"client request invalid: InvalidClientRequest('validation error  ClientPoolRestartOperation : empty string (datetime=)',)"} INFO|indy::services::pool | src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node3 {"identifier":"V4SGRU86Z58d6TV7PBUe6f","reqId":1525357708900123396,"reason":"client request invalid: InvalidClientRequest('validation error  ClientPoolRestartOperation : empty string (datetime=)',)","op":"REQNACK"}{code} So, as I can see, it's a problem on node side.  ></body> </Action>
<Action id="44055" issue="28516" author="ozheregelya" type="comment" body="It was discussed with team, the issue will be fixed on node side and tested in scope of INDY-1173." created="2018-05-08 13:50:22.0" updateauthor="ozheregelya" updated="2018-05-08 13:50:22.0"/>
