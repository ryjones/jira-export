<Issue id="41451" key="IS-1333" number="1333" project="10401" reporter="ignisvulpis" assignee="artemkaaas" creator="ignisvulpis" type="10002" summary="Document Generator Point" priority="3" resolution="10000" status="10001" created="2019-07-26 13:59:03.0" updated="2020-01-30 13:01:15.0" resolutiondate="2020-01-22 11:23:30.0" votes="0" watches="4" workflowId="54468"> <description><! CDATA Indy and Plenum are using a constant that is the generator point for keys used for the signatures.  `"3LHpUjiyFC2q2hD7MnwwNmVXiuaFbQx2XkAFJWzswCjgN1utjsCeLzHsKk1nJvFEaS4fcrUmVAkdhtPCYbrVyATZcmzwJReTcJqwqBCPTmTQ9uWPwz6rEncKb2pYYYFcdHa8N17HzVyTqKfgPi4X9pMetfT3A5xCHq54R2pDNYWVLDX"`   https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/pool/request_handler.rs#L66    https://github.com/hyperledger/indy-plenum/blob/master/crypto/bls/indy_crypto/bls_crypto_indy_crypto.py#L19      The documentation should explain the value of the constant and what properties it has.  Also why plenum and libindy _need_ to have the same constant and what happens when the values differ.     One outcome of the discussion and the documentation could be that libindy needs to get the value from the pool config or genesis file of the pool if a pool is using a different constant then the hardcoded one in Plenum.     I stumbled upon this in this PR  https://github.com/hyperledger/indy-sdk/pull/1739         ></description> </Issue>
