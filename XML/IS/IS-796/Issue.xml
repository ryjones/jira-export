<Issue id="31403" key="IS-796" number="796" project="10401" reporter="ignisvulpis" assignee="gudkov" creator="ignisvulpis" type="10002" summary="Stop using indy_crypto JSONENCODABLE" priority="3" resolution="10000" status="10001" created="2018-06-27 08:57:04.0" updated="2018-07-30 12:31:41.0" resolutiondate="2018-07-27 14:07:40.0" votes="0" watches="2" workflowId="51442"> <description><! CDATA indy_crypto::JsonEncodable is used in many places in libindy.  e.g.:  https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/did.rs#L28      I suggest stop doing that. Why?: # indy-crypto is for crypto and it is not indy-utils. Why is JSONENCODABLE there anyway? # Any extern crate use in libindy is a liability. Libindy is depending on that crate (obviously) # Errors raised by these methods are IndyCryptoErrors which libindy then has to map to its own errors. # serde_json provides everything libindy needs. # serde_json is kind of part of rust, so support for serde_json is high. If serde_json advances then libindy might directly profit from that. # libindy code is easier to read because many developers know serde_json anyway and so developers do not have to look at indy-crypto whether there are subtle differences.     This PR  https://github.com/hyperledger/indy-sdk/pull/886  mostly gets rid of map_err but also it shows that serde_json is all that libindy needs.   https://github.com/hyperledger/indy-crypto/blob/master/libindy-crypto/src/utils/json.rs  provides two methods that can easily be replaced by serde_json methods. Also it provides two types JsonEncodable and JsonDecodable which can be replaced by serde_json types as well.     For reason 1. I would deprecate indy-crypto/utils/json.rs   ~danielhardman      ></description> </Issue>
