<Action id="27669" issue="18842" author="danielhardman" type="comment" body=" ~peacekeeper  I have moved your ticket from the INDY project to INDY-SDK." created="2017-06-29 21:50:26.0" updateauthor="danielhardman" updated="2017-06-29 21:50:26.0"/>
<Action id="27686" issue="18842" author="gudkov" type="comment" created="2017-06-30 08:52:26.0" updateauthor="gudkov" updated="2017-06-30 08:52:26.0"> <body><! CDATA The main use case of sovrin_sign call is signing of transaction messages that were created with sovrin_build_*_request calls. It allows splitting of communication logic from private keys management for better security of real applications.  Ledger communication requires the creation of complex custom digests and injection of the signature field to original JSON messages (some kind of complex envelope). So we can't just easily make this calls generic without loosing of ability to sign ledger messages.   I suggest the following:  1. Change sovrin_sign and sovrin_verify calls to just sign and verify plain byte arrays without involving any digest and envelope creation logic. 2. Provide dedicated call sovrin_sign_request that will allow signing of ledger requests.   ~danielhardman   ~peacekeeper  Could you verify this plan?  ></body> </Action>
<Action id="27693" issue="18842" author="peacekeeper" type="comment" created="2017-06-30 11:21:30.0" updateauthor="peacekeeper" updated="2017-06-30 11:21:30.0"> <body><! CDATA I guess there are a few other options too, but to me your proposal feels very good.  Perhaps instead of introducing a new method there could be a boolean flag parameter on the sovrin_sign method that controls whether or not to apply the custom logic for ledger commands?  ></body> </Action>
<Action id="29554" issue="18842" author="gudkov" type="comment" body="Also we need to update libindy, java, python and ios tests" created="2017-08-08 15:18:48.0" updateauthor="gudkov" updated="2017-08-08 15:18:48.0"/>
