<Issue id="20195" key="IS-287" number="287" project="10401" reporter="mgbailey" assignee="artemkaaas" creator="mgbailey" type="10004" summary="Failure to sync with validator pool" environment="Indy SDK with python wrapper." priority="2" resolution="10000" status="10001" created="2017-08-15 15:35:18.0" updated="2017-08-28 07:39:57.0" resolutiondate="2017-08-28 07:39:57.0" votes="0" watches="2" workflowId="51029"> <description><! CDATA While testing with the test_ledger.py script, I encountered the following.  If I run with a standard 4-node validator test pool, the script runs properly.  I add a validator to the pool, by adding a steward NYM and NODE to the ledger, and starting up a corresponding VM,  so that there are now 5 nodes, and the fifth is not in the genesis files.  I then re-run the test_ledger.py script and it appears that the app attempts to sync with the expanded pool but fails.  Here is the last part of the log:  INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":4,\"merkleRoot\":\"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX\",\"ledgerId\":0,\"ppSeqNo\":null,\"viewNo\":null}" INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node3 \{"viewNo":0,"newMerkleRoot":"9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr","op":"CONSISTENCY_PROOF","ppSeqNo":4,"oldMerkleRoot":"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX","seqNoStart":4,"hashes": "8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX" ,"ledgerId":0,"seqNoEnd":5} INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{"newMerkleRoot":"9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr","seqNoStart":4,"hashes": "8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX" ,"ppSeqNo":4,"viewNo":0,"ledgerId":0,"oldMerkleRoot":"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX","op":"CONSISTENCY_PROOF","seqNoEnd":5} INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":5,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":6,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":7,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":8,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node2 \{"ppSeqNo":4,"oldMerkleRoot":"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX","seqNoEnd":5,"newMerkleRoot":"9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr","hashes": "8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX" ,"seqNoStart":4,"viewNo":0,"op":"CONSISTENCY_PROOF","ledgerId":0} INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 \{"ledgerId":0,"newMerkleRoot":"9fFrvZr7A2s7UjcfxHZzWH6h5n3gt8vJUWxwWgBu2KXr","ppSeqNo":4,"seqNoStart":4,"hashes": "8LGGWrRSdx3fgj2qfQ5qf484CzWmUyDvSumRBNgTJKxX" ,"viewNo":0,"seqNoEnd":5,"oldMerkleRoot":"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX","op":"CONSISTENCY_PROOF"} INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{"consProof":  ,"op":"CATCHUP_REP","txns":\{"5":\{"identifier":"UUbob8jLUpPekVer36cb9M","reqId":1502807874434024,"signature":"59nvSwmua6Qk8JNxQw1D38sRarHb3jd2STyb52vyVPtBHsJaCQFDfxAvGUGbMo8kZkbbnYtaTrZLvBqo7RggsUt8","type":"0","txnTime":1502830802,"data":\{"client_ip":"10.20.30.205","client_port":9710,"alias":"Node5","node_ip":"10.20.30.205","services": "VALIDATOR" ,"node_port":9709},"dest":"7gFFsqYXcUsUzvR7hQjAVTCH8HHnQLE6D68U5JZRW5Pd"}},"ledgerId":0} thread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', /checkout/src/libcore/option.rs:335 note: Run with `RUST_BACKTRACE=1` for a backtrace.  ></description> </Issue>
