<Action id="29917" issue="20195" author="mgbailey" type="comment" created="2017-08-16 16:15:31.0" updateauthor="mgbailey" updated="2017-08-16 16:15:31.0"> <body><! CDATA  ~sergey.minaev , Here is the backtrace:  INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":5,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":6,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":7,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:552 | Sending "\{\"op\":\"CATCHUP_REQ\",\"ledgerId\":0,\"seqNoStart\":8,\"seqNoEnd\":5,\"catchupTill\":5}" INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node4 \{"seqNoStart":4,"viewNo":0,"ledgerId":0,"seqNoEnd":5,"oldMerkleRoot":"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX","op":"CONSISTENCY_PROOF","hashes": "3xpHGSTTrN51iNuTSXuGQBLXTmAxHDFVGUWe3vNzTTyT" ,"ppSeqNo":14,"newMerkleRoot":"8BuM6LBnyqCkkYW1z8EnxeKtxEcDV4hwSLpK4C2u6wAP"} INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{"ppSeqNo":14,"hashes": "3xpHGSTTrN51iNuTSXuGQBLXTmAxHDFVGUWe3vNzTTyT" ,"viewNo":0,"ledgerId":0,"seqNoEnd":5,"op":"CONSISTENCY_PROOF","oldMerkleRoot":"3DAYJA56vBWx9iFey27RR5N3yyc1RxRncFuDH6LiGbGX","seqNoStart":4,"newMerkleRoot":"8BuM6LBnyqCkkYW1z8EnxeKtxEcDV4hwSLpK4C2u6wAP"} INFO|indy::services::pool | src/services/pool/mod.rs:546 | RemoteNode::recv_msg Node1 \{"consProof":  ,"op":"CATCHUP_REP","ledgerId":0,"txns":\{"5":\{"reqId":1502898959096049,"dest":"mXzk7i5KCT6YDW4pvo1yF96u24nkqVGPseunHpzEj6t","type":"0","txnTime":1502920560,"data":\{"node_port":9709,"services": "VALIDATOR" ,"client_ip":"10.20.30.205","node_ip":"10.20.30.205","alias":"Node5","client_port":9710},"signature":"JQPUeVDA4nkVhQSZWZX3adCAyZS1EfVSmNE6qQfZ3JMkgZxQf3PgREKdT8csXLeojPSxFpeGgyj4Y4eiULuxchT","identifier":"SJceXxTejdrkeNddY3EDfi"}}} thread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', /checkout/src/libcore/option.rs:335 note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace. stack backtrace: 0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49 1: std::sys_common::backtrace::_print at /checkout/src/libstd/sys_common/backtrace.rs:71 2: std::panicking::default_hook::\{\{closure}} at /checkout/src/libstd/sys_common/backtrace.rs:60 at /checkout/src/libstd/panicking.rs:355 3: std::panicking::default_hook at /checkout/src/libstd/panicking.rs:371 4: std::panicking::rust_panic_with_hook at /checkout/src/libstd/panicking.rs:549 5: std::panicking::begin_panic at /checkout/src/libstd/panicking.rs:511 6: std::panicking::begin_panic_fmt at /checkout/src/libstd/panicking.rs:495 7: rust_begin_unwind at /checkout/src/libstd/panicking.rs:471 8: core::panicking::panic_fmt at /checkout/src/libcore/panicking.rs:69 9: core::panicking::panic at /checkout/src/libcore/panicking.rs:49 10: <core::option::Option<T>>::unwrap at /checkout/src/libcore/macros.rs:21 11: indy::services::ledger::merkletree::<impl indy::services::ledger::merkletree::merkletree::MerkleTree>::consistency_proof at src/services/ledger/merkletree/mod.rs:92 12: indy::services::pool::catchup::CatchupHandler::check_cons_proofs at src/services/pool/catchup.rs:255 13: indy::services::pool::catchup::CatchupHandler::catchup_step at src/services/pool/catchup.rs:228 14: indy::services::pool::catchup::CatchupHandler::process_catchup_rep at src/services/pool/catchup.rs:195 15: indy::services::pool::catchup::CatchupHandler::process_msg at src/services/pool/catchup.rs:89 16: indy::services::pool::PoolWorkerHandler::process_msg at src/services/pool/mod.rs:71 17: indy::services::pool::PoolWorker::process_actions at src/services/pool/mod.rs:334 18: indy::services::pool::PoolWorker::_run at src/services/pool/mod.rs:314 19: indy::services::pool::PoolWorker::run at src/services/pool/mod.rs:297 20: indy::services::pool::Pool::new::\{\{closure}} at src/services/pool/mod.rs:459  ></body> </Action>
<Action id="30099" issue="20195" author="sergey.minaev" type="comment" created="2017-08-23 09:56:58.0" updateauthor="sergey.minaev" updated="2017-08-23 09:58:02.0"> <body><! CDATA I've reproduced the issue on our ignored integration test and create draft hotfix  https://github.com/hyperledger/indy-sdk/pull/204   ~mgbailey  could you build libindy from sources of this PR  link to branch|https://github.com/jovfer/indy-sdk/tree/hotfix/is287_catchup_fail_for_5th_node  and check this fix, please?  ></body> </Action>
<Action id="30227" issue="20195" author="mgbailey" type="comment" body=" ~sergey.minaev , I have tested this branch in a new validator pool today, and the problem is resolved. Â Thank you." created="2017-08-25 19:57:17.0" updateauthor="mgbailey" updated="2017-08-25 19:57:17.0"/>
