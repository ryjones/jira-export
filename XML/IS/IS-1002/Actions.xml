<Action id="50931" issue="33970" author="gudkov" type="comment" body=" ~ignisvulpis  indy-crypto depends on OpenSSL for bignumbers and RSA-like code. There is no alternative for the moment that provides acceptable licence and performance." created="2018-09-21 11:32:33.0" updateauthor="gudkov" updated="2018-09-21 11:32:33.0"/>
<Action id="50944" issue="33970" author="ignisvulpis" type="comment" created="2018-09-21 13:57:46.0" updateauthor="ignisvulpis" updated="2018-09-21 13:57:46.0"> <body><! CDATA indy-crypto also wants to get rid of openssl.  libindy is using sha2 and sha3 already and therefore I assume they perform well   https://github.com/hyperledger/indy-sdk/pull/1154   ></body> </Action>
<Action id="51071" issue="33970" author="ignisvulpis" type="comment" created="2018-09-24 05:56:30.0" updateauthor="ignisvulpis" updated="2018-09-24 05:57:28.0"> <body><! CDATA I advancedÂ   https://github.com/hyperledger/indy-sdk/pull/1154   That removes openssl from indy-sdk although it is still in indy-crypto but getting rid of openssl makes cross-compiling libindy for e.g. Android much simpler.  ></body> </Action>
<Action id="51072" issue="33970" author="ignisvulpis" type="comment" body="If 1154 is done the https://jira.hyperledger.org/browse/IS-962 is not needed." created="2018-09-24 06:09:12.0" updateauthor="ignisvulpis" updated="2018-09-24 06:09:12.0"/>
<Action id="51285" issue="33970" author="ignisvulpis" type="comment" created="2018-09-27 16:20:29.0" updateauthor="ignisvulpis" updated="2018-09-27 16:20:29.0"> <body><! CDATA I compared different cryto libraries using https://github.com/AxelNennker/crypto-bench ``` Finished release  optimized + debuginfo  target(s) in 0.02s  Running target/release/deps/crypto_bench_rustcrypto-2b1f68cfdab32d00  running 6 tests test digest::sha256::_1000 ... bench: 4,559 ns/iter (+/- 281) = 219 MB/s test digest::sha256::_16 ... bench: 306 ns/iter (+/- 23) = 52 MB/s test digest::sha256::_2000 ... bench: 9,317 ns/iter (+/- 1,000) = 214 MB/s test digest::sha256::_256 ... bench: 1,439 ns/iter (+/- 41) = 177 MB/s test digest::sha256::_8192 ... bench: 37,831 ns/iter (+/- 3,092) = 216 MB/s test digest::sha256::block_len ... bench: 594 ns/iter (+/- 33) = 107 MB/s  test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 12 filtered out  Finished release  optimized + debuginfo  target(s) in 0.01s  Running target/release/deps/crypto_bench_sodiumoxide-c735c721ccf15fea  running 6 tests test digest::sha256::_1000 ... bench: 4,243 ns/iter (+/- 170) = 235 MB/s test digest::sha256::_16 ... bench: 311 ns/iter (+/- 40) = 51 MB/s test digest::sha256::_2000 ... bench: 8,275 ns/iter (+/- 423) = 241 MB/s test digest::sha256::_256 ... bench: 1,375 ns/iter (+/- 42) = 186 MB/s test digest::sha256::_8192 ... bench: 33,960 ns/iter (+/- 7,060) = 241 MB/s test digest::sha256::block_len ... bench: 595 ns/iter (+/- 21) = 107 MB/s  test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 9 filtered out  Finished release  optimized + debuginfo  target(s) in 0.01s  Running target/release/deps/crypto_bench_openssl-89872258fec62510  running 6 tests test digest::sha256::_1000 ... bench: 2,281 ns/iter (+/- 163) = 438 MB/s test digest::sha256::_16 ... bench: 278 ns/iter (+/- 54) = 57 MB/s test digest::sha256::_2000 ... bench: 4,274 ns/iter (+/- 116) = 467 MB/s test digest::sha256::_256 ... bench: 811 ns/iter (+/- 63) = 315 MB/s test digest::sha256::_8192 ... bench: 16,959 ns/iter (+/- 2,017) = 483 MB/s test digest::sha256::block_len ... bench: 453 ns/iter (+/- 84) = 141 MB/s  test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 19 filtered out ``` So it seems openssl is twice as fast as RustCrypto and libsodium. At least on my machine which is: ignisvulpis@namenlos:~/development/crypto-bench$ inxi -C CPU: Quad core Intel Core i7-6920HQ (-HT-MCP-) cache: 8192 KB clock speeds: max: 3800 MHz 1: 1068 MHz 2: 2012 MHz 3: 1947 MHz 4: 1728 MHz 5: 1742 MHz 6: 1468 MHz 7: 1794 MHz 8: 1780 MHz ignisvulpis@namenlos:~/development/crypto-bench$  Can you verify these findings?  So removing openssl from indy seems unwise and actually we should move all sha256 to openssl, right? What do you think? Could somebody confirm these findings? I suggest to close this issue and in fact suggest to consider removing sha2 and sha3 from indy and replacing them with openssl methods.  ></body> </Action>
<Action id="51517" issue="33970" author="sergey.minaev" type="comment" created="2018-10-02 14:13:52.0" updateauthor="sergey.minaev" updated="2018-10-02 14:13:52.0"> <body><! CDATA  ~ignisvulpis  thank you for investigation!   ~gudkov  I also think that we should close this ticket after creation new one like  "Use optimal implementation for math like hash encryption etc". Or may be some exploratory ticket  ></body> </Action>
<Action id="51544" issue="33970" author="ignisvulpis" type="comment" created="2018-10-02 18:31:32.0" updateauthor="ignisvulpis" updated="2018-10-02 18:31:32.0"> <body><! CDATA I think crypto-bench should be enhanced by adding all crypto methods we are using. I think there are some missing we are using in sodiumoxide.  Also use indy-crypto and don't care how things are implemented in indy-sdk.  ></body> </Action>
<Action id="51550" issue="33970" author="esplinr" type="comment" created="2018-10-02 19:22:09.0" updateauthor="esplinr" updated="2018-10-02 19:22:09.0"> <body><! CDATA Closing this issue.  We created IS-1021 to check that we are using the correct functions.  ></body> </Action>
