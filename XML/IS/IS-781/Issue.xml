<Issue id="31089" key="IS-781" number="781" project="10401" reporter="gudkov" assignee="gudkov" creator="gudkov" type="10006" summary="Wallet API: Wallet should be accessible in a cluster" priority="3" resolution="10000" status="10001" created="2018-06-15 12:35:38.0" updated="2018-07-06 12:11:46.0" resolutiondate="2018-07-06 12:11:46.0" votes="0" watches="1" workflowId="51430"> <description><! CDATA Current Wallet API design doesn't satisfy enterprise use case when application is distributed between nodes in cluster:  {quote}Say, I have two node clusters: node1 and node2  Now say, someone hit an agent api, which went to ‘node1’, and it created a wallet w1 (wallet content storage is off course mysql which is shared between ‘node1’ and ‘node2’). What happens is that on whichever node, first time wallet gets created, it creates related config files on local file storage system as well. For example, in this example scenario, since wallet was created on ‘node1’, here are files which I see on ‘node1’:  ~/.indy_client/wallet/w1 -rw-r--r--  1 ashokwaghmare  staff   205B Jun 12 16:32 config.json -rw-r--r--  1 ashokwaghmare  staff   118B Jun 12 16:32 wallet.json  Here are contents of those files cat config.json {"db_name":"wallet","port":3306,"read_host":"127.0.0.1","salt": 40,173,109,87,96,106,221,67,3,77,160,231,140,53,229,119,111,156,62,144,53,211,215,186,39,15,34,213,146,219,157,251 ,"write_host":"127.0.0.1"}%      ➜  817733b2a75bffe66d4825330651b7ab4c3a2bd796b9b5aed98382dc74d8c00a  cat wallet.json {"pool_name":"default_pool","type":"aurora","name":"817733b2a75bffe66d4825330651b7ab4c3a2bd796b9b5aed98382dc74d8c00a"}%    ➜  817733b2a75bffe66d4825330651b7ab4c3a2bd796b9b5aed98382dc74d8c00a  So, ‘node1’, knows where is the wallet w1 (from config.json file).  But, when next request goes to ‘node2’, and if same wallet w1 is needed, it doesn’t have those two config files (although a blank directory with wallet-name w1 does exists), and it doesn’t find wallet there.{quote}  We discussed different options and current vision is the following:  - libindy shouldn't have any persistent state related to wallet configuration - wallet_create function should stop creating of wallet.json/config.json files - wallet_open function should accept wallet configuration as a single json. This json should provide all information about wallet configuration, wallet storage configuration and placement inside of storage.  - libindy should stop be responsible for discovering of existing wallets. Corresponded endpoints should be deprecated.  - Indy CLI should manage the list of wallets on an application level  ></description> </Issue>
