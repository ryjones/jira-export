<Action id="50690" issue="33870" author="burdettadam" type="comment" created="2018-09-19 16:07:09.0" updateauthor="burdettadam" updated="2018-09-19 16:07:09.0"> <body><! CDATA lodo1995 commented,   My team managed to have libindy work on React Native (both iOS and, partially, Android) some time ago. At that time, official support for Android was not there, so we had to do some magic to cross-compile libindy from source. Nowadays, I think you can just use the official build instructions to build libindy for Android. The official iOS wrapper, on the other hand, was already working, more or less.  Coming to the hard part, you have to write the bindings from Android/iOS native code to React-Native yourself. I won't cover this here, as it is well explained in the official React-Native docs (for both  Android|https://facebook.github.io/react-native/docs/native-modules-android  and  iOS|https://facebook.github.io/react-native/docs/native-modules-ios.html ), but basically, you have to write some Java and Objective-C/Swift code, respectively, to bridge the gap between the native libindy and the interpreted React-Native code. This means that you will have to eject from CRNA and manage the folder structure and build process by yourself.  ></body> </Action>
<Action id="50921" issue="33870" author="gudkov" type="comment" created="2018-09-21 10:26:41.0" updateauthor="gudkov" updated="2018-09-21 10:26:41.0"> <body><! CDATA For the moment:  - Libindy provides Objective-C and Java Wrappers - Libindy provides iOS and Android builds  It is enough to significantly easy create React Native App. We can improve this in the future.  I suggest to re-create this bug to low-priority story and may be as for contribution.   ></body> </Action>
<Action id="60550" issue="33870" author="ptab-pawan" type="comment" created="2019-05-31 09:00:08.0" updateauthor="ptab-pawan" updated="2019-05-31 09:00:08.0"> <body><! CDATA  ~burdettadam  ,  ~gudkov  :   I am new to Indy-SDK . I need some clarity to consume libIndy iOS in react native app.  I am able to build libIndy with iOS wrapper . Now I want to make direct calls to Indy by  writing the binding methods using   bridging class .Is there a documentation or good read to kick start on this ?   I suppose I do not need any AgentFramework or LibVCX library to make Indy calls. As I am unable to build libVCX for iOS? Please correct my understanding. I followed the instructions in :   https://hyperledger-indy.readthedocs.io/projects/sdk/en/latest/vcx/wrappers/ios/README.html  But get the below error with xcode build or manual steps build :   ld: library not found for -lvcx clang: error: linker command failed with exit code 1 (use -v to see invocation)  Used git repos from : 1. https://github.com/hyperledger/indy-sdk/  2. https://github.com/evernym/indy-sdk  3. https://github.com/evernym/sdk    ~gudkov  : When you say Libindy provides iOS and Android builds.I suppose you are referring to  https://repo.sovrin.org/  stable builds ?      ></body> </Action>
<Action id="60564" issue="33870" author="sergey.minaev" type="comment" created="2019-05-31 15:20:51.0" updateauthor="sergey.minaev" updated="2019-05-31 15:20:51.0"> <body><! CDATA  ~nsivraj   ~ryanmarsh  could you help  ~ptab-pawan   with react native question?    ~ptab-pawan  regarding builds: yes, most probably Vyacheslav means repo.sovrin.org. You can find there all types of builds (master/rc/stable).  ></body> </Action>
<Action id="62833" issue="33870" author="ptab-pawan" type="comment" created="2019-08-13 10:38:59.0" updateauthor="ptab-pawan" updated="2019-08-13 10:38:59.0"> <body><! CDATA  ~sergey.minaev  ,  ~nsivraj   ,  ~ryanmarsh   : user : lodo1995( https://github.com/lodo1995 )   is not available  to comment on his approach to get libIndy to  work for react native.  I am facing issues while trying to invoke the  libIndy methods using the react native bridging classes . I am using indy sdk 1.8.2 and in my .gradle : implementation 'org.hyperledger:indy:1.8.2'.Has anyone of you tried to  consume libIndy or libVCX in react native app? Please share your thoughts.      My  second approach is to  use libVCX  and use bridging methods instead. Referring to android libVCX from  :   https://repo.sovrin.org/android/libvcx/rc/0.4.0-81/  and respective libIndy from :   https://repo.sovrin.org/android/libindy/rc/1.11.0-81/    But if I go with the approach, I wont have a libVCX wrapper for my iOS implementation.    My requirement is to consume indy in react native cross platform app. If there is a better approach, pour in your suggestions.   ></body> </Action>
<Action id="63484" issue="33870" author="sergey.minaev" type="comment" body=" ~ptab-pawan  there is opensource example  Sovrin Connector APP|https://github.com/sovrin-foundation/connector-app " created="2019-09-02 13:49:26.0" updateauthor="sergey.minaev" updated="2019-09-02 13:50:07.0"/>
<Action id="64372" issue="33870" author="esplinr" type="comment" created="2019-10-08 13:33:21.0" updateauthor="esplinr" updated="2019-10-08 13:33:21.0"> <body><! CDATA The open source Sovrin Connector app is the best example to follow.  The issue tracker is not the right place for providing detailed guidance on how to use the libraries. It is best to ask on chat.hyperledger.org, or Stack Overflow.  ></body> </Action>
