<Action id="65479" issue="42929" author="esplinr" type="comment" body=" ~tmarkovski  said on Rocket Chat that he believes this is a problem with libindy and not with the dotnet wrapper. We&apos;ll investigate it more when we have the opportunity." created="2019-11-12 14:58:41.0" updateauthor="esplinr" updated="2019-11-12 14:58:41.0"/>
<Action id="65598" issue="42929" author="magicindustries" type="comment" created="2019-11-18 10:48:41.0" updateauthor="magicindustries" updated="2019-11-18 10:48:41.0"> <body><! CDATA I've investigated this further and it looks like the lazy static was a red herring, probably from an earlier debugging attempt.  I can confirm the freeze in Unity only occurs when the callbacks are executed from the inner thread (the one spawned for the CommandExecutor worker). It seems the problem is caused by communicating back to the external app from a thread it didn't start itself.  When I have a moment I'm going to try the following, would love any feedback:  1) Have the api commands store callbacks in an array indexed by the commandHandle  2) Establish a channel for the API so the CommandExecutor can just pass back the commandHandle when it's finished  3) On receipt of the command handle, grab the relevant stored callback from the array using the commandHandle and execute it, removing it from the array.  This moves callback execution to the original library thread and doesn't cause the hung thread issue.  ></body> </Action>
<Action id="66825" issue="42929" author="sergey.minaev" type="comment" body=" ~magicindustries  thank you for the research and shared details. I&apos;m going to re-read our previous discussion in rocketchat and compare with your proposal here." created="2020-01-20 22:42:10.0" updateauthor="sergey.minaev" updated="2020-01-20 22:42:10.0"/>
<Action id="67953" issue="42929" author="sergey.minaev" type="comment" created="2020-02-14 13:59:49.0" updateauthor="sergey.minaev" updated="2020-02-14 13:59:49.0"> <body><! CDATA More samples to reproduce https://github.com/MagicIndustries/IndyErrorDemo has the three separate scenes in it and the test rust library the test rust library is here: https://github.com/MagicIndustries/TestRustThreads.git  ></body> </Action>
