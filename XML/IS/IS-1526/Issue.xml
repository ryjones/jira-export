<Issue id="44562" key="IS-1526" number="1526" project="10401" reporter="ashcherbakov" assignee="artemkaaas" creator="ashcherbakov" type="10002" summary="Test Aries support in libvcx against Aries Test Suite" priority="3" resolution="10000" status="10001" created="2020-03-13 13:59:47.0" updated="2020-03-29 11:07:37.0" resolutiondate="2020-03-29 11:07:37.0" votes="0" watches="2" workflowId="58475" archived="N"> <description><! CDATA Here is the Indy branch we can do testing:  https://github.com/Artemkaaas/indy-sdk/tree/is-1450-vcx-against-test-suite  This branch contains a function that allows creating test connections by skipping protocol steps.  I used a local pool network:  https://github.com/hyperledger/indy-sdk#how-to-start-local-nodes-pool-with-docker   I used Dummy-cloud-agent:  https://github.com/hyperledger/indy-sdk/tree/master/vcx/dummy-cloud-agent   The Corresponding Aries-Test-Suite branch containing compatibility fixes:  https://github.com/Artemkaaas/aries-protocol-test-suite/tree/vcx-against-test-suite  It should use the same pool ledger as vcx.  Vcx Steps: * install the last stable Libndy and Libnullpay:  https://github.com/hyperledger/indy-sdk#ubuntu-based-distributions-ubuntu-1604-and-1804  * build LibVCX from the source. `cd vcx/libvcx && cargo build` — copy target/debug/libvcx.so to /usr/lib or /usr/local/lib * Run agent with `cd vcx/dummy-cloud-agent && cargo run config/sample-config.json`. * go to vcx/wrappers/python3/demo – update `provisionConfig` agency related parameters to point on dummy agent address. * run faber or alice script depending on the running aries-test-suite test. `python3 faber.py` `python3 alice.py`.  Aries testsuite: * Edit config.toml `tests` section to select running tests. * Run with `protocoltest -s`  ></description> </Issue>
