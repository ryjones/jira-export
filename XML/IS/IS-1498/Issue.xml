<Issue id="44337" key="IS-1498" number="1498" project="10401" reporter="ignisvulpis" assignee="sergey.minaev" creator="ignisvulpis" type="10005" summary="name_type crate is now deprecated" priority="3" resolution="10000" status="10001" created="2020-02-13 10:38:20.0" updated="2020-03-01 17:03:17.0" resolutiondate="2020-03-01 17:03:17.0" votes="0" watches="3" workflowId="58242" archived="N"> <description><! CDATA    The crate  https://crates.io/crates/named_type  is now deprecated and won't receive updates.   https://github.com/cjoftheweb/named_type   It already is depending on crates that are not up-to-date anymore which leads to libindy using multiple versions of the crates. So libindy's build time is longer than needed.     There are several options to tackle the deprecation. # The author of the named_type crate suggests to move to  https://doc.rust-lang.org/std/any/fn.type_name.html  which is now in standard Rust. Since 1.38, I think. # Clone name_type and republish as indy_named_type # Clone name_type into libindy/named_type, keep it updated and use it from local path     Problems with approach 1 are that the new standard is not 100% the same as named_type. Especially the method {code:java} let type_ = T::short_type_name(); {code} or similar does not exist to my knowledge.     Migrating libindy to the Rust standard leads to all wallets becoming incompatible.  So there either needs to be a tool to migrate them or libindy can do that automatically which leaves us with dead code after all wallets have been migrated.              ></description> </Issue>
