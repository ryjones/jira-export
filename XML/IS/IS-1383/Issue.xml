<Issue id="42549" key="IS-1383" number="1383" project="10401" reporter="ashcherbakov" assignee="vladimirwork" creator="ashcherbakov" type="10004" summary="GET_TXN doesn&apos;t work with old libindy" priority="1" resolution="10000" status="10001" created="2019-09-30 13:43:58.0" updated="2019-10-03 13:42:20.0" resolutiondate="2019-10-03 13:42:20.0" votes="0" watches="3" workflowId="55615"> <description><! CDATA *Issue:* * GET_TXN for old libindy which doesn't support audit proof for GET_TXN may return "consensus is impossible". * This is intermittent issue, and its probability depends on the pool size.  *Reason:* * The latest indy-node support introduces BLS multisig for GET_TXN * GET_TXN has a new field "multi_sig" which is a bls multi-sig (signature + list of participants) * List of participants can be different on nodes depending on the combination of commits they used for consensus. * So, client can not get F+1 equal replies because of difference in participant field.  *Proposed fix:* * Since libindy always removes "stateProof" field from any request, the fix is to move "multi_sig" field to "stateProof" * Pros: ** Compatible with older version ** Audit Proof checks will work for the latest (September release) SDK * Cons: ** Audit Proof  will not work with the current (August) SDK with the latest (September) Node. May be OK since this is just temporarily and doesn't cause any issues (fallback to consensus will work well) ** Not so good from the clean API point of view (state proof means not state proof, but just multi-sigs)  *Test:* * Open connection to the pool * Rotate BLS keys (ideally on F+1 nodes) * Send a domain txn * Do GET_TXN        ></description> </Issue>
