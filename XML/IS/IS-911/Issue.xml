<Issue id="33242" key="IS-911" number="911" project="10401" reporter="gudkov" assignee="artemkaaas" creator="gudkov" type="10002" summary="Performance: Reduce unnesessary memory copy during params deserialization" priority="3" resolution="10000" status="10001" created="2018-08-27 09:03:02.0" updated="2018-08-29 12:07:37.0" resolutiondate="2018-08-29 12:07:37.0" votes="0" watches="1" workflowId="51518"> <description><! CDATA Libindy now performs unnecessary memory copy during de-serialization of params:  - It converts null terminated string pointer into String (1 copy) - It sends string into working thread (2 copy) - It de-serializes String into struct (3 copy)   We can avoid one copy with the following:  1. Consume null terminated string as reference (CStr) 2. De-serialize referenced string into Struct on API layer 3. Send struct into working thread  The approach is partially implemented in https://github.com/hyperledger/indy-sdk/pull/1079, expect point 1  ></description> </Issue>
