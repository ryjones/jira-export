<Action id="29006" issue="19228" author="gudkov" type="comment" body=" ~peacekeeper  Not sure that it is good idea, but it is possible to use this backport https://github.com/streamsupport/streamsupport" created="2017-07-26 07:38:36.0" updateauthor="gudkov" updated="2017-07-26 07:38:36.0"/>
<Action id="29008" issue="19228" author="gudkov" type="comment" created="2017-07-26 07:47:32.0" updateauthor="gudkov" updated="2017-07-26 07:47:32.0"> <body><! CDATA Additional option is RxJava Observable, but it can force API consumer to RxJava usage.   Also we can use Future from Java 1.5, but it is too limited for complex cases as only available resolving method is calling get() that blocks thread.  I suggest the following: - Don't change API and return CompletableFuture  - For old Java versions users suggest to link with strams backport  ></body> </Action>
<Action id="29010" issue="19228" author="gudkov" type="comment" created="2017-07-26 07:49:43.0" updateauthor="gudkov" updated="2017-07-26 07:49:43.0"> <body><! CDATA One more options:  - Provide low-level callbacks based API - Provide optional CompletableFuture API  - Additionally there can be RxJava based optional API  ></body> </Action>
<Action id="63154" issue="19228" author="esplinr" type="comment" body="We haven&apos;t seen many requests for this over the past two years, so I&apos;m closing this issue. We can reopen it and reevaluate it if there is still a need." created="2019-08-21 19:40:11.0" updateauthor="esplinr" updated="2019-08-21 19:40:11.0"/>
