<Issue id="19114" key="IS-202" number="202" project="10401" reporter="gudkov" assignee="peacekeeper" creator="gudkov" type="10005" summary="Java Wrapper: Use observer pattern for agentListen and agentConnect calls to work with events" priority="2" resolution="10000" status="10001" created="2017-07-10 14:12:56.0" updated="2017-07-18 12:44:00.0" resolutiondate="2017-07-18 12:44:00.0" votes="0" watches="2" workflowId="50958"> <description><! CDATA Currently, agentListen and agentConnect calls require C-style callbacks that use low-level ids, handles and error codes as params. It would be nice to hide this details from library user. I suggest using observer-like approach.  1. agentListen   I suggest to define the following observer interface:  interface ConnectionObserver \{   void onConnection(AgentConnection connection); // will be called on acepting a connection event   void onMessage(AgentConnection connection, String message); // will be called on receiving a message event }  and use it in the method signature instead of C-style callbacks. User needs to implement this interface and put this implementation to agentListen  2. agentConnect  I suggest to define the following observer interface:  interface MessageObserver \{   void onMessage(AgentConnection connection, String message); // will be called on receiving a message event }  and use it in the method signature instead of C-style callbacks. User needs to implement this interface and put this implementation to agentListen  ></description> </Issue>
