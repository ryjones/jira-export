<Action id="48099" issue="32392" author="sergey.minaev" type="comment" body=" ~viswa0269  please provide correct description: at least specify versions, environment, clarify phrase &quot;The same is not being observed with other devices.&quot; ..." created="2018-07-30 10:51:45.0" updateauthor="sergey.minaev" updated="2018-07-30 10:51:45.0"/>
<Action id="48100" issue="32392" author="sergey.minaev" type="comment" body="For current description I can say only one thing: it&apos;s expected behavior that libindy transfer OS error about non-sufficient permission. If we are talking about latest code-base, please make sure that libindy has write access to {{EXTERNAL_STORAGE}} from environment variables and read access to genesis transaction file (path to it should be specified in {{config}} parameter of {{indy_create_pool_ledger_config}} call)" created="2018-07-30 10:59:46.0" updateauthor="sergey.minaev" updated="2018-07-30 11:00:08.0"/>
<Action id="48101" issue="32392" author="viswa0269" type="comment" body=" ~sergey.minaev  I mean the issue was observed in a specific device (MOTO E4) but not with other devices being tested.  We are using libindy version 1.6." created="2018-07-30 11:17:31.0" updateauthor="viswa0269" updated="2018-07-30 11:17:31.0"/>
<Action id="48102" issue="32392" author="sergey.minaev" type="comment" created="2018-07-30 11:31:02.0" updateauthor="sergey.minaev" updated="2018-07-30 11:31:02.0"> <body><! CDATA Ok,  1.6.x libindy attempt to  - read genesis transactions from path specified in API call config - try to create directories in {{EXTERNAL_STORAGE}}  - write some files into sub-directory from step above  If it can not access (read or write), it transfer OS error to application level as we can see in attached log screenshot. Specific place can be determined by setting {{RUST_LOG}} environment variable to {{trace}} in run-time. I've asked Khagesh Sharma to try to do it  ></body> </Action>
<Action id="48172" issue="32392" author="sergey.minaev" type="comment" body="  ^android_connectme_log.rtf  (at the moment of this comment) contains logs of IndySDK default, error (and higher level). To determine a reason of failure please attach trace-level logs" created="2018-07-31 10:13:58.0" updateauthor="sergey.minaev" updated="2018-07-31 10:13:58.0"/>
<Action id="48190" issue="32392" author="nagadurga" type="comment" created="2018-07-31 12:59:39.0" updateauthor="nagadurga" updated="2018-07-31 13:27:26.0"> <body><! CDATA   ^naga_android_rust_log.rtf     has logs at trace level. Please check  ></body> </Action>
<Action id="48201" issue="32392" author="sergey.minaev" type="comment" created="2018-07-31 16:41:03.0" updateauthor="sergey.minaev" updated="2018-07-31 16:56:25.0"> <body><! CDATA Due to limitation of android logger in Rust it is still not enough. I've performed some changes for debug purposes. Please find branch {{debug/android_create_pool}} in my repo, compile it and run on problem device with trace level of logs.  https://github.com/jovfer/indy-sdk/tree/debug/android_create_pool  ></body> </Action>
<Action id="48566" issue="32392" author="sergey.minaev" type="comment" body=" ~NagaDurga   ~viswa0269  do you have any updates here? If I understand  ~faisal00813  correctly, he has provided special build for this issue logging" created="2018-08-08 13:02:25.0" updateauthor="sergey.minaev" updated="2018-08-08 13:02:34.0"/>
<Action id="48880" issue="32392" author="gudkov" type="comment" body=" ~NagaDurga   ~faisal00813  Any news on this?" created="2018-08-15 11:38:38.0" updateauthor="gudkov" updated="2018-08-15 11:38:38.0"/>
<Action id="48914" issue="32392" author="nagadurga" type="comment" body="will provide new logs on 17 Aug. Sorry for the delay" created="2018-08-16 04:54:45.0" updateauthor="nagadurga" updated="2018-08-16 04:54:45.0"/>
<Action id="49207" issue="32392" author="gudkov" type="comment" body=" ~NagaDurga  Any news on this?" created="2018-08-22 08:00:39.0" updateauthor="gudkov" updated="2018-08-22 08:00:39.0"/>
<Action id="49209" issue="32392" author="nagadurga" type="comment" body="will provide updated logs by eod today" created="2018-08-22 08:12:46.0" updateauthor="nagadurga" updated="2018-08-22 08:12:46.0"/>
<Action id="49255" issue="32392" author="nagadurga" type="comment" body="tried reproducing the issue with latest vcx:1.0.0-21-08-2018T10-28@aar . was not able to reproduce the error. Will try tomorrow again and update further" created="2018-08-22 18:07:22.0" updateauthor="nagadurga" updated="2018-08-22 18:07:22.0"/>
<Action id="49416" issue="32392" author="sergey.minaev" type="comment" created="2018-08-27 13:37:51.0" updateauthor="sergey.minaev" updated="2018-08-27 13:37:51.0"> <body><! CDATA I'm able to reproduce only on x86_64 emulator API26 android. And it's seems for me (not a mobile developer) as issue on emulator.  There is copy file operation in libindy create pool config call and java analog of operation is listed below. In my env the java test and libindy fail/succ together. E.g.  - both *failed* on x86_64 emulator  - both *successful* on my personal android phone API26 and x86 emulator API 26  {code:java} @Test public void testFileCopy() throws IOException { Log.d(TAG, "testFileCopy: try manual copy fs operation");  try { Files.createFile(Paths.get("/storage/emulated/0/genesis.txn")); } catch (IOException ignore) { } Files.copy(Paths.get("/storage/emulated/0/genesis.txn"), Paths.get("/storage/emulated/0/genesisMC.txn"), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);  Log.d(TAG, "testFileCopy: successful manual copy fs operation"); } {code}   ></body> </Action>
<Action id="49417" issue="32392" author="sergey.minaev" type="comment" created="2018-08-27 13:39:17.0" updateauthor="sergey.minaev" updated="2018-08-27 13:39:17.0"> <body><! CDATA  ~NagaDurga  please execute the java test analog on your problematic HW devices (not emulators) and let me know is it reproduced or not  FYI  ~esplinr   ~avkrishnan   ></body> </Action>
<Action id="49418" issue="32392" author="gudkov" type="comment" body=" ~sergey.minaev  Can we avoid calling of copy syscall and copy content of genesis file manually? " created="2018-08-27 13:46:13.0" updateauthor="gudkov" updated="2018-08-27 13:46:13.0"/>
<Action id="49419" issue="32392" author="sergey.minaev" type="comment" body=" ~gudkov  we can consider this workaround if the issue will be confirmed on real device." created="2018-08-27 13:52:36.0" updateauthor="sergey.minaev" updated="2018-08-27 13:52:36.0"/>
<Action id="49420" issue="32392" author="gudkov" type="comment" created="2018-08-27 14:03:23.0" updateauthor="gudkov" updated="2018-08-27 14:03:23.0"> <body><! CDATA  ~sergey.minaev   ~danielhardman    As i long term solution i suggest to avoid file management on libindy side at all. We can introduce new approach for pool connection that will not touch file system directly. It can be new call:  ``` indy_pool_connect(genesis_txns_json, pool_leger_cache_json) -> (pool_handle, updated_pool_leger_cache_json) ```  In this case management of files will be responsibly of an application.    ></body> </Action>
<Action id="49432" issue="32392" author="sergey.minaev" type="comment" body=" ~gudkov  I think it&apos;s bad idea to store large cache in JSON serialized string and force application to handle it" created="2018-08-27 15:20:48.0" updateauthor="sergey.minaev" updated="2018-08-27 15:20:48.0"/>
<Action id="49479" issue="32392" author="sergey.minaev" type="comment" body="PR with workaround about permission copy in libindy https://github.com/hyperledger/indy-sdk/pull/1097" created="2018-08-28 10:44:36.0" updateauthor="sergey.minaev" updated="2018-08-28 10:44:36.0"/>
<Action id="49538" issue="32392" author="gudkov" type="comment" body="Provided workaround fixed the problem on x86_64 emulator for one reproducible case that we know.  I suggest to move it to done. If QA will find another cases i suggest to create new bug." created="2018-08-29 11:29:20.0" updateauthor="gudkov" updated="2018-08-29 11:29:20.0"/>
