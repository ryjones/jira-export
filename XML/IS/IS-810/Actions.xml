<Action id="47165" issue="31757" author="gudkov" type="comment" body=" ~danielhardman   ~kdenhartog   ~esplinr  ^" created="2018-07-10 13:28:53.0" updateauthor="gudkov" updated="2018-07-10 13:28:53.0"/>
<Action id="47385" issue="31757" author="kdenhartog" type="comment" body="Started working on how we can approach this design and realized our decision about Agent IDs will affect this. I&apos;ll write up a proposal for us to work from there based upon  ~gudkov  original outline in the comments above. Link to the outline here: https://docs.google.com/document/d/1PvTfVgj2CEBozZb6HeZMQ0ab_zu2zd7tBbH8Hnq3mFM/edit#heading=h.z11ylw9dvvdx" created="2018-07-16 19:27:30.0" updateauthor="kdenhartog" updated="2018-07-16 19:28:00.0"/>
<Action id="48295" issue="31757" author="esplinr" type="comment" body="We need to compare this approach with the microledger work done by  ~lovesh ." created="2018-08-02 13:20:18.0" updateauthor="esplinr" updated="2018-08-02 13:20:18.0"/>
<Action id="49678" issue="31757" author="gudkov" type="comment" body=" ~kdenhartog  Do you have any progress here?" created="2018-08-31 07:26:43.0" updateauthor="gudkov" updated="2018-08-31 07:26:43.0"/>
<Action id="50051" issue="31757" author="kdenhartog" type="comment" body=" ~gudkov  I haven&apos;t had any progress here. I have been working in IndySDK on JWM features currently.  ~swcurran  or  ~mhailstone  would you have anyone available to build this feature? I&apos;d be willing to pair program in the beginning with someone who wants to build it, but I don&apos;t have the bandwidth to work on this right now." created="2018-09-06 22:00:54.0" updateauthor="kdenhartog" updated="2018-09-06 22:01:13.0"/>
<Action id="50108" issue="31757" author="swcurran" type="comment" created="2018-09-07 18:19:50.0" updateauthor="swcurran" updated="2018-09-07 18:19:50.0"> <body><! CDATA I think this is a very high priority item, so am surprised to see it is just a "Medium".  I think most (all?) of the Agent2Agent capabilities we want to build are predicated on having full DIDDoc functionality in place - not just multiple keys. I would definitely like to see the scope and priority of this bumped.  As such, I don't think this is just a "support multiple keys" request, but a balance of planning and coding.  For example, * does Indy Node need to be updated, or does Indy-SDK just use conventions and make use of the ATTRIB key/value pairs to implement DIDDoc support?  I suspect so, but it should be stated by those that fully understand the ramifications. * how Agents are expected to use the Indy-SDK calls to implement the RSM.     As far as resources - we don't have access to resources that can implement that right now.  I can help to spec out what is needed, but the important work - the coding is not something we can provide.  ></body> </Action>
