<Action id="38809" issue="26885" author="seanbohan_sovrin" type="comment" created="2018-01-17 22:13:50.0" updateauthor="seanbohan_sovrin" updated="2018-01-17 22:13:50.0"> <body><! CDATA  ~gudkov   Can we change LibIndy to succeed in connecting if only ONE node is accessible?  ></body> </Action>
<Action id="38943" issue="26885" author="sergey.minaev" type="comment" created="2018-01-21 22:04:29.0" updateauthor="sergey.minaev" updated="2018-01-21 22:16:18.0"> <body><! CDATA  ~SeanBohan_Sovrin ,  ~ozheregelya  In my understanding of the system client *must not* *connect* to pool with only one active node, even for read requests. The reason is client should has up to date pool state before checking state proof of read requests.  ~ashcherbakov   ~gudkov  what do you think?  Also after checking of pool ledger, IndySDK (and CLI) is able to work with only one node. In other words IndySDK will successfully perform read requests in the next scenario: 1) start pool 2) start client, connect to the pool. IndySDK (CLI) will check pool state and keys for BLS signatures 3) stop all nodes except one 4) perform read request.   ></body> </Action>
<Action id="38948" issue="26885" author="ashcherbakov" type="comment" created="2018-01-22 07:21:38.0" updateauthor="ashcherbakov" updated="2018-01-22 07:21:38.0"> <body><! CDATA I believe the 4 steps Sergey described are correct. The main thing is that we can use just one Node for read requests.  It will be possible to connect to one node only once we have full Observer support and advanced catch-up logic.  BTW  ~sergey.minaev  do we persist pool ledger now or performing catch-up from scratch on each restart?  Â   ></body> </Action>
