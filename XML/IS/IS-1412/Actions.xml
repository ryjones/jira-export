<Action id="66324" issue="43014" author="artemkaaas" type="comment" created="2019-12-19 15:19:16.0" updateauthor="artemkaaas" updated="2019-12-19 15:19:16.0"> <body><! CDATA Current state:  * aries-protocol-test-suite provides the set of manual tests for connection protocol. * vcx can be tested against them with usage of python demo scripts (faber.py and alice.py https://github.com/hyperledger/indy-sdk/tree/master/vcx/wrappers/python3/demo)   * The vcx of 0.5.0 version passes all tests successfully.  Open questions:  How to implement backchannels to be able to set an agent under the testing into a some specific state and to get the current state of the agent.  I've created this PR to reflect an alternative way using Backchannel as the opposite of keeping static HTTP connection over DIDDoc.    https://github.com/hyperledger/aries-protocol-test-suite/pull/20  Using this backchannel with a defined set of commands we are able to run connection tests without user interaction, get the status of the agent under the testing. For VCX testing against Test Suite, we did a simple HTTP server above python wrapper which performs requested actions.  https://github.com/hyperledger/indy-sdk/tree/master/vcx/wrappers/python3/aries-test-server   Vcx is not the Agent in the complete meaning of this term. It's library that uses an agent as an endpoint to collect messages(Mediator) and handles inbound messages by request. So, we needed an application above Vcx to run the test suite.  ></body> </Action>
