<Issue id="20098" key="IS-283" number="283" project="10401" reporter="srottem" creator="srottem" type="10004" summary="Unable to release pool handle in .NET finalizer (destructor)" priority="3" resolution="10000" status="10001" created="2017-08-10 13:10:41.0" updated="2017-09-16 07:40:02.0" resolutiondate="2017-09-16 07:40:02.0" votes="0" watches="1" workflowId="51026"> <description><! CDATA I have been attempting to implement code to ensure unmanaged resources obtained from the SDK by the .NET wrapper are released but have been running into trouble. and for now I have just been working with Pool instances.  I am working on the basis that the developer *should* call Close() on the a Pool instance and that IDispose is implemented so that when a Pool instance is created in a using(...) block that Close() will be automatically be called when exiting the block's scope.  As a final backstop my intention was to have the finalizer (Destructor in C#) release the resources when the Pool instance is garbage collected if the developer has Close()ed or Disposed()ed the instance.    Each of these functions calls the indy_close_pool_ledger SDK function.  Unfortunately I'm seeing a problem when the finalizer is used for cleanup - an error occurs when the SDK function is called because the SDK is calling back into an unloaded AppDomain.  This means that the indy_close_pool_ledger call is not actually closing the pool so subsequent calls to open will fail with PoolLedgerInvalidPoolHandle (301).  I have put together a branch with the code including a test with comments that demonstrates the issue here:  https://github.com/hyperledger/indy-sdk/pull/178 .  (Please note that this pull request should not be merged and is for troubleshooting purposes only)  If anyone can provide assistance it would be appreciated.   ></description> </Issue>
