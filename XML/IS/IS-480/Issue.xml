<Issue id="26254" key="IS-480" number="480" project="10401" reporter="ozheregelya" creator="ozheregelya" type="10004" summary="CLI: Application crashes during connection/writing to pool with disconnected nodes" priority="3" resolution="10000" status="10001" created="2017-12-21 19:11:31.0" updated="2018-01-17 19:03:50.0" resolutiondate="2018-01-17 19:03:46.0" votes="0" watches="2" workflowId="51186"> <description><! CDATA *Case 1:* Steps to Reproduce: 1. Setup indy-cli on linux or windows and run it. 2. Create pool using genesis file from not existing or unavailable pool. 3. Try to connect to this pool.  Actual Results: Application crashes.  Expected Results: Obvious error message should appear. E.g. "Pool "<pool_name>" has not been connected."  Additional Information: The same behavior for pool without consensus.  *Case 2:* Application crashes after attempt to write to pool without concensus. 1. Setup pool of 5 nodes. 2. Connect indy-cli to the pool. 3. Stop 2 nodes. 4. Try to write NYM using indy-cli.  Actual Results: Application crashes: !write_to_pool_without consensus.png|thumbnail! {code:java} pool(p1):wallet(wall):did(V4S...e6f):indy> ledger nym did=V4SGRU86Z58d6TV7PBUe12 thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Timeout', /checkout/src/libcore/result.rs:906:4 note: Run with `RUST_BACKTRACE=1` for a backtrace. thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: "SendError(..)"', /checkout/src/libcore/result.rs:906:4 thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Timeout', /checkout/src/libcore/result.rs:906:4 stack backtrace: 0: 0x7f42db349463 - <unknown> 1: 0x7f42db343ca4 - <unknown> 2: 0x7f42db356b83 - <unknown> 3: 0x7f42db3568f2 - <unknown> 4: 0x7f42db357047 - std::panicking::rust_panic_with_hook::h25d461655d60b1a5 5: 0x7f42db356ea4 - <unknown> 6: 0x7f42db356e19 - std::panicking::begin_panic_fmt::ha31e26b280c9e878 7: 0x7f42db356daa - rust_begin_unwind 8: 0x7f42db3711f0 - core::panicking::panic_fmt::h67504914198d0451 9: 0x55b117fd8c35 - <unknown> 10: 0x55b11801b8d0 - <unknown> 11: 0x55b117ff9f3d - <unknown> 12: 0x55b117fd4746 - <unknown> 13: 0x55b117fd743e - <unknown> 14: 0x55b11802e38b - <unknown> 15: 0x55b11801f5f2 - <unknown> 16: 0x7f42db36032c - __rust_maybe_catch_panic 17: 0x7f42db357eab - std::rt::lang_start::hdcba96cc6d0f043d 18: 0x7f42d9fec82f - __libc_start_main 19: 0x55b117fb81f8 - <unknown> 20: 0x0 - <unknown> thread panicked while panicking. aborting. Illegal instruction (core dumped){code} Expected Result: indy-cli should show user-friendly message after timeout, application should not crash.  ></description> </Issue>
