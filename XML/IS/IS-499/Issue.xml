<Issue id="26310" key="IS-499" number="499" project="10401" reporter="vladimirwork" creator="vladimirwork" type="10004" summary="NYM adding via libindy python wrapper returns &quot;ValueError: 307 is not a valid ErrorCode&quot;" priority="3" resolution="10200" status="10001" created="2017-12-29 09:46:13.0" updated="2019-03-29 20:57:27.0" resolutiondate="2019-03-29 20:57:27.0" votes="0" watches="1" workflowId="51201"> <description><! CDATA Build Info: libindy 1.1.1~297 indy-node 1.2.254  Steps to Reproduce: 1. Install pool of 4 nodes. 2. Place performance scripts on each of 4 clients for pool from Step 1. 3. Run `sudo python3 Perf_runner.py -a` with 25 threads sending 1000 NYMs each from 4 clients simultaneously.  Actual Results: There is an error on several or all clients after 600..900 NYMs added: {noformat} ======== Created NYM request... _indy_loop_callback: Function returned error 307 Exception in callback _indy_loop_callback(2755, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62 handle: <Handle _indy_loop_callback(2755, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62> Traceback (most recent call last): File "/usr/lib/python3.5/asyncio/events.py", line 125, in _run self._callback(*self._args) File "/usr/local/lib/python3.5/dist-packages/indy/libindy.py", line 70, in _indy_loop_callback future.set_exception(IndyError(ErrorCode(err))) File "/usr/lib/python3.5/enum.py", line 241, in __call__ return cls.__new__(cls, value) File "/usr/lib/python3.5/enum.py", line 476, in __new__ raise ValueError("%r is not a valid %s" % (value, cls.__name__)) ValueError: 307 is not a valid ErrorCode _indy_loop_callback: Function returned error 307 Exception in callback _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62 handle: <Handle _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62> Traceback (most recent call last): File "/usr/lib/python3.5/asyncio/events.py", line 125, in _run self._callback(*self._args) File "/usr/local/lib/python3.5/dist-packages/indy/libindy.py", line 70, in _indy_loop_callback future.set_exception(IndyError(ErrorCode(err))) File "/usr/lib/python3.5/enum.py", line 241, in __call__ return cls.__new__(cls, value) File "/usr/lib/python3.5/enum.py", line 476, in __new__ raise ValueError("%r is not a valid %s" % (value, cls.__name__)) ValueError: 307 is not a valid ErrorCode_indy_loop_callback: Function returned error 307 _indy_loop_callback: Function returned error 307 Exception in callback _indy_loop_callback(2746, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62 handle: <Handle _indy_loop_callback(2746, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62> Traceback (most recent call last): File "/usr/lib/python3.5/asyncio/events.py", line 125, in _run self._callback(*self._args) File "/usr/local/lib/python3.5/dist-packages/indy/libindy.py", line 70, in _indy_loop_callback future.set_exception(IndyError(ErrorCode(err))) File "/usr/lib/python3.5/enum.py", line 241, in __call__ return cls.__new__(cls, value) File "/usr/lib/python3.5/enum.py", line 476, in __new__ raise ValueError("%r is not a valid %s" % (value, cls.__name__)) ValueError: 307 is not a valid ErrorCode Exception in callback _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62 handle: <Handle _indy_loop_callback(2752, 307, b'') at /usr/local/lib/python3.5/dist-packages/indy/libindy.py:62> Traceback (most recent call last): File "/usr/lib/python3.5/asyncio/events.py", line 125, in _run self._callback(*self._args) File "/usr/local/lib/python3.5/dist-packages/indy/libindy.py", line 70, in _indy_loop_callback future.set_exception(IndyError(ErrorCode(err))) File "/usr/lib/python3.5/enum.py", line 241, in __call__ return cls.__new__(cls, value) File "/usr/lib/python3.5/enum.py", line 476, in __new__ raise ValueError("%r is not a valid %s" % (value, cls.__name__)) ValueError: 307 is not a valid ErrorCode {noformat}  Expected Results: Calls to libindy.py should work without any errors.  Additional Info: Perf_runner.py calls Perf_Add_nyms.py (that uses libindy via python wrapper for sending NYMs) in several threads. Both scripts are in attachment.  ></description> </Issue>
