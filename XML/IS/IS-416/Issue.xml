<Issue id="23875" key="IS-416" number="416" project="10401" reporter="gudkov" creator="gudkov" type="10006" summary="Signus: Support Ledgerless DIDs" priority="3" resolution="10000" status="10001" created="2017-11-09 11:24:00.0" updated="2017-11-17 11:08:47.0" resolutiondate="2017-11-17 03:58:41.0" votes="0" watches="1" workflowId="51135"> <description><! CDATA Se discussed with Rajesh how to use libindy for DID-based encryption without involving pool to resolve DID keys. He is mostly interested in it for unit testing without the pool, but for me, it seems like valuable also from Ledgerless DIDs support perspective.  Existing "indy_key_for_did" call follow the idea that we resolve information about their DID from the ledger with cache in the local wallet. The "indy_open_wallet" call has freshness parameter that is used for checking the freshness of cached pool value. This behavior isn't completely compatible with Ledgerless DIDs as it forces pool connection and will fail after freshness time.  We need to create dedicated call "indy_local_key_for_did" that will look to local ledger only and skip freshness checking. It will allow using local wallet data without forcing pool connection and limitation to data freshness.  ></description> </Issue>
