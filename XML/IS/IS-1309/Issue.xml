<Issue id="40926" key="IS-1309" number="1309" project="10401" reporter="lukasa" assignee="sergey.minaev" creator="lukasa" type="10004" summary="Searching credentials for proofReq fails for certain nonces " priority="3" resolution="10000" status="10001" created="2019-07-04 14:31:30.0" updated="2019-12-25 09:44:32.0" resolutiondate="2019-07-18 13:00:42.0" votes="0" watches="2" workflowId="53891"> <description><! CDATA Affected npm version: 1.9.0-dev-1124  Called function of NodeJS Indy Wrapper: proverSearchCredentialsForProofReq  IndyError: {code:java} { "name": "IndyError", "message": "CommonInvalidStructure", "indyCode": 113, "indyName": "CommonInvalidStructure", "indyCurrentErrorJson": "{\"backtrace\":\"\",\"message\":\"Error: Invalid structure\\n  Caused by: Invalid ProofRequest json has been passed\\n  Caused by: Error: Invalid library state\\nCaused by: Internal OpenSSL error\\nCaused by: OpenSSL error\\n at line 1 column 250\\n\"}", "indyMessage": "Error: Invalid structure\n  Caused by: Invalid ProofRequest json has been passed\n  Caused by: Error: Invalid library state\nCaused by: Internal OpenSSL error\nCaused by: OpenSSL error\n at line 1 column 250\n", "indyBacktrace": "" } {code}    The error seems to be related to the nonce value in the proofReq since I can successfully reproduce broken/not broken calls with two nonces. Both nonces are valid uuids and were generated using the uuid/v1 npm package: nonce = uuidv1().     This is a working proofReq:  {code:java} { "name": "Profile-Proof", "version": "1.0", "requested_attributes": { "attr1_referent": { "name": "firstname" }, "attr2_referent": { "name": "lastname" }, "attr3_referent": { "name": "birthdate" } }, "requested_predicates": {}, "nonce": "8cbe2a40-9e61-11e9-8eb8-3be88a561bbf" } {code} This is a not working proofReq: {code:java} { "name": "Profile-Proof", "version": "1.0", "requested_attributes": { "attr1_referent": { "name": "firstname" }, "attr2_referent": { "name": "lastname" }, "attr3_referent": { "name": "birthdate" } }, "requested_predicates": {}, "nonce": "c3a94ee0-9e61-11e9-816e-9d64a4577d91" } {code}  ></description> </Issue>
