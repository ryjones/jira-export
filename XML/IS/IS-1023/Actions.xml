<Action id="51712" issue="34406" author="sergey.minaev" type="comment" created="2018-10-03 19:45:10.0" updateauthor="sergey.minaev" updated="2018-10-03 19:45:10.0"> <body><! CDATA AFAIR IndyCLI doesn't support hex seed as parameter for creation of DID, so this bug is actual. But there is migration process https://github.com/hyperledger/indy-sdk/blob/master/cli/README.md#old-python-based-cli-migration and it shold work well now.  ~krw910  have you tried this option?  ></body> </Action>
<Action id="51713" issue="34406" author="esplinr" type="comment" body="This is for the use case where no wallet exists to migrate. I updated the story. It&apos;s good to know about the workaround of using the old CLI and upgrading the wallet if adding this feature proves more difficult than expected." created="2018-10-03 19:51:58.0" updateauthor="esplinr" updated="2018-10-03 19:58:25.0"/>
<Action id="51735" issue="34406" author="artemkaaas" type="comment" body="Fixed in PR: https://github.com/hyperledger/indy-sdk/pull/1179" created="2018-10-04 07:35:32.0" updateauthor="artemkaaas" updated="2018-10-04 07:35:32.0"/>
<Action id="51748" issue="34406" author="sergey.minaev" type="comment" created="2018-10-04 12:39:32.0" updateauthor="sergey.minaev" updated="2018-10-04 12:40:43.0"> <body><! CDATA  ~krw910   ~tharmon  There is simple workaround in current IndyCLI: IndyCLI accepts base64 seeds, so hex seed can be converted to base64 anywhere and base64 seed can be used in current/previous versions of IndyCLI   ~esplinr  ~gudkov  FYI  ></body> </Action>
<Action id="51847" issue="34406" author="sergey.minaev" type="comment" body="Available in build 1.6.7 RC 35" created="2018-10-08 13:03:51.0" updateauthor="sergey.minaev" updated="2018-10-08 13:03:51.0"/>
<Action id="51891" issue="34406" author="vladimirwork" type="comment" created="2018-10-09 10:03:38.0" updateauthor="vladimirwork" updated="2018-10-09 10:03:38.0"> <body><! CDATA Build Info: libindy / indy-cli 1.6.7~39  Steps to Validate: 1. Generate Signing Key + Seed and DID + Verification Key using old CLI or sovrin-keygen tool. 2. Create new DID via new CLI using Seed from previous step to get DID and abbreviated verkey. 3. Check that DIDs from Step 1 and Step 2 are the same. 4. Decode DID from new CLI to hex. 5. Decode abbreviated verkey without `~` from new CLI to hex. 6. Concatenate Step 4 hex with Step 5 hex and encode it back to base58. 7. Check that Verification Key from Step 1 and Step 6 result are the same.  Actual Results: We get the same DIDs/verkeys from new CLI using the same seeds from old CLI.  ></body> </Action>
