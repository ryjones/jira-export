<Issue id="40258" key="IS-1280" number="1280" project="10401" reporter="danielhardman" assignee="sklump" creator="danielhardman" type="10002" summary="research credential fraud fix: POC of richly contextualized proofs" priority="3" status="10200" created="2019-05-31 19:40:19.0" updated="2019-07-25 17:27:47.0" votes="0" watches="2" workflowId="53164"> <description><! CDATA This is not a ticket for normal Indy SDK developers, but I am placing it in the Indy SDK backlog because that's the best home I could imagine for it.  Many people are asking for information about how the Indy/Sovrin approach to credentials can deal with various fraud scenarios. This is a very deep topic that cannot be explored fully in a single ticket. However, this ticket asks for a POC exploration of a single technique. When the ticket is complete, sample code will exist atop an SDK wrapper (e.g., in python or java) that demonstrates the technique; if any code needs to be contributed to libindy to make the technique work, the POC will also generate a PR for that code as well.  The technique is one that I've called "richly contextualized proofs". Here is a scenario where it is relevant. Suppose that Mallory wants to get a senior citizen discount when she signs up for educational classes online. The signup process asks her to prove her age > 65, but all other info is self-attested; it also includes payment by credit card. Mallory is younger than 65, so she goes out on the dark web and purchases an Indy/Sovrin-style credential+link secret from someone who is over 65, and intends to use it to commit fraud about her age.  The technique of richly contextualized proofs is to change the proof request such that it becomes far more troublesome and expensive for Mallory to commit fraud in this way. The proof request still requires proof of age > 65, and no additional disclosures. However, it is altered such that Mallory must now prove that the name and birthdate on her driver's license (which she's using to prove age) are the same as the name and birthdate on a passport and a social security card or Aadhaar card. In other words, she's now guaranteeing that there's a rich, interconnected context behind the single fact she's been asked to prove, *without* actually revealing that context.  I suggest that work on this ticket take place in two stages:  In step 1, we construct sample code to demonstrate context as described above, but we actually disclose the context (so, disclose the name and birthdate values on the credentials). In step 2, we turn the context into ZK proofs of equality that are non-disclosing. To do step 2, we probably need help from a crypto engineer.  ></description> </Issue>
