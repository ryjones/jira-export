<Action id="27223" issue="18581" author="danielhardman" type="comment" body=" ~avkrishnan  and  ~gudkov  I think this is an urgent item. We need to have libsovrin compiling for RedHat-based distros. Can you please figure out what version discrepancy is responsible for the difference, and at a minimum decide how hard it would be to resolve the problem? If it&apos;s easy to resolve, let&apos;s resolve immediately. If it&apos;s not, let&apos;s have a conversation about how to schedule the work." created="2017-06-22 20:56:11.0" updateauthor="danielhardman" updated="2017-06-22 20:56:11.0"/>
<Action id="27224" issue="18581" author="danielhardman" type="comment" body="Do we have continuous integration for CentOS or RHEL running? How about for Windows?" created="2017-06-22 20:58:27.0" updateauthor="danielhardman" updated="2017-06-22 20:58:45.0"/>
<Action id="27240" issue="18581" author="avkrishnan" type="comment" body=" ~danielhardman  It is my understanding that currently there is no CI for libsovrin on any platform. Please confirm,  ~gudkov ." created="2017-06-23 03:50:05.0" updateauthor="avkrishnan" updated="2017-06-23 03:50:05.0"/>
<Action id="27243" issue="18581" author="gudkov" type="comment" created="2017-06-23 07:37:11.0" updateauthor="gudkov" updated="2017-06-23 09:04:05.0"> <body><! CDATA > Do we have continuous integration for CentOS or RHEL running? How about for Windows?  We don't have CI pipeline for CentOS and Windows.  > If it's easy to resolve, let's resolve immediately. If it's not, let's have a conversation about how to schedule the work.  Most probable we can provide some suggestion or workaround quickly. It can be disabling of zmq_has feature or building of zmq from sources (some additional important features can be disabled in zmq too). We can document this workaround as Dockerfile and integrate this Dockerfile to CI a bit later.  Note that it will be temporary solution as we plan to switch to zmq fork and it will be linked statically. As CentOS support seems important i suggest to create corresponded Epic.  ></body> </Action>
<Action id="27265" issue="18581" author="gudkov" type="comment" created="2017-06-23 13:15:33.0" updateauthor="gudkov" updated="2017-06-23 13:15:33.0"> <body><! CDATA  ~tharmon  As i understand there are no libzmq and libsodium in RHEL/amazonlinux repos out of the box.  So most probable   {{yum install libsodium-devel zeromq3-devel}}  will just notice that no package found. So were zeromq3 and libsodium installed manually or some 3d party repo was used?  ></body> </Action>
<Action id="27270" issue="18581" author="tharmon" type="comment" body="Those packages are not available with just the default repositories. However, they are available via EPEL, which is where I got them." created="2017-06-23 14:20:53.0" updateauthor="tharmon" updated="2017-06-23 14:20:53.0"/>
<Action id="27271" issue="18581" author="tharmon" type="comment" body="In the source code, it appears the {{zmq_has}} feature is currently on.y being referenced in the IOS wrapper code. So, I would suspect we only need to disable that feature for RHEL-based builds." created="2017-06-23 14:23:10.0" updateauthor="tharmon" updated="2017-06-23 14:23:10.0"/>
<Action id="27272" issue="18581" author="gudkov" type="comment" created="2017-06-23 14:31:49.0" updateauthor="gudkov" updated="2017-06-23 14:31:49.0"> <body><! CDATA  ~tharmon   ~danielhardman   I was able to build libsovrin with Amazon Linux AMI 2017.03 today. Main problem was missed modern libsodium and libzmq in standard repos. To solve this problem I built and installed this libraries from sources.  I created Dockerfile that illustrates how to prepare environment. To build inside of Docker with Amazon Linux AMI 2017.03 use the following steps: # git clone git@github.com:hyperledger/indy-sdk.git && cd indy-sdk (get latest sources) # docker build -t libsovrin-amazon -f .\ci\amazon.dockerfile . (build Amazon Linux image with all dependencies) # docker run -it libsovrin-amazon /bin/bash (start container) # Go to container shell # git clone git@github.com:hyperledger/indy-sdk.git && cd indy-sdk (get latest sources inside container) # cargo build (build libsovrin)  ></body> </Action>
<Action id="27273" issue="18581" author="gudkov" type="comment" created="2017-06-23 14:34:37.0" updateauthor="gudkov" updated="2017-06-23 14:34:37.0"> <body><! CDATA > However, they are available via EPEL, which is where I got them.  I will re-check today.  ></body> </Action>
<Action id="27278" issue="18581" author="gudkov" type="comment" created="2017-06-23 15:12:51.0" updateauthor="gudkov" updated="2017-06-23 15:12:51.0"> <body><! CDATA  ~tharmon   Just reproduced this issue with zmq #package from epel. Thanks for explanation.  ></body> </Action>
<Action id="27281" issue="18581" author="gudkov" type="comment" created="2017-06-23 15:25:38.0" updateauthor="gudkov" updated="2017-06-23 15:26:07.0"> <body><! CDATA  ~tharmon   ~danielhardman   Disabling of zmq_has feature can't solve the problem. EPEL contains old 3.2 version of zmq that doesn't have CurveCP support. So seems only possible solution is building of ZMQ from sources on current RHEL based distros.  I suggest to just document this way and share Dockerfile.  ></body> </Action>
<Action id="27316" issue="18581" author="danielhardman" type="comment" body="I think this is an adequate workaround for the time being. However, I think we need a better story in the long run. Therefore, I have created INDY-150, INDY-151, and INDY-152." created="2017-06-24 21:25:17.0" updateauthor="danielhardman" updated="2017-06-24 21:25:17.0"/>
<Action id="27443" issue="18581" author="gudkov" type="comment" body="Documentation of building indy-sdk on RHEL based distros was provided in docs/rhel-build.md and referenced from README.md. Also dedicated tickets about better RHEL support were created." created="2017-06-27 16:00:26.0" updateauthor="gudkov" updated="2017-06-27 16:00:26.0"/>
<Action id="27622" issue="18581" author="sergey.minaev" type="comment" body="Latest version of indy-sdk use forked zmq system library, so it will be built from sources." created="2017-06-29 15:35:46.0" updateauthor="sergey.minaev" updated="2017-06-29 15:35:46.0"/>
