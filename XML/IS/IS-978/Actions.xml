<Action id="50699" issue="33873" author="burdettadam" type="comment" created="2018-09-19 16:41:13.0" updateauthor="burdettadam" updated="2018-09-19 16:41:13.0"> <body><! CDATA farskipper commented, {noformat} -lindy {noformat} is actually {noformat} -l{noformat} followed by {noformat} indy{noformat} because the cpp linker {noformat} -l{noformat} argument expects no space following it.  You shouldn't need to rename any files in the target directory. The linker will expand {noformat} indy{noformat} to look for the OS specific naming conventions. So in your case it will prefix with lib and postfix with {noformat} .dylib {noformat} and find {noformat} libindy.dylib{noformat} Try nuking your {noformat} node_modules{noformat} folder and running this again without the {noformat} "{noformat} {noformat}LD_LIBRARY_PATH=/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug npm install --save indy-sdk{noformat} I setup the build script to use {noformat}LD_LIBRARY_PATH{noformat} in a somewhat unconventional way so the {noformat}"{noformat} may be messing it up.  ></body> </Action>
<Action id="50701" issue="33873" author="burdettadam" type="comment" created="2018-09-19 16:58:16.0" updateauthor="burdettadam" updated="2018-09-19 16:58:16.0"> <body><! CDATA patrik-stas commented,  farskipper|https://github.com/farskipper  Thank you for the response Matthew. I am using bash as my shell, so the quotes are pre-processed by bash - I've given it a shot try nevertheless, but with no success.  What turned out to be working was to actually copy libindy.* file to {{/usr/local/lib}}. I am now able to install indy-sdk     {{~/dev/hyperledger/indy-test: npm install --save indy-sdk  > indy-sdk@1.6.2 install /Users/patrikstas/dev/hyperledger/indy-test/node_modules/indy-sdk > node-gyp rebuild  CXX(target) Release/obj.target/indynodejs/src/indy.o ./Release/.deps/Release/obj.target/indynodejs/src/indy.o.d.raw Stats { dev: 16777220, mode: 33188, nlink: 1, uid: 501, gid: 20, rdev: 0, blksize: 4194304, ino: 8596120058, size: 2597, blocks: 8, atimeMs: 1534910449000, mtimeMs: 1534910449000, ctimeMs: 1534910449159.4302, birthtimeMs: 1534910448988.1003, atime: 2018-08-22T04:00:49.000Z, mtime: 2018-08-22T04:00:49.000Z, ctime: 2018-08-22T04:00:49.159Z, birthtime: 2018-08-22T04:00:48.988Z } SOLINK_MODULE(target) Release/indynodejs.node npm WARN indy-test@1.0.0 No description npm WARN indy-test@1.0.0 No repository field.  + indy-sdk@1.6.2 updated 1 package in 11.211s}}  Anyway, passing LD_LIBRARY_PATH should also work too, right? I tried to run following and your way of parsing LD_LIBRARY_PATH seems to work as expected with my input. Running command     {{>: LD_LIBRARY_PATH="/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug" node -e "console.log((process.env.LD_LIBRARY_PATH || '').split(':').map(a => '-L' + a.trim()).filter(a => a != '-L').join(' '))"}}  prints     {{-L/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug}}  which does indeed contains the compiled indy libraries:     {{ls -lah /Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug  total 525712 drwxr-xr-x@ 13 patrikstas staff 416B Aug 22 13:35 . drwxr-xr-x 4 patrikstas staff 128B Aug 22 13:35 .. -rw-r--r-- 1 patrikstas staff 0B Aug 22 13:28 .cargo-lock drwxr-xr-x 140 patrikstas staff 4.4K Aug 22 13:28 .fingerprint drwxr-xr-x 32 patrikstas staff 1.0K Aug 22 13:28 build drwxr-xr-x 227 patrikstas staff 7.1K Aug 22 13:35 deps drwxr-xr-x 2 patrikstas staff 64B Aug 22 13:28 examples drwxr-xr-x 4 patrikstas staff 128B Aug 22 13:32 incremental rw-rr- 2 patrikstas staff 113M Aug 22 13:35 libindy.a -rw-r--r-- 1 patrikstas staff 11K Aug 22 13:35 libindy.d -rwxr-xr-x 2 patrikstas staff 39M Aug 22 13:35 libindy.dylib -rw-r--r-- 2 patrikstas staff 93M Aug 22 13:35 libindy.rlib drwxr-xr-x 2 patrikstas staff 64B Aug 22 13:28 native}}  Well, my personal roadblock is removed by copying files to {{/usr/local/lib}}. If you, or someone would like to investigate this, I'll still be here to assist. Also, to reproduce the issue, make sure you remove indy libraries from any default library paths to (like {{/usr/local/lib}} on Mac).  ></body> </Action>
<Action id="50702" issue="33873" author="burdettadam" type="comment" created="2018-09-19 16:59:17.0" updateauthor="burdettadam" updated="2018-09-19 16:59:17.0"> <body><! CDATA Patrik-Stas commented,  Few points - I did a few experiments with {{binding.gyp}}     {{"link_settings": \{ "libraries":   "-L<(module_root_dir)", "<!(node -e 'console.log(\"-L/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug\")')", "-lindy"   }}}  This works.     {{"link_settings": \{ "libraries":   "-L<(module_root_dir)", "<!(LD_LIBRARY_PATH=/Users/patrikstas/dev/hyperledger/indy-sdk/libindy/target/debug node -e \"console.log((process.env.LD_LIBRARY_PATH || '').split(':').map(a => '-L' + a.trim()).filter(a => a != '-L').join(' '))\")", "-lindy"   }}}  This also works.  So I think the problem is that LD_LIBRARY_PATH is not defined in that given node context. I am not familiar with gyp, but I suppose the solution would be to have something likes this in the gyp file     {{"<!(node -e \"console.log((<@(LD_LIBRARY_PATH) || '').split(':').map(a => '-L' + a.trim()).filter(a => a != '-L').join(' '))\")",}}  and figure out a way how to pass that variable to gyp-node?  ></body> </Action>
<Action id="56236" issue="33873" author="gaurisankarj" type="comment" created="2019-01-27 22:24:55.0" updateauthor="gaurisankarj" updated="2019-01-27 22:24:55.0"> <body><! CDATA Don't go with defining a LD_LIBRARY_PATH env variable, instead copy all your libindy.* files from  {code:java} /path/to/libindy/debug/target  {code} into  {code:java} /usr/local/lib {code}  You need to run {code:java} which python2.7 {code} , this will give you the python2.7 executable path, then copy the path and paste it in the code below, {code:java} npm config set python <path> {code} , this sets the env variable for node-gyp.  If that doesn't solve it, in case you have Xcode 10 or above, you need to follow what is given in the below links Readme.md file and install libstdc++  {code:java} https://github.com/Kila2/libstdc-.6.0.9.tbd {code} , then run  {code:java} sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer {code}   Doing this is what helped me hope it helps you.    ></body> </Action>
<Action id="65836" issue="33873" author="jrallen" type="comment" created="2019-11-28 09:12:19.0" updateauthor="jrallen" updated="2019-11-28 09:16:58.0"> <body><! CDATA Setting LD_LIBRARY_PATH no longer works due to SIP: https://github.com/oracle/node-oracledb/issues/231  I found that "cp target/debug/libindy.dylib /usr/local/lib" made a subsequent "npm install indy-sdk" work correctly.  ></body> </Action>
<Action id="69530" issue="33873" author="JIRAUSER20309" type="comment" created="2020-06-23 02:26:04.0" updateauthor="JIRAUSER20309" updated="2020-06-23 02:36:08.0"> <body><! CDATA This is happens on Windows because in a Git bash terminal, the LD_LIBRARY_PATH seems to be ignored, although I'm not sure if it's for the same node-oracledb related reason as mentioned above.  I had a look at node_modules\indy-sdk\build\indynodejs.vcxproj in a text editor and found that the following library path is set in AdditionalLibraryDirectories: C:\Program Files\Git\Dev\LibIndy\lib  To get the link working, create C:\Program Files\Git\Dev\LibIndy\lib and then copy indy.dll.lib into it. Obviously this is not a great solution as this path may change in future updates to the Indy sdk, but this works as a temporary fix.  Hopefully this will help someone.     ></body> </Action>
<Action id="69531" issue="33873" author="JIRAUSER20309" type="comment" created="2020-06-23 16:39:42.0" updateauthor="JIRAUSER20309" updated="2020-06-23 16:39:59.0"> <body><! CDATA I thought I'd managed to get the app to link properly with the above fix, but now I'm getting this on Windows 10:  $ ./run.sh agency01 yarn run v1.22.4 $ rm -rf build && yarn compile && node ./build/samples/agency.js $ tsc J:\aries-framework-javascript-master\node_modules\bindings\bindings.js:121 throw e; ^  *Error: The specified module could not be found.* *\\?\J:\aries-framework-javascript-master\node_modules\indy-sd**k\build\Release\indynodejs.node* at Object.Module._extensions..node (internal/modules/cjs/loader.js:1021:18) at Module.load (internal/modules/cjs/loader.js:811:32) at Function.Module._load (internal/modules/cjs/loader.js:723:14) at Module.require (internal/modules/cjs/loader.js:848:19) at require (internal/modules/cjs/helpers.js:74:18) at bindings (J:\Javascript\aries-framework-javascript-master\node_mo dules\bindings\bindings.js:112:48) at Object.<anonymous> (J:\aries-framework-javascript-mast er\node_modules\indy-sdk\src\indyBinding.js:1:37) at Module._compile (internal/modules/cjs/loader.js:955:30) at Object.Module._extensions..js (internal/modules/cjs/loader.js:991:10) at Module.load (internal/modules/cjs/loader.js:811:32) error Command failed with exit code 1. info Visit  https://yarnpkg.com/en/docs/cli/run  for documentation about this command.  I've Googled a lot and haven't found a solution yet. If anyone has found a solution to this I'd be very grateful to hear it. For now I'm going to try to move the development to an Ubuntu virtual machine.  ></body> </Action>
