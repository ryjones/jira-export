<Issue id="20519" key="IS-332" number="332" project="10401" reporter="slafranca" assignee="slafranca" creator="slafranca" type="10004" summary="Blocking: Libindy does not handle using an invalid genesis transaction file" priority="3" resolution="10000" status="10001" created="2017-08-29 22:53:16.0" updated="2017-11-27 17:19:39.0" resolutiondate="2017-11-27 16:58:40.0" votes="0" watches="3" workflowId="51062"> <description><! CDATA While trying to automate acceptance test #2, I created an empty file and named it pool_transaction_sandbox_genesis.  The acceptance test says when a user has an invalid transaction file {code:java}"You should receive a message that the information needed to connect was not found"{code}  When I run the following code, it does not time out and it never returns an error.  It appears as if it is in an endless loop waiting for something to happen. I should see an error that tells me the information needed was not found. {code:java} # 1. Create the connection string from the genesis txn file pool_config = json.dumps({"genesis_txn": "pool_trxn_file"}) try: await pool.create_pool_ledger_config("acceptance2", pool_config) print("\t======== Created ledger config from genesis txn file") except IndyError as e: if e.error_code == 306: print("Pool already exists, using pool_refresh to open existing pool....") # try: #     await pool.refresh_pool_ledger(1) # except IndyError as e: #     print("Pool refresh failed for existing pool...." ) else: print(str(e)) raise {code}   ></description> </Issue>
