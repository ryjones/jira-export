<Issue id="37435" key="IS-1170" number="1170" project="10401" reporter="alexandervtyurin" creator="alexandervtyurin" type="10006" summary="VCX: Expose inner objects" priority="3" status="10405" created="2019-02-05 08:23:31.0" updated="2019-09-18 13:53:23.0" votes="0" watches="2" workflowId="50752"> <description><! CDATA Let's suppose I have a system where some of the credential-related interactions a going through _libvcx_ and indy-agents and others are going directly through p2p connections with _libindy_.  Right now I'm unable to build such a system because:  * _libvcx_ is forcing me to use agents (that's not ok) * _libindy_ is just not suited for agents (that's ok) * there is no direct interoperability between these two  It would be nice to have access to _libvcx_ inner objects (e.g. *credential offer*) and have the ability to recreate reference objects from these inner objects.  Example: the Issuer creates *IssuerCredential* object, generates *a credential offer* using this object, serializes it and sends it through pigeon post to the Prover; the Prover receives this object, figures out it is *a credential offer* from Issuer, deserializes it in *ProverCredential* object and generates *a* *credential request* using this object, serializes it, sends back and so on.  This will not break the agent paradigm - all the work that needs to be done is to separate object generation form object sending in current _libvcx_ and also add (de)serialization.  ></description> </Issue>
