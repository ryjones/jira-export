<Action id="46815" issue="31524" author="gudkov" type="comment" body="What you mean on the &quot;latest stable sovrin releases&quot;? Could you provide exact version numbers?" created="2018-07-02 13:01:00.0" updateauthor="gudkov" updated="2018-07-02 13:01:00.0"/>
<Action id="46824" issue="31524" author="smithbk" type="comment" created="2018-07-02 17:49:50.0" updateauthor="smithbk" updated="2018-07-02 17:49:50.0"> <body><! CDATA Here is the dockerfile for my node pool, installing from "xenial stable" {code} FROM ubuntu:16.04  RUN apt-get update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 RUN apt-get install -y software-properties-common python-software-properties RUN add-apt-repository "deb https://repo.sovrin.org/deb xenial stable" RUN apt-get install -y apt-transport-https RUN apt-get update -y RUN apt-get upgrade -y RUN apt-get install -y ntp pciutils iptables curl \ iputils-ping net-tools telnet debsigs \ debsig-verify vim pwgen python-pip python3-pip \ python3.5-dev libsodium18 sovrin supervisor \ sudo {code}  And from my node pool container: {code} # apt list | grep indy  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.  indy-anoncreds/xenial,now 1.0.11 amd64  installed,automatic  indy-node/xenial,now 1.3.62 amd64  installed,automatic  indy-plenum/xenial,now 1.2.42 amd64  installed,automatic  libindy-crypto/xenial,now 0.4.0 amd64  installed,automatic  libindy-crypto-dev/xenial 0.1.6 amd64 python3-indy-crypto/xenial,now 0.4.1 amd64  installed,automatic  xindy/xenial 2.4-1.3 amd64 xindy-rules/xenial 2.4-1.3 all {code}  And here is my client dockerfile: {code} FROM ubuntu:16.04  ENV LC_ALL="C.UTF-8" ENV LANG="C.UTF-8" ENV SHELL="/bin/bash"  # Install environment RUN apt-get update -y && apt-get install -y \ 	wget \ 	python3.5 \ 	python3-pip \ 	python-setuptools \ 	apt-transport-https \ 	ca-certificates \ 	software-properties-common \ 	net-tools \ 	curl \ 	telnet \ 	nano \ vim  RUN pip3 install -U \ 	pip \ 	setuptools \ 	python3-indy==1.4.0  RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 \ && add-apt-repository "deb https://repo.sovrin.org/sdk/deb xenial stable" \ && apt-get update \ && apt-get install -y \ libindy=1.4.0 {code}  And version packages from my client container: {code} # apt list | grep indy  WARNING: apt does not have a stable CLI interface. Use with caution in scripts.  indy-cli/xenial 1.5.0 amd64 libindy/xenial 1.5.0 amd64  upgradable from: 1.4.0  libindy-crypto/xenial 0.4.1 amd64 libindy-crypto-dev/xenial 0.4.1 amd64 libindy-dev/xenial 1.5.0 amd64 python3-indy-crypto/xenial 0.4.1 amd64 xindy/xenial 2.4-1.3 amd64 xindy-rules/xenial 2.4-1.3 all {code}    ></body> </Action>
<Action id="47089" issue="31524" author="sergey.minaev" type="comment" created="2018-07-09 10:31:26.0" updateauthor="sergey.minaev" updated="2018-07-09 11:15:46.0"> <body><! CDATA From trace I see that mentioned genesis transactions are used only on client side. But not on pool side:   {code:java} INFO|indy::services::pool          |           src/services/pool/mod.rs:543 | RemoteNode::recv_msg Node2 {"ledgerId":0,"merkleRoot":"AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF","op":"LEDGER_STATUS","viewNo":null,"ppSeqNo":null,"txnSeqNo":4} {code}  The `AsBGPwMzHjDGhpjtLwpqF4wfvNGLsm4516Ybz3py5XiF` hash doesn't correspond to `pool_transactions_genesis` in ticket description At pool there is different set for some reason. Please fix it to avoid the Invalid state error.  ></body> </Action>
<Action id="47092" issue="31524" author="sergey.minaev" type="comment" body=" ~zhigunenko.dsr   ~VladimirWork  did we have any problems related to reading genesis file on Node side at 1.3.62 version?" created="2018-07-09 11:22:22.0" updateauthor="sergey.minaev" updated="2018-07-09 11:22:22.0"/>
<Action id="47093" issue="31524" author="smithbk" type="comment" created="2018-07-09 12:00:16.0" updateauthor="smithbk" updated="2018-07-09 12:00:16.0"> <body><! CDATA Thanks Sergey, but I'm going to need more help in debugging this.  Why would the pool hash be different?  The  /var/lib/indy/sandbox/pool_transactions_genesis file on the pool side is the same as the pool_transactions_genesis file used by the client.  In fact, I have a file service running on the pool node to return this file to the client.  So what else could cause the hash to be different?  BTW, which field of the pool_transactions_genesis file is the merkleRoot hash from the trace statement supposed to match?  ></body> </Action>
<Action id="47094" issue="31524" author="vladimirwork" type="comment" created="2018-07-09 12:05:09.0" updateauthor="vladimirwork" updated="2018-07-09 12:05:09.0"> <body><! CDATA  ~sergey.minaev  > did we have any problems related to reading genesis file on Node side at 1.3.62 version? No.  ></body> </Action>
<Action id="47102" issue="31524" author="sergey.minaev" type="comment" created="2018-07-09 13:57:05.0" updateauthor="sergey.minaev" updated="2018-07-09 13:57:05.0"> <body><! CDATA From RocketChat :  Dockerfile {code:java} FROM ubuntu:16.04 RUN apt-get update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 RUN apt-get install -y software-properties-common python-software-properties RUN add-apt-repository "deb https://repo.sovrin.org/deb xenial stable" RUN apt-get install -y apt-transport-https RUN apt-get update -y RUN apt-get upgrade -y RUN apt-get install -y ntp pciutils iptables curl \ iputils-ping net-tools telnet debsigs \ debsig-verify vim pwgen python-pip python3-pip \ python3.5-dev libsodium18 sovrin supervisor \ sudo   RUN echo ' supervisord \n\ logfile = /tmp/supervisord.log\n\ logfile_maxbytes = 50MB\n\ logfile_backups=10\n\ logLevel = error\n\ pidfile = /tmp/supervisord.pid\n\ nodaemon = true\n\ minfds = 1024\n\ minprocs = 200\n\ umask = 022\n\ ### user = indy\n\ identifier = supervisor\n\ directory = /tmp\n\ nocleanup = true\n\ childlogdir = /tmp\n\ strip_ansi = false\n\ \n\  program:node1 \n\ command=start_indy_node Node1 9711 9712\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node1.log\n\ stderr_logfile=/tmp/node1.log\n\ \n\  program:node2 \n\ command=start_indy_node Node2 9713 9714\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node2.log\n\ stderr_logfile=/tmp/node2.log\n\ \n\  program:node3 \n\ command=start_indy_node Node3 9715 9716\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node3.log\n\ stderr_logfile=/tmp/node3.log\n\ \n\  program:node4 \n\ command=start_indy_node Node4 9717 9718\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node4.log\n\ stderr_logfile=/tmp/node4.log\n\ \n\  program:fileserver \n\ command=python3 -m http.server\n\ directory=/var/lib/indy\n\ stdout_logfile=/tmp/fileserver.log\n\ stderr_logfile=/tmp/fileserver.log' >> /etc/supervisord.conf  ### USER indy  RUN awk '{if (index($1, "NETWORK_NAME") != 0) {print("NETWORK_NAME = \"sandbox\"")} else print($0)}' /etc/indy/indy_config.py> /tmp/indy_config.py RUN mv /tmp/indy_config.py /etc/indy/indy_config.py  COPY bin/* /home/indy/bin/  EXPOSE 9711 9712 9713 9714 9715 9716 9717 9718 8000  CMD  "/home/indy/bin/start-pool"  {code}   ></body> </Action>
<Action id="47103" issue="31524" author="sergey.minaev" type="comment" created="2018-07-09 13:57:21.0" updateauthor="sergey.minaev" updated="2018-07-09 13:57:21.0"> <body><! CDATA  {code:java} $ cat start-pool  #!/bin/bash IP=$(ip a | perl -lne 'print $1 if /( 0-9. +).*global/') /home/indy/bin/generate_indy_pool_transactions --nodes 4 --clients 5 --nodeNum 1 2 3 4 --ips="$IP,$IP,$IP,$IP" /usr/bin/supervisord -c /etc/supervisord.conf {code}   ></body> </Action>
<Action id="47104" issue="31524" author="sergey.minaev" type="comment" created="2018-07-09 13:59:08.0" updateauthor="sergey.minaev" updated="2018-07-09 13:59:56.0"> <body><! CDATA Changed portsStart in generation script:  {code:none} $ cat generate_indy_pool_transactions  #!/usr/bin/python3  from plenum.common.test_network_setup import TestNetworkSetup  from indy_common.config_util import getConfig from indy_common.config_helper import ConfigHelper, NodeConfigHelper from indy_common.txn_util import getTxnOrderedFields import logging   portsStart = 9710 nodeParamsFileName = 'indy.env'   if __name__ == "__main__": logger = logging.getLogger() logger.disabled = True TestNetworkSetup.bootstrapTestNodes(getConfig(), portsStart, nodeParamsFileName, getTxnOrderedFields(), ConfigHelper, NodeConfigHelper) {code}   ></body> </Action>
<Action id="47105" issue="31524" author="ashcherbakov" type="comment" created="2018-07-09 14:05:44.0" updateauthor="ashcherbakov" updated="2018-07-09 14:08:41.0"> <body><! CDATA  ~smithbk  Genesis txn file is used during the first initialization of the node only. So, if you edited genesis txn file after you started the node, you would need to clear the node (ledger) data so this is re-created from genesis file. Service restart will be needed as well.  ></body> </Action>
<Action id="47127" issue="31524" author="smithbk" type="comment" body=" ~ashcherbakov  Thanks, but I didn&apos;t edit the genesis txn file." created="2018-07-09 21:36:06.0" updateauthor="smithbk" updated="2018-07-09 21:36:06.0"/>
<Action id="47135" issue="31524" author="ashcherbakov" type="comment" body="ok, but the genesis txn file contains custom ports (starting from 9710). How did you edit `generate_indy_pool_transactions ` script and when did you run it?" created="2018-07-10 07:49:04.0" updateauthor="ashcherbakov" updated="2018-07-10 07:49:04.0"/>
<Action id="47142" issue="31524" author="smithbk" type="comment" created="2018-07-10 12:01:18.0" updateauthor="smithbk" updated="2018-07-10 12:01:18.0"> <body><! CDATA I hope the following clarifies the steps that I took.  First, the reason that I changed the standard ports is because port 9702 is used by kubernetes in `docker edge`, so I changed the ports to start at 9710 instead of 9701.  I did this by modifying the `portsStart` variable in the `generate_indy_pool_transactions` script as shown in Sergey's last post, but is here again. {code} $ cat generate_indy_pool_transactions  #!/usr/bin/python3  from plenum.common.test_network_setup import TestNetworkSetup  from indy_common.config_util import getConfig from indy_common.config_helper import ConfigHelper, NodeConfigHelper from indy_common.txn_util import getTxnOrderedFields import logging   portsStart = 9710 nodeParamsFileName = 'indy.env'   if __name__ == "__main__": logger = logging.getLogger() logger.disabled = True TestNetworkSetup.bootstrapTestNodes(getConfig(), portsStart, nodeParamsFileName, getTxnOrderedFields(), ConfigHelper, NodeConfigHelper) {code}  I included this modified `generate_indy_pool_transactions` script in my image at `/home/indy/bin/generate_indy_pool_transactions`. I call this script when my container is starting from the `start-pool` script which is executed as the dockerfile's CMD: {code} CMD  "/home/indy/bin/start-pool"  {code} For the complete dockerfile, see Sergey's 3rd to the last post. And my `start-pool` script is in Sergey's 2nd to the last post, but here it is again also: {code} $ cat start-pool  #!/bin/bash IP=$(ip a | perl -lne 'print $1 if /( 0-9. +).*global/') /home/indy/bin/generate_indy_pool_transactions --nodes 4 --clients 5 --nodeNum 1 2 3 4 --ips="$IP,$IP,$IP,$IP" /usr/bin/supervisord -c /etc/supervisord.conf {code}  Note that my start-pool script dynamically computes it public IP address as the container is starting, which is then passed to my modified `generate_indy_pool_transactions` script.  I then start all 4 nodes via supervisord.  The `/etc/supervisord.conf` is created by the dockerfile which Sergey posted earlier, but I'm including below again.  {code} FROM ubuntu:16.04 RUN apt-get update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 RUN apt-get install -y software-properties-common python-software-properties RUN add-apt-repository "deb https://repo.sovrin.org/deb xenial stable" RUN apt-get install -y apt-transport-https RUN apt-get update -y RUN apt-get upgrade -y RUN apt-get install -y ntp pciutils iptables curl \ iputils-ping net-tools telnet debsigs \ debsig-verify vim pwgen python-pip python3-pip \ python3.5-dev libsodium18 sovrin supervisor \ sudo   RUN echo ' supervisord \n\ logfile = /tmp/supervisord.log\n\ logfile_maxbytes = 50MB\n\ logfile_backups=10\n\ logLevel = error\n\ pidfile = /tmp/supervisord.pid\n\ nodaemon = true\n\ minfds = 1024\n\ minprocs = 200\n\ umask = 022\n\ ### user = indy\n\ identifier = supervisor\n\ directory = /tmp\n\ nocleanup = true\n\ childlogdir = /tmp\n\ strip_ansi = false\n\ \n\  program:node1 \n\ command=start_indy_node Node1 9711 9712\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node1.log\n\ stderr_logfile=/tmp/node1.log\n\ \n\  program:node2 \n\ command=start_indy_node Node2 9713 9714\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node2.log\n\ stderr_logfile=/tmp/node2.log\n\ \n\  program:node3 \n\ command=start_indy_node Node3 9715 9716\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node3.log\n\ stderr_logfile=/tmp/node3.log\n\ \n\  program:node4 \n\ command=start_indy_node Node4 9717 9718\n\ directory=/home/indy\n\ stdout_logfile=/tmp/node4.log\n\ stderr_logfile=/tmp/node4.log\n\ \n\  program:fileserver \n\ command=python3 -m http.server\n\ directory=/var/lib/indy\n\ stdout_logfile=/tmp/fileserver.log\n\ stderr_logfile=/tmp/fileserver.log' >> /etc/supervisord.conf  ### USER indy  RUN awk '{if (index($1, "NETWORK_NAME") != 0) {print("NETWORK_NAME = \"sandbox\"")} else print($0)}' /etc/indy/indy_config.py> /tmp/indy_config.py RUN mv /tmp/indy_config.py /etc/indy/indy_config.py  COPY bin/* /home/indy/bin/  EXPOSE 9711 9712 9713 9714 9715 9716 9717 9718 8000  CMD  "/home/indy/bin/start-pool"  {code}  ></body> </Action>
<Action id="47147" issue="31524" author="ashcherbakov" type="comment" created="2018-07-10 12:37:49.0" updateauthor="ashcherbakov" updated="2018-07-10 12:37:49.0"> <body><! CDATA Can you please go to a node and run `read_ledger --type=pool` to see the content of the pool ledger? It should be equal to the genesis txn file.   ></body> </Action>
<Action id="47148" issue="31524" author="ashcherbakov" type="comment" created="2018-07-10 12:39:26.0" updateauthor="ashcherbakov" updated="2018-07-10 12:39:26.0"> <body><! CDATA Also we noticed that you run `sovrin`, not `indy-node`. I think it's more valid to run indy-node in your case, since sovrin is a product with defined genesis txns not assuming any custom ones. So, you can try {code} RUN apt-get install -y ntp pciutils iptables curl \ iputils-ping net-tools telnet debsigs \ debsig-verify vim pwgen python-pip python3-pip \ python3.5-dev libsodium18 indy-node supervisor \ sudo {code}   ></body> </Action>
<Action id="47172" issue="31524" author="smithbk" type="comment" created="2018-07-10 15:06:22.0" updateauthor="smithbk" updated="2018-07-10 15:06:22.0"> <body><! CDATA Thanks.  I see the problem now.  The container must have been restarted by the cloud provider and restarted with a different IP addr.  {code} # read_ledger --type pool  1,{"data":{"alias":"Node1","blskey":"4N8aUNHSgjQVgkpm8nhNEfDf6txHznoYREg9kirmJrkivgL4oSEimFF6nsQ6M41QvhM2Z33nves5vfSn9n1UwNFJBYtWVnHYMATn76vLuL3zU88KyeAYcHfsih3He6UHcXDxcaecHVz6jhCYz1P2UZn2bDVruL5wXpehgBfBaLKm3Ba","client_ip":"172.30.201.203","client_port":9712,"node_ip":"172.30.201.203","node_port":9711,"services": "VALIDATOR" },"dest":"Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv","identifier":"Th7MpTaRZVRYnPiabds81Y","txnId":"fea82e10e894419fe2bea7d96296a6d46f50f93f9eeda954ec461b2ed2950b62","type":"0"}   2,{"data":{"alias":"Node2","blskey":"37rAPpXVoxzKhz7d9gkUe52XuXryuLXoM6P6LbWDB7LSbG62Lsb33sfG7zqS8TK1MXwuCHj1FKNzVpsnafmqLG1vXN88rt38mNFs9TENzm4QHdBzsvCuoBnPH7rpYYDo9DZNJePaDvRvqJKByCabubJz3XXKbEeshzpz4Ma5QYpJqjk","client_ip":"172.30.201.203","client_port":9714,"node_ip":"172.30.201.203","node_port":9713,"services": "VALIDATOR" },"dest":"8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb","identifier":"EbP4aYNeTHL6q385GuVpRV","txnId":"1ac8aece2a18ced660fef8694b61aac3af08ba875ce3026a160acbc3a3af35fc","type":"0"}   3,{"data":{"alias":"Node3","blskey":"3WFpdbg7C5cnLYZwFZevJqhubkFALBfCBBok15GdrKMUhUjGsk3jV6QKj6MZgEubF7oqCafxNdkm7eswgA4sdKTRc82tLGzZBd6vNqU8dupzup6uYUf32KTHTPQbuUM8Yk4QFXjEf2Usu2TJcNkdgpyeUSX42u5LqdDDpNSWUK5deC5","client_ip":"172.30.201.203","client_port":9716,"node_ip":"172.30.201.203","node_port":9715,"services": "VALIDATOR" },"dest":"DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya","identifier":"4cU41vWW82ArfxJxHkzXPG","txnId":"7e9f355dffa78ed24668f0e0e369fd8c224076571c51e2ea8be5f26479edebe4","type":"0"}   4,{"data":{"alias":"Node4","blskey":"2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw","client_ip":"172.30.201.203","client_port":9718,"node_ip":"172.30.201.203","node_port":9717,"services": "VALIDATOR" },"dest":"4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA","identifier":"TWwCRQRZ2ZHMJFn9TzLp7W","txnId":"aa5e817d7cc626170eca175822029339a444eb0ee8f0bd20d3b0b76e566fb008","type":"0"}  {code}     ></body> </Action>
