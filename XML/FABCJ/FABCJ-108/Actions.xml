<Action id="42657" issue="28992" author="gennadyl" type="comment" created="2018-04-07 10:22:34.0" updateauthor="gennadyl" updated="2018-04-07 10:22:34.0"> <body><! CDATA  ~sanchezl  Couple of questions: 1. This way you lock between java shim version and chaincode version, am I correct? It looks like no way to update shim without updating chaincode. 2. How do you plan to build this executable? Will it be executable uber jar or something else? Can you provide some example?   ></body> </Action>
<Action id="43115" issue="28992" author="papegaaij" type="comment" created="2018-04-18 13:37:30.0" updateauthor="papegaaij" updated="2018-04-18 13:37:54.0"> <body><! CDATA I think this change makes sense. Building a jar with, for example, maven is quite involved. The current (1.1.0) setup makes it almost impossible to build a jar as part of a larger maven reactor build. Your chaincode needs to be a separate package and you cannot use anything from a company repository. I see no reason to build java chaincode again and again on every peer. It's expensive and error prone and also makes it almost impossible to guarantee that all peers are running the same code (you can for example have maven central resolve to a different host).  For now, I package my chaincode in a jar, put it in {{build/chaincode.jar}} in a stub project with a dummy pom and use that. It's an ugly way of accomplishing the same thing.   ~gennadyl  to decouple the shim version from the chaincode version, some more changes will be required. You will need a very clear (and versioned) interface with backward compatibility. Next, you need some form of dynamic classloading and implementation hiding. The same thing can probably be accomplished by making sure the GRPC/protobuf definitions are compatible, so a chaincode compiled for 1.1.0 also works on 1.2.0.  ></body> </Action>
<Action id="45326" issue="28992" author="alacambra" type="comment" created="2018-05-31 06:53:45.0" updateauthor="alacambra" updated="2018-05-31 06:53:45.0"> <body><! CDATA We are already doing like that. Uber jar with chaincode and shim. It's also a way easier to test new shim versions.   The coupling of the shim with the code is easy to manage and it's also assured that the runtime use the same version as the development.   ></body> </Action>
<Action id="51020" issue="28992" author="denyeart" type="comment" body="Addressed in other Jiras." created="2018-09-23 20:05:45.0" updateauthor="denyeart" updated="2018-09-23 20:05:45.0"/>
