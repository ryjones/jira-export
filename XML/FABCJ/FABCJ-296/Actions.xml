<Action id="70718" issue="46327" author="JIRAUSER20406" type="comment" created="2020-11-18 10:37:21.0" updateauthor="JIRAUSER20406" updated="2020-11-18 10:37:21.0"> <body><! CDATA Thank you for raising the issue, and the offer of help.   Could you expand a bit on the scenario you're encountering please.. I'm not clear on why you're adding the getState() call.   Evaluate transaction are in effect queries, so state modification doesn't take place.  ></body> </Action>
<Action id="70744" issue="46327" author="JIRAUSER21068" type="comment" created="2020-11-19 14:01:28.0" updateauthor="JIRAUSER21068" updated="2020-11-19 14:03:05.0"> <body><! CDATA Hey  ~calanais , thanks for entertaining this.  This arose because I want to minimize code duplication. The scenario I am encountering is where I have a method used by many transactions (evaluations and submissions) that retrieves ledger objects by some field with getQueryResult() (I don't know the object's key and I can't use getStateByPartialComposite() because in this case the field value is not present in the key). The issue is that sometimes this shared method is called by a submit transaction. I would like in that shared method to be able to discern the transaction type and conditionally call getState() to ensure re-execution during validation and avoid issues with the result set and phantom reads.  A stretch possibly but it seems reasonable for consistency's sake that if the transaction id is accessible in chaincode, so should the transaction intent.  Reference for this concern:  https://github.com/hyperledger/fabric-chaincode-java/blob/master/fabric-chaincode-shim/src/main/java/org/hyperledger/fabric/shim/ChaincodeStub.java#L540   ></body> </Action>
<Action id="70865" issue="46327" author="JIRAUSER20406" type="comment" created="2020-12-01 15:32:20.0" updateauthor="JIRAUSER20406" updated="2020-12-01 15:32:36.0"> <body><! CDATA Hello Bill, thank you for the clarification - sorry took a few days to get to reviewing it; I see exactly what you're referring to now :)  When a transaction is submitted the chaincode itself doesn't know, and there's no indication in the message from the peer about the submit/evaluate nature.   We've knocked a few ideas about and what could be the best way to solve this could be: * Make the metadata of the transaction that is executing available, like the transaction id is * This could be used for decision making etc.   The downside is that attributes that define the submit/evaluate are advisory and are not enforced by the client SDKs. Therefore there is always a chance that the client has submitted something that was intended for evaluate. etc.   Would this work for you - and would you be happy to work on that?  ~billd100   ></body> </Action>
