<Action id="67906" issue="44299" author="mbwhite" type="comment" created="2020-02-11 16:43:35.0" updateauthor="mbwhite" updated="2020-02-11 16:43:35.0"> <body><! CDATA The error was being returned by with a very generic message. I've modified it have the message of the root cause, and added additional logs.  In the chaincode log you will now see for example     16:42:06:108 SEVERE  org.hyperledger.fabric.shim.ResponseUtils newErrorResponse                       Well, you may need another coffee :)16:42:06:108 SEVERE  org.hyperledger.fabric.shim.ResponseUtils newErrorResponse                       Well, you may need another coffee :)org.hyperledger.fabric.contract.ContractRuntimeException: Well, you may need another coffee :) at org.hyperledger.fabric.contract.execution.impl.ContractExecutionService.executeRequest(ContractExecutionService.java:76) at org.hyperledger.fabric.contract.ContractRouter.processRequest(ContractRouter.java:96) at org.hyperledger.fabric.contract.ContractRouter.invoke(ContractRouter.java:107) at org.hyperledger.fabric.shim.impl.ChaincodeInnvocationTask.call(ChaincodeInnvocationTask.java:91) at org.hyperledger.fabric.shim.impl.InnvocationTaskManager.lambda$newTask$17(InnvocationTaskManager.java:229) at org.hyperledger.fabric.shim.impl.InnvocationTaskManager$$Lambda$162.00000000CC240D00.run(Unknown Source) at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1626) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:819)Caused by: java.lang.RuntimeException: Well, you may need another coffee :) at org.example.MyAssetContract.checkCoffeeLevels(MyAssetContract.java:34) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.hyperledger.fabric.contract.execution.impl.ContractExecutionService.executeRequest(ContractExecutionService.java:58) ... 9 more.. caused by ..  ></body> </Action>
<Action id="67935" issue="44299" author="jtonline" type="comment" created="2020-02-13 15:55:47.0" updateauthor="jtonline" updated="2020-02-13 15:55:47.0"> <body><! CDATA Runtime errors are deliberately not passed back to the client in case they inadvertently leak sensitive information. To deliberately return errors to the client based on business logic requirements, you should be able to use ChaincodeException. See JavaDoc and FabCar sample for more info.   https://hyperledger.github.io/fabric-chaincode-java/release-2.0/api/org/hyperledger/fabric/shim/ChaincodeException.html    https://github.com/hyperledger/fabric-samples/blob/master/chaincode/fabcar/java/src/main/java/org/hyperledger/fabric/samples/fabcar/FabCar.java#L67   ></body> </Action>
<Action id="70707" issue="44299" author="JIRAUSER20406" type="comment" body="We should incorporate this into a Best Approach to development document" created="2020-11-18 08:44:06.0" updateauthor="JIRAUSER20406" updated="2020-11-18 08:44:06.0"/>
