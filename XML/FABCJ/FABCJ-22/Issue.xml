<Issue id="33113" key="FABCJ-22" number="22" project="11208" reporter="gennadyl" assignee="gennadyl" creator="gennadyl" type="10000" summary="TEST PLAN: Java chaincode" priority="3" resolution="10000" status="6" created="2018-08-22 10:23:45.0" updated="2019-11-30 21:10:12.0" resolutiondate="2018-09-23 18:36:11.0" votes="0" watches="2" workflowId="56637"> <description><! CDATA +*Unit test*:+  Main unit test task is FAB-10032, not merged in master branch yet.  So far test coverage (master + FAB-11288 + FAB-10032) is 73% {code:java} Package	                                Class, %	Method, %	Line, % org.hyperledger.fabric.shim	        100% (5/ 5)	100% (47/ 47)	95.4% (166/ 174) org.hyperledger.fabric.shim.helper	100% (1/ 1)	100% (4/ 4)	87.5% (21/ 24) org.hyperledger.fabric.shim.impl	100% (15/ 15)	78.7% (96/ 122)	63.4% (333/ 525) org.hyperledger.fabric.shim.ledger	100% (2/ 2)	100% (13/ 13)	100% (36/ 36) {code} *org.hyperledger.fabric.shim*: basic interfaces and and base abstract chaincode class *org.hyperledger.fabric.shim.helper*: helper utilities classes *org.hyperledger.fabric.shim.ledger*: interfaces for ledger queries manupulation *org.hyperledger.fabric.shim.impl*: message handler, grpc stream and client, ChaincodeStub implementation, ledger queries manipulation implementations.  *+Functional verification test FVT+*:  FAB-11839 Extended UT - include mock peer server and message request/response scenarions see *org.hyperledger.fabric.shim.mock.peer*  Unit test spawns mock peer side with set of scenario steps. Each step includes expected message and response messages.  Unit test creates instance of Chaincode, by implementing init and invoke methods in ChaincodeBase abstract class, start it and at the end check if all scenario steps were executed.  *+Integration test+*: FAB-11289 and FAB-11595  Enrich integration test framework to support java chaincode Run basic e2e test with java chaincode and java chaincode that includes private data.     ></description> </Issue>
