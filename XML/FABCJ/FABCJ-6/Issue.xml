<Issue id="42572" key="FABCJ-6" number="6" project="11208" reporter="heatherp" assignee="mbwhite" creator="heatherp" type="10000" summary="Overhaul node/java chaincode testing" priority="2" resolution="10000" status="6" created="2019-10-01 15:27:14.0" updated="2019-11-30 21:10:08.0" resolutiondate="2019-11-27 14:33:30.0" votes="0" watches="1" workflowId="55639"> <description><! CDATA Following from the recent build troubles that have been impacting us recently, we have had an initial session where we have tried to encapsulate current issues and outline possible solutions. Further sessions will involve conversations on everything below, and breaking down larger identified issues.   *As-is Status*   Builds - Unreliable (timeouts) - Difficult to determine point of failure (logging issue) - Too long to complete - Zero confidence in build result - Fabric build pulls and runs all sdk tests   Chaincode - No commonality in tests (content or structure) across repositories - SDK used to deploy  - Missing tests, and unknown unknowns       *Desired Status*   Build - Reliable fast builds   Chaincode - Common isolated testing  *Direction*   Chaincode - Focus on removing dependancies on SDK and enforcing common testing across chaincode types by use of cucumber: * New 'chaincode-test' repository that contains  # Feature files dictating the tests to run # Steps that use the CLI to deploy and interact with chaincode  * Chaincode repositories pull the chaincode test repo and provide:  # The chaincode to deploy (node/java/other) # Bespoke steps that are required for interacting with the chaincode under test if a common capability is not possible # Chaincode build process pulls the 'chaincode-test' repo, runs all features with the provision of chaincode-type resources - Estimate 1 person week for technical spike - Estimate 2 person weeks for completion following successful technical spike      ></description> </Issue>
