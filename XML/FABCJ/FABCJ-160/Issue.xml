<Issue id="42546" key="FABCJ-160" number="160" project="11208" reporter="lquintai" assignee="mbwhite" creator="lquintai" type="10004" summary="Fails to accept some of the java primitive types as transaction input arguments" priority="3" resolution="10000" status="6" created="2019-09-30 10:04:41.0" updated="2019-12-10 09:31:11.0" resolutiondate="2019-12-10 09:31:11.0" votes="0" watches="3" workflowId="57403"> <description><! CDATA Using the metadata type schema as reference (https://github.com/hyperledger/fabric-chaincode-java/blob/release-1.4/fabric-chaincode-shim/src/main/java/org/hyperledger/fabric/contract/metadata/TypeSchema.java):  There seems to be two separated issues: 1. The java primitive type char is not taken into account by the schema, and would be treated as any other user defined class.  2. *short and byte should be handled, but I get an error* when trying to use either of these types as an input argument to a transaction:  .org.hyperledger.fabric.gateway.ContractException: No valid proposal responses received. 1 peer error responses: transaction returned with failure: Unexpected error at org.hyperledger.fabric.gateway.impl.TransactionImpl.validatePeerResponses(TransactionImpl.java:179) at org.hyperledger.fabric.gateway.impl.TransactionImpl.submit(TransactionImpl.java:93) at org.hyperledger.fabric.gateway.impl.ContractImpl.submitTransaction(ContractImpl.java:50) at org.example.JavaSmartContractUtil.submitTransaction(JavaSmartContractUtil.java:19) at org.example.MyAssetContractJavaDemoAuto_0010Test$PrimShort.submitPrimShortTest(MyAssetContractJavaDemoAuto_0010Test.java:414) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498)  ></description> </Issue>
