<Action id="50174" issue="33586" author="sashapesic" type="comment" created="2018-09-10 17:18:03.0" updateauthor="sashapesic" updated="2018-09-10 17:18:03.0"> <body><! CDATA Hello  ~sang ,  The same thing happened to me before. I am on to figuring it out. This is now marked in progress.   ></body> </Action>
<Action id="50179" issue="33586" author="sashapesic" type="comment" created="2018-09-10 18:58:48.0" updateauthor="sashapesic" updated="2018-09-10 18:58:48.0"> <body><! CDATA To  ~sang .  The current Dockerfile in fabric-baseimage/images/couchdb has some issue with the rebar version supplied. This happens because couchdb ships with an old version of rebar (an erlang dependency manager) that has a  bug |https://github.com/rebar/rebar/issues/536  regarding arm64. Downloading the  latest version of rebar|https://github.com/rebar/rebar/wiki/rebar  and placing it in bin/rebar (relative to the couchdb sources) fixes the problem. The latest working image I have built can be found  here|https://hub.docker.com/r/pesicsasa/fabric-couchdb/tags/ .   Steps to build the couchdb for aarch64:  1. pull hyperledger baseimage from  here|https://hub.docker.com/r/pesicsasa/fabric-baseimage/  and tag it appropriately.  2. git clone https://github.com/hyperledger/fabric-baseimage.git 3. Go to fabric-baseimage/images/couchdb and open Dockerfile.in  4. Now you will have to add some lines to the Dockerfile.in. Find the line   {code:bash} && ./configure --disable-docs \ {code} and add the following lines after it:  {code:bash} && mv bin/rebar bin/rebar-orig \ && wget https://github.com/rebar/rebar/wiki/rebar -O bin/rebar \ && chmod +x bin/rebar \ {code}   5. Go back to fabric-baseimage folder and run make couchdb (you may have to retag hyperledger/fabric-baseimage) 6. You are done!       ></body> </Action>
<Action id="50396" issue="33586" author="sang" type="comment" created="2018-09-13 04:57:44.0" updateauthor="sang" updated="2018-09-13 04:59:51.0"> <body><! CDATA Thank you! This helps a lot. For some reason, my pi tells me wget not found, although I could use it when I test it manually. But I modified the code a little bit and managed to get couchdb successfully built.  The following is the code that I used (also added after && ./configure --disable-docs \ ):  && chmod +w bin/rebar \ && mv bin/rebar bin/rebar-orig \ && cd bin \ && curl -fSL  https://github.com/rebar/rebar/wiki/rebar  --output rebar \ && chmod +x rebar \ && cd .. \  ></body> </Action>
<Action id="50420" issue="33586" author="sashapesic" type="comment" created="2018-09-13 15:09:55.0" updateauthor="sashapesic" updated="2018-09-13 15:09:55.0"> <body><! CDATA  ~sang ,  Yes. If you take a look at the Dockerfile you will see that the wget is installed somewhere above - but then also purged. So when you try to use wget here, the container cannot find it - thus, you just have to install it again, and purge if you want after the command completes.   ></body> </Action>
