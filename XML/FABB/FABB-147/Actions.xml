<Action id="68556" issue="44650" author="JIRAUSER19955" type="comment" created="2020-03-25 05:58:53.0" updateauthor="JIRAUSER19955" updated="2020-03-25 05:58:53.0"> <body><! CDATA In this same network configuration, I receive another error when I try to update ANCHOR PEER.  Problems after peer channel update: PANI 044 Cannot commit block to the ledger due to config currently at sequence 0, cannot validate config at sequence 2 Impossible instantiate chaincode due to PANIC ERROR on peer: unexpected Previous block hash  https://lists.hyperledger.org/g/fabric/topic/hyperledger_fabric_problems/71893667?p=,,,50,0,0,0::recentpostdate%2Fsticky,,,50,2,0,71893667      ></body> </Action>
<Action id="68633" issue="44650" author="denyeart" type="comment" created="2020-03-27 12:12:42.0" updateauthor="denyeart" updated="2020-03-27 12:12:42.0"> <body><! CDATA This error is evidence of an inconsistency in the environment, not a bug. For example see  https://stackoverflow.com/questions/52562232/hyperledger-fabric-on-aws-peers-get-crash-after-anchor-peer-update  Please clear out the environment to ensure there are no artifacts from prior trials.  ></body> </Action>
<Action id="68637" issue="44650" author="JIRAUSER19955" type="comment" body="I opened a request at  https://stackoverflow.com/questions/60890884/hyperledger-fabric-how-to-clear-out-the-dev-environment-after-each-blockchain  to detail the problems with this situation. If somebody may help, I appreciate." created="2020-03-27 17:52:48.0" updateauthor="JIRAUSER19955" updated="2020-03-27 17:52:48.0"/>
<Action id="69046" issue="44650" author="JIRAUSER19955" type="comment" created="2020-04-26 01:41:56.0" updateauthor="JIRAUSER19955" updated="2020-04-26 01:41:56.0"> <body><! CDATA Hello!  I was using the genesis block from the system fabric network, loaded on the Ordener (from `orderer.yaml` or `docker-compose.yaml`), to join the channel, and that was wrong.  The source of my error was that I was using the system genesis block instead of using the genesis block generated in the `peer channel create` command.     I understood that the `peer channel create` command uses a transaction block model (.tx) as input, and as an output it generates a genesis block (.block) that must be used as input in the `peer channel join` command.     The correct sequence is:  Step 1) `$> peer channel create -o $ORDERERNAME -c $CHANNELNAME -f $CONFIGTXFOLDER/devchanneltrack.tx --outputBlock $CHANNELFOLDER/devchannelgen.block --tls --cafile=$ORDERER_TLSCACERT`  Step 2) `$> peer channel join -o $ORDERERNAME -b $CHANNELFOLDER/devchannelgen.block --tls --cafile=$ORDERER_TLSCACERT`     I made corrections to the scripts, and now I can join the channel. Then I did the installation and instantiation of new chaincodes on the channel, and they worked perfectly.     Thanks,  Magno Cavalcante  .  ></body> </Action>
