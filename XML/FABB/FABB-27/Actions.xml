<Action id="19463" issue="13165" author="mastersingh24" type="comment" body="what version of the fabric are you using?" created="2016-10-25 15:00:50.0" updateauthor="mastersingh24" updated="2016-10-25 15:00:50.0"/>
<Action id="19466" issue="13165" author="wayoon" type="comment" body="it&apos;s version 0.6" created="2016-10-25 15:13:12.0" updateauthor="wayoon" updated="2016-10-25 15:13:12.0"/>
<Action id="19504" issue="13165" author="muralisr" type="comment" created="2016-10-26 02:57:39.0" updateauthor="muralisr" updated="2016-10-26 02:57:39.0"> <body><! CDATA Working on this.  There are two problems with GetRow.  *Problem 1* GetRow call from chaincode spins a goroutine to access the ledger for rows and returns. Chaincode then interacts with the goroutine to get rows.  Before return the GetRow call closes the iterator. If the iterator is closed before the chaincode is done with the iterator, it results in error - which is what happens typically with large rows.  *Problem 2* As long as the chaincode fetches all rows, things will be fine. If the chaincode returns after reading a subset of rows, the goroutine will be blocked on he channell waiting to be drained. However the returned chaincode will close the iterator causing the blocked channel to raise an exception in the chaincode shim. The simplest way to handle this is to ignore the exception.  The ETA for the fix is this Friday, 10/28.  ></body> </Action>
<Action id="19564" issue="13165" author="sachikoy" type="comment" created="2016-10-31 14:18:03.0" updateauthor="sachikoy" updated="2016-10-31 14:18:03.0"> <body><! CDATA Hi Murali,  Sorry that I still not fully understand your proposed fix.  > However the returned chaincode will close the iterator causing the blocked channel to raise an exception in the chaincode shim.  Am I right to understand that if the returned chaincode close the iterator, then the channel is closed before reading all the rows? Would it still mean that the chaincode cannot process all the rows in a table? If my understanding is correct, it is problematic because some use cases require reading through all the rows to process them.   ></body> </Action>
<Action id="19569" issue="13165" author="muralisr" type="comment" created="2016-10-31 15:27:52.0" updateauthor="muralisr" updated="2016-10-31 15:28:21.0"> <body><! CDATA Hi Sachiko, I should have been clearer. Let me rephrase it.  *Problem 2* As long as the chaincode fetches all rows, things will be fine. If the chaincode completes the request after reading only a subset of rows, the goroutine will be blocked on the channel waiting to be drained of the remaining rows. However, completion of the request by the chaincode will cause the iterator to be closed, leading an exception to be raised in the blocked channel. The simplest way to handle this is to ignore the exception.  So to answer the question, the chaincode does not have to do anything different or special. Both Problems mentioned above will be fixed in the fabric.  The fix is in https://gerrit.hyperledger.org/r/#/c/2103/. It will be helpful if you have some time to try it out.  ></body> </Action>
<Action id="19572" issue="13165" author="muralisr" type="comment" body="Hi  ~wayoon , would you have some bandwidth to try out https://gerrit.hyperledger.org/r/#/c/2103/ and add comments as well ?" created="2016-10-31 15:34:54.0" updateauthor="muralisr" updated="2016-10-31 15:34:54.0"/>
<Action id="19645" issue="13165" author="muralisr" type="comment" created="2016-11-04 18:45:40.0" updateauthor="muralisr" updated="2016-11-04 18:45:49.0"> <body><! CDATA Merged in 0.6 under https://gerrit.hyperledger.org/r/#/c/2103/.   Not checked into master as master is not ready for Table yet,  ></body> </Action>
<Action id="19732" issue="13165" author="wayoon" type="comment" body="Hi  ~muralisr , I tested the fix, and I confirm that it&apos;s working fine now. Thanks. " created="2016-11-10 20:48:13.0" updateauthor="wayoon" updated="2016-11-10 20:48:13.0"/>
<Action id="19733" issue="13165" author="muralisr" type="comment" body="Hi  ~wayoon , thanks for confirming the fix." created="2016-11-10 20:52:11.0" updateauthor="muralisr" updated="2016-11-10 20:52:11.0"/>
