<Action id="55329" issue="36457" author="mastersingh24" type="comment" created="2019-01-05 14:40:05.0" updateauthor="mastersingh24" updated="2019-01-05 14:40:05.0"> <body><! CDATA  ~david_dornseifer  Can you provide a few more details?  1) Host operating system 2) Did you create the host volume prior to starting the container or are you letting Docker create the volume for you?  I actually created a directory on my host prior to actually starting the container and mounting the volume and had no issues on both Linux and macOS  ></body> </Action>
<Action id="55360" issue="36457" author="david_dornseifer" type="comment" created="2019-01-07 10:13:49.0" updateauthor="david_dornseifer" updated="2019-01-07 10:13:49.0"> <body><! CDATA Hi Gari,   1) Amazon AMI with docker running as root.   2) No, usually I just mount the volume and docker / CouchDB takes care of creating the folders usually with `root:root` permissions.   If I create the `couchdb` folder and add `o+w` permissions (chown -R o+w) CouchDB can use the folder and creates all artefacts in there with `5984:5984` (external view). Internally, inside the docker container the files are owned by `couchdb:couchdb`.  ></body> </Action>
<Action id="56917" issue="36457" author="guolidong" type="comment" created="2019-02-12 12:18:07.0" updateauthor="guolidong" updated="2019-02-12 12:18:07.0"> <body><! CDATA same issue  1) ubuntu has problem, macOS is ok  2)yaml:  couchdb0: container_name: couchdb0 image: fabric-couchdb:amd64-0.4.13 environment: - COUCHDB_USER=admin - COUCHDB_PASSWORD=asdf # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service, # for example map it to utilize Fauxton User Interface in dev environments. ports: - "7184:5984" volumes: - ~/couchdb0/opt/couchdb/data:/opt/couchdb/data     ></body> </Action>
<Action id="57862" issue="36457" author="eujungkim" type="comment" created="2019-03-05 09:57:28.0" updateauthor="eujungkim" updated="2019-03-05 09:58:55.0"> <body><! CDATA same issue  1) azure aks  2) I used a persistent volume mount claim with storageClassName "managed-premium"  `- image: hyperledger/fabric-couchdb:amd64-0.4.14   name: peer0-org1-couchdb   ports:   - containerPort: 5984   env:   - name: COUCHDB_USER     value: admin   - name: COUCHDB_PASSWORD     value: password   volumeMounts:   - mountPath: /opt/couchdb/data     name: peer0-org1-couchdb`  about persistent volume claim  `kind: PersistentVolumeClaim metadata:   name: peer0-org1-couchdb spec:   accessModes:   - ReadWriteOnce   storageClassName: managed-premium `  ></body> </Action>
<Action id="58092" issue="36457" author="denyeart" type="comment" created="2019-03-12 15:47:10.0" updateauthor="denyeart" updated="2019-03-12 15:47:10.0"> <body><! CDATA    I believe this is a permission issue in some environments that will get resolved by moving to the official CouchDB docker docker-entrypoint.sh, which is FABB-115.  Could I ask somebody that is hitting this issue to try the official docker image and see if it resolves the container start issue in your environment? {code:java} docker pull couchdb:2.2 {code} If that works, then we could proceed with FABB-115.   ~rhegde   ~eujungkim   ~guolidong   ~david_dornseifer   ></body> </Action>
<Action id="58131" issue="36457" author="eujungkim" type="comment" created="2019-03-14 08:25:14.0" updateauthor="eujungkim" updated="2019-03-14 08:25:14.0"> <body><! CDATA  ~denyeart  I tried the official docker image that you recommended and the container start issue was resolved. My environments are like below. - azure aks - image : hyperledger/fabric-peer:1.4.0 - image: couchdb:2.2 - storage class name in persistent volume claim : managed-premium (azure disk)  I hope my work are helpful to you.   ></body> </Action>
