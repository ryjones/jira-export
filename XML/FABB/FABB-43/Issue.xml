<Issue id="17640" key="FABB-43" number="43" project="10608" reporter="lehors" assignee="lehors" creator="lehors" type="10004" summary="Doc of e2e_cli shouldn&apos;t imply it works on Windows 7, it doesn&apos;t" environment="Windows 7, Docker Toolbox" priority="3" resolution="10000" status="6" created="2017-06-08 13:26:43.0" updated="2018-07-18 14:53:53.0" resolutiondate="2017-06-09 12:25:56.0" votes="0" watches="2" workflowId="32111" security="10001"> <description><! CDATA The e2e_cli documentation currently implies that one can follow these instructions on Windows running Docker Toolbox. However, experience shows that this doesn't actually work.  Docker Toolbox on Windows 7 leverages the MinGW environement that comes with Windows Git. Unfortunately this environment doesn't include the make command.  Various versions of make can be found and installed. One of them, which seems popular, is here:  https://sourceforge.net/projects/ezwinports/files/   Unfortunately with this version of make the abspath command will generate a Windows filepath which docker can't grok:       {code:java} $ make peer-docker Building build/docker/bin/peer docker run -i --rm --user=197628 -e 'NO_PROXY=192.168.99.101' -v C:/Users/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric:/opt/gopath/src/github.com/hyperledger/fabric -w /opt/gopath/src/github.com/hyperledger/fabric \ -v C:/Users/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric/build/docker/bin:/opt/gopath/bin \ -v C:/Users/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric/build/docker/peer/pkg:/opt/gopath/pkg \ hyperledger/fabric-baseimage:x86_64-0.3.1 \ go install -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=1.0.0-beta -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.3.1 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -linkmode external -extldflags '-static -lpthread'" github.com/hyperledger/fabric/peer C:\Program Files\Docker Toolbox\docker.exe: Error response from daemon: invalid bind mount spec "C:/Users/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric:/opt/gopah/src/github.com/hyperledger/fabric": invalid mode: /opt/gopath/src/github.com/hyperledger/fabric. See 'C:\Program Files\Docker Toolbox\docker.exe run --help'. make: ***  Makefile:195: build/docker/bin/peer  Error 125{code}    Trying to use make from cygwin instead, doesn't help. Cygwin make will generate a path that docker accepts but silently fails to mount leading to the files not being found:    {code:java} $ /c/cygwin/bin/make.exe peer-docker Building build/docker/bin/peer docker run -i --rm --user=197628 -e 'NO_PROXY=192.168.99.101' -v /home/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric:/opt/gopath/src/github.com/hyperledger/fabric -w /opt/gopath/src/github.com/hyperledger/fabric \ -v /home/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric/build/docker/bin:/opt/gopath/bin \ -v /home/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric/build/docker/peer/pkg:/opt/gopath/pkg \ hyperledger/fabric-baseimage:x86_64-0.3.1 \ go install -ldflags "-X github.com/hyperledger/fabric/common/metadata.Version=1.0.0-beta -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.3.1 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -linkmode external -extldflags '-static -lpthread'" github.com/hyperledger/fabric/peer can't lo/opt/go/src/github.com/hyperledger/fabric/peer (from $GOROOT)t find package "git/opt/gopath/src/github.com/hyperledger/fabric/peer (from $GOPATH) make: ***  Makefile:195: build/docker/bin/peer  Error 1 {code} The /home directory doesn't actually exist in Git MinGW but even once added with a mount the result is the same. Even though the files are where it is said:       {code:java} $ ls /home/lehors/Documents/Projects/Go/src/github.com/hyperledger/fabric CHANGELOG.md common images sampleconfig CONTRIBUTING.md core scripts LICENSE devenv mkdocs.yml settings.gradle Makefile docker-env.mk msp test README.md docs orderer unit-test bccsp events peer vendor bddtests examples proposals build gossip protos gotools release {code} So, there may still be a way to make it work but it's definitely not straight forward and the doc should make that clear.  ></description> </Issue>
