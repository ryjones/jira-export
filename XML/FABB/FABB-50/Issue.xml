<Issue id="15533" key="FABB-50" number="50" project="10608" reporter="jjjjibm" assignee="mastersingh24" creator="jjjjibm" type="10004" summary=" fabric  Makefile apparently makes coucbdb, but the prologue doesn&apos;t say so" priority="3" resolution="10000" status="6" created="2017-03-31 14:53:44.0" updated="2018-07-18 14:53:55.0" resolutiondate="2017-04-02 11:40:46.0" votes="0" watches="2" workflowId="32118"> <environment><! CDATA fabric: commit 7da5f5da97456e7eb0b33e0a2271c3ca979e9846 Running Ubuntu 14 on a vlaunch VM  ></environment> <description><! CDATA A RocketChat comment in the fabric-sdk-node forum indicates Makefile for directory $GOPATH/src/gitub.com/hyperledger/fabric  now includes a coucbdb.rule.  Here is the comment: _also the change to fabric-couchdb was intentional (so it'll work on s390 architecture) but i neglected to update the README: {color:#d04437}you need to run `make couchdb` in fabric {color}in addition to `make docker` _ And here is what happens when you try it:  {color:#59afe1}ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/*fabric*$ make couchdb *make: Nothing to be done for `couchdb'. *ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric$ {color}  However, when I inspected the Makefile prologue for more information about making couchcb, it had nothing.  Here is the fabric/Makefile prologue:   #_ ------------------------------------------------------------- # This makefile defines the following targets # #   - all (default) - builds all targets and runs all tests/checks #   - checks - runs all tests/checks #   - peer - builds a native fabric peer binary #   - orderer - builds a native fabric orderer binary #   - unit-test - runs the go-test based unit tests #   - test-cmd - generates a "go test" string suitable for manual customization #   - behave - runs the behave test #   - behave-deps - ensures pre-requisites are available for running behave manually #   - gotools - installs go tools like golint #   - linter - runs all code checks #   - native - ensures all native binaries are available #   - docker -clean  - ensures all docker images are available /cleaned  #   - peer-docker -clean  - ensures the peer container is available /cleaned  #   - orderer-docker -clean  - ensures the orderer container is available /cleaned  #   - protos - generate all protobuf artifacts based on .proto files #   - clean - cleans the build area #   - dist-clean - superset of 'clean' that also removes persistent state #   - unit-test-clean - cleans unit test state (particularly from docker) #  PROJECT_NAME   = hyperledger/fabric BASE_VERSION   = 1.0.0 IS_RELEASE     = false  _  ></description> </Issue>
