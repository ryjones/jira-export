<Issue id="17068" key="FABC-143" number="143" project="10607" reporter="rennman" creator="rennman" type="10002" summary="fabric-ca need input validation CBCPKCS7Encrypt() in lib/tcert/util.go" priority="3" resolution="10001" status="6" created="2017-05-24 19:41:18.0" updated="2019-07-27 14:59:51.0" resolutiondate="2018-10-01 14:07:16.0" votes="0" watches="1" workflowId="32323" security="10001"> <description><! CDATA We do not validate the length of the byte slice passed into CBCEncrypt() PKCS7Padding() CBCDecrypt() PKCS7UnPadding()   I was able to create a panic in CBCPKCS7Encrypt()  by passing a huge array: TestCBCEncrypt() {code:java}    //_, err = CBCPKCS7Encrypt(make(  byte, 16), make(  byte, math.MaxInt64))     //t.Logf("CBCPKCS7Encrypt error:  %v\n", err)     //if err == nil {     //    t.Fatalf("CBCPKCS7Encrypt should have failed with invalid index length\n")     //}{code}   I was able to create a panic in CBCPKCS7Dencrypt merely by passing in a slice with length 16: TestCBCPKCS7Decrypt() {code:java} //_, err = CBCPKCS7Decrypt(make(  byte, 16), make(  byte, 16)) //t.Logf("CBCPKCS7Decrypt error: %v", err) //if err == nil { //t.Fatalf("CBCPKCS7Decrypt should have failed: invalid padding\n") //}{code}  These tests should be re-enabled in lib/tcert/util_test.go when the issue is addressed:  ></description> </Issue>
