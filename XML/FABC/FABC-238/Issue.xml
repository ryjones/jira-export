<Issue id="15367" key="FABC-238" number="238" project="10607" reporter="rennman" assignee="skarim" creator="rennman" type="10004" summary="fabric-ca-client should check TLS cert expiration" priority="3" resolution="10000" status="6" created="2017-03-15 18:46:35.0" updated="2018-07-18 22:03:59.0" resolutiondate="2017-04-13 14:59:48.0" votes="0" watches="1" workflowId="32418"> <description><! CDATA The fabric-ca-client (via the golang SSL layer) dis-allows the use of an unsupported certificate. These include - a cert with an inappropriate KeyUsage extension - a cert with an unsupported key type (e.g. DSA)  However, the underlying secure socket code doesn't seem to care about certificate expiration.  To be consistent, we should check the certificates expiration and reject it.  Even better, it would be nice if any and all of these errors get logged. As it stands, e.g. for an unsupported extension, we quietly drop the cert and send the request anyway. Depending on the server's configuration this can fail on the server side, with  'client didn't provide a certificate' It seems odd to me that the the client may be blissfully unaware, thinking that he did send a cert, until the server says he didn't... all because the bad cert is ignored without warning on the client side.  ></description> </Issue>
