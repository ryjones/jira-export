<Issue id="13871" key="FABC-527" number="527" project="10607" reporter="smithbk" assignee="smithbk" creator="smithbk" type="10001" summary="COP library API simplification" priority="3" resolution="10000" status="6" created="2016-12-21 13:26:29.0" updated="2018-07-20 19:16:22.0" resolutiondate="2017-02-04 15:01:26.0" votes="0" watches="1" workflowId="32709"> <description><! CDATA The APIs in fabric-cop/idp were originally designed in order to share code with fabric and to include a design which could support identity mixer.   Since this is no longer the case, these APIs should be simplified to remove so many levels of abstraction.  In particular, the 3 objects that are needed in lib are Client, Identity, and Cert (which could be used for both an ECert and a TCert).  There is no need for the TemporalSigner, Signer, and Verifier objects and many of the unimplemented methods can be deleted.  More specifically, here is the TODO list: {code} a) Delete idp package; all API structs go into api package. - api/net.go contains structs defining everything that goes over the network between the client and server. - api/client.go contains structs defining I/O to the client library objects  b) Simplify object hierarchy in lib to be only Client, Identity, & Cert; signer, temporalSigner, and verifier are consumed in Cert. Identity object has: GetECert() (Cert, error) GetTCerts(req *GetTCertBatchRequest) (*GetTCertBatchResponse, error) {code}  ></description> </Issue>
