<Issue id="29160" key="FABC-107" number="107" project="10607" reporter="aambati" creator="aambati" type="10002" summary="Add SubCommand interface" priority="3" resolution="10001" status="6" created="2018-04-04 22:21:54.0" updated="2019-09-22 08:57:40.0" resolutiondate="2019-09-22 08:57:40.0" votes="0" watches="1" workflowId="32287"> <description><! CDATA Add SubCommand interface with following functions:  type SubCommand interface \{     ShouldCreateDefaultConfig() bool     RequiresEnrollment() bool     RequiresUser() bool  }     Let all sub commands like enroll, revoke implement these functions based on the logic in the  shouldCreateDefaultConfig, requiresEnrollment and requiresUser functions in the ClientCmd   Change ConfigInit function of ClientCmd to take SubCommand as a parameter: // Command interface initializes client command and loads an identity type Command interface \{    // Initializes the client command configuration    *ConfigInit(subCmd SubCommand) error*    // Returns the name of the configuration file    GetCfgFileName() string    // Loads the credentials of an identity that are in the msp directory specified to this command    LoadMyIdentity() (*lib.Identity, error)    // Returns lib.ClientCfg instance associated with this comamnd    GetClientCfg() *lib.ClientConfig    // Returns viper instance associated with this comamnd    GetViper() *viper.Viper }   In the ConfigInit implementation, use these SubCommand functions instead of corresponding private functions of the ClientCmd.   Finally, remove the private functions from ClientCmd    ></description> </Issue>
