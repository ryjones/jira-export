<Issue id="16816" key="FABC-78" number="78" project="10607" reporter="rennman" assignee="rennman" creator="rennman" type="10002" summary="fabric-ca create mechanism for generating TLS certificates that don&apos;t expire" priority="3" resolution="10000" status="6" created="2017-05-17 15:38:40.0" updated="2019-07-27 14:59:51.0" resolutiondate="2017-11-30 17:28:54.0" votes="0" watches="4" workflowId="32258"> <description><! CDATA The testdata directory is populated with TLS certificates for various servers. For convenience the server/client certificates/keys are generally shared for testing purposes.  The are some problems with this approach: - some of which have pending expiration (months, nor years) - the keys are ec keys. Some servers (notably mysql) do not support ecdsa. Consequently, we need rsa, or both rsa and ecdsa.-- - a more real-world scenario would support mutiple roots, not just one - a more real-world scenario would also support a more complex CA hierarchy, including a longer pathlength to root - we should be testing with mutliple key lengths and signing algorithms, not just one - we should be error-testing with unsupported certificates (the current fvt test already do some degree of this - lastly, introducing some measure of randomness for test purposes is always preferred  Hence it makes sense to develop a dynamic mechanism for generating TLS certificates that will be made available to all infrastructure components in the fabric-ca-fvt image.  Likely this will be accomplished by creating a script that will run as part of the Dockerfile that builds the image. There is an existing pki tool that provides the ability to create complex multi-level CA hierarchies with a full complement of X.509 v3 extensions.     ></description> </Issue>
