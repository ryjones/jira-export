<Action id="58642" issue="38813" author="nyet" type="comment" created="2019-03-27 21:11:16.0" updateauthor="nyet" updated="2019-03-27 21:23:39.0"> <body><! CDATA  https://chat.hyperledger.org/channel/fabric-ca?msg=PZNf6vkyDXtRCvHHY   According to SDChoi  {color:#444444}When I add following line in {color}{color:#444444}{color}{color:#444444}{{fabric-ca/lib/serverenroll.go:117}}{color}{color:#444444}{color}{color:#444444} , it doesn't have 5-min limitation :{color} {color:#444444}{color}{color:#444444}{{req.NotBefore = time.Now().UTC()}}{color}  I have not tried this fix yet.  ></body> </Action>
<Action id="58645" issue="38813" author="nyet" type="comment" body="Also may affect enrolled TLS certificates, have not tried yet." created="2019-03-27 21:16:53.0" updateauthor="nyet" updated="2019-03-27 21:16:53.0"/>
<Action id="58653" issue="38813" author="nyet" type="comment" body="&quot;{{faketime -f &quot;-6m&quot; openssl ...}}&quot; works" created="2019-03-28 05:07:02.0" updateauthor="nyet" updated="2019-03-28 05:07:02.0"/>
<Action id="58718" issue="38813" author="mastersingh24" type="comment" created="2019-03-29 09:20:02.0" updateauthor="mastersingh24" updated="2019-03-29 09:21:05.0"> <body><! CDATA It is typically a best practice to configure some type of backdating in order to deal with clock skew between the host running the fabric-ca-server and the hosts used by client to enroll.  The default skew is 5 minutes and if fabric-ca-server generates its own root cert, it will backdate NotBefore 5 minutes from the current time.  Then when it signs/issues certificates, it will also backdate them 5 minutes as well.  You can, however, control the backdate duration for each signing profile by adding *backdate* to the signing profiles in the server config file: {code:java} signing:     default:       usage:         - digital signature       expiry: 8760h       backdate: 1s     profiles:       ca:          backdate: 1s          usage:            - cert sign            - crl sign          expiry: 43800h          caconstraint:            isca: true            maxpathlen: 0       tls:          backdate: 1s          usage:             - signing             - key encipherment             - server auth             - client auth             - key agreement          expiry: 8760h {code}  With the above config, fabric-ca-server will only backdate certs it signs/issues 1 second.  So I don't think this is a functionality bug, but we rather a deficiency in the documentation.       ></body> </Action>
<Action id="58733" issue="38813" author="nyet" type="comment" created="2019-03-29 15:20:19.0" updateauthor="nyet" updated="2019-03-29 15:20:19.0"> <body><! CDATA Thanks, I will try this. However, I still am not sure why openssl doesn't notice the signed cert's notBefore is earlier than the signer's notBefore.  Is that really not legal? I would expect the signed cert should be valid as long as it used after the largest notBefore.  ></body> </Action>
<Action id="58735" issue="38813" author="nyet" type="comment" created="2019-03-29 16:32:27.0" updateauthor="nyet" updated="2019-03-29 16:35:36.0"> <body><! CDATA In the meantime, however, I will just use {{faketime}} to backdate the initial self-signed {{ca}}'s (to emulate {{ca-server}}'s behavior), since I see why backdating is good practice in general.  I also agree this is not a {{ca-server}} bug, but I think the peer's (and possibly the orderer? Not sure I saw it on the orderer) cert verification might be a bit too strict.  Should I open a peer/orderer bug?  Or is this expected behavior?  ></body> </Action>
<Action id="58749" issue="38813" author="mastersingh24" type="comment" created="2019-03-30 09:05:59.0" updateauthor="mastersingh24" updated="2019-03-30 09:05:59.0"> <body><! CDATA For the peer/orderer it's definitely expected behavior .... I believe it's actually how the Go X509 implementation works. There always seem to be subtle differences in the way various implementations "interpret" and or choose to enforce various parts of specifications.  ></body> </Action>
<Action id="59671" issue="38813" author="caveman7" type="comment" body=" ~mastersingh24  i tried to use *FABRIC_CA_SERVER_SIGNING_DEFAULT_BACKDATE* environment variable but it does not work. at the end, I appended the backdate parameter in the config file" created="2019-05-02 05:32:05.0" updateauthor="caveman7" updated="2019-05-02 06:20:07.0"/>
<Action id="64052" issue="38813" author="jyellick" type="comment" body="Is this still an issue?" created="2019-09-24 15:33:39.0" updateauthor="jyellick" updated="2019-09-24 15:33:39.0"/>
<Action id="64059" issue="38813" author="nyet" type="comment" body="Yes, it is an issue since the only way for me to work around it is using faketime. However, it is &quot;expected behavior&quot; so I am unsure if there is any path towards changing things." created="2019-09-24 15:59:52.0" updateauthor="nyet" updated="2019-09-24 15:59:52.0"/>
<Action id="70827" issue="38813" author="JIRAUSER21017" type="comment" body="Proposed solution as PR is here https://github.com/hyperledger/fabric-ca/pull/203" created="2020-11-27 10:40:13.0" updateauthor="JIRAUSER21017" updated="2020-11-27 10:40:13.0"/>
