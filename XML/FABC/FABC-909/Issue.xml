<Issue id="44979" key="FABC-909" number="909" project="10607" reporter="mirioeggmann" assignee="btl5037" creator="mirioeggmann" type="10004" summary="Fabric CA using Postgres isn’t able to run with a database user that doesn’t have the permission to create databases" priority="2" resolution="10000" status="6" created="2020-04-30 14:43:39.0" updated="2021-03-06 17:04:40.0" resolutiondate="2021-01-11 17:42:44.0" votes="0" watches="2" workflowId="58882" archived="N"> <description><! CDATA In our staging environment at work we have to be able to run the Fabric CA using a pre-created Postgres database outside of our Kubernetes cluster. So the database user used by Fabric CA doesn’t have the permission to create databases on the Postgres server. Because of that the Fabric CA fails to run because there is a line of code that expects an error to be ‘database \"%s\" already exists’ but the database gives back ‘permission denied to create database’.      Now to be able to solve this problem there is a pretty easy but kind of dirty way to just adapt the if statement in the following line of code ( https://github.com/hyperledger/fabric-ca/blob/8d49c278c38624d1dbc01dcc7cd7367461341d7a/lib/server/db/postgres/postgres.go#L155)|https://github.com/hyperledger/fabric-ca/blob/8d49c278c38624d1dbc01dcc7cd7367461341d7a/lib/server/db/postgres/postgres.go#L155 : {code:java} if !strings.Contains(err.Error(), fmt.Sprintf("database \"%s\" already exists", dbName)) {code} To look like this: {code:java} if !strings.Contains(err.Error(), fmt.Sprintf("database \"%s\" already exists", dbName)) && !strings.Contains(err.Error(), fmt.Sprintf("permission denied to create database")){code}    But it would probably be cleaner to add a flag to the 'fabric-ca-server start' command to completely opt-out the 'create database' part.      What do you think about it? Is this a known issue or did we maybe do something wrong?     Cheers, Mirio  ></description> </Issue>
