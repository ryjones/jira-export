<Issue id="19538" key="FABC-257" number="257" project="10607" reporter="rennman" assignee="rennman" creator="rennman" type="10004" summary="Inconsistent treatment of executable paths in fabric-ca go tool scripts" priority="3" resolution="10000" status="6" created="2017-07-27 19:44:07.0" updated="2018-07-18 22:04:03.0" resolutiondate="2017-09-26 17:04:29.0" votes="0" watches="2" workflowId="32437"> <description><! CDATA Two of the go tools script files that run as part of the unit tests do not use the absolute path of the executables consistently, resulting in failure on some systems: {code:java} ./scripts/check_imports Installing goimports ... Checking imports ... ./scripts/check_imports: line 13: goimports: command not found  ./scripts/check_lint Installing golint ... Running lint ... ./scripts/check_lint: line 15: golint: command not found{code} The check for the exec uses the absolute path:   {code:java} if   ! -f $GOPATH/bin/golint  ; then echo "Installing golint ..." go get -u github.com/golang/lint/golint fi{code} but the invocation does not: {code:java} golint $dir/...{code} Consequently, if $GOPATH/bin is not in the users PATH envar, the scripts fail.  Â   This fixes the scripts to user the absolute path in each case.  ></description> </Issue>
