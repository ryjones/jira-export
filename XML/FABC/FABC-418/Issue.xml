<Issue id="28533" key="FABC-418" number="418" project="10607" reporter="rennman" assignee="skarim" creator="rennman" type="10004" summary="fabric-ca key type and size configuration not working properly" priority="3" resolution="10000" status="6" created="2018-03-14 18:52:09.0" updated="2018-08-16 20:12:04.0" resolutiondate="2018-08-16 20:12:04.0" votes="0" watches="2" workflowId="32598"> <description><! CDATA This is a symptom of a more systematic issue, but for the immediate purpose: We document under "Algorithms and key sizes", that "The CSR can be customized" and provide an example: {code:java} csr:   key:     algo: ecdsa     size: 256 {code} However, {{'key'}} is incorrect. It should read {{'keyrequest'}}  Furthermore when initializing or starting server, the environment variables have no effect (regardless of which version I use):     {{FABRIC_CA_SERVER_CSR_KEYREQUEST_ALGO=ecdsa}}     {{FABRIC_CA_SERVER_CSR_KEYREQUEST_SIZE=512}} This still results in fabric-ca server using the default values of {{'ecdsa'}} and {{'256'}}  *However –*  if I actually include the above csr: key block configuration in my server's yaml file, we *do* honor the environment variables (which operationally is not very useful).  So the general issue: we do not honor environment variables for configuration elements which are not explicitly written to the config file. Since the default elements in {{cmd/fabric-ca-server/config.go}} are somewhat arbitrary, it turns out that we *cannot easily customize certain config options*. Key type and size are only one example – but it is a particularly thorny one for automation – once the server is initialized and the key is created, we cannot change it without: * artificially deleting the key and cert * adding the relevant config to the yaml file (with arbitrary, or even no values) * optionally setting the ENV variables * restarting the server  One solution would be to add all supported configuration elements to the generated server config file in {{cmd/fabric-ca-server/config.go}}  As an additional benefit, the user would have a ready, explicit, visual reference which documents our selected default values without resorting to <**gasp**> reading the documentation.  ></description> </Issue>
