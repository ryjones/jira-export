<Issue id="13169" key="FABC-17" number="17" project="10607" reporter="smithbk" assignee="vpaprots" creator="smithbk" type="10001" summary="I want the fabric-ca-server to support PKCS11 for HSM" priority="2" resolution="10000" status="6" created="2016-10-25 15:39:51.0" updated="2018-07-20 19:17:29.0" resolutiondate="2017-04-28 13:50:46.0" votes="0" watches="2" workflowId="32197"> <description><! CDATA See https://github.com/letsencrypt/pkcs11key, which implements the crypto/Signer interface using PCKS11 interfaces. How to plug these into CFSSL? See the following in CFSSL's main README.md: You now have all the information you need to use your PKCS#11 token with CFSSL. CFSSL supports PKCS#11 for certificate signing and OCSP signing. To create a Signer (for certificate signing), import `signer/universal` and call NewSigner with a Root object containing the module, pin, token label and private label from above, plus a path to your certificate. The structure of the Root object is documented in universal.go.  Alternately, you can construct a pkcs11key.Key or pkcs11key.Pool yourself, and pass it to ocsp.NewSigner (for OCSP) or local.NewSigner (for certificate signing). This will be necessary, for example, if you are using a single-session token like the Yubikey and need both OCSP signing and certificate signing at the same time.   ></description> </Issue>
