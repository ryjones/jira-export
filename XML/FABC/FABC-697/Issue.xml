<Issue id="12662" key="FABC-697" number="697" project="10607" reporter="smithbk" assignee="smithbk" creator="smithbk" type="10000" summary="Provide a fabric certificate authority" priority="3" resolution="10000" status="6" created="2016-09-12 19:24:37.0" updated="2018-07-20 19:12:57.0" resolutiondate="2017-05-10 13:48:38.0" votes="0" watches="6" workflowId="34663"> <description><! CDATA The fabric-ca is a Certificate Authority for Hyperledger Fabric.  It provides features such as:   1) registration of identities, or connects to LDAP as the user registry;   2) issuance of Enrollment Certificates (ECerts);   3) issuance of Transaction Certificates (TCerts), providing both anonymity and unlinkability when transacting on a Hyperledger Fabric blockchain;   4) certificate renewal and revocation.  Fabric CA consists of both a server and a client component  The primary design goals of fabric-ca are as follows. 1) Make it as pluggable and consumable as possible.  It should clear how to completely implement your own fabric-ca or to replace some portion of the default implementation.   For example, you may use your own CA for generating ECerts but still use TCerts for unlinkability and attributes for access control.  In other words, you have the choice of using all, some, or none of the capabilities that fabric-ca offers. 2) Do not reinvent the wheel.  For example, the default implementation of fabric-ca will use CFSSL (see https://github.com/cloudflare/cfssl) to generate ECerts, which also supports PKCS11 and is HA via a DB. The code to generate TCerts will be repackaged but will remain mostly the same. 3) Support standard protocols where possible.  For example, the ACME protocol may be used to issue server-based certificates.  In order to accomplish these goals, fabric-ca is being built as a reusable go library.  The fabric-ca executable is a thin wrapper around this go library.  Design document https://docs.google.com/document/d/1TRYHcaT8yMn8MZlDtreqzkDcXx0WI50AV2JpAcvAM5w/edit  ></description> </Issue>
