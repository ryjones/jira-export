<Issue id="27651" key="FABC-240" number="240" project="10607" reporter="rennman" assignee="rennman" creator="rennman" type="10004" summary="fabric-ca intermediate CA 1.0 -&gt; 1.1 fails to migrate DB" priority="4" resolution="10001" status="6" created="2018-02-12 19:54:13.0" updated="2019-07-27 14:42:43.0" resolutiondate="2019-07-27 14:39:46.0" votes="0" watches="1" workflowId="32420"> <description><! CDATA I have v1.0 clustering setup like the following: {code:java} haproxy:7054   haproxy:8054 /            \   /         \ /              \ /           \ /               /\             \ /               /  \             \ RootCA:1<===InterCA:1 RootCA:2<===InterCA:2 |    |      |      |  |    |      |     | ca1   ca2    ca1   ca2 ca1  ca2    ca1   ca2 \     \      \      \ /    /      /      / \     \      \     /\    /      /      / \     \      \   /  \  /      /      / \     \      \ /    \/      /      / \     \      \     / \    /      / \     \    / \   /   \  /      / \     \  /   \ /     \/      / \     \/     \      /\     / \___/ \___ / \___ /  \___/ |Rt | |Rt |  |Int|   |Int| |DB | |DB |  |DB |   |DB | | 1 | | 2 |  | 1 |   | 2 | |___| |___|  |___|   |___| {code} I start the servers and register/enroll/revoke a number of users. I then re-start one of the intermediate CAs as a 1.1 server: {code:java} 16544 pts/2 Sl 0:00 /usr/local/bin/fabric-ca-server start --address 0.0.0.0 --port 18055 --config /tmp/cluster/int/runFabricCaFvt.yaml --cafiles /tmp/cluster/int/ca/ca1/fabric-ca-config.yaml,/tmp/cluster/int/ca/ca2/fabric-ca-config.yaml  kill Â 16544  /usr/local/bin/fabric-ca-server start --address 0.0.0.0 --port 18055 --config /tmp/cluster/int/runFabricCaFvt.yaml --cafiles /tmp/cluster/int/ca/ca1/fabric-ca-config.yaml,/tmp/cluster/int/ca/ca2/fabric-ca-config.yaml  {code} Though the log hints at an attempt at migration: {code:java} 2018/02/12 19:37:15  DEBUG  Update MySQL schema if using outdated schema 2018/02/12 19:37:16  DEBUG  Initializing identity registry 2018/02/12 19:37:16  DEBUG  Initialized DB identity registry 2018/02/12 19:37:16  DEBUG  DB: Get properties  identity.level affiliation.level certificate.level  2018/02/12 19:37:16  DEBUG  Checking database levels 'map affiliation.level:0 certificate.level:0 identity.level:0 ' against server levels '&{Identity:1 Affiliation:1 Certificate:1}' ... 2018/02/12 19:37:16  DEBUG  Migrating user 'admin' to level 1 {code} The DB is unchanged: {code:java} Users id|type|affiliation|attributes|state|max_enrollments| admin|client| {"name":"hf.Registrar.DelegateRoles","value":"client,user,validator,auditor"},{"name":"hf.Revoker","value":"1"},{"name":"hf.GenCRL","value":"1"},{"name":"hf.Registrar.Roles","value":"client,user,peer,validator,auditor,ca"} |1|-1||  Affiliations: name|prekey|| bank_a.department1|bank_a||  {code} If I restart one of the RootCA servers as 1.1, then the DB is actually migrated: {code:java} 2018/02/12 19:39:22  DEBUG  DB: Get properties  identity.level affiliation.level certificate.level  2018/02/12 19:39:22  DEBUG  Checking database levels 'map affiliation.level:0 certificate.level:0 identity.level:0 ' against server levels '&{Identity:1 Affiliation:1 Certificate:1}' ... 2018/02/12 19:39:22  DEBUG  Migrating user 'admin' to level 1 2018/02/12 19:39:22  DEBUG  Modify Attributes:  {Name:hf.Registrar.Attributes Value:* ECert:false}  2018/02/12 19:39:22  DEBUG  Attribute request: {Name:hf.Registrar.Attributes Value:* ECert:false} 2018/02/12 19:39:22  DEBUG  Adding '{Name:hf.Registrar.Attributes Value:* ECert:false}' as new attribute   id|type|affiliation|attributes|state|max_enrollments|level admin|client| {"name":"hf.Revoker","value":"1"},{"name":"hf.GenCRL","value":"1"},{"name":"hf.Registrar.Roles","value":"client,user,peer,validator,auditor,ca"},{"name":"hf.Registrar.DelegateRoles","value":"client,user,validator,auditor"},{"name":"hf.Registrar.Attributes","value":"*"} |1|-1|1|  Affiliations: id|name|prekey|level 2|bank_a.department1|bank_a|0 {code}  ></description> </Issue>
