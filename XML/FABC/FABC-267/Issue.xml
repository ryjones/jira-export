<Issue id="20198" key="FABC-267" number="267" project="10607" reporter="smithbk" assignee="skarim" creator="smithbk" type="10004" summary="fabric CA DB initialization should be more resilient" priority="3" resolution="10000" status="6" created="2017-08-15 16:35:36.0" updated="2018-07-18 22:04:05.0" resolutiondate="2017-09-19 19:48:50.0" votes="0" watches="2" workflowId="32447"> <description><! CDATA Handle the following scenarios: 1) DB exists but tables have not been created 2) DB exists and table exists but table is empty 3) DB exists, table exists, is non-empty but identity is not found, then add it  Basically, it should work as follows: For each CA in the server, try to initialize the DB at server startup and when each request is received thereafter, until it successfully initializes.   If it fails during startup and again when a request is received, the DB initialization error is logged and returned to the client.  Each attempt to initialize does the following: 1) Try to create the DB.  If it fails for any other reason than it already exists, fail initialization and return the error. 2) Try to create each table (certificate, user, affiliation).  If any fails for any other reason than it already exists, fail initialization and return the error. 3) For each affiliation in the affiliations section, try to insert the affiliation into the affiliations table.  If it fails for any other reason than it already exists, fail initialization and return the error. 4) If LDAP is not enabled, for each identity in the register.identities section of the config file, try to insert the identity into the users table. If it fails for any other reason than it already exists, fail initialization and return the error.  If it makes it thru all of these steps without error, then initialization was successful and we don't try to initialize the DB again, until the server is restarted.  NOTE: This means that you can register new identities or affiliations by adding them to the config file and restarting the server.  If you are running in a cluster, you only need to do this for one cluster member.  Removing an identity from the config file does NOT remove it from the database.  ></description> </Issue>
