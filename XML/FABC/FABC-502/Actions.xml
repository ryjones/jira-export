<Action id="45161" issue="30662" author="aambati" type="comment" body="https://gerrit.hyperledger.org/r/c/22377/" created="2018-05-26 01:44:49.0" updateauthor="aambati" updated="2018-05-26 01:44:49.0"/>
<Action id="45165" issue="30662" author="smithbk" type="comment" created="2018-05-26 06:15:55.0" updateauthor="smithbk" updated="2018-05-26 06:15:55.0"> <body><! CDATA I don't think this should go into v1.2.  We need to have a clear design for who will update CRI info in MSPs (local and channel), how, and when.  I don't think a simple CLI command will suffice since it is unpredictable when a peer admin would need to update, would be too manual, and would only work for local MSPs.  We will need something more automatable and takes into account channel MSPs and so must drive it as a transaction like for CRL.  Since we have deferred revocation for v1.2, we should disable verification of CRI info for v1.2.  ></body> </Action>
<Action id="48507" issue="30662" author="smithbk" type="comment" created="2018-08-07 16:41:31.0" updateauthor="smithbk" updated="2018-08-07 16:56:48.0"> <body><! CDATA I just spoke with Maria.  She is going to update the google doc to include this design, but here are the things we've discussed regarding the CRI flow.  There are two events which can cause fabric-ca-server to generate a new CRI: a) an idemix credential is revoked (either by user name or by revocation handle). b) fabric-ca-server needs to generate an idemix credential but it has run out of revocation handles.  It uses one revocation handle each time it issues an idemix credential (correct?).  There are two pieces:  1) Updating CRI in fabric from fabric-ca-server  When fabric-ca-server generates a new CRI, it should push the new CRI into fabric to update the appropriate idemix MSPs.  It probably makes sense for fabric-ca-server to have a configurable minimum-time-between-cri-updates to prevent updates from being too frequent when a batch of credentials are revoked.  2) "Notifying" the end users that they need to get a new CRI from fabric-ca-server  The thought is to have a standard error returned by fabric which the java SDK recognizes when the CRI it uses is out-of-date.  This error causes the java SDK to get the latest CRI from fabric-ca-server and then reissue the transaction (or proposal?).  Fabric could also generate an event each time the CRI is updated, but I think the "standard error" approach is still needed; otherwise, there would be a timing window in which the SDK is notified just after submitting the transaction.  Anyway, Maria will update this jira item with the link to the google doc once complete.    ></body> </Action>
<Action id="49361" issue="30662" author="denyeart" type="comment" body=" ~skarim   ~smithbk  Per the CR comment, I believe this fits better under the Revocation epic for v1.4... I&apos;ve gone ahead and moved it." created="2018-08-24 22:02:14.0" updateauthor="denyeart" updated="2018-08-24 22:02:14.0"/>
<Action id="55267" issue="30662" author="skarim" type="comment" body=" ~JonathanLevi  I assigned this to you, its looks like you will be working on the remaining Idemix work." created="2019-01-03 20:31:00.0" updateauthor="skarim" updated="2019-01-03 20:31:00.0"/>
