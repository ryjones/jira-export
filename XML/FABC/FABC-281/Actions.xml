<Action id="23385" issue="15687" author="smithbk" type="comment" created="2017-05-04 17:55:19.0" updateauthor="smithbk" updated="2017-05-04 17:55:19.0"> <body><! CDATA The panic is as follows:  goroutine 80  running : panic(0x4687ae0, 0xc420016100) /usr/local/Cellar/go/1.7.3/libexec/src/runtime/panic.go:500 +0x1a1 net/http.(*Server).Serve(0xc4202ca380, 0x0, 0x0, 0x0, 0x0) /usr/local/Cellar/go/1.7.3/libexec/src/net/http/server.go:2257 +0x62 net/http.Serve(0x0, 0x0, 0x49c0400, 0xc4203c8a20, 0x0, 0x0) /usr/local/Cellar/go/1.7.3/libexec/src/net/http/server.go:2091 +0x99 github.com/hyperledger/fabric-ca/lib.(*Server).serve(0xc420314320, 0x1, 0x1) github.com/hyperledger/fabric-ca/lib/_test/_obj_test/server.go:704 +0x5e created by github.com/hyperledger/fabric-ca/lib.(*Server).listenAndServe github.com/hyperledger/fabric-ca/lib/_test/_obj_test/server.go:698 +0x732 FAIL  github.com/hyperledger/fabric-ca/lib   0.135s error: exit status 1 panic: EOF  ></body> </Action>
<Action id="23387" issue="15687" author="smithbk" type="comment" body="http://gerrit.hyperledger.org/r/8975  FAB-3100  Fix panic in server start" created="2017-05-04 18:01:57.0" updateauthor="smithbk" updated="2017-05-04 18:01:57.0"/>
<Action id="23717" issue="15687" author="smithbk" type="comment" created="2017-05-11 02:27:23.0" updateauthor="smithbk" updated="2017-05-11 02:27:23.0"> <body><! CDATA The problem is that when starting the server in non-blocking mode (which is only done for tests), the tests which start and stop servers very quickly may stop it (and thus make the listener nil) before the go routine runs and passes the listener into http.Serve.  The fix is to add this code snippet to the beginning of the serve function in lib/server.go.      listener := s.listener     if listener == nil \{         // It's already been closed         return nil     }      http.Serve(listener, ...)  This prevents us from passing a nil listener into http.Serve  ></body> </Action>
