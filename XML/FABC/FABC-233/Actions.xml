<Action id="28859" issue="19434" author="mastersingh24" type="comment" body="https://gerrit.hyperledger.org/r/11847" created="2017-07-23 13:25:10.0" updateauthor="mastersingh24" updated="2017-07-23 13:25:10.0"/>
<Action id="29099" issue="19434" author="rennman" type="comment" created="2017-07-27 15:24:16.0" updateauthor="rennman" updated="2017-07-27 17:30:48.0"> <body><! CDATA  Fix mysql internal_DB permissions| https://gerrit.hyperledger.org/r/#/c/11961/     It turns out that the previous fix is incompatible with the mysql TLS setup, so I had to regroup. The previous fix also blows away the database every time the image is run, which is not really ideal for testing various states of the system.  Bottom-line, it turns out to be a permissions problem. More specifically, this problem is only seen on the CI build machines. I don't know if it is some timing bug in mysql, or something weird about the build machine environment, but this problem does *not* exist in a comparable environment, e.g. the mysql 5.7.19 upgrade on a different x86 machine running Ubuntu 16 – in Vlaunch for example. In other words, the 5.7.* initialization routines are unrelated to the problem.  When analyzing the problem in multiple iterations of the server's initialization, I saw each iteration fail on the same operation to a different internal table:   ERROR  Fatal error: Can't open and lock privilege tables: Table storage engine for '%s' doesn't have this option  where %s is 'user', 'db', 'priv', etc.  The error is issued *exactly* twice for each table. Finally after about 14 iterations, the server starts, but issues an error message about a corrupt db and failure to find 'mysql.func', and suggests running mysql_upgrade. After running 'mysql_upgrade', we're back to the original starting point.     I found that the file to which the server writes between each iteration is this file:  /var/lib/mysql/ibdata1  There doesn't appear to be any permissions issues:  -rw-r----- 1 mysql mysql  As a matter of fact, all of the files under /var/lib/mysql are owned by mysql: {code:java} find /var/lib/mysql/ -exec ls -l {} \;|awk '$3!="mysql" || $4!="mysql"'{code} shows 0 files.  However this command fixes everything {code:java} chown -R mysql.mysql /var/lib/mysql{code} Again this *only* happens on the build machine. There is something distinctly different about that environment that I haven't identified. I tried researching the way in which docker handles file permissions, but so far, I haven't come ups with anything.  The one thing I know for sure is that the build machine roughly one order of magnitude slower than any other system I test on. Whereas Vlaunch takes less than 2 minutes to build and image, the build machines took 12 or more when I tested manually  ></body> </Action>
<Action id="29207" issue="19434" author="mastersingh24" type="comment" created="2017-07-30 17:39:05.0" updateauthor="mastersingh24" updated="2017-07-30 17:39:05.0"> <body><! CDATA  https://gerrit.hyperledger.org/r/11847    https://gerrit.hyperledger.org/r/#/c/11961/   ></body> </Action>
