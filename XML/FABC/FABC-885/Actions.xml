<Action id="65412" issue="43106" author="denyeart" type="comment" created="2019-11-09 17:21:25.0" updateauthor="denyeart" updated="2019-11-09 17:21:25.0"> <body><! CDATA  ~SamYuan1990  Can you clarify the user impact?   ~angelo.decaro  Thoughts?  ></body> </Action>
<Action id="65563" issue="43106" author="samyuan1990" type="comment" created="2019-11-15 06:51:47.0" updateauthor="samyuan1990" updated="2019-11-15 06:53:50.0"> <body><! CDATA  ~denyeart , if we enroll an idemix type identity via  {code:java} fabric-ca-client enroll -d -u $OCA_URL --caname $CA -H $Path --enrollment.type idemix --tls.certfiles $TLS_FILE {code} the msp at local can't be used for peer cli like {code:java} peer chaincode invoke ... {code} as peer chaincode invoke will report error.(as it try to import msp setting from a grpc/proto encoded file, but get a json encoded file from fabric-ca-client)  ></body> </Action>
<Action id="65596" issue="43106" author="samyuan1990" type="comment" body=" ~denyeart , so the user impact is user can not use an idemix msp enrolled via fabric ca client command for following interaction with blockchain network by other fabric command line interface ex peer." created="2019-11-18 02:45:14.0" updateauthor="samyuan1990" updated="2019-11-18 02:45:14.0"/>
<Action id="69672" issue="43106" author="davidkhala" type="comment" created="2020-07-11 14:06:57.0" updateauthor="davidkhala" updated="2020-07-11 14:06:57.0"> <body><! CDATA I think we need only a data format adapter to encode the json into grpc message.  Some lines of guideline could solve this.   ></body> </Action>
<Action id="70887" issue="43106" author="JIRAUSER21154" type="comment" created="2020-12-03 13:57:55.0" updateauthor="JIRAUSER21154" updated="2020-12-03 13:59:13.0"> <body><! CDATA I was successful converting the json to the proto format. **I tested the credentials and they worked as *MEMBER*. When generating admin credentials, "*peer chaincode invoke*" claims the credentials are invalid.     Here is my source code:  https://github.com/johannww/fabric-idemix-json-conversion      I tested it in a production network.      Take the essence. Right now there are a few unused imports, but follow the logic.  ></body> </Action>
