<Action id="27375" issue="18680" author="pvrbharg" type="comment" created="2017-06-26 18:32:04.0" updateauthor="pvrbharg" updated="2017-06-26 18:32:04.0"> <body><! CDATA Dear Saad, Anil and Keith,  Apologies for not stating how to re-create the issue. Here are the steps:  Platform is Ubuntu - 16.04 - latest patches    http://hyperledger-fabric-ca.readthedocs.io/en/latest/    http://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#getting-started      sudo apt install libtool libltdl-dev  go get -u github.com/hyperledger/fabric-ca/cmd/…  fabric-ca-server start -b admin:adminpw &  fg CTRL+C     Customize fabric-ca-server-config.yaml  created by replacing the customer provisioned cryto files  per guidance from Keith - using openssl and making sure private key is not encrypted)     Convert files to .pem format  Create the certificate chain file     # cat intermediate/certs/intermediate.cert.pem \        certs/ca.cert.pem > intermediate/certs/ca-chain.cert.pem  # chmod 444 intermediate/certs/ca-chain.cert.pem     Update the sections for debug and CA in config file as shown:     # Enables debug logging (default: false)  debug: true     ca:    # Name of this CA    name: ubuntu.ibm.com-fabric-ca-server    # Key file (default: ca-key.pem)    keyfile: ca.key.pem    # Certificate file (default: ca-cert.pem)    certfile: ca.cert.pem    # Chain file (default: chain-cert.pem)    chainfile: ca-chain.cert.pem     fabric-ca-server start -b admin:adminpw  At this point Fabric-ca-server is supposed to be coming up with customer provisioned crypto versus IBM provided self signed crypto material.  We have attached all the items for you to review. I can be available on Rocket Chat or direct phone. Thanks.      ></body> </Action>
<Action id="27380" issue="18680" author="jai_kiran" type="comment" created="2017-06-26 19:16:28.0" updateauthor="jai_kiran" updated="2017-06-26 19:16:28.0"> <body><! CDATA I tried to generate ecdsa private key, but I am getting below error ,  root@lpqblockchainca:/data/amex_certs/new_certs# openssl req -out newcsr.csr -new -newkey ecdsa:256 -nodes -keyout newca.key.pem Unknown algorithm ecdsa  ></body> </Action>
<Action id="27381" issue="18680" author="pvrbharg" type="comment" created="2017-06-26 19:20:39.0" updateauthor="pvrbharg" updated="2017-06-26 19:20:39.0"> <body><! CDATA Hi Saad,     We actually need correct openssl command syntax to create a CSR with supported encryption algorithm of ECDSA - so we can get customer to provision correct set of certs.     Please let me know if we need to connect on phone.     The following is what we got from Keith:   1) Use openssl to generate the CSR *similar* to the following and adhering to the AMEX requirements for the CSR as you are prompted.  openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout ca-key.pem2) Base 64 encode contents of CSR.csr and paste to AMEX.   3) Once you get the certificate, name it "ca-cert.pem" and you already have the matching "ca-key.pem" from #1 above.  ------------------------------------------------------------------------------- Keith Smith      ></body> </Action>
<Action id="27382" issue="18680" author="rennman" type="comment" created="2017-06-26 19:24:15.0" updateauthor="rennman" updated="2017-06-26 19:24:15.0"> <body><! CDATA There are two issues here.  1)  The RSA key is in a format we don't support.  To convert the key to the correct format:  {code:java} openssl rsa -in ca-key.pem -out ca-key-rsa.pem {code}  2) The EE certificate for the fabric-ca server is missing from the configuration.  In the attached fabric-ca-server-config.yaml file, CA_CERTFILE is configured as TrustedRoot.pem (which is the 'DigiCert High Assurance EV Root CA' cert).  Rather, CA_CERTFILE should point to the certificate that contains the public key matching CA_KEYFILE -- ca-key.pem in this case   {code:java} ca: name: lpqblockchainca.phx.aexp.com keyfile: ca-key.pem certfile: <certificate containing lpqblockchainca.phx.aexp.com's public key> chainfile: ca-chain.cert.pem  {code}   ></body> </Action>
<Action id="27383" issue="18680" author="mastersingh24" type="comment" created="2017-06-26 19:28:55.0" updateauthor="mastersingh24" updated="2017-06-26 19:28:55.0"> <body><! CDATA It is very unclear what you are trying to accomplish with this configuration.  As  ~rennman  mentions, the following is not correct as the certfile does not match the keyfile.  And the certfile and chainfile are both from DigiCert   {noformat} ca: # Name of this CA name: lpqblockchainca.phx.aexp.com # Key file (default: ca-key.pem) keyfile: ca-key.pem  # Certificate file (default: ca-cert.pem) certfile: TrustedRoot.pem  # Chain file (default: chain-cert.pem) chainfile: ca-chain.cert.pem  {noformat}    ></body> </Action>
<Action id="27384" issue="18680" author="mastersingh24" type="comment" body="I&apos;m also reducing this to medium as this is not a bug" created="2017-06-26 19:31:34.0" updateauthor="mastersingh24" updated="2017-06-26 19:31:34.0"/>
<Action id="27385" issue="18680" author="pvrbharg" type="comment" created="2017-06-26 19:44:23.0" updateauthor="pvrbharg" updated="2017-06-26 19:44:23.0"> <body><! CDATA Hi Gari,  We need clear instructions - VERY CLEAR instructions - for AMEX to provision their custom certificates - signed by DigiCert (both for intermediate and root). I would not mind someone walking us thru in a web session. This issue is going on for weeks and AMEX would not use IBM self signed certificates. If you want to know what we are trying to do - so you can quickly help us - let us know when we can call you, please  THANK YOU     ></body> </Action>
<Action id="27396" issue="18680" author="pvrbharg" type="comment" created="2017-06-26 21:50:08.0" updateauthor="pvrbharg" updated="2017-06-26 21:50:08.0"> <body><! CDATA Team,  Thank you for our team call and I am grateful you understand what we are trying to do.  I got the required content from Jai and I sent you the content - thru IBM internal mail.  Thanks.  ></body> </Action>
<Action id="27406" issue="18680" author="mastersingh24" type="comment" body=" ~pvrbharg  - I assume you meant they don&apos;t want to use self-signed certs?  The certs generated by fabric-ca have nothing to do with IBM." created="2017-06-26 23:24:06.0" updateauthor="mastersingh24" updated="2017-06-26 23:24:06.0"/>
<Action id="27407" issue="18680" author="pvrbharg" type="comment" created="2017-06-27 00:24:38.0" updateauthor="pvrbharg" updated="2017-06-27 00:24:38.0"> <body><! CDATA Hi Gari,     My customer does not want to use cryptogen created IBM self signed certs - that gets created in crypto-config folder when we run the e2e use case per getting started guide. They would like to generate crypto-config folder contents with certs created by fabric-ca-server that they want to standup and this fabric-ca-server would have their own custom provisioned root, intermediate certs - signed by *real* root and intermediate signer such as DigiCert or VeriSign or both.     Hope this helps or let me know and a phone call can help (or you can connect with Bobbie Cochrane). Thanks.  ></body> </Action>
<Action id="27745" issue="18680" author="mastersingh24" type="comment" body="This is not a bug - might need some additional documentation - will raise a new doc issue if required" created="2017-07-01 21:58:14.0" updateauthor="mastersingh24" updated="2017-07-01 21:58:14.0"/>
<Action id="57336" issue="18680" author="doublechaintech" type="comment" created="2019-02-20 04:11:53.0" updateauthor="doublechaintech" updated="2019-02-20 04:11:53.0"> <body><! CDATA  ~pvrbharg  , we (Double Chain Tech) has a went-live project using RSA certification, we implemented RSA bccsp and Java SDK, we want to contribute this to hypperledger fabric.     ></body> </Action>
