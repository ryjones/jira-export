<Issue id="27748" key="FABC-448" number="448" project="10607" reporter="smithbk" assignee="aambati" creator="smithbk" type="10001" summary="Add idemix support to fabric CA" priority="3" resolution="10000" status="6" created="2018-02-14 19:30:29.0" updated="2020-06-11 15:31:17.0" resolutiondate="2018-03-30 03:09:29.0" votes="0" watches="5" workflowId="32630"> <description><! CDATA The following is a first pass at what needs to be changed in fabric CA in order to support idemix.  The `fabric-ca-client enroll` command takes a new `--msptype idemix` option. It sends a request to a new endpoint on the server similar to `POST /api/v1/idemix`. This endpoint requires a basic auth header as does an enroll request. The enrollment ID/pass is checked and then call an idemix API to begin to create a credential. This first call returns a nonce. The nonce must be stored in the DB with an associated timeout, and then we return the nonce in the response to the client.  The `fabric-ca-client enroll` command is not complete yet. It must use the nonce and make another call perhaps to the same endpoint but this time with the nonce in the body of the request. We get the nonce, look it up in the DB and delete it from DB. By default, we get ALL of the user's attributes, but this default can be overridden. In addition, the server ALWAYS adds the current version of the CRL as an attribute. This needs to be added to the properties DB table and incremented (atomically) each time a revocation occurs. We then make another idemix API call to complete the creation of the credential, and then store it in the certificates table (or another table?) and return it to the client in the response. The `fabric-ca-client enroll` command then stores the credential in the client's MSP directory and enrollment is complete.  Question: What is the format of the idemix MSP directory.  The SDK then generates a proof based on the attribute names or predicates passed into the SDK. The SDK should ALWAYS include the CRL version attribute.  When a peer, orderer, or chaincode needs to validate a proof, it will fail if the CRL version in the credential does not match the version in the MSP (local or channel). If the version of the CRL in the MSP is greater than the one in the credential, the transaction signature would need to be re-done (the credential proof should be done with respect to the latest version of the CRL with the corresponding cryptographic accumulator value). If the version of the CRL in the MSP is less than the one in the credential, the SDK could/should get a new version of the CRL from the fabric-ca-server and push it into the appropriate MSP (local or channel); otherwise, it will just need to fail.  Expiration of an idemix credential should be very similar to expiration of an x509 certificate. So when x509 certificate expiration is fixed, idemix credential expiration should be handled the same.  ></description> </Issue>
