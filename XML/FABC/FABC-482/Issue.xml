<Issue id="14598" key="FABC-482" number="482" project="10607" reporter="smithbk" assignee="smithbk" creator="smithbk" type="10001" summary="Document fabric-ca usage by fabric" priority="3" resolution="10000" status="6" created="2017-02-07 17:25:19.0" updated="2018-07-20 19:17:23.0" resolutiondate="2017-04-06 00:52:38.0" votes="0" watches="2" workflowId="32664"> <description><! CDATA This jira item is for doing #5 in the list below (from Gari).  In particular, document how to use fabric-ca for issuing crypto materials for 1 - 4.  --------------------------------------------------------------------------------------------- We are now at a point where we need to be able to demonstrate *most* if not *all* of the key attributes/features of the system:  1) Channels - we've spent a lot of time and effort on this feature and we need to show how it really works. This means we need to be able to have the "proper" config items as part of channel creation - e.g. member organizations (each comprised of an MSP and anchor peers)  We need to be able to create multiple channels and have different membership for each channel (at least from a configuration perspective)  2) We need to be able to create channels *properly* from at least one of the SDKs (e.g. Node) and the CLI (although the CLI needs a real overhaul in this aspect as it should be a real client of the orderer)  3) Need to show that we can have peers from multiple organizations "join" a channel. This means that we need to properly parse and leverage the genesis / config block (with proper config items as specified in 1) above) - i.e. use this information in the peer to have per channel MSP list which can be used by both the endorser (to verify proposals from clients) and by gossip (gossip also needs the per channel list of anchor peers as well). We could decide that we should not show gossip across orgs but I think at this point that would be a mistake  4) Endorsement / validation policies - we need to demonstrate how to author a basic policy which requires multiple signatures. Should be able to do this from at least one SDK and from the CLI when deploying chaincode  5) There is a load of crypto material needed for 1) - 4) above so we need to document how to use fabric-ca to generate / obtain this material  6) We need to have published Docker images for the peer, orderer and fabric-ca plus NodeSDK published to NPM and if we are going to put out the Java SDK need to have a downloadable JAR and/or install via maven or gradle  We have zero real documentation about any of the above items. We need to produce API docs for the SDKs, for fabric-ca (e.g. publish the Swagger), descriptions of the components in 1)- 4) above, etc   ></description> </Issue>
