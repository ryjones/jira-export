<Issue id="18573" key="FABC-60" number="60" project="10607" reporter="smithbk" creator="smithbk" type="10002" summary="Document how to get and renew TLS certs for and from fabric-ca-server" priority="3" status="10000" created="2017-06-22 15:57:32.0" updated="2019-07-17 14:49:40.0" votes="3" watches="8" workflowId="32240" security="10001"> <description><! CDATA The method for getting TLS certs for and from fabric-ca-server needs documenting and validation.  This method should be to minimize admin overhead of certificate renewal due to expiration or key compromise.   Using self-signed TLS certs is not recommended because of the admin overhead can be large of having to distribute the new certificate to all clients upon renewal.  Specifically, the following tasks need to be documented/validated: 1) How to generate and renew a TLS cert for a root CA 2) How to generate and renew a TLS cert for an intermediate CA 3) How to configure a client which connects to a root CA over TLS 4) How to configure a client which connects to an intermediate CA over TLS  Others?  For example, the following script can be used to perform #1 currently.  All clients need to trust the root CA certificate which has a default expiration of 15 years.  The TLS certificate has a 1 year expiration by default but can be renewed without affecting clients, thus the advantage of this over using self-signed certificates.  {code} fabric-ca-server start -b admin:adminpw > http-server.out 2>&1& PID=$? echo $PID sleep 1 fabric-ca-client enroll -u http://admin:adminpw@localhost:7054 -c tls/config.yaml -m localhost,127.0.0.1,`hostname` cp tls/msp/signcerts/* tls-cert.pem cp tls/msp/keystore/* tls-key.pem { kill $PID && wait $PID; } 2>/dev/null rm -rf tls sleep 1 fabric-ca-server start --tls.enabled --tls.certfile tls-cert.pem --tls.keyfile tls-key.pem {code}   ></description> </Issue>
