<Action id="21653" issue="15418" author="mastersingh24" type="comment" created="2017-03-27 12:31:35.0" updateauthor="mastersingh24" updated="2017-03-27 12:31:35.0"> <body><! CDATA what's the use case which requires us to support an array of root certificates? and if we need to support an array, then we should use an array and not a comma-separated list  ></body> </Action>
<Action id="21655" issue="15418" author="passkit" type="comment" body="I don&apos;t think there is one.  Postgres only requires a single root _or_ intermediate.  Problem is that currently the `certfiles` value is not being processed at all.  I guess we have an array because because that&apos;s what the tls package wants." created="2017-03-27 13:16:43.0" updateauthor="passkit" updated="2017-03-27 13:16:43.0"/>
<Action id="21656" issue="15418" author="smithbk" type="comment" created="2017-03-27 14:06:21.0" updateauthor="smithbk" updated="2017-03-27 14:06:21.0"> <body><! CDATA Yes, the reason we allow multiple is because the package allows multiple certs.  I don't know for certain why it allows multiple, but one use case I could image is to handle a server side key rotation.  The server would generate a new key/cert, distribute the new cert so for a period of time all clients would need to trust both, until the server did the actual switch over to the new cert.  The reason we chose to make it a comma-separated list rather than a real list is because we can't handle specifying lists through an env variable or command line option currently ... well, that and also the fact that most times it is going to be a single element anyway.  ></body> </Action>
<Action id="21657" issue="15418" author="skarim" type="comment" created="2017-03-27 14:17:25.0" updateauthor="skarim" updated="2017-03-27 14:17:25.0"> <body><! CDATA  ~mastersingh24  I have not seen a specific use case but the TLS package uses a cert pool for root CA certs which allow you to specify more than one certificate. This was one of the reasons to use an array. The fabric-ca client could have multiple roots that it trust for a TLS connection. The TLS client side struct that is used from fabric-ca client is also used for the database TLS connection as well. We could create a separate struct for TLS client on the DB side if we want to only support specifying one root cert.   The reason not to support an array directly through the config file is due to the command line behavior. Viper/Cobra currently would not allow us to provide array input from the command line. Thus, we decided to use comma separate string to provide more than one value for a flag through the command line. Wanting to have consistent behavior, the same comma separated string in the config file was also used.   ></body> </Action>
<Action id="21658" issue="15418" author="passkit" type="comment" body="In the case of an certificate signed by an intermediate ca, multiple ca certs are normally required.  But for Postgres, it doesn&apos;t validate down the chain if you supply an intermediate ca cert.  This behaviour is more an exception than the general rule of validating the chain to the root ca.  " created="2017-03-27 14:18:42.0" updateauthor="passkit" updated="2017-03-27 14:18:42.0"/>
<Action id="21662" issue="15418" author="mastersingh24" type="comment" body=" ~skarim  - we don&apos;t use comma separated lists in any of the other config files.  I don&apos;t like putting a comma-separated list as a YAML entry when we can use arrays.  I understand that maybe the command line might be different from the config file or from env variables.  BTW - for environment variables I believe that you can use the &quot; cert1.pem,cert2.pem,cert3.pem &quot; array format (this is valid in YAML as well) and things should still work" created="2017-03-27 20:00:23.0" updateauthor="mastersingh24" updated="2017-03-27 20:00:23.0"/>
<Action id="21671" issue="15418" author="passkit" type="comment" created="2017-03-28 05:57:33.0" updateauthor="passkit" updated="2017-03-28 05:59:38.0"> <body><! CDATA Can confirm that you can set arrays in environment variables.   {code} ORDERER_GENERAL_TLS_ROOTCAS= "${ORDERER_CFG_PATH}/ssl/ca.cert.pem","${ORDERER_CFG_PATH}/ssl/intermediate.cert.pem"  ORDERER_GENERAL_TLS_CLIENTROOTCAS= "${ORDERER_CFG_PATH}/ssl/ca.cert.pem","${ORDERER_CFG_PATH}/ssl/intermediate.cert.pem","${ORDERER_CFG_PATH}/ssl/bc-intermediate.cert.pem","${ORDERER_CFG_PATH}/ssl/ll-intermediate.cert.pem"  {code}  This is my current orderer config.  ></body> </Action>
<Action id="21724" issue="15418" author="skarim" type="comment" body=" ~passkit  Hi Nick, I wanted to see if you tried using an array with Fabric-ca environment variables and got it to work? I am doing some testing and can&apos;t seem to specify an array as an environment variable without viper complaining about it. For example, with the code you have right now you can could test it with the env var FABRIC_CA_CLIENT_TLS_CERTFILESLIST" created="2017-03-29 15:05:02.0" updateauthor="skarim" updated="2017-03-29 15:05:02.0"/>
<Action id="22836" issue="15418" author="christopherferris" type="comment" body=" ~skarim   ~smithbk   ~mastersingh24  this says in review yet I cannot for the life of me find the CR. Is it still in review? Done?" created="2017-04-21 18:56:55.0" updateauthor="christopherferris" updated="2017-04-21 18:56:55.0"/>
<Action id="22872" issue="15418" author="skarim" type="comment" created="2017-04-22 23:09:57.0" updateauthor="skarim" updated="2017-04-22 23:09:57.0"> <body><! CDATA  ~ChristopherFerris  This is no longer relevant, the underlying issue as to why we needed this was resolved via https://jira.hyperledger.org/browse/FAB-2993. So the change set got abandoned. I don't see an option to cancel the work item, should it be marked done?   ></body> </Action>
