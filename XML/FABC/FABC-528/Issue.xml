<Issue id="28323" key="FABC-528" number="528" project="10607" reporter="smithbk" creator="smithbk" type="10001" summary="Provide a reference implementation of an idemix issuer" priority="3" resolution="10000" status="6" created="2018-03-08 22:41:48.0" updated="2020-06-11 15:31:17.0" resolutiondate="2018-04-10 15:42:16.0" votes="0" watches="4" workflowId="32710"> <description><! CDATA The requirement here is to provide a reference implementation of an idemix issuer. ("idemix" is short for "Identity Mixer").  The purpose of this FAB is to discuss various options so that we can choose the best option going forward.  For background on idemix, see  Idemix Overview|https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0ahUKEwjO68zD0t3ZAhVJYK0KHX7AANoQFggpMAA&url=https%3A%2F%2Fjira.hyperledger.org%2Fsecure%2Fattachment%2F10618%2FIdemix%2520MSP%2520for%2520Hyperledger.doc&usg=AOvVaw2-TxwhzX2jrnT__5BXpB_F   Options include: # Enhance fabric-ca-server to be an idemix issuer Advantages: ** Provides a single, integrated reference implementation of both ecerts and idemix credentials with only one way of registering users and managing attributes, so there is less for users to learn. ** Not much work. I'd estimate 1 month max for code and unit tests.  * Use the idemix issuer I'm not sure how much is open source. The current OSS implementation of Idemix Issuer is in java and uses different cryptographic protocols. However, it can be used as an example of an implementation of the Idemix Issuer  * Implement a separate issuer based on indy The sovrin provisional network is not stable yet. It should transition to a production network in 2019, so this should be considered separately at a later time.  ></description> </Issue>
