<Issue id="29737" key="FABC-388" number="388" project="10607" reporter="vdods" creator="vdods" type="10004" summary="fabric-ca-server has an intractable requirement for the case of affiliation strings" priority="3" status="10000" created="2018-04-26 18:37:49.0" updated="2020-10-19 21:44:02.0" votes="0" watches="7" workflowId="32568"> <description><! CDATA At the bottom of  http://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html#registering-a-new-identity  it says the following:     Note that affiliations are case sensitive except for the non-leaf affiliations that are specified in the server configuration file, which are always stored in lower case. For example, if the affiliations section of the server configuration file looks like this: affiliations:   BU1:     Department1:     - Team1   BU2:   - Department2   - Department3 ??BU1??, ??Department1??, ??BU2?? are stored in lower case. This is because Fabric CA uses Viper to read configuration. Viper treats map keys as case insensitive and always returns lowercase value. To register an identity with ??Team1?? affiliation, ??bu1.department1.Team1?? would need to be specified to the ??–id.affiliation?? flag as shown below:  <cut>     Say I want to register an identity with an affiliation string of "BU1.Department2".  In order to follow the ridiculous case-insensitive-then-sensitive requirements of the affiliation string, I have to know which affiliation IDs are leaf IDs.  In this case, Department2 is a leaf, so I would then have to lower-case BU1, but leave Department2 as it is.  In the above example, Department1 is NOT a leaf ID, so it would have to be lowercased.  I have some calls to fabric-ca-client register that has to supply the correct affiliation string, and this absurd requirement forces my automation to do the hard work of  1) having its own model of the affiliation tree  2) parsing a given affiliation string before registration and lowercasing based on the affiliation tree  The strange case requirement also violates the principle of least surprise (fabric-ca-server-config.yaml happily accepts an affiliation tree that doesn't conform to the rules, but when I go to register, I'm suddenly subject to hidden, nontrivial rules), and worse yet, the documentation attempts to justify this based on a particular implementation choice (Viper) that is of zero concern to the user, and is an example of the Leaky Abstraction anti-pattern.     Possible different ways to resolve this flaw:  1) Just have everything be case sensitive like all reasonable programming constructs are anyway.  2) If the Viper-based case restrictions are to be kept, then enforce those case restrictions at the fabric-ca-server-config.yaml, so that the error occurs as soon as possible (i.e. during configuration, as opposed to minutes, hours, or days later in production)  ></description> </Issue>
