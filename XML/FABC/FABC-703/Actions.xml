<Action id="50154" issue="32812" author="skarim" type="comment" body=" ~alexvicegrab  Are you saying that a 1.2 Fabric CA server doesn&apos;t work with 1.1 Fabric CA client? Is that the combination you are talking about?" created="2018-09-10 14:01:58.0" updateauthor="skarim" updated="2018-09-10 14:01:58.0"/>
<Action id="50157" issue="32812" author="alexvicegrab" type="comment" body="No  ~skarim , I have more or less the opposite. I am using CA Server 1.2, but I have the above errors when using CA client 1.2. Client 1.1 works fine as before." created="2018-09-10 14:11:20.0" updateauthor="alexvicegrab" updated="2018-09-10 14:11:20.0"/>
<Action id="50270" issue="32812" author="skarim" type="comment" created="2018-09-11 14:58:18.0" updateauthor="skarim" updated="2018-09-11 14:58:18.0"> <body><! CDATA  ~alexvicegrab  The error messages you are seeing don't seem to make sense. When you do an enroll and pass in the username/password, an authorization header should be generated. Unless, you say you have a proxy and that proxy is somehow stripping the authorization header before sending it to the CA server. Can you try doing a curl which requires no authorization header and see if you can reach the CA server. For example, you could try `curl http://localhost:7054/cainfo`, replacing the URL with you CA's address.   Also, if you have a proxy is front of your CA server and the proxy is using HTTPs, your fabric CA client needs to use HTTPs as well. You also need to provide the client the TLS certfile using the `â€“tls.certfiles` flag if using the command line. This flag should point to the TLS certificate that is used on the proxy server.  ></body> </Action>
<Action id="50272" issue="32812" author="alexvicegrab" type="comment" created="2018-09-11 15:09:15.0" updateauthor="alexvicegrab" updated="2018-09-21 09:35:08.0"> <body><! CDATA Hi  ~skarim ,  I effectively have a proxy, since the CA server is located behind an NGINX-ingress on a Kubernetes cluster:  https://hub.kubeapps.com/charts/stable/nginx-ingress  I'm using Let's Encrypt (also a Linux Foundation umbrella technology) to generate the certificates, so that they are trusted, and automate that on Kubernetes using cert-manager:  https://hub.kubeapps.com/charts/stable/cert-manager  It looks, as you suggest, that the authorisation header is being stripped.  If I use `curl` to access my QA intermediate CA cluster, I get a permanent redirect:   {code:java} curl http://ica-ord.qa.aidtech-ifrc.com/api/v1/cainfo {code}   While the https curl works fine.  I will however try to use the solution you outlined, by binding the tls certificates generated by the proxy server to the CA server, and see if that resolves my issues and get back to you.   ></body> </Action>
<Action id="50902" issue="32812" author="alexvicegrab" type="comment" created="2018-09-21 08:13:18.0" updateauthor="alexvicegrab" updated="2018-09-21 09:34:46.0"> <body><! CDATA Hi Saad, I'm still stumped by this problem and by the fact that the Fabric CA Client 1.1 seems to have a wildly different behaviour than Fabric CA Client 1.2. For instance I can run the command to try and get the CA certificates:   {code:java} FABRIC_CA_CLIENT_HOME=./config fabric-ca-client getcacert -u https://$CA_INGRESS -M ./AidTechMSP 2018/09/21 11:03:42  INFO  Configuration file location: /Users/sasha/Aid_Tech/lf-k8s-hlf-webinar/config/fabric-ca-client-config.yaml 2018/09/21 11:03:42  INFO  TLS Enabled Error: Failed to get client TLS config: No TLS certificate files were provided {code}   Curiously, when doing the same command, but over http (due to a 308 redirect):   {code:java} FABRIC_CA_CLIENT_HOME=./config fabric-ca-client getcacert -u http://$CA_INGRESS -M ./AidTechMSP 2018/09/21 11:28:11  INFO  Configuration file location: /Users/sasha/Aid_Tech/lf-k8s-hlf-webinar/config/fabric-ca-client-config.yaml 2018/09/21 11:28:12  INFO  Stored root CA certificate at /Users/sasha/Aid_Tech/lf-k8s-hlf-webinar/config/AidTechMSP/cacerts/ca2-lf-aidtech-test-xyz.pem {code}   The above error with HTTPS is similar to the 3rd error I outlined above. I have the CA Server behind an nginx-ingress on Kubernetes (an NGINX proxy under the hood). I have not activated TLS on the CA Server, since the traffic is decrypted by the Proxy.  The Fabric CA Client however expects to receive TLS certificates, even though this has not been enabled, and even explicitly disabled in the CA client configuration:   {code:java} ############################################################################# #    TLS section for secure socket connection # #  certfiles - PEM-encoded list of trusted root certificate files #  client: #    certfile - PEM-encoded certificate file for when client authentication #    is enabled on server #    keyfile - PEM-encoded key file for when client authentication #    is enabled on server ############################################################################# tls: enabled: false # TLS section for secure socket connection certfiles: client: certfile: keyfile: {code}  This is surprising and confusing particularly since I don't want mutual TLS at this point. Does this make the situation clearer?  ></body> </Action>
<Action id="50905" issue="32812" author="alexvicegrab" type="comment" created="2018-09-21 08:32:53.0" updateauthor="alexvicegrab" updated="2018-09-21 08:33:08.0"> <body><! CDATA Given that the enroll commands are working fine in Fabric CA Client 1.1, I think it's Fabric CA Client 1.2 which is stripping the Auth headers, not my proxy.  Please advice  ~skarim   ></body> </Action>
<Action id="50908" issue="32812" author="alexvicegrab" type="comment" created="2018-09-21 09:33:05.0" updateauthor="alexvicegrab" updated="2018-09-21 09:34:06.0"> <body><! CDATA Aha... I believe I have solved this by:   {code:java} tls: enabled: false # TLS section for secure socket connection certfiles: - ./Lets_Encrypt_Authority_X3.pem client: certfile: keyfile: {code}   This adds the Let's Encrypt Authority as trusted, allowing me to connect with HTTPS  Still, the error messages could be made a bit clearer to indicate it is the certificate of the server, not of the client that needs to be added by the Client request.  ></body> </Action>
<Action id="50986" issue="32812" author="skarim" type="comment" body="Thanks for the update. I can update the message to be more clear." created="2018-09-21 20:57:02.0" updateauthor="skarim" updated="2018-09-21 20:57:02.0"/>
<Action id="51061" issue="32812" author="skarim" type="comment" body="https://gerrit.hyperledger.org/r/26490" created="2018-09-24 00:24:16.0" updateauthor="skarim" updated="2018-09-24 00:24:16.0"/>
<Action id="51465" issue="32812" author="denyeart" type="comment" body=" https://gerrit.hyperledger.org/r/#/c/26699/  - release-1.3" created="2018-10-01 19:58:59.0" updateauthor="denyeart" updated="2018-10-01 19:58:59.0"/>
