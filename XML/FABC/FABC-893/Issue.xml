<Issue id="43747" key="FABC-893" number="893" project="10607" reporter="ricntt" creator="ricntt" type="10004" summary="Hyperledger Fabric CA releasing wrong certificates (wrong issuer) to Node SDK when TLS enabled" priority="2" status="10300" created="2019-12-17 14:15:48.0" updated="2020-10-19 21:44:08.0" votes="0" watches="3" workflowId="57599"> <description><! CDATA I want to scale my network from 1 to 3 orderers and by doing so I need to enable Raft, which requires TLS enabled. I did it and everything work correctly, orderers correctly elect leaders and followers, cli uses TLS to interact with the network, and so on and so forth. I also queried the chaincode with the cli. I have not enabled clientAuth because I am not interested in having mutual TLS, for me is just fine to have 3 orderers talking each other, I just want to make queries now and I can do it from the cli, but not working from the Node SDK.  When I simply connect the SDK with:    {code:java} gateway = new Gateway(); await gateway.connect(ccp, { wallet, identity: 'user1', discovery: { enabled: false }}); const network = await gateway.getNetwork(channelName); contract = network.getContract('traceability');{code}    What I get is: {code:java} Error: Failed to discover local peers ::Error: Failed to connect before the deadline URL:grpcs://localhost:7051 {code}       So I had a look inside peer1, which I am trying to connect, and the error is: {code:java} 2019-12-17 13:44:53.465 UTC  core.comm  ServerHandshake -> ERRO 0bd TLS handshake failed with error EOF server=PeerServer remoteaddress=172.23.0.1:36174 {code} After several tentatives, I could not solve but I found something very strange in certificates, which makes me think that they are not generated correctly. If I inspect certificates generated in my first network, I decode it and I get this: {code:java} ----BEGIN CERTIFICATE---MIICjzCCAjWgAwIBAgIUbEu5crMvBdY73wBFhOI/3uSi5gIwCgYIKoZIzj0EAwIwczELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTkwNzE5MDgzODAwWhcNMjAwNzE4MDg0MzAwWjBCMTAwDQYDVQQLEwZjbGllbnQwCwYDVQQLEwRvcmcxMBIGA1UECxMLZGVwYXJ0bWVudDExDjAMBgNVBAMTBXVzZXIxMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEM25kseg3ybw0/F2dbwJznq3SKXQ2LRpiHnIGBDhiYVBpV2bgpzPfw1XbD5U+Ea4xwKLFJgoRFSjZWRaEe1vazaOB1zCB1DAOBgNVHQ8BAf8EBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUzFVc46aR76s9R9fWIXlbKwrHf9gwKwYDVR0jBCQwIoAgdjzlEttw+/yR/81K0B0HTToBKuJIikLbsaR6nOiJXegwaAYIKgMEBQYHCAEEXHsiYXR0cnMiOnsiaGYuQWZmaWxpYXRpb24iOiJvcmcxLmRlcGFydG1lbnQxIiwiaGYuRW5yb2xsbWVudElEIjoidXNlcjEiLCJoZi5UeXBlIjoiY2xpZW50In19MAoGCCqGSM49BAMCA0gAMEUCIQCEsV9tzuGPybSaOPqZKWD5jxZIHCEiTmSUHxdmB1wXBgIgOg5j9/BbVLR0oPkwndB+8aL94CDk6KpCHwxyF/c042c=---END CERTIFICATE----  Common Name: user1 Organization Unit: client Valid From: July 19, 2019 Valid To: July 18, 2020 Issuer: ca.org1.example.com, org1.example.com {code} So, as you can see from here, everything seems fine with this certificate, and let me remember that this is generated with the first network with TLS not enabled.  If I now inspect the certificate generated in my network with TLS, I get this: {code:java} ----BEGIN CERTIFICATE---MIICXTCCAgSgAwIBAgIUazdK1QSe9HcoSmMJbrisPZwoCXEwCgYIKoZIzj0EAwIwfzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAKBgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTkxMjE3MTEwODAwWhcNMjAxMjE2MTExMzAwWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBXVzZXIxMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEeb/0Rt9MW4yJF6/Vcai0hWf8Feeo/QJP9jUbUH00bs0nWNjN42M6v3BpWpUuK2v/8vQ9jyklGxqSejIWnF3OFaOBuzCBuDAOBgNVHQ8BAf8EBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUNs4wu9T0QTxt16CT0NIawbZyOWgwHwYDVR0jBBgwFoAUF2dCPaqegj/ExR2fW8OZ0bWcSBAwWAYIKgMEBQYHCAEETHsiYXR0cnMiOnsiaGYuQWZmaWxpYXRpb24iOiIiLCJoZi5FbnJvbGxtZW50SUQiOiJ1c2VyMSIsImhmLlR5cGUiOiJjbGllbnQifX0wCgYIKoZIzj0EAwIDRwAwRAIgTATSxbQ2VSuNbFbT6k+e01xH/BnbtJTD0YojDHwU0EQCIGLfhELq6h0jbWi2J0dQKtGViI6BF/XgC2ooP2XRgf61---END CERTIFICATE---- Common Name: user1 Organization Unit: client Valid From: December 17, 2019 Valid To: December 16, 2020 Issuer: example.com, Internet Widgets, Inc. {code} You will agree this looks strange. My ca has been contacted, in the logs it says **enroll 200 OK** for both admin and user, but it seems that the issuer is quite different, and it is not my ca. It is like with TLS enabled, the Node SDK is generating default certificates so that I cannot contact my peers because I am not authenticated by TLS.  How can this be solved?  ></description> </Issue>
