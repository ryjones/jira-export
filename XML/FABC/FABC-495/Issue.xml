<Issue id="13503" key="FABC-495" number="495" project="10607" reporter="smithbk" assignee="smithbk" creator="smithbk" type="10001" summary="Improve COP CLI usability" priority="3" resolution="10000" status="6" created="2016-11-21 15:35:04.0" updated="2018-07-20 19:16:58.0" resolutiondate="2017-04-14 16:26:43.0" votes="0" watches="3" workflowId="32677"> <description><! CDATA The goal is to provide maximum flexibility and ease-of-use for the COP command line. COP currently uses cfssl's home-grown argument processing methods.  The main cli/cop.go should be rewritten to use viper similar to how fabric's peer and the old membersrvc.  But this needs to be done in a way to still support all of the options that cfssl supports for analogous commands.  For example, "cop client enroll" is analogous to "cfssl sign" and should support all of the same options.  The precedence should be as follows for all cop commands other than "cop cfssl" commands.  The "cop cfssl" commands will continue to just be passed to the cfssl code as it is currently.  # Option argument is highest precedence # If an input file is specified on the command line, values in this value come next # Environment variables are next in precedence.  The viper package make this easy. # Values from the $COP_HOME/config.json are lowest precedence  The values in the $COP_HOME/config.json file are set and retrieved with the following commands: {code} cop setvar <var-name> <var-value> cop getvar <var-name> {code} The setvar simply sets the variable in $COP_HOME/config.json and the getvar simply returns the variable's value, if set.  See the "is blocked by" FAB items below for individual command usage.  ></description> </Issue>
